[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == '1 8 6'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 1\n''') == '1 1 1'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '1 3'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 1\n1 1\n''') == '1 1 1'\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 1\n''') == '1 2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''9\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n''') == '1 8 6'\n\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n4 7\n4 8\n5 6\n''') == '1 8 6'\n\nassert solution('''15\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n7 12\n8 9\n8 10\n8 11\n8 12\n8 13\n9 10\n9 11\n9 12\n9 13\n9 14\n10 11\n10 12\n10 13\n10 14\n10 15\n11 12\n11 13\n11 14\n11 15\n11 16\n12 13\n12 14\n12 15\n12 16\n12 17\n13 14\n13 15\n13 16\n13 17\n13 18\n14 15\n14 16\n14 17\n14 18\n14 19\n15 16\n15 17\n15 18\n15 19\n15 20\n16 17\n16 18\n16 19\n16 20\n16 21\n17 18\n17 19\n17 20\n17 21\n17 22\n18 19\n18 20\n18 21\n18 22\n18 23\n19 20\n19 21\n19 22\n19 23\n19 24\n20 21\n20 22\n20 23\n20 24\n20 25\n21 22\n21 23\n21 24\n21 25\n21 26\n22 23\n22 24\n22 25\n22 26\n22 27\n23 24\n23 25\n23 26\n23 27\n23 28\n24 25\n24 26\n24 27\n24 28\n24 29\n25 26\n25 27\n25 28\n25 29\n25 30\n26 27\n26 28\n26 29\n26 30\n26 31\n27 28\n27 29\n27 30\n27 31\n27 32\n28 29\n28 30\n28 31\n28 32\n28 33\n29 30\n29 31\n29 32\n29 33\n29 34\n30 31\n30 32\n30 33\n30 34\n30 35\n31 32\n31 33\n31 34\n31 35\n31 36\n32 33\n32 34\n32 35\n32 36\n32 37\n33 34\n33 35\n33 36\n33 37\n33 38\n34 35\n34 36\n34 37\n34 38\n34 39\n35 36\n35 37\n35 38\n35 39\n35 40\n36 37\n36 38\n36 39\n36 40\n36 41\n37 38\n37 39\n37 40\n37 41\n37 42\n38 39\n38 40\n38 41\n38 42\n38 43\n39 40\n39 41\n39 42\n39 43\n39 44\n40 41\n40 42\n40 43\n40 44\n40 45\n41 42\n41 43\n41 44\n41 45\n41 46\n42 43\n42 44\n42 45\n42 46\n42 47\n43 44\n43 45\n43 46\n43 47\n43 48\n44 45\n44 46\n44 47\n44 48\n44 49\n45 46\n45 47\n45 48\n45 49\n45 50\n46 47\n46 48\n46 49\n46 50\n46 51\n47 48\n47 49\n47 50\n47 51\n47 52\n48 49\n48 50\n48 51\n48 52\n48 53\n49 50\n49 51\n49 52\n49 53\n49 54\n50 51\n50 52\n50 53\n50 54\n50 55\n51 52\n51 53\n51 54\n51 55\n51 56\n52 53\n52 54\n52 55\n52 56\n52 57\n53 54\n53 55\n53 56\n53 57\n53 58\n54 55\n54 56\n54 57\n54 58\n54 59\n55 56\n55 57\n55 58\n55 59\n55 60\n56 57\n56 58\n56 59\n56 60\n56 61\n57 58\n57 59\n57 60\n57 61\n57 62\n58 59\n58 60\n58 61\n58 62\n58 63\n59 60\n59 61\n59 62\n59 63\n59 64\n60 61\n60 62\n60 63\n60 64\n60 65\n61 62\n61 63\n61 64\n61 65\n61 66\n62 63\n62 64\n62 65\n62 66\n62 67\n63 64\n63 65\n63 66\n63 67\n63 68\n64 65\n64 66\n64 67\n64 68\n64 69\n65 66\n65 67\n65 68\n65 69\n65 70\n66 67\n66 68\n66 69\n66 70\n66 71\n67 68\n67 69\n67 70\n67 71\n67 72\n68 69\n68 70\n68 71\n68 72\n68 73\n69 70\n69 71\n69 72\n69 73\n69 74\n70 71\n70 72\n70 73\n70 74\n70 75\n71 72\n71 73\n71 74\n71 75\n71 76\n72 73\n72 74\n72 75\n72 76\n72 77\n73 74\n73 75\n73 76\n73 77\n73 78\n74 75\n74 76\n74 77\n74 78\n74 79\n75 76\n75 77\n75 78\n75 79\n75 80\n76 77\n76 78\n76 79\n76 80\n76 81\n77 78\n77 79\n77 80\n77 81\n77 82\n78 79\n78 80\n78 81\n78 82\n78 83\n79 80\n79 81\n79 82\n79 83\n79 84\n80 81\n80 82\n80 83\n80 84\n80 85\n81 82\n81 83\n81 84\n81 85\n81 86\n82 83\n82 84\n82 85\n82 86\n82 87\n83 84\n83 85\n83 86\n83 87\n83 88\n84 85\n84 86\n84 87\n84 88\n84 89\n85 86\n85 87\n85 88\n85 89\n85 90\n86 87\n86 88\n86 89\n86 90\n86 91\n87 88\n87 89\n87 90\n87 91\n87 92\n88 89\n88 90\n88 91\n88 92\n88 93\n89 90\n89",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''\n9\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n5 7\n6 7\n7 8\n''') == '5'\n\nassert solution('''\n10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n5 7\n6 7\n7 8\n7 9\n8 9\n''') == '7'\n\nassert solution('''\n10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n5 7\n6 7\n7 8\n7 9\n8 9\n9 10\n''') == '7'\n\nassert solution('''\n10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n5 7\n6 7\n7 8\n7 9\n8 9\n9 10\n1 10\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 4\n2 4\n''') == '1 2 4'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1 2 4'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1 2 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n7 9\n7 10\n7 11\n''') == '7 9 10'\nassert solution('''6\n1 2\n2 3\n1 4\n2 5\n2 6\n3 4\n''') == '2 6 4'\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"8\") == \"5\"\nassert solution(\n\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"1 8 6\"\nassert solution(\n\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 4\\n2 4\\n3 4\") == \"1 4 6\"\nassert solution(\n\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 4\\n2 4\\n3 4\\n3 5\") == \"1 4 6\"\nassert solution(\n\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 4\\n2 4\\n3 4\\n3 5\\n3 6\") == \"1 4 6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"9\") == \"3\"\nassert solution(\"10000\") == \"6\"\nassert solution(\"10001\") == \"7\"\nassert solution(\"10002\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n4 7\\n4 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\") == \"5\\n1 8 6\"\n\n\n-----Answer-----",
        "num_ids_2": 90,
        "num_ids_4": 129
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''3\n1 1\n1 2\n1 3''') == '1 1'\nassert solution('''10\n3 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''8\n1 3 3 3 1 1 1\n2 2 1 2 1 1 1''') == '1 1'\nassert solution('''10\n5 5 2 6 3 1 2 3 1''') == '5 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n\nassert solution('''3\n1 2 3\n3 1 2\n3 2 1\n''') == '3 3'\n\nassert solution('''5\n2 2 3 2 3 2\n1 3 2\n2 1 1\n2 2 1\n3 1 2\n1 2 1\n''') == '5 5'\n\nassert solution('''2\n1 1\n1 1\n''') == '1 1'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '1 1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10\n10 2 8 1 2 4 1 20 4 5\n\"\"\"\n) == \"20 8\"\n\nassert solution(\n\"\"\"\n100\n1 2 3 5 7 2 7 2 1 3 5 7\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n8\n4 4 4 1 1 4 1 1 4\n\"\"\"\n) == \"4 4\"\n\nassert solution(\n\"\"\"\n2\n3 1\n\"\"\"\n) == \"1 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n10 1 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 1 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 1 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 1 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 1 2 8 1 2 4 1 20 4 5') == '20 8'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n\n'''\n\nimport sys",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == \"20 8\"\n\n'''\n\nn = int(input())\ndivisors_x = set()\ndivisors_y = set()\n\nfor i in range(n):\n    d = int(input())\n    if d in divisors_x:\n        divisors_y.add(d)\n    if d in divisors_y:\n        divisors_x.add(d)",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n10 3 2 1 2 4 1 3 4 5''') == '3 1'\nassert solution('''10\n10 3 4 1 2 1 3 4 4 5''') == '1 1'\nassert solution('''10\n10 2 2 1 3 2 3 4 1 1''') == '1 1'\nassert solution('''10\n10 2 2 1 3 2 3 3 2 4 1 1''') == '1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n'''\n\nfrom math import sqrt\n\nn = int(input())\ndivisors = list(map(int, input().split()))",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n\"\"\"\n\nfrom itertools import combinations\n\nn = int(input())\ndivisors_of_x = list(map(int, input().split()))\ndivisors_of_y = list(map(int, input().split()))\n\nprint(','.join(str(i) for i in max(divisors_of_x, divisors_of_y)))\nprint(','.join(str(i) for i in min(divisors_of_x, divisors_of_y)))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\"\nassert solution(stdin) == \"56\"\nassert solution(stdin) == \"80\"\nassert solution(stdin) == \"92\"\nassert solution(stdin) == \"108\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2\\n2') == '2'\nassert solution('3\\n1\\n2\\n2\\n3') == '5'\nassert solution('3\\n1\\n2\\n2\\n4') == '8'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '3'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('3 1 1\\n1 2 1\\n1 1 1\\n') == '2'\nassert solution('4 4 4\\n1 1 2 2 1\\n3 4 1 2 4\\n5 4 1 2 4\\n7 1 1 4 4\\n') == '16'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == '0'\n",
        "num_ids_2": 81,
        "num_ids_4": 147
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 3''') == '24'\nassert solution('''5 5 4''') == '56'\nassert solution('''1 2 3 4''') == '24'\nassert solution('''7 1 1 4''') == '56'\nassert solution('''2 2 3 4''') == '12'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer_test\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\nassert solution(\"5 6 2\\n1 1 5 2 1\\n3 3 1 1 1\\n5 5 2 2 1\\n2 2 1 1 2\\n5 1 1 2 1\") == \"0\"\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 77,
        "num_ids_4": 124
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('5 4 3') == '24'\nassert solution('3 4 3') == '24'\nassert solution('5 4 3') == '24'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n1\\n2\\n1\\n1\\n1') == '6'\nassert solution('4\\n3\\n2\\n1\\n1\\n1\\n1') == '9'\nassert solution('4\\n3\\n2\\n1\\n1\\n1\\n1') == '9'\nassert solution('4\\n3\\n2\\n1\\n1\\n1\\n1') == '9'\n",
        "num_ids_2": 47,
        "num_ids_4": 103
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\nprint(solution(stdin))\n\"\"\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4'''\n) == '24'\n\nassert solution(\n'''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6'''\n) == '56'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 2 4 3 2\"\n) == \"4\"\n\nassert solution(\n    \"7\\n\"\n    \"1 3 5 6 5 4 2\"\n) == \"6\"\n\nassert solution(\n    \"3\\n\"\n    \"2 2 2\"\n) == \"1\"\n\nassert solution(\n    \"4\\n\"\n    \"1 2 4 3 2\"\n) == \"4\"\n\"\"\"\n\n\"\"\"\nTests passed on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank\n\nTested on HackerRank",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('7') == 'LRLRRR'\nassert solution('3') == '1'\nassert solution('4') == 'LLRR'\nassert solution('2') == 'R'\n\n\n-----[ Hint ]-----\n\nThe input is always a valid sequence of integers.\n\n-----[ Similar Problems ]-----\n\n[ Hint 1 ]\n\n[ Hint 2 ]\n\n[ Hint 3 ]\n\n[ Hint 4 ]\n\n[ Hint 5 ]\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    input_data\n) == output_data\n\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n') == 'R'\nassert solution('2\\n1 2\\n') == 'RRR'\nassert solution('3\\n1 2\\n') == 'RLRR'\nassert solution('4\\n1 2 4 3\\n') == 'RLRLRRR'\nassert solution('4\\n1 2 4 3\\n') == 'RLRLRRRR'\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('1 3 5 6 5 4 2') == '6'\nassert solution('2 2 2') == '1'\nassert solution('1 3 5 6 5 4 2') == '6'\nassert solution('2 2 2') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\r\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\r\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n1\n1\"\"\") == \"\"\"4\nLRLR\"\"\"\n\nassert solution(\"\"\"2\n2\n1 2\"\"\") == \"\"\"2\nLR\"\"\"\n\nassert solution(\"\"\"3\n3\n2 1 1\"\"\") == \"\"\"3\nLR\"\"\"\n\nassert solution(\"\"\"4\n4\n1 2 3 4\"\"\") == \"\"\"4\nLRLL\"\"\"\n\nassert solution(\"\"\"5\n5\n1 3 2 4 5\"\"\") == \"\"\"5\nRRRR\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n-----\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\n6\n1 1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '-1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '-1'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == '0'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == '1'\n",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 5 2 5') == '3'\nassert solution('6\\n1 4 4 7 4 1') == '3'\nassert solution('4\\n1 3 3 7') == '-1'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '3'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2",
        "num_ids_2": 1442,
        "num_ids_4": 1442
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''5\n2 2 5 2 5\n''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'\nassert solution('''2\n2 8\n''') == '3'\nassert solution('''1\n1\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"3\"\nassert solution(\"2\\n2\\n5\\n5\\n5\") == \"3\"\nassert solution(\"3\\n3\\n7\\n7\\n7\") == \"3\"\nassert solution(\"4\\n1\\n3\\n3\\n7\") == \"3\"\nassert solution(\"5\\n2\\n5\\n5\\n5\") == \"3\"\n",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 3 7 4''') == '3'\nassert solution('''2\n2 8''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''5\n1 4 4 7 4 1''') == '3'\nassert solution('''7\n1 3 3 7 4 1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3, 2, 1\\n6\\n4, 5, 1\") == \"3\"\nassert solution(\"3, 2, 1\\n5\\n2, 2, 3, 3\\n2, 2, 1, 1\") == \"-1\"\nassert solution(\"2, 8\\n2, 5, 7, 7\\n2, 1, 1, 1\\n2, 5, 1, 1\") == \"3\"\nassert solution(\"2, 2, 1\\n5\\n2, 2, 3, 3\\n2, 2, 1, 1\") == \"-1\"\nassert solution(\"2, 8\\n2, 5, 7, 7\\n2, 1, 1, 1\") == \"3\"\n",
        "num_ids_2": 59,
        "num_ids_4": 133
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == '-1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '-1'\nassert solution('1\\n3\\n') == '0'\nassert solution('2\\n2\\n') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\nassert solution('0 0 499999 1000000') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"2 2 4 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"2 2 4 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"2 2 4 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"2 2 4 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"2 2 4 4\"\"\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5') == 'NO'\nassert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5') == 'YES'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000') == 'YES'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"NO\"\nassert solution(\"0 0 7 4\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"NO\"\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 4 4') == \"NO\"\nassert solution('1 1 3 5') == \"YES\"\nassert solution('3 1 5 5') == \"YES\"\nassert solution('5 2 10 5') == \"YES\"\nassert solution('3 1 7 6') == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('3 2 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'NO'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'NO'\nassert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9') == '10'\nassert solution('998') == '998'\nassert solution('1000') == '10'\nassert solution('10099') == '101'\nassert solution('1098') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"7\"\nassert solution(\"10099\") == \"10100\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1098\") == \"20\"\nassert solution(\"1099\") == \"19\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1098''') == '20'\nassert solution('''10''') == '19'\nassert solution('''11''') == '19'\nassert solution('''10099''') == '101'\nassert solution('''1001''') == '10'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n\n\"\"\"\n\"\"\"\n1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1098, 1099\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10098\") == \"20\"\nassert solution(\"10\") == \"19\"\nassert solution(\"5\") == \"4\"\nassert solution(\"-5\") == \"0\"\nassert solution(\"15\") == \"13\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1098''') == '20'\nassert solution('''10''') == '19'\n\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a' * 2000) == 'a' * 2000\nassert solution('a' * 2001) == 'a' * 2000\nassert solution('a' * 2000 + 'b' * 1000) == 'a' * 2000 + 'b' * 1000\n",
        "num_ids_2": 18,
        "num_ids_4": 48
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"2 1 0 0 0\") == \"2 1 4 5 3\"\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n5 0 0 2 4\n\"\"\") == \"\"\"\n5 3 1 2 4 \n\"\"\"\nassert solution(\n\"\"\"\n7\n7 0 0 1 4 0 6\n\"\"\") == \"\"\"\n7 3 2 1 4 5 6 \n\"\"\"\nassert solution(\n\"\"\"\n7\n7 4 0 3 0 5 1\n\"\"\") == \"\"\"\n7 4 2 3 6 5 1 \n\"\"\"\nassert solution(\n\"\"\"\n5\n2 1 0 0 0\n\"\"\") == \"\"\"\n2 1 4 5 3\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n') == '2 1 4 5 3'\nassert solution('5\\n5 0 0 2 4\\n') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3'\n",
        "num_ids_2": 43,
        "num_ids_4": 97
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n5 0 0 2 4\n\"\"\") == \"\"\"5 3 1 2 4 \n\"\"\"\nassert solution(\n\"\"\"7\n7 0 0 1 4 0 6\n\"\"\") == \"\"\"7 3 2 1 4 5 6 \n\"\"\"\nassert solution(\n\"\"\"7\n7 4 0 3 0 5 1\n\"\"\") == \"\"\"7 4 2 3 6 5 1 \n\"\"\"\nassert solution(\n\"\"\"9\n9 0 0 2 4 0 6 0 8\n\"\"\") == \"\"\"9 4 3 2 1 6 5 8 7\n\"\"\"\nassert solution(\n\"\"\"6\n6 0 0 1 4 0 2\n\"\"\") == \"\"\"6 4 3 1 2 5 6\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n0') == '0'\nassert solution('2\\n2\\n1') == '2'\nassert solution('2\\n2\\n0') == '0'\nassert solution('3\\n1\\n0') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('5 3 1 2 4') == '5 3 1 2 4'\nassert solution('7') == '7'\nassert solution('7 0 0 1 4 0 6') == '7 3 1 2 4 5 6'\nassert solution('7') == '7'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('4 2') == 'NO'\nassert solution('3 2 1 2') == 'NO'\nassert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('4 2') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('4 2\\n2 1 1 2 3\\n') == 'NO'\nassert solution('6 2\\n1 2 1 3 2 3\\n') == 'NO'\nassert solution('4 2\\n1 2 2 3\\n') == 'NO'\n",
        "num_ids_2": 52,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('4 2') == 'NO'\nassert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 71
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2') == 'YES'\nassert solution('5 2\\n2 1 1 2 1') == 'YES'\nassert solution('5 2\\n1 2 1 2 1') == 'NO'\nassert solution('5 2\\n1 2 1 2 1') == 'NO'\nassert solution('4 1\\n1 2 1 2') == 'YES'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 2\"\"\") == \"\"NO\"\"\"\"\nassert solution(\"\"\"5 2\"\"\") == \"\"YES\"\"\"\"\nassert solution(\"\"\"5 2\"\"\") == \"\"\"1 1 2 1 2\"\"\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 3\\n1 2 2 3') == 'NO'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n2 1 1 2 1') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\nassert solution('5 2\\n2 1 1 2 1\\n2 1 1 2 1') == 'YES\\n2 1 1 2 1'\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 3') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('3 2 1 2 3') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('2 1 1 2 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2 2 3''') == \"YES\\n1 1 2 2\"\nassert solution('''5 2\n3 2 1 2 3''') == \"YES\\n2 1 1 2 1\"\nassert solution('''6 2\n2 1 1 2 1 3''') == \"YES\\n2 1 1 2 1\"\nassert solution('''6 2\n2 1 1 2 1 3''') == \"NO\"\nassert solution('''7 2\n2 1 1 2 1 3 4''') == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO\\n'\n\n\n\n'''\n",
        "num_ids_2": 56,
        "num_ids_4": 78
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 5 2\\n11010100101') == '1'\nassert solution('11 5 1\\n11010100101') == '3'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 10 4\") == \"6\"\nassert solution(\"11 10 4\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == '2'\nassert solution('11 5 2') == '1'\nassert solution('12 15 8') == '8'\nassert solution('20 19 10') == '9'\nassert solution('8 4 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\nassert solution('11 11 1\\n11101001111\\n') == '2'\nassert solution('11 10 1\\n11101001111\\n') == '1'\nassert solution('11 11 1\\n1110100111111\\n') == '3'\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '5'\nassert solution(stdin) == '9'\nassert solution(stdin) == '18'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\nassert solution('11 10 2\\n11010100101\\n') == '1'\nassert solution('11 10 1\\n11010100101\\n') == '3'\nassert solution('11 1002 2\\n11010100101\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123 456\\n12345\\n123456\\n1234\\n') == 'NO\\n'\nassert solution('123 456\\n12345\\n123456\\n1234\\n') == 'NO\\n'\nassert solution('123 456\\n12345\\n123456\\n1234\\n') == 'YES\\n'\nassert solution('123 456\\n12345\\n123456\\n1234\\n') == 'NO\\n'\nassert solution('123 456\\n12345\\n123456\\n1234\\n') == 'NO\\n'\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n1 2 2\\n3\\n1 1 2\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nYES\\nNO\\nYES\\nNO'\nassert solution('2\\n5\\n1 2 2\\n3\\n1 1 2\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1 1') == 'YES'\nassert solution('2\\n5\\n1 2 2\\n3\\n1 1 2\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nYES\\nNO\\nYES\\nNO'\n",
        "num_ids_2": 106,
        "num_ids_4": 139
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\n",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == 'NO'\nassert solution('asdf\\nasdfasdf') == 'YES'\nassert solution('\\nasdf\\nasdfasdf\\nasdfasdf') == 'YES'\nassert solution('asdf\\nasdfasdf\\nasdfasdf\\nasdfasdf') == 'YES'\nassert solution('asdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 75
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nNO\\nYES\\nYES\\nNO'\nassert solution('2\\n3\\n1 2\\n3') == 'NO\\nNO'\nassert solution('2\\n3\\n1 2\\n3\\n1 1 2') == 'NO\\nNO'\nassert solution('3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO\\nYES'\nassert solution('2\\n3\\n1 2\\n3\\n1 1 2') == 'NO\\nNO'\n",
        "num_ids_2": 95,
        "num_ids_4": 195
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n2') == 'NO'\nassert solution('1\\n2\\n1') == 'YES'\nassert solution('2\\n2\\n2\\n2\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 64
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n8\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n11\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n11\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n12\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n11\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n12\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n13\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n14\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n15\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n16\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n17\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1') == 'NO'\nassert solution('10') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''2\n3\n1 2 1\n3\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n3\n1 1 2\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n4\n1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '1111111111111111'\nassert solution('1 2 3 4 5 6 7 8 9') == '99999999999999999'\nassert solution('1 1 1 1 1 1 1 1 1') == '3333333333333333'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('11111') == '999999999'\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1 3'\nassert solution('1 2 5 4 6 6 3 1 9') == '1553'\nassert solution('11111') == '999999999'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('33') == '33'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == 7\nassert solution('11111') == 99999\nassert solution('9 8 7 6 5 4 3 2 1') == 99999\nassert solution('1337') == 1557\nassert solution('11111') == 99999\n",
        "num_ids_2": 18,
        "num_ids_4": 45
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''6\n26\n1 1 9 4 8 7 3 6\n''') == '2727'\nassert solution('''10\n543\n1 1 1 1 1 1 1 1 1 1\n''') == '543'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[1]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution
        "num_ids_2": 1618,
        "num_ids_4": 1618
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\n\nassert solution(\n'''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n\nassert solution(\n'''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\n\nassert solution(\n'''4\n7269\n6 7 6 7 7 6 6 7\n''') == '23758'\n\nassert solution(\n'''6\n2296\n1 2 3 4 5 6 7\n''') == '23758'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '1'\nassert solution('''5 10 15''') == '1'\nassert solution('''15 18 21''') == '1'\nassert solution('''100 100 101''') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\n'''\nNote that $a, b, c$ in the above example are integers. In order to obtain $a \\le b \\le c \\le 10^4$, we need to perform \nat least one operation in order to obtain $b$ and $c$ divisible by $a$.\n\nFor the example, to obtain $3 \\le a \\le 4$, we need to perform at least one operation in order to obtain $3$ and $5$ divisible by $3$.\n\nAnd the answer is \n\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n123 321 456''') == '1'\nassert solution('''5 10 15\n15 18 21\n100 100 101''') == '4'\nassert solution('''15 18 21\n100 100 101''') == '4'\nassert solution('''1 2 3\n123 321 456''') == '1'\nassert solution('''5 10 15\n15 18 21\n100 100 101''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"inputs/test_2.txt\").read()) == \"1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(open(\"inputs/test_3.txt\").read()) == \"1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(open(\"inputs/test_4.txt\").read()) == \"1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(open(\"inputs/test_5.txt\").read()) == \"1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\n",
        "num_ids_2": 160,
        "num_ids_4": 320
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\",
        "num_ids_2": 1593,
        "num_ids_4": 1593
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1 1 3'\nassert solution('1\\n2\\n3\\n123 321 456') == '1 1 3'\nassert solution('1\\n2\\n3\\n123 321 456\\n5 10 15') == '1 1 3'\nassert solution('1\\n2\\n3\\n123 321 456\\n5 10 15\\n15 18 21') == '1 1 3'\nassert solution('1\\n2\\n3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101') == '1 1 3'\n",
        "num_ids_2": 42,
        "num_ids_4": 105
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1\n1 1 1\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n1 1 8\n1 1 9\n1 1 10\n1 1 11\n1 1 12\n1 1 13\n1 1 14\n1 1 15\n1 1 16\n1 1 17\n1 1 18\n1 1 19\n1 1 20\n1 1 21\n1 1 22\n1 1 23\n1 1 24\n1 1 25\n1 1 26\n1 1 27\n1 1 28\n1 1 29\n1 1 30\n1 1 31\n1 1 32\n1 1 33\n1 1 34\n1 1 35\n1 1 36\n1 1 37\n1 1 38\n1 1 39\n1 1 40\n1 1 41\n1 1 42\n1 1 43\n1 1 44\n1 1 45\n1 1 46\n1 1 47\n1 1 48\n1 1 49\n1 1 50\n1 1 51\n1 1 52\n1 1 53\n1 1 54\n1 1 55\n1 1 56\n1 1 57\n1 1 58\n1 1 59\n1 1 60\n1 1 61\n1 1 62\n1 1 63\n1 1 64\n1 1 65\n1 1 66\n1 1 67\n1 1 68\n1 1 69\n1 1 70\n1 1 71\n1 1 72\n1 1 73\n1 1 74\n1 1 75\n1 1 76\n1 1 77\n1 1 78\n1 1 79\n1 1 80\n1 1 81\n1 1 82\n1 1 83\n1 1 84\n1 1 85\n1 1 86\n1 1 87\n1 1 88\n1 1 89\n1 1 90\n1 1 91\n1 1 92\n1 1 93\n1 1 94\n1 1 95\n1 1 96\n1 1 97\n1 1 98\n1 1 99\n1 1 100\n1 1 101\n1 1 102\n1 1 103\n1 1 104\n1 1 105\n1 1 106\n1 1 107\n1 1 108\n1 1 109\n1 1 110\n1 1 111\n1 1 112\n1 1 113\n1 1 114\n1 1 115\n1 1 116\n1 1 117\n1 1 118\n1 1 119\n1 1 120\n1 1 121\n1 1 122\n1 1 123\n1 1 124\n1 1 125\n1 1 126\n1 1 127\n1 1 128\n1 1 129\n1 1 130\n1 1 131\n1 1 132\n1 1 133\n1 1 134\n1 1 135\n1 1 136\n1 1 137\n1 1 138\n1 1 139\n1 1 140\n1 1 141\n1 1 142\n1 1 143\n1 1 144\n1 1 145\n1 1 146\n1 1 147\n1 1 148\n1 1 149\n1 1 150\n1 1 151\n1 1 152\n1 1 153\n1 1 154\n1 1 155\n1 1 156\n1 1 157\n1 1 158\n1 1 159\n1 1 160\n1 1 161\n1 1 162\n1 1 163\n1 1 164\n1 1 165\n1 1 166\n1 1 167\n1 1 168\n1 1 169\n1 1 170\n1 1 171\n1 1 172\n1 1 173\n1 1 174\n1 1 175\n1 1 176\n1 1 177\n1 1 178\n1 1 179\n1 1 180\n1 1 181\n1 1 182\n1 1 183\n1 1 184\n1 1 185\n1 1 186\n1 1 187\n1 1 188\n1 1 189\n1 1 190\n1 1 191\n1 1 192\n1 1 193\n1 1 194\n1 1 195\n1 1 196\n1 1 197\n1 1 198\n1 1 199\n1 1 200\n1 1 201\n1 1 202\n1 1 203\n1 1 204\n1 1 205\n1 1 206\n1 1 207\n1 1 208\n1 1 209\n1 1 210\n1 1 211\n1 1 212\n1 1 213\n1 1 214\n1 1 215\n1 1 216\n1 1 217\n1 1 218\n1 1 219\n1 1 220\n1 1 221\n1 1 222\n1 1 223\n1 1 224\n1 1 225\n1 1 226\n1 1 227\n1 1 228\n1 1 229\n1 1 230\n1 1 231\n1 1 232\n1 1 233\n1 1 234\n1 1 235\n1 1 236\n1 1 237\n1 1 238\n1 1 239\n1 1 240\n1 1 241\n1 1 242\n1 1 243\n1 1 244\n1 1 245\n1 1 246\n1 1 247\n1 1 248\n1 1 249\n1 1 250\n1 1 251\n1 1 252\n1 1 253\n1 1 254\n1 1 255\n1 1 256\n1 1 257\n1 1 258\n1 1 259\n1 1 260\n1 1 261\n1 1 262\n1 1 263\n1 1 264\n1 1 265\n1 1 266\n1 1 267\n1 1 268\n1 1 269\n1 1 270\n1 1 271\n1 1 272\n1 1 273\n1 1 274\n1 1 275\n1 1 276\n1 1 277\n1 1 278\n1 1 279\n1 1 280\n1 1 281\n1 1 282\n1 1 283\n1 1 284\n1 1 285\n1 1 286\n1 1 287\n1 1 288\n1 1 289\n1 1 290\n1 1 291\n1 1 292\n1 1 293\n1 1 294\n1 1 295\n1 1 296\n1 1 297\n1 1 298\n1 1 299\n1 1 300\n1 1 301\n1 1 302\n1 1 303\n1 1 304\n1 1 305\n1 1 306\n1 1 307\n1 1 308\n1 1 309\n1 1 310\n1 1 311\n1 1 312\n1 1 313\n1 1 314\n1 1 315\n1 1 316\n1 1 317\n1 1 318\n1 1 319\n1 1 320\n1 1 321\n1 1 322\n1 1 323\n1 1 324\n1 1 325\n1 1 326\n1 1 327\n1 1 328\n1 1 329\n1 1 330\n1 1 331\n1 1 332\n1 1 333\n1 1 334\n1 1 335\n1 1 336\n1 1 337\n1 1 338\n1 1 339\n1 1 340\n1 1 341\n1 1 342\n1 1 343\n1 1 344\n1 1 345\n1 1 346\n1 1 347\n1 1 348\n1 1 349\n1 1 350\n1 1 351\n1 1 352\n1 1 353\n1 1 354\n1 1 355\n1 1 356\n1 1 357\n1 1 358\n1 1 359\n1 1 360\n1 1 361\n1 1 362\n1 1 363\n1 1 364\n1 1 365\n1 1 366\n1 1 367\n1 1 368\n1 1 369\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\n\nassert solution('''8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\n",
        "num_ids_2": 11,
        "num_ids_4": 18
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3''') == '1\\n1 1 3'\nassert solution('''123 321 456''') == '102\\n1 1 3'\nassert solution('''5 10 15''') == '114 228 456'\nassert solution('''15 18 21''') == '4'\nassert solution('''100 100 101''') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 74
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1 1\n1\n1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\n\nassert solution('''2\n1 100000\n''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''2\n1 100000''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n3\\n7') == '2'\nassert solution('2\\n1\\n100000') == '0'\nassert solution('2\\n3\\n7') == '2'\nassert solution('2\\n3\\n1') == '0'\nassert solution('4\\n1 3 3 7\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\n'''\n\nfrom sys import stdin\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 100000') == '0'\n\"\"\"\n\nimport sys",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7\\n4') == '2'\nassert solution('1 100000\\n4') == '0'\nassert solution('1 100000\\n4\\n1 100000') == '0'\nassert solution('2\\n1 100000\\n4\\n1 100000') == '0'\n\n-----Alternate Solutions-----\n",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 3 7') == 2\nassert solution('1 100000') == 0\nassert solution('100000 1 100000') == 0\nassert solution('1 100000 1') == 0\nassert solution('1 100000 100000') == 0\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '''1 2 3 0 3 '''\nassert solution('''10 3''') == '''2 2 2 1 1 0 4 3 4 4 '''\nassert solution('''10 10 10''') == '''2 2 2 1 1 0 4 3 4 4 '''\nassert solution('''1 1 1''') == '''-1 '''\nassert solution('''3 2''') == '''2 2 2 1 1 0 4 3 4 '''\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''5 2''') == '-1'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''9 2''') == '-1'\nassert solution('''7 3''') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5 2\n1 3 1\n1 5 1\"\"\"\n) == \"\"\"1 2 3 0 3\"\"\"\n\nassert solution(\n    \"\"\"3 2\n1 3 1\n1 2 1\"\"\"\n) == \"\"\"2 2 2 1 1 0 4 3 4 4\"\"\"\n\nassert solution(\n    \"\"\"10 3\n4 7 2\n1 10 3\n8 9 1\"\"\"\n) == \"\"\"2 2 2 1 1 0 4 3 4 4\"\"\"\n\nassert solution(\n    \"\"\"20 4\n1 3 1 3 3 1\n4 7 2\n2 3 2 2 1\n4 8 2\n1 10 3\n2 9 1\n5 9 1\n6 7 1\n1 14 1\n1 10 3\n2 9 1\n5 9 1\n6 7 1\n7 8 1\n2 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n3 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n22 23 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n22 23 1\n23 24 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n22 23 1\n23 24 1\n24 25 1\n1 9 1\n5 9 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 4') == '1 1 1 1 1 1 1 1 1 1 1'\n\n\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())",
        "num_ids_2": 27,
        "num_ids_4": 68
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''3 2''') == '-1'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''1 2 1''') == '-1'\nassert solution('''4 2''') == '1 2 0 2'\n",
        "num_ids_2": 33,
        "num_ids_4": 72
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('2 2') == '-1'\nassert solution('5 2') == '4 3 2 1 0 3'\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''3 2''') == '-1'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''7 6 4''') == '0 0 0 0 1 0 0 1 0'\nassert solution('''3 2''') == '-1'\n'''\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 79
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 0 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('2 2 2 1 1 0 4 3 4 4') == '-1'\nassert solution('2 2 2 1 1 0 4 3 4 4') == '-1'\nassert solution('2 2 2 1 1 0 4 3 4 4') == '-1'\nassert solution('2 2 2 1 1 0 4 3 4 4') == '-1'\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 27,
        "num_ids_4": 67
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\n\n\"\"\"\n\nn,m=map(int,input().split())\nsteps=0\nwhile n!=m:\n    if n%2==0:\n        n//=2\n    elif n%3==0:\n        n//=3\n    else:\n        n-=1\n    steps+=1",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12\\n2\\n') == '0'\nassert solution('42\\n42\\n') == '0'\nassert solution('48\\n72\\n') == '-1'\nassert solution('42\\n42\\n') == '0'\nassert solution('12\\n2\\n') == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('60 86') == '-1'\nassert solution('120 51840') == '7'\nassert solution('1445184908') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('12 23') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\naba''') == 'ababababa'\nassert solution('''3 4\ncat''') == 'catcat'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 2\nabc''') == 'abcabc'\nassert solution('''3 2\nabcde''') == 'abcde'\n'''\n\nprint(solution(input()))\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abc') == 'abcabcabc'\nassert solution('abcabc') == 'abcabcabcabcabc'\nassert solution('aaaaa') == 'aaaaa'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aba\", 1) == \"a\"\nassert solution(\"aba\", 2) == \"ab\"\nassert solution(\"aba\", 3) == \"aba\"\nassert solution(\"aba\", 4) == \"aba\"\nassert solution(\"aba\", 5) == \"aba\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cat', 'cat') == 'catcat'\nassert solution('aba', 'aba') == 'ababababa'\nassert solution('a', 'a') == 'a'\nassert solution('abc', 'abc') == 'abcabcabc'\nassert solution('abb', 'ab') == 'aabab'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''3 2\ncat\n''') == 'catcat'\nassert solution('''6 5\nabcdefgh\n''') == 'abcdefghabcdefgh'\nassert solution('''15 5\nmahiabmhiab\n''') =='mahiabmhiabmhiabmhiabmhiab'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''cat\n''') == 'catcat'\nassert solution('''xab\n''') == 'xabxab'\nassert solution('''yz\n''') == 'yzyz'\nassert solution('''aa\n''') == 'aaaa'\n",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5\\n2 5 1 2 2\") == \"3\"\nassert solution(\"5\\n2 1 2 2 2\") == \"2\"\nassert solution(\"5\\n2 1 2 2 2\\n\") == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 49
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 5 2') == '2\\n1 4'\nassert solution('2 1 2 4 3') == '0'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 1 2\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 5 2') == '0\\n'\nassert solution('5\\n2 5 1 2 2') == '3\\n4 1 5\\n'\nassert solution('4\\n2 1 2 4 3') == '0\\n'\nassert solution('5\\n2 1 2 4 3') == '0\\n'\nassert solution('5\\n2 1 2 4 3') == '0\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''3'''\nassert solution('''4''') == '''2'''\nassert solution('''5''') == '''0'''\nassert solution('''2''') == '''1 4'''\nassert solution('''8''') == '''0'''\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2') == '0\\n'\nassert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5\\n'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4\\n'\nassert solution('5\\n2 1 2 4 3\\n') == '0\\n'\nassert solution('5\\n2 1 2 4 3\\n') == '0\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 86
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 84
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\n\nfrom sys import stdin, stdout\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '15'\nassert solution(input()) == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('asdf') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4'\n\nassert solution(stdin) == '15'\n\nassert solution(stdin) == '-1'\n\nassert solution(stdin) == '233'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ajihiushda') == '15'\n\nassert solution('aaaaa') == '-1'\n\nassert solution('asdf') == '4'\n\nassert solution('aaaa') == '-1'\n\nassert solution('aaaaa') == '15'",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aa') == '-1'\nassert solution('aaaaa') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\") == \"YES\\n1 2\\n1 3\\n4 1\\n2 3\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\") == \"YES\\n2 1\\n2 3\\n3 4\"\n",
        "num_ids_2": 84,
        "num_ids_4": 176
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == \"NO\"\nassert solution('''5 5 1\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n4 5''') == \"YES\"\nassert solution('''5 5 2\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n4 5''') == \"NO\"\nassert solution('''5 5 2\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n5 4''') == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\\n4 1\"\nassert solution(\"5 5 4\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\") == \"NO\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\\n4 1\"\nassert solution(\"4 6 2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 1\\n3 4\\n3 5\\n4 1\"\nassert solution(\"4 7 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n4 7\") == \"NO\"\n",
        "num_ids_2": 76,
        "num_ids_4": 220
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\nassert solution('''2 1\n2 3''') == 'NO'\nassert solution('''2 1\n1 3''') == 'NO'\nassert solution('''2 2\n1 3\n2 3''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\nassert solution('''11:00\n12:00''') == '00:30'\nassert solution('''20:00\n20:40''') == '23:00'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10:30\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('10:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '11:30'\nassert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '11:30'\nassert solution('''12:00''') == '12:30'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:00\\n11:00') == '11:11'\nassert solution('01:00\\n03:00') == '02:00'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\n\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('   ') == ''\nassert solution('  123') == 1\nassert solution('  123  ') == 1\nassert solution('  123\\n') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nprint(\"Tests passed successfully\")",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\"\n\"\"\"\nTime Limit: 1.0 Sec(s) for each input file.\nMemory Limit: 256 MB\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(64) == 7\nprint(solution(int(stdin.read().strip())))\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nprint(\"Tests passed\")\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"4\") == 2\nassert solution(\"27\") == 5\nassert solution(\"42\") == 6\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n\n\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n\nassert solution('''4\n3 9\n1 2\n9 19\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '1'\nassert solution('''3''') == '0'\nassert solution('''5''') == '2'\nassert solution('''2''') == '0'\nassert solution('''3''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\n\nassert solution(\n'''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\n\nassert solution(\n'''\n2\n3 10\n1 5\n\n''') == '7'\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3\\n2 6\\n0 4\\n3 3') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('4\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\n",
        "num_ids_2": 55,
        "num_ids_4": 99
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"3\"\n\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n\n\n-----\n\n## solution: O(n) time | O(1) space\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'NO'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''7\n
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 'NO'\nassert solution('2\\n1\\n3\\n4\\n5') == 'NO'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('2\\n1\\n1\\n2\\n3\\n4\\n5') == 'NO'\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('10\\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9",
        "num_ids_2": 32,
        "num_ids_4": 1441
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('2\\n5 5\\n') == 'YES'\nassert solution('2\\n1 1\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/vova_1.txt') == 'YES'\nassert solution('inputs/vova_2.txt') == 'YES'\nassert solution('inputs/vova_3.txt') == 'YES'\nassert solution('inputs/vova_4.txt') == 'NO'\nassert solution('inputs/vova_5.txt') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('5') == 'NO'\nassert solution('10') == 'YES'\nassert solution('5\\n2 1 1 2 5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n''') == 'NO'\n\nassert solution('''2\n10 10\n''') == 'YES'\n\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\n\n'''\n\nn,k = [int(x) for x in stdin.split()]\ns = stdin.strip()",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"-1\"\nassert solution(\"a\"*1000) == \"-1\"\nassert solution(\"ab\"*1000) == \"-1\"\nassert solution(\"ab\"*100) == \"0\"\nassert solution(\"ab\"*1000) == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\nasdf\n''') == '4'\n\nassert solution('''\n5 6\naaaaa\n''') == '15'\n\nassert solution('''\n5 7\naaaaa\n''') == '-1'\n\nassert solution('''\n10 100\najihiushda\n''') == '233'\n\nassert solution('''\n10 5\najihiushda\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdf') == \"4\"\nassert solution('aaaaa') == \"15\"\nassert solution('ajihiushda') == \"233\"\nassert solution('asdfasdf') == \"-1\"\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '-1'\nassert solution('asdf') == '4'\nassert solution('aa') == '-1'\nassert solution('asdfsdf') == '15'\nassert solution('aaaaa') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '3'\nassert solution('adf') == '2'\nassert solution('asf') == '1'\nassert solution('sdf') == '0'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5\\n asdf\\n') == '4'\nassert solution('5 6\\n aaaa\\n') == '15'\nassert solution('10 100\\n ajihiushda\\n') == '233'\nassert solution('2 3\\n asdasdasd\\n') == '-1'\n\n\n\nhttps://www.codewars.com/kata/4c0c9e4d7a743a11f9000a0f\n\n5 kyu\n\nFind the longest palindrome substring\n\nWrite a function to find the longest palindromic substring in a string.\n\nExample 1:\n\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\nExample 2:\n\nInput: \"cbbd\"\nOutput: \"bb\"",
        "num_ids_2": 34,
        "num_ids_4": 77
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"hgiue\") == -1\nassert solution(\"aabaca\") == 233\nassert solution(\"aabaca\") == 233\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"11 12 14\") == \"8\"\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('30 40 30') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1 1''') == \"4\"\nassert solution('''3 2 2''') == \"7\"\nassert solution('''1 100 1''') == \"3\"\nassert solution('''30 20 10''') == \"39\"\nassert solution('''0 0 0''') == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '4'\nassert solution('30 20 10') == '39'\nassert solution('30 20 10') == '39'\nassert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('2 1 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('30 20 10') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\nassert solution('''30 20 10''') == '39'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"\"\nInput:\n3\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\nOutput:\nNO\nYES\nYES\n\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'YES'\nassert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'NO'\nassert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'NO'\nassert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'NO'\n",
        "num_ids_2": 222,
        "num_ids_4": 444
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\nfrom math import *",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2\\n1 1\") == \"NO\"\nassert solution(\"1 2\\n1 1\\n1 1\") == \"NO\"\nassert solution(\"1\\n2\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 52
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5 3\\n7 1\\n4 1\\n9 1\\n8 1\\n2 5\\n1 1\") == \"NO\"\nassert solution(\"1\\n5 3\\n7 1\\n4 1\\n9 1\\n8 1\\n2 5\\n1 1\") == \"YES\"\nassert solution(\"1\\n5 3\\n7 1\\n4 1\\n9 1\\n8 1\\n2 5\\n1 1\") == \"NO\"\nassert solution(\"1\\n5 3\\n7 1\\n4 1\\n9 1\\n8 1\\n2 5\\n1 1\") == \"NO\"\nassert solution(\"1\\n5 3\\n7 1\\n4 1\\n9 1\\n8 1\\n2 5\\n1 1\") == \"NO\"\n",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('stdin') == 'YES'\nassert solution('1 2\\n1 1\\n1 1') == 'YES'\nassert solution('1 2\\n1 1\\n1 1\\n2 2') == 'YES'\nassert solution('1 2\\n1 1\\n1 1\\n2 2\\n2 2') == 'YES'\nassert solution('1 2\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 80
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 139
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10') == 'YES'\nassert solution('1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\",
        "num_ids_2": 1118,
        "num_ids_4": 1118
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n') == '0\\n'\nassert solution('5\\n') == '1\\n'\nassert solution('6\\n') == '1\\n'\nassert solution('9\\n') == '1\\n'\nassert solution('0\\n') == '0\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('12345') == '1'\nassert solution('123456') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 0\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''7''') == '2'\nassert solution('''8''') == '3'\nassert solution('''9''') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('5') == ''\nassert solution('2') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n",
        "num_ids_2": 1645,
        "num_ids_4": 1645
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5 6 7') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('5') == '1'\n\n\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 0\nassert solution('5') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()()') == '4'\nassert solution('((()))())') == '5'\nassert solution('((()))()') == '4'\nassert solution('(()())()') == '4'\nassert solution('())()()') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()())') == '5'\nassert solution('((()))())') == '4'\nassert solution('((()))()') == '4'\nassert solution('((()))()())') == '4'\nassert solution('((()))()())') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()()()') == '4'\nassert solution('(()') == '0'\nassert solution('((()))') == '4'\nassert solution('((()))()') == '8'\nassert solution('(()(()))()') == '16'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('()()') == '2'\nassert solution('((()))())') == '4'\nassert solution('((()))()') == '0'\nassert solution('(()(()))()') == '4'\nassert solution('((()))()())') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"(()())\") == \"5\"\nassert solution(\"((()))\") == \"5\"\nassert solution(\"(()()))()\") == \"5\"\nassert solution(\"(()()))()()\") == \"5\"\nassert solution(\"((()))()\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''())''') == '0'\nassert solution('''(()())''') == '1'\nassert solution('''((()))''') == '2'\nassert solution('''(()()())''') == '3'\nassert solution('''((()))()''') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"()\") == 1\nassert solution(\"(()\") == 1\nassert solution(\"()()\") == 2\nassert solution(\"(()())\") == 1\nassert solution(\"(()))\") == 2\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5071\") == 4\nassert solution(\"705\") == 1\nassert solution(\"1241367\") == -1\nassert solution(\"3\") == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('5') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('1112969') == '7'\nassert solution('135106') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n\n\n-----\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\nassert solution(1292069) == -1\nassert solution(14098) == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('17095519') == '13'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '5071') == '4'\nassert solution(\n    '705') == '1'\nassert solution(\n    '1241367') == '-1'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('55117989') == '0'\nassert solution('80783676') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcdedc\") == \"1 1 1 1 1 1 1 1 2 3\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 2 1 2\"\nassert solution(\"aababccba\") == \"1 2 1 1 1 1 2 1 1 1 1\"\nassert solution(\"abcdefghi\") == \"1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"abcdefghabghde\") == \"1 1 1 1 1 1 1 1 1 1 1\"\n",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('aa') == '1'\nassert solution('abc') == '1'\nassert solution('abacbec') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 1 2 1 2 1 2 1 2'\nassert solution('abcdefghijklmnopqrstuvwxyz
        "num_ids_2": 16,
        "num_ids_4": 57
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abcdef') == '1'\nassert solution('abcde') == '1'\nassert solution('abcdea') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('123456789') == '123456789'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz0123456789') == 'abcdefghijklmnopqrstuvwxyz0123456789'\nassert solution('abcdefghijklmnopqrstuvwxyz0123456789') == 'abcdefghijklmnopqrstuvwxyz0123456789'\n",
        "num_ids_2": 24,
        "num_ids_4": 106
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\nabacbecfd\n''') == '2'\nassert solution('''\n9\naaabbcbb\n''') == '2'\nassert solution('''\n8\naaabbcbb\n''') == '2'\nassert solution('''\n7\nabcdedc\n''') == '3'\nassert solution('''\n5\nabcde\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\naaabbcbb''') == '''2\n1 1 1 1 1 1'''\nassert solution('''9\nabacbecfd''') == '''2\n1 1 2 1 2 2 1 2 1 2'''\nassert solution('''8\naaabbcbb''') == '''2\n1 1 2 1 2 1 2 1 2'''\nassert solution('''7\nabcdedc''') == '''3\n1 1 1 1 1 1 1 1'''\nassert solution('''5\nabcde''') == '''1\n1 1 1 1 1'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n9\nabacbecfd\n''') == '2'\n\nassert solution(\n'''\n8\naaabbcbb\n''') == '2'\n\nassert solution(\n'''\n7\nabcdedc\n''') == '3'\n\nassert solution(\n'''\n5\nabcde\n''') == '1'\n\nassert solution(\n'''\n7\nabcdaeba\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n    9\n    abacbecfd\n''') == '2', 'Standard'\n\nassert solution(\n'''\n    8\n    aaabbcbb\n''') == '2', 'Standard'\n\nassert solution(\n'''\n    7\n    abcdedc\n''') == '3', 'Standard'\n\nassert solution(\n'''\n    6\n    abcdef\n''') == '1', 'Standard'\n\nassert solution(\n'''\n    7\n    ababababab\n''') == '2', 'Standard'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n9\nabacbecfd\n'''\n    ) == '2\\n1 1 2 1 2 1 2 1 2'\n\nassert solution(\n'''\n8\naaabbcbb\n'''\n    ) == '2\\n1 2 1 2 1 2 1 1'\n\nassert solution(\n'''\n7\nabcdedc\n'''\n    ) == '3\\n1 1 1 1 1 1 2 3'\n\nassert solution(\n'''\n5\nabcde\n'''\n    ) == '1\\n1 1 1 1 1'\n\nassert solution(\n'''\n6\naabcd\n'''\n    ) == '1\\n1 1 1 1 1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''a''') == 'NO'\nassert solution('''aba''') == 'YES'\nassert solution('''abacaba''') == 'YES'\nassert solution('''ba''') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'YES'\nassert solution('abacaba') == 'NO'\nassert solution('aab') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('ababab') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'YES'\nassert solution('abacaba') == 'NO'\nassert solution('ba') == 'YES'\nassert solution('aba') == 'YES'\nassert solution('abab') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('qwerty') == 'YES'\nassert solution('qwerty') == 'NO'\nassert solution('qwerty') == 'NO'\nassert solution('qwerty') == 'NO'\nassert solution('qwerty') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a\\na\\na') == \"YES\\na\\na\\na\"\nassert solution('a\\na\\na') == \"NO\"\nassert solution('abc\\na\\nb\\nc\\na\\nc') == \"YES\\na\\na\\nb\\nc\\na\\nc\\na\"\nassert solution('abc\\na\\nb\\nc\\na\\nc') == \"NO\"\nassert solution('abc\\na\\nb\\nc\\na\\nc') == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 88
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'YES'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'NO'\nassert solution('aba') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a\\nb') == 'NO'\nassert solution('a') == 'YES'\nassert solution('b') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ab') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''a''') == 'NO'\nassert solution('''aba''') == 'YES'\nassert solution('''abacaba''') == 'YES'\nassert solution('''ba''') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"12 34 55 43 21\") == \"5\"\nassert solution(\"7 1 2 1 3\") == \"0\"\n\n\n-----Alternate Solutions (Shorter)-----\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4''') == '5'\nassert solution('''5 2\n3 1 2 1 3''') == '0'\nassert solution('''5 100\n12 34 55 43 21''') == '5'\nassert solution
        "num_ids_2": 16,
        "num_ids_4": 1417
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n3 1 2 1 3\") == \"5\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"0\"\nassert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n3 1 2 1 3\\n') == '5'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('10 4\\n10 9 7 1 4 1 2 1 7 1 2\\n') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 66
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\n\n\n-----\n\n## Subtask 1 - $k$\n\nPlease add an example for your own testing.\n\n## Subtask 2 - $n$\n\nPlease add an example for your own testing.\n\n## Subtask 3 - $k$\n\nPlease add an example for your own testing.\n\n## Subtask 4 - $n$\n\nPlease add an example for your own testing.\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 2\\n12 34 55 43 21') == '0'",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10'\n'') == '5'\nassert solution('1 2 3 4 5 6 7 8 9'\n'') == '0'\nassert solution('1 2 3 4 5 6 7 8 9'\n'') == '5'\nassert solution('1 2 3 4 5 6 7 8 9'\n'') == '5'\nassert solution('1 2 3 4 5 6 7 8 9'\n'') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('7 5\\n1 2 3 4 5 6 7\\n') == '7'\nassert solution('100 3\\n10 20 30 40 50 60 70 80 90 100\\n') == '101'\n",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n\") == \"12\\n\"\nassert solution(\"3 9\\n\") == \"14\\n\"\nassert solution(\"9 3\\n\") == \"14\\n\"\nassert solution(\"3 6\\n\") == \"12\\n\"\nassert solution(\"506 2708\\n\") == \"3218\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 4\") == \"4\"\nassert solution(\"3 9\\n3 6\") == \"14\"\nassert solution(\"3 3\\n3 9\") == \"14\"\nassert solution(\"506 2708\\n506 9505\") == \"3218\"",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('506 2708') == '3218'\nassert solution('3 6') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\nabacbecfd') == 'YES\\n001010101'\nassert solution('8\\naaabbcbb') == 'YES\\n01011011'\nassert solution('7\\nabcdedc') == 'NO'\nassert solution('5\\nabcde') == 'YES\\n00000'\nassert solution('0\\n100') == 'YES\\n101'\n",
        "num_ids_2": 44,
        "num_ids_4": 76
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcde') == 'NO'\nassert solution('aabbccd') == 'YES'\nassert solution('aaabbccd') == 'YES'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"YES\"\nassert solution(\"abcde\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\nassert solution('''4\nabcded\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\nassert solution('''4\naaaa\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\nabacbecfd\n\n''') == 'YES'\nassert solution('''8\naaabbcbb\n\n''') == 'YES'\nassert solution('''7\nabcdedc\n\n''') == 'NO'\nassert solution('''5\nabcde\n\n''') == 'YES'\nassert solution('''2\nx\n\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdefghijk') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('aaabcbb') == 'NO'\nassert solution('aaabca') == 'YES'\nassert solution('abcdedc') == 'NO'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aaabbcbb') == 'YES\\n01011011'\nassert solution('abacbecfd') == 'YES\\n001010101'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES\\n00000'\nassert solution('abcdef') == 'NO'\n",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('2 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('5 5') == '-1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '25'\nassert solution('3 5') == '-1'\nassert solution('10 19') == '16'\nassert solution('10 22') == '18'\nassert solution('3 4') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 2') == '-1'\nassert solution('5 4') == '25'\nassert solution('5 4') == '25'\nassert solution('0 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\n\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 2') == '-1'\nassert solution('2 4') == '35'\nassert solution('1 100') == '-1'\n'''",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 3') == '-1'\nassert solution('2 100') == '-1'\nassert solution('100 100') == '-1'\nassert solution('2 10') == '25'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"3 3\") == -1\nassert solution(\"4 5\") == 25\nassert solution(\"0 0\") == -1\nassert solution(\"3 1\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('26 6\\n') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3\\n') == 'NO\\n'\nassert solution('1 1\\n') == 'YES\\n1'\nassert solution('9 4\\n') == 'NO\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 67
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 6') == 'YES\\n5 6'\nassert solution('4 4') == 'YES\\n1 1 4 4'\nassert solution('4 1') == 'NO'\nassert solution('1 1') == 'YES\\n1'\nassert solution('2 1') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2\\n') == \"NO\"\nassert solution('3 1\\n') == \"YES\\n3\"\nassert solution('3 3\\n') == \"YES\\n1 2 3\"\nassert solution('4 1\\n') == \"NO\"\nassert solution('1 1\\n') == \"YES\\n1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution(\n'''8 3\n''') == 'NO\\n'\nassert solution(\n'''1 1\n''') == 'YES\\n1\\n'\nassert solution(\n'''9 4\n''') == 'NO\\n'\n\nassert solution(\n'''8 2\n''') == 'YES\\n1 2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''26 6''') == '''YES'''\nassert solution(\n'''8 3''') == '''NO'''\nassert solution(\n'''1 1''') == '''YES'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'NO'\nassert solution('8 2') == 'NO'\nassert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'YES\\n1 2 4 5 6'\nassert solution('9 4') == 'YES\\n1 2 3 4'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 58
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\nassert solution('''4 2''') == 'YES'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n26\\n') == 'NO'\nassert solution('2\\n1\\n') == 'YES\\n1'\nassert solution('2\\n1\\n') == 'YES\\n1'\nassert solution('1\\n1\\n') == 'YES\\n1'\nassert solution('2\\n4\\n') == 'NO'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n\n''') == '3'\nassert solution('''3 2\n-300 -300\n1 299\n1 123\n\n''') == '3'\nassert solution('''3 2\n300 -300\n-299 -299\n1 299\n1 123\n\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"\nassert solution(\"3 1\\n1 -1\\n2 1\\n-1 1\\n\") == \"2\\n\"\nassert solution(\"3 1\\n1 -1\\n2 1\\n-1 1\\n3 1\\n-1 1\\n\") == \"2\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 124
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''1 100\n0 100\n0 100\n0 100\n0 100\n''') == '1'\nassert solution('''2 100\n1 -1\n2 100\n1 -1\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('2\\n-2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2\\n-2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('3\\n0\\n-1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('3\\n0\\n-1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n0\\n0\\n0\\n0') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('3\\n0\\n-1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n-1\\n-1\\n-1\\n-1') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n",
        "num_ids_2": 142,
        "num_ids_4": 296
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 1\nassert solution('1 1') == 1\nassert solution('1 1 2') == 1\nassert solution('1 2 1') == 1\nassert solution('1 1 2') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"\nassert solution(\"5 2\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"",
        "num_ids_2": 58,
        "num_ids_4": 83
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n\n''') == '3'\nassert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"NO\"\nassert solution(\"1\\n10\\n\") == \"YES\\n10\"\nassert solution(\"10\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n",
        "num_ids_2": 75,
        "num_ids_4": 121
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO\\n'\nassert solution('''1\n10\n''') == 'YES\\n10\\n'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(''.join(stdin.split())) == 'YES' or solution(''.join(stdin.split())) == 'NO'\n\n\n'''\nn = int(stdin.readline().strip())\n\nmatrix = []\nfor i in range(n):\n    matrix.append(stdin.readline().strip())\n\nmatrix = [[int(matrix[i][j]) for j in range(n)] for i in range(n)]",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\nNote\n\nThe order of the rows is reversed, as well as the order of the columns.\n\nThe matrix is a square matrix of the size of the given integer.\n\nThe matrix must be palindromic.\n\nYou must print each cell of the matrix.\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2 1 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == \"NO\\n\"\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('''\n5\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('4 6') == 'YES'\nassert solution('10 -2') == 'YES'\nassert solution('8 -1') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('2 2\\n1 1\\n2 -1') == 'YES'\n",
        "num_ids_2": 52,
        "num_ids_4": 107
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\nassert solution(\"3 5\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\n",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('3 10') == 'NO'\nassert solution('4 4') == 'YES'\nassert solution('5 2') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('6 6\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == 'NO'\n",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n\n\n\n\"\"\"\n\nn, r = [int(x) for x in stdin.strip().split(' ')]\nprices = []\nfor i in range(n):\n    prices.append([int(x) for x in stdin.strip().split(' ')])\n\nprices.sort(key=lambda x: x[1])\n\nrating = r\nfor p in prices:\n    if rating >= p[0]:\n        rating += p[1]\n    else:\n        break\n\nprint(\"YES\" if rating > 0 else \"NO\")\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 10\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 2\\n1 2 1') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('3 3 2\\n1 2 1') == 'YES\\n0 0 0 0 0 0 0 0 0'\nassert solution('3 3 2\\n1 2 1\\n2 1 1') == 'YES\\n0 0 0 0 0 0 0 0 0'\nassert solution('3 3 2\\n1 2 1\\n2 1 1\\n3 2 1') == 'YES\\n0 0 0 0 0 0 0 0 0'\nassert solution('3 3 2\\n1 2 1\\n3 2 1\\n4 2 1') == 'YES\\n0 0 0 0 0 0 0 0 0'\n",
        "num_ids_2": 54,
        "num_ids_4": 125
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"7 3 2\n1 2 1\n\"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"10 1 11\n1\n\"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"10 1 5\n2\n\"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"10 1 1\n1\n\"\"\") == \"NO\"\n\nassert solution(\n    \"\"\"7 3 2\n1 2 1\n\"\"\") == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''2''') == 'YES'\nassert solution('''1''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 3\\n2\\n') == 'NO'\nassert solution('10 1 6\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n",
        "num_ids_2": 57,
        "num_ids_4": 103
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\n\n-----Hint-----\n\nThe input always contains three positive integers.\n\n\"\"\"\n\nfrom typing import List\nfrom io import StringIO\n",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m, d = [int(x) for x in stdin.readline().split()]\narr = [int(x) for x in stdin.readline().split()]",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\"\nassert solution(\"10 1 11\\n1\") == \"YES\"\nassert solution(\"10 1 5\\n2\") == \"YES\"\nassert solution(\"10 1 10\\n2\") == \"NO\"\nassert solution(\"10 1 5\\n3\") == \"YES\"\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 3\") == \"NO\"\n\n\n\nPython 3.9.2\n\n\"\"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 81
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n-----\n\nNote:\n\n$n \\ge 1$, $n \\ge m$, $d \\le n$, $m \\le n$\n\n$1 \\le c_i \\le n$\n\n$1 \\le d \\le n$\n\n$1 \\le a_i \\le m$\n\n$1 \\le a_i \\le n$\n\n$a_i$ are distinct\n\n$0 \\le a_i \\le n$\n\n$c_i$ are all distinct\n\n$0 \\le a_i$\n\n$a_i$ are all distinct\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$a$ is an array of integers in the range [1..n]\n\n$m$ is an integer in the range [1..100,000]\n\n$d$ is an integer in the range [1..100,000]\n\n$n$ is an integer in the range [1..100,000]\n\n$m$ is an integer in the range",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('asdfasdf', 'fasdf') == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('aaaa', 'a') == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\",\"bb\") == 3\nassert solution(\"baaba\",\"ab\") == 2\nassert solution(\"abcde\",\"abcde\") == 0\nassert solution(\"asdfasdf\",\"fasd\") == 3",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''bbaba''') == '3'\nassert solution('''bb''') == '0'\nassert solution('''baaba''') == '3'\nassert solution('''ba''') == '0'\nassert solution('''abcde''') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"asdfasdf\", \"fdsaf\") == 2\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''bbaba\nbb\n''') == '3'\nassert solution('''baaba\nab\n''') == '2'\nassert solution('''abcde\nabcde\n''') == '0'\nassert solution('''asdfasdf\nfasd\n''') == '3'\nassert solution('''aabb\naab\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('aa') == 1\nassert solution('ab') == 0\nassert solution('ba') == 1\nassert solution('baa') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('ab') == 0\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\nassert solution(5.11111) == '3 2'\nassert solution(5.04192) == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.200000') == \"3 2\"\nassert solution('2.572479') == \"10 3\"\nassert solution('4.024922') == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('10.999999') == '1 1'\nassert solution('11.111111') == '1 1'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"NO\"\n",
        "num_ids_2": 44,
        "num_ids_4": 140
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''100 100 100''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\\n\") == \"NO\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n",
        "num_ids_2": 48,
        "num_ids_4": 144
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 3''') == 'YES'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''6 3 3''') == 'NO'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''7 2 3''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\nassert solution('1000 100 1') == 'NO'\n",
        "num_ids_2": 44,
        "num_ids_4": 136
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n7 3\\n\"\n\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n7 3\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 152
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''13 4 3''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''5 2 3''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3 3') == 'YES\\n' + '3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n' + '2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n' + '2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7'",
        "num_ids_2": 47,
        "num_ids_4": 149
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 6') == '110100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('3 3 6') == '101100'\nassert solution('3 3 7') == '101100'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result, \"expected: {}, actual: {}\".format(result, solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"1 1 1\") == \"101\"\nassert solution(\"1 2 1\") == \"11\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_out\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"acb\") == \"YES\"\nassert solution(\"acb\") == \"NO\"\nassert solution(\"aaa\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\", \"\", \"\") == \"NO\"\nassert solution(\"ab\", \"cb\", \"\") == \"NO\"\nassert solution(\"\", \"ab\", \"\") == \"NO\"\nassert solution(\"\", \"\", \"\") == \"NO\"\nassert solution(\"\", \"\", \"\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac''') == 'YES\\ncbacbacb'\nassert solution('''2\nab\nba''') == 'NO'\nassert solution('''3\na\nb\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"NO\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\nab\nbc\"\"\") == \"\"\"YES\nacbbac\"\"\"\n\nassert solution(\"\"\"3\naa\nbc\n\nOutput\nNO\"\"\") == \"\"\"NO\"\"\"\n\nassert solution(\"\"\"1\ncb\nac\n\nOutput\nYES\nabcdefgh\"\"\" ) == \"\"\"YES\nabcdefgh\"\"\"\n\nassert solution(\"\"\"10\nabc\n\nOutput\nNO\"\"\" ) == \"\"\"NO\"\"\"\n\nassert solution(\"\"\"10\nab\n\nOutput\nYES\nacbbac\"\"\" ) == \"\"\"YES\nacbbac\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ab') == 'NO'\nassert solution('ca') == 'YES'\nassert solution('bb') == 'NO'\nassert solution('ababc') == 'YES'\nassert solution('abcac') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"bc\") == \"YES\"\nassert solution(\"aa\") == \"NO\"\nassert solution(\"cb\") == \"YES\"\nassert solution(\"ac\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n2\nab\nbc\n''') == 'YES'\n\nassert solution('''\\\n3\naa\nbc\n''') == 'YES'\n\nassert solution('''\\\n2\nac\nbc\n''') == 'NO'\n\nassert solution('''\\\n1\na\nb\n''') == 'YES'\n\nassert solution('''\\\n1\nc\na\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"ca\") == \"YES\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"cb\") == \"NO\"\nassert solution(\"ac\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1 2''') == '3 1 2'\nassert solution('''3\n1 1 1''') == '3 1 2'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''5\n-1 1 1 1''') == '-1'\nassert solution('''6\n-1 1 1 1 1''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n-2 1\n''') == '3 1 2'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''\n4\n-1 2 2\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''4\n3 1 2''') == '3 1 2'\nassert solution('''4\n-2 1''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''1\n1''') == '1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1''') == '1 1 1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n3') == '3'\nassert solution('2\\n4') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\".join(solution(\"\".join(input().split())) for _ in range(int(input())))) == \"\".join(input().split())\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n-1\\n-1') == '1 -1'\nassert solution('1\\n-1\\n-1') == '1 -1'\nassert solution('1\\n-1\\n-1') == '1 -1'\nassert solution('1\\n-1\\n-1') == '1 -1'\nassert solution('1\\n-1\\n-1') == '1 -1'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2') == '3 1 2'\nassert solution('3\\n-1 2') == '-1'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('5\\n-1 1') == '-1'\nassert solution('5\\n-1 -1') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n-2 1\"\"\") == \"-1\"\nassert solution(\n\"\"\"5\n1 1 1 1 1\"\"\") == \"1 2 3 4 5\"\nassert solution(\n\"\"\"4\n-1 2 2\"\"\") == \"-1\"\nassert solution(\n\"\"\"8\n1 1 1 1 1 1 1 1\"\"\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\n\"\"\"6\n1 1 1 1 1 1\"\"\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"10\\n
        "num_ids_2": 32,
        "num_ids_4": 1515
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '1'\nassert solution('3\\n2 2 2 3 3') == '2'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('7\\n1 2 2 2 3 3 4 5') == '4'\nassert solution('15\\n1 2 2 2 3 3 3 4 5 6 7 8 9 10 11 12 13 14 15') == '10'\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''2 2 2 3 3''') == '2'\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 1 1') == '3'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n2 1') == '1'\nassert solution('3\\n2 2') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == 1\nassert solution('5 2 2 2 3 3\\n') == 2\nassert solution('4 1 2 2 3\\n') == 2\nassert solution('3\\n4 1 2\\n') == 1\nassert solution('3\\n4 1 3\\n') == 1\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 2 2 3 3') == '2'\nassert solution('1 2 2 3 3') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1 2\") == \"0\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"1\\n2\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('20') == '6'\nassert solution('30') == '9'\nassert solution('35') == '12'\nassert solution('100') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == '5'\nassert solution('10') == '5'\nassert solution('6') == '3'\nassert solution('8') == '4'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"1000000000\") == \"3\"\nassert solution(\"11\") == \"3\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n') == '5'\nassert solution('3\\n') == '0'\nassert solution('6\\n') == '1'\nassert solution('0\\n') == '0'\nassert solution('1000\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1000\") == \"1000000\"\nassert solution(\"10\") == \"5\"\nassert solution(\"1000\") == \"1000000\"\nassert solution(\"1000\") == \"1000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10''') == '5'\nassert solution('''100000''') == '5'\nassert solution('''11''') == '6'\nassert solution('''101010''') == '9'\nassert solution('''104860''') == '14'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n') == \"5\"\nassert solution('5\\n') == \"2\"\nassert solution('1000\\n') == \"49\"\nassert solution('1000\\n') == \"49\"\nassert solution('100000\\n') == \"49\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == '1'\nassert solution('123') == '6'\nassert solution('1234') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1') == '0 1'\nassert solution('1\\n1\\n0') == '0 1'\nassert solution('1\\n1\\n1') == '0 1'\nassert solution('0\\n3\\n0\\n0') == '0 3'\nassert solution('0\\n0\\n0\\n0') == '0 0'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '''0 1'''\nassert solution('''5''') == '''0 1'''\nassert solution('''15''') == '''0 1'''\nassert solution('''3''') == '''3 3'''\nassert solution('''11''') == '''0 10'''\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 0 3\\n3 0 0') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('15\\n5 5 5\\n11 145 530') == '3 3'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '0 3'\nassert solution('686') == '0 15'\nassert solution('319') == '119 226'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2\n0 1 1\n1 1 0\n''') == '0 1'\n\nassert solution(\n'''15\n5 5 5\n5 5 5\n''') == '0 15'\n\nassert solution(\n'''3\n0 0 3\n3 0 0\n''') == '3 3'\n\nassert solution(\n'''686\n479 178 29\n11 145 530\n''') == '22 334'\n\nassert solution(\n'''319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n\n\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n1\\n3\\n1\\n2\\n3\\n3\\n2\\n1') == '3'\nassert solution('7\\n1\\n2\\n2\\n1\\n5\\n3\\n3\\n2\\n1') == '2'\nassert solution('8\\n1\\n2\\n2\\n1\\n5\\n3\\n3\\n2\\n1') == '3'\nassert solution('11\\n-5\\n-4\\n-3\\n-2\\n-1\\n0\\n1\\n2\\n3\\n4\\n5') == '2'\n",
        "num_ids_2": 65,
        "num_ids_4": 139
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1 2 3 4 5\\n'\n                '0 1 2 2 1 5 3') == '3\\n'\nassert solution('1 2 2 1 2 3 4 5\\n'\n                '-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n'\nassert solution('1 2 2 1 2 3 4 5\\n'\n                '-3 -2 -1 0 1 2 3 4 5') == '4\\n'\nassert solution('1 2 2 1 2 3 4 5\\n'\n                '-3 -2 -1 0 1 2 3 4 5') == '4\\n'\nassert solution('1 2 2 1 2 3 4 5\\n'\n                '1 1 1 1 1 1 1 1') == '4\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\") == \"2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\"\nassert solution(\"6\\n1 1 1 1 1\") == \"4\\n1 1\\n2 2\\n3 3\"\n",
        "num_ids_2": 113,
        "num_ids_4": 142
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '''3\n7 7\n2 3\n4 5\n'''\n\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n''') == '''2\n3 4\n1 1\n2 2\n'''\n\nassert solution('''4\n1 1 1 1\n''') == '''4\n4 4\n1 1\n2 2\n3 3\n'''\n\nassert solution('''6\n1 1 1 1 1 1\n''') == '''2\n3 3\n4 4\n1 1\n2 2\n5 5\n'''\n\nassert solution('''6\n0 0 0 0 0 0\n''') == '''2\n3 3\n4 4\n5 5\n6 6\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 1 1 1''') == '3\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '4'\n\nassert solution('''\n3\n1 1 1\n''') == '3'\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('''7\n1 1 1 1 1''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n5 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('''7\n1 1 1 1 1''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n5 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3'\nassert solution('10\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10') == '1 1'\nassert solution('4\\n1 1 1 1') == '4 4'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 4101 4102 4103 4104 4105 4106 4107 4108 4109 4110 4111 4113 4112 4114 4115 4119 4120 4121 4122 4123 4124 4125 4126 4127 4128 4129 4130 4131 4132 4133 4134 4135 4136 4137 4138 4139 4140 4141 4142 4143 4144 4145 4146 4147 4148 4149 4150 4151 4152 4153 4154 4155 4156 4157 4158 4159 4160 4161 4162 4163 4164 4165 4166 4167 4168 4169 4170 4171 4172 4173 4174 4175 4176 4177 4178 4179 4180 4181 4182 4183 4184 4185 4186 4187 4188 4189 4190 4191 4192 4193 4194 4195 4196 4197 4198 4199 4200 4201 4202 4203 4204 4205 4206 4207 4208 4209 4210 4211 4212 4213 4214 4215 4216 4217 4218 4219 4220 4221 4222 4223 4224 4225 4226 4227 4230 4231 4232 4233 4234 4235 4236 4237 4238 4239 4240 4241 4242 4243 4244 4245 4246 4247 4248 4249 4250 4251 4252 4253 4254 4255 4256 4257 4258 4259 4260 4261 4262 4263 4264 4265 4266 4267 4268 4269 4270 4271 4272 4273 4274 4275 4276 4277 4278 4279 4280 4281 4282 4283 4284 4285 4286 4287 4288 4289 4290 4291 4292 4293 4294 4295 4296 4297 4298 4299 4300 4301 4313 4314 4315 4316 4317 4318 4319 4320 4321 4322 4323 4324 4325 4326 4327 4328 4329 4330 4331 4331 4332 4333 4334 4335 4336 4337 4338 4339 4340 4341 4342 4343 4344 4345 4350 4351 4352 4353 4354 4355 4356 4357 4358 4359 4360 4361 4362 4363 4364 4365 4366 4367 4368 4369 4370 4371 4372 4373 4374 4375 4376 4377 4378 4379 4380 4381 4382 4383 4384 4385 4386 4387 4388 4389 4390 4391 4392 4393 4394 4395 4396 4397 4398 4399 4400 4401 4412 4402 4413 4403 4414 4404 4415 4406 4416 4407 4417 4418 4419 4420 4421 4422 4423 4424 4425 4426 4427 4428 4429 4430 4431 4432 4433 4434 4435 4436 4437 4438 4439 4440 4441 4442 4443 4445 4446 4447 4448 4449 4451 4450 4452 4453 4454 4455 4456 4457 4458 4459 4460 4461 4462 4463 4464 4465 4466 4467 4468 4469 4470 4475 4476 4480 4481 4482 4483 4484 4485 4486 4487 4488 4489 4499 4502 4503 4504 4505 450",
        "num_ids_2": 49,
        "num_ids_4": 100
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1 2') == 'NO'\nassert solution('2\\n1 2 3') == 'YES'\nassert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n1 2 3 1') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'\nassert solution('3\\n3 2 1\\n') == 'NO'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('2\\n1 2\\n') == 'YES'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'\nassert solution('3\\n3 1 2\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('3\\n3 3 3\\n') == 'YES'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('3\\n1 2 3') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''9\n
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3 2 1\") == \"NO\"\nassert solution(\"5\\n3 2 4 1\") == \"YES\"\nassert solution(\"2\\n1\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"YES\"\nassert solution(\"10\\n5 4 3 2 1\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\nassert solution(\"1\\n0\") == \"NO\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"YES\"\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nabcdef\nabdfec''') == '''4\n3 5 4 5'''\nassert solution('''4\nabcd\naccd''') == '''-1'''\nassert solution('''6\nabcd\nabdc''') == '''4\n3 5 4 5'''\nassert solution('''4\nabcd\nabc''') == '''-1'''\nassert solution('''4\naabcd\nbabc''') == '''4\n2 1 4'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '4'\nassert solution('''\n4\nabcd\naccd\n\n''') == '-1'\nassert solution('''\n4\nabcd\nabcde\n\n''') == '-1'\nassert solution('''\n6\nabcdef\nabdfec\n\n''') == '4'\nassert solution('''\n5\nabcdefg\nabdefg\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a\", \"a\") == \"0\"\nassert solution(\"ac\", \"dc\") == \"1 3\"\nassert solution(\"ab\", \"c\") == \"-1\"\nassert solution(\"abc\", \"dca\") == \"2 5 4\"\nassert solution(\"abcd\", \"dac\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5\\n'\nassert solution('''4\nabcd\naccd\n''') == '-1\\n'\nassert solution('''6\nabcd\naccd\n''') == '4\\n3 5 4 5\\n'\nassert solution('''6\nabcd\naccd\n''') == '-1\\n'\nassert solution('''6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5'\nassert solution('''4\nabcd\naccd\n''') == '-1'\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'\nassert solution('''\n1\nabcd\n''') == '0'\nassert solution('''\n7\nabcdef\nabdfec\n''') == '4 5 4 5'\nassert solution('''\n9\nabcdefghij\nabdfecghij\n''') == '4 3 5 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\nabcdef\nabdfec''') == '4'\nassert solution('''4\nabcd\naccd''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nabcd\naccd\n''') == \"0\"\nassert solution('''5\nabcd\nacde\n''') == \"1\"\nassert solution('''10\nzxcvbn\nqazxsw\n''') == \"-1\"\nassert solution('''7\nabcdefgh\nbcdxefg\n''') == \"2 9\"\nassert solution('''5\nabcdef\nabcdefg\n''') == \"-1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdef', 'abdfec') == 'abdfec'\nassert solution('abcd', 'accd') == '-1'\nassert solution('abcd', 'accd') == '0'\nassert solution('abcd', 'accd') == '0'\nassert solution('abcd', 'accd') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'P'\nassert solution('ba') == 'PSPSPS'\nassert solution('abab') == 'PPSPSPS'\nassert solution('a') == 'PS'\nassert solution('aba') == 'PSS'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '''PPSPSPS'''\nassert solution('''3''') == '''PPS'''\nassert solution('''2''') == '''PS'''\nassert solution('''3\na\naa\naa\na\n''') == '''PPSPSPS'''\nassert solution('''3\na\na\na\n''') == '''PPSP'''\n",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[0]*len(stdin)\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a'*5) == 'PPSPSP'\nassert solution('a'*5) == 'PSPSP'\nassert solution('a'*5) == 'SPSP'\nassert solution('a'*5) == 'SPSP'\nassert solution('a'*5) == 'PPSP'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'P'\nassert solution('ab') == 'P'\nassert solution('abab') == 'PSPSPS'\nassert solution('a') == 'P'\nassert solution('ba') == 'PSPPSPSP'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ba') == 'PPSPSPS'\nassert solution('a') == 'PPSS'\nassert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PPSS'\nassert solution('aba') == 'PSPS'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a' * 100) == 'SP'\nassert solution('b' * 100) == 'SPSPS'\nassert solution('a' * 100) == 'PSPS'\nassert solution('b' * 100) == 'PSPS'\nassert solution('a' * 99) == 'PP'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'''\nassert solution('''3''') == '''PS'''\nassert solution('''1''') == '''P'''\n",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aa\") == \"PPS\"\nassert solution(\"ab\") == \"PS\"\nassert solution(\"a\") == \"P\"\nassert solution(\"abc\") == \"S\"\nassert solution(\"aba\") == \"P\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"10 20 30 40 50\") == \"2\"\nassert solution(\"6 3 2 5 8\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 1') == 2\nassert solution('2 4 6 8 8') == 3\nassert solution('2 4 6 8 7') == 4\nassert solution('2 4 6 8 10') == 1\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 1\n\nassert solution('1 2 3 4 5') == 1\n\nassert solution('2 3 4 5') == 2\n\nassert solution('2 3') == 1\n\nassert solution('5') == 1",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('10 22 33 44 55 66 77 78 80 89 92 99') == '5'\nassert solution('2 4 6 8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('2 4 6 8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\n",
        "num_ids_2": 35,
        "num_ids_4": 248
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == 1\nassert solution(\"3 2 1 4 5\") == 2\nassert solution(\"3 2 3 3 3\") == 5\nassert solution(\"10 9 9 8 8\") == 8\nassert solution(\"10 9 9 9 9\") == 9\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n        \"2 4 6 8 10\"\n    ) == \"1\"\n\nassert solution(\n        \"1 2 3 4 5 6 7 8 9 10\"\n    ) == \"1\"\n\nassert solution(\n        \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n    ) == \"1\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 2 3 4 5 6 7 8 9') == '0'\nassert solution('100 100 100 100 100 100 100 100') == '0'\nassert solution('5 5 5 5 5 5') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 2 1 2 1\") == \"2\"\nassert solution(\"1 2 1 2 1\") == \"2\"\nassert solution(\"1 2 1 2 1\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0\\n') == 2\nassert solution('5\\n1 1 0 0 0\\n') == 0\nassert solution('4\\n1 1 1 1\\n') == 0\n\"\"\"\nfrom sys import stdin\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n1\n1\n1\n1\n''') == '0'\nassert solution('''\n2\n1 1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 4\") == \"0\"\nassert solution(\"2 3 4 5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"3 4 5 6\\n1 2 3 4 5 6\") == \"0\"\nassert solution(\"3 4 5 6 7\\n1 2 3 4 5 6 7\") == \"0\"\nassert solution(\"4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '0'\nassert solution('''10''') == '1'\nassert solution('''4''') == '0'\nassert solution('''1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''2''') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '0'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/1') == '2'\nassert solution('inputs/2') == '0'\nassert solution('inputs/3') == '5'\nassert solution('inputs/4') == '5'\nassert solution('inputs/5') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0') == 2\nassert solution('1 1 0 0 0') == 0\nassert solution('5') == 0\nassert solution('1 1 1 1') == 0\nassert solution('4') == 0\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\n\n\n\n'''\n",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\nassert solution('''6\n6 10 15 30 30\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 30 30 30 30 30\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 1 2') == '3'\nassert solution('2\\n1 1 1 2') == '2'\nassert solution('2\\n2 1 2') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''\n6\n6 90 12 18 30 18\n''') == '4'\n\nassert solution('''\n8\n3418 1740 1573 2209 5960 2609 1234 1601 4330 4346 8330 4383 940 940 465 179\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''\n6\n6 90 12 18 30 18\n''') == '4'\n\nassert solution('''\n6\n2 3 4 6 2\n''') == '3'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n\nassert solution('''\n7\n1 2 3 4 5 6 7 8 9 10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n1 2 3\\n2 3 4') == '2'\nassert solution('4\\n1 2 3 4\\n2 3 4 5') == '3'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nprint(solution(stdin))\n",
        "num_ids_2": 33,
        "num_ids_4": 73
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n2\n''') == '1'\nassert solution('''7\n6 0 2 4 6 9 0\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution('2\\n3\\n5\\n2\\n2\\n2') == '1\\n'\nassert solution('2\\n3\\n4\\n2\\n2\\n2') == '3\\n'\nassert solution('3\\n3\\n6\\n2\\n2\\n2') == '3\\n'\nassert solution('3\\n6\\n6\\n2\\n2\\n2') == '2\\n'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n\nassert solution('''5\n2 4 6 2 10\n''') == '2'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('7\\n7 100 10 10 10 10 10 10') == '5'\nassert solution('8\\n6 7 9 6 8 5 8 7') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''6\n1 2 4 3 3 2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n6\n1 2 4 3 3 2\n''') == '2'\nassert solution('''\\\n1\n100\n''') == '1'\nassert solution('''\\\n15\n1 2 4 3 3 2 1 3 4 5\n''') == '5'\nassert solution('''\\\n8\n1 2 4 3 3 2 1 3 4 5 6 7 8\n''') == '8'\nassert solution('''\\\n12\n1 2 4 3 3 2 1 3 4 5 6 7 8 9 10 11 12\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") is None\nassert solution(\"3\\n3\") == \"1\"\nassert solution(\"6\\n1 2 4 3 3 2\") == \"2\"\nassert solution(\"100\\n100\") == \"1\"\nassert solution(\"1\\n100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 51
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('5\\n1 2 4 3 3 2') == '2'\nassert solution('2\\n1 1') == '1'\nassert solution('9\\n1 1 1 1 1 1 1 1 1') == '2'\nassert solution('7\\n1 1 1 1 1 1 1 1 1') == '3'\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 4 3 3 2') == 2\nassert solution('100') == 1\n\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n6\n1 2 4 3 3 2\n''') == '2'\nassert solution('''\\\n1\n100\n''') == '1'\nassert solution('''\\\n6\n1 2 4 3 3 2\n''') == '2'\nassert solution('''\\\n6\n1 100\n''') == '1'\nassert solution('''\\\n10\nn\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 4 3 3 2\n''') == '2'\n\nassert solution('''1\n100\n''') == '1'\n\nassert solution('''0\n100\n''') == '0'\n\nassert solution('''2\n1 2 4 3 3 2\n''') == '3'\n\nassert solution('''5\n1 2 3 4 5\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"4\\n4 3 2 1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"6\\n1 2 4 3 3 2\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\\n\"\nassert solution(\"1\\n100\\n\") == \"1\\n\"\n\"\"\"\nfrom sys import stdin,stdout\nn = int(stdin.readline().strip())\narr = [int(x) for x in stdin.readline().strip().split()]\narr.sort()",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n') == '2'\nassert solution('1\\n100\\n') == '1'\nassert solution('1\\n1000\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '4'\nassert solution('6\\n1 2 3 4 5 6\\n') == '6'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n0') == '-1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('5\\n1') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"2\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\",
        "num_ids_2": 1208,
        "num_ids_4": 1208
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nN, R = map(int, stdin.split())\nhouse = list(map(int, stdin.split()))\n\nfor i in range(R, N):\n    if house[i] == 1:\n        house[i] = 0\n\nfor i in range(R - 1, -1, -1):\n    if house[i] == 0:\n        house[i] = 1\n        break\n\nprint(sum(house))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 0\\n') == '3'\n",
        "num_ids_2": 41,
        "num_ids_4": 86
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1''') == '3'\nassert solution('''5 3\n1 0 0 0 1''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 1''') == '3'\nassert solution('''10 10\n0 0 1 1 0 1 0 0 1 0''') == '-1'\nassert solution('''15 3\n0 0 1 1 0 1 0 0 1 0 0 0''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '-1'\nassert solution('5 3') == '2'\nassert solution('5 10') == '-1'\nassert solution('10 3') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 1 1 0 0 1') == '3'\nassert solution('3 4\\n0 0 0 0 0') == '2'\nassert solution('5 3\\n0 0 1 1 0 1') == '2'\nassert solution('5 10\\n0 0 1 1 0 1 0 0 0 1') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1 0 0 0 0 1') == '3'\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1''') == '3'\nassert solution('''5 3\n1 0 0 0 1''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 1''') == '3'\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\n''') == '3'\n\nassert solution(\n'''1000\n''') == '0'\n\nassert solution(\n'''1000\n''') == '0'\n\nassert solution(\n'''100\n''') == '0'\n\nassert solution(\n'''7\n''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"100\") == \"25\"\nassert solution(\"1000\") == \"125\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('0') == ''\nassert solution('5') == '3'\nassert solution('10') == '5'\nassert solution('5') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('100') == '0'\nassert solution('2147483647') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1863,
        "num_ids_4": 1863
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('10') == '5'\nassert solution('10') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"2\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('9') == '6'\nassert solution('16') == '4'\nassert solution('30') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()()()') == 0\nassert solution('(((()')) == 3\nassert solution('))') == 0\nassert solution(')(') == 0\nassert solution(')((()')) == 1\n",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('(((()'\n\nassert solution('()()()'\n\nassert solution('())('\n\nassert solution(')('\n\nassert solution(')))('",
        "num_ids_2": 16,
        "num_ids_4": 29
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"((()\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"((()\") == 0\nassert solution(\"((()\")) == 0\nassert solution(\"()()()\") == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('(((()' ) == 3\nassert solution('((()' ) == 0\nassert solution('))((' ) == 0\nassert solution(')))((' ) == 0\nassert solution('))()' ) == 0\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()()()') == 0\nassert solution('(((()' ) == 1\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(((()))') == '0'\nassert solution('()()()') == '0'\nassert solution(')))(((((((') == '0'\nassert solution(')))))))((((((') == '0'\nassert solution(')))))((((((') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('((()') == '0'\nassert solution('()()()') == '0'\nassert solution('))()())') == '0'\nassert solution('((((()' == '0'\n\nassert solution('()()()()()') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('(((()'\n'((((()') == 0\nassert solution('))))'\nassert solution(')))('\n'((()))' == 0\nassert solution(')()()') == 3\nassert solution(')))((((((()(((((((((((((((()))))))))))))))))))))'\n'(((((()))))' == 0\n\nprint(solution(stdin))",
        "num_ids_2": 14,
        "num_ids_4": 31
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"abcde\", \"abcd\") == 3\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 3\nprint(solution(stdin))\n'''\n'''\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('bb') == 1\nassert solution('ba') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"qweqwe\", \"qweqwe\") == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''bbaba\nbb''') == 3\nassert solution('''baaba\nab''') == 2\nassert solution('''abcde\nabcde''') == 0\nassert solution('''asdfasdf\nfasd''') == 3\nassert solution('''sdfsdf\nfsdf''') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('a', '') == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''bbaba\nbb\n''') == 3\nassert solution('''baaba\nab\n''') == 2\nassert solution('''abcde\nabcde\n''') == 0\nassert solution('''asdfasdf\nfasd\n''') == 3\nassert solution('''bbbabc\nbb\n''') == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"a\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''bbaba''') == 3\nassert solution('''baaba''') == 2\nassert solution('''abcde''') == 0\nassert solution('''asdfasdf''') == 3\nassert solution('''fasd''') == 3\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 1 1\") == \"6\"\nassert solution(\"1 10 1 1\") == \"20\"\nassert solution(\"1 100 1 1\") == \"2000\"\nassert solution(\"1 100 1 100\") == \"2000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"3 4 2 2\") == \"12\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('3 3 3 3') == '9'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == \"2\"\nassert solution('1 1 1 1') == \"1\"\nassert solution('1 1 1 1') == \"1\"\nassert solution('1 1 1 1') == \"1\"\nassert solution('1 1 1 1') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1, 1, 1, 1) == \"2\"\nassert solution(1, 2, 1, 1) == \"2\"\nassert solution(1, 1, 1, 2) == \"2\"\nassert solution(1, 2, 1, 2) == \"4\"\nassert solution(1, 2, 2, 1) == \"4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 1 1 1\") == \"4\"\nassert solution(\"1 10 10 1\") == \"10\"\nassert solution(\"1 100 1 1\") == \"1\"\nassert solution(\"1 1000 1 1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '2'\nassert solution('7\\n1 2 3 4 5 6 7') == '4'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '6'\nassert solution('5\\n8 6 5 4 3 2 1') == '1'\nassert solution('7\\n8 6 5 4 3 2 1') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom itertools import product\n\nN = int(input())\ndifficulties = tuple(map(int, input().split()))\n\ntotal_problems = 0\n\nfor k, _ in product(range(1, N + 1, 2), range(N // 2)):\n    total_problems += sum(d < k for d in difficulties)\n\nprint(total_problems)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('2\\n1') == '2'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('4\\n1 2 3') == '2'\nassert solution('6\\n1 2 3 4 5 6') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 4 4 6 7') == '2'\nassert solution('2 5 4 7 4 8') == '1'\nassert solution('5 4 1 2 3 4') == '2'\nassert solution('5 6 3 2 4') == '3'\nassert solution('5 6 2 1 4') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('9\\n9 1 4 4 6 7') == '4'\nassert solution('3\\n3 2 1 1') == '3'\nassert solution('5\\n2 1 1 1 2') == '4'\nassert solution('2\\n1 1') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1\\n1'\nassert solution('1\\n1\\n1\\n2\\n1\\n1') == '1\\n2'\nassert solution('1\\n1\\n2\\n1\\n1') == '2\\n1'\nassert solution('1\\n1\\n2\\n1\\n2') == '1\\n2'\nassert solution('1\\n1\\n2\\n1\\n2\\n1') == '2\\n2'\n",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 23 24 25 26 27 28 29 30 31 32\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 92 93 94 95 96 97 98 99\") == \"6\"\n",
        "num_ids_2": 47,
        "num_ids_4": 195
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 3 4 5 6') == '1'\nassert solution('2 3 4 5 6 7') == '2'\nassert solution('1 1 1 1 1 1 1') == '5'\nassert solution('2 4 6 8 10 12 14 16 18') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\n-----Best-Case Time Complexity-----\nO(1)\n\n-----Worst-Case Time Complexity-----\nO(1)\n\n-----Space Complexity (Worst)-----\nO(1)\n\n-----Space Complexity (Best)-----\nO(1)\n'''\n\n'''\n-----My Solution-----\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\n\nprint(\"success\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('16 17 14 20 20 11 22\\n1 4 5 7') == '3'\n\nassert solution('10 40 10 50\\n
        "num_ids_2": 44,
        "num_ids_4": 1371
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('7 24 21 19\\n16 17 14 20 20 11 22') == '3'\nassert solution('7 24 21 19\\n16 17 14 19 19 11 22') == '4'\nassert solution('7 24 21 19\\n16 17 14 19 19 11 22') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 10 3 2 7''') == '2'\nassert solution('''7 12 22 10 26 25''') == '4'\nassert solution('''10 12 21 22 20 17 19 22''') == '6'\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == '3'\nassert solution(\"\"\"7 24 21 23\n17 17 14 19 22 22 11 22\n\"\"\") == '2'\nassert solution(\"\"\"7 24 21 23\n16 17 14 20 22 22 11 22\n\"\"\") == '0'\nassert solution(\"\"\"7 24 21 23\n17 17 14 19 22 22 11 22\n\"\"\") == '0'\nassert solution(\"\"\"7 24 21 23\n18 17 14 19 22 22 11 22\n\"\"\") == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''4 2 1 1''') == '3'\nassert solution('''4 1 1 1''') == '1'\nassert solution('''4 2 3 4''') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == '3'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"10\\n\" +\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n) == \"4\"\nassert solution(\n    \"5\\n\" +\n    \"2 10 50 110 250\\n\"\n) == \"1\"\nassert solution(\n    \"6\\n\" +\n    \"4 7 12 100 150 199\\n\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"2 10 50 110 250\") == \"1\"\nassert solution(\"5 6 7 12 100 150 199\") == \"3\"\nassert solution(\"4 7 12 100 150 199\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('6\\n5 6 7 10 50 110 100 150 199') == '4'\nassert solution('6\\n5 6 7 10 50 110 100 149 199') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 10 50 110 250''') == '4'\nassert solution('''6\n4 7 12 100 150 199''') == '1'\nassert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''15\n1 2 10 50 110 150 130 50 120 50''') == '1'\nassert solution('''15\n1 2 10 50 110 150 130 50 120 50''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == '4'\nassert solution('10') == '4'\nassert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('10000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == ''\nassert solution('''2 4 8 3 6''') == '1 2'\nassert solution('''5''') == ''\nassert solution('''2 5 10 1 10 2''') == '1 4'\nassert solution('''6''') == ''\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n'''\nassert solution('''6\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n5 2 11 3 7''') == '1 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '1 1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('1\\n2\\n1\\n2\\n1\\n2') == '1 2'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '1 2'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '1 2'\n",
        "num_ids_2": 42,
        "num_ids_4": 106
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31''') == '1 22'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"5\") == \"1 4\"\nassert solution(\"6\") == \"1 4\"\nassert solution(\"10\") == \"1 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 3 1 5 9 10''') == '1 3'\nassert solution('''5\n1 2 3 4 5''') == '1 1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\n\nassert solution('''\n6\n2 5 10 1 10 2\n''') == '1 4'\n\nassert solution('''\n4\n2 5 4 2\n''') == '2 4'\n\nassert solution('''\n2\n2 2 2\n''') == '2 2'\n\nassert solution('''\n5\n2 4 8 3 6\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '1 4'\nassert solution('6 2 10 1 10 2') == '1 4'\nassert solution('2 5 10 1 10 2') == '1 4'\nassert solution('1 2 3 4 5 6') == '1 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n5''') == '1 2'\nassert solution('''2\n5''') == '1 4'\nassert solution('''2\n5''') == '2 4'\nassert solution('''2\n5''') == '1 4'\nassert solution('''4\n2 4 8 3 6''') == '2 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('120120') == '120120'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''121\n''') == '021'\n\nassert solution('''000000\n''') == '001122'\n\nassert solution('''211200\n''') == '211200'\n\nassert solution('''120110\n''') == '120120'\n",
        "num_ids_2": 14,
        "num_ids_4": 31
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('121') == '021'\nassert solution('1') == '2'\nassert solution('101') == '110'\nassert solution('0101') == '0110'\nassert solution('01101') == '0111'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"000000\") == \"001122\"\nassert solution(\"211200\") == \"211200\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"123123\") == \"123123\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"021\"\nassert solution(input()) == \"120120\"\nassert solution(input()) == \"211200\"\nassert solution(input()) == \"120110\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12345') == '123450'\nassert solution('211200') == '211220'\nassert solution('120110') == '120120'\nassert solution('1201200') == '120120'\nassert solution('1122') == '11220'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('120120') == '120120'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"021\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"211200\") == \"211202\"\nassert solution(\"000000\") == \"000\"\nassert solution(\"211200\") == \"120120\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1111') == ''\nassert solution('11111') == ''\nassert solution('01111') == '01111'\nassert solution('10001') == '12001'\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"000000\") == \"001122\"\nassert solution(\"211200\") == \"120120\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"21120\") == \"120120\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1\\n3') == '4'\nassert solution('5 4\\n1 3 1 2 4') == '6'\nassert solution('5 10\\n1 3 1 2 4') == '7'\nassert solution('8 5\\n1 3 1 2 4 5 6 7 8 9 10') == '56'\nassert solution('8 5\\n1 3 1 2 4 5 6 7 8 9 10') == '57'\n",
        "num_ids_2": 32,
        "num_ids_4": 74
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 1') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == ''\nassert solution('0 1') == '0'\nassert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1\\n3') == '4'\nassert solution('0 2\\n3') == '7'\nassert solution('0 2\\n2') == '4'\nassert solution('0 3\\n3') == '2'\nassert solution('0 3\\n2') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"7 2\") == \"0\"\nassert solution(\"7 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1\\n3\") == \"4\"\nassert solution(\"3\\n1\") == \"4\"\nassert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"6 2\\n3\") == \"12\"\nassert solution(\"6 3\\n3\") == \"24\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3\") == \"4\"\nassert solution(\"1 2\\n3\\n5\") == \"5\"\nassert solution(\"1 1\\n1\\n1\") == \"1\"\nassert solution(\"3 1\\n3\\n3\") == \"2\"\nassert solution(\"3 1\\n3\\n3\\n3\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"-7 2 4\") == \"-3\"\nassert solution(\"9 10 10\") == \"0\"\nassert solution(\"8 7 10\") == \"2\"\nassert solution(\"8 7 -10\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-1 1 1') == '0'\nassert solution('1 0 2') == '0'\nassert solution('1 3 4') == '1'\nassert solution('-1 -2 -3') == '-6'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('5 2 10') == '4'\nassert solution('-6 10 10') == '0'\nassert solution('-10 10 10') == '0'\nassert solution('10 10 10') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 8 -10') == '0'\nassert solution('1 2 2') == '0'\nassert solution('6 8 -10') == '0'\nassert solution('1 2 2') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"6 100 100\") == \"0\"\nassert solution(\"-1 1 1\") == \"0\"\nassert solution(\"0 1 1\") == \"0\"\nassert solution(\"0 1 -1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''10 3 5''') == '5'\nassert solution('''7 3 2''') == '5'\nassert solution('''10 3 3''') == '4'\nassert solution('''11 3 3''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 2') == '2'\nassert solution('6 6 2') == '0'\nassert solution('6 2 -1') == '2'\nassert solution('6 3 -1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('-10 10') == ''\nassert solution('-10 10') == ''\nassert solution('-10 9') == '0'\nassert solution('-10 10') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-6 2 4') == '2'\nassert solution('2 3 4') == '1'\nassert solution('-2 3 4') == '-1'\nassert solution('1 2 4') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n\n\n-----",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('4') == 0\nassert solution('5') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\nprint(\"Tests passed successfully.\")\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\nprint(\"Testcases passed\")\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a \") == \"\"\nassert solution(\"a b\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\nprint(solution(int(stdin.strip())))\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 9\nassert solution(4) == 25\nassert solution(5) == 125\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 27\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '27'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '9'\nassert solution('4') == '11'\nassert solution('5') == '21'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == \"27\"\nassert solution(1) == \"1\"\nassert solution(5) == \"27\"\nassert solution(10) == \"27\"\nassert solution(2) == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 27\nassert solution('1') == 1\nassert solution('10') == 27\nassert solution('30') == 27\n\"\"\"\n\nimport sys\nfrom typing import List, Optional\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"\"\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n''') == 27\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 1\nassert solution('1') == 1\nassert solution('5') == 27\nassert solution('7') == 81\nassert solution('10') == 274\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('    ') == None\nassert solution('123456789') == None\nassert solution('12') == 12\nassert solution('12345') == 12345\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\nassert solution('haha') == '0'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11) == 1\nassert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\nassert solution(966) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"9\") == \"\"\nassert solution(\"999\") == \"1\"\nassert solution(\"99\") == \"0\"\nassert solution(\"99999\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 4\n\"\"\"\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 1\nassert solution('2\\n2') == 2\nassert solution('3\\n1') == 3\nassert solution('4\\n2') == 4\nassert solution('5\\n1') == 5\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('2 1 3 1') == '1'\nassert solution('5 3 1 4 1 2') == '1'\nassert solution('5 1 3 1 4 1 2') == '3'\nassert solution('5 1 3 1 4 1 2 3 4 5') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0 2 2 0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2 5 3 1') == '4'\nassert solution('3\\n1 2 3') == '2'\nassert solution('2\\n2 2') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 4\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"16\"\n",
        "num_ids_2": 15,
        "num_ids_4": 36
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 5 3 1''') == '4'\nassert solution('''4\n2 5 3 1''') == '4'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 2\\n') == '0'\nassert solution('2\\n2 1\\n') == '1'\nassert solution('2\\n2 1\\n1 2\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('3\\n1 2 3\\n4 5 6\\n') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"\\na\\n\") == \"\"\nassert solution(\"a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\",
        "num_ids_2": 15,
        "num_ids_4": 36
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('8 7') == '8'\nassert solution('8 1') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n2 2\\n1 2\") == \"2\\n2\\n1\"\nassert solution(\"3 3\\n1 2\\n2 2\\n1 2\") == \"1\\n2\\n1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 3\") == \"\"\nassert solution(\"8 7\") == \"\"\nassert solution(\"8 1\") == \"\"\nassert solution(\"6 10\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 7''') == '2'\nassert solution('''8 1''') == '8'\nassert solution('''6 10''') == '1'\nassert solution('''999999733 999999732''') == '1'\nassert solution('''999999733 999999733''') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 7') == '2'\nassert solution('8 1') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '1'\nassert solution('999999733 999999733') == '999999733'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\n\"\"\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\n\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\n\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\n\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\n\nassert solution('2 3\\n2 1 2\\n1 2\\n0 1') == '0\\n'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 2\n2 1 2\n1 2\n0 1\n'''\n) == '1'\n\nassert solution(\n'''\n2 3\n2 1 2\n1 2\n0 1\n'''\n) == '3'\n\nassert solution(\n'''\n1 1\n1 0\n'''\n) == '1'\n\nassert solution(\n'''\n5 3\n3 1 4\n1 4\n0 2\n'''\n) == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''1 2\n0 1\n''') == '1'\nassert solution('''3 2\n2 1 2\n1 2\n0 1\n''') == '4'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''3 3\n2 1 2\n2 1 2\n1 2\n0 1''') == '6'\nassert solution('''4 4\n2 1 2\n2 1 2\n2 1 2\n1 2\n0 1''') == '24'\nassert solution('''5 5\n2 1 2\n2 1 2\n2 1 2\n2 1 2\n1 2\n0 1''') == '120'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"1 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"1 2\") == 1\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"3 2\\n2 1 2\\n1 2\\n0 1\") == \"0\"\nassert solution(\"3 3\\n2 1 2\\n1 2\\n0 1\") == \"4\"\nassert solution(\"2 2\\n1 2\\n0 1\") == \"0\"\nassert solution(\"2 3\\n2 1 2\\n1 2\\n0 1\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 91
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\n\"\"\"\n\nN, M = map(int, input().split())\nk_1s = list(map(int, input().split()))\np = list(map(int, input().split()))\n\nnum_of_lighted_bulbs = 0\n\nfor i in range(M):\n    num_of_lighted_bulbs += (k_1s[i] + p[i] - 1) % 2\n\nprint(num_of_lighted_bulbs)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\\n2 1 2\\n1 2\\n0 1\"\n) == \"1\\n\"\nassert solution(\n    \"3 3\\n1 2 3\\n2 3 2\\n1 3 1\\n0 3 1\"\n) == \"3\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution(\n'''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution(\n'''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution(\n'''\n4 4\n2 1 2\n1 2\n0 1\n''') == '4'\nassert solution(\n'''\n4 4\n2 1 2\n1 2\n0 1\n''') == '4'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('0 1') == '1'\n\"\"\"\nfrom math import gcd",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"A B H M\")) == \"5.00000000000000000000\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 2 0') == '12.40000000000000'\nassert solution('2 2 2 0') == '12.000000000000'\nassert solution('3 3 3 0') == '27.5'\nassert solution('3 3 3 1') == '27.5'\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 10 0') == '12.928571428571429'\nassert solution('3 4 11 0') == '25.857142857142858'\nassert solution('3 4 12 0') == '37.222222222222223'\nassert solution('3 4 13 0') == '49.09090909090909'\n",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('2 4 4 0') == '8.00000000000000000000'\nassert solution('0 3 3 0') == '0.00000000000000000000'\nassert solution('2 0 0 0') == '12.00000000000000000000'\nassert solution('0 3 5 0') == '7.00000000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 0 1 0') == '0.00000000000000000000'\nassert solution('2 2 2 0') == '0.00000000000000000000'\nassert solution('2 2 2 2') == '0.00000000000000000000'\nassert solution('2 2 2 22') == '2.8981054277623044e-10'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5.00000000000000000000'\n\n\"\"\"\n\nimport sys\nfrom math import radians, cos, sin, asin, sqrt\n\nstdin = sys.stdin.read()\ndata = list(map(int, stdin.split()))\n\na = data[0]\nb = data[1]\nh = data[2]\nm = data[3]\n\nd = 0",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 4 7 8') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 10 0') == '4.00000000000000000000'\nassert solution('3 4 12 0') == '3.00000000000000000000'\nassert solution('3 4 15 0') == '5.00000000000000000000'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"3 5\") == \"7\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4 5 60 4') == '8'\nassert solution('3\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1\\n1 1 1') == '6'\nassert solution('2 2\\n1 2 1') == '97'\nassert solution('2 2\\n1 1 1') == '6'\nassert solution('4 4\\n1 1 1 1 1') == '0'\nassert solution('5 5\\n1 1 1 1 1 1') == '37861199'",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('4 1\\n1 1 1') == '2'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3') == '97'\n",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\nassert solution('''4 1\n1 2 1 1''') == '2'\nassert solution('''15 3\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '8'\nassert solution('1 1 1') == '6'\nassert solution('2 2 2') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0') == '0'\nassert solution('2 5') == '0'\nassert solution('-2 1 2') == '-1'\nassert solution('-1 3') == '3'\nassert solution('-1 -3') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1000000\\n') == '0\\n0'\nassert solution('1 1\\n100000\\n') == '1\\n1'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n1 3\\n') == '7\\n2\\n3 2\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 132
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000\\n') == '0\\n0\\n'\n\n\n\n\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\n\na = [0]*n\n\nfor i in range(n):\n    a[i] = int(stdin.readline())\n\nb = [0]*m\n\nfor i in range(m):\n    l, r = map(int, stdin.readline().split())\n    b[i] = [l, r]",
        "num_ids_2": 92,
        "num_ids_4": 114
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''1 1\n100000\n''') == '1'\n\nassert solution('''5 3\n-2 -1 1 3 2\n1 1\n2 3\n4 5\n1 2\n1 3\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\n\n\n\n\n-----",
        "num_ids_2": 74,
        "num_ids_4": 91
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5\\n-2 3 1 4\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('1000000\\n') == '0'\nassert solution('1000000\\n-2 3 1 4\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\nassert solution('1000000\\n-2 3 1 4\\n1 3\\n4 5\\n2 5\\n1 3\\n-2 3 1 4\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\n",
        "num_ids_2": 49,
        "num_ids_4": 144
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n'''\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcde') == 'No'\nassert solution('fced') == 'Yes'\nassert solution('fceddd') == 'Yes'\nassert solution('zzz') == 'No'\nassert solution('abcdeaa') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nprint('pass')\nassert solution('az\\naa\\nbad\\nbabc') == 'No\\nNo\\nNo\\nNo'\nprint('pass')\nassert solution('aa\\naa\\nbad\\nbabc') == 'No\\nNo\\nNo\\nNo'\nprint('pass')\nassert solution('aa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa",
        "num_ids_2": 83,
        "num_ids_4": 1631
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"Yes\"\nassert solution(\"abz\") == \"No\"\nassert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"No\"\nassert solution(\"fyed\") == \"Yes\"\nassert solution(\"y\") == \"No\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"e\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('az\\naa\\nbabc') == 'No\\nNo\\nNo'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naa\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\\n') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naa\\nbabc\\n') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\n",
        "num_ids_2": 74,
        "num_ids_4": 179
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\") == \"No\\nNo\\nNo\\nNo\\n\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 204
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fce\\nd\\nr\\n') == 'No\\nYes\\nNo\\nNo\\n'\nassert solution('fced\\nxyz\\n') == 'No\\n'\nassert solution('fced\\nxyz\\nr') == 'No\\n'\nassert solution('fced\\nxyz\\nabc') == 'No\\n'\n",
        "num_ids_2": 80,
        "num_ids_4": 118
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbada\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbada\\nbabc') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo'\n\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbada\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbada\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbada\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'",
        "num_ids_2": 107,
        "num_ids_4": 217
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\"\"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n1 5\n2 2\n2 3\n2 4\n2 5\n3 2\n3 3\n3 4\n3 5\n4 4\n4 5\n5 5\n''') == '2 3'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n1 5\n2 2\n2 3\n2 4\n2 5\n3 2\n3 3\n3 4\n3 5\n4 4\n4 5\n5 5\n''') == '2 3 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '0'\nassert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('2 3') == '1'\nassert solution('3 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"6\"\nassert solution(\"1 2 3 4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"7\"\nassert solution(\"1 2 3 4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"7\"\nassert solution(\"1 2 3 4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 109
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nprint(solution(input()))\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 4\\n1 2') == '6'\nassert solution('1000000\\n') == '0'\nassert solution('2 3\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\nassert solution('2 2\\n1 2\\n1 2') == '0'\nassert solution('1000000\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n4 1\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000\\n') == '0\\n0\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\n",
        "num_ids_2": 92,
        "num_ids_4": 160
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123456789\") == \"LRLRLLL\"\nassert solution(\"1234567\") == \"LLL\"\nassert solution(\"12345\") == \"LLL\"\nassert solution(\"01234\") == \"LLL\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('test') == '12'\nassert solution('LRLRLLL') == 'LRLRLLL'\nassert solution('LLL') == 'LLL'\nassert solution('RLLR') == 'RRLL'\nassert solution('RRRLLLRR') == 'RRLL'\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3') == '4\\nLLRL'\nassert solution('2\\n1 2') == '2\\nLL'\n",
        "num_ids_2": 48,
        "num_ids_4": 87
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == 'a'\nassert solution('abcd') == 'a'\nassert solution('abcdcba') == 'a'\nassert solution('abcdcdcba') == 'a'\nassert solution('abcddcba') == 'a'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 'LRLRLLL'\nassert solution('2 1 5 4 3') == 'LLL'\nassert solution('1 2 4 3') == 'LRL'\nassert solution('1 2 3') == 'RRR'\nassert solution('3 2 1') == 'LL'\n",
        "num_ids_2": 32,
        "num_ids_4": 59
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2\n''') == 'LRLRLLL'\nassert solution('''3\n1 2 3\n''') == 'LLL'\nassert solution('''4\n1 2 4 3\n''') == 'LLRL'\nassert solution('''8\n1 2 4 5 6 7 8 9 10\n''') == 'RL'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"LRLRLLL\"\nassert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"4\") == \"LLRL\"\nassert solution(\"2 1 5 4 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 'L'\nassert solution('2') == 'LL'\nassert solution('3') == 'LRL'\nassert solution('4') == 'LLR'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2 1') == '2'\nassert solution('7 6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n2') == ''\nassert solution('1\\n2\\n3') == ''\nassert solution('1\\n2\\n3\\n4') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2\\n3 4') == '2'\nassert solution('2\\n1 2\\n3 4\\n2') == '2'\nassert solution('2\\n1 2\\n3 4\\n2\\n1') == '2'\nassert solution('2\\n1 2\\n3 4\\n2\\n1\\n2') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 77
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 5 3 4\n\n''') == '4'\n\nassert solution('''2\n1 2\n\n''') == '2'\n\nassert solution('''7\n6 5 4 3 2 4 3\n\n''') == '2'\n\nassert solution('''3\n1 2 3\n\n''') == '1'\n\nassert solution('''9\n1 2 2 3 3 3 3 3 3 3 4\n\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n4\") == \"4\"\nassert solution(\"4\\n1 2\\n5\") == \"2\"\nassert solution(\"4\\n6 5 4 3 2 4 3\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '5'\n\n\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 77
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n\n\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"1 2 5 3 4\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n3\\n') == '0'\nassert solution('2\\n4\\n') == '2'\nassert solution('2\\n5\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n3\\n') == '1'\nassert solution('3\\n2\\n') == '1'\nassert solution('3\\n3\\n') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''6 1\n1 2 2 4 5 6\n''') == '0'\nassert solution('''6 4\n1 2 2 4 5 6\n''') == '3'\nassert solution('''6 4\n1 2 3 2 3 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 5\n1 2 3 4 5''') == '0'\nassert solution('''5 4\n1 2 3 4 5''') == '0'\nassert solution('''7 4\n1 2 3 4 5 6 7''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 3 3 3 3\") == \"1\"\nassert solution(\"5 3\\n1 2 2 4 5\\n1 2 3 3 3 3\") == \"0\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10 10 10 10 10 10\\nn",
        "num_ids_2": 48,
        "num_ids_4": 1277
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('5 3') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 3 3') == '1'\nassert solution('1 2 2 4 5\\n1 2 3 3 3') == '2'\nassert solution('1 2 2 4 5\\n1 2 3 3 3') == '0'\nassert solution('1 2 2 4 5\\n1 2 3 3 3') == '2'\nassert solution('1 2 2 4 5\\n1 2 3 3 2') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''7 2''') == '2'\nassert solution('''5 3''') == '1'\nassert solution('''8 1''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 1 1') == '0'\nassert solution('3 2 1') == '1'\nassert solution('3 2 2') == '0'\nassert solution('4 3 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 1 2') == '2'\nassert solution('2 4 5') == '1'\nassert solution('4 8 6') == '0'\nassert solution('3 5') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('4 1 4') == '1'\nassert solution('8 6 3') == '2'\nassert solution('5 6 7') == '3'\nassert solution('7 6 8') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2') == '2'\nassert solution('8 5 3') == '4'\nassert solution('8 3 2') == '2'\nassert solution('8 5 6') == '0'\nassert solution('100000 1 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 2 2\") == \"0\"\nassert solution(\"8 2 1\") == \"1\"\nassert solution(\"8 1 1\") == \"0\"\nassert solution(\"8 1 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('3 3 4') == '0'\nassert solution('2 2 4') == '2'\nassert solution('2 2 2') == '0'\nassert solution('1 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4 2 1') == '2'\nassert solution('8 3 4 2 1 3') == '1'\nassert solution('8 3 4 2 1 3 4') == '0'\nassert solution('8 3 4 2 1 3 4 5') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''4\n3\n1 2 2\n1\n2\n''') == '1'\nassert solution('''4\n3\n1 2 1\n1\n1\n''') == '-1'\nassert solution('''4\n4\n1 1 1 1\n2\n1 1 2\n2\n1 2 1\n2\n1 1 1\n''') == '1'\nassert solution('''4\n4\n2 2 2 1\n2\n1 1 1\n2\n1 1 2\n2\n1 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n9\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n7\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n9\n''') == '9'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n7\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '48\\n4'\n\n\n\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n9\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n11\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n14\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n15\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4\n4\n4 2 12 6 4\n1\n2\n''') == '48'\n\nassert solution(\n'''6\n6\n6 2 12 6 4 24 16\n1\n2\n''') == '4'\n\nassert solution(\n'''8\n8\n8 2 12 6 4 24 16\n1\n2\n''') == '4'\n\nassert solution(\n'''10\n10\n10 2 12 6 4 24 16 3 8 5 10\n1\n2\n''') == '4'\n\nassert solution(\n'''10\n10\n10 2 12 6 4 24 16 3 8 5 10\n1\n3\n''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n1\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n1\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n2\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n1 1\n''') == '2'\nassert solution('''\n1\n2\n1 1\n''') == '2'\nassert solution('''\n1\n3\n1 1 3\n''') == '-1'\nassert solution('''\n1\n3\n1 1 3\n''') == '4'\nassert solution('''\n1\n3\n1 2 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0\\n') == '-1'\nassert solution('1\\n0\\n') == '-1'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n2 2\\n1\\n2\\n1\\n\") == \"4\\n2\\n\"\nassert solution(\"1\\n4\\n2 2\\n1\\n2\\n1\\n\") == \"-1\\n\"\nassert solution(\"2\\n8\\n1 1 1\\n1\\n2\\n1\\n\") == \"48\\n4\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 63,
        "num_ids_4": 132
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('2 4 2 4 4') == '2'\nassert solution('6 6 6 6 6') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('6\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('1\\n1\\n') == '0\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\"\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('2 4 2 4 4') == '2\\n4'\nassert solution('5 6 6 6 6 6') == '1\\n6'\nassert solution('6 6 6 6 6 6') == '0'\nassert solution('1 2 1 2 1') == '2\\n1'\n",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1\\n'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4\\n'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6\\n'\n\n\n\n\n\n\n'''\n",
        "num_ids_2": 52,
        "num_ids_4": 76
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('2 4 2 4 4') == '2'\nassert solution('6 6 6 6 6 6') == '1'",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n7') == '1'\nassert solution('7\\n1 2 3 4 5 6') == '3'\nassert solution('7\\n6 2 2 4 4') == '1'\nassert solution('7\\n6 6 6 6 6') == '1'\nassert solution('7\\n6 6 6 6 6 6') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"435\"\nassert solution(input()) == \"443\"\nassert solution(input()) == \"443\"\nassert solution(input()) == \"443\"\nassert solution(input()) == \"443\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('hello') == None\nassert solution('world') == None\nassert solution('python') == None\nassert solution('polycarp') == 'polycarp'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''432''') == '435'\nassert solution('''99''') == '103'\nassert solution('''237''') == '237'\nassert solution('''42''') == '44'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('45') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('15') == '16'\nassert solution('123') == '124'\nassert solution('555') == '556'\nassert solution('333') == '334'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\nprint('Success')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '4321',\n    '99',\n    '0'])) == '\\n'.join([\n    '4321',\n    '4321',\n    '4321'])\n\nassert solution('\\n'.join([\n    '765',\n    '1023',\n    '0'])) == '\\n'.join([\n    '765',\n    '765',\n    '765'])\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\n\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aab'\n\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'codeforces'\n\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n\n\n'''\nhttps://www.codewars.com/kata/polycarp-wrote-on-the-board-a-string-containing-only-lowercase-letters-s",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('aabc') == 'aab'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"abac\") == \"aac\"\nassert solution(\"ecoosdcefr\") == \"eocsdfr\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'b'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"aac\"\nassert solution('''aab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"aab\"\nassert solution('''abca\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"abca\"\nassert solution('''aaa\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"aaa\"\nassert solution('''aaab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"aaab\"\n",
        "num_ids_2": 16,
        "num_ids_4": 31
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aba'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'codeforces'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"abc\") == \"b\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac', 'aac'\nassert solution('''ba\n1\n0\nabb\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b', 'b'\nassert solution('''abcb\n5\n1 2 3 4 5\n4\n3 2 1 0\necosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c', 'c'\nassert solution('''b\n3\n1 2 3\n4\n3 2 1 0\necosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == '', 'b'\nassert solution('''b\n3\n1 2 3\n4\n3 2 1 0\necosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == '', 'b'\n",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"ecoosdcefr\") == \"efroodsgsefruie\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abb\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abcdefg\") == \"abcd\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"b\"\nassert solution(\"27\") == \"aa\"\nassert solution(\"769\") == \"zz\"\nassert solution(\"37\") == \"z\"\nassert solution(\"38\") == \"y\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n') == 'b'\nassert solution('25\\n') == 'zz'\nassert solution('35\\n') == 'zzz'\nassert solution('3000\\n') == 'zzzzzzzzzz'\nassert solution('100000000000000\\n') == 'aaaaaaaaaaaaaaaaa'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"b\"\nassert solution(\"123\") == \"aa\"\nassert solution(\"64\") == \"bb\"\nassert solution(\"1234\") == \"aaaa\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('asdf') == ''\nassert solution('asd') == 'a'\nassert solution('asdasdasd') == 'a'\nassert solution('a') == 'a'\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"abc\"\nassert solution(\"4\") == \"abcd\"\nassert solution(\"5\") == \"abcde\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000000') == 'a'\nassert solution('27') == 'aa'\nassert solution('273') == 'aab'\nassert solution('7014') == 'aba'\nassert solution('18277') == 'zzy'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'b'\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('27') == 'aa'\nassert solution('28') == 'ab'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2') == 'b'\nassert solution('2\\n') == 'b'\nassert solution('3\\n') == 'b'\nassert solution('3\\n2\\n') == 'b'\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('0') == None\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaaa') == 'aaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa ab aa aa bb bb\") == 11\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a b c d e\") == \"a b c d e\"\nassert solution(\"aa bb aa aa bb bb\") == \"a aa aa aa a a\"\nassert solution(\"aa bb aa aa bb bb\") == \"a aa aa aa bb bb\"\nassert solution(\"aa bb aa aa bb bb\") == \"a aa aa bb bb\"\nassert solution(\"aa bb aa aa bb bb\") == \"a aa aa bb bb\"\n",
        "num_ids_2": 46,
        "num_ids_4": 104
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6\nto be or not to be\n\n\"\"\") == '12'\nassert solution(\n\"\"\"\n10\na ab a a b ab a a b c\n\n\"\"\") == '13'\nassert solution(\n\"\"\"\n6\naa bb aa aa bb bb\n\n\"\"\") == '11'\nassert solution(\n\"\"\"\n4\nzadz\n\n\"\"\") == '4'\nassert solution(\n\"\"\"\n3\nzz\n\n\"\"\") == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('to be or not to be') == '12'\nassert solution('a ab a a b ab a a b c') == '13'\nassert solution('aa bb aa aa bb bb') == '11'",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('to be or not to be\\n') == 12\nassert solution('a ab a a b ab a a b c\\n') == 13\nassert solution('aa bb aa aa bb bb\\n') == 11\nassert solution('a aa aa bb bb\\n') == 12\nassert solution('a aa aa bb bb\\n') == 12\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('to be or not to be\\n') == '12'\nassert solution('a ab a a b ab a a b c\\n') == '13'\nassert solution('aa bb aa aa bb bb\\n') == '11'\nassert solution('aa bb aa aa bb bb\\n') == '11'\nassert solution('aa bb aa aa bb bb\\n') == '11'\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''3 2\n1 100 2 1''') == '100'\nassert solution('''3 1\n100 100 100''') == '100'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'\n\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n\nmax_profit = 0\nfor j in range(k, n + 1):\n    profit = 0\n    for i in range(0, n, j):\n        profit += max(a[i:i + j])\n    max_profit = max(max_profit, profit)\n\nprint(max_profit)\n\nfor t in range(1, k + 1):\n    profit = 0\n    for j in range(0, n, t):\n        profit += max(a[j:j + t])\n    print(*[t, profit])\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4000\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2\\n') == '20\\n3 2 3'\nassert solution('5 1\\n1 1 1 1 1\\n') == '1\\n5'\nassert solution('4 2\\n1 2000 2000 2\\n') == '4000\\n2 2'\nassert solution('1 1 1 1 1\\n') == '1\\n5'\nassert solution('1 1 2 2 3 3\\n') == '6\\n1 3 4 5 6'\n",
        "num_ids_2": 51,
        "num_ids_4": 93
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2''') == '4000'\nassert solution('''5 1''') == '1'\nassert solution('''4 2''') == '4000'\nassert solution('''4 1''') == '1'\nassert solution('''4 3''') == '1470'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2 2'\nassert solution('5 1') == '5'\nassert solution('5 4 2 6 5 1 9 2') == '20'\nassert solution('8 3') == '20'\nassert solution('5 2') == '3 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 2000 2000 2') == '4000\\n2 2'\nassert solution('3 2\\n1 2000 2000 2') == '3\\n3 2'\nassert solution('2 1\\n1 1 1') == '1\\n1'\nassert solution('1 1 1 1 1') == '1\\n1'\nassert solution('2 1\\n1 1 1') == '1\\n1'\n",
        "num_ids_2": 42,
        "num_ids_4": 78
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2000 2000 2\\n') == '4000\\n2 2'\nassert solution('8 3\\n5 4 2 6 5 1 9 2\\n') == '20'\nassert solution('4 2\\n1 1 1 1 1\\n') == '1\\n5'\nassert solution('5 1\\n1 1 1 1 1\\n') == '5'\nassert solution('5 1\\n1 1 1 1 1\\n') == '5'\n",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n0') == '0'\nassert solution('1\\n-1') == '1'\nassert solution('1\\n-2') == '1'\nassert solution('1\\n3') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\nassert solution('9\\n-1 -1 1 -1 1 -1 -1 1 1 1 1 1\\n') == '9'\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n-5\\n3\\n2\\n') == '1'\nassert solution('5\\n4\\n-2\\n3\\n2') == '0'\nassert solution('9\\n-1\\n1\\n-1\\n1\\n1\\n-1\\n-1\\n') == '6'\nassert solution('8\\n16\\n-5\\n-11\\n-15\\n10\\n5\\n4\\n-4\\n') == '3'\n'''",
        "num_ids_2": 48,
        "num_ids_4": 125
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\n-5\\n3\\n2\") == \"1\"\nassert solution(\"1\\n4\\n-5\\n3\\n2\\n0\") == \"0\"\nassert solution(\"2\\n6\\n-1\\n0\\n-1\\n2\\n4\\n3\") == \"2\"\nassert solution(\"1\\n8\\n-1\\n0\\n-1\\n2\\n4\\n3\\n5\\n6\\n7\\n9\") == \"3\"\nassert solution(\"1\\n8\\n-1\\n0\\n-1\\n2\\n4\\n3\\n5\\n6\\n7\\n9\\n0\") == \"3\"\n",
        "num_ids_2": 49,
        "num_ids_4": 127
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 1\nassert solution('1\\n-1') == 1\nassert solution('1\\n1') == 0\nassert solution('2\\n1 1') == 1\nassert solution('2\\n1 -1') == 2\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\n\n\n## Subtask 2\n\nThere is another test set. One test can be done in 0 milliseconds. Help Kolya figure out how many milliseconds it takes to solve this test.\n\n## Subtask 3\n\nHelp Kolya understand how his algorithm works.",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n1 0') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n1 0 1') == '2'\nassert solution('2\\n0 0 0 0') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n5\\n2\\n100') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('2\\n5\\n2\\n100') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('2\\n5\\n5\\n2\\n100') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('2\\n5\\n5\\n2\\n100\\n1000000000\\n2000000000') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('2\\n5\\n5\\n2\\n100\\n1000000000\\n2000000000') == '2\\n10\\n1000000000\\n2000000000'\n",
        "num_ids_2": 68,
        "num_ids_4": 145
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n\"\"\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 0\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n\nassert solution('''2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution('''3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution('''4\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2\\n10\\n1000000000\\n2000000000'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 100\") == \"0\"\nassert solution(\"5\\n2 2\") == \"2\"\nassert solution(\"5\\n5 5\") == \"0\"\nassert solution(\"5\\n2 1000000000\\n1000000000 1000000000\") == \"10\"\n\n\n-----Alternate Solutions-----\n",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('2 10\\n1 100\\n5 5\\n2 1000000000\\n1000000000 1000000000') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('3 10\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000') == '10\\n1000000000\\n2000000000'\n\n\n-----Add test cases for larger values of $n$ and $m$-----\n\n-----Time Limit-----\n\n5 seconds\n\n-----Memory Limit-----\n\n64 MB\n\n\n-----Note-----\n\nThis answer is given by me and is correct.\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\na.sort()\nmax_ = 0\nfor i in range(n-1):\n    max_ += abs(a[i] - a[i+1])\nprint(max_)\n",
        "num_ids_2": 89,
        "num_ids_4": 133
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2\\n5\\n1\\n3') == '0\\n2\\n10\\n1\\n3'\nassert solution('1\\n1\\n2\\n2') == '0\\n1\\n1\\n0'\nassert solution('2\\n2\\n1\\n1') == '0\\n1\\n0\\n0'\nassert solution('1\\n1\\n2\\n2') == '0\\n0\\n0\\n0'\n\n\n\n'''",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"77\") == \"4\"\nassert solution(\"777\") == \"4\"\nassert solution(\"7777\") == \"4\"\nassert solution(\"999999999\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"7\") == -1\nassert solution(\"77\") == 1\nassert solution(\"7777\") == 2\nassert solution(\"777777\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\") == 4\nassert solution(\"101\") == -1\nassert solution(\"7777\") == 4\nassert solution(\"777777\") == -1\nassert solution(\"7777777\") == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('7') == 1\nassert solution('7\\n77\\n777\\n777') == 4\nassert solution('101') == 4\nassert solution('101\\n77\\n777\\n777') == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n''') == '4'\nassert solution('''7\n77\n777\n7777\n''') == '-1'\nassert solution('''7\n7\n7\n77\n77\n77\n''') == '4'\nassert solution('''7\n77\n77\n77\n7\n77\n77\n77\n77\n''') == '2'\nassert solution('''7\n77\n77\n77\n77\n77\n77\n77\n77\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(7) == 4\nassert solution(101) == 4\n\nassert solution(77) == -1\nassert solution(777) == -1\nassert solution(7777) == -1\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == 4\nassert solution('7') == -1\nassert solution('7777') == 4\nassert solution('777777') == -1\nassert solution('77777') == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"77\") == \"7\"\nassert solution(\"777\") == \"7\"\nassert solution(\"7777\") == \"7\"\nassert solution(\"777777\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == '4'\nassert solution('77') == '4'\nassert solution('777') == '4'\nassert solution('10177') == '4'\nassert solution('77777') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 4 2 3\\n') == '4'\nassert solution('4 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n') == '0'\nassert solution('2 2\\n1 2\\n') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 94
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4''') == '4'\nassert solution('''2 4 5 3 1''') == '4'\nassert solution('''5 5''') == '1'\nassert solution('''1 2 3 4 5''') == '1'\nassert solution('''15 8''') == '48'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n1 1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n1 1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n\") == \"48\\n\"\n\n\n-----\n\nBefore you start, note that the median of a permutation is the element which is in the middle of the sequence after sorting it in non-decreasing order. You can use any sorting algorithm you want to find the median of a permutation. For example, if you wanted to find the median of a sequence of integers, you would sort the sequence first and then find the median of the sorted sequence.\n\n1. If the length of the sequence is odd, then the median is the value of the middle element.\n2. If the length of the sequence is even, the median is the left of two middle elements.\n\nFor example, if the sequence is: $[7, 1, 2, 9, 6]$, then the median is $7$ since after sorting the sequence, it will look like $[1, 2, 6, 7, 9]$ and the left of two middle elements is equal to $7$.\n\nWrite a program that computes the number of pairs of indices $(l, r)$ ($1 \\le l \\le r \\le n$) such that the value of the median of $p_l, p_{l+1}, \\dots, p_r$ is exactly the given number $m$.\n\nFor example, if the given sequence is: $[7, 1, 2, 9, 6]$ and the value of the median is $7$, then there are four pairs of indices ($1, 2), ($1, 3), ($1, 4), and ($2, 3)$ that satisfy the condition of equality.\n\nInput\nThe first line contains two integers, $n$ and $m$ (1 \\le n \\le 10^5, 1 \\le m \\le n), the length of the given sequence and the required value of the median.\n\nThe second line contains a permutation $p_1, p_2, \\dots, p_n$ ($1 \\le p_i \\le n$). Each integer between $1$ and $n$ occurs in $p$ exactly once.\n\nOutput\nPrint the required number.\n\n\n-----Examples-----\nInput\n5 4\n2 4 5 3 1\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n1 1 2 3 4 5\n\nOutput\n4\n\nInput\n15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n1 1 2 3 4 5\n1 1 2 3 4 5\n\nOutput\n48\n\nInput\n10 13\n1 13 2 14 3 15 4 10 11 12 5 6 7 8 9 10\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n\n\n-----\n\nBefore you start, note that the median of a permutation is the element which is in the middle of the sequence after sorting it in non-decreasing order. You can use any sorting algorithm you want to find the median of a permutation. For example, if you wanted to find the median of a sequence of integers, you would sort the sequence first and then find the median of the sorted sequence.\n\n1. If the length of the sequence is odd, the median is the value of the middle element.\n2. If the length of the sequence is even, the median is the left of two middle elements.\n\nFor example, if the sequence is: $[7, 1, 2, 9, 6]$, then the median is $7$ since after sorting the sequence, it will look like $[1, 2, 6, 7, 9]$ and the left of two middle elements is equal to $7$.\n\nWrite a program that computes the number of pairs of indices $(l, r)$ ($1 \\le l \\le r \\le n$) such that the value of the median of $p_l, p_{l+1}, \\dots, p_r$ is exactly the given number $m$.\n\nFor example, if the given sequence is: $[7, 1, 2, 9, 6]$ and the value of the median is $7$, then there are four pairs of indices ($1, 2), ($1, 3), ($1, 4), and ($2, 3)$ that satisfy the condition of equality.\n\nInput\nThe first line contains two integers, $n$ and $m$ (1 \\le n \\le 10^5, 1 \\le m \\le n), the length of the given sequence and the required value of the median.\n\nThe second line contains a permutation $p_1, p_2, \\dots, p_n$ ($1 \\le p_i \\le n$). Each integer between $1$ and $n$ occurs in $p$ exactly once.\n\nOutput\nPrint the required number.\n\n-----Examples-----\nInput\n5 4\n2 4 5 3 1\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n1 1 2 3 4 5\n\nOutput\n4\n\nInput\n10 13\n1 13 2 14 3 15 4 10 11 12 5 6 7 8 9 10\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n\n\n-----\n\nBefore you start, note that the median of a permutation is the element which is in the middle of the sequence after sorting it in non-decreasing order. You can use any sorting algorithm you want to find the median of a permutation. For example, if you wanted to find the median of a sequence of integers, you would sort the sequence first and then find the median of the sorted sequence.\n\n1. If the length of the sequence is odd, the median is the value of the middle element.\n2. If the",
        "num_ids_2": 94,
        "num_ids_4": 142
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2 3 4\\n') == '1\\n'\nassert solution('1 2\\n1 2\\n') == '2\\n'\nassert solution('1 2\\n1 2\\n') == '2\\n'\nassert solution('2 5\\n1 2 3 4 5\\n') == '4\\n'\nassert solution('1 2 3 4 5\\n1 2 3 4 5\\n') == '1\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n\n\n\n\n-----Best Practice----",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\nassert solution('''30 17\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == '2'\nassert solution('2 2 1') == '1'\nassert solution('3 2 1') == '0'\nassert solution('3 2 1 4') == '1'\nassert solution('5 2 1 3 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 1 2 2') == '2'\nassert solution('1 1 2 1') == '0'\nassert solution('1 1 1 2') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 2 3 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 3\\n') == '1\\n'\nassert solution('3 4\\n1 2 3 4\\n') == '0\\n'\nassert solution('2 4\\n1 2 3 4\\n') == '1\\n'\nassert solution('1 2\\n1 2\\n') == '0\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 10\\n5 5 5 5 5\\n5 5 5 5 5') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n5 5 5 5 5 5') == '2'\n",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6\\n1 3 4 2 1 4 2') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 28\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 66,
        "num_ids_4": 159
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 51\\n5 5 5 5 5\\n') == '-1'\n",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 11\\n5 5 5 5 5\\n') == '2'\nassert solution('5 17\\n5 5 5 5 5\\n') == '2'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n1 3 1 1 2\\n') == '4'\nassert solution('2\\n5\\n5 5 5 5\\n') == '2'\nassert solution('2\\n7\\n5 5 5 5 5\\n') == '-1'\nassert solution('2\\n6\\n5 5 5 5 5\\n') == '-1'\nassert solution('2\\n6\\n5 5 5 5 5\\n') == '-1'\n",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 15\n5 5 5 5 5''') == '1'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''5 15\n5 5 5 5 5''') == '2'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n5 5 5 5 5''') == '-1'\nassert solution('''7 30\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2\n1 3 4 2 1 4 2''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 1 1 2') == '4'\nassert solution('5 15') == '2'\nassert solution('7 10') == '1'\nassert solution('5 26') == '-1'\n\n\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"123\") == \"1\"\nassert solution(\"1234\") == \"-1\"\nassert solution(\"12345\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n\nassert solution('''10\n4 4 2 2 1 1 1 1 1 1 1 1\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n24 21 14 10\n\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n2\n500 500\n\n\"\"\") == \"-1\"\n\nassert solution(\n\"\"\"\n3\n14 5 1\n\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n1 3 6 9 12\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('24 21 14 10') == '3'\nassert solution('500 500') == '0'\nassert solution('14 5 1') == '-1'\nassert solution('14 5 1') == '0'\nassert solution('14 5 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n'+'1\\n'+'1\\n'+'1\\n'+'1\\n') == '0'\nassert solution('1\\n'+'2\\n'+'1\\n'+'3\\n'+'3\\n') == '3'\nassert solution('2\\n'+'42\\n'+'5\\n'+'5\\n'+'5\\n') == '1'\nassert solution('2\\n'+'5\\n'+'5\\n'+'5\\n'+'5\\n') == '0'\nassert solution('3\\n'+'2\\n'+'1\\n'+'0\\n'+'1\\n') == '-1'\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n0\\n') == '-1'\nassert solution('2\\n100\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4''') == '3'\nassert solution('''2''') == '0'\nassert solution('''5''') == '-1'\nassert solution('''3''') == '1'\nassert solution('''14 5 1''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''1 1\n1 1\n''') == '1'\nassert solution('''1 1\n1 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10 100 1000') == '4'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '2'\nassert solution('1 10 100 1000') == '4'\nassert solution('1 2 3 3 2') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2''') == '5'\nassert solution('''6 1''') == '2'\nassert solution('''4 4''') == '4'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 15 15 15\") == \"5\"\nassert solution(\"1 2 15 15 15\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 3\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n3') == '3'\nassert solution('2\\n4') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 1 2 2') == '5'\nassert solution('1 2 3 2 3') == '6'\nassert solution('1 2 3 3 3') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 7') == '8'\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('4 4 4\\n3 3 3\\n2 2 2\\n1 1 1\\n0 0 0\\n') == '2'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 10 7') == '8'\nassert solution('7 15 7') == '4'\nassert solution('4 9 7') == '-1'\nassert solution('1 2 1') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('3 1 7') == '2'\nassert solution('1 2 3') == '-1'\nassert solution('1 2 4') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 5') == '2'\nassert solution('8 3 7') == '8'\nassert solution('2 3 5') == '-1'\nassert solution('8 7 6') == '4'\nassert solution('8 7 6 11') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"8 1 1\") == \"8\"\nassert solution(\"8 7 9\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 10 7\\n8 10 3 6\\n') == '8'\nassert solution('2 10 4\\n1 9 9 6\\n') == '4'\nassert solution('1 10 4\\n9 9 6\\n') == '4'\nassert solution('5 5 5\\n5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5",
        "num_ids_2": 40,
        "num_ids_4": 1733
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"5 9 12 3 7\") == \"5\"\nassert solution(\"5 9 12 3 6\") == \"-1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 1 1') == '0'\nassert solution('2 3 4') == '1'\nassert solution('3 3 1') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo'\nassert solution('3 5 2\\n1\\n2\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo'\nassert solution('4 4 4\\n1\\n2\\n2\\n2\\n') == 'No\\nNo\\nNo\\nNo\\nNo'\nassert solution('5 5 1\\n1\\n2\\n2\\n2\\n') == 'No\\nNo\\nNo\\nNo\\nYes'\n",
        "num_ids_2": 79,
        "num_ids_4": 155
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('2 5 1\\n1\\n2\\n3\\n4\\n5\\n') == 'Yes\\nNo\\nYes\\nYes\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('2 3 1\\n1\\n2\\n3\\n4\\n') == 'Yes\\nYes\\nNo\\nNo\\nNo\\nYes'\nassert solution('5 6 1\\n5\\n1\\n5\\n2\\n3\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nNo'\n",
        "num_ids_2": 85,
        "num_ids_4": 167
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('4 2 2\\n2\\n1\\n2') == 'No\\nNo\\nNo\\nYes'\nassert solution('4 3 4\\n2\\n1\\n3\\n2') == 'Yes\\nNo\\nNo\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 4 4\\n3\\n1\\n3\\n2\\n2') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\n",
        "num_ids_2": 72,
        "num_ids_4": 147
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == 'Yes\\n'\nassert solution('1 3 3') == 'No\\n'\nassert solution('4 3 2') == 'No\\n'\nassert solution('2 3 1') == 'Yes\\n'\nassert solution('1 1 1') == 'Yes\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == '''No\nNo\nYes\nNo\nNo\nNo\n'''\n\nassert solution('''6 4 4\n1\n2\n3\n4\n5\n6\n''') == '''Yes\nYes\nYes\nNo\nYes\nNo\n'''\n\nassert solution('''6 4 4\n4\n2\n1\n3\n6\n5\n''') == '''No\nNo\nNo\nYes\nYes\nYes\n'''\n\nassert solution('''6 4 4\n6\n6\n5\n5\n5\n4\n4\n''') == '''No\nNo\nNo\nYes\nYes\nYes\n'''\n\nassert solution('''6 4 4\n5\n5\n5\n5\n5\n5\n5\n''') == '''No\nNo\nNo\nYes\nYes\nYes\n'''",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 1 1\\n1\\n1\\n1\\n1\\n') == 'No\\nNo\\nNo\\nYes\\nNo'\nassert solution('10 10 10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'Yes\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\nYes'\nassert solution('5 2 3\\n2\\n1\\n3\\n2\\n') == 'No\\nNo\\nNo\\nYes\\nNo'\nassert solution('10 4 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'Yes\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\nYes'\n",
        "num_ids_2": 79,
        "num_ids_4": 182
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2\\n1\\n3\\n2\\n1\\n3') == 'No'\nassert solution('2 2 2\\n1\\n3\\n2\\n1\\n3') == 'No'\nassert solution('3 3 3\\n1\\n3\\n2\\n1\\n3') == 'Yes'\nassert solution('3 3 3\\n1\\n3\\n2\\n1\\n3') == 'Yes'\nassert solution('4 4 4\\n1\\n3\\n2\\n1\\n3') == 'No'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('4 5 6\\n3\\n1\\n2\\n3\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"3 1 3\") == \"No\"\nassert solution(\"3 2 3\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"3 4 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('2 2\\n0 1\\n1 0') == 'NO'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 48
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"0\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 1\\n1 1') == 'YES'\nassert solution('2 2\\n0 1\\n0 1') == 'YES'\nassert solution('1 1\\n0 1\\n0 1') == 'NO'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n1 1 1 1\\n1 1 1 1') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 64
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"YES\\n001\"\nassert solution(\"3 4\") == \"NO\\n010\"\nassert solution(\"3 3\") == \"YES\\n100\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n1 1 1 1\") == \"NO\\n000\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n1 1 1 1\\n0 0 0\") == \"YES\\n010\"\n",
        "num_ids_2": 28,
        "num_ids_4": 72
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n2\\n1\\n\") == \"YES\\n0110\\n0011\"\nassert solution(\"0\\n1\\n0\\n\") == \"NO\"\nassert solution(\"1\\n2\\n1\\n\") == \"NO\"\nassert solution(\"0\\n1\\n0\\n\") == \"NO\"\nassert solution(\"2\\n2\\n0 0\\n1 1\\n1 1\\n\") == \"YES\\n0110\\n0011\"\n",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == None\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n01\\n01\"\nassert solution(\"2 3\\n1 0 0\\n1 1 0\\n0 0 1\\n0 1 0\") == \"NO\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n0 0 0 0\") == \"YES\\n010\\n0000\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n0 0 0 0\") == \"NO\"\nassert solution(\"2 3\\n0 0 0\\n0 0 0\\n1 1 1 1\\n0 0 0 0\") == \"NO\"\n",
        "num_ids_2": 56,
        "num_ids_4": 132
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1, 2, 3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\",
        "num_ids_2": 23,
        "num_ids_4": 1451
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"  \") == \"No\"\nassert solution(\"   \") == \"No\"\nassert solution(\"  1\") == \"No\"\nassert solution(\"  -1\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('121') == 'No'\nassert solution('123') == 'No'\nassert solution('1234') == 'No'\nassert solution('1123') == 'No'\nassert solution('1123123') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"121\") == \"No\"\nassert solution(\"373\") == \"Yes\"\nassert solution(\"436\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"1000000000\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(testinput1) == \"Yes\"\nassert solution(testinput2) == \"No\"\nassert solution(testinput3) == \"Yes\"\nassert solution(testinput4) == \"Yes\"\nassert solution(testinput5) == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"Yes\"\nassert solution(\"1000\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"Yes\"\nassert solution(\"ABEC\") == \"No\"\nassert solution(\"ABCD\") == \"Yes\"\nassert solution(\"ABCDD\") == \"No\"\nassert solution(\"ABEDC\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1'\n) == \"Yes\"\nassert solution(\n    '22'\n) == \"No\"\nassert solution(\n    '11'\n) == \"No\"\nassert solution(\n    '12'\n) == \"Yes\"\nassert solution(\n    '5'\n) == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('73') == 'Yes'\nassert solution('371') == 'Yes'\nassert solution('121') == 'No'\nassert solution('236') == 'Yes'\nassert solution('436') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('7 2 1') == '3'\nassert solution('8 2 1') == '4'\nassert solution('9 2 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\nassert solution(stdin) == '3'\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('10 5 1') == '5'\nassert solution('14 5 3') == '8'\nassert solution('101 0 0 1 0') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''6 3 1''') == '3'\nassert solution('''6 4 1''') == '4'\nassert solution('''6 5 1''') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('8 2 1\\n1 0 0 1 1 0 1') == '4'",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''7 2 1\n1 0 0 1 0 1 0''') == '3'\nassert solution('''8 2 1\n1 0 0 1 0 1 0 1''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin = '''5 2 1\n0 1 0 1 0\n''') == '5'\n\nassert solution(\n    stdin = '''6 2 1\n1 0 0 1 0 1\n''') == '3'\n\nassert solution(\n    stdin = '''8 2 1\n0 0 0 0 0 1 0\n''') == '8'\n\nassert solution(\n    stdin = '''10 2 1\n0 0 0 0 0 1 0 0 0 0\n''') == '10'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint('Test success!')",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\n",
        "num_ids_2": 35,
        "num_ids_4": 45
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\n\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\n\n-----",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint(\"Test cases passed!\")\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(\"tests passed successfully\")\n",
        "num_ids_2": 35,
        "num_ids_4": 45
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\nprint(solution('8-7+6-5+4-3+2-1-0'))\nprint(solution('2+2'))\nprint(solution('112-37'))\n\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nassert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('112-37') == 375\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nassert solution('2-3+7-0-4-9+3-8-5-2-6-1') == -7\nassert solution('3-2+1-2+1+1') == 4\n",
        "num_ids_2": 35,
        "num_ids_4": 76
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''5 3\n''') == 'YES'\nassert solution('''2 4\n''') == 'YES'\nassert solution('''15 4\n''') == 'YES'\nassert solution('''10 3\n''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''4 10\n''') == 'YES'\nassert solution('''4 5\n''') == 'NO'\nassert solution('''3 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0:-1]\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\nassert solution('''13 4\n''') == 'NO'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n2 4\\n4 2\\n4 3\\n4 1\\n1 4\\n3 1\\n'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('13 4') == 'NO'\nassert solution('5 5') == 'NO'\nassert solution('1000000 3') == 'NO'\n",
        "num_ids_2": 106,
        "num_ids_4": 128
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == \"YES\"\nassert solution('1 1\\n1 3\\n3 1\\n3 2\\n2 3\\n3 4\\n4 1\\n1 4\\n3 1\\n4 2\\n2 3\\n1 4\\n3 2\\n2 4\\n1 3') == \"YES\"\nassert solution('2 3') == \"NO\"\nassert solution('3 2') == \"NO\"\nassert solution('4 1') == \"NO\"\n",
        "num_ids_2": 78,
        "num_ids_4": 100
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'\n",
        "num_ids_2": 78,
        "num_ids_4": 89
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4\\n') == 'NO'\nassert solution('15 6\\n') == 'NO'\nassert solution('20 10\\n') == 'NO'\n",
        "num_ids_2": 82,
        "num_ids_4": 108
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\nassert solution('10 1 5\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('8 1 2\\n1 1 1 1 1 1\\n') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''1 1 1 1 1 1''') == '1'\nassert solution('''10 30 30 70 10 10''') == '-1'\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18\\n'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100\\n'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1\\n'\nassert solution('7 2 4\\n2 1 4 7 5 7\\n') == '15\\n'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1\\n'\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == '-1'\n\nassert solution(input = '''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution(input = '''6 1 5\n10 30 30 70 10 10\n''') == '100'\n\nassert solution(input = '''4 3 1\n1 100 1 1\n''') == '-1'\n\nassert solution(input = '''2 1 1\n10\n''') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1'\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18\\n'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1\\n'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('3\\n2\\n') == '-1'\nassert solution('4\\n1\\n') == '-1'\nassert solution('5\\n1\\n') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == answer\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1\\n000111') == '1'\nassert solution('3 1\\n001011') == '3'\nassert solution('4 1\\n000111') == '4'\nassert solution('4 1\\n000001') == '5'\nassert solution('4 1\\n000111') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('4 1\\n0011\\n') == '4'\nassert solution('12 6\\n000010000100\\n') == '15'\n\"\"\"\n\nfrom sys import stdin\n\nn, k = map(int, stdin.readline().split())\ns = stdin.readline()\n\ncost = 0\nfor i in range(n):\n    if s[i] == '1':\n        cost += i * k + max(0, i - k)\n    else:\n        cost += i * k\n\nprint(cost)\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"15\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"7 1\") == \"16\"\nassert solution(\"8 1\") == \"17\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('9999999999999 6999999999') == '99999999999999'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\n\nassert solution('''6 1\n000000\n''') == '21'\n\nassert solution('''4 1\n0011\n''') == '4'\n\nassert solution('''12 6\n000010000100\n''') == '15'\nassert solution('''15 0\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('14 1\\n0000100001000') == '15'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('4 1\\n0011\\n') == '4'\nassert solution('12 6\\n000010000100\\n') == '15'\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"0\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"\")) == \"1\"\nassert solution(input(\"\")) == \"1\"\nassert solution(input(\"\")) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('2 3\\n011') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('10 10\\n000000000000000') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('abba') == 'Yes'\nassert solution('abcde') == 'Yes'\nassert solution('bb') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('ce') == 'No'\nassert solution('co') == 'No'\nassert solution('cl') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aazzle') == 'Yes'\nassert solution('bazzle') == 'No'\nassert solution('azzle') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aaazlel') == 'Yes'\nassert solution('aaazlel') == 'Yes'\nassert solution('aaazlel') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"No\"\nassert solution('aazzel') == \"Yes\"\nassert solution('apple') == \"No\"\nassert solution('azzzel') == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('fool') == 'No'\nassert solution('apple') == 'No'\nassert solution('azzel') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"Hello World\") == \"No\"\nassert solution(\"a\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n1\n2\n2\n2\n3\n''') == '2'\nassert solution('''2\n2\n3\n2\n1\n2\n2\n3\n3\n1\n2\n''') == '3'\nassert solution('''3\n2\n1\n2\n3\n2\n2\n2\n1\n''') == '3'\nassert solution('''4\n2\n1\n2\n3\n2\n2\n2\n1\n''') == '3'\nassert solution('''5\n2\n1\n2\n3\n2\n2\n2\n1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Yes\\n40\"\nassert solution(\"takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"No\\n0\"\n\n\"\"\"\n",
        "num_ids_2": 396,
        "num_ids_4": 396
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\",
        "num_ids_2": 1836,
        "num_ids_4": 1836
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\nN = 3\nM = 2\nC_1 = 2\nC_2 = 3\nC_3 = 4\nA_1_2 = 2\nA_2_3 = 1\nA_3_1 = 5\n''') == '1'\nassert solution(\n'''\nN = 3\nM = 2\nC_1 = 2\nC_2 = 3\nC_3 = 4\nA_1_2 = 2\nA_2_3 = 1\nA_3_1 = 5\n''') == '2'\nassert solution(\n'''\nN = 3\nM = 2\nC_1 = 2\nC_2 = 3\nC_3 = 4\nA_1_2 = 2\nA_2_3 = 1\nA_3_1 = 5\n''') == '3'\n\nassert solution(\n'''\nN = 4\nM = 2\nC_1 = 2\nC_2 = 3\nC_3 = 4\nC_4 = 5\nA_1_2 = 2\nA_2_3 = 1\nA_3_4 = 3\n''') == '1'\nassert solution(\n'''\nN = 4\nM = 2\nC_1 = 2\nC_2 = 3\nC_3 = 4\nC_4 = 5\nA_1_2 = 2\nA_2_3 = 1\nA_3_4 = 3\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2\\n1\\n2\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n2\\n2\\n1\") == \"0\\n2\\n2\\n0\\n\"\n\"\"\"\n\"\"\"\n\n\"\"\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n2\") == \"YES\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n2\") == \"NO\"\nassert solution(\"3\\n1\\n2\\n2\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 50,
        "num_ids_4": 69
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('2 3') == 'NO'\nassert solution('2 3 1') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'\n\nassert solution(\n'''2 700\n3 500\n5 800\n2 400\n7 600'''\n) == '4'\n\nassert solution(\n'''2 700\n3 500\n5 800\n2 400\n7 600\n2 200\n5 100'''\n) == '2'\n\nassert solution(\n'''2 700\n3 500\n5 800\n2 400\n7 600\n2 200\n5 100\n2 100\n5 300\n2 200\n5 300\n2 100\n5 100'''\n) == '2'\n\nassert solution(\n'''2 700\n3 500\n5 800\n2 400\n7 600\n2 200\n5 100\n2 100\n5 300\n2 200\n5 300\n2 100\n5 100\n2 100\n5 300\n2 200\n5 300\n2 100\n5 100'''\n) == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '3'\nassert solution('10 1200') == '4'\nassert solution('100 200') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10') == '3'\nassert solution('2 100') == '2'\nassert solution('1 1') == '0'\nassert solution('1 1000') == '1'\nassert solution('1 100000') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '1'\nassert solution('1 0') == '2'\nassert solution('0 10') == '2'\nassert solution('1 10') == '3'\nassert solution('1 10 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2'\nassert solution('1 1000') == '1'\nassert solution('1 1000 100') == '1'\nassert solution('2 1000 100') == '1'\nassert solution('2 1000 100 100') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('1 100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '0'\nassert solution('1 2') == '1'\nassert solution('1 10') == '1'\nassert solution('3 2') == '1'\nassert solution('2 7') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 100') == '5'\nassert solution('5 300') == '4'\nassert solution('2 200') == '5'\nassert solution('1 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '4'\nassert solution('1 100') == '0'\nassert solution('2 400') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 700\n3 500\n5 800\n10 1000\n30 2000\n50 3000\n70 4000\n100 5000''') == '5'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''5 1\n1 1\n2 1\n3 1\n4 1\n5 1''') == '1'\nassert solution('''2 200\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100\n100 100\n101 100\n102 100\n103 100\n104 100\n105 100\n106 100\n107 100\n108 100\n109 100\n110 100\n111 100\n112 100\n113 100\n114 100\n115 100\n116 100\n117 100\n118 100\n119 100\n120 100\n121 100\n122 100\n123 100\n124 100\n125 100\n126 100\n127 100\n128 100\n129 100\n130 100\n131 100\n132 100\n133 100\n134 100\n135 100\n136 100\n137 100\n138 100\n139 100\n140 100\n141 100\n142 100\n143 100\n144 100\n145 100\n146 100\n147 100\n148 100\n149 100\n150 100\n151 100\n152 100\n153 100\n154 100\n155 100\n156 100\n157 100\n158 100\n159 100\n160 100\n161 100\n162 100\n163 100\n164 100\n165 100\n166 100\n167 100\n168 100\n169 100\n170 100\n171 100\n172 100\n173 100\n174 100\n175 100\n176 100\n177 100\n178 100\n179 100\n180 100\n181 100\n182 100\n183 100\n184 100\n185 100\n186 100\n187 100\n188 100\n189 100\n190 100\n191 100\n192 100\n193 100\n194 100\n195 100\n196 100\n197 100\n198 100\n199 100\n200 100''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n1') == '1'\nassert solution('2\\n3\\n1') == '2'\nassert solution('2\\n4\\n2') == '2'\nassert solution('2\\n4\\n4') == '2'\nassert solution('2\\n5\\n2') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('11\\n1 1 1 1 1 1 1 1 1 1 1') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 4 3 3') == '2'\nassert solution('5\\n1 4 3 3 4 4') == '1'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n4 4 4 4 4 4 4 4 4 4 4') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == str(solution(input()))\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '2'\nassert solution('9') == '3'\nassert solution('10') == '4'\nassert solution('11') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2\\n'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2\\n'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3\\n'\nassert solution('7\\n4 8 8 7 8 4 4 5\\n') == '2\\n'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3\\n'\n",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '2'\nassert solution('''8''') == '2'\nassert solution('''9''') == '3'\nassert solution('''10''') == '3'\nassert solution('''11''') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 4 2 2 3 2 2 4') == '2'\nassert solution('5\\n2 3 4 2 2 3 2 2 4') == '2'\nassert solution('6\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('7\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('8\\n2 3 4 2 2 3 2 2 4') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7''') == '''2'''\nassert solution('''8''') == '''2'''\nassert solution('''9''') == '''3'''\nassert solution('''4''') == '''2'''\nassert solution('''2''') == '''3'''\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 5 6') == '6'\nassert solution('1 2 3\\n4 5 6') == '6'\nassert solution('1 2 3\\n4 5 6') == '6'\nassert solution('1 2 3\\n4 5 6') == '6'\nassert solution('1 2 3\\n4 5 6') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution(\n'''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '100'\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-1\\n') == '-1'\nassert solution('1\\n100\\n') == '100'\nassert solution('5\\n2\\n3\\n10\\n1\\n') == '18'\nassert solution('6\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4\\n1 100 1 1\\n') == '100'\n",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18\\n'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100\\n'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1\\n'",
        "num_ids_2": 47,
        "num_ids_4": 70
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == \"18\"\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == \"-1\"\nassert solution('''4 3 1\n1 100 1 1\n''') == \"100\"\nassert solution('''3 4 1\n1 100 1 1\n''') == \"0\"\nassert solution('''3 4 1\n1 100 1 1\n''') == \"100\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"100\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 'No'\nassert solution('6') == 'Yes'\nassert solution('12') == 'No'\nassert solution('27') == 'Yes'\nassert solution('33') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n7\\n1') == 'Yes'\nassert solution('4\\n7\\n0\\n0') == 'No'\nassert solution('7\\n7') == 'Yes'\nassert solution('8\\n8') == 'Yes'\nassert solution('3\\n7\\n1\\n1') == 'No'\n",
        "num_ids_2": 35,
        "num_ids_4": 61
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"10\\n10\") == \"Yes\"\nassert solution(\"1\\n10\") == \"No\"\nassert solution(\"2\\n5\") == \"No\"\nassert solution(\"6\\n2\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('1') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"9\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"11\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\\n6\") == \"Yes\"\nassert solution(\"3\\n2\\n5\") == \"No\"\nassert solution(\"2\\n2\\n2\") == \"Yes\"\nassert solution(\"4\\n7\\n5\") == \"Yes\"\nassert solution(\"3\\n1\\n3\") == \"Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == \"Yes\"\nassert solution('10') == \"No\"\nassert solution('1') == \"Yes\"\nassert solution('0') == \"Yes\"\nassert solution('12') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('11') == 'No'\nassert solution('100') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n''') == 'Yes'\n\nassert solution('''5\n''') == 'No'\n\nassert solution('''4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == 'Yes'\n\nassert solution('''5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == 'Yes'\n\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n\"\"\".strip()) == \"2 2 6\"\n\nassert solution(\n    \"\"\"\n1\n1 1 1\n\"\"\".strip()) == \"1 1 1\"\n\nassert solution(\n    \"\"\"\n2\n1 1 2\n\"\"\".strip()) == \"1 1 3\"\n\nassert solution(\n    \"\"\"\n4\n0 2 4\n1 1 3\n1 2 5\n2 2 5\n\"\"\".strip()) == \"0 1 3\"\n\nassert solution(\n    \"\"\"\n5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\"\"\".strip()) == \"1 1 1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 5') == '2 2 6'\nassert solution('2 2 5') == '2 2 6'\nassert solution('2 1 5\\n2 2 5') == '2 2 6'\nassert solution('2 1 5\\n2 1 5') == '2 2 6'\nassert solution('2 1 5\\n2 1 5\\n2 1 5') == '2 2 6'\n",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n5\n2 1 8\n1 3 4\n3 4 9\n1 2 3\n2 1 3\n''') == '1 3 4'\nassert solution('''\n5\n3 4 7\n1 2 4\n4 3 7\n2 1 3\n1 2 2\n''') == '3 4 7'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n2\n2 1\n1 2\n''') == '1 2 2'\nassert solution('''\n3\n1 1 1\n1 1 1\n2 2 2\n''') == '2 2 2'\n\nassert solution('''\n1\n5\n1 2 3\n''') == '2 3 3'\n\nassert solution('''\n2\n2 1\n1 2\n''') == '1 2 2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n\"\"\") == \"2 2 6\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\nassert solution('\\n'.join([\n    '4',\n    '2 3 5',\n    '2 1 5',\n    '1 2 5',\n    '3 2 5',\n])) == '2 2 6'\nassert solution('\\n'.join([\n    '5',\n    '0 1 1',\n    '1 0 1',\n    '0 1 1',\n    '0 1 1',\n    '0 1 1',\n])) == '0 0 2'\nassert solution('\\n'.join([\n    '4',\n    '0 1 1',\n    '1 0 1',\n    '0 1 1',\n    '0 1 1',\n    '0 1 1',\n])) == '0 0 2'\nassert solution('\\n'.join([\n    '4',\n    '1 1 0',\n    '0 1 0',\n    '1 1 0',\n    '0 1 0',\n    '1 1 0',\n])) == '1 1 1'\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nprint(\"ok\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('aa') == ''\nassert solution('ab') == 'a'\nassert solution('abc') == 'ab'\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('palindrome') == '0'\nassert solution('redcoder') == '1'\nassert solution('helicopter') == '5'\nassert solution('abacate') == '3'\nassert solution('gadgets') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcdef') == 1\nassert solution('ac') == 1\nassert solution('a') == 0\nassert solution('ab') == 1\nassert solution('abc') == 2\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('redcoder') == 1\nassert solution('abdbca') == 3\nassert solution('bbbba') == 2\nassert solution('lopqopq') == 0\nassert solution('abcba') == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"redcoder\"\n) == \"1\", \"1\"\nassert solution(\n    \"coder\"\n) == \"2\", \"2\"\nassert solution(\n    \"wg\"\n) == \"1\", \"1\"\nassert solution(\n    \"abcdcba\"\n) == \"1\", \"1\"\nassert solution(\n    \"coder\"\n) == \"2\", \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"fdeoefg\") == \"3\"\nassert solution(\"geeksforgeeks\") == \"3\"\nassert solution(\"geeksquiz\") == \"5\"\nassert solution(\"geeksquiz\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"abcba\") == \"2\"\nassert solution(\"abcbbc\") == \"3\"\nassert solution(\"abcbaa\") == \"4\"\nassert solution(\"abcbbb\") == \"5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == 1\nassert solution(\"redcoder\") == 1\nassert solution(\"palsindrome\") == 2\nassert solution(\"annalsindrome\") == 3\nassert solution(\"palindrome\") == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('redcoder') == 1\n\n---\n\nfrom sys import stdin, stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"9\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"0\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == 'Yes'\nassert solution('6') == 'No'\nassert solution('11') == 'Yes'\nassert solution('12') == 'No'\nassert solution('13') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == 'Yes'\nassert solution('10') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(5) == \"Yes\"\nassert solution(15) == \"No\"\nassert solution(10) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10''') == 'Yes'\nassert solution('''2''') == 'No'\nassert solution('''27''') == 'No'\nassert solution('''30''') == 'Yes'\nassert solution('''100''') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == \"Yes\"\nassert solution('10') == \"No\"\nassert solution('11') == \"No\"\nassert solution('22') == \"Yes\"\nassert solution('6') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n') == 'Yes'\nassert solution('100\\n') == 'No'\nassert solution('1000\\n') == 'Yes'\nassert solution('2\\n') == 'Yes'\nassert solution('200\\n') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10''') == 'Yes'\nassert solution('''9''') == 'No'\nassert solution('''1''') == 'Yes'\nassert solution('''2''') == 'Yes'\nassert solution('''3''') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"56\") == \"Yes\"\nassert solution(\"567\") == \"No\"\nassert solution(\"2\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(10) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 4 4 9 7 5\") == \"5\"\nassert solution(\"1 4 4 9 7 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n---Best---\n---108 ms\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4 4 9 7 5''') == '5'\nassert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''6\n4 4 9 7 5''') == '0'\nassert solution('''5\n5 5 5 5 5''') == '1'\nassert solution('''1\n1 1 1 1 1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('5 4 9 7 5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('2 3 1 5 3') == '6'\nassert solution('3 4 1 5 3') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"4 4 7 5 1\") == \"5\"\nassert solution(\"4 4 7 5 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"4 4 7 5 1\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n4 4 9 7 5\n'''\n) == '5'\n\nassert solution(\n'''\n10\n5 6 7 8 9 10\n'''\n) == '0'\n\nassert solution(\n'''\n5\n5 5 5 5 5\n'''\n) == '1'\n\nassert solution(\n'''\n10\n5 6 7 8 9 10\n'''\n) == '1'\n\nassert solution(\n'''\n10\n5 6 7 8 9 10\n'''\n) == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('4 4 9 7 5') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31') == '8'\nassert solution('2 4 3 4 4') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 82
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 4 7 5') == 5\nassert solution('2 1 4 4') == 4\nassert solution('1 1 1 1') == 1\nassert solution('9 2 1 5') == 0\nassert solution('3 4 3 4') == 2\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 1 1 1 1') == '10'\nassert solution('1 1 2 1 1') == '40'\nassert solution('1 1 2 2') == '10'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 5') == '-1'\nassert solution('9 4') == '9'\nassert solution('2 5') == '10'\nassert solution('9 4') == '9'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '10'\nassert solution('2 1') == '10'\nassert solution('1 1') == '1'\nassert solution('2 2') == '-1'\nassert solution('10 10') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"-1\"\nassert solution(\"3 4\") == \"10\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 4\") == \"12\"\nassert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1, 5) == 10\nassert solution(2, 5) == -1\nassert solution(3, 5) == 15\nassert solution(10, 5) == 50\nassert solution(1, 0) == -1\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(solution) == \"10\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"10\"\nassert solution(\"2 4\") == \"-1\"\nassert solution(\"3 4\") == \"12\"\nassert solution(\"4 5\") == \"-1\"\nassert solution(\"5 6\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 1') == '-1'\nassert solution('2 2') == '4'\nassert solution('2 3') == '6'\nassert solution('2 4') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '10'\nassert solution('5 10') == '10'\nassert solution('8 100') == '200'\nassert solution('7 2') == '-1'\nassert solution('2 1') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 1\\n10\\n') == '1'\nassert solution('3 2\\n-1 0 1') == '3'\nassert solution('3 2\\n-1 0 1\\n-1 1 0') == '2'\nassert solution('3 2\\n-1 0 1\\n-1 1 0\\n-1 1 1') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 5') == '5'\nassert solution('2 4') == '2'\nassert solution('5 5') == '3'\nassert solution('100 6') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 10') == '0'\nassert solution('3 10') == '7'\nassert solution('10 10') == '0'\nassert solution('3 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 5\\n10 12 1 2 14\\n10 11 1 2 14\\n10 10 1 2 14\\n10 9 1 2 14\\n10 8 1 2 14\\n10 7 1 2 14\\n10 6 1 2 14\\n10 5 1 2 14\\n10 4 1 2 14\\n10 3 1 2 14\\n10 2 1 2 14') == '5'\n\"\"\"\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 5\n10 12 1 2 14\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 3\n10 11\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 4\n5 10\n1 2 3 4 5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 4\n2 1 3 4 5 6 7 8 9 10\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 5\n5 10 11 12 13 14 15 16 17 18 19 20\n\"\"\") == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 12 1 2 14') == '5'\nassert solution('2 1') == '0'\nassert solution('10 10') == '0'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''3 3\n-1 1 1\n1 -1 -1\n1 1 1''') == '6'\nassert solution('''2 3\n-1 1 1\n1 -1 -1''') == '6'\nassert solution('''2 5\n-1 1 1 2 2\n2 1 1 -1 -1''') == '6'\nassert solution('''3 3\n-1 1 1\n1 -1 -1\n1 1 1''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n1 4\") == \"1011\"\nassert solution(\"2 3\\n1 2\\n4 3\\n2 4\") == \"1011\"\nassert solution(\"1 2\\n2 3\\n1 4\\n4 3\") == \"110110\"\nassert solution(\"1 2\\n2 3\\n1 4\\n4 3\\n2 4\") == \"111100\"\nassert solution(\"1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n3 4\") == \"111010\"\n",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n1 4\\n4 3\\n') == '2'\nassert solution('4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '1'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2'\nassert solution('1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '1'\nassert solution('4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2'\n",
        "num_ids_2": 63,
        "num_ids_4": 134
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 3') == '1110'\nassert solution('2 4') == '1011'\nassert solution('4 6 3') == '101001'\nassert solution('5 6 2') == '111100'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '''2\n1110\n1011'''\n\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5''') == '''1\n101001\n110110\n'''\n\nassert solution('''6 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''2\n111100\n110110\n'''\n\nassert solution('''7 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n''') == '''1\n101001\n110110\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '''2\n1110\n1011\n'''\n\nassert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''1\n101001\n110110\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '''\n2\n1110\n1011\n'''\n\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''\n1\n101001\n110110\n'''\n\nassert solution('''\n4 6 3\n2 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '''\n0\n01100\n110100\n'''\n\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''\n0\n01100\n110100\n01000\n00100\n111000\n'''\n\nassert solution('''\n6 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''\n1\n101001\n110110\n01100\n00100\n111000\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '2'\n\nassert solution(\n'''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n\nassert solution(\n'''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n\nassert solution(\n'''2 2 2\n1 2\n2 1\n''') == '3'\n\nassert solution(\n'''2 2 2\n1 2\n1 1\n2 2\n2 1\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\nOutput\n1\n101001\n\nInput\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\nOutput\n2\n111100\n110110\n\n''') == '2\\n'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\nOutput\n1\n111100\n110110\n\n''') == '2\\n'\nassert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n\nOutput\n2\n1110\n1011\n''') == '2\\n'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\nOutput\n1\n101001\n\n''') == '2\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('input_data/input.txt') == 'YES'\nassert solution('input_data/input2.txt') == 'NO'\nassert solution('input_data/input3.txt') == 'NO'\nassert solution('input_data/input4.txt') == 'YES'\nassert solution('input_data/input5.txt') == 'YES'\n\n\n\"\"\"\n\nimport sys\nsys.path.insert(0, '..')\nfrom test_fixtures import *\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2 1\") == \"NO\"\nassert solution(\"4\\n1 2 1 2\") == \"YES\"\nassert solution(\"3\\n1 2 1\") == \"NO\"\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1\\n2') == 'YES'\nassert solution('2\\n2\\n2') == 'NO'\nassert solution('3\\n1\\n2\\n3') == 'NO'\nassert solution('3\\n1\\n1\\n2') == 'YES'\n",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n4 3 1 2 5 6 7') == 'YES'\nassert solution('10\\n4 5 3\\n7 8 9 10') == 'NO'\nassert solution('2\\n1 1') == 'YES'\nassert solution('1\\n10') == 'NO'\nassert solution('2\\n10 10') == 'NO'\n",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''5\n2 1 1 2 5\n'''\n) == 'YES'\n\nassert solution(\n    '''3\n4 5 3\n'''\n) == 'YES'\n\nassert solution(\n    '''2\n10 10\n'''\n) == 'YES'\n\nassert solution(\n    '''3\n1 2 3\n'''\n) == 'NO'\n\nassert solution(\n    '''4\n4 4 4 4\n'''\n) == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''2 1 1 2 5''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''4 5 3''') == 'YES'\nassert solution('''2''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 1\\n') == 'NO'\nassert solution('2\\n1 2\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n2 1 1 2 5\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n3\n4 5 3\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n2\n10 10\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n\"\"\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\\n4 5 6 7\") == \"YES\"\nassert solution(\"2\\n1 2\\n4 5\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n2 3 4\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n2 3 4\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n2 3 4\\n2 3 4\") == \"YES\"\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == '9'\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == '4999999999996'\nassert solution(\"10 4\\n-3 -6 5 4\") == '-1'\nassert solution(\"3 1 2 3\") == '1'\nassert solution(\"2 1 2\") == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 81
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[29:33]\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4\\n') == '-1'\nassert solution('2 4\\n-3 -6 5 4\\n') == '5'",
        "num_ids_2": 50,
        "num_ids_4": 93
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000000000000 5') == '9'\nassert solution('-1 0 0 0 0') == '-1'\nassert solution('1000000000000 5') == '9'\nassert solution('-1 0 0 0 0') == '-1'\nassert solution('-1 0 0 0 0') == '-1'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996'\n\n\n\nimport sys\nsys.setrecursionlimit(10000)",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4\\n') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4\\n') == '-1'",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"-1\"\n\nassert solution(\"1000 6\\n-3 -6 5 4\\n-1 0 0 0 0\") == \"4999999999996\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n\nprint('Testcase 0: PASSED')",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('AB') == 'AB'\nassert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AABAZZZ') == 'ZZ'\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('A') == ''\nassert solution('ABBAC') == 'AB'\nassert solution('ABCD') == 'AB'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"ABACABA\n\"\"\") == \"AB\"\nassert solution(\n\"\"\"ZZZAA\n\"\"\") == \"ZZ\"\nprint(\"Tests passed successfully.\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"BA\") == \"AB\"\nassert solution(\"BA\") == \"AB\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABACABA') == 'AB'\nassert solution('AZAAAZAA') == 'AZ'\nassert solution('ABCD') == ''\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('BBAABBAA') == 'BB'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('ABCDCDC') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ABCDXYZ''') == ''\nassert solution('''ABCABCABCABCABC''') == 'ABC'\nassert solution('''AAABBAA''') == 'AB'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ABCA\") == \"\"\nassert solution(\"AA\") == \"\"\nassert solution(\"ZZAAZZ\") == \"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == 'test'\nassert solution('west') == 'east'\nassert solution('codeforces') == 'cefors'\nassert solution('yes') == 'eis'\nassert solution('b') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"east\") == \"west\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"b\") == \"a\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('where', 'there') == 'here'\nassert solution('a', 'b') == 1\nassert solution('', '') == 0\nassert solution('test', 'test') == 0\nassert solution('ab', 'ab') == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"west\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"hello\") == \"\"\nassert solution(\"yes\") == \"yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"west\"\nassert solution(\"west\") == \"\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"codeforces\") == \"es\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('where') == 'here'\nassert solution('a') == ''\nassert solution('codeforces') == 'es'\nassert solution('codeforces') == 'es'\nassert solution('codeforces') == 'es'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 'e'\nassert solution('codeforces') == 'es'\nassert solution('b') == 'a'\nassert solution('yes') == 'y'\n\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 7 11''') == '2'\nassert solution('''3 4\n1 7 11''') == '2'\nassert solution('''3 4\n1 7 11''') == '2'\nassert solution('''3 4\n1 7 11''') == '2'\nassert solution('''3 4\n1 7 11''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n1 7 11\"\"\") == \"2\"\nassert solution(\"\"\"3 2\n1 7 11\"\"\") == \"1\"\nassert solution(\"\"\"2 3\n1 7 11\"\"\") == \"1\"\nassert solution(\"\"\"1 1\n1 1\"\"\") == \"0\"\nassert solution(\"\"\"1 1\n1 1\"\"\") == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[2]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('2 3 4 5') == '3'\nassert solution('2 3 4') == '4'\nassert solution('1 3 5 7 9 11 12') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 7 11') == '2'\nassert solution('3 10') == '1'\nassert solution('1 100') == '1'\nassert solution('10 100') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"2\"\nassert solution(sample_input2) == \"2\"\nassert solution(sample_input3) == \"4\"\nassert solution(sample_input4) == \"5\"\nassert solution(sample_input5) == \"6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n4 5 6\") == \"4\"\nassert solution(\"4 2 1\\n5 6 7\") == \"2\"\nassert solution(\"8 2 1\\n8 5 4\\n9 1 7\") == \"1\"\nassert solution(\"2 1\\n1 1\") == \"0\"\nassert solution(\"1 2\\n3 4\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is True\nassert solution('a') is True\nassert solution('akasaka') is True\nassert solution('akasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasakasak",
        "num_ids_2": 16,
        "num_ids_4": 1743
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"b\") == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"z\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 42
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('baba') == 'No'\nassert solution('caba') == 'Yes'\nassert solution('dad') == 'Yes'\nassert solution('akasaka') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('s') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('aa') == 'Yes'\nassert solution('aba') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''ababa''') == 'Yes'\nassert solution('''abbaaa''') == 'No'\nassert solution('''abbbaa''') == 'No'\nassert solution('''aaaaa''') == 'No'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asakasak') == 'Yes'\nassert solution('asakasakasaka') == 'Yes'\nassert solution('asakasakaakasaka') == 'Yes'\nassert solution('akasaka') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"aibohphobia\") == \"No\"\nassert solution(\"akasaka\") == \"Yes\"\nassert solution(\"aba\") == \"Yes\"\nassert solution(\"abac\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('k') == 'Yes'\nassert solution('aadaa') == 'Yes'\nassert solution('kahazsa') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('akasaka') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('asdasd') == 'No'\nassert solution('abracadabra') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hamburger\") == \"Yes\"\nassert solution(\"hi\") == \"No\"\nassert solution(\"tactcoa\") == \"Yes\"\nassert solution(\"xxxxxx\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('198 0.9999999999999998') == '217'\nassert solution('198 0.9999999999999') == '217'\nassert solution('198 1.0') == '217'\nassert solution('198 2.0') == '217'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1864
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == 2\nassert solution('9901 990') == 1009\nassert solution('9902 990') == 990\nassert solution('9903 990') == 990\nassert solution('9904 990') == 990\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'198 1.10'\n) == '217'\n\nassert solution(\n'198 1.00'\n) == '217'\n\nassert solution(\n'0 0'\n) == '0'\n\nassert solution(\n'1 0'\n) == '0'\n\nassert solution(\n'0 1'\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 0.5') == '1'\nassert solution('2 0.5') == '0'\nassert solution('1 1') == '1'\nassert solution('9 9.9') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0, 1) == '0'\nassert solution(1, 0) == '0'\nassert solution(2, 2) == '4'\nassert solution(3, 3) == '6'\nassert solution(4, 3) == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('0 1') == '0'\nassert solution('1 2') == '0'\nassert solution('4 1') == '4'\nassert solution('0 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('10 10') == '10'\nassert solution('1 1') == '1'\nassert solution('9 9.9') == '18'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('1 2') == '1'\nassert solution('10 1') == '1'\nassert solution('10 0.1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n5') == '1'\nassert solution('6\\n7') == '3'\nassert solution('4\\n7') == '0'\nassert solution('7\\n4') == '0'\nassert solution('3\\n8') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''7\n6\n1\n2\n3\n2000000000\n763243547\n''') == '0'\nassert solution('''7\n7\n1\n2\n3\n2000000000\n763243547\n''') == '1'\nassert solution('''7\n7\n1\n2\n3\n2000000000\n763243547\n''') == '999999999'\nassert solution('''7\n7\n1\n2\n3\n2000000000\n763243547\n''') == '381621773'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == \"0\"\nassert solution('2\\n1') == \"0\"\nassert solution('2\\n2') == \"1\"\nassert solution('2\\n3') == \"2\"\nassert solution('2\\n4') == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999\\n381621773'\nassert solution('2\\n1') == '0'\nassert solution('7\\n763243547') == '3'\nassert solution('7\\n763243547') == '3'\nassert solution('7\\n8') == '0'\n",
        "num_ids_2": 65,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('4 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 5 6\\n1 2\\n2 3\\n3 4\\n4 1\\n5 2\\n5 1\\n5 3\\n5 6\\n6 1') == '2'\nassert solution('5 5 6\\n1 2\\n2 3\\n3 4\\n4 1\\n5 2\\n5 1\\n5 3\\n5 6\\n6 1') == '2'\n",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('3 4 4\\n1 2\\n2 3\\n3 1\\n3 4\\n3 1') == '0'\nassert solution('4 6 5\\n1 2\\n2 3\\n3 4\\n4 1\\n4 6\\n3 1\\n2 4') == '1'\nassert solution('8 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 4\\n7 4\\n8 4') == '0'\n",
        "num_ids_2": 76,
        "num_ids_4": 148
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 7\\n9 7\\n7 1\") == \"1\"\nassert solution(\"3 4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4\") == \"0\"\nassert solution(\"3 3 3\\n1 2\\n1 2\\n2 3\\n3 1\\n3 4\\n4 3\\n2 1\") == \"2\"\nassert solution(\"1 2\\n1 2\\n2 1\\n2 1\\n3 1\") == \"0\"\n",
        "num_ids_2": 88,
        "num_ids_4": 168
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1''') == '1'\nassert solution('''5 4 9\n1 2\n2 3\n3 4\n4 1\n5 1\n1 3\n2 5\n5 7\n7 1''') == '0'\nassert solution('''2 2 5\n1 2\n2 3\n3 1\n1 4\n4 5\n1 6\n6 7\n7 1''') == '0'\nassert solution('''2 2 5\n1 2\n2 3\n3 4\n4 1\n1 5\n5 6\n1 7\n7 8\n8 9\n9 1''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\"\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n\n''') == '1'\nassert solution('''5 4 4\n1 2\n2 3\n3 4\n4 1\n\n''') == '0'\nassert solution('''1 4 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''8 4 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 1''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 9 1''') == '3'\nassert solution('''5 4 5''') == '1'\nassert solution('''5 4 1''') == '1'\nassert solution('''5 4 4''') == '0'\nassert solution('''5 4 5\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('7 7 1\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '1'\nassert solution('1 1 1\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '0'\nassert solution('9 9 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 1\\n1 10\\n10 11\\n11 1\\n1 12\\n12 13\\n13 1\\n1 14\\n14 15\\n15 1\\n1 16\\n16 17\\n17 1\\n1 18\\n18 19\\n19 1\\n1 20\\n20 21\\n21 1\\n1 22\\n22 23\\n23 1\\n1 24\\n24 25\\n25 1\\n1 26\\n26 27\\n27 1\\n1 28\\n28 29\\n29 1\\n1 30\\n30 31\\n31 1\\n1 32\\n32 33\\n33 1\\n1 34\\n34 35\\n35 1\\n1 36\\n36 37\\n37 1\\n1 38\\n38 39\\n39 1\\n1 40\\n40 41\\n41 1\\n1 42\\n42 43\\n43 1\\n1 44\\n44 45\\n45 1\\n1 46\\n46 47\\n47 1\\n1 48\\n48 49\\n49 1\\n1 50\\n50 51\\n51 1\\n1 52\\n52 53\\n53 1\\n1 54\\n54 55\\n55 1\\n1 56\\n56 57\\n57 1\\n1 58\\n58 59\\n59 1\\n1 60\\n60 61\\n61 1\\n1 62\\n62 63\\n63 1\\n1 64\\n64 65\\n65 1\\n1 66\\n66 67\\n67 1\\n1 68\\n68 69\\n69 1\\n1 70\\n70 71\\n71 1\\n1 72\\n72 73\\n73 1\\n1 74\\n74 75\\n75 1\\n1 76\\n76 77\\n77 1\\n1 78\\n78 79\\n79 1\\n1 80\\n80 81\\n81 1\\n1 82\\n82 83\\n83 1\\n1 84\\n84 85\\n85 1\\n1 86\\n86 87\\n87 1\\n1 88\\n88 89\\n89 1\\n1 90\\n90 91\\n91 1\\n1 92\\n92 93\\n93 1\\n1 94\\n94 95\\n95 1\\n1 96\\n96 97\\n97 1\\n1 98\\n98 99\\n99 1\\n') == '0'\n",
        "num_ids_2": 104,
        "num_ids_4": 212
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('4 3 2 1') == '5'\nassert solution('1 1 1 4 4 4') == '5'\nassert solution('1 1 1 4 4 4 1') == '6'\nassert solution('3 2 4 1') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n
        "num_ids_2": 34,
        "num_ids_4": 1585
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3') == '4'\nassert solution('2\\n3 4') == '4'\nassert solution('1\\n3') == '1'\nassert solution('5\\n1 2 3 4 5') == '5'\nassert solution('7\\n1 3 4 5 6 7') == '8'\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 4 4 4') == '5'\nassert solution('1 1 1 4 4 4 1') == '5'\nassert solution('1 1 1 4 4 4 1 1') == '5'\nassert solution('1 1 1 4 4 4 1 1 1') == '5'\nassert solution('1 1 1 4 4 4 1 1 1 1') == '5'\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('6\\n1 2 1 1 4 4') == '6'\nassert solution('6\\n1 2 3 1 4 4') == '5'\nassert solution('6\\n1 2 3 4 1 4') == '5'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n\n\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''5 4\n3 2\n3 4\n3 5\n1 4\n1 2\n1 3\n3 4\n2 3\n2 4\n2 5\n4 5''') == '01100000\\n02222222\\n2333333\\n4566666\\n7777777'\nassert solution('''2 3\n1 4\n2 4\n1 5\n2 5\n3 5''') == '01100000\\n02000200\\n0300003\\n05000505'\nassert solution('''10 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 10''') == '10100\\n11111\\n10101\\n11101\\n10102\\n11102\\n10103\\n11103\\n10104\\n11104\\n10105\\n11105\\n10106\\n11106\\n10107\\n11107\\n10108\\n11108\\n10109\\n11109\\n10110\\n111110'\nassert solution('''1003 2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 10\n100 10''') == '10100\\n11111\\n10101\\n11101\\n10102\\n11102\\n10103\\n11103\\n10104\\n11104\\n10105\\n11105\\n10106\\n11106\\n10107\\n11107\\n10108\\n11108\\n10109\\n11109\\n10110\\n111110'\n\nwith open('data/test_file', 'r') as test_file:\n    ",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[-1]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\nassert solution('3 2\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n\"\"\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"1 1\") == \"00000\"\nassert solution(\"2 2\") == \"00001\"\nassert solution(\"2 3\") == \"00010\"\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"1 2\\n1 2\") == \"000001000001\"\nassert solution(\"2 3\\n1 32\\n2 63\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"1 2\\n1 2\") == \"000001000001\"\nassert solution(\"2 2\\n1 32\\n2 63\") == \"000001000001\\n000002000001\"\n",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n10 8 40\n''') == \"2\"\nassert solution('''4\n2 10 8 40\n''') == \"2\"\nassert solution('''10\n200 1 100 200 100 200 100 200 200 100 200 100 200 100 200\n''') == \"0\"\nassert solution('''100\n200 1 100 200 100 200 100 200 200 100 200 100 200 100 200\n''') == \"100\"\nassert solution('''1000\n
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('1 10 2 3') == '1'\nassert solution('1 2 3 4') == '-1'\nassert solution('1 2 3 4 5') == '-1'\nassert solution('2 3 4 5 6') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 10 8 40\\n') == '2'\nassert solution('2\\n1 10 8 40\\n') == '2'\nassert solution('2\\n1 10 8 40\\n') == '2'\nassert solution('2\\n1 10 8 40\\n') == '2'\nassert solution('2\\n1 10 8 40\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n\") == \"2\"\nassert solution(\"1 1 1\\n\") == \"1\"\nassert solution(\"2 2 4\\n\") == \"2\"\nassert solution(\"1 100 100\\n\") == \"99\"\nassert solution(\"1 100 100 1\\n\") == \"99\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 10 8 40\") == \"2\"\nassert solution(\"2\\n2 10 8 40\\n2 10 10 10 10\\n2 10 10 10 10\\n2 10 8 40\\n2 10 10 10 10\\n2 10 10 10 10\\n2 10 10 10 10\") == \"1\"\nassert solution(\"2\\n1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\") == \"4\"\nassert solution(\"2\\n1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\") == \"2\"\nassert solution(\"2\\n2 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\\n2 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 73,
        "num_ids_4": 161
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''6\n1 2 4 1 3 2''') == '2'\nassert solution('''10\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3''') == '6'\nassert solution('''100\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3''') == '50'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\n2 10 8 40\n''') == '2', \"Error: {}\".format(solution('''\n4\n2 10 8 40\n'''))\n\nassert solution(\n'''\n1\n1\n1\n1\n''') == '2', \"Error: {}\".format(solution('''\n1\n1\n1\n1\n'''))\n\nassert solution(\n'''\n5\n3 1 1 1 1\n2 2 2 2\n''') == '3', \"Error: {}\".format(solution('''\n5\n3 1 1 1 1\n2 2 2 2\n'''))\n\nassert solution(\n'''\n1\n1\n1\n1\n''') == '2', \"Error: {}\".format(solution('''\n1\n1\n1\n1\n'''))\n\nassert solution(\n'''\n2\n1 3 4\n2 3\n''') == '2', \"Error: {}\".format(solution('''\n2\n1 3 4\n2 3\n'''))",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List, Tuple",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__,_____<__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nprint(\"Tests passed successfully.\")",
        "num_ids_2": 54,
        "num_ids_4": 103
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == '0101'\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is False\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 107
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"?(_-)/___>__-.______________-___/____:--<___,__<____,____<_____,_____<______,______<_______.______________,__________,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,_-,",
        "num_ids_2": 1575,
        "num_ids_4": 1575
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 11\\n2 1 5\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\n",
        "num_ids_2": 47,
        "num_ids_4": 109
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m, k = map(int, stdin.split())\na = [list(map(int, stdin.split())) for i in range(n)]\n\ndp = [[0]*(m+1) for i in range(n+1)]\ndp[1][1] = 1\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        dp[i][j] = a[i-1][j-1] ^ dp[i-1][j] ^ dp[i][j-1]\n\nprint(dp[n][m] ^ k)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 2''') == '5'\nassert solution('''3 4 1000000000000000000''') == '0'\nassert solution('''3 4 1''') == '3'\nassert solution('''3 4 0''') == '5'\nassert solution('''7 10 0''') == '7'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 2\n2 1 5\n7 10 0\n12 6 4''') == '3'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '0'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\nassert solution('''2 3 4\n1 2 3 1\n4 3 2 1\n7 5 6 1''') == '0'\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == \"1\"\nassert solution('2 3 4') == \"1\"\nassert solution('2 2 2') == \"0\"\nassert solution('2 2 1') == \"1\"\nassert solution('3 3 2') == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\nassert solution('z1') == 'z'\nassert solution('z') == 'z'\n",
        "num_ids_2": 37,
        "num_ids_4": 58
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n'''",
        "num_ids_2": 37,
        "num_ids_4": 47
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('codeforces') =='secrofedoc'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\nassert solution('a') == 'a'\nassert solution('aaaaa') == 'aaaaa'\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 47
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"p\") == \"p\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"codeforces\") == \"codeforces\"\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('6 6') == 21\nassert solution('3 10') == 12\nassert solution('2 100000000') == 8\n\"\"\"\n\nfrom sys import stdin, stdout\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('300 800') == '700'\nassert solution('1501 1000') == '1501'\nassert solution('1000 1000') == '2000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"5 15\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"100 9999999999\") == \"100000001\"\n",
        "num_ids_2": 24,
        "num_ids_4": 43
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\n\nassert solution(\"5 10\") == \"\"\n\nassert solution(\"11 12\") == \"\"\n\nassert solution(\"5 14\") == \"19\"\n\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"0 0\")) == \"0\"\nassert solution(input(\"0 0\")) == \"0\"\nassert solution(input(\"1 3\")) == \"4\"\nassert solution(input(\"2 4\")) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1875\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1634
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"++++++++++>\"\n\n\"\"\"\n\nimport sys\nfrom collections import Counter",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"3+2+1\") == \"+++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[<-]<\\n+++++>\\n++[",
        "num_ids_2": 69,
        "num_ids_4": 1634
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"+>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"++++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"1++-1\") == \"++++++++++>\\n++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9++9\") == \"++++++++++>\\n++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"5+5\") == \"+>\\n+>\\n++>\\n++>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>\\n+>",
        "num_ids_2": 68,
        "num_ids_4": 139
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Example #1\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Example #2\"\nassert solution(\"2+3+5\") == \"++>++>\", \"Example #3\"\nassert solution(\"-4+5\") == \"->\", \"Example #4\"\nassert solution(\"99+2-1\") == \">>[-]<\", \"Example #5\"\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2 * 3 + 4 * 5 + 6\") == \"1126\"\nassert solution(\"1 + (2 * 3) + (4 * (5 + 6))\") == \"1126\"\nassert solution(\"1 + 2 * 3 + 4 * 5 + 6\") == \"1126\"\nassert solution(\"1 + (2 * 3) + (4 * (5 + 6))\") == \"1126\"\nassert solution(\"1 + (2 * 3) + 4 * 5 + 6\") == \"1126\"\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2+3'''\n) == '++>','should return ++>'\n\nassert solution(\n'''9-7'''\n) == '+++++++++>','should return+++++++++>'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3-7') == '++>'\nassert solution('2+3-7') == '++>'\nassert solution('9-7') == '+++++++++>'\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Should print ++>\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Should print+++++++++>\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Should print+++++++++>\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '1234'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '100011222123456789012345612345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output_\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '2'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\",
        "num_ids_2": 27,
        "num_ids_4": 87
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56') == '1\\n2\\n5\\n2\\n0'\nassert solution('4\\n2132\\n506\\n999999999999999999\\n1000000000000000000') == '8\\n2\\n4\\n1'\nassert solution('1\\n2\\n2\\n2\\n2') == '4'\n'''",
        "num_ids_2": 75,
        "num_ids_4": 97
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"123\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\") == \"234567890123456789012345678901234567890\"\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 113
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('1') == '1'\nassert solution('1123456789123456789101112131415161718192021222324252627282930313233343536373839401' +\n'41234567891011121314151617181920212223242526272829303132333435363738394014412345678910111213141516171819202122232425262728293031323334353637383940145123456789101112131415161718192021222324252627282930313233343536373839401456123456789101112131415161718192021222324252627282930313233343536373839401471234567891011121314151617181920212223242526272829303132333435363738394014812345678910111213141516171819202122232425262728293031323334353637383940149123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401')\nassert solution('91234567891011121314151617181920212223242526272829303132333435363738394014412345678910111213141516171819202122232425262728293031323334353637383940145123456789101112131415161718192021222324252627282930313233343536373839401456123456789101112131415161718192021222324252627282930313233343536373839401471234567891011121314151617181920212223242526272829303132333435363738394014812345678910111213141516171819202122232425262728293031323334353637383940149123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401') == '912345678910111213141516171819202122232425262728293031323334353637383940144123456789101112131415161718192021222324252627282930313233343536373839401451234567891011121314151617181920212223242526272829303132333435363738394014561234567891011121314151617181920212223242526272829303132333435363738394014712345678910111213141516171819202122232425262728293031323334353637383940148123456789101112131415161718192021222324252627282930313233343536373839401491234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401512345678910111213141516171819202122232425262728293031323334353637383940151234567891011121314151617181920212223242526272829303132333435363738394015123456789101112131415161718192021222324252627282930313233343536373839401'\nassert solution('9123456789101112131415161718192021222324252627282930313233343536373839401441234567891011121314151617181920212223242526272829303132333435363738",
        "num_ids_2": 52,
        "num_ids_4": 1093
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56') == '8\\n2\\n4\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56') == '8\\n2\\n4\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56') == '8\\n2\\n4\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56') == '8\\n2\\n4\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56') == '8\\n2\\n4\\n1'\n",
        "num_ids_2": 368,
        "num_ids_4": 736
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0]\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('575') == '4'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('5') == '0'\nassert solution('7') == '4'\nassert solution('10') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('575') == 4\nassert solution('200') == 0\nassert solution('1') == 0\nassert solution('999') == 8\nassert solution('998') == 7\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5750') == 4\nassert solution('12097') == 0\nassert solution('5071') == 2\nassert solution('90009') == 0\nassert solution('5750') == 4\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('17') == 4\nassert solution('39') == 2\nassert solution('57') == 1\nassert solution('59') == 0\nassert solution('159') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''575''') == '4'\n'''\n    The first line contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe only line of each test case contains an integer N.\n\nOutput\nFor each test case, output a single line containing the answer to the problem.\n\nConstraints\n1\u2264T\u2264100\n1\u2264N\u2264109\nSubtasks\nSubtask #1 (20 points): N\u2264105\nSubtask #2 (80 points): original constraints\n\nSample Input\n1\n9\n\nSample Output\n4\n\nExplanation\n\nIn the first test case, N=9, and there are 4 numbers in the range [1,9] that are Shichi-Go-San numbers.\n\nIn the second test case, N=9, and there are 4 numbers in the range [1,9] that are Shichi-Go-San numbers.\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('567') == '4'\nassert solution('5678') == '8'\nassert solution('56789') == '5'\nassert solution('567891') == '8'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('000') == 1\nassert solution('001') == 2\nassert solution('01') == 1\nassert solution('11') == 2\nassert solution('110') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == '1'\nassert solution('011') == '2'\nassert solution('111') == '0'\nassert solution('01111') == '2'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('01') == '1'\nassert solution('00') == '0'\nassert solution('000') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('000') == '1'\nassert solution('111') == '2'\nassert solution('00000') == '1'\nassert solution('11110') == '3'\nassert solution('00111') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"000\") == 1\nassert solution
        "num_ids_2": 1813,
        "num_ids_4": 1813
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1010\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"01\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 1\nassert solution
        "num_ids_2": 16,
        "num_ids_4": 1813
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('00') == '1'\nassert solution('010') == '0'\nassert solution('0110') == '2'\nassert solution('01001000') == '2'\nassert solution('010') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"001\") == 2\nassert solution(\"010\") == 1\nassert solution(\"011\") == 2\nassert solution(\"100\") == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 8 2 22 4 10 21') == 'DENIED'\nassert solution('6 8 2 22 4 10 19') == 'DENIED'\nassert solution('6 8 2 22 4 10 19') == 'DENIED'\nassert solution('6 8 2 22 4 10 19') == 'DENIED'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 'APPROVED'\nassert solution('2\\n2 2') == 'DENIED'\nassert solution('2\\n1 2') == 'APPROVED'\nassert solution('1\\n1') == 'DENIED'\nassert solution('5\\n1 2 3 4 5') == 'APPROVED'\n",
        "num_ids_2": 129,
        "num_ids_4": 159
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'DENIED'\nassert solution('2\\n1') == 'DENIED'\nassert solution('1\\n1\\n1') == 'APPROVED'\nassert solution('1\\n1\\n1\\n1') == 'APPROVED'\nassert solution('2\\n2\\n1') == 'APPROVED'\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'APPROVED'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == 'DENIED'\nassert solution('''6 7 9 10 31''') == 'APPROVED'\nassert solution('''6 7 9 10 30''') == 'DENIED'\nassert solution('''6 7 9 10 29''') == 'DENIED'\nassert solution('''6 7 9 10 28''') == 'APPROVED'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 8') == 'APPROVED'\nassert solution('5\\n4 2 5') == 'APPROVED'\nassert solution('5\\n3 2 5') == 'DENIED'\nassert solution('5\\n3 2 4') == 'APPROVED'\nassert solution('5\\n2 2 2') == 'APPROVED'\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n6 7 9 10 31') == 'APPROVED'\nassert solution('3\\n6 3 2 1') == 'DENIED'\nassert solution('5\\n4 3 2 1') == 'APPROVED'\nassert solution('5\\n4 3 2 1') == 'APPROVED'\nassert solution('5\\n7 2 2 2 4') == 'APPROVED'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'APPROVED'\nassert solution(stdin) == 'APPROVED'\nassert solution(stdin) == 'DENIED'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'APPROVED'\nassert solution('1 1') == 'DENIED'\nassert solution('3 3') == 'APPROVED'\nassert solution('2 1') == 'DENIED'\nassert solution('2 2') == 'APPROVED'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''1\n1''') == 'DENIED'\nassert solution('''1\n-1''') == 'DENIED'\nassert solution('''1\n2''') == 'DENIED'\nassert solution('''1\n-3''') == 'DENIED'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDDRULDUDRULU') == 'No'\nassert solution('RUDDRULDRULU') == 'Yes'\nassert solution('RUDRDDRULU') == 'No'\nassert solution('DDRRUDU') == 'No'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRUDUDLLDL') == 'Yes'\nassert solution('LDDURUULRLRDDDDDL') == 'No'\nassert solution('DDLDURUURRRRLLRDDDL') == 'Yes'\nassert solution('RDRUDDLURRL') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LDRU\") == \"No\"\nassert solution(\"LDRUDRUD\") == \"Yes\"\nassert solution(\"RDRUDD\") == \"Yes\"\nassert solution(\"RRD\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Yes'\nassert solution('RUDLR') == 'Yes'\nassert solution('RUDLRUDLUDUDLRLD') == 'Yes'\nassert solution('RUDRUDLDRL') == 'No'\nassert solution('RUDUDUDUDUDUDUDUD') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 57
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDDRUD\") == \"Yes\"\nassert solution(\"RUDRUD\") == \"No\"\nassert solution(\"RDRDRRUULR\") == \"Yes\"\nassert solution(\"LLRDRUD\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == 'Yes'\nassert solution(\"RLLUDD\") == 'No'\nassert solution(\"RUUUDD\") == 'Yes'\nassert solution(\"LLRDD\") == 'No'\nassert solution(\"LLUDD\") == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDLU') == 'No'\nassert solution('DRLU') == 'Yes'\nassert solution('RDLULDRUDDLL') == 'Yes'\nassert solution('RDLULDRUDRUDDLL') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDDD') == 'No'\nassert solution('RUD') == 'Yes'\nassert solution('LU') == 'Yes'\nassert solution('LDD') == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UUUUDD\") == \"No\"\nassert solution(\"RUUDLDR\") == \"No\"\nassert solution(\"RUDUUDUD\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '8'\nassert solution('3\\n3\\n3\\n3\\n3') == '11'\nassert solution('4\\n4\\n4\\n4\\n4') == '12'\nassert solution('5\\n5\\n5\\n5\\n5') == '16'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n3\\n2\\n4\\n3\\n5\") == \"15\"\nassert solution(\"7\\n3\\n2\\n4\\n3\\n5\") == \"15\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('8\\n3\\n2\\n4\\n3\\n5') == '10'\nassert solution('6\\n3\\n2\\n4\\n3\\n5') == '8'\nassert solution('7\\n3\\n2\\n4\\n3\\n5') == '10'\nassert solution('9\\n3\\n2\\n4\\n3\\n5') == '12'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7'\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n3\n2\n4\n3\n5\n\"\"\".strip()) == \"7\"\n\nassert solution(\n\"\"\"10\n3\n2\n4\n3\n5\n\"\"\".strip()) == \"15\"\n\nassert solution(\n\"\"\"1\n1\n1\n1\n1\n1\n\"\"\".strip()) == \"0\"\n\nassert solution(\n\"\"\"1\n2\n2\n2\n2\n2\n\"\"\".strip()) == \"3\"\n\nassert solution(\n\"\"\"1\n5\n5\n5\n5\n5\n\"\"\".strip()) == \"10\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5\n3\n2\n4\n3\n5\"\"\") == \"7\"\nassert solution(\n\"\"\"1\n1\n1\n1\n1\n1\"\"\") == \"0\"\nassert solution(\n\"\"\"8\n1\n1\n1\n1\n1\n1\n1\n1\"\"\") == \"0\"\nassert solution(\n\"\"\"8\n2\n2\n2\n2\n2\n2\n2\"\"\") == \"0\"\nassert solution(\n\"\"\"7\n3\n3\n3\n3\n3\n3\"\"\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '0,1'\nassert solution('3') == '0,1,2'\nassert solution('4') == '0,1,2,3'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"8\") == \"10\"\nassert solution(\"20\") == \"22\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == 2\nassert solution('1') == 2\nassert solution('2') == 4\nassert solution('3') == 8\nassert solution('4') == 16\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('0 1 2 3') == None\nassert solution('9') == None\nassert solution('0 1') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 2\nassert solution('4') == 10\nassert solution('5') == 22\nassert solution('6') == 18\nassert solution('7') == 26\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '10'\nassert solution('4') == '100'\nassert solution('5') == '1000'\nassert solution('6') == '10000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 2\nassert solution('3') == 2\nassert solution('4') == 2\nassert solution('5') == 4\nassert solution('6') == 6\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('10') == '10'\nassert solution('10') == '10'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '2'\nassert solution('''5''') == '2'\nassert solution('''11''') == '2'\nassert solution('''13''') == '2'\nassert solution('''16''') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('5') == '7'\nassert solution('8') == '11'\nassert solution('10') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20') == '23'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 2\nassert solution('4') == 5\nassert solution('20') == 23\nassert solution('100') == 97\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20') == '23'\nassert solution('20\\n') == '23'\nassert solution('2\\n2') == '2'\nassert solution('10\\n') == '11'\nassert solution('10\\n2\\n2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20') == 23\nassert solution('10') == 11\nassert solution('100') == 101\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('23') == 23\nassert solution('23') == 23\nassert solution('2') == 3\nassert solution('24') == 23\nassert solution('27') == 29\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20') == '23'\nassert solution('5') == '11'\nassert solution('4') == '5'\nassert solution('8') == '11'\nassert solution('20') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('7') == 7\nassert solution('20') == 23\nassert solution('1') == None\nassert solution('5') == 7\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('2') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"0\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"0\"\nassert solution(\"2\\n1 1\\n\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3 1 3 2') == 1\nassert solution('5\\n1 2 3 4 5') == 2\nassert solution('6\\n1 2 3 4 5 6') == 1\nassert solution('7\\n1 2 3 4 5 6 7') == 2\nassert solution('8\\n1 2 3 4 5 6 7 8') == 2\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n1 3') == '0'\nassert solution('2\\n1 1 3') == '1'\nassert solution('2\\n1 2 3') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 1\nassert solution('1 2 3 4') == 0\nassert solution('2 4 5 1') == 1\nassert solution('1 2 2 2 1') == 1\nassert solution('1 1 1 1 1') == 2\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''5\n3 1 3 2 4''') == '2'\nassert solution('''10\n2 2 2 3 4 4 4 5 5 5''') == '6'\nassert solution('''2\n1 2''') == '1'\nassert solution('''2\n3 1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 3 2\\n') == '1'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 1 3 2') == \"1\"\nassert solution('5\\n2 2 2 2 2') == \"2\"\nassert solution('1\\n1') == \"0\"\nassert solution('1\\n1\\n1\\n1') == \"0\"\nassert solution('1\\n1\\n1\\n1\\n1') == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 3 2') == '1'\nassert solution('4\\n3 1 3 2') == '1'\nassert solution('4\\n3 1 3 2\\n3 1 2 2') == '0'\nassert solution('4\\n3 1 3 2\\n3 1 2 2\\n3 1 2 1') == '3'\nassert solution('4\\n3 1 3 2\\n3 1 2 2\\n3 1 2 1\\n3 1 2 1\\n3 1 2 1') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 82
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 12 10') == '36'\nassert solution('1 2 1 3') == '4'\nassert solution('1000 2 1000 2') == '2000'\nassert solution('5 100 90 80') == '23'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10 2 3') == '5'\nassert solution('4 4 3 1') == '11'\nassert solution('5 4 4 3 1') == '6'\nassert solution('5 5 4 3 1') == '14'\nassert solution('5 5 5 4 3 1') == '18'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"2 3 1 2\") == \"2\"\nassert solution(\"3 3 3 3\") == \"3\"\nassert solution(\"3 3 3 1\") == \"2\"\nassert solution(\"3 3 3 3 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4 5 1 1') == '4'\nassert solution('6 12 10 5 15') == '10'\nassert solution('7 16 19 10 11') == '16'\nassert solution('12 18 19 10 11') == '18'\nassert solution('13 19 19 10 11') == '19'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 200 90 80') == '23'\nassert solution('3 100 90 80') == '6'\nassert solution('3 100 90 81') == '18'\nassert solution('3 100 90 81') == '18'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 100 90 80'''\n'''98\n40\n30\n21\n80'''\n'''100\n90'''\n'''98\n40\n30\n21\n80'''\n'''100\n90'''\n'''-1'''\n) == '23'\n\nassert solution('''10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''1 1 1 1 1 1'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10 10 10 10'''\n'''10 10",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('7 5 10') == '30'\nassert solution('100 90 80') == '23'\nassert solution('90 80 70') == '17'\nassert solution('14 62 30') == '23'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 5 2 5\n2\n2\n1\n1\n1\n1''') == '10'\nassert solution('''4 4 5 4\n1\n2\n3\n4''') == '9'\nassert solution('''5 5 3 5\n5\n1\n5\n2\n1\n5\n3\n3\n2''') == '7'\nassert solution('''5 5 3 5\n5\n1\n5\n2\n1\n5\n3\n3\n2''') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'DEZABC'\nassert solution('ZABCXY') == 'DEZABC'\nassert solution('CDEZAB') == 'ZABCXY'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'DEFGHIJKLMNOPQRSTUVWXYZABC'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('X') == 'Y'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('AX') == 'BX'\nassert solution('ABCXYZ') == 'CDEZAB'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABC\") == \"CBA\"\nassert solution(\"XYZ\") == \"ZAB\"\nassert solution(\"XYZ\") == \"ZAB\"\nassert solution(\"ZXY\") == \"XZY\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ZABC\") == \"ABC\"\nassert solution(\"AZAB\") == \"BA\"\nassert solution(\"ZABCDE\") == \"ABCDE\"\nassert solution(\"AZABDE\") == \"BE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('AZKSCJLLWGKUBZYQGHBVRAOQGYN') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('AZKSCJLLWGKUBZYQGHBVRAOQGYN') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n",
        "num_ids_2": 57,
        "num_ids_4": 142
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCD\") == \"EFGH\"\nassert solution(\"AB\") == \"BA\"\nassert solution(\"B\") == \"C\"\n",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'AZYXWVUTSRQPONMLKJIHGFEDCBA'\nassert solution('XYZ') == 'AB'\nassert solution('XYZ') == 'AB'\n",
        "num_ids_2": 30,
        "num_ids_4": 87
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\nABCXYZ''') == 'CDEZAB'\nassert solution('''3\nABCXYZ''') == 'DEFHIJK'\nassert solution('''3\nWXYZ''') == 'ABDG'\nassert solution('''3\nabcxyz''') == 'abcdefgh'\nassert solution('''3\nABCXYZ''') == 'DGHJKL'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3 2'\nassert solution('4') == '3 2 4'\nassert solution('5') == '3 2 4 5'\nassert solution('6') == '3 2 4 5 6'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\\n3 5 2 3 2 4\\n3 5 2 3 2 4\") == \"3 4 2\\n\"\nassert solution(\"1\\n2750131 199999\\n2750131 199999\\n2750131 199999\\n2750131 199999\\n2750131 199999\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\\n\") == \"6\\n\"\nassert solution(\"1\\n3 4\\n\") == \"3 4\\n\"\nassert solution(\"1\\n1 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 91,
        "num_ids_4": 128
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n') == '3 4 2'\nassert solution('1\\n2750131 199999\\n') == '199999'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nprint(solution('''6\n3 6\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n3 4 2\\n3\\n3 6\\n') == '3 4 2\\n'\nassert solution('3\\n3 5 2 3 2 4\\n3 4 2\\n3\\n3 6\\n') == '3 4 2\\n'\nassert solution('1\\n2750131 199999\\n') == '199999\\n'\nassert solution('1\\n3 6\\n') == '6\\n'\nassert solution('1\\n3 4\\n') == '4\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 112
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\nassert solution('''2\n3 1 2 3 2 4''') == '3 4 2'\nassert solution('''2\n2 5 1 5''') == '1 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1 2 3 4 5 6 7 8 9 10'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\nInput\n3\n3 5 2 3 2 4\n\nOutput\n3 4 2\n\nInput\n1\n2750131 199999\n\nOutput\n199999 \n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10\") == \"1121122\"\nassert solution(\"5 1\\n2 1 3 4 5\") == \"111221\"\nassert solution(\"7 1\\n7 2 1 3 4 5 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"221112\"\n\n\n\n\"\"\"\n\n\"\"\"\n    \n\"\"\"\n\n\"\"\"\n    \n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\nassert solution('5 1') == '21112'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2', '2 4 5 3 1') == '11111'\nassert solution('5 1', '2 1 3 5 4') == '22111'\nassert solution('7 1', '7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1', '2 4 5 3 1') == '21112'",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\n\n\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n7 1\\n\") == \"11212\"\nassert solution(\"5 2\\n2 4 5 3 1\\n\") == \"111122\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"22111\"\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n2 4 5 3 1') == '11111'\nassert solution('2 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'\n\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1', '2 1 3 5 4') == '11111'\nassert solution('5 1', '2 1 3 5 4') == '22111'\nassert solution('7 1', '7 2 1 3 5 4 6') == '1121122'\nassert solution('7 1', '7 2 1 3 5 4') == '21112'\n\n\n\n\n-----",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[1:-1]\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\nassert solution('6 2\\n7 2 3 4 5 6 1\\n') == '121211'\nassert solution('6 1\\n7 2 1 3 4 5 6\\n') == '121211'\n",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('100 5 1 3 4') == '4'\nassert solution('100 2 3 4 5 6') == '6'\nassert solution('100 2 3 4 5 1') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2 3\\n') == '2'\nassert solution('2\\n1 3 3 7\\n') == '4'\nassert solution('3\\n1 3 3 7\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2 3\\n'\n                '100 1\\n'\n                '2\\n'\n                '1 3 3 7\\n'\n                '4\\n'\n                '1 3 3 7\\n'\n                '4\\n') == '2\\n'\nprint('input test passed')\n\nassert solution('2\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '2\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '2\\n') == '3\\n'\nprint('input test passed')\n\nassert solution('2\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '2\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '1 3\\n'\n                '2\\n') == '5\\n'\nprint('input test passed')\n",
        "num_ids_2": 20,
        "num_ids_4": 28
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''6\n1 1 1 1 1 1''') == '3'\nassert solution('''6\n1 3 3 7 4 5''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''10\n3 1 3 1 3 1 3 3 1 3 1\n''') == '1'\nassert solution('''10\n4 1 4 1 4 1 4 1 4 1 4\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2\\n3\\n4') == '4'\nassert solution('1\\n1\\n2\\n3\\n4\\n2\\n3\\n4') == '2'\nassert solution('1\\n1\\n2\\n2\\n3') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 82
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 35
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2 3\\n5\\n1 3 3 7') == '2\\n'\nassert solution('2\\n100 1\\n') == '2\\n'\nassert solution('4\\n1 3 3 7\\n') == '4\\n'\nassert solution('2\\n1 3\\n') == '2\\n'\nassert solution('1\\n1\\n') == '1\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"\nassert solution(\"1\\n16\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('1 1 1 1023') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 44
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n16') == '1'\nassert solution('1\\n7\\n1\\n4\\n9') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('1\\n3\\n2\\n4\\n5') == '1'\nassert solution('1\\n1\\n1\\n1023') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 79
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''7\n1 2 3 4 5 6 7''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n4 7 1 5 4 9\n''') == '1'\n\nassert solution('''5\n1 2 3 4 5\n''') == '2'\n\nassert solution('''1\n16\n''') == '1'\n\nassert solution('''4\n1 1 1 1023\n''') == '0'\n\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n6\\n4 7 1 5 4 9') == '1'\nassert solution('2\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '0'\nassert solution('2\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '2'\nassert solution('3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '1'\nassert solution('4\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '0'\n",
        "num_ids_2": 59,
        "num_ids_4": 135
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1378,
        "num_ids_4": 1378
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1 1 1023\\n') == '0'\nassert solution('3\\n1 2 3\\n') == '2'\nassert solution('7\\n1 2 3 4 5 6 7\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '0'\nassert solution('6\\n4 7 1 5 4 9\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('00101') == 1\nassert solution('00010') == 1\nassert solution('1110010') == 0\nassert solution('11100110') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('101') == '3'\nassert solution('11011010') == '4'\nassert solution('1010') == '3'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0011') == 4\nassert solution('000') == 0\nassert solution('111') == 1\nassert solution('1111') == 0\nassert solution('1111') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"00110\") == \"4\"\nassert solution(\"01101\") == \"3\"\nassert solution(\"011001\") == \"3\"\nassert solution(\"010011\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"11111\") == \"1\"\nassert solution(\"101111\") == \"1\"\nassert solution(\"100111\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('11111') == 1\nassert solution('00100') == 2\nassert solution('01100') == 3\nassert solution('11010') == 4\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"10101\") == 4\nassert solution
        "num_ids_2": 18,
        "num_ids_4": 1766
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"6\"\nassert solution(\"11110\") == \"4\"\nassert solution(\"11111\") == \"6\"\nassert solution(\"10110\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\n'''\n\n'''\nSample Input:\n0111100\n\nSample Output:\n4\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\n\"\"\"\nAt first, we are given two types of ID card: \"L\" and \"R\".\nWe can pass all the gates if we have one of the following ID cards: the L_i-th, (L_i+1)-th,..., and R_i-th ID cards.\nWe use the following type of ID card:\n - \"L\": L_i-th ID card\n - \"R\": R_i-th ID card\n\nThe number of ID cards that allow us to pass all the gates alone is the same as the number of gates.\nTo find the number of ID cards that allow us to pass all the gates alone, we start from the gate number 0,\nand count the number of ID cards that allow us to pass all the gates starting from the gate number 0.\nWe need to find the smallest number of ID cards that allow us to pass all the gates starting from the gate number 0.\n\nTime Complexity: O(N)\nSpace Complexity: O(1)\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('4 2\\n1 3\\n2 4\\n3 4') == '4'\nprint('Testcase 1 passed')\nassert solution('3 3\\n1 2\\n2 3') == '1'\nprint('Testcase 2 passed')\nassert solution('10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '9'\nprint('Testcase 3 passed')\n",
        "num_ids_2": 42,
        "num_ids_4": 108
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 1') == '1'\nassert solution('4 3') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 1\\n1 3\\n2 4\") == \"3\"\nassert solution(\"3 1\\n1 3\\n1 4\\n2 4\") == \"4\"\nassert solution(\"3 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 1\\n1 3\\n2 4\\n1 3\\n2 4\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 2\n1 3\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"4 2\n1 3\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"5 2\n1 3\n2 4\n3 4\n4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"5\"\nassert solution(\"\"\"6 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n\"\"\") == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"2 4\\n1 2\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 4\\n4 1\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 4\\n4 5\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 1713
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('5\\n2 4 3 4 4') == '1'\nassert solution('5\\n4 4 3 2 4') == '1'\nassert solution('5\\n4 4 3 4 4') == '1'\nassert solution('5\\n4 4 3 4 4') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 2 1\") == 2\nassert solution(\"3\\n1 2 2\") == 0\nassert solution(\"4\\n1 2 1 1\") == 2\nassert solution(\"3\\n1 2 1\") == 0\nassert solution(\"1\\n1\") == 0\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 2 1\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('2 3 2 1') == '3'\nassert solution('2 3 4 4 1') == '2'\nassert solution('2 3 4 1') == '2'\nassert solution('1 2 2 1') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\nassert solution('1 1 1 1') == 0\nassert solution('1 1 1 1') == 0\nassert solution('2 2 2 1') == 4\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4\\n-1 1\\n') == '4'\nassert solution('3 5\\n2 1 -3\\n') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('2 3\\n-1 1 -1\\n') == '0'\nassert solution('2 3\\n-1 1 -1\\n') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\nassert solution('''4 10\n4 2 -1 3\n''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\nassert solution('4 10\\n2 4 -1 2\\n') == '0'\nassert solution('4 10\\n2 -1 1\\n') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('2 1') == '3'\nassert solution('1 2') == '2'\nassert solution('2 4 1 2') == '2'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nn,w = map(int, stdin.readline().split())\n\na = list(map(int, stdin.readline().split()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom functools import lru_cache\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '4'\nassert solution('2 4 1 2') == '2'\nassert solution('5 4 3 1') == '2'\nassert solution('5 5 3 1') == '0'\nassert solution('5 5 4 1') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\"\n\n\n'''",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8\\n'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28\\n'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000\\n'\n\n\n-----My Analysis-----\n\nThe problem is not what you thought it was. We can sort the array and then apply the modulo operation.",
        "num_ids_2": 50,
        "num_ids_4": 76
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\\n\"\nassert solution(\"4\\n42 28 84 126\\n\") == \"126 42 84 28\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\\n\"\n\n\n\n-----My submission-----\n",
        "num_ids_2": 50,
        "num_ids_4": 76
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 5 5 5 5\\n') == '5 5 5 5 5'\nassert solution('3\\n1 2 3\\n') == '3 1 2'\nassert solution('5\\n5 5 5 5 5\\n') == '5 5 5 5 5'\nassert solution('4\\n1 2 3 4\\n') == '1 2 3 4'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5'\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('9 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '3 0 1 4 2 5 6 7 8 9'\nassert solution('1000000000000000000 3000000000000000000') == '3 0 1 4 2 5 6 7 8 9'\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"42 28 84 126\") == \"126 42 84 28\"\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 3 6 12 4 8') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\\n\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\n\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\\n\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1\\n8\\n\"\n\n\n\"\"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6\n3 5 4 7 10 12\n\"\"\"\n) == '3'\nassert solution(\n\"\"\"\n5\n-1 2 5 8 11\n\"\"\"\n) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 4') == '3\\n1 2 3'\nassert solution('3\\n1 2 3') == '3'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n1') == '1'\n\n\n-----",
        "num_ids_2": 36,
        "num_ids_4": 63
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('4\\n1 2 3 4') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1'\nassert solution('''\n5\n-1 2 4 5\n''') == '1'\nassert solution('''\n6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n2 4 6 8 12\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"1\\n0\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\nassert solution('''5\n-1 2 5 8 11''') == '1'\nassert solution('''-1 2 5 8 11''') == '1'\nassert solution('''-1 2 5 8 11''') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 4 5 -1') == '3\\n1 2 4'\nassert solution('5\\n3 4 5 6 -1') == '2'\nassert solution('3\\n2 1 5 8 -1') == '3'\nassert solution('3\\n-2 -1 5 -8 -7') == '1'\nassert solution('5\\n-5 -6 -7 -8 -9 -10') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '0 2'\nassert solution('2 2 2') == '0 2'\nassert solution('3 3 3') == '0 2'\nassert solution('4 4 4') == '0 2'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a b c') == ''\nassert solution('1 2 3') == ''\nassert solution('0 10 0') == '0 0'\nassert solution('0 0 3') == '0 2'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 1 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('2 4 1') == '0 0'\nassert solution('1 10 2') == '0 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 2 1') == '0 1'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 3') == '0 1'\nassert solution('3 2 4') == '1 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 3''') == \"0 2\"\nassert solution('''3 1 2''') == \"2 0\"\nassert solution('''0 0 0''') == \"0 0\"\nassert solution('''3 3 3''') == \"2 2\"\nassert solution('''2 2 2''') == \"0 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 3''') == '0 2'\nassert solution('''0 0 0''') == '0 0'\nassert solution('''2 3 1''') == '0 1'\nassert solution('''1 10 1''') == '0 0'\nassert solution('''5 4 4''') == '0 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1000\") == \"\"\nassert solution(\"1100\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''100''') == ''\nassert solution('''10''') == '1'\nassert solution('''100''') == '1'\nassert solution('''1000''') == '1'\nassert solution('''10000''') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n20\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n100\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n101\n\"\"\") == \"\"\"\n4\n\"\"\"\n\nassert solution(\n\"\"\"\n102\n\"\"\") == \"\"\"\n4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('102') == '3'\nassert solution('103') == '1'\nassert solution('100') == '0'\nassert solution('1000') == '0'\nassert solution('9000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100\") == \"3\"\nassert solution(\"1\\n1000\") == \"6\"\nassert solution(\"1\\n1000000\") == \"10\"\nassert solution(\"1\\n10000000\") == \"30\"\nassert solution(\"1\\n100000000\") == \"30\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''103''') == '3'\nassert solution('''10''') == '1'\nassert solution('''-101''') == '-3'\nassert solution('''0''') == '-1'\nassert solution('''10.1''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('100') == '1'\nassert solution('0') == '-1'\nassert solution('101') == '1'\nassert solution('1000000001') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('7\\n') == '3'\nassert solution('10\\n') == '4'\nassert solution('100\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('3.000') == '1'\nassert solution('15000') == '1'\nassert solution('100') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''100\n''') == '3'\n\nassert solution(\n'''20\n''') == '0'\n\nassert solution(\n'''20\n''') == '0'\n\nassert solution(\n'''20\n''') == '0'\n\nassert solution(\n'''20\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 9\nassert solution(3) == 18\nassert solution(4) == 6\nassert solution(5) == 5\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('10') == ''\nassert solution('11') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"36\"\nassert solution(\"5\") == \"55\"\nassert solution(\"6\") == \"84\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '36'\nassert solution('4') == '56'\nassert solution('5') == '105'\nassert solution('6') == '126'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '9'\nassert solution('''3''') == '27'\nassert solution('''4''') == '57'\nassert solution('''5''') == '105'\nassert solution('''6''') == '123'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 6') == 10\nassert solution('3 4 6') == 10\nassert solution('3') == 3\nassert solution('3 4 6') == 10\nassert solution('5') == 5\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''5\n1 2 3 4 5''') == '15'\nassert solution('''30\n1000000000 1000000000 1000000000 1000000000''') == '1'\n'''\nassert solution('''60\n1000000000 1000000000 1000000000 1000000000''') == '1'\nassert solution('''10\n1000000000 1000000000 1000000000 1000000000''') == '10'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4 6\") == \"10\"\nassert solution(\"3 4 6\") == \"10\"\nassert solution(\"4 4 4\") == \"8\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''4\n3 4 6''') == '10'\nassert solution('''10\n3 4 6''') == '10'\nassert solution('''500\nn''') == '12259617252050987870'\nassert solution('''1000\n3028862523550578662590030767685040382029481625348575228055742475234840732153337107969734359818191372295235380542107459272634932809722235937207498895795390494068123633857179907400283837772668162564166915649901862642999759279271510337311761360880083284079096634858968176884934679957469494938564104437238847417562574148747467437602903707796990763596608035188290712483565631416447564205530667223628184920583579371428204478215498374584128518454408169568672959103616519531099906459452737241690083522301215393839535313883578667623694764681386366029969989416919162488897211627660041878567821256693242218852474254847795838597801430119240104292949041283799616796303934259924087032465965240543899859277143937142283206049047576791816911994441''') == '4796272567992059875876'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('3\\n2') == '4'\nassert solution('3\\n3') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('10\\n1 1 1 1 1 1 1 1 1') == '2'\nassert solution('10\\n100 4 4 4 4 4 4 4 4 4') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '0'\nassert solution('10\\n1 3 5 7 9 11 13 15 17 19 21') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 4 6\n''') == '10'\nassert solution('''\n1\n1 2\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '5'\nassert solution('''\n3\n1 4 5\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4 6\\n') == 10\nassert solution('3\\n3 4 5\\n') == 3\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('1\\n1') == '1'\nassert solution('2\\n5') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\") == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2\\n3 2\") == \"No\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\") == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\") == \"No\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\") == \"No\"\n",
        "num_ids_2": 70,
        "num_ids_4": 160
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 1\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 1\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 1\\n2 1\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 1\\n2 1\\n2 1\") == \"No\"\n",
        "num_ids_2": 58,
        "num_ids_4": 130
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n6 6\") == \"Yes\"\nassert solution(\"2 4\\n4 4\") == \"No\"\nassert solution(\"2 1\\n6 6\") == \"Yes\"\nassert solution(\"2 1\\n4 4\") == \"No\"\nassert solution(\"2 1\\n4 1\") == \"Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''3\n1 2\n3 4\n5 6\n''') == 'No'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n''') == 'No'\nassert solution('''20\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 3 4 5\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n6 6\") == \"Yes\"\nassert solution(\"6 6\\n4 4\\n3 3\\n3 2\") == \"No\"\nassert solution(\"2 1\\n6 6\") == \"Yes\"\nassert solution(\"6 6\\n6 6\") == \"Yes\"\nassert solution(\"2 1\\n2 1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"\nassert solution(\"4\\n4 4\\n4 4\\n3 3\\n3 2\\n\") == \"No\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"Yes\"\nassert solution(\"2\\n2 2\\n2 2\\n2 2\\n\") == \"No\"\nassert solution(\"2\\n2 2\\n1 2\\n1 2\\n\") == \"No\"\n",
        "num_ids_2": 60,
        "num_ids_4": 112
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n6 6\\n4 4') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'No'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1",
        "num_ids_2": 51,
        "num_ids_4": 1740
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n'''\n    ) == 'Yes'\n\nassert solution(\n    '''\n5\n1 2\n6 6\n4 4\n3 3\n2 1\n'''\n    ) == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''\n5\n4 3\n4 1\n3 1\n3 1\n''') == 'No'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 4\nassert solution(3) == 12\nassert solution(4) == 16\nassert solution(5) == 20\nassert solution(6) == 24\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '4'\nassert solution('100') == '40'\nassert solution('0') == '0'\nassert solution('-5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(4) == 4\nassert solution(10) == 8\nassert solution(19) == 19\nassert solution(34) == 35\nassert solution(49) == 40\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 4\nassert solution(0) == 0\nassert solution(50) == 0\nassert solution(100) == 1\nassert solution(2) == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == \"4\"\nassert solution(3) == \"10\"\nassert solution(4) == \"2\"\nassert solution(5) == \"6\"\nassert solution(10) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('-1') == '-1'\nassert solution('-5') == '-6'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == str(int(input())*4)\nprint(\"Test 1 passed.\")\nassert solution(input()) == str(int(input())*4)\nprint(\"Test 2 passed.\")\nassert solution(input()) == str(int(input())*4)\nprint(\"Test 3 passed.\")\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '8'\nassert solution('4') == '16'\nassert solution('5') == '32'\nassert solution('6') == '48'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 4\nassert solution('5') == 8\nassert solution('1000000000') == 8000000000000\nassert solution('9999999999') == 999999999999\n\n\n\n\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('3\\n3 8 5 1') == 'No'\nassert solution('4\\n2 8 5 3') == 'Yes'\nassert solution('4\\n2 2 2 2') == 'No'\nassert solution('4\\n1 1 1 1') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 5 1\\n') == 'Yes'\nassert solution('3 6 4 1\\n') == 'No'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n3 8 5 1') == 'Yes'\nassert solution('7\\n3 8 5 1') == 'No'\nassert solution('7\\n3 7 5 1') == 'No'\nassert solution('8\\n3 8 5 1') == 'Yes'\nassert solution('7\\n3 8 3 1') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 8 5 4') == 'No'\nassert solution('1 1 2 1') == 'Yes'\nassert solution('1 1 2 3') == 'No'\nassert solution('3 4 2 3') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n3 8 5 1''') == 'Yes'\nassert solution('''3\n8 5 1''') == 'No'\nassert solution('''6\n13 0 8 3 8 4 8''') == 'Yes'\nassert solution('''5\n13 0 8 3 8 4''') == 'No'\nassert solution('''3\n3 1 2''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"Yes\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\n\"\"\"\n\n\"\"\"\nSolution1:\nLine of code, O(n) time, O(n) space\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('5 7 2') == 'No'\nassert solution('5 7 2 4') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('1 1 1 1 1') == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8 5 1\") == \"Yes\"\nassert solution(\"3 8 5 2\") == \"No\"\nassert solution(\"4 3 4 4\") == \"Yes\"\nassert solution(\"4 3 4 5\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4') == '5'\nassert solution('1 2\\n3 4\\n5 6') == '-1'\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == '-1'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '5'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 86
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"3 3\\n1 7\\n3 2\\n1 7\\n\")) == \"702\"\nassert solution(input(\"3 4\\n0 0\\n0 0\\n0 0\\n\")) == \"-1\"\nassert solution(input(\"4 6\\n1 0\\n0 0\\n0 0\\n0 0\\n\")) == \"22\"\nassert solution(input(\"2 3\\n0 0\\n0 0\\n\")) == \"1\"\nassert solution(input(\"1 1\\n1 1\\n\")) == \"-1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"702\"\nassert solution(input()) == \"991\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 7\\n3 2\\n1 7\\n\") == \"702\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n1 0\\n\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n1 0\\n1 0\\n\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n1 0\\n1 0\\n1 0\\n\") == \"-1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 108
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\nassert solution('0 0') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\"\n) == \"702\"\n\nassert solution(\n    \"1 7\"\n) == \"-1\"\n\nassert solution(\n    \"3 2\"\n) == \"-1\"\n\nassert solution(\n    \"1 7\"\n) == \"-1\"\n\nassert solution(\n    \"3 3\"\n) == \"-1\"\n\"\"\"\n\nN, M = [int(x) for x in stdin.split()]",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7\\n3 2\\n1 7\\n') == '702'\nassert solution('1 3\\n7 2\\n3 2\\n1 7\\n') == '702'\nassert solution('1 3\\n3 2\\n1 7\\n') == '-1'\nassert solution('1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\",
        "num_ids_2": 46,
        "num_ids_4": 1751
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9'\nassert solution('6 2') == '6'\nassert solution('10 3') == '0'\nassert solution('25 4') == '0'\nassert solution('12 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2''') == '9'\nassert solution('''3 2''') == '9'\nassert solution('''6 3''') == '0'\nassert solution('''10 2''') == '10'\nassert solution('''1000 4''') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('3 2') == '9'\nassert solution('4 2') == '0'\nassert solution('1 3') == '9'\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[0]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 1') == '6'\nassert solution('2 5') == '3'\nassert solution('5 2') == '2'\nassert solution('1 1') == '0'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3,2) == \"9\"\nassert solution(4,5) == \"0\"\nassert solution(15,3) == \"27\"\nassert solution(10,5) == \"0\"\nassert solution(10,2) == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"10 2\") == \"4\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10000\") == \"1000100010001001000100011100000100001100100000101001\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"10100010100010110101011011\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-9') == '1011'\nassert solution('10') == '1010'\nassert solution('2') == '01'\nassert solution('9') == '11'\nassert solution('0') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '1011'\nassert solution('-9') == '1011'\nassert solution('0') == '1'\nassert solution('11') == '11'\nassert solution('12') == '11'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('9') == '1011'\nassert solution('101') == '1011'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"9\"\n) == \"1011\"\nassert solution(\n    \"-9\"\n) == \"1011\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('-1') == '1011'\nassert solution('-10') == '1011'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-9\") == 1011\nassert solution(\"-2\") == -3\nassert solution(\"-11\") == -1\nassert solution(\"1\") == 1\nassert solution(\"10\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"101\"\nassert solution(\"100\") == \"1100100\"\nassert solution(\"-100\") == \"11111010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n\"\"\"\n\n\"\"\"\n[\n    {\n        \"first\": \"last\",\n        \"last\": \"first\",\n        \"score\": {\n            \"first\": 50,\n            \"last\": 50\n        }\n    },\n    {\n        \"first\": \"last\",\n        \"last\": \"first\",\n        \"score\": {\n            \"first\": 50,\n            \"last\": 50\n        }\n    }\n]\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == str(int(input(\"\")))\n\n\"\"\"\n\n\"\"\"\nAssume that the integer N is positive. Let the base -2 representation of N be S.\nThen S is the base -2 representation of N when the following are all satisfied:\n - S is a string consisting of 0 and 1.\n - If S = 0, then S is a string of 0's and the initial character of S is 1.\n - Let S = S_k S_{k-1}... S_0, then S_0 \\times (-2)^0 + S_1 \\times (-2)^1 +... + S_k \\times (-2)^k = N.\n\nAssume that M is an integer. Let the base -2 representation of M be T.\nThen T is the base -2 representation of M when the following are all satisfied:\n - T is a string consisting of 0 and 1.\n - If T = 0, then T is a string of 0's and the initial character of T is 1.\n - Let T = T_k T_{k-1}... T_0, then T_0 \\times (-2)^0 + T_1 \\times (-2)^1 +... + T_k \\times (-2)^k = M.\n\nLet N = (S \\times T) mod 2.\nThen N is the base -2 representation of M if and only if N = 0.\n\nNow we can show that for any integer M, the base -2 representation of M is uniquely determined.\n\nTime - O(log n)\nSpace - O(log n)\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == '12'\nassert solution('''2 5\n4 9\n2 4''') == '12'\nassert solution('''2 3\n1 3\n2 2''') == '5'\nassert solution('''2 3\n1 3\n2 2''') == '5'\nassert solution('''2 1\n4 1''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"12\"\nassert solution(\"2 5\") == \"12\"\nassert solution(\"3 4\") == \"15\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"5 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\nassert solution('''2 10\n5 5\n3 5\n6 5\n3 4\n1 9\n4 8\n4 9\n2 10\n1 9\n1 8\n''') == '20'\nassert solution('''4 4\n1 2\n2 2\n1 4\n1 3\n2 4\n''') == '11'\nassert solution('''5 2\n5 5\n3 5\n3 4\n4 5\n1 2\n4 2\n2 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == \"12\"\nassert solution('''2 5\n4 9\n2 4\n2 5\n3 6\n5 7\n6 7\n7 7\n8 9\n9 9\n10 10\n10 10\n100 100''') == \"200\"\nassert solution('''2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"5 10\") == \"60\"\nassert solution(\"5 10\") == \"60\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 3\\n1 2\\n2 3') == '3'\nassert solution('2 10\\n5 7') == '24'\nassert solution('1 10\\n1 10') == '10'\nassert solution('5 10\\n1 2\\n3 4\\n5 6') == '18'\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == '12'\n\nassert solution('''4 6\n4 3\n3 5\n3 2\n5 1\n3 1''') == '5'\n\nassert solution('''1 2\n1 1\n''') == '1'\n\nassert solution('''4 4\n5 1\n5 2\n5 3\n5 4''') == '1'\n\nassert solution('''5 5\n4 1\n5 3\n5 2\n5 1\n4 1''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 12\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == '12'\nassert solution('4 9') == '12'\nassert solution('2 4') == '6'\nassert solution('1 3') == '1'\nassert solution('5 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == \"3\"\n\nassert stdin == \"5\\n10 4 8 7 3\"\nassert solution(stdin) == \"2\"\n\nassert stdin == \"6\\n3 2 1 1 4 4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"2\\n5\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10 4 8 7 3 3\") == \"4\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"10 2 10 3 2 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n\n\"\"\"\n\"\"\"\nProblem link: https://leetcode.com/problems/maximum-loot-value/description/\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(2)\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"5 10 4 8 7 3\") == \"2\"\nassert solution(\"1 100 1000 1000 100\") == \"1\"\nassert solution(\"5 100 1 1000 1\") == \"5\"\nassert solution(\"6 10 1 1000 1\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\n'''\nN = int(input())\nheights = list(map(int, input().split()))\nmax_height = max(heights)\n\ncount = 0\nfor i in range(N-1):\n    if heights[i] < heights[i+1]:\n        count += 1\nprint(count)\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('1 1 1 1 1') == '1'\nassert solution('10 10 10 10 10') == '2'\nassert solution('10 10 10 10 9') == '1'\nassert solution('10 10 10 10 11') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 2''') == '2'\nassert solution('''5 3\n1 1 2 2 4 5''') == '0'\nassert solution('''5 3\n1 2 1 2 4 5''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n5\\n') == '2'\nassert solution('1\\n2\\n2\\n') == '0'\nassert solution('1\\n2\\n3\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n1\\n2\\n1\\n') == '1'\nassert solution('5\\n3\\n1 2 2 4 5') == '1'\nassert solution('5\\n3\\n1 2 3 3 3') == '2'\nassert solution('5\\n3\\n1 2 3 3 4') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 3\n1 2 2 4 5'''\n) == '1'\n\nassert solution(\n'''5 3\n1 2 3 4 5'''\n) == '2'\n\nassert solution(\n'''5 3\n1 2 3 3 3'''\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '2'\nassert solution('1\\n2\\n') == '3'\nassert solution('5\\n1\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''5 3\n1 2 3 3 3\n''') == '2'\nassert solution('''5 2\n1 2\n1 1\n''') == '1'\nassert solution('''5 2\n1 2\n1 1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('3 3 2 1 1 1 3') == '4'\nassert solution('1 2 2 4 2 3') == '3'\nassert solution('3 3 2 1 1 1 3') == '4'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"2 1\\n1\") == \"0\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"2 2\\n1 1\") == \"1\"\nassert solution(\"4 1\\n1\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '0'\nassert solution('1 1') == '2'\nassert solution('2 2') == '0'\nassert solution('1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"4 4\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"2 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 2 4 2 3\n1 2 2 4 2 3''') == '3'\nassert solution('''3 3 2 1 1 1 3\n3 3 2 1 1 1 3''') == '4'\nassert solution('''4 6\n1 2 2 4 2 3''') == '4'\nassert solution('''3 7\n3 3 2 1 1 1 3''') == '5'\nassert solution('''6 3\n1 2 2 4 2 3''') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''7 4\n3 3 2 1 1 1 3''') == '4'\nassert solution('''8 6\n3 3 2 1 1 1 3 1 3''') == '5'\nassert solution('''8 6\n1 1 2 2 1 1 1 3 1 3''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2 2 2 4 2 3\\n3 3 2 1 1 1 3') == '3'\nassert solution('2\\n1 2 2 4 2 3\\n3 3 2 1 1 1 3\\n4 4 3 2 1 1 1 4') == '4'\nassert solution('3\\n1 2 2 4 2 3\\n3 3 2 1 1 1 3\\n4 4 3 2 1 1 1 4\\n5 5 4 3 2 1 1 1 5') == '5'\nassert solution('4\\n1 2 2 4 2 3\\n3 3 2 1 1 1 3\\n4 4 3 2 1 1 1 4\\n5 5 4 3 2 1 1 1 5\\n6 6 5 4 3 2 1 1 1 6') == '6'\nassert solution('5\\n1 2 2 4 2 3\\n3 3 2 1 1 1 3\\n4 4 3 2 1 1 1 4\\n5 5 4 3 2 1 1 1 5\\n6 6 5 4 3 2 1 1 1 6\\n7 7 6 5 4 3 2 1 1 1 7') == '7'\n",
        "num_ids_2": 64,
        "num_ids_4": 172
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n4200000000'\nassert solution(\n'''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000 100 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n4200000000'\nassert solution(\n'''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000 100 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n4200000000'\nassert solution(\n'''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000 100 1\n10000000000000000 42 88''') == '10\\n9\\n1000\\n4200000000'\nassert solution(\n'''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000 100 1\n10000000000000000 42 88''') == '10\\n9\\n1000\\n4200000000'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n3') == '10'\nassert solution('1\\n7\\n3') == '9'\nassert solution('1\\n1000000000\\n10000000000\\n42\\n88') == '42000000000000'\nassert solution('2\\n1 3\\n1 2\\n1 1') == '1'\nassert solution('2\\n5 2\\n5 2\\n5 2\\n5 2') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 83
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n10 1 3\") == \"10\"\nassert solution(\"4\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n4\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\",
        "num_ids_2": 22,
        "num_ids_4": 109
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 4 5') == '2'\nassert solution('6 15') == '1'\nassert solution('9 17') == '0'\nassert solution('123 3') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('1 4 3 2 5') == '2'\nassert solution('1 4 3 2 5') == '2'\nassert solution('1 4 3 2 5') == '2'\nassert solution('1 4 3 2 5') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 1\\n') == '0'\nassert solution('2 3\\n1 2 2\\n') == '2'\nassert solution('3 4\\n1 2 3 1\\n') == '3'\nassert solution('10 6\\n1 2 3 4 5 6 7 8 9\\n') == '2'\nassert solution('1000000 1\\n') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 78
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 7') == '0'\nassert solution('3 4 5') == '2'\nassert solution('1 1') == '1'\nassert solution('1 10') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(2)\nprint(solution(stdin))\n\"\"\"\nfrom sys import stdin, stdout",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n3 4 5''') == '2'\nassert solution('''4 6\n2 1 1 2''') == '2'\nassert solution('''100 1000\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '1'\nprint('Testcases passed')\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6\\n3 4 5') == '2'\nassert solution('2 10\\n2 2 2') == '0'\nassert solution('5 100\\n1 1 2 3 4 5\\n') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 53
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 0 0') == '0'\nassert solution('3 6') == '2'\nassert solution('0 0 0 0 0') == '1'\nassert solution('0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\nhoge\\nenigma\\nhokage\\nfoo\\n') == 'Yes'\nassert solution('1\\nhoge\\nenigma\\nhokage\\nfoo\\n') == 'No'\nassert solution('5\\nhogehogehogehoge\\nenigma\\nhokage\\nfoo\\n') == 'Yes'\nassert solution('1\\nhoge\\nenigma\\nhokage\\nfoo\\n') == 'No'\nassert solution('2\\nhokage\\nfoo\\n') == 'No'\n",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('foo') == 'Yes'\nassert solution('bar') == 'No'\nassert solution('baz') == 'Yes'\nassert solution('faz') == 'No'\nassert solution('foo') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hokage') == 'No'\nassert solution('hoge') == 'No'\nassert solution('hogehoge') == 'No'\nassert solution('hogehogehoge') == 'No'\nassert solution('hogehogehogehoge') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''3\na\nb\nc\nd\ne\nf\ng\nh''') == 'Yes'\nassert solution('''5\np\nq\nr\ns\nt\nu\nv''') == 'No'\nassert solution('''8\na\nb\nc\nd\ne\nf\ng\nh''') == 'Yes'\nassert solution('''9\nw\nx\ny\nz\nA\nB\nC\nD\nE\nF\nG\nH''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nassert solution('hoge\\nenglish\\nhoge\\nenigma\\n') == 'Yes'\nassert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'Yes'\nassert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'Yes'\nassert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\n",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 5\") == \"9\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"1 5\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 3'''\n) == '6'\n\nassert solution(\n'''2 4'''\n) == '8'\n\nassert solution(\n'''3 4'''\n) == '8'\n\nassert solution(\n'''6 5'''\n) == '26'\n\nassert solution(\n'''7 10'''\n) == '56'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 2') == '6'\nassert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('7 2') == '28'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n') == '6'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 10') == '10'\nassert solution('10 100') == '100'\nassert solution('100 1000') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\nassert solution(\"sss\") == \"sss\"\n\nassert solution(\"ssszsz\") == \"ssszsz\"\n\nassert solution(\"\") == \"\"\n\nassert solution(\"s\") == \"s\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.replace('s', 'xxxx')\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('s') =='s'\nassert solution('a') == 'a'\nassert solution('xxxxxx') == 'xxxxxx'\nassert solution('c') == 'c'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"cs\") == \"cshs\"\nassert solution(\"and\") == \"and\"\nassert solution(\"hacker\") == \"hxkrxxkq\"\nassert solution(\"xyz\") == \"xyz\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"sardine\"\n) == \"xxxxxxxxx\"\n\nassert solution(\n\"sardine\"\n) == \"xxxxxxxxx\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\nassert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nprint('solution: checking')",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('oippqwmn') == 'xxxxxxx'\nassert solution('appuqw') == 'xxxxxxx'\nassert solution('qpqppqpq') == 'xxxxxxx'\nassert solution('qpqppqpqpq') == 'xxxxxxx'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('babababab') == 'aaaaaabbbbbbbbb'\nassert solution('babababab') == 'aaaaaabbbbbbbbb'\nassert solution('babababab') == 'aaaaaabbbbbbbbb'\nassert solution('babababab') == 'aaaaaabbbbbbbbb'\n",
        "num_ids_2": 33,
        "num_ids_4": 73
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('3\\n1 2 1') == 'No'\nassert solution('5\\n2 1 1 2 1') == 'No'\nassert solution('1\\n1') == 'Yes'\nassert solution('1\\n1') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"No\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 1\") == \"No\"\nassert solution(\"3\\n1 2 3\") == \"No\"\nassert solution(\"3\\n1 3 2\") == \"Yes\"\nassert solution(\"2\\n1 3\") == \"Yes\"\nassert solution(\"1\\n1\") == \"Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"2 2 1 1 3\") == \"No\"\nassert solution(\"1 3 1 2 3\") == \"Yes\"\nassert solution(\"2 3 1 2 3\") == \"No\"\nassert solution(\"1 2 1 3\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"3 1 2 1 2\") == \"No\"\nassert solution(\"1 2 1 1 2\") == \"Yes\"\nassert solution(\"1 2 1 1 2 3\") == \"Yes\"\nassert solution(\"1 2 1 1 2 3 4\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"1 2 1 3\") == \"No\"\nassert solution(\"4 4 2 2 2\") == \"Yes\"\nassert solution(\"4 4 2 2 3\") == \"No\"\nassert solution(\"5 5 3 3 3\") == \"Yes\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 1 1 3''') == 'Yes'\nassert solution('''5\n1 2 3 4 5''') == 'No'\nassert solution('''1\n1''') == 'Yes'\nassert solution('''1\n0''') == 'Yes'\nassert solution('''3\n1 2 3''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('2 3 4 3 4') == 'No'\nassert solution('1 2 1 1 3') == 'Yes'\nassert solution('2 3 4 3 4') == 'No'\nassert solution('1 2 1 1 3') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n1\\n1\\n3') == 'Yes'\nassert solution('2\\n1\\n3') == 'No'\nassert solution('1\\n3') == 'Yes'\nassert solution('1\\n1') == 'Yes'\nassert solution('2\\n1') == 'Yes'\n",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 -1') == '0'\nassert solution('2 3 -10') == '1'\nassert solution('1 2 -5') == '0'\nassert solution('2 3 -10') == '1'\nassert solution('3 2 1') == '1'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n-1\\n-1\\n-1\\n1\\n1\\n-1\\n1\\n-1\\n1\\n1\\n-1\\n1\\n-1\\n1\\n1\\n1\\n-1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n-1\\n1\\n-1\\n1\\n1\\n1\\n-1\\n1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1606,
        "num_ids_4": 1606
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == \"1\"\nassert solution('''4 4 3\n10 9 -5\n6 8 -3\n7 7 -2\n-2 2 -5\n-1 1 2''') == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\n\nassert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\n\nassert solution('''3 1 3\n5 0 0\n4 1 1\n0 2 1\n1 2 2\n2 1 3\n1 3 0\n''') == '1'\n\nassert solution('''3 1 3\n5 0 0\n4 1 1\n0 2 1\n1 2 2\n2 1 3\n1 3 0\n''') == '2'\n\nassert solution('''4 1 3\n5 0 0\n4 1 1\n0 2 1\n1 2 2\n2 1 3\n1 3 0\n''') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2') == '1'\n",
        "num_ids_2": 66,
        "num_ids_4": 172
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"3 2 1\") == \"2\"\nassert solution(\"3 2 1\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\nassert solution('''2 2 1\n1 2 2''') == '2'\nassert solution('''3 3 3\n1 1 1\n2 2 2\n3 3 3''') == '1'\nassert solution('''3 3 -10\n1 1 1\n2 2 2\n3 3 3''') == '0'\nassert solution('''2 2 -10\n1 2 2\n1 2 2''') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2000\") == \"100\"\n\"\"\"\n\n\"\"\"\nYou are given a rectangular cake with a bunch of circular pieces of chocolate. The chocolate is so thick that the shape of a single piece of chocolate is very large (the piece has a circumference of about 5 cm). You need to cut the chocolate into square pieces and assemble the new chocolate pieces in a rectangular shape. You want to use as few pieces as possible.\n\nWrite a function that, given the area of a rectangular cake and the circumference of a piece of chocolate, returns the number of pieces needed.\n\nFor example, if the area of the cake is 8 cm^2 and the circumference of the chocolate is 4 cm, then you should return 1 because you can cut the chocolate into one square.\n\nIf the area of the cake is 25 cm^2 and the circumference of the chocolate is 10 cm, then you should return 2 because you can cut the chocolate into 2 square pieces.\n\nIf the area of the cake is 81 cm^2 and the circumference of the chocolate is 15 cm, then you should return 3 because you can cut the chocolate into 3 square pieces.\n\nIf the area of the cake is 1 m^2 and the circumference of the chocolate is 50 cm, then you should return 0 because no chocolate can be cut into a square.\n\nIf the area of the cake is 24 m^2 and the circumference of the chocolate is 11 cm, then you should return 1 because you can cut the chocolate into one square.\n\nInput/Output\n\n[input] integer area\n\nAn integer representing the area of the rectangular cake.\n\nGuaranteed constraints:\n0 < area < 106.\n\n[input] integer circumference\n\nAn integer representing the circumference of a piece of chocolate.\n\nGuaranteed constraints:\n1 < circumference < 50.\n\n[output] integer\n\nThe number of pieces needed to cut the chocolate.\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n') == 10\nassert solution('100\\n') == 100\nassert solution('1\\n') == 1\nassert solution('10\\n') == 100\nassert solution('1000\\n') == 1000\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n100\n\"\"\"\n) == \"100\"\nassert solution(\n\"\"\"\n1000\n\"\"\"\n) == \"100\"\nassert solution(\n\"\"\"\n3000\n\"\"\"\n) == \"10\"\nassert solution(\n\"\"\"\n1000\n\"\"\"\n) == \"10\"\nassert solution(\n\"\"\"\n10000\n\"\"\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1900''') == '100'\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1900''') == \"100\"\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1900') == '100'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1000\\n\") == \"100\\n\"\nassert solution(\"3000\\n\") == \"0\\n\"\nassert solution(\"2000\\n\") == \"50\\n\"\nassert solution(\"2000\\n\") == \"50\\n\"\nassert solution(\"2000\\n\") == \"50\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '100'\nassert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('10') == '100'\nassert solution('10') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1100\") == 100\nassert solution(\"1010\") == 10\nassert solution(\"100\") == 0\nassert solution(\"1\") == 0\nassert solution(\"8\") == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1900') == '100'\nassert solution('1000') == '100'\nassert solution('1111') == '1'\nassert solution('1025') == '5'\nassert solution('5000') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n3 2\\n1 3\\n4 5\") == \"5\"\nassert solution(\"3\\n3 3\\n2 1\\n1 3\\n4 5\") == \"5\"\nassert solution(\"3\\n3 3\\n2 2\\n1 3\\n4 5\") == \"3\"\nassert solution(\"3\\n3 3\\n2 2\\n2 1\\n1 3\\n4 5\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 93
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n5 3 4 5\n4 3 2 3''') == '2'\nassert solution('''5\n2 0 0 0 0\n0 2 0 0 0\n0 0 2 0 0\n0 0 0 2 0''') == '1'\nassert solution('''6\n5 7 0 6 1\n0 0 0 0 0\n0 7 0 0 1\n0 0 0 0 0\n0 0 0 0 1\n0 1 0 0 1\n0 0 0 0 0''') == '3'\nassert solution('''7\n4 0 0 0 0 1 1\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 5 2\") == \"9\"\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''\\\n2\n3 5 2\n4 5\n'''\n) == '9'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1 1 1') == '4'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('4\\n1 1 2 3') == '3'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '30'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 2') == '9'\nassert solution('5\\n5 5 5 5 5') == '15'\nassert solution('3\\n5 4 2') == '6'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n1 3') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 2\n4 5''') == '3'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('1 1 10 20') == 'War'\nassert solution('3 2 10 11 19') == 'No War'\nassert solution('1 1 10 9') == 'No War'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20') == \"No War\"\nassert solution('8 15 13') == \"No War\"\nassert solution('16 22') == \"War\"\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'War'\nassert solution('2 2 1 1\\n1 1 1 1\\n1 1 1 1') == 'War'\nassert solution('2 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'War'\nassert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'War'\n",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 2 10 20\n8 15 13\n16 22\n''') == 'No War'\nassert solution(\n'''\n3 2 10 20\n8 15 13\n7 17\n16 22\n''') == 'War'\nassert solution(\n'''\n3 2 10 20\n8 15 13\n7 17\n3 17\n''') == 'War'\nassert solution(\n'''\n4 2 10 -1\n8 15 -1\n7 17 -1\n3 17 -1\n''') == 'War'\nassert solution(\n'''\n4 2 10 -1\n8 15 -1\n7 17 -1\n3 17 -1\n''') == 'War'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'War'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\n",
        "num_ids_2": 58,
        "num_ids_4": 146
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 6 7 8\\n1 2 3 4\\n6 7 8 9') == 'War'\nassert solution('2 4 4 2') == 'No War'\nassert solution('1 2 2 3') == 'No War'\nassert solution('3 2 3 1') == 'War'\nprint('All set!')\n",
        "num_ids_2": 39,
        "num_ids_4": 66
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22\") == \"War\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n4 5 6 7\\n10 11 12 13\") == \"War\"\nassert solution(\"1 2 3 4\\n4 5 6 7\\n10 11 12 13\\n10 11 12 13\") == \"No War\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'War'\nassert solution('5 3 4 3') == 'War'\nassert solution('5 3 4 4') == 'War'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''1\n2\n3''') == '6'\nassert solution('''2\n1\n3''') == '6'\nassert solution('''2\n2\n2''') == '6'\nassert solution('''1\n2\n3''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('2\\n2') == '6'\nassert solution('2\\n2\\n2') == '6'\nassert solution('2\\n2\\n2\\n2') == '6'\nassert solution('2\\n2\\n2\\n2\\n2') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n2\\n3\\n\") == \"6\"\n\"\"\"\n\n\"\"\"\n--- solution ---\n\nWe have two clocks. The time when the hand of each clock points upward is as follows:\n\n- Clock 1: 2, 4, 6,... seconds after the beginning\n- Clock 2: 3, 6, 9,... seconds after the beginning\nTherefore, it takes 6 seconds until the hands of both clocks point directly upward.\n\nWrite a function that takes in two clocks' time intervals as input, and outputs the number of seconds that the hand of both clocks point directly upward.\n\nFor example, the time intervals that represent each clock are:\n\n2, 2, 3,...\n3, 3, 6,...\n\nYour function should return 6.\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '6'\nassert solution('2\\n2') == '12'\nassert solution('3\\n3') == '24'\nassert solution('4\\n4') == '48'\nassert solution('5\\n5') == '108'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''1\n1\n2''') == '0'\nassert solution('''1\n1\n1''') == '0'\nassert solution('''10\n0.5\n5''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == '0'\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 151
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 3 4') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 1\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5 6') == 1\nassert solution('1 2 3 4 5 6 7') == 0\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(f'Test passed: {expected}')\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nassert solution('1 2 3') == '0'\nassert solution('2 1 3') == '0'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n') == '0'\nassert solution('1 2 3\\n4 5 6\\n') == '3'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '6'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18 19\\n') == '11'\n",
        "num_ids_2": 33,
        "num_ids_4": 86
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('3\\n2 1 3') == '0'\nassert solution('3\\n1 2 3\\n3 1 2') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n\"\"\"\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(20000)\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 4 4 3 5\") == \"2\"\nassert solution(\"6 4 4 3 5 2 1\") == \"1\"\nassert solution(\"5 4 3 3 2 1\") == \"1\"\nassert solution(\"5 4 3 3\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == result_good\n\n\n-----\n\nfrom collections import Counter",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 4') == '0'\nassert solution('3 4') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('3 5\\n1 6 3 4 5\\n8 9 7 8 9\\n9 2 11 12 13\\n14 15 16 17 18\\n19 20 21 22 22') == '8'\nassert solution('3 5\\n1 6 3 4 5\\n8 9 7 8 9\\n9 2 11 12 13\\n14 15 16 17 18\\n19 20 21 22 22') == '0'\n",
        "num_ids_2": 58,
        "num_ids_4": 133
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '6'\nassert solution('2 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20\\n21 22 23 24\\n25 26 27 28\\n29 30 31 32') == '0'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20\\n21 22 23 24\\n25 26 27 28\\n29 30 31 32\\n33 34 35 36\\n37 38 39 40\\n41 42 43 44\\n45 46 47 48') == '2'\n",
        "num_ids_2": 58,
        "num_ids_4": 146
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\n",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3''') == '6'\nassert solution('''4 3''') == '0'\nassert solution('''5 4''') == '2'\nassert solution('''5 4''') == '0'\nassert solution('''4 4''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '0'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '2'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15 16\\n') == '2'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n') == '6'\n",
        "num_ids_2": 59,
        "num_ids_4": 131
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('6\\n1 100') == '99'\nassert solution('6\\n1 2 3 4 5') == '3'\nassert solution('6\\n1 2 3 4 5 6') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 100') == '5'\nassert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n5 10 2 3 4 5') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('4\\n1 100\\n2 100\\n3 100\\n4 100') == '99'\nassert solution('4\\n1 100\\n2 1\\n3 1\\n4 1') == '5'\nassert solution('3\\n1 100\\n2 1\\n3 1') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 84
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\"\nassert solution(\"2\\n1 100\\n\") == \"99\"\nassert solution(\"5\\n1 100\\n\") == \"99\"\nassert solution(\"6\\n1 100 2 3 4 5 6\\n\") == \"5\"\nassert solution(\"2\\n1 100\\n\") == \"99\"\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\n-----",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n5 10') == '9'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '99'\nassert solution('3\\n1 100') == '99'\nassert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('6\\n1 100') == '99'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 1') == '99'\nassert solution('3\\n1 1 1') == '99'\nassert solution('3\\n1 1 1') == '99'\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 100') == '5'\nassert solution('4\\n1 100 3 4 7') == '99'\nassert solution('2\\n1 100') == '99'\n\n\n\n\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 45
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 0 1 0 1''') == '2'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''0''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 0\\n') == '0'\nassert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('8\\n1 0 1 1 1 1 0 1\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('0 0 0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 1 0 1') == 2\nassert solution('6') == 2\nassert solution('7') == 3\nassert solution('3') == 0\nassert solution('0 0 0') == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('4\\n0 0 0 0') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n1 0 1 0 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n6\n0 1 0 1 1 0\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n7\n1 0 1 1 1 0 1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3\n0 0 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n7\n0 1 0 1 1 0 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\n\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('7') == 0\nassert solution('0') == 0\nassert solution('6') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\nassert solution('asd') == 0\nassert solution('1') == 1\nassert solution('7') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\nassert solution(26) == 1\nassert solution(16) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 0\nassert solution('7') == 0\nassert solution('16') == 0\nassert solution('3') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n'\n'brie soft\\n'\n'camembert soft\\n'\n'feta soft\\n'\n'goat soft\\n'\n'muenster soft\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'gouda hard\\n'\n'colby hard\\n'\n'swiss hard') == '3'\nassert solution('7\\n'\n'parmesan hard\\n'\n'emmental hard\\n'\n'edam hard\\n'\n'colby hard\\n'\n'gruyere hard\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'swiss hard\\n'\n'gouda soft') == '4'\nassert solution('1\\n'\n'parmesan hard') == '1'\nassert solution('9\\n'\n'brie soft\\n'\n'camembert soft\\n'\n'feta soft\\n'\n'goat soft\\n'\n'muenster soft\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'gouda hard\\n'\n'swiss hard') == '3'\nassert solution('7\\n'\n'parmesan hard\\n'\n'emmental hard\\n'\n'edam hard\\n'\n'colby hard\\n'\n'gruyere hard\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'gouda hard\\n'\n'gouda soft') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"\nassert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"\nassert solution(\"5\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\"\n",
        "num_ids_2": 99,
        "num_ids_4": 198
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == '4'\nassert solution('''1\nx''') == '0'\nassert solution('''0''') == '0'\nassert solution('''1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 34
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == '4'\nassert solution('''10\nmushrooms soft\nemmental hard\npeanut butter soft\nparmesan hard\nedam hard\nduke soft\nemmental soft\ngouda soft\ncheesecloth soft\nswiss hard''') == '5'\nassert solution('''20\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\nemmental hard\ncolby hard\nbrie hard\ncheddar soft\ngruyere soft\nasiago hard\nswiss hard\nbrie hard''') == '5'\nassert solution('''5\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\"\"\".strip()) == '3'\n\nassert solution(\n\"\"\"\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\"\"\".strip()) == '4'\n\n\nprint(solution(input()))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\nfrom collections import defaultdict\nfrom typing import Dict, List, Optional, Tuple\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\"\"\") == '3'\nassert solution(\"\"\"6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\"\"\") == '4'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n'''\n) == 3\n\nassert solution(\n'''\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n'''\n) == 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == '4'\nprint('passed')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"9\") == 9\nassert solution(\"1\") == 1\nassert solution(\"10\") == 10\nassert solution(\"100\") == 100\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n0 1 2 1\n3 2 1 1\n\"\"\") == \"0 0 0 2\"\nassert solution(\n\"\"\"\n0 1 2 1\n3 2 1 1\n\"\"\") == \"1 0 0 2\"\nassert solution(\n\"\"\"\n0 1 2 1\n3 2 1 1\n\"\"\") == \"0 0 0 1\"\nassert solution(\n\"\"\"\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n\"\"\") == \"0 0 0 1 0 2 4\"\n\n\"\"\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2 1') == '0 0 0 2'\nassert solution('3 2 1 1') == '1 0 0 2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('0\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('0\\n2\\n0 1\\n1 2\\n') == '0 1 1 2\\n'\nassert solution('0\\n6\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('0\\n9\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\n",
        "num_ids_2": 73,
        "num_ids_4": 142
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'a'\nassert solution('a b') == 'a b'\nassert solution('a b c') == 'b c a'\nassert solution('ab') == 'ab'\nassert solution('a ab') == 'b a'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\nprint(solution(stdin))\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\"\n",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n0\n1\n1\n0\n'''\n) == '0'\n\nassert solution(\n'''\n0\n1\n1\n0\n'''\n) == '1'\n\nassert solution(\n'''\n0\n0\n1\n0\n'''\n) == '0'\n\nassert solution(\n'''\n0\n1\n0\n0\n'''\n) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('11001') == '1'\nassert solution('1000000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n1\n0''') == '0'\nassert solution('''1\n1\n1\n1''') == '1'\nassert solution('''1\n0\n0\n1''') == '1'\nassert solution('''0\n0\n0\n0''') == '0'\nassert solution('''0\n0\n1\n0''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('0\\n0\\n0\\n1') == '0'\nassert solution('0\\n1\\n0\\n1') == '1'\nassert solution('0\\n0\\n1\\n0') == '0'\nassert solution('1\\n1\\n0\\n0') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1010') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\n\nprint('Testcase 1 passed')\n\n-----\n\nExplanation:\n\nThere are only two possible digits, both will occur once.\n\n------\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 40') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('5 3 2') == 'No'\nassert solution('1000 2 10') == 'Yes'\nassert solution('7 6 5') == 'No'\nassert solution('1 1 2') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 10 50\") == \"No\"\nassert solution(\"10000 1 2\") == \"Yes\"\nassert solution(\"10000 100000 1\") == \"No\"\nassert solution(\"1000 1 2\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 2 3') == 'No'\nassert solution('1 3 4') == 'No'\nassert solution('5 2 10') == 'Yes'\nassert solution('1000 15 80') == 'No'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\nfrom sys import stdin\n\nd, t, s = [int(x) for x in stdin.readline().split()]",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == \"Yes\"\nassert solution('1000 15 80') == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1000 15 80''') == 'Yes'\nassert solution('''1000 2 30''') == 'Yes'\nassert solution('''1000 100 20''') == 'No'\n'''\n\nD, T, S = map(int, stdin.split(' '))",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 15 80') == 'Yes'\nassert solution('10 1000 10') == 'No'\nassert solution('10 1 10') == 'Yes'\nassert solution('10000 1 10') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"12 13 14\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('9 8 7') == 'No'\nassert solution('9 8 7 8 9 7') == 'Yes'\nassert solution('9 8 7 8 9') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a b c') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('3 3 3') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('44 66 44 99\\n77 66 94\\n64 99 66\\n56 69 63') == 'Yes'\nassert solution('44 66 44 99\\n77 66 94\\n64 99 66\\n56 69 63\\n56 67 34') == 'No'\nassert solution('44 66 44 99\\n77 66 94\\n64 99 66\\n56 69 63\\n56 67 34\\n56 65 32') == 'Yes'\nassert solution('44 66 44 99\\n77 66 94\\n64 99 66\\n56 69 63\\n56 67 34\\n56 65 32\\n56 61 22') == 'No'\nassert solution('44 66 44 99\\n77 66 94\\n64 99 66\\n56 69 63\\n56 67 34\\n56 65 32\\n56 61 22\\n56 49 29') == 'Yes'\n",
        "num_ids_2": 61,
        "num_ids_4": 142
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\\n9 1 4\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\\n9 1 4\\n4 3 2\") == \"No\"\n",
        "num_ids_2": 44,
        "num_ids_4": 103
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'Yes'\n\nassert solution('''8 14 9\n15 19 5\n1 11 10\n7 7 9\n9 4 2\n7\n7\n9\n9\n''') == 'Yes'\n\nassert solution('''49 40 10\n14 17 9\n4 6 8\n14\n17\n9\n4\n6\n8\n''') == 'Yes'\n\nassert solution('''49 40 10\n14 17 9\n4 6 8\n14\n17\n9\n4\n6\n8\n''') == 'No'\n\nassert solution('''49 40 10\n14 17 9\n4 6 8\n14\n17\n9\n4\n6\n8\n''') == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\"\"\") == \"Yes\"\nassert solution(\"\"\"87 80 27\n14 59 26\n78 83 26\n83 59 19\n19 76 67\n66 59 19\n59 76 57\n76 57 25\n25 56 53\n53 59 12\n50 59 11\n41 57 22\n17 59 22\n16 57 19\n19 57 13\n13 57 11\n11 56 54\n54 59 12\n50 59 10\n46 57 22\n32 59 22\n30 57 19\n26 57 14\n19 57 11\n14 57 11\n10 57 10\n6 57 8\n8 57 7\n7 57 4\n4 57 4\n2 57 2\n2 57 1\n1 56 56\n56 57 1\n1 56 55\n55 57 1\n55 56 50\n50 57 1\n50 56 49\n49 57 1\n49 56 48\n48 57 1\n48 56 47\n47 57 1\n47 56 46\n46 57 1\n46 56 45\n45 57 1\n45 56 44\n44 57 1\n44 56 43\n43 57 1\n43 56 42\n42 57 1\n42 56 41\n41 57 1\n41 56 40\n40 57 1\n40 56 39\n39 57 1\n39 56 38\n38 57 1\n38 56 37\n37 57 1\n37 56 36\n36 57 1\n36 56 35\n35 57 1\n35 56 34\n34 57 1\n34 56 33\n33 57 1\n33 56 32\n32 57 1\n32 56 31\n31 57 1\n31 56 30\n30 57 1\n30 56 29\n29 57 1\n29 56 28\n28 57 1\n28 56 27\n27 57 1\n27 56 26\n26 57 1\n26 56 25\n25 57 1\n25 56 24\n24 57 1\n24 56 23\n23 57 1\n23 56 22\n22 57 1\n22 56 21\n21 57 1\n21 56 20\n20 57 1\n20 56 19\n19 57 1\n19 56 18\n18 57 1\n18 56 17\n17 57 1\n17 56 16\n16 57 1\n16 56 15\n15 57 1\n15 56 14\n14 57 1\n14 56 13\n13 57 1\n13 56 12\n12 57 1\n12 56 11\n11 57 1\n11 56 10\n10 57 1\n10 56 9\n9 57 1\n9 56 8\n8 57 1\n8 56 7\n7 57 1\n7 56 6\n6 57 1\n6 56 5\n5 57 1\n5 56 4\n4 57 1\n4 56 3\n3 57 1\n3 56 2\n2 57 1\n2 56 1\n1 57 1\n1 56 0\n0 57 1\n\"\"\") == \"No\"\nassert solution(\"\"\"81 85 86\n72 71 70\n62 61 60\n50 51 50\n36 37 36\n30 30 30\n26 26 26\n18 18 18\n14 14 14\n10 10 10\n6 6 6\n2 2 2\n0 0 0\n\"\"\") == \"Yes\"\nassert solution(\"\"\"84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\"\"\") == \"No\"\nassert solution(\"\"\"87 80 27\n14 59 26\n78 83 26\n83 59 19\n19 76 67\n66 59 19\n59 76 57\n76 57 25\n25 56 53\n53 59 12\n50 59 11\n41 57 22\n17 59 22\n16 57 19\n19 57 13\n13 57 11\n11 56 54\n54 59 12\n50 59 10\n46 57 22\n32 59 22\n30 57 19\n26 57 14\n19 57 11\n14 57 11\n10 57 10\n6 57 8\n8 57 7\n7 57 4\n4 57 4\n2 57 2\n2 57 1\n1 56 56\n56 57 1\n1 56 55\n55 57 1\n55 56 50\n50 57 1\n50 56 49\n49 57 1\n49 56 48\n48 57 1\n48 56 47\n47 57 1\n47 56 46\n46 57 1\n46 56 45\n45 57 1\n45 56 44\n44 57 1\n44 56 43\n43 57 1\n43 56 42\n42 57 1\n42 56 41\n41 57 1\n41 56 40\n40 57 1\n40 56 39\n39 57 1\n39 56 38\n38 57 1\n38 56 37\n37 57 1\n37 56 36\n36 57 1\n36 56 35\n35 57 1\n35 56 34\n34 57 1\n34 56 33\n33 57 1\n33 56 32\n32 57 1\n32 56 31\n31 57 1\n31 56 30\n30 57 1\n30 56 29\n29 57 1\n29 56 28\n28 57 1\n28 56 27\n27 57 1\n27 56 26\n26 57 1\n26 56 25\n25 57 1\n25 56 24\n24 57 1\n24 56 23\n23 57 1\n23 56 22\n22 57 1\n22 56 21\n21 57 1\n21 56 20\n20 57 1\n20 56 19\n19 57 1\n19 56 18\n18 57 1\n18 56 17\n17 57 1\n17 56 16\n16 57 1\n16 56 15\n15 57 1\n15 56 14\n14 57 1\n14 56 13\n13 57 1\n13 56 12\n12 57 1\n12 56 11\n11 57 1\n11 56 10\n10 57 1\n10 56 9\n9 57 1\n9 56 8\n8 57 1\n8 56 7\n7 57 1\n7 56 6\n6 57 1\n6 56 5\n5 57 1\n5 56 4\n4 57 1\n4 56 3\n3 57 1\n3 56 2\n2 57 1\n2 56 1\n1 57 1\n1 56 0\n0 57 1\n\"\"\") == \"No\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"41 2\\n5 6\") == 30\n\"\"\"\n\"\"\"\nTest cases\n41 2\n5 6\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 30\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\n\nassert solution('''14 2\n10 11\n''') == '-1'\nassert solution('''1 2\n10 11\n''') == '1'\nassert solution('''20 1\n10 11\n''') == '-1'\nassert solution('''1 1\n10 11\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('41 2') == '30'\nassert solution('9 6') == '30'\nassert solution('9 1') == '-1'\nassert solution('3 1') == '-1'\nassert solution('3 4') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 10\\n5 6\") == \"30\"\nassert solution(\"1 10\\n5 6\") == \"30\"\nassert solution(\"1 10\\n5 6\") == \"30\"\nassert solution(\"1 10\\n5 6\") == \"30\"\nassert solution(\"1 10\\n5 6\") == \"30\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n5 6\") == \"30\"\nassert solution(\"4 2\\n5 6\\n5 6\") == \"-1\"\nassert solution(\"8 4\\n1 2\\n3 4\\n5 6\\n7 8\") == \"7\"\nassert solution(\"2 2\\n5 6\") == \"0\"\nassert solution(\"3 3\\n4 5\\n5 6\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5') == '5'\nassert solution('3 1') == '3'\nassert solution('1 100') == '1'\nassert solution('4 96') == '1'\nassert solution('0 20') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == \"\"\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 1') == '100'\nassert solution('1 2') == '1'\nassert solution('1 3') == '10'\nassert solution('2 5') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 0') == '0'\nassert solution('0 3') == '0'\nassert solution('1 3') == '0'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 0') == '1'\nassert solution('0 1') == '1'\nassert solution('0 0') == '1'\nassert solution('0 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[4:]\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('0 2') == '2'\nassert solution('0 3') == '3'\nassert solution('0 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2') == '1'\nassert solution('1 0') == '10'\nassert solution('2 4') == '20'\nassert solution('4 5') == '40'\nassert solution('5 3') == '50'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6 7') == '7'\nassert solution('1 2 3 4 5 6 7 8 9') == '9'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10'\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 0') == '100'\nassert solution('2 1') == '101'\nassert solution('2 2') == '100'\nassert solution('2 0') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('2 4 5 1') == '2'\nassert solution('3 4 5 1') == '3'\nassert solution('3 4 5') == '1'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 6 8') == '2'\nassert solution('5 5 6') == '1'\nassert solution('3 1 2') == '1'\nassert solution('7 4 8') == '1'\nassert solution('6 5 6') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 6 8\") == \"2\"\n\nprint(solution(\"5 5 5\")) # 1\nprint(solution(\"5 4 6 7\")) # 1\nprint(solution(\"7 6 8\")) # 2\nprint(solution(\"7 7 6\")) # 1\nprint(solution(\"7 7 5\")) # 1\nprint(solution(\"5 4 3 2 1\")) # 1\nprint(solution(\"5 4 3\")) # 1\nprint(solution(\"5\")) # 1\nprint(solution(\"1\")) # 1\nprint(solution(\"5 5 5\")) # 1\nprint(solution(\"5 5 4 4\")) # 1\nprint(solution(\"3 3 3\")) # 1\nprint(solution(\"1 1 1\")) # 1\nprint(solution(\"1 1\")) # 1\nprint(solution(\"1\")) # 1\nprint(solution(\"1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\")) # 1\nprint(solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\")) # 1\nprint(solution
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n8\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\"\nassert solution(\"2\\n3\\n4\\n\") == \"2\"\nassert solution(\"2\\n2\\n4\\n\") == \"2\"\nassert solution(\"2\\n3\\n5\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 6 8') == '2'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 6 8') == '2'\nassert solution('7 6 8') == '2'\nassert solution('7 6 8') == '2'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n3 3 3') == '3'\nassert solution('3\\n3 3 3') == '3'\nassert solution('3\\n1 1 1') == '1'\nassert solution('3\\n2 2 2') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('2\\n7 6') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n10') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n6 8\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '5'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '8'\nassert solution('7\\n1 2 3 4 5 6\\n') == '1'\nassert solution('7\\n1 2 3 4 5 6\\n') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 77
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('2 3 1') == '1 2 3'\nassert solution('2 3') == '1 2'\nassert solution('2 3 1') == '1 2'\nassert solution('2 3 1 4') == '1 2 3 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1') == '3 1 2'\nassert solution('4\\n2 3 1 4') == '3 1 4 2'\nassert solution('4\\n2 1 4 3') == '3 1 4 2'\nassert solution('4\\n2 3 1 4') == '3 1 4 2'\nassert solution('4\\n2 3 3 1') == '3 1 4 2'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n3 1') == '1 2 3'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('5\\n1 2 4 3 2') == '3 2 1 4'\nassert solution('5\\n1 2 4 3 1') == '1 4 3 2'\nassert solution('2\\n1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 70
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8 2 10 9 1 6 5 4 3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8 2 10 9 1 6 5 4 3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8 2 10 9 1 6 5 4 3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8 2 10 9 1 6 5 4 3'\n",
        "num_ids_2": 47,
        "num_ids_4": 107
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n1\\n1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 20 30') == '0'\nassert solution('1 5 5') == '2'\nassert solution('1 1 1') == '0'\nassert solution('5 10 10') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('8 1 5') == '5'\nassert solution('7 1 5') == '0'\nassert solution('7 3 5') == '1'\nassert solution('7 9 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"3 2 9\") == \"6\"\nassert solution(\"1 2 9\") == \"0\"\nassert solution(\"100000 100000 100000\") == \"0\"\nassert solution(\"1000 5 100\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('1 2 10') == '0'\nassert solution('10 7 0') == '0'\nassert solution('1000000 9999999 99') == '999999'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('0 0 0') == 0\nassert solution('1 1 0') == 0\nassert solution('3 2 2') == 1\nassert solution('6 6 6') == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 7 100\\n') == '9'\nassert solution('10 7 100\\n') == '9'\nassert solution('1 1 1\\n') == '0'\nassert solution('1 1 1\\n') == '0'\nassert solution('1 1 1\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"11 7 100\") == \"0\"\nassert solution(\"100 7 100\") == \"0\"\nassert solution(\"1017 100\") == \"0\"\nassert solution(\"1000000 7 100\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n        '10 7 100'\n        ) == '9'\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 150\n150 140 100 200\n''') == '2'\n\nassert solution('''3 1\n1\n1\n1''') == '2'\n\nassert solution('''3 1\n1\n1\n1''') == '3'\n\nassert solution('''2 2\n1\n1''') == '0'\n\nassert solution('''1 1\n1''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 150''') == '2'\nassert solution('''4 150\n150 140 100 200''') == '2'\nassert solution('''10 2000\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''10 2000\n1 2 3 4 5 6 7 8 9 10''') == '9'\nassert solution('''10 2000\n5 2000\n50 50 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 15''') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 38
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\nassert solution('''4 0''') == '0'\nassert solution('''1 1''') == '1'\nassert solution('''1 2''') == '2'\nassert solution('''2 2''') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 150') == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('1 2') == 0\nassert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 0\nassert solution('1 2 3 4 5') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 3\\n2 3') == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 1000\\n100 200 200 400 400 400\") == \"3\"\nassert solution(\"6 1000\\n100 200 200 400 400 400 400\") == \"2\"\nassert solution(\"2 100\\n100 80\") == \"0\"\nassert solution(\"5 100\\n100 80 80 90 90\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '0'\nassert solution('2 2') == '1'\nassert solution('2 10') == '1'\nassert solution('3 2') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 100') == '10'\nassert solution('1 100') == '1'\nassert solution('10 100') == '10'\nassert solution('10 100') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n5 4 2 1''') == 'Yes'\nassert solution('''4 1\n5 4 2 1''') == 'No'\nassert solution('''2 3\n3 2 1''') == 'Yes'\nassert solution('''2 3\n2 2 1''') == 'Yes'\nassert solution('''6 4\n5 4 2 1 3 2''') == 'No'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('3 10') == 'Yes'\nassert solution('3 4') == 'Yes'\nassert solution('5 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"No\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('4 1\\n5 4 2 1') == 'No'\n\n-----Answer-----\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('2 1') == 'No'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 4 2 1\") == \"No\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 4 2 1\") == \"No\"\nassert solution(\"1 0\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 4\") == \"No\"\nassert solution(\"4 4 2 1\") == \"Yes\"\nassert solution(\"4 4 2 1 1\") == \"Yes\"\nassert solution(\"4 4 2 1 1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('5 4 2 1') == 'Yes'\nassert solution('4 1') == 'Yes'\nassert solution('5 4 2 1') == 'No'\nassert solution('4 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1\\n5 4 2 1\\n') == 'Yes'\nassert solution('6 1\\n5 4 2 1\\n1 2 3 4 5 6\\n') == 'Yes'\nassert solution('10 1\\n5 4 2 1\\n1 2 3 4 5 6 7 8 9 10\\n') == 'Yes'\nassert solution('3 1\\n5 4 2\\n1 2 3 4 5 6\\n') == 'No'\nassert solution('5 2\\n5 4 2 1\\n1 2 3 4 5\\n') == 'Yes'\n",
        "num_ids_2": 46,
        "num_ids_4": 103
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''1 1 1\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 2''') == \"5\"\nassert solution('''5 2 3''') == \"0\"\nassert solution('''7 3 3''') == \"8\"\nassert solution('''1 1 1''') == \"1\"\nassert solution('''6 2 4''') == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3 2''') == '5'\nassert solution('''2 3 2''') == '5'\nassert solution('''4 6 2''') == '6'\nassert solution('''2 3 3''') == '3'\nassert solution('''6 6 2''') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2 2') == '5'\nassert solution('1 1 3') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 2 2') == '2'\nassert solution('1 2 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('1 2 1\\n#\\n') == '1'\nassert solution('1 1 1\\n#\\n') == '0'\nassert solution('2 1 1\\n#\\n') == '0'\nassert solution('2 2 1\\n#\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"#.#\") == \"1\"\nassert solution(\"#.#\") == \"1\"\nassert solution(\"#####\") == \"1\"\nassert solution(\"#..\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('..#') == '5'\nassert solution('###') == '5'\nassert solution('#..#') == '5'\nassert solution('#.#.###') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin = \"2020 2040\") == \"2\"\n'''\nfrom math import sqrt",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('20 1') == '1'\nassert solution('2020 1') == '1'\nassert solution('20 1 2') == '1'\nassert solution('20 40') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('20 40') == '2'\nassert solution('10 20 40') == '20'\nassert solution('20 30') == '20'\nassert solution('30 20') == '20'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\n\"\"\"\n\nfrom math import gcd\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2020 2040') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2 2') == '0'\nassert solution('12 34') == '0'\nassert solution('3 4') == '0'\nassert solution('6 6') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('ac') == 'WA'\nassert solution('abc') == 'WA'\nassert solution('AC') == 'AC'\nassert solution('ac') == 'WA'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"aTcDe\") == \"WA\"\nassert solution(\"atCoder\") == \"AC\"\nassert solution(\"atCOder\") == \"WA\"\nassert solution(\"atcoder\") == \"WA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('ca') == 'WA'\nassert solution('cca') == 'AC'\nassert solution('Cca') == 'AC'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"C#\") == \"WA\"\nassert solution(\"abcabc\") == \"WA\"\nassert solution(\"abcabc\") == \"WA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('aCdEr') == 'AC'\nassert solution('abCdEf') == 'WA'\nassert solution('aaCdEe') == 'WA'\nassert solution('AaCdEe') == 'WA'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'AC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AaCc') == 'WA'\nassert solution('aCc') == 'WA'\nassert solution('AaCcD') == 'WA'\nassert solution('AtCoder') == 'AC'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'AC'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'AC'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('aCb') == 'WA'\nassert solution('AdsCc') == 'WA'\nassert solution('aAa') == 'WA'\nassert solution('Acb') == 'WA'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'AC'\nassert solution('A') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCODER') == 'WA'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1214', '4') == '2'\nassert solution('1214', '3') == '2'\nassert solution('1214', '2') == '2'\nassert solution('1214', '1') == '1'\nassert solution('1214', '0') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"1234\", 4) == \"5\"\nassert solution(\"1224\", 4) == \"4\"\nassert solution(\"1224\", 4) == \"4\"\nassert solution(\"1234567\", 4) == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"1234\", 4) == \"2\"\nassert solution(\"1234\", 8) == \"6\"\nassert solution(\"12345\", 4) == \"2\"\nassert solution(\"12345\", 8) == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 9) == '2'\nassert solution('1214', 19) == '1'\nassert solution('1214', 21) == '1'\nassert solution('1214', 22) == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1214', '4') == '2'\nassert solution('1324', '4') == '2'\nassert solution('2223', '4') == '22'\nassert solution('1244', '4') == '2'\nassert solution('9999999999', '4') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()[-4]\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1', 1) == '1'\nassert solution('1214', 4) == '2'\nassert solution('1324', 1) == '1'\nassert solution('1333224444', 1) == '1'\nassert solution('133333333322224444444444444444', 1) == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 8) == '2'\nassert solution('1214', 10) == '2'\nassert solution('1214', 11) == '2'\nassert solution('1214', 12) == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1', 1) == '1'\nassert solution('12', 1) == '1'\nassert solution('12', 2) == '22'\nassert solution('1234', 1) == '1'\nassert solution('1234', 2) == '222'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1324', 4) == '2'\nassert solution('1214', 4) == '2'\nassert solution('1214', 6) == '2'\nassert solution('1214', 8) == '2'\nassert solution('1214', 10) == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('5 2 3 4 1') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('5 2 3 4 1') == 'NO'\nassert solution('5 4 3 2 1') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''5\n5 2 3 4 1''') == 'YES'\nassert solution('''5\n5 2 3 4 1''') == 'NO'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''2\n1 2''') == 'YES'\n",
        "num_ids_2": 11,
        "num_ids_4": 25
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"3\\n3 2 1\") == \"NO\"\nassert solution(\"5\\n5 3 4 1 2\") == \"YES\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"NO\"\nassert solution(\"2\\n2\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n2 3 4 5 1\") == \"NO\"\nassert solution(\"2\\n2\") == \"YES\"\nassert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"YES\"\n",
        "num_ids_2": 34,
        "num_ids_4": 61
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4') == 'NO'\nassert solution('5\\n2 4 3 1') == 'NO'\nassert solution('5\\n2 3 4 1') == 'NO'\nassert solution('5\\n3 4 1 2') == 'NO'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 2 3 4 5 6\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"NO\"\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"123\") == \"2\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"12345\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('9') == '1'\nassert solution('10001') == '33'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n\n\n\n\"\"\"\n\n\"\"\"\ns=int(input())\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nassert solution('''1000000000000000000000000000000000''') == '33'\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(201920181) == 4\nassert solution(1000000000000000000000000000000000) == 33\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(1000000000000000000000000000000000) == 33\nassert solution(201920181) == 4\nassert solution
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890') == '33'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n2 4 7 11 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3\n13 37 39\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"4\n0 0 0 0\n1 2 3 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"3\n1 2 -1\n-6 -12 6\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('-2 -4 -6 -8 -10 0') == '0'\nassert solution('1 2 -1') == '3'\nassert solution('-13 -37 39') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n2 4 7 11 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3\n13 37 39\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"4\n0 0 0 0\n1 2 3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"3\n1 2 -1\n-6 -12 6\n\"\"\") == \"3\"\n\nassert solution(\"\"\"1\n10\n\"\"\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n-6 -12 6\\n') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('4\\n1 2 -1\\n1 -2 -1\\n1 1 1 1\\n') == '0'\n",
        "num_ids_2": 55,
        "num_ids_4": 104
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 4 7 11 3\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('3\\n1 2 -1\\n1 2 3\\n') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('1\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('1\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('1\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('2\\n-6 -12 6\\n1 2 3 4\\n') == '3'\n",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces\\ndodivthree') == '5'\nassert solution('zabbbcc') == '5'\nassert solution('bambarbia\\nhellocode') == '5'\nassert solution('code??????\\n??????test') == '10'\nassert solution('code??????\\n??????test') == '10'\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0\\n6 5\\n3 5\\n4 8\\n5 7\\n1 2\\n7 4\\n8 10\\n9 9'\nassert solution('''10\ncode??????\n??????test\n''') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n5 7\\n2 4\\n10 9\\n8 10'\nassert solution('''11\nc!da?bc\ndaabdca\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '5'\nassert solution('code??????') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == '1'\nassert solution('c') == '1'\nassert solution('?') == '?'\nassert solution('a?') == '1'\nassert solution('ab?') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input/test') == '7\\n1 2\\n4 5\\n3 6\\n2 7\\n9 10\\n8 9'\nassert solution('input/test2') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10'\nassert solution('input/test3') == '0'\nassert solution('input/test4') == '5\\n1 2\\n4 5\\n3 6\\n2 7\\n9 10\\n8 9'\nassert solution('input/test5') == '10'\n",
        "num_ids_2": 89,
        "num_ids_4": 139
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '0'\nassert solution('code??????') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\n\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\n\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\n\nassert solution('''10\ncode??????\n??????test\n''') == '10'\n\nprint('solution', solution('''30\nzxcvbn\nqwertyui\nasdfghjkl\nzxcvbnm\n123456\nqwertyui\nasdfghjkl\nzxcvbnm\n987654\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui\nasdfghjkl\nzxcvbnm\nqwertyui",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('code?for?code') == '1'\nassert solution('codeforces') == '1'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('code??') == '5'\nassert solution('??????') == '10'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '10'\nassert solution('bambarbia') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '3'\nassert solution('''7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''3\n1 1 1 1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2 2\\n2 3\\n1 1\\n3 3\\n1 2\\n2 3\\n3 3\\n4 4\\n1 1 1 1') == '2\\n3 4\\n1 1\\n3 3'\nassert solution('2\\n2 2\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1",
        "num_ids_2": 1261,
        "num_ids_4": 1261
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4\n1 1 1 1\n\"\"\") == \"\"\"3\"\"\"\n\nassert solution(\"\"\"7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"\"\"3\n7 7\n2 3\n4 5\n\"\"\"\nassert solution(\"\"\"11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"2\n3 4\n1 1\n2 2\n3 3\n4 4\n5 5\n6 7\n7 7\n8 9\n9 10\n10 10\n\"\"\"\nassert solution(\"\"\"7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"\"\"3\n7 7\n2 3\n4 5\n\"\"\"\nassert solution(\"\"\"5\n-2 2 -1 -3 -4 -5\n\"\"\") == \"\"\"2\n-5 -4\n2 2\n-2 2\n-1 -3\n-3 -4\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1 2 2 1 5 3') == '3'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3'\nassert solution('11 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10') == '4 4'\nassert solution('1 1 1 1') == '4 4'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '4 4'\n",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1 1\\n2 2 2 2\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"4\\n1 1 1 1\\n2 2 2 2\") == \"3\\n4 4\\n1 1\\n2 2\"\nassert solution(\"2\\n1 1\\n2 2\") == \"1\\n1 2\\n2 2\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"3\\n3 3\\n4 5\\n1 1\\n2 2\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n2 2\\n1 1\\n3 3\\n4 4\\n1 1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 142
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\nassert solution('1 1 1 1') == '4 4'\n",
        "num_ids_2": 40,
        "num_ids_4": 92
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4\n1 1 1 1'''\n) == '3'\n\nassert solution(\n'''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5'''\n) == '2'\n\nassert solution(\n'''7\n4 1 2 2 1 5 3'''\n) == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n1\n2\n3\n4\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n''') == '4'\nassert solution('''\n1\n2\n2\n3\n3\n''') == '3'\nassert solution('''\n3\n2 3 4 5\n4 3 2 4\n3 1 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1\\n1 3\\n') == '0'\nassert solution('4 2\\n2 78 4 10\\n') == '7'\nassert solution('5 2\\n3 7 19 3 3\\n') == '12'\nassert solution('4 2\\n2 78 4 10\\n') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '0'\nassert solution('4 2') == '12'\nassert solution('2 78 4 10') == '12'\nassert solution('5 2') == '0'\nassert solution('3 7 19 3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\nassert solution('100000000 999999999\\n100010000 100010000\\n') == '0'\nassert solution('40000000000000000000000000000000 100000000000000000000000\\n1000000000000000000000000000\\n1000000000000000000000000000\\n1000000000000000000000000000\\n') == '9'\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\nassert solution('4 7\\n2 78 4 10\\n') == '0'\nassert solution('3 3\\n1 2 1\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '0'\nassert solution('7 8') == '1'\nassert solution('5 2') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('4 2\\n2 78 4 10') == '0'\nassert solution('7 2\\n3 7 19 3 3') == '12'\nassert solution('8 2\\n5 9 2 3 2') == '10'\nassert solution('8 2\\n1 2 3 4 2') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    2 4\n''') == '4'\nassert solution('''\n    3\n    2 5\n''') == '9'\nassert solution('''\n    3\n    2 5\n''') == '7'\nassert solution('''\n    3\n    2 4\n''') == '6'\nassert solution('''\n    5\n    2 4\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2') == '9'\nassert solution('2\\n5 7') == '14'\nassert solution('2\\n5 2 7') == '14'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n2 2') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n5') == \"9\"\nassert solution('2\\n2\\n2\\n5') == \"4\"\nassert solution('2\\n2\\n2\\n2\\n5') == \"4\"\nassert solution('2\\n2\\n2\\n2\\n2\\n5') == \"4\"\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n5') == \"4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 82
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\nprint(solution(input))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '12'\nassert solution('5 4 3 2 1') == '12'\nassert solution('2 1 3 4 5') == '11'\nassert solution('7 6 5 4 3 2 1') == '18'\nassert solution('2 1 3 4 5 1') == '15'\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"9\"\nassert solution(\"2 3 2 4 2\") == \"7\"\nassert solution(\"2 3 1 2 3\") == \"7\"\nassert solution(\"2 3 1 2 3\") == \"7\"\nassert solution(\"2 3 1 2 3\") == \"7\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"2 5\") == \"9\"\nassert solution(\"2 -5\") == \"0\"\nassert solution(\"1 -5 -3\") == \"3\"\nassert solution(\"2 3 5 7 10 13 14 19\") == \"35\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n\") == \"9\"\nassert solution(\"3\\n2 5\\n\") == \"7\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"45\"\nassert solution(\"100\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 10\") == \"900100100100100100100100100100100100100100100100100100100100100100100100100\n\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 769
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''3 5 7\n2 3 2 2\n2 2 2 2\n2 1 2 2\n1 1 1 1\n2 2 2 2''') == '280'\nassert solution('''2 2 2\n1 1 1 1\n2 2 2 2''') == '0'\nassert solution('''1 1 1\n1 1 1 1\n2 2 2 2''') == '0'\nassert solution('''1 1 1\n1 1 1 1\n2 2 2 2''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 110\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"110\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"110\"\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"110\"\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 1 1 1') == '5'\nassert solution('1 1 1 1') == '0'\nassert solution('2 2 2 2') == '4'\nassert solution('1 1 2 2') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 6 3') == 5\nassert solution('1 4 2 3') == 4\nassert solution('1 4 8 9 10') == 10\nassert solution('1 3 2 4') == 0\nassert solution('1 3 2 2') == 1\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('2 4 4 3') == '1'\nassert solution('2 4 8 3') == '1'\nassert solution('5 1 2 3 4') == '2'\nassert solution('5 3 4 1 2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('1 4 5 3') == '4'\nassert solution('2 3 2 5') == '2'\nassert solution('1 3 1 1') == '2'\nassert solution('2 2 2 2') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 4 6 3\") == 5\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 4 6 3') == '5'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 6 3') == '5'\n\nprint('Test PASSED')\nprint()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 4 6 3\") == 5\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2 3 4') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 3 4') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''4\n0 0\n1 1\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''5\n0 0\n1 1\n1 0\n0 1\n1 1\n1 0''') == '2.2761423749'\n\nassert solution('''6\n0 0\n1 1\n1 0\n0 1\n1 1\n1 0\n0 1''') == '2.2761423749'",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"2.2761423749\"\nassert solution(\"1 0\") == \"3.415242169\"\nassert solution(\"0 1\") == \"3.415242169\"\nassert solution(\"1 1\") == \"4.386597977\"\nassert solution(\"1 2\") == \"4.386597977\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('1 1') == '1'\nassert solution('2 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1 0') == '2.2761423749'\nassert solution('0 0\\n0 1\\n1 0') == '1.5'\nassert solution('1 0\\n0 1\\n0 1') == '1.5'\nassert solution('1 0\\n1 0') == '2.2761423749'\nassert solution('1 0\\n1 0') == '2.2761423749'\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''\n3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''\n5\n0 0\n2 0\n3 0\n4 0\n1 0\n''') == '2.2761423749'\nassert solution('''\n5\n3 3\n1 1\n2 2\n3 3\n4 4\n2 1\n3 2\n3 2\n''') == '2.2761423749'\nassert solution('''\n2\n2 2\n1 1\n1 1\n''') == '2.2761423749'\n\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n0 0\\n1 0\\n0 1\"\n) == \"2.2761423749\"\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0.0'\nassert solution('1 0') == '1.0'\nassert solution('0 1') == '1.0'\nassert solution('2 0') == '2.0'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"2.2761423749\"\nassert solution(\"1 0\") == \"2.2761423749\"\nassert solution(\"0 1\") == \"2.2761423749\"\nassert solution(\"1 1\") == \"2.2761423749\"\nassert solution(\"2 0\") == \"2.2761423749\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n1 0') == 2.276142\nassert solution('0 1\\n1 1') == 3.043478260869565\nassert solution('2 2\\n1 1') == 2.822580645161267\nassert solution('4 4\\n1 1\\n0 1\\n0 1') == 2.276142\nassert solution('5 5\\n1 1\\n0 1\\n1 1\\n0 1') == 2.276484\n",
        "num_ids_2": 37,
        "num_ids_4": 82
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.276142\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"12 4\") == \"4\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"6 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'\nassert solution('18 4') == '10'\nassert solution('100 4') == '54'\nassert solution('12 2') == '6'\nassert solution('100 100') == '200'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 5') == '5'\nassert solution('100 1') == '100'\nassert solution('100 2') == '100'\nassert solution('100 4') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 10\") == \"10\"\n\n'''\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\nfor _ in range(T):\n    A, B = map(int, sys.stdin.readline().split())\n    print(A*B-(A+B-1))\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"4\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"100 5\") == \"50\"\nassert solution(\"1000 5\") == \"500\"\nassert solution(\"1 100\") == \"100\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10000''') == '3'\nassert solution('''100000''') == '10'\nassert solution('''11''') == '2'\nassert solution('''110000''') == '9'\nassert solution('''1000001''') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10000') == '3'\n\nassert solution('12') == '2'\n\nassert solution('13') == '3'\n\nassert solution('100000000') == '28'\n\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(10000) == \"3\"\nassert solution(1000000) == \"3\"\nassert solution(100000001) == \"3\"\nassert solution(100001000) == \"3\"\nassert solution(1000010000) == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"10000\") == \"3\"\nassert solution(\n    \"12001\") == \"1\"\nassert solution(\n    \"1000000000\") == \"6\"\nassert solution(\n    \"1000000000\") == \"9\"\nassert solution(\n    \"1000000000\") == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n') == '3'\nassert solution('1\\n') == '1'\nassert solution('9\\n') == '2'\nassert solution('10000\\n') == '3'\nassert solution('10000000\\n') == '7'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''10000'''\n) == '3', solution('''10000''')\nassert solution(\n    '''1000000000'''\n) == '1', solution('''1000000000''')\nassert solution(\n    '''12345678901234567890'''\n) == '1', solution('''12345678901234567890''')\nassert solution(\n    '''9999999999999999999999999999999999'''\n) == '1', solution('''9999999999999999999999999999999999''')\nassert solution(\n    '''123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'''\n) == '1', solution('''123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890''')\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10000') == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10000\n\"\"\") == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10000) == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 3\\n3 1 2 3\\n2 3 2') == '1'\n\"\"\"\n\nfrom sys import stdin,stdout\nfrom collections import Counter\n\n\nn,m = [int(i) for i in stdin.readline().split()]\ncount = Counter(map(int, stdin.readline().split()))\ntotal = sum(count.values())\n\nstdout.write(str(total - n))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('2 3\\n2 1 3\\n3 1 2 3') == '1'\nassert solution('2 3\\n2 1 3\\n3 1 2 3') == '1'\nassert solution('1 2\\n1 2 3') == '0'\nassert solution('2 3\\n2 1 3\\n3 1 2 3') == '2'\n",
        "num_ids_2": 51,
        "num_ids_4": 89
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Katsusando loves omelette rice.\") == \"1\"\nassert solution(\"Katsusando loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\") == \"5\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\") == \"1\"\nassert solution(\"3 4\\n2 3 2\\n2 3 2\") == \"2\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\") == \"2\"\n",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n2\\n1\\n3\\n2\\n2\\n1') == '1'\nassert solution('3\\n3\\n2\\n1\\n3\\n2\\n2\\n1') == '1'\nassert solution('3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '1'\nassert solution('3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '1'\nassert solution('3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '1'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"Katsusando loves omelette rice.\") == \"1\"\nassert solution(\"Katsusando loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\") == \"4\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n",
        "num_ids_2": 58,
        "num_ids_4": 80
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n') == '1'\nassert solution('2 2\\n1 1\\n2 1\\n') == '0'\nassert solution('3 2\\n3 1 2\\n2 3 2\\n') == '0'\nassert solution('1 1\\n3 1\\n3 1\\n') == '2'\nassert solution('3 2\\n3 1 2\\n2 3 2\\n') == '2'\n",
        "num_ids_2": 50,
        "num_ids_4": 94
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Katsusando loves omelette rice.\\n' +\n    'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n    'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n    'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n    'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('1 2 3\\n3 1 2 3\\n2 3 2\\n') == '1'\nassert solution('1 2 3\\n3 1 2 3\\n2 3 2\\n') == '1'\nassert solution('1 2 3\\n3 1 2 3\\n2 3 2\\n') == '1'\nassert solution('1 2 3\\n3 1 2 3\\n2 3 2\\n') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"1\"\nassert solution(\"2 3 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == '0.500000'\nassert solution(2) == '0.125000'\nassert solution(3) == '0.062500'\nassert solution(4) == '0.062500'\nassert solution(5) == '0.062500'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1000') == '1'\nassert solution('2') == '1'\nassert solution('10000') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '0.5000000000'\n\"\"\"\n\nfrom math import factorial\nfrom fractions import Fraction\nN = int(input())",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.5000000000'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4''') == '0.5'\n'''\n    result = []\n    for i in range(1,5):\n        result.append(str(0.5))\n    return''.join(result)\n'''\n'''\n    result = []\n    for i in range(1,5):\n        result.append(str(0.5))\n    return''.join(result)\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"0.5000000000\"\nassert solution(2) == \"0.2499999976\"\nassert solution(3) == \"0.16666666667\"\nassert solution(4) == \"0.08333333333333333\"\nassert solution(5) == \"0.04\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5'\nassert solution('7') == '0.1666'\nassert solution('10') == '0.833'\nassert solution('100') == '0.222'\nassert solution('1000') == '0.0001'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '0.5000000000'\nassert solution('2\\n') == '0.25000000000'\nassert solution('3\\n') == '0.16666666667'\nassert solution('4\\n') == '0.0833333333333333'\nassert solution('5\\n') == '0.05555555555555555'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\n\nassert solution(\"8\") == \"0.5000000000\"\n\nassert solution(\"2\") == \"0.5000000000\"\n\nassert solution(\"15\") == \"0.25000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1 2 1\\n1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1 1 1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1 1 1\\n1 1 1\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''4\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution('''6\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution('''8\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '5'\nassert solution('''14\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1 2\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 37
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n2\\n0\\n1\\n1\\n1\\n1\\n1\\n2\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1572,
        "num_ids_4": 1572
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\n",
        "num_ids_2": 63,
        "num_ids_4": 129
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1572,
        "num_ids_4": 1572
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2 1\n1\n1 1\n1''') == '2'\n\nassert solution('''1\n2 1\n1\n1 1\n1''') == '2'\n\nassert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0''') == '2'\n\nassert solution('''3\n1\n2 0\n1\n1 1\n1\n2 0''') == '2'\n\nassert solution('''4\n1\n2 0\n1\n1 1\n1\n2 1\n1\n1 1\n1\n2 0''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2\"\nprint(solution(sample_input))\n\"\"\"\n\n\"\"\"\nGiven a list of words, write a method to sort the words in ascending order based on the length of the words.\n\nFor example, the longest word is 'chicken', followed by 'elephant', 'horse', 'chicken', and 'chicken'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5', 'nikoandsolstice') == 'nikoand...'\nassert solution('2','snow') =='sn'\nassert solution('4','snow') =='snw'\nassert solution('7','snow') =='snws'\nassert solution('10','snow') =='snwwsnwwsnw'\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nname') == 'n'\nassert solution('5\\nname') == 'name'\nassert solution('7\\nnama') == 'nam'\nassert solution('14\\nname') == 'name'\nassert solution('100\\nname') == 'name'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('1\\na\\n') == 'a'\nassert solution('7\\na\\n') == 'a'\nassert solution('0\\n') == ''\n",
        "num_ids_2": 38,
        "num_ids_4": 66
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\nnikoandsolstice') == \"nikoand...\\nnikoand...\"\nassert solution('2\\nsrlv') =='srlv'\nassert solution('9\\nti') == 'ti'\nassert solution('7\\n') == ''\nassert solution('1\\n\\n') == ''\n",
        "num_ids_2": 38,
        "num_ids_4": 61
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Hello') == 'Hello'\nassert solution('Hello') == 'Hello'\nassert solution('Hello') == 'Hello'\nassert solution('Hello') == 'Hello'\nassert solution('Hello') == 'Hello'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4', 'abcdefg') == 'abcd'\nassert solution('7', 'nikoandsolstice') == 'nikoand...'\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 'nikoand...'\nassert solution('10') == 'nikoandstice'\nassert solution('5') == 'nikoand'\nassert solution('10') == 'nikoandstice'\nassert solution('3') == 'niko'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apples') == 'apples'\nassert solution('bananas') == 'bananas'\nassert solution('apples') == 'apples'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('sugar') =='suasges'\nassert solution('bread') == 'breadds'\nassert solution('beef') == 'beefs'\nassert solution('dough') == 'doughs'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()+'s'\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'apples'\n'''\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apples') == 'apples'\nassert solution('bananas') == 'bananas'\nassert solution('desserts') == 'desserts'\nassert solution('booze') == 'booze'\nassert solution('melon') =='melons'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('carrot') == 'carrots'\nassert solution('cabbage') == 'cabbages'\nassert solution('doodle') == 'doodles'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('c') == 'c'\nassert solution('c') == 'c'\nassert solution('p') == 'p'\nassert solution('p') == 'p'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"orange\") == \"oranges\"\nassert solution(\"zebra\") == \"zebras\"\nassert solution(\"lamb\") == \"lambs\"\nassert solution(\"cat\") == \"cats\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:-1] + 'es'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('10 3\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\\n2\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3') == '6'\nassert solution('5 2\\n1 2 3 4 5\\n3 2 4 2 1\\n1 1 1 3 3') == '3'\nassert solution('5 3\\n1 2 3 4 5\\n3 2 4 2 1\\n1 1 1 3 3\\n1 1 1 3 3') == '5'\nassert solution('3 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '3'\n",
        "num_ids_2": 82,
        "num_ids_4": 153
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('4 3\\n2\\n1 3\\n2') == '3'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('10 2\\n1\\n1') == '4'\nassert solution('7 2\\n2\\n1 3\\n2') == '3'\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[2]\n'''\n\nfrom sys import stdin\n\nN, K = stdin.readline().split()\nK, d_K = int(K), stdin.readline().split()\nN = int(N)\nsnukes = [stdin.readline().split() for _ in range(N)]\nsnukes = [[int(j) for j in i] for i in snukes]\n\nd = 0\nfor k in range(1, K + 1):\n    d += sum([snukes[i][k - 1] for i in range(N)])\n\nprint(d)\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\n\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\n\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\n\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\n\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == ''\nassert solution('aa') == 'a'\nassert solution('ba') == 'ba'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"aaaaaa\") == \"5\"\nassert solution(\"ababbba\") == \"5\"\nassert solution(\"abababa\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aabbbbaaca') == 5\nassert solution('abc') == 3\nassert solution('a') == 1\nassert solution('bba') == 1\nassert solution('aaaa') == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == ''\nassert solution(input(\"abaa\")) == 'abaa'\nassert solution(input(\"abaaaba\")) == 'abaa'\nassert solution(input(\"abaaabaa\")) == 'abaa'\nassert solution(input(\"aabbbba\")) == 'abaaa'\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaa') == '3'\nassert solution('aa') == '1'\nassert solution('bb') == '0'\nassert solution('aaaba') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbbbaaca') == '5'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaaaaaaaaa') == '0'\nassert solution('aabbbbaaca') == '5'\nassert solution('abcde') == '0'\nassert solution('abcddcba') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('abaaba') == '1'\nassert solution('abcdef') == '1'\nassert solution('aabab') == '3'\nassert solution('aaabb') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"5 2 4\"\n) == \"3\"\nassert solution(\n    \"10\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\"\n) == \"10\"\nassert solution(\n    \"10\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 4') == '3'\nassert solution('7 2 4') == '4'\nassert solution('3 2 4') == '1'\nassert solution('2 3 4') == '0'\nassert solution('2 3 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 4') == '3'\nassert solution('5 3 4') == '3'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 0') == '1'\nassert solution('1 1 1 0 1 1 1 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''3\n5 2 4''') == '3'\nassert solution('''10\n5 2 4''') == '5'\nassert solution('''5\n5 2 4''') == '3'\nassert solution('''10\n10 2 4''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"3\\n15 6 2\") == \"3\"\nassert solution(\"3\\n45 3 6\") == \"3\"\nassert solution(\"3\\n135 9 3\") == \"3\"\nassert solution(\"3\\n135 9 3\\n135 9 3\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('5\\n2 4 5') == '3'\nassert solution('1\\n1 1 1 1') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('5\\n1 1 1 1 1') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 75
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 4') == '3'\nassert solution('1 2 3') == '0'\nassert solution('3 1 2') == '0'\nassert solutionn\n------Input------\n8\n1 2 3 4 5 6 7 8\n\n------Output------\n8\n\n------Input------\n8\n1 2 3 4 5 6 7 8\n\n------Output------\n7\n'''\n\nn = int(stdin.readline().strip())\n",
        "num_ids_2": 24,
        "num_ids_4": 1537
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''3 1 3 2''') == '5'\nassert solution('''1 1 2 2''') == '3'\nassert solution('''2 2 3 3''') == '8'\nassert solution('''1 2 3 4''') == '7'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 1 1 0 0 0') == '3'\nassert solution('0 0 1 0 0 0 0') == '3'\nassert solution('0 0 1 0 0 0 0') == '3'\nassert solution('0 0 1 0 0 0 0') == '3'\nassert solution('0 0 1 0 0 0 0') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 2 3\") == \"1\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 2 2 3\") == \"-1\"\nassert solution(\"2 2 1 3\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '1'\nassert solution('1 0 0 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 0 1 2') == '3'\nassert solution('2 0 1 2 3') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"-1 -1 -1 3\") == \"2\"\nassert solution(\"4 -1 3\") == \"6\"\nassert solution(\"-1 4\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 0 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 2 2 3''') == '7'\nassert solution('''3 3 3 3''') == '18'\nassert solution('''5 1 1 3''') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('2 6') == 'No'\nassert solution('3 4') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('5 2') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('3 9') == 'No'\nassert solution('6 6') == 'Yes'\nassert solution('9 9') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8') == \"Yes\"\nassert solution('4 5') == \"No\"\nassert solution('1 2') == \"Yes\"\nassert solution('5 4') == \"No\"\nassert solution('1 5') == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 6') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('4 2') == 'Yes'\nassert solution('100 1') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 10\") == \"Yes\"\nassert solution(\"10 1\") == \"Yes\"\nassert solution(\"10 5\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"2 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"7 10\") == \"Yes\"\nassert solution(\"5 10\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 8') == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 2') is None\nassert solution('1 1') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('100 9') == 'Yes'\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n3 1') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n3 1\\n3 1') == '1'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n3 1\\n3 1\\n3 1') == '1'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n3 1\\n3 1\\n3 1\\n3 1') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 116
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n3 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n3 2\\n1 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n3 2\\n4 2\") == \"3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 3\\n3 4\") == \"4\"\nassert solution(\"5 5\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 1\") == \"4\"\nassert solution(\"5 4\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 1\") == \"2\"\nassert solution(\"7 4\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"8\"\n",
        "num_ids_2": 50,
        "num_ids_4": 120
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 3\") == \"3\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"6\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n3 1\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1 2\n1 3\n2 3\n''') == \"2\"\nassert solution(\n'''5 2\n1 2\n1 3\n2 3\n3 4\n4 5\n''') == \"5\"\nassert solution(\n'''6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n''') == \"4\"\nassert solution(\n'''6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n''') == \"10\"\nassert solution(\n'''4 2\n1 2\n2 3\n1 3\n3 4\n''') == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 3\\n2 3\") == 2\n\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == 1\n\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == 1\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 2') == '2'\nassert solution('3 3') == '2'\nassert solution('4 4') == '4'\nassert solution('3 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == expected\n\n-----Note-----\n- Make sure you have installed the pytest module if you are using the option -s \n- You have to implement your own input.\n\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3 3') == '2'\nassert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n1 3\\n2 4\\n3 1') == '1'\nassert solution('1 3\\n2 1\\n3 1') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 61
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n3 4') == '3'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6') == '4'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 84
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2') == '4'\nassert solution('4 10') == '18'\nassert solution('1000 1000') == '8666'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 2\") == \"18\"\n\"\"\"\nfrom __future__ import annotations\n\nfrom collections import Counter\nfrom dataclasses import dataclass\nfrom math import ceil\nfrom typing import Tuple, List\n\n\n@dataclass(frozen=True)\nclass Fruit:\n    flavor: int\n\n    def __add__(self, other: Fruit) -> Fruit:\n        return Fruit(self.flavor + other.flavor)\n\n    def __mul__(self, n: int) -> List[Fruit]:\n        return [Fruit(self.flavor * n)]\n\n\n@dataclass(frozen=True)\nclass Apples:\n    apples: List[int]\n    apples_count: int\n\n    def __add__(self, other: Apples) -> Apples:\n        apples = [Fruit(apple) for apple in self.apples]\n        apples.extend(other.apples)\n        return Apples(apples, self.apples_count + other.apples_count)\n\n    def __mul__(self, n: int) -> Apples:\n        return Apples([Fruit(apple) for apple in self.apples] * n, self.apples_count * n)\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'\nassert solution('1 1') == '0'\nassert solution('5 -4') == '1'\nassert solution('4 3') == '-4'\nassert solution('-4 -2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3+4+5+6=18\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '18'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '18'\nassert solution('3 3') == '0'\nassert solution('5 3') == '6'\nassert solution('8 9') == '18'\nassert solution('4 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"5 4\") == \"3\"\nassert solution(\"1 4 2\") == \"5\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('    ') == 0\nassert solution('1') == 1\nassert solution('    1') == 1\nassert solution('    1    ') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n') == 'Fizz'\nassert solution('5\\n') == 'Buzz'\nassert solution('15\\n') == 'FizzBuzz'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '60'\nassert solution('15') == '60'\nassert solution('30') == '90'\nassert solution('60') == '120'\nassert solution('100') == '150'\nprint('Test cases passed.')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"Fizz\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == 'Fizz'\nassert solution('6') == 'Fizz'\nassert solution('3') == 'Fizz'\nassert solution('5') == 'Buzz'\nassert solution('15') == 'FizzBuzz'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('15') == '60'\nassert solution('5') == '5'\nassert solution('10') == '15'\nassert solution('1') == '1'\nassert solution('100') == '105'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"Fizz\"\nassert solution(4) == \"4\"\nassert solution(5) == \"Buzz\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == 'Fizz'\nassert solution('5') == '4'\nassert solution('6') == 'Fizz'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == 'Fizz'\nassert solution('3\\n') == 'Fizz'\nassert solution('4\\n') == 'Fizz'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == '10'\nassert solution('6 10') == '8'\nassert solution('10 1000') == '8'\nassert solution('10 100000') == '10'\nassert solution('10 9') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''4 1\n3 5 7 9''') == '8'\nassert solution('''4 1\n3 5 7 9''') == '8'\nassert solution('''4 1\n3 5 7 9''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[3]",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[2]\nprint(solution(stdin))\nassert solution('2 3') == 1\nprint(solution('2 3'))\nassert solution('4 5') == 3\nprint(solution('4 5'))\nassert solution('4 7 10 6 5') == 5\nprint(solution('4 7 10 6 5'))",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4 5\n4 7 10 6 5'''\n) == '8'\n\nassert solution(\n'''4 4\n4 7 10 6 5'''\n) == '4'\n\nassert solution(\n'''4 5\n-4 -7 10 -6 5'''\n) == '-4'\n\nassert solution(\n'''4 5\n0 0 10 0 0 5'''\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\"\n\nassert stdin == '6 5\\n4 7 10 6 5'\n\nassert solution(stdin) == '8'\n",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n5 4 1 1 1\n''') == '5'\nassert solution('''\n9 4\n4 7 10 6 5\n''') == '8'\nassert solution('''\n3 2\n1 2 3\n''') == '1'\nassert solution('''\n9 3\n1 2 3\n''') == '2'\nassert solution('''\n9 7\n1 2 3 4 5 6 7 8 9\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\") == \"8\"\nassert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"7 5\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1') == '1'\nassert solution('3 2\\n2 2') == '0'\nassert solution('3 2\\n2 1') == '1'\nassert solution('3 2\\n2 1') == '1'\nassert solution('4 2\\n2 1') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n2 1''') == '1'\nassert solution('''3 2\n2 1''') == '1'\nassert solution('''3 2\n1 1''') == '0'\nassert solution('''3 2\n1 2''') == '0'\nassert solution('''3 2\n1 2\n3 2''') == '0'\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2 1') == '1'\nassert solution('2 3\\n1 2') == '1'\nassert solution('5 10\\n3 4') == '7'\nassert solution('3 3\\n3 3') == '0'\nassert solution('4 4\\n1 3\\n3 2') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 1\\n') == '1'\nassert solution('4 2\\n2 1\\n') == '1'\nassert solution('5 2\\n2 2\\n') == '2'\nassert solution('5 1\\n1 1\\n') == '0'\nassert solution('5 1\\n1 2\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 1') == '1'\nassert solution('3 2\\n2 1') == '0'\nassert solution('3 2\\n3 1') == '1'\nassert solution('3 2\\n2 2') == '2'\nassert solution('10 8\\n5 5') == '9'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2 1\\n') == '1\\n'\nassert solution('2 4\\n1 2\\n') == '1\\n'\nassert solution('2 3\\n2 2\\n') == '0\\n'\nassert solution('2 1\\n2 2\\n') == '0\\n'\nassert solution('1 1\\n1 1\\n') == '0\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == 1\nassert solution('3 3') == 4\nassert solution('3 4') == 5\nassert solution('5 4') == 10\nassert solution('5 5') == 16\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()[2]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[1]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"H 3\\n1 3\\n\") == \"1\"\nassert solution(\"H 3\\n1 2\\n\") == \"0\"\nassert solution(\"H 3\\n3 1\\n\") == \"1\"\nassert solution(\"H 3\\n2 1\\n\") == \"0\"\nassert solution(\"H 3\\n2 2\\n\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 1\\n3 7 5 1 10 3 20\\n') == '3'\nassert solution('7 0\\n3 7 5 1 10 3 20\\n') == '1'\nassert solution('7 1\\n0 0\\n3 7 5 1 10 3 20\\n') == '1'\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 3\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 2\\n1 3 5 7 10 3 20\\n') == '-1'\nassert solution('7 3\\n1 3 5 7 10 3 20\\n') == '-1'\n",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5\\n1 3 2 4 5') == '6'\nassert solution('1 2\\n1 2') == '-1'\nassert solution('1 5\\n1 3 2 4 5\\n1 3 2 4 5') == '6'\nassert solution('1 2\\n1 2\\n1 2') == '-1'\nassert solution('1 3\\n1 3') == '-1'\n",
        "num_ids_2": 34,
        "num_ids_4": 79
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('2 1\\n2 2\\n') == '1'\n\"\"\"\n\n\"\"\"\n----SOLUTION----\n\nWrite 5 lines of code to test the correctness of solution:\n\nYou are given a sequence of integers of length $n$ and integer number $k$. You should print any integer number $x$ in the range of $[1; 10^9]$ (i.e. $1 \\le x \\le 10^9$) such that exactly $k$ elements of given sequence are less than or equal to $x$.\n\nNote that the sequence can contain equal elements.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nInput\nThe first line of the input contains integer numbers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n$). The second line of the input contains $n$ integer numbers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the sequence itself.\n\nOutput\nPrint any integer number $x$ from range $[1; 10^9]$ such that exactly $k$ elements of given sequence is less or equal to $x$.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nConstraints\n\n1 \u2264 $n$ \u2264 2\\cdot 10^5\n0 \u2264 $k$ \u2264 $n$\n1 \u2264 $a_i$ \u2264 10^9\n\nTest Set 1 (Visible Verification)\n\nThe first test set consists of multiple test cases.\n\nThe first test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n7 5\n3 7 5 1 10 3 20\n\nand the expected result is 6.\n\nIn the second test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n7 2\n3 7 5 1 10 3 20\n\nand the expected result is -1.\n\n-----Input-----\n\nThe first line of the input contains integer numbers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n$). The second line of the input contains $n$ integer numbers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the sequence itself.\n\n\n-----Output-----\n\nPrint any integer number $x$ from range $[1; 10^9]$ such that exactly $k$ elements of given sequence is less or equal to $x$.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nConstraints\n\n1 \u2264 $n$ \u2264 2\\cdot 10^5\n0 \u2264 $k$ \u2264 $n$\n1 \u2264 $a_i$ \u2264 10^9\n\nTest Set 2 (Visible Verification)\n\nThe first test set consists of multiple test cases.\n\nThe first test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n2 1\n2 2\n\nand the expected result is 1.\n\nThe second test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n2 1\n2 2\n\nand the expected result is -1.\n\n-----Input-----\n\nThe first line of the input contains integer numbers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n$). The second line of the input contains $n$ integer numbers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the sequence itself.\n\n\n-----Output-----\n\nPrint any integer number $x$ from range $[1; 10^9]$ such that exactly $k$ elements of given sequence is less or equal to $x$.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nConstraints\n\n1 \u2264 $n$ \u2264 2\\cdot 10^5\n0 \u2264 $k$ \u2264 $n$\n1 \u2264 $a_i$ \u2264 10^9\n\nTest Set 3 (Hidden Verification)\n\nThe first test set consists of multiple test cases.\n\nThe first test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n1 1\n1 2\n\nand the expected result is 1.\n\nThe second test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n1 1\n1 2\n\nand the expected result is -1.\n\n-----Input-----\n\nThe first line of the input contains integer numbers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n$). The second line of the input contains $n$ integer numbers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the sequence itself.\n\n\n-----Output-----\n\nPrint any integer number $x$ from range $[1; 10^9]$ such that exactly $k$ elements of given sequence is less or equal to $x$.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nConstraints\n\n1 \u2264 $n$ \u2264 2\\cdot 10^5\n0 \u2264 $k$ \u2264 $n$\n1 \u2264 $a_i$ \u2264 10^9\n\nTest Set 4 (Hidden Verification)\n\nThe first test set consists of multiple test cases.\n\nThe first test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n2 1\n2 2\n\nand the expected result is 1.\n\nThe second test case is an integer array $n$ and an integer $k$ such that the first test case is:\n\n2 1\n2 2\n\nand the expected result is -1.\n\n-----Input-----\n\nThe first line of the input contains integer numbers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n$). The second line of the input contains $n$ integer numbers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the sequence itself.\n\n\n-----Output-----\n\nPrint any integer number $x$ from range $[1; 10^9]$ such that exactly $k$ elements of given sequence is less or equal to $x$.\n\nIf there is no such $x$, print \"-1\" (without quotes).\n\nConstraints\n\n1 \u2264 $n$ \u2264 2\\cdot 10^5",
        "num_ids_2": 45,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 2\\n
        "num_ids_2": 45,
        "num_ids_4": 1610
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\"\n\n\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\n\n\n\"\"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n\n\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\n---5.1.21---\n    (a) You are given a rectangular grid of size $n \\times m$ consisting only of asterisks '*' and periods (dots) '.'. Rows are numbered from $1$ to $n$, columns are numbered from $1$ to $m$. Your task is to draw this grid using any number of stars or find out that it is impossible.\n    (b) You are given a rectangular grid of size $n \\times m$ consisting only of asterisks '*' and periods (dots) '.'. Rows are numbered from $1$ to $n$, columns are numbered from $1$ to $m$. Your task is to find out if there is a star inside the grid, if there are several stars or if it is impossible to draw the given grid using stars.\n\"\"\"\n\n\"\"\"\n\nhttps://www.codewars.com/kata/grid-builder-5bcc23a1eb5b",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('*') == '-1'\nassert solution('*\\n*') == '1'\nassert solution('*\\n*\\n*') == '1'\nassert solution('*\\n*\\n*\\n*') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 48
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '-1'\nassert solution('1\\n1\\n1') == '-1'\nassert solution('3\\n3\\n1') == '3'\nassert solution('3\\n3\\n3') == '3'\nassert solution('4\\n4\\n1') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == ''\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('*') == '0'\nassert solution('*.*') == '0'\nassert solution('*.*.*') == '0'\nassert solution('*.*.*.*') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '3'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n.....\\n') == '3'\nassert solution('3 3\\n.*.\\n.*.\\n*.*\\n.....\\n') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 61
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 8''') == '3'\nassert solution('''5 5''') == '3'\nassert solution('''3 3''') == '-1'\nassert solution('''5 5''') == '-1'\n\n\n-----\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 8''') == '3'\nassert solution('''1 1''') == '-1'\nassert solution('''5 5''') == '3'\nassert solution('''3 3''') == '3'\nassert solution('''8 7''') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n''') == ''\nassert solution('abc') == 'a'\nassert solution('abca') == 'a'\nassert solution('abcc') == 'a'\nassert solution('abccc') == 'ab'\n",
        "num_ids_2": 16,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\ngood\n\n''') == '0'\nassert solution('''\n4\naabc\n\n''') == '2'\nassert solution('''\n4\naa\n\n''') == '3'\nassert solution('''\n4\naa\n\n''') == '3'\nassert solution('''\n4\na\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('good') == 0\nassert solution('good') == 0\nassert solution('good') == 0\nassert solution('good') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == \"ab\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aaa\") == 0\nassert solution(\"aaaa\") == 3\nassert solution(\"aaaaa\") == 3\nassert solution(\"aabc\") == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\nMore examples:\n\nExample 1:\nInput:\n2 3\n1 2\n2 1\n\nOutput:\nNO\n\nExample 2:\nInput:\n3 3\n1 2\n1 3\n2 3\n\nOutput:\nYES\n1011\n\n\nExample 3:\nInput:\n1 3\n1 2\n1 3\n\nOutput:\nNO\n\nExample 4:\nInput:\n5 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n\nOutput:\nYES\n0101\n\n\nExample 5:\nInput:\n6 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n3 4\n\nOutput:\nNO\n\n\n-----\n\nThis is a follow-up to the problem \"Find the base\".\n\nYou are given a list of $n$ (2 \\le n \\le 2 \\cdot 10^5) different integers in the range $[1, 2\\cdot 10^5]$. Each integer is given in the form of a string of length at most 5000. You have to find the base of each integer, i. e. the number which is only present once in the string.\n\nThe given list may contain duplicate integers.\n\nInput\n\nThe first line contains a single integer $n$ \u2014 the number of different integers in the list. The following line contains $n$ strings, each of length at most 5000, each representing an integer.\n\nOutput\n\nFor each integer in the list, output its base.\n\nConstraints\n\n1\u2264n\u2264105\n1\u2264len(s)\u22645000\nEach string consists only of digits 0 and 1.\n\nExample\n\nInput\n3\n11\n10001\n10101\n10100\n\nOutput\n2\n0\n1\n\n\n------\n\n-----\n\nYou may modify the input as necessary.\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 1') == 'YES\\n01100'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 3\\n6 1\\n7 3\\n8 3\\n9 1\\n10 4\\n11 1\\n12 3\\n13 1\\n14 1\\n15 4\\n16 4\\n17 1\\n18 3\\n19 1\\n20 2\\n21 4\\n22 1\\n23 2\\n24 3\\n25 4\\n26 1\\n27 4\\n28 2\\n29 2\\n30 3\\n31 4\\n32 1\\n33 3\\n34 2\\n35 4\\n36 3\\n37 1\\n38 2\\n39 4\\n40 2\\n41 1\\n42 3\\n43 1\\n44 3\\n45 1\\n46 2\\n47 3\\n48 2\\n49 3\\n50 4\\n51 1\\n52 4\\n53 1\\n54 4\\n55 1\\n56 2\\n57 3\\n58 3\\n59 1\\n60 4\\n61 1\\n62 2\\n63 3\\n64 2\\n65 3\\n66 4\\n67 1\\n68 3\\n69 1\\n70 2\\n71 4\\n72 1\\n73 3\\n74 2\\n75 4\\n76 1\\n77 2\\n78 3\\n79 1\\n80 3\\n81 4\\n82 1\\n83 3\\n84 2\\n85 4\\n86 1\\n87 3\\n88 2\\n89 4\\n90 1\\n91 3\\n92 2\\n93 3\\n94 2\\n95 3\\n96 2\\n97 3\\n98 1\\n99 3\\n100 4\\n101 1\\n102 3\\n103 1\\n104 3\\n105 1\\n106 2\\n107 3\\n108 2\\n109 3\\n110 4\\n111 1\\n112 3\\n113 1\\n114 3\\n115 1\\n116 2\\n117 3\\n118 2\\n119 3\\n120 4\\n121 1\\n122 3\\n123 1\\n124 3\\n125 1\\n126 2\\n127 3\\n128 2\\n129 3\\n130 4\\n131 1\\n132 3\\n133 1\\n134 3\\n135 1\\n136 2\\n137 3\\n138 2\\n139 3\\n140 4\\n141 1\\n142 3\\n143 1\\n144 3\\n145 1\\n146 2\\n147 3\\n148 2\\n149 3\\n150 4\\n151 1\\n152 3\\n153 1\\n154 3\\n155 1\\n156 2\\n157 3\\n158 2\\n159 3\\n160 4\\n161 1\\n162 3\\n163 1\\n164 3\\n165 1\\n166 2\\n167 3\\n168 2\\n169 3\\n170 4\\n171 1\\n172 3\\n173 1\\n174 3\\n175 1\\n176 2\\n177 3\\n178 2\\n179 3\\n180 4\\n181 1\\n182 3\\n183 1\\n184 3\\n185 1\\n186 2\\n187 3\\n188 2\\n189 3\\n190 4\\n191 1\\n192 3\\n193 1\\n194 3\\n195 1\\n196 2\\n197 3\\n198 2\\n199 3\\n200 4\\n') == 'NO'\nassert solution('1 2\\n2 1\\n1 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1\\n148 1\\n149 1\\n150 1\\n151 1\\n152 1\\n153 1\\n154 1\\n155 1\\n156 1\\n157 1\\n158 1\\n159 1\\n160 1\\n161 1\\n162 1\\n163 1\\n164 1\\n165 1\\n166 1\\n167 1\\",
        "num_ids_2": 840,
        "num_ids_4": 1515
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'\n\n\n-----Solution-----\n\"\"\"\n\nfrom queue import Queue\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5') == 'YES\\n010100'\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n10100\"\n\n'''\n\nfrom sys import stdin\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 5') == 'YES\\n10100'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == 'NO'\n\n'''\n\nfrom collections import defaultdict\nfrom functools import reduce",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin\nfrom typing import List, Set\nfrom collections import defaultdict, deque\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == 'NO'\nassert solution('2 2\\n1 2\\n2 1\\n2 3') == 'YES\\n2'\nassert solution('2 2\\n1 3\\n1 2\\n2 1') == 'YES\\n1 0'\nassert solution('2 2\\n1 3\\n2 1\\n2 3') == 'NO'\nassert solution('3 2\\n1 2\\n1 3\\n2 3') == 'NO'\n",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2'\nassert solution('1 7\\n1 7\\n') == '0'\nassert solution('1 5\\n1 5\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 2\\n2 1\\n') == '0'\nassert solution('1 2\\n2 3\\n3 4\\n2 4\\n2 3\\n') == '5'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '0'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n1 2\\n2 3\\n3 4\\n4 5\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 220
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1\n1 1\n0 0\n1 1\n1 1\n''') == '0\\n1 1'\nassert solution('''1 2\n1 2\n1 2\n0 0\n2 2\n1 2\n1 2\n''') == '3'\nassert solution('''1 2\n1 2\n1 2\n0 0\n2 2\n1 2\n1 2\n''') == '3'\nassert solution('''0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n''') == '0\\n1 1\\n2 2\\n3 3'\nassert solution('''0 0\n0 0\n0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n0 0\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n1 1\n2 2\n3 3\n''') == '0\\n1 1\\n2 2\\n3 3'\nprint(solution(input()))\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4'\nassert solution('1 7\\n1 7\\n') == '0'\n\n\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\") == \"0\\n\"\nassert solution(\"1 7\") == \"0\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 1') == '2\\n'\nassert solution('1 2\\n2 3\\n3 2') == '0\\n'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n4 3\\n3 2\\n2 1') == '3\\n1 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 102
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 2') == '3 4'\nassert solution('5 5') == '0'\n\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n5 5') == '0\\n3 4'\nassert solution('2\\n1 2\\n2 1') == '2'\nassert solution('1 7\\n1 7\\n') == '0'\nassert solution('3\\n1 2\\n2 2\\n1 2\\n') == '0\\n2 3'\nassert solution('3\\n1 2\\n2 2\\n1 2\\n') == '0\\n2 3'\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\nassert solution('''1 2\n1 2\n''') == ''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('1 10 1 1000') == '1000'\nassert solution('2 3 6 10') == '1000'\nassert solution('1 10 1 1000') == '0'\nassert solution('10 10 10 10') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''4 9 2 3''') == '2'\nassert solution('''0 1 2 3''') == '1'\nassert solution('''0 1 2 3''') == '1'\nassert solution('''0 10 0 10''') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 9 2 3') == 2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"10 11 22 24\") == \"5\"\nassert solution(\"2 9 2 1\") == \"8\"\nassert solution(\"2 5 2 1\") == \"1\"\nassert solution(\"7 5 2 3\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('2 3 4 4') == '4'\nassert solution('2 3 4 4') == '4'\nassert solution('2 3 4 4') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == '2'\n\n'''\n\nA, B, C, D = map(int, stdin.strip().split(' '))\n\ncount = 0\n\nfor i in range(A, B+1):\n    if i % C!= 0 and i % D!= 0:\n        count += 1\n\nprint(count)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"4 9 2 3\") == \"1\"\nassert solution(\"7 11 2 3\") == \"1\"\nassert solution(\"2 1 1 1\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 9 2 3') == 2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(1234567) == \"No\"\nassert solution(12345) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(1234) == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('99999001') == 'No'\nassert solution('009999901') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12345') == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"101011101\") == \"No\"\nassert solution(\"101010101\") == \"Yes\"\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 1846
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('123456789') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('14') == 'No'\nassert solution('27') == 'No'\nassert solution('10987654321') == 'Yes'\nprint(\"All set?\")\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(1000) == \"No\"\nassert solution(1009) == \"Yes\"\nassert solution(1010) == \"No\"\nassert solution(123456789) == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('9') == 'Yes'\nassert solution('99999') == 'No'\nassert solution('123456789') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(12) == \"No\"\nassert solution(123456789) == \"Yes\"\nassert solution(9) == \"Yes\"\nassert solution(999) == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(1234569) == \"No\"\nassert solution(1234567890) == \"Yes\"\nassert solution(123458909) == \"No\"\nassert solution(123458910) == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(234) == \"No\"\nassert solution(8) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(2) == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123') == '4'\nassert solution('1111') == '1'\nassert solution('1234') == '3'\nassert solution('12345') == '4'\nassert solution('123456') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"9\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"12\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('128') == '4'\nassert solution('999') == '4'\nassert solution('1000') == '4'\nassert solution('1000000') == '4'\nassert solution('1234567890') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('128') == '5'\nassert solution('9') == '4'\nassert solution('10') == '3'\nassert solution('12') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('127') == '4'\nassert solution('1000000000') == '0'\nassert solution('1000000000000') == '0'\nassert solution('1234567') == '0'\nassert solution('45') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == \"6\"\nassert solution(2) == \"2\"\nassert solution(1) == \"1\"\nassert solution(0) == \"0\"\nassert solution(5) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"127\") == \"4\"\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('127') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('127') == '4'\nassert solution('1300') == '6'\nassert solution('1300') == '3'\nassert solution('97') == '0'\nassert solution('6') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"k\") == \"k\"\nassert solution(\"kk\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"tokyo123\") == \"No\"\nassert solution(\"tokyo123tokyo\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('Tokyo') == 'No'\nassert solution('tokyo ') == 'No'\nassert solution('kyoto') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('tokyo', 'kyoto') == 'Yes'\nassert solution('b', 'a') == 'No'\nassert solution('ab', 'ab') == 'Yes'\nassert solution('ab', 'ba') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('kyoto') == 'Yes'\n\nprint('Testcase #1 passed')\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('abcd') == 'Yes'\nassert solution('tca') == 'Yes'\nassert solution('abcdefg') == 'No'\nassert solution('kttt') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('kyoto', 'tokyo') == \"Yes\"\nassert solution('kyoto', 'tokyo') == \"No\"\nassert solution('tokyo', 'kyoto') == \"Yes\"\nassert solution('tokyo', 'kyoto') == \"No\"\nassert solution('tokyo', 'kyoto') == \"No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"kittiwqm\") == \"No\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"kittiwqm\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Yes'\nassert solution('kyoto') == 'No'\nassert solution('tokyo') == 'Yes'\nassert solution('toke') == 'Yes'\nassert solution('tokke') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"aaaaaaaa\") == \"0\"\nassert solution(\"cabaccc\") == \"1\"\nassert solution(\"abcbaccc\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('ac') == 1\nassert solution('acac') == 0\nassert solution('abcdef') == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abc') == 0\nassert solution('cabacc') == 1\nassert solution('yxy') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('ab') == 1\nassert solution('abcd') == 1\nassert solution('abcd') == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"xxyxxy\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\", \"abc\") == 1\nassert solution(\"\", \"\") == 0\nassert solution(\"ccc\", \"c\") == 0\nassert solution(\"ccccccc\", \"c\") == 0\nassert solution(\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\", \"abc\") == 1\nassert solution(\"cabacc\", \"cab\") == 2\nassert solution(\"abc\", \"abc\") == 0\nassert solution(\"abc\", \"xyz\") == 3\nassert solution(\"xyz\", \"abc\") == 3\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('ababc') == 1\nassert solution('bacabc') == 2\nassert solution('bacbacc') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''cabacc''') == '1'\nassert solution('''abc''') == '0'\nassert solution('''abcabc''') == '0'\nassert solution('''abcabcabc''') == '0'\nassert solution('''abcabcabcabc''') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc', 'abcd') == 1\nassert solution('abc', 'abcddc') == 2\nassert solution('abc', 'abcddca') == 2\nassert solution('abc', 'abcddcc') == 3\nassert solution('cabacc', 'abc') == 1\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''8 12 4''') == '8'\nassert solution('''8 12 8''') == '4'\nassert solution('''8 12 16''') == '8'\nassert solution('''8 12 32''') == '16'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''20 22 1''') == '1'\nassert solution('''4 15 2''') == '2'\nassert solution('''3 30 2''') == '2'\nassert solution('''10 9 3''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 4') == '2'\nassert solution('2 3 5') == '1'\nassert solution('3 4 6') == '1'\nassert solution('3 5 6') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''2 3 4''') == '4'\nassert solution('''1 1 2''') == '1'\nassert solution('''1 2 3''') == '2'\nassert solution('''1 2 4''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('100 200 2') == '4'\nassert solution('100 500 5') == '100'\nassert solution('1 100 100') == '100'\nassert solution('10 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 12 2') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''1 2 1''') == '1'\nassert solution('''2 1 2''') == '2'\nassert solution('''4 6 2''') == '2'\nassert solution('''12 14 2''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 1 3') == '8'\nassert solution('1 1 1') == '1'\nassert solution('11 100 7') == '1'\nassert solution('4 10 3') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\"\"\"\nO(n*log(n)) time, O(1) space\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1024') == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"100\") == \"20\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"13\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2020\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('5') == 500\nassert solution('2') == 100\nassert solution('1') == 50\nassert solution('7') == 150\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1000') == '1000'\nassert solution('20') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1024''') == '2020'\nassert solution('''') == '2020'\nassert solution('''0''') == '2020'\nassert solution('''123456789''') == '2020'\nassert solution('''123456789''0') == '2020'\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1024') == '2020'\nassert solution('2080') == '4820'\nassert solution('100000000') == '1000000000'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"15\"\nassert solution(\"5\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2020\"\n\"\"\"\n\nX = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n4\\n\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"12\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 4''') == '5'\nassert solution('''1\n1''') == '0'\nassert solution('''3\n1 2 3''') == '6'\nassert solution('''6\n2 4 6 8 10 12 14''') == '24'\nassert solution('''7\n1 2 3 4 5 6 7''') == '49'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n4\") == \"5\"\nassert solution(\"2\\n1 1\") == \"4\"\nassert solution(\"1\\n2\") == \"4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 4\n''') == '5'\n\nassert solution('''\n4\n1 2 3 4\n''') == '15'\n\nassert solution('''\n5\n1 5 2 3 4\n''') == '10'\n\nassert solution('''\n2\n4\n3 2\n''') == '3'\n\nassert solution('''\n2\n10 10\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4') == '5'\nassert solution('1 2') == '5'\nassert solution('3 2') == '3'\nassert solution('4 2') == '5'\nassert solution('1 10') == '25'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1 4''') == '5'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 4''') == '5'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 4\n''') == '5'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1000\n123456789\n''') == '1209008'\nassert solution('''100\n1\n''') == '1'\nassert solution('''10000\n123456789\n''') == '1209008'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 10\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 3\") == \"0 power strips, each with 3 sockets, extend the socket into 10 empty sockets.\"\nassert solution(\"1 2\") == \"1 power strip, each with 2 sockets, extend the socket into 3 empty sockets.\"\nassert solution(\"2 3\") == \"1 power strip, each with 2 sockets, extend the socket into 3 empty sockets.\"\nassert solution(\"1 10\") == \"1 power strip, each with 1 sockets, extend the socket into 10 empty sockets.\"\nassert solution(\"20 5\") == \"19 power strips, each with 5 sockets, extend the socket into 4 empty sockets.\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10') == 3\nassert solution('1 1') == 0\nassert solution('4 10') == 3\nassert solution('20 21') == 1\nassert solution('10 1') == 5\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 10''') == '3'\nassert solution('''2 1''') == '1'\nassert solution('''10 9''') == '1'\nassert solution('''5 8''') == '2'\nassert solution('''1 2''') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSC') == '0'\nassert solution('SCS') == '1'\nassert solution('SCS') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('CS') == '2'\nassert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSRS') == '2'\nassert solution('CSSSR') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == 2\nassert solution(\"CSR\") == 2",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CS') == '0'\nassert solution('CR') == '2'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSC') == '1'\nassert solution('CRC') == '1'\nassert solution('CSC') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('CSS') == '1'\nassert solution('CSR') == '2'\nassert solution('CSE') == '3'\nassert solution('CCS') == '4'\nassert solution('SSS') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CSS') == 2\nassert solution('CSR') == 2\nassert solution('SR') == 1\nassert solution('CS') == 0\n\n - For the first day, it was forecast to be cloudy, and it was indeed cloudy.\n - For the second day, it was forecast to be sunny, and it was indeed sunny.\n - For the third day, it was forecast to be sunny, but it was rainy.\nThus, the forecast was correct for two days in this case.\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('5\\n1 1 1 1 1\\n') == '5'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10\\n') == '1'\nassert solution('30\\n
        "num_ids_2": 38,
        "num_ids_4": 1732
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n3\\n2\\n5\") == 2\nassert solution(\"1\\n2\\n3\\n5\\n4\") == 3\nassert solution(\"1\\n2\\n3\\n5\\n5\") == 1\nassert solution(\"1\\n2\\n3\\n4\\n5\") == 0\nassert solution(\"1\\n2\\n5\\n4\\n3\") == 1\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"5 4 3 1 2\") == \"2\"\nassert solution(\"1 5 3 4 2\") == \"2\"\nassert solution(\"5 4 3 2 1\") == \"2\"\nassert solution(\"1 2 5 4 3\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''4\n4 2 3 1''') == '2'\nassert solution('''10\n4 2 6 1 3 5 7 8 9 10''') == '5'\nassert solution('''100\n44 40 30 25 24 22 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '89'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n5\\n4\\n2') == '2'\nassert solution('1\\n3\\n5\\n4\\n2\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 6 4 2') == '3'\nassert solution('1 3 5 6 4 2') == '3'\nassert solution('1 2 3 4 5 6 7 8 9') == '4'\nassert solution('1 2 3 4 5 6 7 8 9') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 5 4 2') == '2'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n-1.12 -0.48\\n0.94 -0.48\\n1.42 -1.28\\n2.16 -1.62') == 5.620\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66') == 5.480\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == 5.480\nassert solution('7\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06') == 6.040\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92') == 6.720\n",
        "num_ids_2": 98,
        "num_ids_4": 225
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0') == '0'\nassert solution('5') == '5.410'\nassert solution('3') == '2.760'\nassert solution('5') == '5.620'\nassert solution('1') == '0.960'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"5.480\"\nassert solution(\"8\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\n",
        "num_ids_2": 140,
        "num_ids_4": 273
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n8') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92') == '6.720'\n",
        "num_ids_2": 140,
        "num_ids_4": 271
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"6.040\"\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n' * 5) == '0'\nassert solution('1\\n' * 5) == '1'\nassert solution('2\\n' * 5) == '1'\nassert solution('3\\n' * 5) == '2'\nassert solution('4\\n' * 5) == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6.040'\nprint(solution(stdin))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"-2.14 2.06\\n\"\n    \"-1.14 2.04\\n\"\n    \"-2.16 1.46\\n\"\n    \"-2.14 0.70\\n\"\n    \"-1.42 0.40\\n\"\n    \"-0.94 -0.48\\n\"\n    \"-1.42 -1.28\\n\"\n    \"-2.16 -1.62\\n\") == \"5.410\"\n\nassert solution(\n    \"5\\n\"\n    \"-2.14 2.06\\n\"\n    \"-1.14 2.04\\n\"\n    \"-2.16 1.46\\n\"\n    \"-2.14 0.70\\n\"\n    \"-1.42 0.40\\n\"\n    \"-0.94 -0.48\\n\"\n    \"-1.42 -1.28\\n\"\n    \"-2.16 -1.62\\n\") == \"5.410\"\n\nassert solution(\n    \"8\\n\"\n    \"-2.14 2.06\\n\"\n    \"-1.14 2.04\\n\"\n    \"-2.16 1.46\\n\"\n    \"-2.14 0.70\\n\"\n    \"-1.42 0.40\\n\"\n    \"-0.94 -0.48\\n\"\n    \"-1.42 -1.28\\n\"\n    \"-2.16 -1.62\\n\") == \"5.410\"\n\nassert solution(\n    \"8\\n\"\n    \"2.26 1.44\\n\"\n    \"2.28 0.64\\n\"\n    \"2.30 -0.30\\n\"\n    \"1.58 0.66\\n\"\n    \"3.24 0.66\\n\"\n    \"2.26 1.44\\n\"\n    \"2.28 0.64\\n\"\n    \"2.30 -0.30\\n\"\n    \"1.58 0.66\\n\"\n    \"3.24 0.66\\n\"\n) == \"5.620\"\n\nassert solution(\n    \"5\\n\"\n    \"6.98 2.06\\n\"\n    \"6.40 1.12\\n\"\n    \"5.98 0.24\\n\"\n    \"5.54 -0.60\\n\"\n    \"7.16 0.30\\n\"\n    \"7.82 1.24\\n\"\n    \"8.34 0.24\\n\"\n    \"8.74 -0.76\\n\") == \"5.480\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 103
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('')) == output('')\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10') == '4'\nassert solution('7 10') == '2'\nassert solution('5 10') == '-1'\nassert solution('7 26') == '-1'\nassert solution('5 15') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"7 26\\n5 5 5 5 5\") == \"-1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1 1 2') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '-1'\nassert solution('5 26') == '-1'\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 27\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 38,
        "num_ids_4": 89
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2\\n'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 91
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3\\n1 3 4\\n2 1 4 2') == '4'\nassert solution('5 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5') == '2'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('7 16\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5') == '-1'\nassert solution('5 10\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 63,
        "num_ids_4": 135
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 3\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'\n'''\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 1 1 1\\n') == '1 1'\nassert solution('15 2\\n1 3 1 1 3 1 1 3 1 1 1 1\\n') == '1 1'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 1 1\\n') == '1 1'\n\n\n\n\"\"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 2 1 1 1 1''') == '1 1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1\n''') == '1 1'\nassert solution('''7 2\n1 2 1 1 1 2 1 1 1 1 1\n''') == '7 3 1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1 1 2 1 1 1\") == \"1 1\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"1 2 3 2 1\") == \"1 2\"\nassert solution(\"1 2 3 4 1\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5 1\") == \"1 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 2 4 3 1') == '1 2 3'\nassert solution('1 3 1 3 2 4 3 1') == '1 3'\nassert solution('1 3 1 3 2 4 3 1') == '1 3'\nassert solution('1 3 1 3 2 4 3 1') == '1 3'\nassert solution('1 3 1 3 2 4 3 1') == '1 3'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '1 3 1 3 1 3 1'\nassert solution('15 2') == '1 1'\nassert solution('1 2 1 1 1 2 1 1 2 1 2 1 1 1') == '1 1'\nassert solution('1 3 1 3 1 3 1') == '1 3 1 3 1 3 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nassert solution('''8 4\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8\n6 7 8 9\n7 8 9 10\n8 9 10 11''') == '3'\n\nassert solution('''2 4\n2 3 1 4\n5 3 2 1\n2 3 1 4\n1 2 3 4''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''6 1\n3\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\n\nassert solution('''6 1\n3''') == '3'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4''') == '0'\n\nassert solution('''3\n6\n3\n3\n6\n3\n3\n\n3''') == '2'\n'''\n\nn,m = map(int,stdin.split())\na = []\nfor _ in range(n):\n    a.append(list(map(int, stdin.split())))\n\nk = 0\nfor i in range(n):\n    for j in range(1,m):\n        if abs(a[i][j] - a[i][j-1]) >= k:\n            k = abs(a[i][j] - a[i][j-1])\n\nprint(k)\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''1000000\n0\n1000000''') == '1'\nassert solution('''6 4\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xxxxxxii') == 1\nassert solution('exxxii') == 0\nassert solution('xxoxx') == 8\nassert solution('xxxxx') == 0\nassert solution('xxxx') == 0\n\n\n-----\n\nCheck the \"CodeHorse\" social network, which is a social networking site that everyone shares code for.\n\nThere is a social networking platform in the city of the CodeHorse, called CodeHorse. The platform is not limited to English, but supports the following languages: JavaScript, Python, C++, Java, Swift, PHP, Ruby, C#, and JavaScript.\n\nThere is a forum for CodeHorse students, which includes online code review, discussions, and other activities. Students who want to participate in online code review will be able to post their solutions on the CodeHorse forum and get community-rated solutions. Students can also create new CodeHorse forums and add posts.\n\nThere is a special CodeHorse club that students can apply to. In order to participate in this club, students will need to pay a $3 fee for each post in CodeHorse forums.\n\nYou are a student at CodeHorse, a city that specializes in programming and network services. You have signed up for the CodeHorse club and now are interested in the CodeHorse forum. You want to help the club and get one of the most valuable solutions in the CodeHorse forum.\n\nSince you are a student, you know what you should do. You decided to help with the CodeHorse club by posting a solution. Help your fellow CodeHorse students to rate the solution and find the most valuable solution.\n\nInput\n\nThe first line of the input contains a single integer $n$ (1 \\le n \\le 100) \u2014 the number of letters in the file name, and the second line contains a string of length $n$ consisting of lowercase Latin letters only \u2014 the file name.\n\nOutput\n\nPrint one integer $k$ \u2014 the minimum number of letters that need to be removed from the file name in order to make it not contain \"xxx\" as a substring.\n\nConstraints\n1\u2264n\u2264100\n1\u2264n\u2264100\n\nEach letter is lowercase Latin letter.\n\n\n\nExample\nInput\n\n6\nxxii\n\nOutput\n\n1\n\nExample\nInput\n\n6\nxxxxii\n\nOutput\n\n0\n\nNote\nFor testing purposes you may assume that the file name does not contain any forbidden substring \"xxx\".\n\n----\n\nThis solution is from a student who solved this in CodeHorse.",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:2] + stdin[3:]\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xoxoxoxoxoxoxoxoxoxoxox') == '20'\nassert solution('xxxxxxxxxxxx') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1x') == '1'\nassert solution('1x1') == '0'\nassert solution('1x1x') == '0'\nassert solution('1x1x1') == '1'\nassert solution('1x1x1x') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"xxxxx\") == 0\nassert solution(\"xxxxii\") == 1\nassert solution(\"xxoxo\") == 1\nassert solution(\"xxxxii\") == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxxxxx\") == 8\nassert solution(\"xxxx\") == 0\nassert solution(\"xiiix\") == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 36
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\nassert solution(stdin) == ''\n\nassert solution(stdin) == ''\n\nassert solution(stdin) == ''\n\nassert solution(stdin) == ''",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\nassert solution(\"fzbxmv\") == \"8\"\nassert solution(\"a\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello\") == \"\"\nassert solution(\"hello!\") == \"\"\nassert solution(\"hello!world\") == \"\"\nassert solution(\"hello!xxxxxx\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \"36\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"200\"\nassert solution(\"100\") == \"10010000\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '48'\nassert solution('25') == '2525'\nassert solution('70') == '707070'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1872
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '48'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '48'\nassert solution('''3''') == '9'\nassert solution('''5''') == '14'\nassert solution('''6''') == '20'\nassert solution('''7''') == '28'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(4) == 48\nassert solution(5) == 95\nassert solution(6) == 114\nassert solution(7) == 175\nassert solution(8) == 226\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(4) == 48\nassert solution(2) == 12\nassert solution(7) == 126\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"48\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '6'\nassert solution('3') == '10'\nassert solution('4') == '16'\nassert solution('5') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '0'\nassert solution('10\\n') == '400'\nassert solution('42\\n') == '1184'\nassert solution('100\\n') == '3200'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 2') =='safe'\nassert solution('8 3') =='safe'\nassert solution('2 3') == 'unsafe'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 5') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('2 3') =='safe'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"unsafe\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') =='safe'\nassert solution('2 3') == 'unsafe'\nassert solution('1 3') == 'unsafe'\nassert solution('1 4') =='safe'\nassert solution('1 5') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    's 4 5'\n) == 'unsafe'\nassert solution(\n    '2 4'\n) =='safe'\nassert solution(\n    '11 1'\n) == 'unsafe'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == \"unsafe\"\nassert solution('6 5') == \"unsafe\"\nassert solution('10 10') == \"unsafe\"\nassert solution('10 9') == \"unsafe\"\nassert solution('10 7') == \"unsafe\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"unsafe\"\nassert solution(\"1 5\") == \"safe\"\nassert solution(\"5 5\") == \"safe\"\nassert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 4\") == \"unsafe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('0 0') =='safe'\nassert solution('100 0') == 'unsafe'\nassert solution('1 0') == 'unsafe'\nassert solution('1000 1000') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') =='safe'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"\"\nassert solution(input) == \"\"\nassert solution(input) == \"\"\nassert solution(input) == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''3 4 2''') == '6'\nassert solution('''5 4 1''') == '6'\nassert solution('''-2 3 -5 4''') == '-4'\nassert solution('''-2 -3 -5 4''') == '-4'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 5 1') == '2'\nassert solution('3 4 5 1 2') == '4'\nassert solution('3 4 5 1 2 3') == '8'\nassert solution('3 4 5 1 2 3 4') == '16'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''3 5 4''') == '6'\nassert solution('''3 3 3''') == '6'\nassert solution('''4 5 3''') == '6'\nassert solution('''3 3 3''') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '1000'\nassert solution('10 10 10.5') == '1000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 6') == '9'\nassert solution('1 1 1') == '0'\nassert solution('1 1 3') == '3'\nassert solution('1 3 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 4 5'''\n    ) == '6'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('-5 4 3') == '45'\nassert solution('1 -5 3') == '10'\nassert solution('3 5 5') == '60'\nassert solution('5 -2 3') == '10'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('10 1 1') == '4'\nassert solution('20 2 3') == '4'\nassert solution('20 2 1') == '2'\nassert solution('30 5 4') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('3 4 3') == '5'\nassert solution('5 6 3') == '6'\nassert solution('50 7 3') == '5'\nassert solution('10 7 10') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 10 8') == '7'\nassert solution('1 2 3') == '0'\nassert solution('10 0 0') == '0'\nassert solution('10 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 2 3') == '0'\nassert solution('1 1 1') == '3'\nassert solution('1 1 1 1 1') == '5'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 100 0') == '0'\nassert solution('2 5 1') == '4'\nassert solution('1 0 1') == '1'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('10 100 1') == '8'\nassert solution('1 100 1') == '0'\nassert solution('5 3 3') == '2'\nassert solution('5 3 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('100 200 30') == '0'\nassert solution('3 4 6') == '0'\nassert solution('2 11 4') == '4'\nassert solution('100 200 30') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\"\"\"\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '6'\nassert solution('30 17') == '1260'\nassert solution('5 4') == '20'\nassert solution('50 50') == '250'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == 10\nprint(\"Test 1 Passed\")\n\nassert solution(\"2 5\") == 10\nprint(\"Test 2 Passed\")\n\nassert solution(\"2 5\") == 10\nprint(\"Test 3 Passed\")\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '3'\nassert solution('1 2') == '2'\nassert solution('-7 10') == '-7'\nassert solution('1 1') == '1'\nassert solution('10 15') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == 10\nassert solution('2 4') == 8\nassert solution('3 1') == 3\nassert solution('0 0') == 0\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 10') == '10'\nassert solution('100 10') == '10'\nassert solution('1 100') == '100'\nassert solution('10 100') == '100'\n\"\"\"\n\nA, B = list(map(int, input().split()))\n\nprint(A * B)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == 10\nassert solution('2 5') == 10\nassert solution('6 10') == 30\nassert solution('1 10') == 10\nassert solution('5 1') == 5\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"A B\")) == input(\"10\")\nassert solution(input(\"5 5\")) == input(\"25\")\nassert solution(input(\"2 5\")) == input(\"10\")\n\nprint(solution(input(\"5 5\")))\nassert solution(input(\"4 4\")) == input(\"16\")\nassert solution(input(\"1 5\")) == input(\"5\")\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"10 3\") == 30\nassert solution(\"20 1\") == 20\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[6:13]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 7') == '10'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 10\n\n\"\"\"\n\n\"\"\"\nBonus: Find the number of biscuits produced in two minutes after activation.\n\n-----Input-----\nA B T\n\n-----Output-----\nPrint the total number of biscuits produced in two minutes after activation.\n\n-----Sample Input-----\n3 5 7\n\n-----Sample Output-----\n0\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('2 1 4') == '3'\nassert solution('3 2 4') == '4'\nassert solution('2 1 3') == '5'\nassert solution('1 2 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(solution(stdin)) # check if the result is a string\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 5 9\") == \"6\"\nassert solution(\"3 5 11\") == \"5\"\nassert solution(\"3 5 13\") == \"4\"\nassert solution(\"3 5 15\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 5') == '5'\nassert solution('1 2 8') == '10'\nassert solution('2 10 30') == '20'\nassert solution('3 10 10') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 7') == \"10\"\nassert solution('2 1 3') == \"5\"\nassert solution('1 1 2') == \"5\"\nassert solution('1 1 1') == \"5\"\nassert solution('1 1 1') == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('4 2 19') == '24'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"5\\n500 600\") == \"NG\"\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n567') == 'OK'\nassert solution('1\\n3\\n1234567') == 'OK'\nassert solution('1\\n3\\n5') == 'OK'\nassert solution('1\\n3\\n3') == 'OK'\nassert solution('1\\n3\\n2') == 'NG'\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('500 1000') == 'OK'\nassert solution('7 7') == 'OK'\nassert solution('10 15') == 'NG'\nassert solution('100 200') == 'OK'\nassert solution('1 1') == 'OK'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"OK\"\nassert solution(\"1 2\") == \"OK\"\nassert solution(\"2 1\") == \"OK\"\nassert solution(\"1 1\") == \"OK\"\nassert solution(\"3 2\") == \"NG\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n500 600''') == 'OK'\nassert solution('''500 1000''') == 'OK'\nassert solution('''7\n6 8''') == 'OK'\nassert solution('''2\n9 11''') == 'NG'\nassert solution('''2\n4 5''') == 'OK'\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7', '500 600') == 'OK'\nassert solution('7', '400 500') == 'NG'\nassert solution('7', '500 400') == 'OK'\nassert solution('7', '7 7') == 'OK'\nassert solution('7', '7 5') == 'NG'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"OK\"\n\"\"\"\n\nK = int(input())\n\nA, B = map(int, input().split())\n\nfor i in range(A, B + 1):\n    if i % K == 0:\n        print(\"OK\")\n        break\nelse:\n    print(\"NG\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7\") == \"OK\"\nassert solution(\"7 2\") == \"NG\"\nassert solution(\"123\") == \"OK\"\nassert solution(\"123 123\") == \"NG\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4 3') == 'OK'\nassert solution('2\\n6 3') == 'NG'\nassert solution('1\\n5 0') == 'OK'\nassert solution('1\\n1 1') == 'OK'\nassert solution('1\\n100 2') == 'OK'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n500 600\\n') == 'OK'\nassert solution('7\\n500 600\\n') == 'OK'\nassert solution('7\\n500 600\\n') == 'OK'\n\nassert solution('5\\n5 10\\n') == 'NG'\nassert solution('5\\n5 10\\n') == 'NG'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('9 3') == '4.833333333333'\nassert solution('30 6') == '36.0'\nassert solution('30 6') == '36'\nassert solution('30 60') == '36'\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''7 8''') == '2.66666667'\nassert solution('''100 2''') == '31.6'\nassert solution('''10 20''') == '31.6'\nassert solution('''10 25''') == '34.3'\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3\\n') == '2.6666666667'\n\"\"\"\n\nfrom sys import stdin\nfrom math import log\n\nT, X = map(int, stdin.readline().split())\nprint(log(2 * X / T))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == '2.6666666667'\nassert solution('2 5') == '3.83333333333'\nassert solution('2 2') == '1.6'\nassert solution('1 10') == '2.6666666667'\nassert solution('1 10') == '2.6666666667'\n",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''8 3'''\n) == '2.6666666667'\nassert solution(\n'''4 7'''\n) == '6.3333333333'\nassert solution(\n'''2 10'''\n) == '1.88888888889'\nassert solution(\n'''7 9'''\n) == '9.5833333333'\nassert solution(\n'''5 50'''\n) == '30.0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 3''') == '2.66666667'\nassert solution('''8 2''') == '1.33333333'\nassert solution('''3 5''') == '6.5'\nassert solution('''8 6''') == '8.5'\nassert solution('''7 4''') == '4.25'\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('100 300 300') == '0'\nassert solution('20 20 20') == '0'\nassert solution('10 10 10') == '0'\nassert solution('5 4 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 3 5') == '6'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2 3 4 5') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('2 4 1') == '1'\nassert solution('6 2 3') == '1'\nassert solution('3 4 2') == '1'\nassert solution('2 2 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"8 9 9\") == \"0\"\nassert solution(\"6 4 9\") == \"1\"\nassert solution(\"8 9 3\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('2 1 1') == '1'\nassert solution('4 2 2') == '3'\nassert solution('6 3 4') == '3'\nassert solution('8 3 6') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '1'\nassert solution('1 2 1') == '0'\nassert solution('2 4 3') == '2'\nassert solution('1 2 1') == '0'\nassert solution('2 4 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == '1'\nassert solution('2 2 1') == '1'\nassert solution('7 2 1') == '0'\nassert solution('11 10 5') == '1'\nassert solution('1 20 10') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('6 3 3') == '0'\nassert solution('6 3 5') == '2'\nassert solution('1 6 4') == '5'\nassert solution('5 3 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('3 2 5') == '0'\nassert solution('6 10 14') == '0'\nassert solution('10 4 22') == '14'\nassert solution('10 3 5') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('3 1 2') == '1'\nassert solution('3 2 1') == '1'\nassert solution('2 1 3') == '2'\nassert solution('3 1 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''6\n4 1 2 5 3 6\n5 6 4 3 1 2''') == '5'\nassert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''4\n1 4 2 3\n4 1 2 3''') == '0'\nassert solution('''5\n1 4 2 3 5\n5 4 3 2 1''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 2\\n3 1 2\\n') == '3'\nassert solution('3 4 1 2\\n3 4 2 1\\n') == '1'\nassert solution('1 2 3\\n3 1 2\\n') == '2'\nassert solution('4 5 1 2 3\\n3 4 2 1\\n') == '2'\nassert solution('1 2 3 4 5\\n3 4 2 1 5\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == \"1\"\nassert solution('2 3 4 1') == \"1\"\nassert solution('2 3 1 4') == \"1\"\nassert solution('3 1 2 4') == \"2\"\nassert solution('3 1 4 2') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n3\\n') == '1'\nassert solution('4\\n2\\n1\\n3') == '2'\nassert solution('4\\n3\\n1\\n2') == '1'\nassert solution('6\\n1\\n2\\n4\\n5\\n3') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''4\n1 3 2 4\n3 1 2 4\n4 1 3 2\n4 3 1 2''') == '2'\nassert solution('''5\n1 4 2 5 3\n3 1 4 2 5\n5 1 4 2 3\n5 3 1 4 2\n4 3 2 5 1\n4 3 2 1 5''') == '1'\nassert solution('''6\n1 5 4 2 3 6\n6 1 5 4 2 3\n4 2 3 1 6 5\n6 4 2 3 1 5\n5 6 4 2 3 1\n5 6 4 2 1 3''') == '4'\nassert solution('''7\n1 6 4 2 3 7 5\n7 1 6 4 2 3 5 7\n5 2 3 4 1 6 7 7\n7 5 2 3 4 1 6 7\n4 3 1 6 7 5 2 7\n6 4 3 1 5 2 7 6\n6 4 3 1 5 2 7 1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n1 3 2\n3 1 2\n''') == '3'\n\nassert solution(\n'''\n6\n1 6 2 5 4 3\n4 3 1 2 6\n''') == '5'\n\nassert solution(\n'''\n5\n1 5 4 3 2\n2 4 3 1 5\n''') == '1'\n\nassert solution(\n'''\n10\n5 6 9 8 7 10 10 8 1 3 4 5 2 6 7 8 9\n4 5 3 9 2 8 1 6 7 10\n''') == '6'\n\nassert solution(\n'''\n4\n5 4 3 2 1\n2 3 1 4 5\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''3\n1 3 2\n3 1 2''') == '3'\n'''\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3 2\\n') == '3'\nassert solution('2\\n3 1\\n') == '2'\nassert solution('3\\n1 2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 3 2''') == '3'\nassert solution('''3\n1 3 2''') == '3'\nassert solution('''3\n1 3 2''') == '3'\nassert solution('''3\n2 1 3''') == '3'\nassert solution('''3\n3 1 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"AGCGAATAGC\") == \"AGCGA\"\nassert solution(\"AGCGAATAGC\") == \"AGCGA\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AACGTTTTTCAC') == 'ACGTTTT'\nassert solution('GATGGAACTAC') == 'ACGTGGA'\nassert solution('ACGTAG') == 'ACGTAG'\nassert solution('ATCODER') == 'ACGTTT'\nassert solution('TTGTTGTTGTTCATAGGATAGTGG') == 'TGTGTTGTT'\n",
        "num_ids_2": 37,
        "num_ids_4": 67
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('ATCODER') == 'ATC'\nassert solution('ACGTCAGTAT') == 'ATTC'\nassert solution('ACGTGTCGCGAGAGGCGTAAAGTGCGTAGCTTCGTACGTAAGAGCGTATAGGCGTATGTAGGCGTATGTGTAGTCGTAGCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCTGATTCGTAGCGTAGCTCGTCGTAGTGGCGTCGTAGCTCTGCGTACGTAAGAGCTCGTAACGACGTAGCTGTAGCGTAGCTTCGTATGCTGTAGCTGTTGCGTAGCGTAGTACGTAGGCGTAAGAGCGTATAGGCGTATGTAGCGTAGCGTAGTGATCGTAGCT",
        "num_ids_2": 22,
        "num_ids_4": 1769
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AACGT') == 'ACGT'\nassert solution('ACGTGTCAT') == 'ACGTGTCAT'\nassert solution('AGCTATCGGGTCTGAT') == 'ATCGGGTCTGAT'\n",
        "num_ids_2": 18,
        "num_ids_4": 49
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('TCO') == ''\nassert solution('CODE') == 'CODE'\nassert solution('AATC') == 'AATC'\nassert solution('ATCODER') == 'ATC'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 3\nassert solution('ATC') == 3\nassert solution('ATCODERATCODER') == 3\nassert solution('ATCODER') == 3\nassert solution('ATCODERATCODERATCODER') == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ATCODER') == 3\nassert solution('AGTCODER') == 4\nassert solution('TTCCODER') == 5\nassert solution('AGTCODER') == 4\nassert solution('GATCODER') == 4\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"111\") == \"1\"\nassert solution(\"1111\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"321\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"11\") == \"\"\nassert solution(\"111\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11''') == '9'\n'''\nWrite a function that takes a string as input and returns the string reversed.\n\nFor example, if the input string is \"hello\", then the output should be \"olleh\".\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"1\"\nassert solution(\"110\") == \"9\"\nassert solution(\"1101\") == \"8\"\nassert solution(\"1011\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11) == \"9\"\nassert solution(4) == \"1\"\nassert solution(1) == \"0\"\nassert solution(1000) == \"119\"\nassert solution(20) == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(0) == '0'\nassert solution(9) == '9'\nassert solution(10) == '0'\nassert solution(11) == '9'\nassert solution(12) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1'''\n) == \"3\"\nassert solution(\n'''1010'''\n) == \"6\"\nassert solution(\n'''1011'''\n) == \"5\"\nassert solution(\n'''10101'''\n) == \"2\"\nassert solution(\n'''1011010'''\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcdef\") == \"abcf\"\nassert solution(\"abcdefgh\") == \"abcfh\"\nassert solution(\"abcdefghi\") == \"abcfgh\"\nassert solution(\"abcdefghi\") == \"abcfgh\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[::-1]\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('Hello') == 'Hell'\nassert solution('AbC') == 'AaC'\nassert solution('c') == 'c'\nassert solution('A') == 'A'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cuoheefd') == 'cuohehft'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cuohefecd') == 'cuohehftd'\nassert solution('cuohefecd') == 'cuohehftd'\nassert solution('cuohefecd') == 'cuohehftd'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cafedcabac') == 'tcttaccgac'\nassert solution('cafe') == 'ttfe'\nassert solution('coffee') == 'ttfe'\nassert solution('tea') == 'ttfe'\nassert solution('Tea') == 'ttfe'\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == 4\nassert solution(\"cupofhottea\") == 4\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.replace('f', 't')\nprint(solution(stdin))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('a') == 'a'\nassert solution('hello') == 'hello'\nassert solution('hell') == 'hl'\nassert solution('hello') == 'hel'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3 7') == '5 6 7 8 9'\nassert solution('2 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"10 9\") == \"0 1 2 3 4 5 6 7 8 9\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"5 7\") == \"0 1 2 3 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 1') == '0'\nassert solution('2 1') == '0 1'\nassert solution('3 1') == '0 1 2'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 18,
        "num_ids_4": 47
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('4 11') == '6 7 8 9 10'\nassert solution('1 11') == '2 3 4 5'\nassert solution('2 7') == '2 3 4 5 6'\nassert solution('1 7') == '2 3 4 5 6'",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''4 4\n''') == '5 6 7 8'\nassert solution('''6 5\n''') == '5 6 7'\nassert solution('''4 7\n''') == '5 6'\nassert solution('''7 7\n''') == '5 6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''4 7\n''') == '6 7 8 9'\nassert solution('''3 6\n''') == '5 6 7 8'\nassert solution('''4 6\n''') == '6 7 8'\nassert solution('''3 7\n''') == '5 6 7 8 9'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == \"Yes\"\nassert solution('15') == \"No\"\nassert solution('-15') == \"Yes\"\nassert solution('-20') == \"Yes\"\nassert solution('30') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"-1\") == \"Yes\"\nassert solution(\"-9\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"10\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"Yes\"\nassert solution(\"18\") == \"No\"\nassert solution(\"26\") == \"Yes\"\nassert solution(\"-26\") == \"No\"\nassert solution(\"-40\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(25) == \"Yes\"\nassert solution(15) == \"No\"\nassert solution(30) == \"Yes\"\nassert solution(0) == \"No\"\nassert solution(10) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"35\") == \"No\"\nassert solution(\"100\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-40\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"-10\") == \"No\"\nassert solution(\"0\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"Yes\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"0.5\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\nassert solution('40') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 2\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n-2 8') == '1'\nassert solution('1 2\\n5 5\\n-2 8\\n-4 4\\n-2 7') == '3'\nassert solution('1 2\\n5 5\\n-2 8\\n-4 4\\n-2 7\\n-2 6') == '5'\nassert solution('1 2\\n5 5\\n-2 8\\n-4 4\\n-2 7\\n-2 6\\n-2 5') == '3'\n",
        "num_ids_2": 35,
        "num_ids_4": 100
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n-2 8') == '1'\nassert solution('1 2\\n5 5\\n-2 8\\n1 1') == '0'\nassert solution('1 2\\n5 5\\n-2 8\\n3 3') == '1'\nassert solution('1 2\\n5 5\\n-2 8\\n3 1') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 83
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 2 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 5') == '2'\nassert solution('-2 8') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('0 1 2 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"-2 -1\") == \"2\"\nassert solution(\"-2 1\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 5') == '1'\nassert solution('-2 8') == '1'\nassert solution('1 2 3') == '1'\nassert solution('5 5 -2 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n5 5\") == \"1\"\nassert solution(\"2 1\\n1 2\") == \"1\"\nassert solution(\"2 3\\n3 1\") == \"1\"\nassert solution(\"3 1\\n3 1\") == \"0\"\nassert solution(\"2 2\\n1 1\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3776) == 'Good'\nassert solution('2345') == 'Bad'\nassert solution('2876') == 'Good'\nassert solution('3776') == 'Good'\nassert solution('4567') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5689') == 'Good'\nassert solution('9900') == 'Bad'\nassert solution('3776') == 'Good'\nassert solution('1234') == 'Good'\nassert solution('3459') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3774') == 'Good'\nassert solution('3777') == 'Bad'\nassert solution('3771') == 'Good'\nassert solution('3773') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"10\") == \"Bad\"\nassert solution(\"3456\") == \"Good\"\nassert solution(\"101\") == \"Good\"\nassert solution(\"12345\") == \"Good\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3579') == 'Bad'\nassert solution('3235') == 'Good'\nassert solution('3471') == 'Good'\nassert solution('2679') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3776') == 'Good'\nassert solution('1234') == 'Good'\nassert solution('1223') == 'Bad'\nassert solution('1213') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Good\"\nassert solution(input()) == \"Bad\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('7869') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('7869') == 'Good'\nassert solution('3772') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Good\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('3474') == 'Good'\nassert solution('3776') == 'Good'\nassert solution('3474') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n3 4\\n\"\n) == '3.5'\n\nassert solution(\n    \"2\\n-4\\n-5\\n\"\n) == '-1.00000'\n\nassert solution(\n    \"2\\n-100\\n-99\\n\"\n) == '-1.00000'\n\nassert solution(\n    \"2\\n100\\n99\\n\"\n) == '1.00000'\n\nassert solution(\n    \"2\\n10\\n100\\n\"\n) == '0.50000'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('5\\n1 2 3 4 5') == '2.5'\nassert solution('4\\n1 2 3 4') == '1.5'\nassert solution('1\\n5') == '5.0'\nassert solution('1\\n5\\n1 2 3 4 5') == '5.0'\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('1 2') == '1'\nassert solution('3 4') == '3.5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 1 1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('1\\n2\\n') == '3'\nassert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n1\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 4''') == '3.5'\nassert solution('''1\n2''') == '1.5'\nassert solution('''10\n10''') == '1'\nassert solution('''100\n101''') == '1'\nassert solution('''2\n1''') == '0.5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('0 1 2') == '1.5'\nassert solution('0 1 2 2 3 3 3') == '2.5'\nassert solution('2 3 3 4') == '3.5'\nassert solution('1 2 3 4') == '2.5'\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1.0\"\nassert solution(\"3 4\") == \"3.5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100 100\") == \"99\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('2 3') == '0.25'\nassert solution('3 4') == '0.375'\nassert solution('4 5') == '0.625'\nassert solution('5 6') == '0.375'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 1 2\\n2 5 4') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3 6 3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3 6 3 6 3 6') == '14'\n",
        "num_ids_2": 44,
        "num_ids_4": 102
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 1\\n2 2\\n3 3\") == \"10\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n3 4 5\") == \"18\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"2\\n1 3\\n2 4\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 87
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 2\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"3 1 2 3\") == \"14\"\nassert solution(\"3 1 2 3 4\") == \"14\"\nassert solution(\"4 1 2 3 4 5 6\") == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '14'\nassert solution('5\\n5 1 1 1 1\\n1 1 1 1 1') == '60'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '60'\nassert solution('3\\n3 1 2\\n2 1 2\\n3 6') == '28'\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 87
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == 14\nassert solution(\"1\\n1 1 1\\n1 1 1\\n1 1 1\") == 0\nassert solution(\"2\\n1 1 1\\n1 1 1\\n1 1 1\") == 0\nassert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == 14\nassert solution(\"2\\n1 1 1\\n1 1 1\\n1 1 1\") == 0\n",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n6 6 6') == '0'\nassert solution('2\\n3 1\\n2 2\\n1 2\\n3 2\\n1 2') == '4'\nassert solution('2\\n2\\n2\\n2\\n1\\n1\\n1\\n1') == '3'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n",
        "num_ids_2": 53,
        "num_ids_4": 114
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('5\\n7 6 7 8 9\\n5 7 9 8 10 11\\n6 7 10 9 10 11\\n8 9 10 11 12\\n9 10 11 12 13\\n10 11 12 13 14\\n') == '140'\nprint(solution(''))\nprint(solution('3\\n3 1 2\\n2 5 4\\n3 6\\n'))\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\".join(sample_inputs)) == \"\".join(sample_outputs)\nprint(\"\".join(sample_outputs))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABCDBABCQ\") == \"2\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[10:15]\n\"\"\"\n\nN = int(input())\nS = input()\n\ni, count = 0, 0\nwhile i < len(S) - 3:\n    if S[i:i+3] == \"ABC\":\n        count += 1\n    i += 1\nprint(count)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '10\\nZABCDBABCQ') == '2'\nassert solution(\n    '2\\nZABZ') == '1'\nassert solution(\n    '5\\nZZZZZZZZ') == '0'\nassert solution(\n    '2\\nZZZZ') == '0'\nassert solution(\n    '1\\nZ') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Z\") == \"\"\nassert solution(\"AB\") == \"\"\nassert solution(\"ABAABAABABABABA\") == \"ABBABABABABABABA\"\nassert solution(\"ABC\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 47
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''2\nZZZZZZZZZ''') == '0'\nassert solution('''1\nAAA''') == '1'\nassert solution('''1\nAAA''') == '1'\nassert solution('''1\nAAA''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQ') == '2'\nassert solution('a') == '0'\nassert solution('ZaC') == '1'\nassert solution('ZaCbA') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ABCDBABCQ') == '2'\nassert solution
        "num_ids_2": 29,
        "num_ids_4": 1855
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQ') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == 2\n\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == 2\n'''\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('OBIRA\\nHABORO\\nHOROKANAI\\nMASHIKE\\nRUMOI') == '3'\nassert solution('HABORO\\nMASHIKE\\nRUMOI\\nOBIRA\\nHOROKANAI') == '4'\nassert solution('OBIRA\\nHABORO\\nHOROKANAI\\nMASHIKE\\nRUMOI') == '5'\nassert solution('HABORO\\nMASHIKE\\nRUMOI\\nOBIRA\\nHOROKANAI') == '6'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\nassert solution('MOSHIKI\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\nassert solution('MOSHIKI\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\nassert solution('MOSHIKI\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\nassert solution('MOSHIKI\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MOSHIKA\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '0'\nassert solution('MOSHIKA\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '0'\n\"\"\"\n",
        "num_ids_2": 74,
        "num_ids_4": 111
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('10 10') == 'No'\nassert solution('5 10') == 'Yes'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"10 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 0\") == \"No\"\nassert solution(\"2 0\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n-----Answer-----\n\"\"\"\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\nassert solution(stdin) == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\nassert solution(\"5 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('5 3') == 'No'\nassert solution('6 3') == 'No'\nassert solution('10 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('snipu') == 'Yes'\nassert solution('sipu') == 'No'\nassert solution('snipu') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sipp') == 'Yes'\nassert solution('si') == 'No'\nassert solution('s') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipee') == 'No'\nassert solution('sipps') == 'No'\nassert solution('sipp') == 'No'\nassert solution('si') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"pippuu\") == \"No\"\nassert solution(\"dood\") == \"Yes\"\nassert solution(\"dd\") == \"Yes\"\nassert solution(\"dooddd\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('foog') == 'No'\nassert solution('sipps') == 'No'\nassert solution('sippuus') == 'No'\nassert solution('sippus') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('coffeecup') == 'No'\nassert solution('coffeebean') == 'Yes'\nassert solution('sippuuu') == 'No'\nassert solution('sippuu') == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipuufo') == 'No'\nassert solution('peeku') == 'Yes'\nassert solution('peekuo') == 'Yes'\nassert solution('peekuee') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('asdsad') == 'No'\nassert solution('sippuuu') == 'No'\nassert solution('sippuuuu') == 'Yes'\nassert solution('sippuuuuu') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('ssssip') == 'Yes'\nassert solution('sippuuuu') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuue') == 'No'\nassert solution('sippuuue') == 'No'\nassert solution('sippuuueee') == 'No'\nassert solution('sippuuuu') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10') == 'TLE'\nassert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '4'\nassert solution('4 50') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'\n\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"6\"\n",
        "num_ids_2": 18,
        "num_ids_4": 45
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == 4\nassert solution('5 50\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n",
        "num_ids_2": 1687,
        "num_ids_4": 1687
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'TLE'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == 'TLE'\nassert solution('1 100') == 'TLE'\nassert solution('1 1 1 1') == 'TLE'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == '70'\nassert solution('1 80') == '80'\nassert solution('4 50') == '50'\nassert solution('3 70') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 2 1\") == \"2\"\nassert solution(\"1 3 2 1 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\nassert solution('''3 10\n4 3\n2 6\n5 5\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n60 62\n60 63\n60 64\n60 65\n60 66\n60 67\n60 68\n60 69\n60 70\n60 71\n60 72\n60 73\n60 74\n60 75\n60 76\n60 77\n60 78\n60 79\n60 80\n60 81\n60 82\n60 83\n60 84\n60 85\n60 86\n60 87\n60 88\n60 89\n60 90\n60 91\n60 92\n60 93\n60 94\n60 95\n60 96\n60 97\n60 98\n60 99\n60 100\n60 101\n60 102\n60 103\n60 104\n60 105\n60 106\n60 107\n60 108\n60 109\n60 110\n60 111\n60 112\n60 113\n60 114\n60 115\n60 116\n60 117\n60 118\n60 119\n60 120\n60 121\n60 122\n60 123\n60 124\n60 125\n60 126\n60 127\n60 128\n60 129\n60 130\n60 131\n60 132\n60 133\n60 134\n60 135\n60 136\n60 137\n60 138\n60 139\n60 140\n60 141\n60 142\n60 143\n60 144\n60 145\n60 146\n60 147\n60 148\n60 149\n60 150\n60 151\n60 152\n60 153\n60 154\n60 155\n60 156\n60 157\n60 158\n60 159\n60 160\n60 161\n60 162\n60 163\n60 164\n60 165\n60 166\n60 167\n60 168\n60 169\n60 170\n60 171\n60 172\n60 173\n60 174\n60 175\n60 176\n60 177\n60 178\n60 179\n60 180\n60 181\n60 182\n60 183\n60 184\n60 185\n60 186\n60 187\n60 188\n60 189\n60 190\n60 191\n60 192\n60 193\n60 194\n60 195\n60 196\n60 197\n60 198\n60 199\n60 200\n60 201\n60 202\n60 203\n60 204\n60 205\n60 206\n60 207\n60 208\n60 209\n60 210\n60 211\n60 212\n60 213\n60 214\n60 215\n60 216\n60 217\n60 218\n60 219\n60 220\n60 221\n60 222\n60 223\n60 224\n60 225\n60 226\n60 227\n60 228\n60 229\n60 230\n60 231\n60 232\n60 233\n60 234\n60 235\n60 236\n60 237\n60 238\n60 239\n60 240\n60 241\n60 242\n60 243\n60 244\n60 245\n60 246\n60 247\n60 248\n60 249\n60 250\n60 251\n60 252\n60 253\n60 254\n60 255\n60 256\n60 257\n60 258\n60 259\n60 260\n60 261\n60 262\n60 263\n60 264\n60 265\n60 266\n60 267\n60 268\n60 269\n60 270\n60 271\n60 272\n60 273\n60 274\n60 275\n60 276\n60 277\n60 278\n60 279\n60 280\n60 281\n60 282\n60 283\n60 284\n60 285\n60 286\n60 287\n60 288\n60 289\n60 290\n60 291\n60 292\n60 293\n60 294\n60 295\n60 296\n60 297\n60 298\n60 299\n60 300\n60 301\n60 302\n60 303\n60 304\n60 305\n60 306\n60 307\n60 308\n60 309\n60 310\n60 311\n60 312\n60 313\n60 314\n60 315\n60 316\n60 317\n60 318\n60 319\n60 320\n60 321\n60 322\n60 323\n60 324\n60 325\n60 326\n60 327\n60 328\n60 329\n60 330\n60 331\n60 332\n60 333\n60 334\n60 335\n60 336\n60 337\n60 338\n60 339\n60 340\n60 341\n60 342\n60 343\n60 344\n60 345\n60 346\n60 347\n60 348\n60 349\n60 350\n60 351\n60 352\n60 353\n60 354\n60 355\n60 356\n60 357\n60 358\n60 359\n60 360\n60 361\n60 362\n60 363\n60 364\n60 365\n60 366\n60 367\n60 368\n60 369\n60 370\n60 371\n60 372\n60 373\n60 374\n60 375\n60 376\n60 377\n60 378\n60 379\n60 380\n60 381\n60 382\n60 383\n60 384\n60 385\n60 386\n60 387\n60 388\n60 389\n60 390\n60 391\n60 392\n60 393\n60 394\n60 395\n60 396\n60 397\n60 398\n60 399\n60 400\n60 401\n60 402\n60 403\n60 404\n60 405\n60 406\n60 407\n60 408\n60 409\n60 410\n60 411\n60 412\n60 413\n60 414\n60 415\n60 416\n60 417\n60 418\n60 419\n60 420\n60 421\n60 422\n60 423\n60 424\n60 425\n60 426\n60 427\n60 428\n60 429\n60 430\n60 431\n60 432\n60 433\n60 434\n60 435\n60 436\n60 437\n60 438\n60 439\n60 440\n60 441\n60 442\n60 443\n60 444\n60 445\n60 446\n60 447\n60 448\n60 449\n60 450\n60 451\n60 452\n60 453\n60 454\n60 455\n60 456\n60 457\n60 458\n60 459\n60 460\n60 461\n60 462\n60 463\n60 464\n60 465\n60 466\n60 467\n60 468\n60 469\n60 470\n60 471\n60 472\n60 473\n60 474\n60 475\n60 476\n60 477\n60 478\n60 479\n60 480\n60 481\n60 482\n60 483\n60 484\n60 485\n60 486\n60 487\n60 488\n60 489\n60 490\n60 491\n60 492\n60 493\n60 494\n60 495\n60 496\n60 497\n60 498\n60 499\n60 500\n60 501\n60 502\n60 503\n60 504\n60 505\n60 506\n60 507\n60 508\n60 509\n60 510\n60 511\n60 512\n60 513\n60 514\n60 515\n60 516\n60 517\n60 518\n60 519\n60 520\n60 521\n60 522\n60 523\n60",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"1 2\") == \"TLE\"\nassert solution(\"1 2 1\") == \"TLE\"\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 9''') == \"8\"\nassert solution('''6 5 10''') == \"15\"\nassert solution('''10 30 100''') == \"45\"\nassert solution('''1 2 1''') == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('10 3 3') == '14'\nassert solution('2 3 5') == '10'\nassert solution('7 2 3') == '10'\nassert solution('6 3 7') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 50 1') == '0'\nassert solution('1 3 1') == '2'\nassert solution('5 10 15') == '18'\nassert solution('100 100 100') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 9') == '8'\nassert solution('4 2 9') == '8'\nassert solution('5 2 4') == '9'\nassert solution('1 100 50') == '101'\nassert solution('1 100 50') == '101'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 9 4') == '8'\nassert solution('1 2 4') == '5'\nassert solution('1 9 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"2 4 5\") == \"10\"\nassert solution(\"3 4 5\") == \"8\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"8\"\nassert solution(\"1 2 2\") == \"8\"\nassert solution(\"1 2 3 5\") == \"11\"\nassert solution(\"1 2 2 6\") == \"9\"\nassert solution(\"1 2 3 5 6\") == \"16\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == \"1\"\nassert solution('''babsonnatbosh\nzabsonavdosh\nwersbosh\nqpetsenbosh\nfroshabosh\nrhobosh\neaupbosh\nwnatlosh\ndoshabosh\nrashbosh\nbsosabosh\ncizbosh''') == \"6\"\nassert solution('''babsonnatbosh\nzabsonavdosh\nwersbosh\nqpetsenbosh\nfroshabosh\nrhobosh\neaupbosh\nwnatlosh\ndoshabosh\nrashbosh\nbsosabosh\ncizbosh''') == \"6\"\nassert solution('''babsonnatbosh\nzabsonavdosh\nwersbosh\nqpetsenbosh\nfroshabosh\nrhobosh\neaupbosh\nwnatlosh\ndoshabosh\nrashbosh\nbsosabosh\ncizbosh''') == \"6\"\nassert solution('''babsonnatbosh\nzabsonavdosh\nwersbosh\nqpetsenbosh\nfroshabosh\nrhobosh\neaupbosh\nwnatlosh\ndoshabosh\nrashbosh\nbsosabosh\ncizbosh''') == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('acornistnt\\neanutbomb\\nconstraint\\n') == '1\\n'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1') == ''\nassert solution('1') == ''\nassert solution('1') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"acornistnt\") == \"1\"\nassert solution(\"peanutbomb\") == \"1\"\nassert solution(\"constraint\") == \"1\"\nassert solution(\"tactcoa\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '3',\n    'acornistnt',\n    'peanutbomb',\n    'constraint',\n])) == '1'\n\nprint(solution(stdin))\n\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\npeanutbomb') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb') == '2'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint') == '3'\n",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1\\n'\nassert solution('kathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\nkathak\\",
        "num_ids_2": 1653,
        "num_ids_4": 1653
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\n\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint') == '2'\n\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint\\nconstraint') == '3'\n\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint\\nconstraint\\nconstraint') == '4'",
        "num_ids_2": 48,
        "num_ids_4": 109
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n1\na\n''') == '1'\nassert solution('''\n2\na\nb\n''') == '0'\nassert solution('''\n1\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"23\"\nassert solution(\"123456789\") == \"1\"\nassert solution(\"112123123412345$\\dots$\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1234\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('11112222333344444555556666667777888999990000') == '000011111122222222233333333444444455555556666667777888999990000'\nassert solution('1000000000') == '0000000000000001'\nassert solution('123456789') == '123456789'\nassert solution('123456123456789') == '123456123456789'\n",
        "num_ids_2": 92,
        "num_ids_4": 122
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('112123123412345$\\dots$') == '123412345678910'\nassert solution
        "num_ids_2": 1496,
        "num_ids_4": 1496
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\",
        "num_ids_2": 73,
        "num_ids_4": 1496
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4''') == '100'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '009'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '001'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11123123412345$\\dots$') == '112123123412345123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345",
        "num_ids_2": 1496,
        "num_ids_4": 1496
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution
        "num_ids_2": 1496,
        "num_ids_4": 1496
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '1 2 1 1 2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1 1 1 1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('3\\n2\\n') == '1'\nassert solution('4\\n3\\n') == '1'\nassert solution('5\\n4\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"\nassert solution(\"5 2\\n3 1\\n1 4\\n1 2\\n4 2\\n\") == \"1\\n1 1 1\\n\"\nassert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 170
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1\\n1 2\\n\") == \"1\\n1 2\"\nassert solution(\"2 3\\n2 1\\n1 2\\n2 1\\n3 1\\n\") == \"3\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n3 1\\n\") == \"2\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n3 1\\n2 1\\n3 1\\n3 1\\n2 1\\n\") == \"3\"\nassert solution(\"6 2\\n5 4\\n1 4\\n3 4\\n3 2\\n4 3\\n5 2\\n3 5\\n3 6\\n4 1\\n1 6\\n5 2\\n2 1\\n4 1\\n1 2\\n\") == \"3\"\n",
        "num_ids_2": 54,
        "num_ids_4": 128
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 1\\n4 1\\n3 2\\n4 2\\n1 3\\n1 4\\n2 3\\n2 4\\n1 5\\n2 6\\n3 4\\n1 5\\n3 6\\n1 6\\n4 5\\n4 6\\n1 7\\n2 8\\n3 9') == '3\\n1 1 2 3 2 3 1 3 1\\n'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n1 4\\n3 5\\n2 4\\n5 4\\n2 5\\n5 6\\n1 6\\n4 5\\n4 6\\n3 6\\n2 7\\n4 8\\n3 9\\n1 10\\n2 10\\n1 11\\n3 11\\n1 12\\n2 12\\n1 13\\n1 14\\n2 14\\n3 15\\n4 15\\n3 16\\n1 17\\n1 18\\n2 18\\n3 19\\n3 20\\n4 19\\n1 21\\n2 21\\n3 22\\n1 22\\n3 23\\n2 23\\n4 22\\n1 22\\n1 22\\n2 23\\n3 24\\n1 24\\n3 25\\n2 25\\n4 25\\n3 25\\n4 26\\n3 26\\n1 26\\n1 26\\n2 26\\n3 27\\n1 27\\n1 28\\n2 28\\n1 29\\n1 30\\n2 30\\n3 31\\n1 31\\n1 31\\n1 31\\n1 31\\n1 31\\n2 31\\n3 32\\n1 32\\n1 32\\n1 32\\n1 32\\n1 32\\n1 32\\n1 32\\n1 32\\n2 32\\n3 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33\\n1 33",
        "num_ids_2": 1290,
        "num_ids_4": 1290
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1 1 1'\nassert solution('9 2') == '1 1 1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 68
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2''') == '2'\nassert solution('''4 2''') == '1 1 1 1'\nassert solution('''10 2''') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('''10 3''') == '1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''5 2''') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 77
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"1 1 1\"\nassert solution(\"2 4\") == \"1 1 1 1\"\nassert solution(\"1 1\") == \"1 1 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2\\n1 2 1 1 2'\nassert solution('5 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '1\\n1 1 1 1 2'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3\\n1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '1\\n1 1 2 3 2 3 1 3 1'\n",
        "num_ids_2": 76,
        "num_ids_4": 196
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '2\\n1 2 1 1 2'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '1\\n1 1 1 1 1 1 1 1 1'\nassert solution('10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n3 10\\n') == '2\\n1 1 2 3 2 3'\n",
        "num_ids_2": 100,
        "num_ids_4": 157
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 4 4\n''') == '2 4'\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\n'''\n\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport unittest\n\nfrom collections import Counter\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 4 4\n\"\"\"\n) == \"2 4\"\n\nassert solution(\n\"\"\"\n9\n1 1 8 8 8 4 4 4 4\n\"\"\"\n) == \"3 8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('2\\n1 2\\n') == '1 2'\nassert solution('1\\n1\\n') == '1 1'\n",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '2 1'\nassert solution('2') == '2 2'\nassert solution('3') == '2 3'\nassert solution('4') == '2 4'\nassert solution('5') == '2 5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('1\\n1') == '1 1'\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n1 2 4 4\n\"\"\") == \"2 4\"\n\nassert solution(\"\"\"9\n1 1 8 8 8 4 4 4 4\n\"\"\") == \"3 8\"\n\nassert solution(\"\"\"7\n4 3 7 1 4 3 3\n\"\"\") == \"3 6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('8\\n4 4 4 4 4 4 4 4\\n') == '5 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '5 6\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 96
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n4\\n4') == '2 4'\nassert solution('3\\n1 1 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n4 3 7 1 4 3 3\\n4 3 7 1 4 3 3\\n4 3 7 1 4 3 3\\n4 3 7 1 4 3 3\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('9\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4') == '3 8'\nassert solution('10\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 4 4 4 4') == '3 6'\n\n\n\n\"\"\"\n",
        "num_ids_2": 90,
        "num_ids_4": 238
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('8\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('7\\n5 2 3 5 2 5') == '3 6'\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\n\nassert solution('''4\n4 1\n2 4\n3 4\n1 2\n''') == '3 4 1 2'\n\nassert solution('''5\n2 2\n2 1\n1 2\n4 1\n4 2\n''') == '2 2 1 4'\n\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '2 1 3'\n\nassert solution('''10\n1 5\n3 2\n3 1\n2 5\n5 1\n3 2\n2 5\n5 3\n1 2\n4 1\n4 2\n''') == '3 1 2 4 5'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\n\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''6\n2 3\n4 5\n1 6\n2 5\n3 4\n1 2\n''') == '4 3 2 5 1 6'\nassert solution('''9\n3 4\n2 1\n4 5\n3 6\n1 2\n5 8\n6 7\n3 8\n5 7\n6 4\n1 3\n''') == '1 3 2 4 5 6 7 8 9'\nassert solution('''100\n72 96\n70 92\n68 96\n66 91\n64 89\n60 85\n58 83\n56 77\n54 75\n50 73\n48 71\n46 69\n44 67\n42 65\n40 63\n38 61\n36 59\n34 57\n32 55\n30 53\n28 51\n26 49\n24 47\n22 45\n20 43\n18 41\n16 39\n14 37\n12 35\n10 33\n8 31\n6 29\n4 27\n2 25\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''4\n1 4\n2 4\n2 3\n1 3\n''') == '1 4 2 3'\nassert solution('''5\n5 4\n4 3\n3 2\n2 1\n2 4\n1 4\n1 3\n1 2\n1 4\n1 5\n''') == '1 2 3 4 5'\nassert solution('''7\n6 3\n5 4\n5 2\n5 1\n4 5\n3 5\n2 5\n2 4\n2 3\n2 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n''') == '1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 2 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '3 2 4 1 5'\nassert solution('''3''') == '3 1 2'\nassert solution('''3 2''') == '3 1 2'\nassert solution('''3 2 1''') == '3 1 2'\nassert solution('''3 1 2''') == '3 1 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '5\\n'\n    '3 5\\n'\n    '1 4\\n'\n    '2 4\\n'\n    '1 5\\n'\n    '2 3\\n'\n) == '3 2 4 1 5'\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\n",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 81
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '1'\n",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('6\\n1 1000 10000 10 1000000000\\n') == '1'\nassert solution('5\\n0 100000 10000 10000 10000\\n') == '5'\nassert solution('5\\n3 9999999999999 99999999999 999999 999999\\n') == '1'\nassert solution('5\\n1 1 1 1 1\\n') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 10 17 12 15 2''') == '3'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '10'\nassert solution('''6\n1 1000 10000 10 100 1000000000''') == '1'\nassert solution('''6\n1 100000 100000 100000 100000 100000 100000 100000''') == '1'\n\n\n'''\n\nN = int(input())\nskills = [int(i) for i in input().split()]\n\ndiff = float('inf')\nfor i in range(N-1):\n    for j in range(i+1, N):\n        diff = min(diff, abs(skills[i] - skills[j]))\nprint(N-1 - diff)",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"1 10 17 12 15 2\") == \"3\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1 1000 10000 10 100 1000000000\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '10'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n10') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 10') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_) == output\n\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('3\\n1 2 3') == '2'\nassert solution('3\\n1 2 2') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4\\n-1\\n5\\n2\\n0\\n1'\nassert solution('4\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '0\\n0\\n0\\n0\\n0'\nassert solution('5\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '5\\n5\\n5\\n5\\n5'\nassert solution('3\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '2\\n2\\n2\\n2\\n2'\nassert solution('2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '0\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 114,
        "num_ids_4": 218
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"4\"\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"-1\"\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == \"0\"\nassert solution('''10 10 1 1\n8 2 0\n2 5 1\n9 3 1\n4 4 1\n7 1 2\n3 2 1\n1 1 1\n3 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"15 5 3 2\") == \"4\"\nassert solution(\"15 5 4 3\") == \"5\"\nassert solution(\"15 5 2 1\") == \"-1\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"15 5 3 2\") == 4\nassert solution(\"15 5 4 3\") == -1\nassert solution(\"15 5 2 1\") == 5\nassert solution(\"15 5 5 1\") == 0\nassert solution(\"16 7 5 2\") == 2\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"15 5 3 2\"\"\") == \"\"\"-1\n5\n2\n0\n1\n\"\"\"\n\nassert solution(\"\"\"15 5 4 3\"\"\") == \"\"\"-1\n5\n4\n3\n2\n\"\"\"\n\nassert solution(\"\"\"15 5 2 1\"\"\") == \"\"\"-1\n5\n1\n2\n3\n\"\"\"\n\nassert solution(\"\"\"16 7 5 2\"\"\") == \"\"\"-1\n16\n7\n5\n2\n\"\"\"\n\nassert solution(\"\"\"20 5 7 3\"\"\") == \"\"\"-1\n20\n5\n7\n3\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('input_files/A_test_case_1.txt') == '4'\nassert solution('input_files/A_test_case_2.txt') == '-1'\nassert solution('input_files/A_test_case_3.txt') == '5'\nassert solution('input_files/A_test_case_4.txt') == '0'\nassert solution('input_files/A_test_case_5.txt') == '1'\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6\nac?b?c\n''') == '24'\n\nassert solution(\n'''\n7\n???????\n''') == '2835'\n\nassert solution(\n'''\n9\ncccbbbaaa\n''') == '0'\n\nassert solution(\n'''\n5\na???c\n''') == '46'\n\nassert solution(\n'''\n123\nac?b?c\n''') == '24'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\nassert solution('abc???c') == 0\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('cccbbbaaa') == 0\nassert solution('???????') == 2835\nassert solution('a???c') == 46\nassert solution('cccbbbaaa') == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ac?b?c''') == 24\nassert solution('''cccbbbaaa''') == 0\nassert solution('''???????''') == 2835\nassert solution('''a???c''') == 46\nassert solution('''cccbbbaaa''') == 0",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''ac?b?c''') == '24'\nassert solution('''???????''') == '2835'\nassert solution('''cccbbbaaa''') == '0'\nassert solution('''a???c''') == '46'\nassert solution('''bbbbbbbb''') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''6\nac?b?c'''\n) == '24'\nassert solution(\n    '''7\n???????'''\n) == '2835'\nassert solution(\n    '''9\ncccbbbaaa'''\n) == '0'\nassert solution(\n    '''5\na???c'''\n) == '46'\nassert solution(\n    '''6\naaaaaaaaaa'''\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('ac') == 2\nassert solution('b') == 1\nassert solution('bc') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('ac') == 'ac'\nassert solution('abc?') == 'ac'\nassert solution('aabcc') == 'a2b1c3'\nassert solution('aabcc') == 'a2b1c3'\n",
        "num_ids_2": 18,
        "num_ids_4": 46
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"????????\") == 2835\nassert solution(\"a???c\") == 46\n\n\"\"\"\n\nfrom itertools import product",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n    6\n    ac?b?c\n''') == '24'\n\nassert solution('''\n    7\n    ???????\n''') == '2835'\n\nassert solution('''\n    9\n    cccbbbaaa\n''') == '0'\n\nassert solution('''\n    5\n    a???c\n''') == '46'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '5'\nassert solution('5 4') == '18'\nassert solution('4 0') == '16'\nassert solution('3 4') == '7'\nassert solution('5 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 3 3\\n2 3 5\\n2 1 1') == '5'\nassert solution('4 0\\n1 3 3 7\\n2 3 5\\n2 1 1') == '16'\nassert solution('5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15') == '18'\n",
        "num_ids_2": 53,
        "num_ids_4": 91
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 2\n1 3 3\n2 3 5\n2 1 1'''\n) == '5'\n\nassert solution(\n'''4 0\n1 3 3 7\n2 3 5\n2 1 1'''\n) == '16'\n\nassert solution(\n'''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15'''\n) == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n2 3 5\\n2 1 1\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"\n\n\n\"\"\"",
        "num_ids_2": 53,
        "num_ids_4": 91
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '18'\n\n'''\n'''\n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2_special_offers.py \n(base) [root@edison_ubuntu]# python3 2",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 3') == '5'\nassert solution('2 3 5') == '14'\nassert solution('2 1 1') == '16'\nassert solution('4 0') == '14'\nassert solution('1 3 3 7') == '18'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n2 3 5\n2 1 1\n\n1 2 1\n1 3 10\n1 4 7\n1 5 15''') == '18'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n\n-----\n\n## Challenge\n\nAt the beginning of March 2018, in order to improve your travel across the world, the International Space Station is sending you to retrieve the latest Solar System image of this week's ISS launch!\n\nThe image has pixels in a grid, and each pixel is either black or white. In the grid, a black pixel means that a certain planet is currently visible (that is, that planet is at a distance less than $10^9$ light years away from the ISS).\n\nThe pixels are colored in the grid in rows and columns. The ISS is currently at location $x$ and $y$ (both positive integers less than $10^9$) and wants to reach the location $(x', y')$ (both positive integers less than $10^9$). In one step, the ISS can either move one row up, one row down, one column to the right or one column to the left.\n\nHow many different possible routes can the ISS take to get from the ISS to $(x', y')$?\n\nHint: the number of paths is exponential in the number of rows and columns of the grid. Try to use the fact that the number of paths of length $k$ is exponential in the number of rows, since you can only move up, down, left or right at any point in the grid.\n\nThink about how you can get the number of paths of length $k$ without exceeding the upper limit of $2^{31} - 1$.\n\n## Solution\n\nTo solve the problem above, we can have a dynamic programming algorithm that will allow us to iterate over all possible paths. At each point in time, we'll store the number of possible paths from that point to the goal. To get to the goal, we can either move up, down, left or right. At each point, we can get to the goal by either moving up, down, left or right, as well as moving diagonally.\n\nAt each point, we'll have to check the number of paths from that point to the goal. If the number of paths we've seen for this point is greater than or equal to the number of possible paths we'll have at that point, we'll set the number of possible paths for that point to the number of paths we've seen for that point. Otherwise, we'll set the number of possible paths for that point to the number of paths we've seen for that point + 1.\n\nWe can recursively compute the number of paths to the goal for each point as long as the number of paths seen for that point is less than the number of possible paths.\n\n### Algorithm\n\n1. Initialize the number of possible paths for each point to 0.\n\n2. Define a recursive helper function that computes the number of possible paths to the goal for each point, as long as the number of paths we've seen for that point is less than the number of possible paths at that point.\n\n3. Define a recursive helper function that takes two arguments: the row index and column index.\n\n4. If we're at the goal (i.e., the value at $x$, $y$ is 1), return 1.\n\n5. Otherwise, set the number of possible paths for the current point to the number of possible paths seen for that point + the number of possible paths we can get from the current point up, down, left, and right.\n\n6. Return the number of possible paths for the current point.\n\n7. We can get the total number of paths by recursively calling the helper function on all four neighbours of the current point.\n\n### Helper function\n\nThe helper function takes two arguments: the row index and column index.\n\n1. It returns the number of possible paths for the point at that location.\n\n2. It returns the number of possible paths for the point at that location.\n\n### Helper function\n\nThe helper function takes two arguments: the row index and column index.\n\n1. It returns the number of possible paths for the point at that location.\n\n2. It returns the number of possible paths for the point at that location.\n\n### Recursive helper function\n\nThe recursive helper function takes two arguments: the row index and column index.\n\n1. If we're at the goal (i.e., the value at $x$, $y$ is 1), return 1.\n\n2. Otherwise, we'll set the number of possible paths for the current point to the number of possible paths seen for that point + the number of possible paths we can get from the current point up, down, left, and right.\n\n3. Return the number of possible paths for the current point.\n\n### Recursive helper function\n\nThe recursive helper function takes two arguments: the row index and column index.\n\n1. If we're at the goal (i.e., the value at $x$, $y$ is 1), return 1.\n\n2. Otherwise, we'll set the number of possible paths for the current point to the number of possible paths seen for that point + the number of possible paths we can get from the current point up, down, left, and right.\n\n3. Return the number of possible paths for the current point.\n\n### Recursive helper function\n\nThe recursive helper function takes two arguments: the row index and column index.\n\n1. If we're at the goal (i.e., the value at $x$, $y$ is 1), return 1.\n\n2. Otherwise, we'll set the number of possible paths for the current point to the number of possible paths seen for that point + the number of possible paths we can get from the current point up, down, left, and right.\n\n3. Return the number of possible paths for the current point.\n\n### Helper function\n\nThe helper function takes two arguments: the row index and column index.\n\n1. It returns the number of possible paths for the point at that location.\n\n2. It returns the number of possible paths for the point at that location.\n\n### Recursive helper function\n\nThe recursive helper function takes two arguments: the row index and column index.\n\n1. If we're at the goal (i.e., the value at $x$, $y$ is 1), return 1.\n\n2. Otherwise, we'll set the number of possible paths for the current point to the number of possible paths seen for that point + the number of possible paths we can get from",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom math import ceil",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == str(solution(input()))\n\nassert solution(input()) == str(solution(input()))\n\"\"\"\n\nfrom math import ceil",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '14'\nassert solution(stdin) == '45'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"-1\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution(\n'''10 1 1\n0 9\n0 5\n''') == '45'\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution(\n'''10 1 1\n0 9\n9 6\n''') == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n",
        "num_ids_2": 58,
        "num_ids_4": 104
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"-1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n\n\n\"\"\"\n",
        "num_ids_2": 58,
        "num_ids_4": 81
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 1 1''') == '45'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '45'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 2 4''') == '14'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '-1'\nassert solution(\"10 1 1\") == '45'\nassert solution(\"10 1 1\") == '-1'\nassert solution(\"10 1 1\") == '-1'\nassert solution(\"10 1 1\") == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 6') == 'No'\nassert solution('1 1 2') == 'No'\nassert solution('1 3 4') == 'No'\nassert solution('2 1 2') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('4 6 6') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('2 1 1') == 'No'\nassert solution('1 2 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7 5\\n') == 'Yes'\nassert solution('3 3 2\\n') == 'Yes'\nassert solution('3 3 3\\n') == 'No'\nassert solution('3 3 3\\n') == 'No'\nassert solution('3 3 3\\n') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 7 7\") == \"No\"\nassert solution(\"9 1 1\") == \"Yes\"\nassert solution(\"1 2 2\") == \"No\"\nassert solution(\"2 2 2\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 5 5') == 'No'\nassert solution('3 4 3') == 'Yes'\nassert solution('2 2 2') == 'No'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('4 7 7') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('2 2 2') == 'No'\nassert solution('3 3 3') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"3 4 5\") == \"No\"\nassert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 6 6\") == \"No\"\nassert solution(\"5 5 5\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"5\\n20 20 20 20 20\\n2000 2000 2000 2000 2000\\n20 30 30 30 30 30\\n20 40 40 40 40 40\\n2000 2000 2000 2000 2000\") == \"3\\n\"\nprint(\"Tests passed successfully.\")\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1\\n2') == ''\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n",
        "num_ids_2": 17,
        "num_ids_4": 185
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''3\n12 5\n1000 2000\n10000 1''') == '2'\nassert solution('''10\n12 5\n1000 2000\n10000 1\n10 7\n8 6\n6 5\n4 4\n2 2\n1 1''') == '4'\nassert solution('''13\n12 5\n1000 2000\n10000 1\n10 7\n8 6\n6 5\n4 4\n2 2\n1 1''') == '5'\nassert solution('''15\n12 5\n1000 2000\n10000 1\n10 7\n8 6\n6 5\n4 4\n2 2\n1 1''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('1\\n1000\\n') == '0'\nassert solution('1\\n1000\\n2000\\n') == '0'\nassert solution('1\\n1000000\\n2000\\n') == '0'\nassert solution('1\\n1000000\\n1000000\\n') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n2') == '1'\nassert solution('1\\n1\\n2') == '0'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n4') == '2'\nassert solution('1\\n2\\n2') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"1\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n100 10\n500 2000''') == '1'\nassert solution('''2\n100 10\n2000 2000''') == '1'\nassert solution('''3\n100 10\n500 2000\n3000 3000''') == '2'\nassert solution('''4\n100 10\n500 2000\n3000 3000\n4000 4000''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12 5\\n1000 2000\\n') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('10\\n12 5\\n1000 2000\\n') == '1'\nassert solution('10\\n2 5\\n1000 2000\\n') == '1'\nassert solution('10\\n10\\n1000 2000\\n') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n\") == \"0\"\nassert solution(\"2\\n5\\n\") == \"1\"\nassert solution(\"2\\n12\\n\") == \"0\"\nassert solution(\"2\\n5\\n100 200 300 400 500\") == \"1\"\nassert solution(\"2\\n5\\n4 4 4 4 4 4\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 1\nassert solution('2 1') == 1\nassert solution('2 2') == 0\nassert solution('1 2 2') == 1\nassert solution('3 4') == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 4') == '2'\nassert solution('4 3') == '3'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"2 1\") == 1\nassert solution(\"3 0\") == 0\nassert solution(\"2 0\") == 0\nassert solution(\"3 3\") == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"10 7\") == \"5\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"100 9\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('5 6') == '1'\nassert solution('100 100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''4 3''') == '0'\nassert solution('''1 1''') == '2'\nassert solution('''1 1''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 10') == '6'\nassert solution('2 1') == '1'\nassert solution('4 10') == '6'\n\nprint(solution('2 1'))\nprint(solution('4 10'))\nprint(solution('2 1'))\nprint(solution('4 10'))\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ACACTACG\") == \"2\\n0\\n3\"\nassert solution(\"\") == \"\"\nassert solution(\"AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC\") == \"3\\n2\\n4\"\nassert solution(\"ACACTACG\") == \"2\\n0\\n3\"\n\n\"\"\"\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 96
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('ATCODER') == '2\\n0\\n3'\nassert solution('ACACTACGT') == '2\\n0\\n3'\nassert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('ATCODER') == '2\\n0\\n3'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('TCAACAAAC') == '0'\nassert solution('TCAACAAAC') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('TCGGTAGGT') == '0\\n3\\n8'\nassert solution('TAGT') == '0\\n1\\n2'\nassert solution('TAGTCATGTTCACAGCCTGGG') == '1\\n0\\n3\\n7\\n10'\nassert solution('TTTT') == '0\\n0\\n0'\n",
        "num_ids_2": 38,
        "num_ids_4": 87
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nAAAA\n0 0''') == '2\\n0\\n3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ACACTACG''') == '2'\nassert solution('''ACACTACG''') == '0'\nassert solution('''ACACTACG''') == '3'\nassert solution('''ACACTACG''') == '2'\nassert solution('''ACACTACG''') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n3 2\n1 8\n''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n4 9\n1 8\n''') == '''3\n0\n3'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '210'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correct solution found! It returns {solution(stdin)}\")\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '210'\nassert solution('10 10') == '410'\nassert solution('10 10 10 10 10') == '410'\nassert solution('5 4') == '60'\nassert solution('1000 1000') == '1200'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '210'\nassert solution('7 7') == '528'\nassert solution('7 9') == '638'\nassert solution('7 11') == '890'\nassert solution('7 7') == '528'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == \"210\"\nassert solution('5 3') == \"210\"\nassert solution('100 50 50 50 50') == \"0\"\nassert solution('10 5 10 10 10 10 10 10 10 10') == \"60\"\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 55
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\nassert solution('5 5\\n50 100 80 120 80\\n') == '110'\nassert solution('5 10\\n50 100 80 120 80\\n') == '110'\nassert solution('4 2\\n50 50\\n100 50\\n') == '60'\nassert solution('6 2\\n50 50 80 120 100 80 100\\n') == '80'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3') == '210'\n\"\"\"\nfrom sys import stdin\nfrom functools import lru_cache\n\n@lru_cache(None)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '6'\nassert solution('4 4') == '12'\nassert solution('5 5') == '25'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 2 2') == '6'\nassert solution('3 3 4') == '7'\nassert solution('10 10 10') == '26'\nassert solution('1 1 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1, 3, 4) == \"4\"\nassert solution(1, 2, 3) == \"2\"\nassert solution(10, 10, 10) == \"0\"\nassert solution(1, 2, 3) == \"2\"\nassert solution(10, 10, 10) == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 3 4') == '7'\nassert solution('2 1 4') == '3'\nassert solution('2 2 4') == '5'\nassert solution('2 1 4') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 3\") == \"7\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1 3 4') == 4\nassert solution('1 2 3') == 4\nassert solution('1 2 4') == 5\nassert solution('1 3 2') == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 4 1\") == \"5\"\nassert solution(\"1 4 3\") == \"6\"\nassert solution(\"4 4 5\") == \"13\"\nassert solution(\"4 4 5\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 1 7 1\") == \"5\"\nassert solution(\"8 7 4 3\") == \"5\"\nassert solution(\"100 50 1\") == \"100\"\nassert solution(\"2 1 9\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 4\\n1 3 4') == '0'\nassert solution('1 1 2') == '3'\nassert solution('1 2 3') == '0'\nassert solution('1 3 4\\n1 3 4') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 2') == '10'\nassert solution('3 0') == '0'\nassert solution('2 9') == '10'\nassert solution('9 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 4') == '10'\nassert solution('8 9') == '0'\nassert solution('8 3') == '0'\nassert solution('9 3') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 5\") == \"10\"\nassert solution(\"0 5\") == \"10\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"5 4\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 2') == '10'\nassert solution('10 9') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 3\") == 0\nassert solution(\"4 8\") == 10\nassert solution(\"3 6\") == 0\nassert solution(\"1 0\") == 0\nassert solution(\"8 9\") == 10\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 9\") == \"0\"\nassert solution(\"2 9\") == \"10\"\nassert solution(\"3 9\") == \"0\"\nassert solution(\"4 9\") == \"10\"\nassert solution(\"5 9\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 3') == '0'\nassert solution('1 2') == '10'\nassert solution('10 10') == '0'\nassert solution('10 9') == '10'\nassert solution('1 4') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 1') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3, 5) == 0\nassert solution(2, 5) == 10\nassert solution(7, 5) == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 18\") == \"1\"\nassert solution(\"20 9\") == \"1\"\nassert solution(\"1000000 9999999\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 4\") == \"1\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"7 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10000000 1000000000\") == \"1\"\nassert solution(\"1000 10\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4') == '1'\nassert solution('0 0') == '0'\nassert solution('10000000000 0') == '0'\nassert solution('100000000000 0') == '0'\nassert solution('0 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 4') == '1'\nassert solution('101000 100001') == '10001'\nassert solution('0 9') == '1'\nassert solution('14 7') == '13'\nassert solution('4 6') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 4''') == '1'\nassert solution('''1 3''') == '2'\nassert solution('''1 5''') == '6'\nassert solution('''100000 100000''') == '0'\nassert solution('''999999 9999999''') == '999998'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n\nfrom __future__ import print_function\n\nK, N = map(int, raw_input().split())\n\nfor i in range(1, N+1):\n    N = abs(N - K)\nprint(N)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 8') == 'bust'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('4 5 6') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(5,7,9) == 'win'\nassert solution(3,4,5) == 'bust'\nassert solution(9,9,9) == 'bust'\nassert solution(7,7,7) == 'bust'\nassert solution(10,10,10) == 'bust'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'win'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == 'win'\nassert solution('5 7 9') == 'bust'\nassert solution('5 7 8') == 'win'\nassert solution('4 1 5') == 'bust'\nassert solution('4 1 2') == 'win'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"bust\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 7 9''') == 'win'\nassert solution('''5 7 8''') == 'bust'\nassert solution('''9 8 7''') == 'bust'\nassert solution('''5 4 3''') == 'bust'\nassert solution('''3 2 1''') == 'bust'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"2 4 5\") == \"bust\"\nassert solution(\"1 1 1\") == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\nassert solution('5 9 5') == 'win'\nassert solution('-1 1 2') == 'bust'\nassert solution('5 -1 2') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 10') == 'bust'\nassert solution('1 2 3') == 'win'\nassert solution('1 2 5') == 'win'\nassert solution('2 1 3') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'win'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0) == 0\nassert solution(3) == 6\nassert solution(9) == 36\nassert solution(9) == 36\nassert solution(15) == 60\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"12\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == \"6\"\nassert solution('''2''') == \"2\"\nassert solution('''3''') == \"6\"\nassert solution('''4''') == \"4\"\nassert solution('''5''') == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('6') == '6'\nassert solution('2') == '2'\nassert solution('4') == '8'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '1'\nassert solution('10') == '25'\nassert solution('4') == '4'\nassert solution('8') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3) == 6\nassert solution(9) == 36\nassert solution(2) == 2\nassert solution(1) == 1\nassert solution(5) == 30\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n\nfrom collections import deque\n\nN, D = map(int, stdin.split())\n\nque = deque()\n\nfor i in range(1, N + 1):\n    que.append(i)\n\nwhile len(que) > 1:\n    for _ in range(D):\n        que.append(que.popleft())\n    que.popleft()\n\nprint(len(que))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == 2\nassert solution(\"1 2\") == 1\nassert solution(\"10 2\") == 3\nassert solution(\"10 4\") == 3\nassert solution(\"100 200\") == 1\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2') == '2'\n\nassert solution('3 2') == '1'\n\nassert solution('3 3') == '2'\n\nassert solution('6 4') == '3'\n\nassert solution('5 5') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('6 2') == '2'\nassert solution('9 3') == '3'\nassert solution('2 2') == '1'\nassert solution('12 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2'\n\n-----My Solution-----\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 2') == '3'\nassert solution('1 1') == '1'\nassert solution('6 2') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2') == '2'\nassert solution('3 1') == '1'\nassert solution('10 10') == '1'\nassert solution('7 1') == '1'\nassert solution('10 9') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"8 4\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'pon'\nassert solution('1') == 'hon'\nassert solution('2') == 'pon'\nassert solution('3') == 'bon'\nassert solution('4') == 'hon'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"14\") == \"hon\"\nassert solution(\"13\") == \"bon\"\nassert solution(\"12\") == \"hon\"\nassert solution(\"101\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"100\") == \"hon\"\nassert solution(\"21\") == \"hon\"\nassert solution(\"32\") == \"bon\"\nassert solution(\"44\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('15') == 'bon'\nassert solution('32') == 'bon'\nassert solution('64') == 'hon'\nassert solution('99') == 'hon'\nassert solution('101') == 'hon'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('16') == 'pon'\nassert solution('123') == 'bon'\nassert solution('987') == 'hon'\nassert solution('4321') == 'pon'\nassert solution('863') == 'hon'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9') == 'pon'\nassert solution('37') == 'pon'\nassert solution('999') == 'hon'\nassert solution('9999') == 'hon'\nassert solution('123456789') == 'hon'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"27\") == \"hon\"\nassert solution(\"45\") == \"hon\"\nassert solution(\"108\") == \"hon\"\nassert solution(\"1786\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == 'hon'\nassert solution('5') == 'pon'\nassert solution('0') == 'bon'\nassert solution('13') == 'pon'\nassert solution('1') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"16\"\n) == \"pon\"\nassert solution(\n    \"125\"\n) == \"hon\"\nassert solution(\n    \"120\"\n) == \"hon\"\nassert solution(\n    \"6\"\n) == \"pon\"\nassert solution(\n    \"1000\"\n) == \"hon\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 1 2 2') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == 11\nassert solution('3\\n3 1 2') == 11\nassert solution('2\\n1') == 0\nassert solution('2\\n2') == 0\nassert solution('2\\n2 2') == 0\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n') == '11'\nassert solution('5\\n1 2 3 4 5\\n') == '22'\nassert solution('6\\n1 1 1 1 1 1\\n') == '22'\nassert solution('7\\n1 1 1 1 1 1 1\\n') == '22'\nassert solution('8\\n1 1 1 1 1 1 1 1\\n') == '22'\n",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(11)\n\"\"\"\n\n\"\"\"\nfrom math import factorial as f\nfrom math import prod as p\n\nn = int(input())\nd = list(map(int, input().split()))\n\ns = sum(map(lambda x: x*x*(x-1)/2, d))\ns += sum(map(lambda x: x*(x-1)/2*(n-1), d))\nprint(int(s))\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n3 2 1') == '11'\nassert solution('3\\n3 1 2') == '11'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2') == '11'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 1') == '0'\nassert solution('3\\n1 1 2') == '11'\nassert solution('2\\n1 1') == '0'\nassert solution('3\\n2 1 2') == '6'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2\\n') == 11\nassert solution('3\\n3 1 2\\n') == 11\nassert solution('3\\n3 1 2\\n') == 11\nassert solution('3\\n3 1 2\\n') == 11\nassert solution('3\\n3 1 2\\n') == 11\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(solution(stdin)) # Ignore formatting\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\nassert solution('''3\n1\n4\n2''') == '4'\nassert solution('''7\n6\n5\n1\n4\n3\n2\n1''') == '7'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10'\nassert solution('''100\n20\n10\n5\n4\n3\n2\n1''') == '20'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\n\n\"\"\"\n\n\"\"\"\n\nThis solution is based on the two pointer method. For each integer i, we find the maximum value among the elements\nother than i, which is at most the length of the sequence - 1.\n\nTime Complexity: O(N)\nSpace Complexity: O(1)\n\n\"\"\"\n\nN = int(stdin.readline())\nA = [int(stdin.readline()) for _ in range(N)]",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n3\\n') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3\\n') == '4\\n3\\n4'\nassert solution('3\\n1\\n4\\n3\\n') == '4\\n3\\n4'\n",
        "num_ids_2": 51,
        "num_ids_4": 78
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n2\\n2\\n2') == '2\\n2\\n2\\n2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '2\\n2\\n2\\n2'\nassert solution('2\\n3\\n2\\n2') == '2\\n2\\n2\\n2'\nassert solution('2\\n3\\n2\\n3') == '2\\n2\\n2\\n3'\n",
        "num_ids_2": 50,
        "num_ids_4": 112
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n4\n3''') == '4 3 4'\nassert solution('''3\n1\n2\n3''') == '1 2 3'\nassert solution('''3\n1\n3\n2''') == '1 3 2'\nassert solution('''5\n1\n3\n2\n4\n5''') == '3 4 4 5'\nassert solution('''5\n4\n1\n3\n2\n4''') == '1 3 2 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3''') == '4'\nassert solution('''4\n1\n2\n3\n4''') == '4'\nassert solution('''2\n1\n1\n1''') == '1'\nassert solution('''1\n1\n1\n2\n1''') == '2'\nassert solution('''1\n1\n2\n2\n2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\n4\n3\n'''\n) == '4'\n\nassert solution(\n'''\n3\n1\n4\n3\n'''\n) == '4'\n\nassert solution(\n'''\n5\n1\n4\n3\n2\n5\n'''\n) == '4'\n\nassert solution(\n'''\n2000000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n'''\n) == '300'\n\nassert solution(\n'''\n10000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n'''\n) == '300'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n4\n3\n''') == '4\\n3\\n4'\nassert solution('''\n3\n1\n4\n2\n''') == '4\\n2\\n4'\nassert solution('''\n4\n1\n2\n3\n4\n''') == '4\\n2\\n3\\n4'\nassert solution('''\n1\n2\n3\n4\n''') == '1\\n2\\n3\\n4'\nassert solution('''\n4\n2\n3\n4\n1\n''') == '3\\n2\\n4\\n3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n2\\n3\\n') == '3'\nassert solution('5\\n1\\n4\\n3\\n2\\n5') == '5'\n",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 4') == '11'\nassert solution('6 3') == '9'\nassert solution('5 15') == '21'\nassert solution('10 15') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 4') == '9'\nassert solution('5 4') == '9'\nassert solution('5 2') == '5'\nassert solution('3 5') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 5\") == \"7\"\nassert solution(\"5 10\") == \"16\"\nassert solution(\"5 10\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '9'\nassert solution('3 1') == '4'\nassert solution('4 7') == '7'\nassert solution('3 1') == '4'\nassert solution('7 8') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('5 20') == '25'\nassert solution('10 2') == '20'\nassert solution('10 10') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 5') == '16'\nassert solution('3 1') == '2'\nassert solution('7 2') == '9'\nassert solution('7 7') == '49'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3') == '9'\nassert solution('6 2') == '8'\nassert solution('5 3') == '9'\nassert solution('10 10') == '50'\nassert solution('5 9') == '18'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('10 10') == '20'\nassert solution('2 3') == '5'\nassert solution('1 100') == '101'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n''') == '6'\nassert solution('''3 4\n''') == '9'\nassert solution('''6 8\n''') == '18'\nassert solution('''5 7\n''') == '34'\nassert solution('''2 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 3'''\n) == '40'\n\nassert solution(\n'''6 5'''\n) == '73'\n\nassert solution(\n'''6 5'''\n) == '74'\n\nassert solution(\n'''30 10'''\n) == '40'\n\nassert solution(\n'''20 5'''\n) == '37'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5 3\n-30 -10 10 20 50\"\"\"\n) == \"40\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-30 -10 10 20 50\\n''') == '40'\nassert solution('-30 -10 10 20 50\\n') == '40'\nassert solution('-30 -10 10 20 50\\n') == '40'\nassert solution('-30 -10 10 20 50\\n') == '40'\nassert solution('-30 -10 10 20 50\\n') == '40'\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 2\\n-1 -2 -2') == '8'\nassert solution('2 3\\n1 2\\n2 3') == '2'\nassert solution('4 2\\n1 1\\n1 1\\n2 2') == '4'\nassert solution('10 6\\n1 1\\n2 1\\n2 1\\n3 1\\n2 1\\n2 1') == '3'\nassert solution('10 7\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n3 1\\n2 1\\n2 1') == '4'\n",
        "num_ids_2": 43,
        "num_ids_4": 101
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 1\"\nassert solution(\"1 3\") == \"1 2\"\nassert solution(\"2 10\") == \"1 1\"\nassert solution(\"9 3\") == \"5 6\"\nassert solution(\"5 3\") == \"1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == 2\nassert solution(\"2 4\") == 2\nassert solution(\"2 2\") == 0\nassert solution(\"4 4\") == 0\nassert solution(\"7 10\") == 13\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 10') == '0'\nassert solution('3 2') == '1'\nassert solution('1 100') == '99'\nassert solution('10 100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 2') == '0'\nassert solution('1 2 1') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 13') == '2'\nassert solution('12 14') == '4'\nassert solution('25 30') == '1'\nassert solution('200 300') == '0'\nassert solution('300 303') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 13''') == '2'\n'''\n1+2+3+...+999 = 8\n(1+2+3+...+999-1) = 8\n(1+2+3+...+999-2) = 8\n(1+2+3+...+999-3) = 8\n(1+2+3+...+999-4) = 8\n(1+2+3+...+999-5) = 8\n(1+2+3+...+999-6) = 8\n(1+2+3+...+999-7) = 8\n(1+2+3+...+999-8) = 8\n(1+2+3+...+999-9) = 8\n\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 1 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 2 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 3 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 4 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 5 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 6 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 7 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 8 = 0\n((1+2+3+...+999-8) - (1+2+3+...+999-9)) - 9 = 0\n\n(1+2+3+...+999-9) - (1+2+3+...+999-9) - 9 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 8 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 7 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 6 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 5 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 4 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 3 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 2 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 1 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - 0 = 0\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -1 = 9\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -2 = 8\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -3 = 7\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -4 = 6\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -5 = 5\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -6 = 4\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -7 = 3\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -8 = 2\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -9 = 1\n(1+2+3+...+999-9) - (1+2+3+...+999-8) - -10 = 0\n\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -9 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -8 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -7 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -6 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -5 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -4 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -3 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -2 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - -1 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 0 = 0\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 1 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 2 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 3 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 4 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 5 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 6 = 999\n(1+2+3+...+999-8) - (1+2+3+...+999-8) - 7 = 999\n(1+2+3+...+999-8) - (1+2+3+",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('1 1 2 3') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 13') == '2'\nassert solution('11 13') == '3'\nassert solution('12 13') == '3'\nassert solution('5 13') == '0'\nassert solution('101 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 13\n''') == '2'\nassert solution('''8 12\n''') == '4'\nassert solution('''8 16\n''') == '0'\nassert solution('''8 12\n''') == '4'\nassert solution('''7 7\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 12') == '0'\nassert solution('8 11') == '0'\nassert solution('8 10') == '1'\nassert solution('8 9') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"50 1\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 4\n''') == '3'\nassert solution('''10 4\n''') == '3'\nassert solution('''100 10\n''') == '1'\nassert solution('''1 100\n''') == '0'\nassert solution('''1000 100\n''') == '999'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip().split()[0]\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nassert solution('100 5') == '3'\nassert solution('100 17') == '9'\nassert solution('100 22') == '9'\nassert solution('1000 1000') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n\nH, A = map(int, stdin.split())\n\nans = 0\nwhile H > 0:\n    ans += 1\n    H -= A\n    if H <= 0:\n        break\n\nprint(ans)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 1') == '3'\nassert solution('1 1') == '0'\nassert solution('10 1') == '3'\nassert solution('1 10') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"100 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4') == '3'\nassert solution('10 4') == '3'\nassert solution('15 4') == '3'\nassert solution('30 10') == '3'\nassert solution('13 6') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4') == '3'\nassert solution('8 5') == '2'\nassert solution('10 5') == '1'\nassert solution('100 5') == '0'\nassert solution('10 6') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'\nassert solution('2 1 1 2') == '2'\nassert solution('2 1 1 2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer, \"Testing\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 80 100 0') == '50'\nassert solution('0 80 100 0') == '50'\nassert solution('0 90 100 0') == '50'\nassert solution('0 90 100 0') == '50'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"50\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 45 59 99\") == \"99\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"99 99 99 99\") == \"0\"\nassert solution(\"10 10 10 10\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\"\n\"\"\"\n\n\"\"\"\nsolution:\n- A: 0 B: 75 C: 25 D: 100\n- A: 0 B: 25 C: 75 D: 100\n- A: 0 B: 0 C: 25 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n\n- A: 25 B: 0 C: 25 D: 75\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 25 B: 0 C: 75 D: 100\n- A: 25 B: 25 C: 75 D: 100\n- A: 25 B: 0 C: 25 D: 75\n- A: 0 B: 0 C: 25 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C: 50 D: 75\n- A: 0 B: 25 C: 25 D: 75\n- A: 0 B: 50 C: 25 D: 75\n- A: 0 B: 0 C:",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 75 25 100''') == '50'\n'''\n\nfrom sys import stdin\n\nA, B, C, D = map(int, stdin.readline().split())\n\nseconds = max(A, B) + max(C - D, 0)\n\nprint(seconds)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == \"1\"\nassert solution('11') == \"0\"\nassert solution('109') == \"1\"\nassert solution('220') == \"1\"\nassert solution('319') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == '1'\nassert solution('15') == '2'\nassert solution('21') == '4'\nassert solution('30') == '8'\nassert solution('100') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''105''') == 1\nassert solution('''1''') == 0\nassert solution('''12345''') == 1\nassert solution('''149837''') == 1\nassert solution('''2147483647''') == 0\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('105') == '1'\nprint('Test 1 passed:'+ str(solution('105')))\n\nassert solution('180') == '0'\nprint('Test 2 passed:'+ str(solution('180')))\n\nassert solution('4999999') == '2'\nprint('Test 3 passed:'+ str(solution('4999999')))\n\nassert solution('8') == '0'\nprint('Test 4 passed:'+ str(solution('8')))\n\nassert solution('9') == '1'\nprint('Test 5 passed:'+ str(solution('9')))",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n105\n''') == '1'\nassert solution('''\n15\n''') == '0'\nassert solution('''\n30\n''') == '1'\nassert solution('''\n31\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('105\\n') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''105''') == '1'\nassert solution('''1''') == '0'\nassert solution('''200''') == '8'\nassert solution('''1001''') == '24'\nassert solution('''1001001''') == '128'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''105''') == 1\nassert solution('''103''') == 0\nassert solution('''102''') == 0\nassert solution('''1000''') == 0\nassert solution('''1999''') == 0\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\nprint('Test 0 passed')\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3') == '1'\nassert solution('3 2') == '0'\nassert solution('10 10') == '0'\nassert solution('1 100') == '100'\nassert solution('5 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"10 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == 1\nassert solution(\"7 3\") == 1\nassert solution(\"10 2\") == 0\nassert solution(\"10 3\") == 1\nassert solution(\"7 3\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3') == '1'\nassert solution('7 2') == '1'\nassert solution('7 3') == '0'\nassert solution('7 1') == '1'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3\\n7 7\") == \"1\"\nassert solution(\"15 2\\n15 2\") == \"1\"\nassert solution(\"8 3\\n4 6\\n6 3\\n4 5\") == \"3\"\nassert solution(\"8 3\\n4 6\\n6 3\\n4 5\") == \"3\"\nassert solution(\"20 4\\n16 5\\n21 4\\n16 5\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 76
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('5 4') == '1'\nassert solution('5 5') == '0'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 10\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''111''') == '111'\nassert solution('''234''') == '234'\nassert solution('''23434343434''') == '23434343434'\nassert solution('''234234234234''') == '234234234234'\nassert solution('''123123123123''') == '123123123123'\n",
        "num_ids_2": 26,
        "num_ids_4": 66
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11111') == '11111'\nassert solution('2100') == '2100'\nassert solution('2101') == '2101'\nassert solution('21102') == '21102'\nassert solution('21103') == '21103'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('10') == '1'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '11'\nassert solution('4') == '100'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"111\"\nassert solution(\"12\") == \"12\"\nassert solution(\"123\") == \"123\"\nassert solution(\"1234\") == \"1234\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"111\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('111') == '111'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('12345') == '12345'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution('''111\n''')) == '111'\n\nassert solution(solution('''123\n''')) == '123'\n\nassert solution(solution('''1234\n''')) == '1234'\n\nassert solution(solution('''12345\n''')) == '1234'\n\nassert solution(solution('''123456\n''')) == '1234'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '111'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"3 1 4\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 1 1\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('10 -3 2') == '1'\nassert solution('2 -1 -5') == '-6'\nassert solution('1 0 0') == '0'\nassert solution('-1 -2 -5') == '-6'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 3 3') == '6'\nassert solution('1 1 1') == '1'\nassert solution('1 3 5') == '7'\nassert solution('1 4 2') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"2 1 3\") == \"4\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"3 1 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 9 3\") == \"4\"\nassert solution(\"9 1 9\") == \"3\"\nassert solution(\"2 3 4\") == \"6\"\nassert solution(\"2 4 7\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 2 1') == '1'\nassert solution('10 9 8') == '4'\nassert solution('15 17 19') == '7'\nassert solution('15 17 19') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 3 4') == '3'\nassert solution('1 4 2') == '4'\nassert solution('1 4 3') == '4'\nassert solution('1 3 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 3 1') == '3'\nassert solution('1 2 4') == '4'\nassert solution('1 2 3') == '5'\nassert solution('1 2 3 4') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 4 3\") == \"5\"\nassert solution(\"3 4 4\") == \"6\"\nassert solution(\"9 10 2\") == \"12\"\nassert solution(\"-2 2 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\") == 5\nassert solution(\"9\") == 6\nassert solution(\"10\") == 7\nassert solution(\"11\") == 8\nassert solution(\"12\") == 9\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == '5'\nassert solution('8\\n') == '5'\nassert solution('8\\n2') == '5'\nassert solution('8\\n3') == '5'\nassert solution('8\\n4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('8\\n') == '5'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('4\\n') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('8') == '5'\nassert solution('9') == '6'\nassert solution('10') == '7'\nassert solution('11') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('8 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1",
        "num_ids_2": 1734,
        "num_ids_4": 1734
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8''') == '5'\nassert solution('''4''') == '5'\nassert solution('''9''') == '10'\nassert solution('''2''') == '3'\nassert solution('''1''') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8''') == '5'\nassert solution('''4''') == '2'\nassert solution('''3''') == '1'\nassert solution('''10''') == '5'\nassert solution('''100''') == '25'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"10 9 10 10\"\n) == \"No\"\nassert solution(\n    \"10 9 10 10\"\n) == \"Yes\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == 'No'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A 10 B 10 C 10 D 10') == 'No'\nassert solution('A 10 B 9 C 10 D 10') == 'Yes'\nassert solution('A 10 B 10 C 10 D 10') == 'No'\nassert solution('A 9 B 9 C 9 D 9') == 'Yes'\nassert solution('A 10 B 10 C 9 D 10') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('9 9 10 10') == 'Yes'\nassert solution('9 9 9 9 9') == 'No'\nassert solution('9 9 9 9') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"100 9 9 100\") == \"Yes\"\nassert solution(\"1 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"No\"\n\n'''\n\n'''\na, b, c, d = [int(x) for x in stdin.split(' ')]\nprint('Yes' if (a-c)<0 else 'No')\n'''\n\n'''\na, b, c, d = [int(x) for x in stdin.split(' ')]\nprint('Yes' if ((c-b)+(d-a))<0 else 'No')\n'''\n\n'''\na, b, c, d = [int(x) for x in stdin.split(' ')]\nprint('Yes' if (a-c)<0 else 'No')\n'''\n\n'''\na, b, c, d = [int(x) for x in stdin.split(' ')]\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"No\"\n\"\"\"\n\n\"\"\"\n[Analysis]\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 9 10 10') == 'Yes'\nassert solution('10 9 10 1') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('10 10 10 10') == 'No'\nassert solution('1 2 3 4 10') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n3\\n') == '0'\nassert solution('1\\n1\\n5\\n3') == '2'\nassert solution('1\\n1\\n5\\n3\\n7') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom functools import lru_cache",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\"\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4\\n9 3 5') == '10'\nassert solution('3\\n10 2 5\\n6 3 4\\n9 3 5\\n2 3 4') == '10'\nassert solution('1\\n5\\n7') == '5'\nassert solution('2\\n1 3\\n5\\n6') == '2'\n",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n1 1\\n2 2') == '0'\nassert solution('3\\n5 5 4\\n2 3 4') == '8'\nassert solution('2\\n1 5\\n1 3') == '3'\nassert solution('2\\n1 5\\n1 3') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\nassert solution(\"\"\"7\n10 2 5\n6 3 4\n\"\"\") == \"14\"\n\"\"\"\n\nfrom sys import stdin\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n7\\n2') == '2'\nassert solution('1\\n2\\n3') == '0'\nassert solution('2\\n7\\n2') == '2'\nassert solution('2\\n3\\n2') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[0]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 4\") == \"\"\nassert solution(\"4 3\") == \"\"\nassert solution(\"1 1\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample0) == \"###\"\nassert solution(sample1) == \"..#\"\nassert solution(sample2) == \"###\"\nassert solution(sample3) == \"..#\"\nassert solution(sample4) == \"..#\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.replace(\"\\n\", \"\")\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''\n4 4\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''7 9\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H4\\n#.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\nassert solution('H3\\n##.#\\n.#.#\\n') == '###\\n###\\n###\\n'\nassert solution('H1\\n#.#\\n') == '##'\nassert solution('H0\\n#.#\\n#.#\\n') == ''\nassert solution('H0\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n",
        "num_ids_2": 66,
        "num_ids_4": 102
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n####\n###\n##.\n##\n''') == '####'\nassert solution('''4 4\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"H 3\\n##.#\\n....\\n##.#\\n.#.#\\n#.#.\\n#.#.\\n\") == \".##\\n##.\\n#.#\\n\"\nassert solution(\"H 4\\n##.#\\n....\\n##.#\\n.#.#\\n#.#.\\n#.#.\\n#.#.\") == \"###\\n###\\n.##\\n\"\nassert solution(\"H 5\\n##.#\\n....\\n##.#\\n.#.#\\n#.#.\\n#.#.\\n#.#.\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"H 6\\n##.#\\n....\\n##.#\\n.#.#\\n#.#.\\n#.#.\\n#.#.\\n#.#.\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 85,
        "num_ids_4": 186
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(''.join(stdin.splitlines())) == '###.##.##..#..#.##'\nassert solution('##.#.##.#') == '#####'\nassert solution('##.#.#') == '##.#.#'\nassert solution('...##.#') == '.....#'\nassert solution('...#.#') == '...#.#'\n",
        "num_ids_2": 43,
        "num_ids_4": 70
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\n\"\"\"\n\nfrom math import pi",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 6.28318530717958623200\nassert solution('1') == 6.28318530717958623200\nassert solution('1') == 6.28318530717958623200\nassert solution('1') == 6.28318530717958623200\nassert solution('1') == 6.28318530717958623200\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.28318530717958623200\"\nprint(solution(input()))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('1') == '6.28318530717958623200'\nassert solution('5') == '12.566370614359172'\nassert solution('100') == '6283.1857.566370614359172'\nassert solution('0') == '6283.1857.566370614359172'\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[2:-1]\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6.28318530717958623200\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n') == None\nassert solution('1\\n2\\n3\\n') == None\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 42
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == 6.28318530717958623200\nassert solution(2) == 10\nassert solution(3) == 16.0\nassert solution(4) == 22.0\nassert solution(5) == 28.0\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == \"6.28318530717958623200\"\nassert solution('5') == \"28.274333882308138\"\nassert solution('10') == \"45.640279735295986\"\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"10.828386434326641857\"\nassert solution(\"5\") == \"31.415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\"\nassert solution(\"10\") == \"196.98151296148046875\"\nassert solution(\"100\") == \"3,818,117.24475098307861328\"\n",
        "num_ids_2": 38,
        "num_ids_4": 110
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'No'\nassert solution('aa') == 'No'\nassert solution('abc') == 'No'\nassert solution('aac') == 'Yes'\nassert solution('aacd') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAS\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"AAA\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSS') == 'No'\nassert solution('AASSS') == 'Yes'\nassert solution('ASAS') == 'Yes'\nassert solution('AAS') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AS') == \"Yes\"\nassert solution('ASASAS') == \"Yes\"\nassert solution('A') == \"No\"\nassert solution('AASA') == \"Yes\"\nassert solution('ASASAS') == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabb') == 'No'\nassert solution('aaBB') == 'Yes'\nassert solution('AaBB') == 'No'\nassert solution('aAABB') == 'No'\nassert solution('AABB') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASBBS') == 'No'\nassert solution('ASA') == 'Yes'\nassert solution('AS') == 'Yes'\nassert solution('ASS') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('TEST') == \"No\"\nassert solution('AAA') == \"Yes\"\nassert solution('AAB') == \"Yes\"\nassert solution('AAA') == \"No\"\nassert solution('AAABBB') == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('A') == 'No'\nassert solution('AS') == 'Yes'\nassert solution('ASS') == 'No'\nassert solution('ASSAASSS') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ASSE\") == \"No\"\nassert solution(\"AASSE\") == \"Yes\"\nassert solution(\"ASSSSEEE\") == \"No\"\nassert solution(\"ASSAASS\") == \"Yes\"\n\nprint(solution(\"ASSAASSEEE\"))\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('A') == 'No'\nassert solution('BBBB') == 'No'\nassert solution('AABB') == 'No'\nassert solution('AAAA') == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0 1') == ''\nassert solution('1 0') == ''\nassert solution('1 1') == '1'\nassert solution('1 -1') == '-1'\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 10') == '-10'\nassert solution('-1 -1') == '-2'\nassert solution('1 1') == '0'\nassert solution('0 0') == '0'\nassert solution('15 22') == '-13'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"-10\"\nassert solution(\"1 2\") == \"-10\"\nassert solution(\"10 2\") == \"-16\"\nassert solution(\"1 2\") == \"-10\"\nassert solution(\"1 2\") == \"-10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '-10'\nprint('test success')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"1 4\") == \"-1\"\nassert solution(\"7 19\") == \"-7\"\nassert solution(\"-8 12\") == \"-20\"\nassert solution(\"4 8\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"3 -10\") == \"-16\"\nassert solution(\"-10 -16\") == \"-39\"\nassert solution(\"-10 -10\") == \"-10\"\nprint(\"All cases passed!\")\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('13 3') == '-16'\nassert solution('-100 10') == '-16'\n\nprint('Test success!')",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4''') == '4'\nassert solution('''-1 0''') == '-1'\nassert solution('''-1 0''') == '-1'\nassert solution('''0 1''') == '0'\nassert solution('''0 0''') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('1 2') == '0'\nassert solution('12 -12') == '0'\nassert solution('12 -12 3') == '0'\nassert solution('12 -12 -12') == '-0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('5 3 4 4 5') == '2'\nassert solution('5 3 4 5') == '3'\nassert solution('5 3 4 5 6') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4\n6 5 6 8\n\"\"\"\n) == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '4'\nassert solution('2 3 4 5 6') == '1'\nassert solution('3 4 5 6 7') == '2'\nassert solution('4 5 6 7 8') == '3'\nassert solution('5 6 7 8 9') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5 6 8') == '3'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 2 2 3') == '2'\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 1722
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 4 2') == '0'\nassert solution('4\\n5 4 3 6') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('5\\n1 6 2 3 4') == '2'\nassert solution('6\\n1 2 3 4 5 6') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n5 4') == '2'\nassert solution('2\\n5 4\\n7 5') == '2'\nassert solution('2\\n5 4\\n7 8') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''10\n8 7 6 5 4 3 2 1''') == '10'\nassert solution('''4\n6 5 6 8''') == '3'\n'''\n\nfrom sys import stdin, stdout",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('5\\n1 1 2 3 4') == '0'\nassert solution('6\\n6 6 6 6 6') == '6'\nassert solution('7\\n1 2 3 4 5 6 7') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n'\n    '6 5 6 8'\n    ) == '3'\nassert solution(\n    '5\\n'\n    '4 2 3 1'\n    ) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5 6 8\\n\") == \"3\"\nassert solution(\"5\\n8 4 5 6 7\\n\") == \"2\"\nassert solution(\"5\\n6 5 6 8\\n\") == \"3\"\nassert solution(\"2\\n6\\n\") == \"1\"\nassert solution(\"1\\n6\\n\") == \"1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1\\n1'\nassert solution('2\\n1') == '2\\n1'\nassert solution('1\\n2') == '1\\n2'\nassert solution('2\\n2') == '2\\n2'\nassert solution('2\\n3') == '1\\n2\\n3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1\\n'\nassert solution('5\\n1 2 1 2 1\\n') == '1\\n5\\n'\nassert solution('5\\n1 1 1 1\\n') == '1\\n1 1 1 1\\n'\nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 1 2 3 4\\n') == '2\\n3 4'\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1'\nassert solution('5\\n1 2 1 2 1\\n') == '1\\n5'\nassert solution('5\\n1 2 1 2 1\\n') == '1\\n5'\nassert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4'\n",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '4'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2\\n1 1 1 1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"4\\n3 4\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n1 1 1 1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n1 1 1 1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 106
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('1\\n2') == '3'\nassert solution('1\\n2\\n3') == '4'\nassert solution('1\\n1\\n2\\n3') == '4'\nassert solution('1\\n1\\n1\\n2\\n3') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\\n\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\\n1 2 1\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 76
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '''2\n3 4 \n'''\n\nassert solution('''4\n1 1 1 1\n''') == '''4\n1 1 1 1 \n'''\n\nassert solution('''5\n1 2 1 2 1\n''') == '''1\n5 \n'''\n\nassert solution('''5\n1 2 1 2 1\n''') == '''3\n2 2 1\n'''\n\nassert solution('''6\n1 2 3 4 5 6\n''') == '''1\n6 \n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1\\n\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"1\\n5\\n\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"1\\n5\\n\"\nassert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 101
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 1 2 3 4\n1 1 1 1\n''') == '2\\n3 4'\nassert solution('''7\n1 2 3 1 2 3 4\n1 1 1 1\n''') == '2\\n3 4'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n21') == \"1\"\nassert solution('3\\n28') == \"1\"\nassert solution('3\\n999999999') == \"1\"\nassert solution('2\\n999999999') == \"2\"\nassert solution('3\\n999999984') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328\\n'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328\\n'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328\\n'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328\\n'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n6\\n7\\n21') == '1'\nassert solution('1\\n3\\n6\\n7\\n21\\n28') == '1'\nassert solution('1\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1'\nassert solution('1\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n') == '1'\nprint(solution(stdin))",
        "num_ids_2": 47,
        "num_ids_4": 121
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '2'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '7'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n6') == '2'\nassert solution('7\\n21') == '1'\nassert solution('28\\n999999999') == '7'\nassert solution('999999984\\n999999999') == '4'\n\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'2'\n\n>>> solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''')\n'1'\n\n>>> solution('''2\n3\n6\n7\n21\n28\n999999",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"21\") == \"7\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('')) == output('')\n\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1000000000 9') == '1'\nassert solution('5000001000 9') == '5'\nassert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''512 4''') == '50'\nassert solution('''1000000000 9''') == '1'\nassert solution('''10 4''') == '5'\nassert solution('''11 4''') == '5'\nassert solution('''12 4''') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('2 4') == '0'\nassert solution('12 4') == '0'\nassert solution('8 3') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n512 4\n\"\"\"\n) == \"50\"\nassert solution(\n\"\"\"\n1000000000 9\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1535391874 192\n\"\"\"\n) == \"250\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''512 4''') == '50'\nassert solution('''1000000000 9''') == '1'\nassert solution('''50 50''') == '0'\nassert solution('''1000 1000''') == '0'\nassert solution('''10000 1000000''') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n512 4\n'''\n) == '50'\n\nassert solution(\n'''\n1000000000 9\n'''\n) == '1'\n\nassert solution(\n'''\n12345678 9\n'''\n) == '1234567'\n\nassert solution(\n'''\n12345678 90\n'''\n) == '123456789'\n\nassert solution(\n'''\n1234567890 9\n'''\n) == '1234567891'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '50'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\n\"\"\"\n\n1000000000 9\n\n5\n\n50\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5'\nassert solution('''7\n3 7 5 1 5''') == '2'\nassert solution('''4\n3 1 4''') == '2'\nassert solution('''5\n5 1 4''') == '5'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4 3 5 1 2 2 1\n\n''') == '5'\nassert solution('''\n7\n3 7 5 1 5 2 2 1\n\n''') == '2'\nassert solution('''\n5\n3 7 5 1 5\n\n''') == '2'\nassert solution('''\n3\n5 1 4\n\n''') == '2'\nassert solution('''\n4\n3 2 1 4 2\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '''5\n2 1 1 2 3\n'''\nassert solution('''5\n3 7 5 1 5\n''') == '''2\n5 5 \n'''\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '''7\n1 2 2 2 2 3 2\n'''\nassert solution('''10\n6 8 9 4 2 8 4 1\n''') == '''4\n6 9 1 2 4 8\n'''\nassert solution('''10\n2 2 1 1 2 2 1\n''') == '''5\n5 2 1 1 1 2\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''7\n4 3 5 1 2 2 1'''\n) == '5', '7'\n\nassert solution(\n'''5\n3 7 5 1 5'''\n) == '2', '5'\n\nassert solution(\n'''3\n5 1 4'''\n) == '2', '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 1 4\") == \"7\\n5 5\"\nassert solution(\"5\\n7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n3 2 1\") == \"1\\n2 1 1\"\nassert solution(\"6\\n3 2 1 1 2 3\") == \"2\\n2 1 1 2 3 3\"\nassert solution(\"10\\n0 1 2 2 2 3 3 4 4 5 5 5 5\") == \"5\\n0 1 2 2 2 3 3 4 4 5 5\"\n",
        "num_ids_2": 39,
        "num_ids_4": 85
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '''5\n2 1 1 2 3'''\nassert solution('''5\n3 7 5 1 5''') == '''2\n5 5'''\nassert solution('''3\n5 1 4''') == '''2\n5 5'''\nassert solution('''7\n2 2 3 2 1 2 2''') == '''7\n1 2 2 2 2 3 2'''\nassert solution('''10\n3 9 8 7 6 5 4 3 2 1''') == '''5\n3 9 8 7 6 5 4 3 2'''\n\nprint('Test over')",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\n\n\"\"\"\nn, m = map(int, stdin.readline().split())\nmemo = {}\nfor _ in range(n):\n    a, b = map(int, stdin.readline().split())\n    memo[a] = b",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 21\") == \"2\"\nassert solution(\"4 21\") == \"2\"\nassert solution(\"4 21\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\n\nassert solution('''4 10\n3 1\n2 4\n1 5\n4 3\n5 6\n8 9\n7 2\n6 1\n5 5\n3 3\n''') == '4'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\nassert solution('''10 7\n9 6\n8 5\n7 4\n6 3\n5 2\n4 1\n''') == '2'\nassert solution('''10 7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '-1'\nassert solution('''10 7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 17\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\n",
        "num_ids_2": 59,
        "num_ids_4": 89
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\nassert solution('''7 5\n30 3\n2 5\n1 5\n9 7\n4 6\n6 7\n3 4\n5 7\n2 8\n1 9\n1 11\n9 12\n5 10\n7 11\n2 12\n1 13\n1 14\n9 15\n5 16\n7 17\n2 18\n1 19\n1 21\n9 22\n5 23\n7 24\n2 25\n1 26\n9 27\n5 28\n7 29\n2 30\n1 31\n1 33\n9 34\n5 35\n7 36\n2 37\n1 38\n1 40\n9 41\n5 42\n7 43\n2 44\n1 45\n1 47\n9 48\n5 49\n7 50\n2 51\n1 52\n1 54\n9 55\n5 56\n7 57\n2 58\n1 59\n1 61\n9 62\n5 63\n7 64\n2 65\n1 66\n1 68\n9 69\n5 70\n7 71\n2 72\n1 73\n1 75\n9 76\n5 77\n7 78\n2 79\n1 80\n1 82\n9 83\n5 84\n7 85\n2 86\n1 87\n1 89\n9 90\n5 91\n7 92\n2 93\n1 94\n1 96\n9 97\n5 98\n7 99\n2 100\n1 101\n1 103\n9 104\n5 105\n7 106\n2 107\n1 108\n1 110\n9 111\n5 112\n7 113\n2 114\n1 115\n1 117\n9 118\n5 119\n7 120\n2 121\n1 122\n1 124\n9 125\n5 126\n7 127\n2 128\n1 129\n1 131\n9 132\n5 133\n7 134\n2 135\n1 136\n1 138\n9 139\n5 140\n7 141\n2 142\n1 143\n1 145\n9 146\n5 147\n7 148\n2 149\n1 150\n1 152\n9 153\n5 154\n7 155\n2 156\n1 157\n1 159\n9 160\n5 161\n7 162\n2 163\n1 164\n1 166\n9 167\n5 168\n7 169\n2 170\n1 171\n1 173\n9 174\n5 175\n7 176\n2 177\n1 178\n1 180\n9 181\n5 182\n7 183\n2 184\n1 185\n1 187\n9 188\n5 189\n7 190\n2 191\n1 192\n1 194\n9 195\n5 196\n7 197\n2 198\n1 199\n1 201\n9 202\n5 203\n7 204\n2 205\n1 206\n1 208\n9 209\n5 210\n7 211\n2 212\n1 213\n1 215\n9 216\n5 217\n7 218\n2 219\n1 220\n1 222\n9 223\n5 224\n7 225\n2 226\n1 227\n1 229\n9 230\n5 231\n7 232\n2 233\n1 234\n1 236\n9 237\n5 238\n7 239\n2 240\n1 241\n1 243\n9 244\n5 245\n7 246\n2 247\n1 248\n1 250\n9 251\n5 252\n7 253\n2 254\n1 255\n1 257\n9 258\n5 259\n7 260\n2 261\n1 262\n1 264\n9 265\n5 266\n7 267\n2 268\n1 269\n1 271\n9 272\n5 273\n7 274\n2 275\n1 276\n1 278\n9 279\n5 280\n7 281\n2 282\n1 283\n1 285\n9 286\n5 287\n7 288\n2 289\n1 290\n1 292\n9 293\n5 294\n7 295\n2 296\n1 297\n1 299\n9 300\n5 301\n7 302\n2 303\n1 304\n1 306\n9 307\n5 308\n7 309\n2 310\n1 311\n1 313\n9 314\n5 315\n7 316\n2 317\n1 318\n1 320\n9 321\n5 322\n7 323\n2 324\n1 325\n1 327\n9 328\n5 329\n7 330\n2 331\n1 332\n1 334\n9 335\n5 336\n7 337\n2 338\n1 339\n1 341\n9 342\n5 343\n7 344\n2 345\n1 346\n1 348\n9 349\n5 350\n7 351\n2 352\n1 353\n1 355\n9 356\n5 357\n7 358\n2 359\n1 360\n1 362\n9 363\n5 364\n7 365\n2 366\n1 367\n1 369\n9 370\n5 371\n7 372\n2 373\n1 374\n1 376\n9 377\n5 378\n7 379\n2 380\n1 381\n1 383\n9 384\n5 385\n7 386\n2 387\n1 388\n1 390\n9 391\n5 392\n7 393\n2 394\n1 395\n1 397\n9 398\n5 399\n7 400\n2 401\n1 402\n1 404\n9 405\n5 406\n7 407\n2 408\n1 409\n1 411\n9 412\n5 413\n7 414\n2 415\n1 416\n1 418\n9 419\n5 420\n7 421\n2 422\n1 423\n1 425\n9 426\n5 427\n7 428\n2 429\n1 430\n1 432\n9 433\n5 434\n7 435\n2 436\n1 437\n1 439\n9 440\n5 441\n7 442\n2 443\n1 444\n1 446\n9 447\n5 448\n7 449\n2 450\n1 451\n1 453\n9 454\n5 455\n7 456\n2 457\n1 458\n1 460\n9 461\n5 462\n7 463\n2 465\n1 466\n1 468\n9 469\n5 470\n7 471\n2 472\n1 473\n1 475\n9 476\n5 477\n7 478\n2 479\n1 480\n1 482\n9",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\\n\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\\n\"\n\n\n\"\"\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"0\"\nassert solution(\"2 10\") == \"-1\"\nassert solution(\"1 100\") == \"0\"\nassert solution(\"2 100\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12345') == '12345'\nassert solution('123445') == '12345'\nassert solution('123456789') == '123456789'\nassert solution('12345678901') == '12345678901'\nassert solution('1234567890123456789012345678901234567890') == '1234567890123456789012345678901234567890'\n\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 59
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nfrom collections import Counter, defaultdict\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nT = int(input())\n\nfor _ in range(T):\n    N, A, B = map(int, input().split())\n    S = input()\n    for i in range(N - A + 1):\n        if S[i:i+A].count(S[i:i+A][0]) == B:\n            print(S[i:i+A])\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"asdf\") == \"\"\nassert solution(\"qwerty\") == \"qwerty\"\nassert solution(\"tulsqwerty\") == \"tulsqwerty\"\nassert solution(\"asdfghjkl\") == \"asdfghjkl\"\nassert solution(\"ghjkl\") == \"ghjkl\"\n",
        "num_ids_2": 23,
        "num_ids_4": 59
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte', '1'\n\n'''\n\nimport unittest\n\nclass TestCode(unittest.TestCase):\n    def test(self):\n        pass\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ab'\nassert solution('3') == 'abc'\nassert solution('4') == 'abcd'\nassert solution('5') == 'abcde'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 5 3''') == 'tleelte'\nassert solution('''6 1 1''') == 'qwerty'\nassert solution('''5 2 2''') == 'vvvvvv'\nassert solution('''8 7 4''') == 'abcde'\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\nassert solution('a') == 'a'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 'tet'\nassert solution('w') == 'w'\nassert solution('we') == 'we'\nassert solution('wec') == 'wec'\nassert solution('wecb') == 'wecb'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 9 6\") == \"12\"\nassert solution(\"20 9 9\") == \"4\"\nassert solution(\"100 9 9\") == \"49\"\nassert solution(\"1 9 9\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 8\") == \"16\"\nassert solution(\"2 10 3\") == \"24\"\nassert solution(\"2 1 3\") == \"6\"\nassert solution(\"200 5 1\") == \"200\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('10 24 6') == '22'\nassert solution('5 11 4') == '22'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10 2') == '14'\nassert solution('20 6 2') == '12'\nassert solution('1 100 1') == '100'\nassert solution('4 8 3') == '43'\nassert solution('2 5 4') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('1 10 1') == '9'\nassert solution('10 5 6') == '5'\nassert solution('10 5 6') == '5'\nassert solution('1 10 5') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0 0') == ''\nassert solution('1 0 0') == ''\nassert solution('0 1 0') == ''\nassert solution('1 1 0') == ''\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 5 10\") == \"20\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 5 2\") == \"8\"\nassert solution(\"10 5 4\") == \"12\"\nassert solution(\"10 10 5\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"1 10 1\") == \"9\"\nassert solution(\"100 1000 100000\") == \"1\"\nassert solution(\"2 2 2\") == \"5\"\nassert solution(\"1000000 1000 1000\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 10 2') == '18'\nassert solution('10 10 2') == '11'\nassert solution('50 100 1') == '0'\nassert solution('50 50 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('2 1 3') == '3'\nassert solution('4 2 5') == '8'\nassert solution('7 10 21') == '22'\nassert solution('6 7 17') == '33'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('1') == '1'\nassert solution('7') == '1'\nassert solution('9') == '3'\nassert solution('27') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8\n''') == '2'\nassert solution('''\n10\n''') == '3'\nassert solution('''\n2\n''') == '1'\nassert solution('''\n5\n''') == '2'\nassert solution('''\n100\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n') == '2'\nassert solution('1\\n') == '1'\nassert solution('3\\n') == '3'\nassert solution('5\\n') == '2'\nassert solution('6\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\nassert solution('1') == '1'\nassert solution('10') == '3'\nassert solution('11') == '4'\nassert solution('13') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"2\"\n\n\"\"\"\n\nn = int(input())\ngroups = 0\nwhile n > 0:\n    n -= 2\n    groups += 1\nprint(groups)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == '2'\nassert solution('3') == '1'\nassert solution('15') == '2'\nassert solution('2') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('3 2') == '2'\nassert solution('2 2') == '2'\nassert solution('10 5') == '5'\nassert solution('7 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 2') == '1'\nassert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 1') == '0'\nassert solution('2 3') == '2'\nassert solution('100 1') == '5'\nassert solution('100 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 1') == '3'\nassert solution('2 2') == '4'\nassert solution('5 4') == '3'\nassert solution('5 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 3') == '3'\nassert solution('3 1') == '3'\nassert solution('1 2') == '2'\nassert solution('4 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('3 1') == '2'\nassert solution('4 2') == '2'\nassert solution('2 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '3'\nassert solution('1 10') == '3'\nassert solution('5 4') == '2'\nassert solution('100 100') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 3''') == '3'\nassert solution('''1 0''') == '0'\nassert solution('''0 0''') == '0'\nassert solution('''2 2''') == '2'\nassert solution('''2 1''') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('10 10') == '5'\nassert solution('10 3') == '6'\nassert solution('0 0') == '0'\nassert solution('2 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\n\nprint(solution(\"1 3\"))\n\n'''\n\nA, P = [int(x) for x in stdin.split()]",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 12''') == '16'\nassert solution('''3 3''') == '0'\nassert solution('''10 11''') == '9'\nassert solution('''10 8''') == '-1'\nassert solution('''12 0''') == '12'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"5\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"12 15\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('5 10') == '5'\nassert solution('10 5') == '5'\nassert solution('20 10') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 2') == '-1'\nassert solution('3 4') == '3 4'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == output\n\nassert solution(input(\"1 1\")) == output\n\nassert solution(input(\"6 2\")) == output\n\nassert solution(input(\"3 1\")) == output\n\nassert solution(input(\"4 4\")) == output",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"12 15\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 7\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 11\") == \"5\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"10 10\") == \"15\"\nassert solution(\"14 8\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 1') == '-1'\nassert solution('1 10') == '9'\nassert solution('5 10') == '5'\nassert solution('10 11') == '-5'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('hoshizora') == 'No'\nassert solution('hoshizora') == 'No'\nassert solution('hoshizora') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudai') == 'No'\nassert solution('chokudai', 'chokudaiz1') == 'Yes'\nassert solution('chokudai', 'chokudai1') == 'No'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudai') == 'Yes'\n\nassert solution('chokudai') == 'No'\nassert solution('chokudai') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('', '') == 'Yes'\nassert solution('a', '') == 'Yes'\nassert solution('', 'a') == 'Yes'\nassert solution('', '') == 'No'\nassert solution('a', 'a') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\", \"chokudaiz\") == \"Yes\"\nassert solution(\"chokudai\", \"chokudai\") == \"No\"\nassert solution(\"chokudai\", \"chokudaz\") == \"Yes\"\nassert solution(\"chokudai\", \"chokudaz\") == \"No\"\nassert solution(\"chokudai\", \"chokudai\") == \"No\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:-1] + 'z'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcd') == 'No'\nassert solution('abce') == 'Yes'\nassert solution('abcdz') == 'Yes'\nassert solution('abcde') == 'No'\nassert solution('abcdzcde') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"0 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 16\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4') == '7'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('1 10') == '9'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 4') == 'IMPOSSIBLE'\nassert solution('2 10') == 'IMPOSSIBLE'\nassert solution('1 4') == 'IMPOSSIBLE'\nassert solution('10 10') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 2') == 'IMPOSSIBLE'\nassert solution('2 100') == 'IMPOSSIBLE'\nassert solution('1 100') == 'IMPOSSIBLE'\nassert solution('0 1000') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"9\"\nassert solution(\"2 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\") == \"IMPOSSIBLE\"\nassert solution(\"7 2\") == \"IMPOSSIBLE\"\nassert solution(\"10 1\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('3 4') == 'IMPOSSIBLE'\nassert solution('5 7') == '6'\nassert solution('8 10') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 8\") == \"9\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1177') == 'Yes'\nassert solution('257') == 'No'\nassert solution('984') == 'Yes'\nassert solution('111') == 'No'\nassert solution('123') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '117') == 'Yes'\nassert solution(\n    '115') == 'No'\nassert solution(\n    '734') == 'Yes'\nassert solution(\n    '27') == 'No'\nassert solution(\n    '2') == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('717') == 'Yes'\nassert solution('3245') == 'No'\nassert solution('123456789') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('12') == None\nassert solution('123') == None\nassert solution('7') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\nassert solution('121') == 'No'\nassert solution('976') == 'No'\nassert solution('987') == 'Yes'\nassert solution('100') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes'\nassert solution('4') == 'No'\nassert solution('107') == 'Yes'\nassert solution('777') == 'No'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('117') == 'Yes'\nassert solution('4') == 'No'\nassert solution('903') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('105') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'\nassert solution('117') == 'No'\nassert solution('257') == 'No'\nassert solution('717') == 'Yes'\nassert solution('007') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\nassert solution('717') == 'Yes'\nassert solution('818') == 'No'\nassert solution('718') == 'Yes'\nassert solution('718') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"10\"\n) == \"No\"\nassert solution(\n    \"2\"\n) == \"No\"\nassert solution(\n    \"15\"\n) == \"No\"\nassert solution(\n    \"123\"\n) == \"No\"\nassert solution(\n    \"1234\"\n) == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('12345678901') == 'No'\nprint(solution(input()))\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('13') == 'No'\nassert solution('102') == 'No'\nassert solution('133') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Yes\"\nassert solution(\"2\\n\") == \"No\"\nassert solution(\"2\\n\") == \"No\"\nassert solution(\"5\\n\") == \"No\"\nassert solution(\"12\\n\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == \"Yes\"\nassert solution('''5''') == \"No\"\nassert solution('''6''') == \"Yes\"\nassert solution('''12''') == \"Yes\"\nassert solution('''123''') == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 -1 -1 0') == '-1 1 -1 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''2 2 2 1''') == '-1 1 -1 0'\nassert solution('''1 1 1 2''') == '-1 1 -1 0'\nassert solution('''1 1 1 2''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0,0,0,1) == '-1 1 -1 0'\nassert solution(0,1,0,1) == '-1 1 -1 0'\nassert solution(0,0,0,1) == '-1 1 -1 0'\nassert solution(0,1,0,1) == '-1 1 -1 0'\nassert solution(0,0,0,1) == '-1 1 -1 0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0 1''') == '''-1 1 -1 0'''\n'''\nassert solution('''0 0 0 1''') == '''-1 1 -1 0'''\n'''\nassert solution('''0 0 0 1''') == '''-1 1 -1 0'''\nassert solution('''0 0 0 1''') == '''-1 1 -1 0'''\nassert solution('''1 1 0 1''') == '''1 0 1 -1'''\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\n'''\nassert solution('''0 0 0 2''') == '1 1 -1 0'\nassert solution('''0 0 0 3''') == '1 1 1 0'\nassert solution('''0 0 0 4''') == '1 1 1 1'\n",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\n'''\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-2 2 -1 0') == '-3 2 -3 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"blue red\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red red\") == \"0 0\"\nassert solution(\"red blue red\") == \"2 4\"\nassert solution(\"red blue red red\") == \"0 0\"\nassert solution(\"red blue red red red\") == \"0 0\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 4'\nassert solution('blue') == '2 4'\nassert solution('blue red') == '0 0'\nassert solution('blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue blue",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 2'\nassert solution('blue') == '0 0'\nassert solution('green') == '0 0'\nassert solution('purple') == '0 0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"ab\") == \"No\"\nassert solution(\"\") == \"No\"\n\n\"\"\"\n\n\"\"\"\n2nd solution, with constraints\nAC\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('aabcaa') == 'Yes'\nassert solution('aabcaa') == 'No'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabc') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abcabcabc\") == \"Yes\"\nassert solution(\"abcabcabcabc\") == \"No\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('aaaaaaaa') == 'Yes'\nassert solution('aaaaaaaaa') == 'Yes'\nassert solution('abcdef') == 'No'\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abca') == \"Yes\"\nassert solution('abcabc') == \"Yes\"\nassert solution('aabcabcabcabc') == \"Yes\"\nassert solution('abcabc') == \"No\"\nassert solution('abcc') == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'No'\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('acccba') == 'Yes'\nassert solution('abcabc') == 'No'\nassert solution('acccba') == 'No'\nassert solution('cbcab') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"aabbc\") == \"No\"\nassert solution(\"abccc\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabca') == 'No'\nassert solution('abcabc') == 'Yes'\nassert solution('aaaaaaaaaa') == 'No'\nassert solution('aaaaaaaaaaaaaaaaaa') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abca\") == \"Yes\"\nassert solution(\"abce\") == \"Yes\"\nassert solution(\"abcdef\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 10 3 4\") == \"15.000000 0\"\nassert solution(\"5 4 2 0\") == \"25.000000 1\"\nassert solution(\"6 4 2 1\") == \"50.000000 1\"\nassert solution(\"1 1 1 1\") == \"0.000000 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\nsolution 2: \n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 4 5\") == \"3.000000 0\"\nassert solution(\"2 2 4 6\") == \"9.000000 0\"\nassert solution(\"3 3 1 2\") == \"12.000000 1\"\nassert solution(\"4 4 1 1\") == \"4.000000 0\"\nassert solution(\"5 6 5 2\") == \"16.000000 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('3 3 1 2') == '3.000000 0'\nassert solution('3 4 1 2') == '3.000000 0'\nassert solution('3 4 1 2') == '3.000000 0'\nassert solution('3 4 1 2') == '3.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\nassert solution('10 3 1 2') == '0.000000 1'\nassert solution('5 5 4 2') == '3.00000000 0'\nassert solution('5 6 1 1') == '2.5000000 1'\nassert solution('1 1 0 1') == '0.5000000 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''2 2 2 3''') == '6.000000 0'\nassert solution('''100000000 1 1000000000 10''') == '0.000000 1'\n'''",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.000000 0\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('1 1 1 1') == '1.000000 1'\nassert solution('1 1 2 1') == '2.000000 0'\nassert solution('3 4 5 6') == '6.000000 0'\nassert solution('3 2 3 4') == '10.000000 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P') == 'Three'\nassert solution('P P P') == 'Four'\nassert solution('W P W P') == 'Four'\nassert solution('G') == 'Three'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P W G Y P') == 'Three'\nassert solution('P W G Y P G') == 'Five'\nassert solution('P W G Y P G G') == 'Eight'\nassert solution('P W G Y P G G G') == 'Nine'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"P W G Y P Y W\") == \"Four\"\nassert solution(\"P W G P Y W\") == \"Three\"\nassert solution(\"P W G Y P P W\") == \"Three\"\nassert solution(\"P P W G P P P\") == \"Three\"\nassert solution(\"P P W G Y P P P\") == \"Three\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Four'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"P W G Y P\") == \"Three\"\nassert solution(\"P W G Y\") == \"Three\"\nassert solution(\"P W G\") == \"Three\"\nassert solution(\"P W\") == \"Three\"\n",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6\nG W Y P Y W\n\"\"\") == \"Four\"\nassert solution(\n\"\"\"\n9\nY P G P P Y Y G\n\"\"\") == \"Three\"\nassert solution(\n\"\"\"\n14\nP P W P P P G G G P P Y P P Y Y Y P Y Y Y P P G\n\"\"\") == \"Four\"\nassert solution(\n\"\"\"\n80\nn    )",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('G W Y P Y W') == 'Four'\nassert solution('G W Y P G G') == 'Three'\n'''",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"G W Y P Y P\") == \"Three\"\nassert solution(\"G W Y P G P\") == \"Three\"\nassert solution(\"G W Y P G P P\") == \"Three\"\nassert solution(\"G W Y P P Y P\") == \"Three\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"pink P W G\") == \"Three\"\nassert solution(\"pink P W Y\") == \"Four\"\nassert solution(\"pink P W P\") == \"Three\"\nassert solution(\"pink P W W\") == \"Four\"\nassert solution(\"pink P W P P\") == \"Four\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('5 3') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2 2') == '3'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '4'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n1\\n2') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2''') == 6\nassert solution('''5 3 3\n1 2 4 2 3''') == 2\nassert solution('''5 5 6\n1 2 6 10 3''') == 2\nassert solution('''1 2 3 4 5 6\n1 2 3 4 5 6''') == 0\nassert solution('''7 5 1\n1 2 3 4 5 6 7''') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '7\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '''7'''\nassert solution('''4 8 2 6 2''') == '''0'''\nassert solution('''4 5 4 1 3''') == '''7'''\nassert solution('''4 5 4 1 3''') == '''0'''\nassert solution('''1 3 2 4''') == '''7'''\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''\n6\n10 30 30 30 30 30 30\n10 40 40 40 40 40 40\n10 30 30 30 30 30 30\n10 30 30 30 30 30 30\n10 40 40 40 40 40 40\n10 30 30 30 30 30 30\n''') == '1'\nassert solution('''\n7\n10 30 30 30 30 30 30 30\n10 40 40 40 40 40 40 40\n10 30 30 30 30 30 30 30\n10 30 30 30 30 30 30 30\n10 40 40 40 40 40 40 40\n10 30 30 30 30 30 30 30\n10 30 30 30 30 30 30 30\n''') == '0'\nassert solution('''\n8\n
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"4 8 2 6 2\") == \"7\"\nassert solution(\"4 5 4 1 3\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 2 4\\n4 5 4 1 3') == '7'\nassert solution('4\\n1 3 2 4\\n4 5 4 1 3') == '0'\nassert solution('3\\n1 1 1\\n2 2 2') == '0'\nassert solution('7\\n7 7 7 7 7 7 7 7\\n7 7 7 7 7 7 7 7') == '0'\nassert solution('1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1') == '1'\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3 2 4\\n1 3 2 4') == '0'\nassert solution('3\\n4 8 2 6 2\\n4 5 4 1 3\\n') == '7'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n4 8 2 6 2\n4 5 4 1 3\n\"\"\") == \"7\"\nassert solution(\"\"\"1\n3 2 4 5\n3 2 4 5\n\"\"\") == \"0\"\nassert solution(\"\"\"2\n1 3 2 4\n1 3 2 4\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n2 3 1 3\n3 3 4 4\n2 3 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n2 3 1 3\n3 3 4 4\n2 3 1 3\n3 3 4 4\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3 2 4') == '0'\nassert solution('1\\n3 2 4\\n1 3 2 4') == '7'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n1 2 4 5 10\n\"\"\") == \"1 1 3 5 9\"\nassert solution(\"\"\"10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\"\"\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\nassert solution(\"\"\"100\n3 100 40 300 40 300 40 400 40 400 400 400 400\n\"\"\") == \"40 40 40 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9\\n'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n'\n\n'''\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9\\n'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n'\n'''\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n",
        "num_ids_2": 1072,
        "num_ids_4": 1072
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''9\n1000 100000 1000 100 100 100 100 100 100 100 100 100 100 1\n''') == '1 1 3 5 9'\nassert solution('''4\n1 1 1 1\n''') == '1 1 1 1'\nassert solution('''1000\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"5 4\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\nassert solution(\"1 1\\n1 2\\n2 1\\n\") == \"1\"\nassert solution(\"5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n306 307\\n307 308\\n307 309\\n307 310\\n307 311\\n307 312\\n307 313",
        "num_ids_2": 102,
        "num_ids_4": 1373
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution(\n'''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n\nassert solution(\n'''5 3\n1 3\n2 3\n3 4\n4 2\n2 4\n''') == '2'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\"\"\"\nfrom collections import defaultdict, deque\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2') == '0'\nassert solution('3\\n2') == '0'\nassert solution('4\\n2') == '1'\nassert solution('5\\n2') == '2'\nassert solution('6\\n2') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1\\n'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2\\n'\n'''\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''14 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '1'\n'''\nimport unittest\nfrom unittest import TestCase",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"2\"\nassert solution(\"6 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"2\"\nassert solution(\"6 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"2\"\nassert solution(\"6 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"2\"\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('123') == ''\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 39
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5\\n2 4\\n3 4\\n5 4\\n4 3\\n5 4\\n5 3\\n5 2\\n5 1\\n1 2\\n2 3\\n2 4\\n1 3\\n3 4') == '1'\nassert solution('1 10\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n14 3\\n17 6\\n14 4\\n16 7\\n17 7\\n11 8\\n7 10\\n8 9\\n11 11\\n7 9\\n11 11\\n12 12\\n7 10\\n14 3\\n14 4') == '2'\n\"\"\"\n",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5'''\n    ) == '1'\n\nassert solution(\n'''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5'''\n    ) == '4'\n\nassert solution(\n'''3\n1 1 2\n2 3\n1 3\n'''\n    ) == '0'\n\nassert solution(\n'''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5'''\n    ) == '0'\n\nassert solution(\n'''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5'''\n    ) == '4'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 0 2\\n1 2\\n2 3\\n2 4\\n2 5') == '1'\nassert solution('0 0 0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5') == '4'\nassert solution('0 0 0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25') == '0'\nassert solution('0 0 0 0\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25') == '24'\nassert solution('0 0 0 0\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25') == '0'\n",
        "num_ids_2": 66,
        "num_ids_4": 312
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == \"1\"\n\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == \"4\"\n\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == \"0\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution(\n'''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution(\n'''5\n1 1 2\n2 3\n1 3\n''') == '4'\n\nassert solution(\n'''4\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution(\n'''3\n1 1 2\n2 3\n1 3\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('3') == '0'\nassert solution('10') == '0'\nassert solution('20') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\n\n\"\"\"\n\nimport sys\nsys.path.append('..')\nfrom java.util import HashSet\nfrom collections import defaultdict\nfrom common import TreeNode",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('5') == '4'\nassert solution('10') == '9'\nassert solution('15') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3') == '0'\nassert solution('1 2\\n2 3\\n1 3') == '1'\nassert solution('2 3\\n1 2\\n2 3') == '1'\nassert solution('2 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '4'\nassert solution('2 3\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('0 0 0 1 2') == '1'\nassert solution('1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 10\\n3 11\\n3 12\\n4 13\\n4 14\\n4 15\\n4 16\\n5 17\\n5 18\\n5 19') == '4'\nassert solution('1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '0'\nassert solution('2 2\\n2 3\\n1 3') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 134
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\n\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\n\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"bc\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a\\nb\\nc\\nd\\ne\\n') == 'c'\nassert solution('x\\ny\\n') == 'x'\nassert solution('b\\n') == 'b'\nassert solution('b\\nx\\ny\\n') == 'b'\nassert solution('f\\ng\\n') == 'g'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ab\", \"cd\") == \"b\"\nassert solution(\"ab\", \"bc\") == \"b\"\nassert solution(\"ab\", \"pqrs\") == \"p\"\nassert solution(\"ab\", \"rst\") == \"p\"\nassert solution(\"ab\", \"dscvf\") == \"a\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n\nprint('Testcases passed successfully')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\", \"\", \"\", \"\") == \"\"\nassert solution(\"az\", \"bf\", \"\", \"\") == \"bc\"\nassert solution(\"afogk\", \"asdji\", \"\", \"\") == \"alvuw\"\nassert solution(\"nijfvj\", \"tvqhwp\", \"\", \"\") == \"qoztvz\"\nassert solution(\"nijfvj\", \"tvqhwp\", \"\", \"\") == \"qoztvz\"\n",
        "num_ids_2": 30,
        "num_ids_4": 80
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"8 4\") == \"NO\"\nassert solution(\"8 8\") == \"YES\\n8\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n15 13 15 15 12''') == 'YES'\nassert solution('''5 3\n15 13 15 15 12''') == 'NO'\nassert solution('''2 1\n1 2 1''') == 'NO'\nassert solution('''5 4\n20 10 40 30''') == 'YES'\nassert solution('''5 4\n20 10 40 30''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 1 1 1 1') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 45
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n-----Solutions/Alternatives-----\n\n1. AC\n\n2. AC\n\n3. AC\n\n4. AC\n\n5. AC\n\n6. AC\n\n7. AC\n\n8. AC\n\n9. AC\n\n10. AC\n\n11. AC\n\n12. AC\n\n13. AC\n\n14. AC\n\n15. AC\n\n16. AC\n\n17. AC\n\n18. AC\n\n19. AC\n\n20. AC\n\n21. AC\n\n22. AC\n\n23. AC\n\n24. AC\n\n25. AC\n\n26. AC\n\n27. AC\n\n28. AC\n\n29. AC\n\n30. AC\n\n31. AC\n\n32. AC\n\n33. AC\n\n34. AC\n\n35. AC\n\n36. AC\n\n37. AC\n\n38. AC\n\n39. AC\n\n40. AC\n\n41. AC\n\n42. AC\n\n43. AC\n\n44. AC\n\n45. AC\n\n46. AC\n\n47. AC\n\n48. AC\n\n49. AC\n\n50. AC\n\n51. AC\n\n52. AC\n\n53. AC\n\n54. AC\n\n55. AC\n\n56. AC\n\n57. AC\n\n58. AC\n\n59. AC\n\n60. AC\n\n61. AC\n\n62. AC\n\n63. AC\n\n64. AC\n\n65. AC\n\n66. AC\n\n67. AC\n\n68. AC\n\n69. AC\n\n70. AC\n\n71. AC\n\n72. AC\n\n73. AC\n\n74. AC\n\n75. AC\n\n76. AC\n\n77. AC\n\n78. AC\n\n79. AC\n\n80. AC\n\n81. AC\n\n82. AC\n\n83. AC\n\n84. AC\n\n85. AC\n\n86. AC\n\n87. AC\n\n88. AC\n\n89. AC\n\n90. AC\n\n91. AC\n\n92. AC\n\n93. AC\n\n94. AC\n\n95. AC\n\n96. AC\n\n97. AC\n\n98. AC\n\n99. AC\n\n100. AC\n\n101. AC\n\n102. AC\n\n103. AC\n\n104. AC\n\n105. AC\n\n106. AC\n\n107. AC\n\n108. AC\n\n109. AC\n\n110. AC\n\n111. AC\n\n112. AC\n\n113. AC\n\n114. AC\n\n115. AC\n\n116. AC\n\n117. AC\n\n118. AC\n\n119. AC\n\n120. AC\n\n121. AC\n\n122. AC\n\n123. AC\n\n124. AC\n\n125. AC\n\n126. AC\n\n127. AC\n\n128. AC\n\n129. AC\n\n130. AC\n\n131. AC\n\n132. AC\n\n133. AC\n\n134. AC\n\n135. AC\n\n136. AC\n\n137. AC\n\n138. AC\n\n139. AC\n\n140. AC\n\n141. AC\n\n142. AC\n\n143. AC\n\n144. AC\n\n145. AC\n\n146. AC\n\n147. AC\n\n148. AC\n\n149. AC\n\n150. AC\n\n151. AC\n\n152. AC\n\n153. AC\n\n154. AC\n\n155. AC\n\n156. AC\n\n157. AC\n\n158. AC\n\n159. AC\n\n160. AC\n\n161. AC\n\n162. AC\n\n163. AC\n\n164. AC\n\n165. AC\n\n166. AC\n\n167. AC\n\n168. AC\n\n169. AC\n\n170. AC\n\n171. AC\n\n172. AC\n\n173. AC\n\n174. AC\n\n175. AC\n\n176. AC\n\n177. AC\n\n178. AC\n\n179. AC\n\n180. AC\n\n181. AC\n\n182. AC\n\n183. AC\n\n184. AC\n\n185. AC\n\n186. AC\n\n187. AC\n\n188. AC\n\n189. AC\n\n190. AC\n\n191. AC\n\n192. AC\n\n193. AC\n\n194. AC\n\n195. AC\n\n196. AC\n\n197. AC\n\n198. AC\n\n199. AC\n\n200. AC\n\n201. AC\n\n202. AC\n\n203. AC\n\n204. AC\n\n205. AC\n\n206. AC\n\n207. AC\n\n208. AC\n\n209. AC\n\n210. AC\n\n211. AC\n\n212. AC\n\n213. AC\n\n214. AC\n\n215. AC\n\n216. AC\n\n217. AC\n\n218. AC\n\n219. AC\n\n220. AC\n\n221. AC\n\n222. AC\n\n223. AC\n\n224. AC\n\n225. AC\n\n226. AC\n\n227. AC\n\n228. AC\n\n229. AC\n\n230. AC\n\n231. AC\n\n232. AC\n\n233. AC\n\n234. AC\n\n235. AC\n\n236. AC\n\n237. AC\n\n238. AC\n\n239. AC\n\n240. AC\n\n241. AC\n\n242. AC\n\n243. AC\n\n244. AC\n\n245. AC\n\n246. AC\n\n247. AC\n\n248. AC\n\n249. AC\n\n250. AC\n\n251. AC\n\n252. AC\n\n253. AC\n\n254. AC\n\n255. AC\n\n256. AC\n\n257. AC\n\n258. AC\n\n259. AC\n\n260. AC\n\n261. AC\n\n262. AC\n\n263. AC\n\n264. AC\n\n265. AC\n\n266. AC\n\n267. AC\n\n268. AC\n\n269. AC\n\n270. AC\n\n271. AC\n\n272. AC\n\n273. AC\n\n274. AC\n\n275. AC\n\n276. AC\n\n277. AC\n\n278. AC\n\n279. AC\n\n280. AC\n\n281. AC\n\n282. AC\n\n283. AC\n\n284. AC\n\n285. AC\n\n286. AC\n\n287. AC\n\n288. AC\n\n289. AC\n\n290. AC\n\n291. AC\n\n292. AC\n\n293. AC\n\n294. AC\n\n295. AC\n\n296. AC\n\n297. AC\n\n298. AC\n\n299. AC\n\n300. AC\n\n301. AC\n\n302. AC\n\n303. AC\n\n304. AC\n\n305. AC\n\n306. AC\n\n307. AC\n\n308. AC\n\n309. AC\n\n310. AC\n\n311. AC",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('5 6\\n1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5\\n1 1 1 1 1 1 1\\n5 5 5 5 5 5 5') == 'NO'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'YES\\n1 2 3 4'\n",
        "num_ids_2": 45,
        "num_ids_4": 260
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"4 4\") == \"NO\"\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 63
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n20 10 40 30') == 'YES\\n1 2 3 4\\n'\nassert solution('3 4\\n15 13 15 15 12') == 'NO\\n'\nassert solution('5 4\\n15 13 15 15 12') == 'YES\\n1 2 3 4\\n'\nassert solution('5 4\\n20 10 40 30') == 'NO\\n'\nassert solution('4 4\\n20 10 40 30') == 'YES\\n1 2 3 4\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'YES\\n1 2 3 4'\nassert solution('5 5\\n10 50 30 40 50 70') == 'YES\\n1 3 5'\n\n\n-----Accepted-----\n1,037,940\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 41,
        "num_ids_4": 88
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"1 2 4 0 2\") == \"NO\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\"\nassert solution(\"1 2 4 0 2\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 49
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\\n\"\nassert solution(\"5\\n5 1 3 6 8 2 9 0 10\") == \"NO\\n\"\nassert solution(\"4\\n1 2 4 0 2\") == \"NO\\n\"\nassert solution(\"4\\n1 2 4 0 2\") == \"NO\\n\"\nassert solution(\"6\\n1 2 4 0 2 3 5\") == \"YES\\n1 0 0 0 0 1 0 1\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 95
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"\nassert solution(\"3\\n0 0 0 0\") == \"NO\"\nassert solution(\"3\\n0 0 0 0\") == \"NO\"\nassert solution(\"2\\n0 0 0\") == \"NO\"\n",
        "num_ids_2": 49,
        "num_ids_4": 81
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\n\nassert solution(\n'''\n5\n1 2 4 0 2\n''') == 'NO'\n\nassert solution(\n'''\n6\n1 2 3 4 5 6\n''') == 'NO'\n\nassert solution(\n'''\n6\n1 2 3 4 5 6\n''') == 'NO'\n\nassert solution(\n'''\n8\n1 3 4 6 8 7\n''') == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\n",
        "num_ids_2": 35,
        "num_ids_4": 88
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 0 2\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"7\\n1 2 4 0 2 7 0 10\\n\") == \"NO\"\nassert solution(\"9\\n1 2 4 0 2 9 0 10\\n\") == \"NO\"\nassert solution(\"9\\n1 2 4 0 2 9 1 1\\n\") == \"NO\"\nassert solution(\"10\\n1 2 4 0 2 9 1 1 10\\n\") == \"NO\"\n",
        "num_ids_2": 52,
        "num_ids_4": 96
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\n\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\n\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '0'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '0'\nassert solution('2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '0'\nassert solution('2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '0'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '0'\n",
        "num_ids_2": 347,
        "num_ids_4": 961
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3 5 4\\n1 100 200 10000\\n1 1 1 1 1') == '3'\nassert solution('2\\n10 0 1 1\\n1 100 200 10000\\n1 1 1 1 1') == '0'\nassert solution('2\\n1 100 200 10000\\n1 1 1 1 1') == '0'\nassert solution('2\\n1 100 200 10000\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '0'\nassert solution('1\\n2 1 2 3\\n1 1 2 1 1\\n1 1 1 1 1\\n1 1 2 2 3') == '1'\n",
        "num_ids_2": 58,
        "num_ids_4": 132
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '3\\n0\\n1'\nassert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '3\\n0\\n1'\n",
        "num_ids_2": 95,
        "num_ids_4": 177
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\nassert solution(\n'''\n1\n1000000000 1 1 1000000000\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n1 2 3 4\n1 2 1 3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n2 2 3 3\n2 2 2 3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n3 2 3 4\n1 2 1 3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n4 1 3 4\n1 2 1 3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\"\"\") == '3\\n0\\n1134\\n0'\nassert solution(\"\"\"5\n10 2 3 7 8 9\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n100 10000 100 10000\n100 10001 100 10000\"\"\") == '0\\n0\\n1134\\n0\\n10001\\n0'\nassert solution(\"\"\"6\n10 2 3 7 8 9 10 11\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n100 10000 100 10000\n100 10001 100 10000\n100 10010 100 10000\n100 10011 100 10000\"\"\") == '3\\n0\\n1134\\n0\\n10001\\n0\\n10010\\n0\\n10011\\n0'\nassert solution(\"\"\"8\n10 2 3 7 8 9 10 11 12\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n100 10000 100 10000\n100 10001 100 10000\n100 10010 100 10000\n100 10011 100 10000\n100 10020 100 10000\n100 10021 100 10000\"\"\") == '3\\n0\\n1134\\n0\\n10001\\n0\\n10010\\n0\\n10011\\n0\\n10020\\n0\\n10021\\n0'\nassert solution(\"\"\"9\n10 2 3 7 8 9 10 11 12 13\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n100 10000 100 10000\n100 10001 100 10000\n100 10010 100 10000\n100 10011 100 10000\n100 10020 100 10000\n100 10021 100 10000\n100 10030 100 10000\n100 10031 100 10000\"\"\") == '3\\n0\\n1134\\n0\\n10001\\n0\\n10010\\n0\\n10011\\n0\\n10020\\n0\\n10021\\n0\\n10030\\n0\\n10031\\n0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 1\nassert solution('4') == 3\nassert solution('8') == 1260\nassert solution('20') == 12164510040883200\nassert solution('24') == 27995210392400\n",
        "num_ids_2": 16,
        "num_ids_4": 39
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n\nassert solution('''2\n4''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('u') == ''\nassert solution('aa') == ''\nassert solution('abb') == 'b'\n",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"15 3\ncccaabababaccbc\n\"\"\") == \"\"\"cccbbabaccbc\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\n\n-----How it is used-----\n\nThis is an important skill for beginner-level programmers.\n\nFor more information on the difficulty of this problem, visit:\nhttps://www.coursera.org/learn/algorithms/\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'dc'\nassert solution('zzzzzz') == ''\nassert solution('aaabccbaa') == 'bbbb'\nassert solution('ababab') == 'bba'\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccccc') == ''\nassert solution('cccccccc') == ''\nassert solution('cccccccccccccc') == ''\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccccc''') == ''\nassert solution('''ccccc''') == ''\nassert solution('''ccccc''') == ''\n",
        "num_ids_2": 48,
        "num_ids_4": 74
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('uu') == ''\n\n\n-----\n\n- TLE\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 31,
        "num_ids_4": 39
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\n",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\n",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''u''') == '''''''\nassert solution('''aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 39,
        "num_ids_4": 1643
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 4') == '8'\nassert solution('1 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '20'\nassert solution('1 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '20'\nassert solution('1 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n4 3') == '21'\nassert solution('1 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n4 3') == '21'\n",
        "num_ids_2": 52,
        "num_ids_4": 128
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('3 3\\n1 2\\n2 3\\n4 2\\n3 2') == '20'\nassert solution('4 2\\n1 2\\n2 3\\n4 2\\n3 2') == '16'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n3 2') == '18'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n3 2') == '8'\n",
        "num_ids_2": 62,
        "num_ids_4": 135
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('3\\n2\\n') == '3'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == input\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 6\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''4 5\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '20'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '20'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '20'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"5 6\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"5 6\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"5 6\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"5 6\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\n",
        "num_ids_2": 76,
        "num_ids_4": 140
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''10 10\n4 5\n1 5\n1 6\n1 7\n3 2\n4 3\n2 8\n5 9\n6 5\n7 4\n8 2\n9 1\n''') == '23'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n1 3\n1 5\n3 2\n2 4\n3 3\n2 1\n4 1\n2 2\n3 3\n4 4\n1 3\n1 5\n3 2\n''') == '20'\nassert solution('''5 3\n1 3\n1 5\n3 2\n2 4\n3 3\n2 1\n4 1\n2 2\n3 3\n4 4\n1 3\n1 5\n3 2\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input1) == result1\nassert solution(input2) == result2\nassert solution(input3) == result3\nassert solution(input4) == result4\nassert solution(input5) == result5\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nIn the second example you can see that stars cannot be fully enclosed by grid and the output is -1.\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\\\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\n\nassert solution(\n'''\\\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1\\n'\n\nassert solution(\n'''\\\n3 3\n*.*\n.*.\n*.*\n''') == '-1\\n'\n\nassert solution(\n'''\\\n4 4\n****\n.*.*\n.*.*\n.*.*\n''') == '3\\n3 3 1\\n3 4 1\\n3 5 2\\n3 5 1\\n'\n\nassert solution(\n'''\\\n2 3\n*..\n*.*\n*.*\n''') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\\n3 5 1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3\\n3 4 1'\nassert solution('''\\\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\\\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\\\n3 3\n*.*\n.*.\n*.*\n''') == '-1'\nassert solution('''\\\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3\\n3 4 1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '3 3 1'\nassert solution('3 3') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('3 5') == '-1'\nassert solution('1 2') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*\\n*.*\\n\") == \"-1\"\n\n\n\n\"\"\"\n\nimport sys\nfrom collections import deque",
        "num_ids_2": 86,
        "num_ids_4": 110
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(...) == expect\n\"\"\"\n\nfrom math import ceil, floor",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    6 8\n    ....*...\n    ...**...\n    ..*****.\n    ...**...\n    ....*...\n    ........\n    \"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    ***..\n    .*...\n    .*...\n    .....\n    \"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    .***.\n    .*...\n    .*...\n    .....\n    \"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    *.*\n    .*.\n    *.*\n    \"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    .***.\n    .*...\n    .*...\n    .....\n    \"\"\") == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2 3') is None\nassert solution('1') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"3\"\n\n\n-----Test-----\n\n\"\"\"\n\nimport sys\nfrom typing import List, Tuple\nsys.setrecursionlimit(10 ** 6)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '2 2 1'\nassert solution('3 3') == '3 3 1'\nassert solution('3 5 2') == '3 4 1'\nassert solution('3 5 1') == '3 4 1'\nassert solution('3 5 1') == '3 4 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'\nassert solution('5755') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1012') == 'No'\nassert solution('1001') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\nassert solution('59') == 'No'\nassert solution('69') == 'Yes'\nassert solution('876') == 'No'\nassert solution('976') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\"\n\n\"\"\"\nSolution 1:\nThis is a straightforward, straightforward, straightforward solution.\n\nThe only complex part is to read the input line, and compare it to itself.\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\nassert solution('0') == 'No'\nassert solution('1') == 'No'\nassert solution('12') == 'No'\nassert solution('101') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"Yes\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"24\") == \"No\"\nassert solution(\"101\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"100\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"234\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(575) == 'Yes'\nassert solution(6) == 'No'\n\n------\nfrom sys import stdin,stdout\ns=stdin.readline().strip()\nprint 'Yes' if s==s[::-1] else 'No'\n------\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(str(575)) == \"Yes\"\nassert solution(str(575)) == \"Yes\"\nassert solution(str(576)) == \"No\"\nassert solution(str(1)) == \"No\"\nassert solution(str(110)) == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1 2') == 'Alice'\nassert solution('8 6') == 'Alice'\nassert solution('8 6\\n1 2') == 'Alice'\nassert solution('8 6\\n2 1') == 'Bob'\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"3 5\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\"\nassert solution(\"10 9\") == \"Alice\"\nassert solution(\"4 4\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == 'Alice'\nassert solution('13 1') == 'Bob'\nassert solution('9 1') == 'Draw'\nassert solution('3 1') == 'Alice'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 3') == 'Bob'\nassert solution('8 6') == 'Draw'\nassert solution('5 6') == 'Draw'\nassert solution('9 6') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Alice\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 8') == 'Bob'\nassert solution('2 1') == 'Draw'\nassert solution('13 4') == 'Alice'\nassert solution('10 11') == 'Bob'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"2 3\") == \"Draw\"\nassert solution(\"4 1\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\"\nassert solution(\"6 5\") == \"Alice\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 2') == 'Draw'\nassert solution('3 4') == 'Bob'\nassert solution('5 6') == 'Bob'\nassert solution('7 8') == 'Alice'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 6''') == 'Alice'\nassert solution('''4 3''') == 'Bob'\nassert solution('''1 1''') == 'Draw'\nassert solution('''13 3''') == 'Alice'\nassert solution('''1 4''') == 'Alice'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,world,the\") == \"hello world the\"\nassert solution(\"bunny,cow,cote,dolphin,dolph,waffles,giraffe,goat,gum,hippopotamus,hippo,insect,owl,parrot,pig,piglet,queen,rabbit,raccoon,sheep,sheep,sheep,skeleton,tiger,turtle,wombat\") == \"bunny cow cote dolphin dolf waffles giraffe goat hogw piglet horse owl parrot piglet goat queen rabbit raccoon piglet sheep cow sheep sheep rabbit skeleton tiger turtle wombat\"\nassert solution(\"pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pippo,pipp",
        "num_ids_2": 35,
        "num_ids_4": 1814
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"\") == \"\"\nassert solution(\"hello,world,test\") == \"hello world test\"\nassert solution(\"a,b,c\") == \"a b c\"\nassert solution(\"a,b,c,d,e,f,g\") == \"a b c d e f g\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"h,y,e,p,p,e
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('h,ae,r,p,y,e,n,d,i,c,,k,e,y,o,u,e,i,t,e,n,w,a,y,o,u,r,t,h') == 'h ae r p y e n d i c k e y o u e i t e n w a y o u r t h'\nassert solution('h,ae,r,p,y,e,n,d,i,c,k,e,y,o,u,e,i,t,e,n,w,a,y,o,u,r,t,h,q,g') == 'h ae r p y e n d i c k e y o u e i t e n w a y o u r t h q g'\nassert solution('h,ae,r,p,y,e,n,d,i,c,k,e,y,o,u,e,i,t,e,n,w,a,y,o,u,r,t,h,q,g,b,u,s,r,y,q,a,p,i,n,r,n,t,h,o,u,n,o,m,g,b,a,r,y,p,u,v,a,l,q,r,e,s,o,u,t,h,e,r,d,s,n,o,m,c,u,p,i,n,q,a,r,y,e,r,t,h,e,s,o,u,v,a,r,e,i,v,e,e,t,n,r,a,t,o,u,v,e,r,t,h,e,r,c,v,a,u,v,a,u,i,r,a,t,o,u,v,a,s,d,r,y,q,a,r,w,i,n,u,s,r,y,q,a,p,e,n,t,o,r,a,t,h,u,r,v,e,s,o,u,v,a,r,w,a,t,o,u,s,d,r,n,t,o,r,a,e,t,w,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,e,t,h,u,r,v,e,s,o,u,v,a,r,w,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,w,a,q,p,e,n,t,o,r,a,y,q,a,b,u,v,a,r,",
        "num_ids_2": 111,
        "num_ids_4": 1813
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happiness,newyear,enjoy\") == \"happiness newyear enjoy\"\nassert solution(\"happiness,new,year,enjoy\") == \"happiness new year enjoy\"\nassert solution(\"happiness,new,year,enjoy,\") == \"happiness new year enjoy\"\nassert solution(\"happiness,new,year,enjoy,\") == \"happiness new year enjoy\"\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happiness,newyear,enjoy') == 'happiness newyear enjoy'\nassert solution('happiness,newyear,enjoy,wonderful,movies,of,the') == 'happiness newyear enjoy wonderful movies of the'\nassert solution('happiness,newyear,enjoy,love,books,and,music') == 'happiness newyear enjoy love books and music'\nassert solution('happiness,newyear,enjoy,love,books,and,music,and,another') == 'happiness newyear enjoy love books and music and another'\n",
        "num_ids_2": 40,
        "num_ids_4": 109
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('h,e,l,l,o,,w,o,r,e,e,y,u,e,n,,d,o,u,e,r,') == 'hello'\nassert solution('h,e,l,l,o,,w,o,r,e,e,y,u,e,n,d,o,u,e,r,,') == 'hello'\nassert solution('h,e,l,l,o,,w,o,r,e,e,y,u,e,n,d,o,u,e,r,') == 'hello'\nassert solution('h,e,l,l,o,,w,o,r,e,e,y,u,e,n,d,o,u,e,r,') == 'hello'\n",
        "num_ids_2": 66,
        "num_ids_4": 161
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"great,movies,november\") == \"great movies november\"\nassert solution(\"october,deciding,school,shouldn't\") == \"october deciding school shouldn't\"\nassert solution(\"movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,movies,",
        "num_ids_2": 39,
        "num_ids_4": 1814
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '''2\n1'''\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n-1 -1\n0 -1\n0 0''') == '''1\n2'''\nassert solution('''5 6\n2 2\n2 0\n0 0\n0 0\n-1 0\n-1 -1\n1 -1\n0 -1\n0 0\n1 0''') == '''2\n1\n1\n1\n1\n1'''\nassert solution('''5 6\n2 2\n2 0\n0 0\n0 0\n-1 0\n-1 -1\n1 -1\n0 -1\n0 0\n1 0''') == '''2\n1\n1\n1\n1\n1'''\n\n'''\nExcellent! You are getting serious with this one.\n\nFor another one, see https://www.hackerrank.com/challenges/ctci-dna-queries/forum.\n\nYou will be given an integer M and a series of M lines with two integers each. The i-th line of the series contains the starting index and ending index of a DNA fragment.\n\nFor each i-th line of the series, the program must output the index of the checkpoint that the i-th student would have to go to to satisfy the query. For each query, the program outputs the smallest index among the checkpoints that satisfy the query.\n\nInput sample:\n4 3\n1 3\n3 5\n2 4\n4 6\n\nOutput sample:\n3\n1\n1\n3\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 2\n2 0\n0 0\n-1 0\n1 0\n\"\"\") == \"2\\n1\"\nassert solution(\"\"\"2 2\n2 0\n0 0\n0 0\n0 0\n\"\"\") == \"1\\n1\"\nassert solution(\"\"\"2 2\n2 0\n2 1\n1 0\n1 0\n\"\"\") == \"2\\n1\"\nassert solution(\"\"\"2 2\n2 0\n2 1\n1 1\n1 1\n\"\"\") == \"2\\n1\"\nassert solution(\"\"\"5 1\n-5 5\n3 3\n5 5\n-5 5\n5 5\n\"\"\") == \"4\\n1\\n2\\n2\\n1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0 0\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1\\n'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n2 1\n2 2\n2 3\n2 4\n2 5\n3 2\n1 2\n2 3\n3 4\n3 5\n4 2\n4 3\n5 2\n5 3''') == '2\\n3\\n'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1'\nassert solution('''2 3\n2 0\n-1 1\n0 0\n-1 0\n0 0\n2 0\n0 1\n-1 0\n1 0''') == '1\\n2'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '1'\n'''\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''4 4\n-6 -5\n-5 -5\n5 5\n5 0\n5 -5\n5 -6\n-5 -5\n-5 5\n-5 -5\n5 -5\n0 0\n-5 0\n5 0\n5 5\n-5 5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5\n-5 -5\n5 -5",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0\\n') == '1\\n1\\n'\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '2\\n2\\n'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0\\n') == '1\\n1\\n'\n",
        "num_ids_2": 69,
        "num_ids_4": 146
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '''2\n1'''\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n0 0\n-1 0\n1 0\n-1 0\n0 0\n1 0\n0 0\n-1 0\n0 0\n-1 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n-1 0\n0 0\n1 0\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('3 3\\n-2 -1\\n-1 0\\n1 0\\n-2 -1\\n-1 1\\n1 1\\n') == '2\\n1\\n'\nassert solution('5 5\\n-1 -1\\n-2 -2\\n-3 -3\\n-4 -4\\n-3 -3\\n-2 -2\\n-1 -1\\n') == '1\\n2\\n3\\n4\\n5\\n'\nassert solution('3 3\\n-3 -1\\n-2 -2\\n-1 -3\\n2 -3\\n1 -1\\n2 -2\\n') == '1\\n2\\n'\nassert solution('5 5\\n-1 -1\\n-2 -2\\n-3 -3\\n-4 -4\\n-3 -3\\n-2 -2\\n-1 -1\\n') == '1\\n2\\n3\\n4\\n'\n",
        "num_ids_2": 83,
        "num_ids_4": 203
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"-1 0\") == \"1\"\nassert solution(\"1 0\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 14\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 14\nassert solution('3') == 52\nassert solution('8') == 208\nassert solution('10') == 156",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == \"14\"\nassert solution(3) == \"66\"\nassert solution(4) == \"100\"\nassert solution(5) == \"121\"\nassert solution(6) == \"146\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('123') == '246'\nassert solution('13') == '146'\nassert solution('123456789012345678901234567890') == '123456789012345678901234567890'\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == 14\nassert solution(3) == 17\nassert solution(4) == 20\nassert solution(5) == 25\nassert solution(6) == 30\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"3\"\nassert solution(\"2\\n\") == \"14\"\nassert solution(\"3\\n\") == \"26\"\nassert solution(\"4\\n\") == \"10\"\nassert solution(\"5\\n\") == \"50\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '14'\n\nassert solution('3') == '45'\n\nassert solution('5') == '155'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == \"14\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 14\nassert solution('1') == 3\nassert solution('3') == 10\nassert solution('4') == 19\nassert solution('5') == 42\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '14'\nassert solution('''3''') == '36'\nassert solution('''4''') == '52'\nassert solution('''5''') == '95'\nassert solution('''6''') == '146'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 2\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('#.\\n#.\\n#.\\n#.\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.",
        "num_ids_2": 1557,
        "num_ids_4": 1557
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.\\n#.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.#\\n#.#\") == \"No\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.#\\n#.#\") == \"No\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.#\\n#.#\") == \"No\"\n",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\") == \"Yes\"\nassert solution(\"3 4\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\") == \"No\"\nassert solution(\"2 3\\n#.\\n.#\\n\") == \"No\"\nassert solution(\"1 1\\n.\") == \"Yes\"\nassert solution(\"3 3\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\") == \"No\"\n",
        "num_ids_2": 64,
        "num_ids_4": 97
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.\") == \"No\"\nassert solution(\"3 2\\n#.\\n.#\\n#.\\n#.\\n.#\\n#.\\n#.\") == \"No\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\") == \"No\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\") == \"Yes\"\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n.#\\n.#\\n.#\\n#\\n.\\n.#\\n\") == \"Yes\"\nassert solution(\"3 2\\n.#.#\\n.#.#\\n#.#.\\n#.#.#\\n.#.#.\\n#.#.#\\n.#.#.\\n#.#.\\n#.#.#\") == \"No\"\nassert solution(\"2 3\\n.#.#\\n.#.#\\n#.#.#\\n#.#.#\\n.#.#.\\n.#.#.\\n.#.#.\\n#.#.\\n#.#.#\") == \"No\"\nassert solution(\"2 2\\n.#.\\n.#.\\n#.\\n#.\\n.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n",
        "num_ids_2": 85,
        "num_ids_4": 1554
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"53\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"2 5 2\") == \"10\"\nassert solution(\"1 5 5\") == \"15\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"53\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 10 5') == '52'\nassert solution('1 5 10') == '53'\nassert solution('1 1 2') == '2'\nassert solution('2 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 5 2\") == \"53\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('3 4 5') == '43'\nassert solution('5 9 3') == '14'\nassert solution('1 1 1') == '1'\nassert solution('3 2 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '53'\n\nfrom itertools import product",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"53\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('5 7 2') == '52'\nassert solution('5 7 3') == '58'\nassert solution('5 9 2') == '58'\nassert solution('5 9 3') == '72'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '2\\n5\\n7'\nassert solution('2\\n4\\n6') == '10\\n10'\nassert solution('3\\n6\\n9') == '11\\n11'\nassert solution('10\\n2\\n5') == '15'",
        "num_ids_2": 41,
        "num_ids_4": 76
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950'\nprint(solution('3\\n4980\\n7980\\n6980'))\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('2') == ''\nassert solution('2 2') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n4980\n7980\n6980\n'''\n    ) == '15950'\n\nassert solution(\n'''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n'''\n    ) == '3125'\n\nassert solution(\n'''\n5\n5\n5\n5\n5\n'''\n    ) == '0'\n\nassert solution(\n'''\n5\n10\n10\n10\n10\n'''\n    ) == '10'\n\nassert solution(\n'''\n5\n10\n10\n10\n10\n10\n10\n10\n10\n10\n'''\n    ) == '20'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"3\\n3\\n3\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n') == '6\\n'\nassert solution('2\\n6\\n10\\n') == '12\\n'\nassert solution('3\\n18\\n27\\n') == '54\\n'\nassert solution('4\\n20\\n10\\n30\\n50\\n') == '280\\n'\nassert solution('5\\n70\\n65\\n99\\n99\\n') == '1140\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''3\n4700\n6200\n6300''') == '10300'\nassert solution('''4\n99999\n4700\n6200\n6300''') == '499500'\nassert solution('''5\n30000\n11400\n14900\n19200\n55000''') == '572250'\nassert solution('''5\n2\n5000\n2400\n2400\n5000''') == '15000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n4980\\n7980\\n6980\\n') == '15950'\nassert solution('2\\n42\\n42\\n') == '0'\nassert solution('3\\n100\\n500\\n1000\\n') == '14995'\nassert solution('4\\n1000\\n900\\n600\\n900\\n') == '25120'\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n99') == '999'\nassert solution('2\\n4') == '6'\nassert solution('3\\n99999') == '99999'\nassert solution('3\\n99999') == '99999'\nassert solution('3\\n99999') == '99999'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n4980\n7980\n6980\n\"\"\"\n) == \"15950\"\n\nassert solution(\n\"\"\"\n4\n50000\n50000\n50000\n50000\n\"\"\"\n) == \"2000000\"\n\nassert solution(\n\"\"\"\n6\n20000\n50000\n50000\n50000\n50000\n50000\n\"\"\"\n) == \"220000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"15\\n10\\n2\\n10\\n10\") == \"15\"\nassert solution(\"1\\n100\\n100\\n100\\n100\") == \"5\"\nassert solution(\"1\\n100\\n10\\n100\\n100\") == \"5\"\nassert solution(\"4\\n9\\n6\\n7\\n5\") == \"8\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n-----SUMMARY-----\n- This is a problem of the Orders and Deliveries in an Restaurant.\n- The orders are placed at a time that is a multiple of 10 (time 0, 10, 20,...).\n- Only one dish can be ordered at a time.\n- No new order can be placed when an order is already placed and the dish is still not delivered, but a new order can be placed at the exact time when the dish is delivered.\n\"\"\"\n\"\"\"\n-----ALGORITHM-----\n- Python 3\n- The order of the dishes is ABC, ARC, AGC, APC, ATC, so the time to be delivered is the time between when an order is placed and when the dish is delivered.\n- The given constraints are that the order can only be placed at a time that is a multiple of 10 (time 0, 10, 20,...).\n- The order can be placed at time 0.\n- So the order can be done in any order.\n- Find the earliest possible time for the last dish to be delivered.\n- If the last dish is done, then the restaurant will have served all of the orders.\n- We want to find the smallest time such that the last dish is done.\n- Time to be delivered for the last dish is the minimum time difference between when the order is placed and when the dish is delivered.\n- For the last dish, we know that the minimum time to be delivered is the time difference between when the order is placed and the time the dish is delivered.\n- To calculate the time to be delivered for the last dish, we can pick the order in which the last dish will be delivered, and use the difference between that order and the time the last dish is delivered as the time to be delivered for the last dish.\n- For the other orders, we know that the time to be delivered for an order is the time difference between when the order is placed and when the dish is delivered plus the time it takes to serve the dish.\n- So the minimum time to be delivered for the last dish is the minimum time difference between when the order is placed and when the dish is delivered.\n- The time to be delivered for all other dishes is the time difference between when the order is placed and when the dish is delivered plus the time it takes to serve the dish.\n- For all other dishes, we know that the time to be delivered for an order is the time difference between when the order is placed and when the dish is delivered plus the time it takes to serve the dish.\n- We can use the smallest time to be delivered for each order to find the time to be delivered for the last dish.\n- The time to be delivered for the last dish is the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- The time to be delivered for all other dishes is the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- The time to be delivered for the last dish is the sum of the smallest time to be delivered for each order minus the time it takes to serve the last dish.\n- The time to be delivered for all other dishes is the sum of the smallest time to be delivered for each order minus the time it takes to serve the last dish.\n- Find the time to be delivered for the last dish by subtracting the time it takes to serve the last dish from the sum of the smallest time to be delivered for each order.\n- Now find the smallest time to be delivered for all other dishes by subtracting the time it takes to serve the last dish from the sum of the smallest time to be delivered for each order.\n- The smallest time to be delivered for the last dish is the smallest of the time to be delivered for all orders minus the time it takes to serve the last dish.\n- The smallest time to be delivered for all other dishes is the smallest of the time to be delivered for all orders minus the time it takes to serve the last dish.\n- The smallest time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- The smallest time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- The time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- The time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for the last dish is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Time to be delivered for all other dishes is the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the last dish.\n- Find the smallest of the smallest time to be delivered for all orders minus the time it takes to serve the",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\nassert solution(\n    \"\"\"29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n    \"\"\"29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n    \"\"\"29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n    \"\"\"29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120\n45\n75\n105\n150\n180\n210''') == '215'\nassert solution('''29\n20\n7\n35\n120\n45\n75\n105\n150\n180\n210\n290\n305\n350\n385\n435\n465\n505\n570\n635\n680\n760\n820\n960\n1025\n1060\n1215\n1350\n1485\n1530\n1745\n1890\n2225\n2460\n2700\n3315\n3645\n3960\n4280\n4610\n5360\n5985\n6410\n7380\n8895\n9650\n10700\n11845\n13380\n14900\n17445\n20235\n25500\n26990\n28775\n30845\n34000\n35300\n36845\n39185\n45210\n47630\n48720\n50045\n53240\n55950\n56290\n60750\n63345\n68300\n72650\n73275\n76805\n83125\n87300\n93395\n100990\n107010\n111670\n119140\n123200\n125925\n128500\n130920\n134725\n142480\n147905\n155295\n161060\n165025\n168285\n172335\n175450\n180385\n183965\n191685\n197555\n210600\n221795\n227000\n232285\n234945\n248555\n253500\n261585\n264860\n270325\n274825\n279560\n293485\n295865\n299950\n310485\n320155\n327845\n333970\n339705\n343325\n346835\n358495\n361425\n365565\n367605\n371845\n376065\n379725\n383855\n391150\n395065\n402625\n411635\n425715\n438645\n440385\n444965\n451185\n454925\n460005\n461695\n463495\n468495\n470035\n471795\n472795\n474845\n477865\n481915\n482985\n484995\n488975\n491955\n492975\n494965\n496985\n499495\n502014\n503365\n504725\n505845\n506985\n507975\n509105\n510825\n511845\n512865\n513895\n514775\n515005\n515565\n516575\n517575\n517665\n518165\n519855\n520975\n521955\n523225\n523855\n524875\n526275\n527655\n528655\n528765\n528865\n529975\n530985\n531998\n533355\n534145\n535065\n535675\n536675\n537175\n537955\n538775\n539165\n539655\n540095\n541765\n542895\n543965\n544395\n545365\n546095\n547165\n547655\n548165\n549165\n549655\n550415\n552415\n553485\n554495\n555465\n556495\n557475\n558465\n559435\n560825\n561845\n562975\n564865\n566865\n567865\n568865\n569875\n570095\n571765\n572895\n573965\n574965\n575975\n576985\n578095\n578975\n579865\n580095\n581865\n582975\n583965\n584965\n585975\n586985\n587975\n588965\n589165\n589655\n590295\n590375\n591375\n592465\n593465\n594465\n595465\n596465\n597465\n598465\n599865\n600195\n600695\n601195\n602375\n603375\n604375\n605475\n606475\n607475\n608475\n609475\n610475\n611475\n612475\n613475\n614475\n615475\n616475\n617475\n618475\n619475\n620475\n621475\n623475\n624375\n624875\n624475\n625475\n626375\n627475\n628475\n629475\n631475\n632475\n633475\n634375\n634875\n634985\n635175\n635625\n636375\n636975\n637985\n638375\n638875\n638985\n639175\n639625\n640155\n641955\n642955\n643255\n644375\n645475\n646475\n647475\n648475\n649475\n651475\n652475\n653475\n654475\n655475\n655875\n656975\n657975\n658975\n660075\n661865\n662975\n664865\n665875\n666975\n667975\n668975\n670875\n671865\n672875\n673875\n674875\n675875\n676875\n677875\n678875\n679875\n680875\n681865\n682875\n683875\n684875\n685875\n686875\n687875\n688875\n689875\n690875\n691865\n692875\n693875\n694875\n695875\n696875\n697875\n698875\n699875\n700195\n700695\n701195\n702375\n703375\n704375\n705475\n706475\n707475\n708475\n709475\n710475\n711475\n712475\n713475\n714475\n715475\n716475\n717475\n718475\n719475\n720475\n721475\n723475\n724375\n724475\n725475\n726475\n727475\n728475\n729475\n731475\n732475\n733475\n733475\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABC Don ABC Curry ABC Pasta ABC Ramen ATC Hanbagu APC Ramen\") == 215\nassert solution(\"ABC Don ABC Curry ABC Pasta ABC Ramen ATC Hanbagu APC Ramen\") == 215\nassert solution(\"ABC Don ABC Curry ABC Pasta ABC Ramen ATC Hanbagu APC Ramen\") == 215\nassert solution(\"ABC Don ABC Curry ABC Pasta ABC Ramen ATC Hanbagu APC Ramen\") == 215\nassert solution(\"ABC Don ABC Curry ABC Pasta ABC Ramen ATC Hanbagu APC Ramen\") == 215\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"215\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0.5'\nassert solution('10 10') == '0'\nassert solution('3 3') == '0.3333333333333333333333333333'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''1\n10''') == '1'\nassert solution('''3\n20 40 60''') == '0.26666666666666666'\nassert solution('''3\n20 40 60 10''') == '0.16666666666666666'\nassert solution('''3\n5 3 2''') == '0.6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 30\") == \"7.5\"\nprint(solution(stdin))\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '1/6'\nassert solution('4') == '1/2'\nassert solution('5') == '3/10'\nassert solution('6') == '5/6'\nassert solution('7') == '7/14'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('20 0') == '0'\nassert solution('10 30') == '7.5'\nassert solution('20 0') == '0'\nassert solution('10 30') == '7.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('3') == '1'\nassert solution('15') == '5'\nassert solution('1000000000') == '999999999'\nassert solution('9876543210') == '1000000000'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 30') == '7.5'\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''3\n100 3 5''') == '7.5'\nassert solution('''4\n12 15 13''') == '7.5'\nassert solution('''5\n19 24 17''') == '7.5'\nassert solution('''6\n10 10 9''') == '7.5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 1 1 1') == '7.5'\nassert solution('2\\n10 30') == '7.5'\nassert solution('3\\n1 2 3') == '3.0'\nassert solution('4\\n1 2 3 4') == '2.0'\nassert solution('5\\n1 2 3 4 5') == '0.2'\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3''') == '2'\nassert solution('''5 2''') == '0'\nassert solution('''10 2''') == '2'\nassert solution('''10 5''') == '2'\nassert solution('''15 2''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5 3\n10\n15\n11\n14\n12\n''') == '2'\n\nassert solution(\n'''\n5 3\n100\n100\n100\n100\n100\n''') == '0'\n\nassert solution(\n'''\n5 3\n10\n100\n100\n100\n100\n''') == '2'\n\nassert solution(\n'''\n5 4\n10\n100\n100\n100\n100\n''') == '1'\n\nassert solution(\n'''\n5 4\n10\n10\n10\n10\n10\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\nassert solution('0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\nassert solution('0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\nassert solution('0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\nassert solution('0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\\n10\") == \"0\"\nassert solution(\"10\\n15\") == \"1\"\nassert solution(\"10\\n11\") == \"1\"\nassert solution(\"10\\n14\") == \"2\"\nassert solution(\"10\\n12\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"5 10\\n100\\n100\\n100\\n100\\n100\") == \"1\"\nassert solution(\"5 10\\n10\\n10\\n10\\n10\") == \"0\"\nassert solution(\"5 10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"0\"\nassert solution(\"5 10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"0\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n13''') == '-1'\nassert solution('''10 5\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '0'\nassert solution('''10 5\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '-1'\nassert solution('''100 100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('4 1\\n20\\n40\\n90\\n100') == '-1'\nassert solution('4 3\\n1\\n2\\n3\\n4') == '0'\nassert solution('5 3\\n1\\n2\\n3\\n4\\n5') == '-1'\nassert solution('5 3\\n1\\n2\\n3\\n4\\n5\\n6') == '-1'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"15\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('B') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('a') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"Bb\") == \"AB\"\nassert solution(\"bB\") == \"aB\"\nprint(solution(\"B\"))\nprint(solution(\"b\"))\nprint(solution(\"Bb\"))\nprint(solution(\"bB\"))",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('A') == 'a'\nassert solution('B') == 'a'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"A\"\nprint(\"Test case passed.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('Ab') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 2') == '6'\nassert solution('2 10') == '0'\nassert solution('2 3') == '1'\nassert solution('10 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"2 2\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '6'\nassert solution('2 2') == '6'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('10 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"100 2\") == \"5050\"\nassert solution(\"10 50\") == \"5050\"\nassert solution(\"100 50\") == \"5050\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''0 1''') == '6'\nassert solution('''4 0''') == '0'\nassert solution('''1 1''') == '10'\nassert solution('''2 3''') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '0'\nassert solution('''5 5''') == '0'\nassert solution('''3 2''') == '0'\nassert solution('''4 3''') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2') == '6'\nassert solution('2 2') == '6'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('3 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1901') == 'AMBIGUOUS'\nassert solution('0601') == 'AMBIGUOUS'\nassert solution('1905') == 'YYMM'\nassert solution('1011') == 'AMBIGUOUS'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('190518') == 'MMYY'\nassert solution('051905') == 'AMBIGUOUS'\nassert solution('05190518') == 'NA'\nprint('All tests passed successfully.')",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(solution_test_one) == \"YYMM\"\nassert solution(solution_test_two) == \"AMBIGUOUS\"\nassert solution(solution_test_three) == \"NA\"\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1905') == '1905'\nassert solution('0901') == '0901'\nassert solution('0903') == '0903'\nassert solution('1805') == '1805'\nassert solution('1806') == '1806'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('2905') == 'AMBIGUOUS'\nassert solution('9089') == 'NA'\nassert solution('9090') == 'NA'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"AMBIGUOUS\" # YYMM\nassert solution(sample_input2) == \"NA\" # 19 is not valid as a month\n\nassert solution(sample_input3) == \"MMYY\"\nassert solution(sample_input4) == \"AMBIGUOUS\"\nassert solution(sample_input5) == \"YYMM\"\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"1905\"\nassert solution(\"1905\") == \"1905\"\nassert solution(\"0519\") == \"1905\"\nassert solution(\"0519\") == \"1905\"\nassert solution(\"1519\") == \"1905\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"201609\") == \"YYMM\"\nassert solution(\"1900\") == \"NA\"\nassert solution(\"30201\") == \"NA\"\nassert solution(\"31\") == \"NA\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('XX19') == 'AMBIGUOUS'\nassert solution('1905') == 'YYMM'\nassert solution('19XX') == 'AMBIGUOUS'\nassert solution('19XX') == 'NA'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('1301') == 'AMBIGUOUS'\nassert solution('0301') == 'MMYY'\nassert solution('0012') == 'NA'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('7') == '4'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 2\nassert solution('2\\n') == 2\nassert solution('3') == 0\nassert solution('3\\n') == 0\nassert solution('4\\n') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 2\nassert solution('4') == 4\nassert solution('5') == 10\nassert solution('6') == 12\nassert solution('7') == 14\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == \"2\"\nassert solution('2') == \"1\"\nprint('Testcase 1 passed.')\n\nprint('Testcase 2 passed.')\n\nprint('Testcase 3 passed.')\n\nprint('Testcase 4 passed.')\n\nprint('Testcase 5 passed.')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('10') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('3') == None\nassert solution('9') == None\nassert solution('1') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\nassert solution('''7 1''') == '8'\nassert solution('''7 19''') == '20'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 11') == '20'\nassert solution('9 13') == '19'\nassert solution('9 14') == '18'\nassert solution('9 15') == '17'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''15 22''') == '19'\nassert solution('''0 0''') == '0'\nassert solution('''23 15''') == '3'\n'''\nassert solution('''21 21''') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 19') == '20'\nassert solution('10 17') == '20'\nassert solution('11 17') == '19'\nassert solution('9 19') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('9 12') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"21\"\n\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 12''') == '21'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"2 1399\") == \"1299\"\nassert solution(\"1 2059\") == \"1959\"\nassert solution(\"1 1629\") == \"1529\"\nassert solution(\"2 1891\") == \"1891\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 0') == '0'\nassert solution('1 0') == '0'\nassert solution('1 0') == '0'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input().strip()) == output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 0') == '1000'\nassert solution('3 1') == '-999'\nassert solution('3 2') == '-998'\nassert solution('3 3') == '-997'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 579') == '680'\nassert solution('1 2499') == '2499'\nassert solution('1 5') == '0'\nassert solution('10 0') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2919') == '3719'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 2919') == '2919'\nassert solution('1 1') == '0'\nassert solution('3 1') == '2'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2919''') == \"3719\"\nassert solution('''1 3250''') == \"1750\"\nassert solution('''1 1''') == \"1750\"\nassert solution('''2 100''') == \"100\"\nassert solution('''2 30''') == \"30\"\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 3') == '4'\nassert solution('2 0') == '0'\nassert solution('2 0') == '0'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(11, 2) == '4'\nassert solution(25, 2) == '6'\nassert solution(27, 2) == '8'\nassert solution(9, 3) == '2'\nassert solution(26, 3) == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n\n\"\"\"\n\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 2') == '4'\nassert solution('11 3') == '2'\nassert solution('11 4') == '1'\nassert solution('11 5') == '0'\nassert solution('11 6') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11 2') == '4'\nassert solution('1000000100 10') == '2'\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1873
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 4\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '11 2'\n) == '4'\n\nassert solution(\n    '11 7'\n) == '1'\n\nassert solution(\n    '21 2'\n) == '3'\n\nassert solution(\n    '21 7'\n) == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"11 2\") == \"4\"\nassert solution(\"23 21\") == \"3\"\nassert solution(\"1000 1001\") == \"3\"\nassert solution(\"23223\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11, 2) == 4\nassert solution(200, 5) == 6\nassert solution(100000000000, 10) == 12\nassert solution(15, 16) == 3\nassert solution(15, 1) == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 2') == '4'\nassert solution('3 5') == '1'\nassert solution('13 32') == '5'\nassert solution('987654321 10') == '10'\nassert solution('1234 7654321') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('7') == '3'\nassert solution('9') == '3'\nassert solution('11') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '3'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '2'\nassert solution('''4''') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == 3\nassert solution(\"5\") == 3\nassert solution(\"1\") == 1\nassert solution(\"5\") == 3\nassert solution(\"10\") == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('3') == '3'\nassert solution('10') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"15\") == \"3\"\nassert solution(\"25\") == \"3\"\nassert solution(\"49\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('2') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"15\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"9\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 2\nassert solution('5') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yay!\"\n\n------\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4') == \"Yay!\"\nassert solution('1 1') == \"Yay!\"\nassert solution('1 1') == \"Yay!\"\nassert solution('3 3') == \"Yay!\"\nassert solution('2 3') == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"4 2\") == \"Yay!\"\nassert solution(\"3 4\") == \"Yay!\"\nassert solution(\"5 5\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 8\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 9\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('3 4') == 'Yay!'\nassert solution('8 3') == 'Yay!'\nassert solution('7 4') == 'Yay!'\nassert solution('16 6') == 'Yay!'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yay!'\nassert solution('1 2') == 'Yay!'\nassert solution('1 2 3 4') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('2 2') == 'Yay!'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"4 2\") == \"Yay!\"\nassert solution(\"5 2\") == \"Yay!\"\nassert solution(\"6 2\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\n\"\"\"\n\na, b = map(int, stdin.split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('789') == '34'\nassert solution('123') == '34'\nassert solution('456') == '34'\nassert solution('78901') == '34'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678901234567890123456789012345678') == '34'\nassert solution('1234567890123456789012345678901234567890') == '34'\nassert solution('1234567890123456789012345678901234567890012345678901234567890') == '34'\nassert solution('1234567890123456789012345678901234567890012345678901234567890012345678901234567890') == '34'\n",
        "num_ids_2": 40,
        "num_ids_4": 106
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678901234567890') == '0'\nassert solution('456789012345678901234567890') == '0'\nassert solution('012345678901234567890') == '0'\nassert solution('98745678901234567890') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 72
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1234567') == '34'\nassert solution('12345678') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567890') == '34'\nassert solution('1234567891') == '34'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678987654321') == '912'\nassert solution('123456789123456789') == '0'\nassert solution('12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678987654321') == '0'\nassert solution('123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123",
        "num_ids_2": 30,
        "num_ids_4": 99
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123456789') == '34'\nassert solution('92345678') == '34'\nassert solution('72345678') == '34'\nassert solution('123456789') == '34'\nassert solution('12345678') == '34'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567890123456789012345678901234567890') == '34'\nassert solution('123456789012345678901234567890') == '34'\n",
        "num_ids_2": 25,
        "num_ids_4": 66
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678') == '34'\nassert solution('123456789') == '34'\nassert solution('123456788') == '34'\nassert solution('123456782') == '34'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1234567876') == '34'\nassert solution('987654321') == '0'\nassert solution('91234567') == '8'\nassert solution('94453798') == '8'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1 2'\nassert solution('2 9') == '1 7'\nassert solution('5 4 3 2 1') == '2 3'\nassert solution('3 9 2 1') == '2 3'\nassert solution('3 3 3 3') == '0 0'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 12 6\\n\") == \"5 3\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"12 13\"\nassert solution(\"6\\n13 52 0 13 26 52\\n\") == \"12 13\"\nassert solution(\"6\\n13 52 0 13 26 52\\n\") == \"12 13\"\n",
        "num_ids_2": 35,
        "num_ids_4": 79
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '''5 3'''\nassert solution('''2''') == '''1 7'''\nassert solution('''7''') == '''12 13'''\nassert solution('''13 52 0 13 26 52''') == '''2999999987 2'''\nassert solution('''6''') == '''12 13'''\n",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\nassert solution('7\\n13 52 0 13 26 52') == '12 13'\n",
        "num_ids_2": 31,
        "num_ids_4": 71
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '5 3'\nassert solution('''2''') == '1 7'\nassert solution('''7''') == '12 13'\nassert solution('''6''') == '12 13'\nassert solution('''13 52 0 13 26 52''') == '2999999987 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''4\n0 0 0 0\n1 1 1 1''') == '0 0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '2 1'\nassert solution('2\\n2') == '1 1'\nassert solution('3\\n12 6\\n') == '5 3'\nassert solution('3\\n2 9\\n') == '1 7'\nassert solution('4\\n2 1000000000 4 6 8 4 2\\n') == '2999999987 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13'\nassert solution('4\\n2 1000000000 4 6 8 4 2\\n') == '2999999987 2'\n\n'''\n",
        "num_ids_2": 35,
        "num_ids_4": 79
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"\n\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(map(str, range(4)))) == ''.join(map(str, range(1)))\nassert solution(''.join(map(str, range(3)))) == ''.join(map(str, range(2)))\nassert solution(''.join(map(str, range(1)))) == ''.join(map(str, range(1)))\nassert solution(''.join(map(str, range(2)))) == ''.join(map(str, range(1)))\nassert solution(''.join(map(str, range(3)))) == ''.join(map(str, range(1)))\n\n\n\"\"\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4\n3 1 4 1''') == '3'\nassert solution(\n'''3\n1 1 1''') == '1'\nassert solution(\n'''5\n1 1 1 2 2''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"2\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"3\\n1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n2 2 1 2\\n') == '2'\nassert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 1 4 1') == '3'\nassert solution('2\\n3 1 4 1') == '1'\nassert solution('1\\n1 1 1') == '1'\nassert solution('2\\n1 1 1') == '1'\nassert solution('3\\n3 1 4 1') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4\n3 1 4 1\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"3\n1 1 1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"5\n1 1 1 2 2\"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 4 1') == '3'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 1 1 2 2') == '2'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 1 1 2 2') == '2'",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2\\n') == '1'\nassert solution('4\\n1 4 1 2') == '3'\nassert solution('4\\n1 4 1 2\\n1 4 1 2') == '3'\nassert solution('4\\n1 4 1 2\\n2 2 1 1') == '1'\nassert solution('5\\n1 1 1 1 1') == '2'\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n3 1 4 1'''\n) == '3'\n\nassert solution(\n'''3\n1 1 1'''\n) == '1'\n\nassert solution(\n'''5\n1 1 1 2 2'''\n) == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3') == '2'\nassert solution('1 2\\n2 3\\n3 4') == '2'\nassert solution('1 2\\n2 3\\n3 4\\n4 5') == '3'\nassert solution('3 3\\n3 1\\n1 2\\n2 3') == '2'\nassert solution('3 3\\n3 1\\n1 2\\n2 3\\n3 4') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''5 4\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n\n\n-----\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n4 5') == '2\\n4 2'\nassert solution('2 0\\n2 3\\n4 5\\n6 7') == '1\\n1 2\\n2 3\\n4 5\\n6 7'\nassert solution('2 0\\n2 3\\n4 5\\n6 7\\n8 9') == '1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9'\nassert solution('2 0\\n2 3\\n4 5\\n6 7\\n8 9\\n0 1') == '1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n0 1'\nassert solution('2 0\\n2 3\\n4 5\\n6 7\\n8 9\\n0 1\\n4 3') == '1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n0 1\\n4 3'\n",
        "num_ids_2": 62,
        "num_ids_4": 164
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n2 0\n''') == '1'\n\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''2 0''') == '1'\nassert solution('''3 2''') == '2'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '1'\nassert solution('10 3') == '2'\nassert solution('5 2') == '2'\nassert solution('10 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"1 2\") == \"4 2\"\nassert solution(\"2 1\") == \"2 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''1 1\n2 3\n1 3\n''') == '1'\n\n\n\n--- 558. Rectangle Overlap ---\nhttps://www.codewars.com/kata/5859f1a73a0d2c4c0a0014c4\n\nYou are given two lists of axis-aligned rectangles. Each rectangle is defined by its bottom-left corner and its top-right corner.\n\nCalculate the area of intersection of the rectangles. Two rectangles overlap if their intersection area is non-empty.\n\nFor the purposes of this kata, two rectangles are considered to be equal if their bottom-left and top-right corners are the same.\n\nExamples\n\nIf rectangles `A` and `B` are identical, then `A` and `B` have the same area.\n\nIf `A` and `B` do not overlap, then their area is zero.\n\nIf `A` and `B` overlap, then their area is equal to the area of intersection of the two rectangles.\n\nAssume that the four rectangles in the input have valid dimensions.\n\nFor example, given the following two rectangles:\n\n\n\n`A` is `2 x 1`, `B` is `1 x 3`\n\n`A` and `B` have non-zero intersection area, so return `8`.\n\nAssume that the four rectangles in the input do not overlap. Return `0`.\n\nAssume that the four rectangles in the input are not identical. Return `0`.\n\nFor the rectangles\n\n`A` is `6 x 4`, `B` is `1 x 6`\n\n`A` and `B` overlap, so return `16`.\n\nAssume that the four rectangles in the input are identical. Return `0`.\n\nAssume that the four rectangles in the input do not overlap. Return `0`.\n\n\n\n--- 558. Rectangle Overlap ---\nhttps://www.codewars.com/kata/5859f1a73a0d2c4c0a0014c4\n\nYou are given a set of rectangles, all having integer coordinates.\n\nYou need to find the set of all rectangles that can completely cover all the given rectangles.\n\nGiven a set of integers `R` (as a list of 4-tuples `(x, y, width, height)`) and a set of integers `C` (as a list of tuples `(x, y, width, height)`), the answer is an array of tuples `(x, y, width, height)`, representing the rectangles that completely cover all the given rectangles.\n\nThe answer array should be sorted by increasing x-coordinate, then increasing y-coordinate, then decreasing width, then decreasing height (See the following example).\n\nIf there are multiple rectangles that can cover the entire area of the given rectangles, choose any of them.\n\nNote that the given rectangles don't have to be completely covered by the answer rectangles.\n\nIf there are no answer rectangles return an empty array.\n\nInput\n\nTwo arguments: `R` and `C`.\n\n`R` is a list of 4-tuples of integers, each tuple is in the form `(x, y, width, height)`, representing the coordinates of a rectangle.\n\n`C` is a list of 4-tuples of integers, each tuple is in the form `(x, y, width, height)`, representing the coordinates of a rectangle.\n\nOutput\n\nAn array of 4-tuples `(x, y, width, height)`, representing the rectangles that completely cover all the given rectangles.\n\nNote that the given rectangles don't have to be completely covered by the answer rectangles.\n\nIf there are multiple rectangles that can cover the entire area of the given rectangles, choose any of them.\n\nIf there are no answer rectangles return an empty array.\n\nExamples:\n\nInput: `R = [(0, 0, 2, 2), (0, 0, 2, 1), (2, 0, 1, 2), (0, 0, 1, 2)]`\n\n`C = [(1, 0, 1, 1), (0, 1, 1, 1), (1, 1, 1, 1), (0, 0, 1, 1)]`\n\nOutput: [(0, 0, 2, 2)]\n\nInput: `R = [(0, 0, 2, 2), (0, 0, 2, 1), (2, 0, 1, 2), (0, 0, 1, 2)]`\n\n`C = [(1, 0, 1, 1), (0, 1, 1, 1), (1, 1, 1, 1), (0, 0, 1, 1)]`\n\nOutput: [(0, 0, 2, 2), (0, 0, 2, 1)]\n\nInput: `R = [(0, 0, 2, 2), (0, 0, 2, 1), (2, 0, 1, 2), (0, 0, 1, 2)]`\n\n`C = [(1, 0, 1, 1), (0, 1, 1, 1), (1, 1, 1, 1), (0, 0, 1, 1)]`\n\nOutput: [(0, 0, 2, 2)]\n\nInput: `R = [(0, 0, 2, 2), (0, 0, 2, 1), (2, 0, 1, 2), (0, 0, 1, 2)]`\n\n`C = [(1, 0, 1, 1), (0, 1, 1, 1), (1, 1, 1, 1), (0, 0, 1, 1)]`\n\nOutput: [(0, 0, 2, 2), (0, 0, 2, 1)]\n\nInput: `R = [(0, 0, 1, 1), (0, 0, 1, 1), (1, 0, 1, 1), (0, 0, 1, 1)]`\n\n`C = [(1, 0, 1, 1), (0, 1, 1, 1), (1, 1, 1, 1), (0, 0, 1, 1)]`\n\nOutput: [(0, 0, 1, 1)]\n\nInput: `R = [(0, 0, 1, 1), (0, 0, 1, 1), (1, 0, 1, 1), (0, 0, 1, 1)]`\n\n`C = [(1, 0",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0') == '1'\nassert solution('4 2') == '2'\nassert solution('1 0') == '1'\nassert solution('3 2') == '2'\nassert solution('2 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n'''\n>>> solution('''4 1\n1 2 3 4\n1 2\n2 3\n3 4\n3 5\n''')\n'11'\n\n>>> solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''')\n'11'\n\n>>> solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''')\n'4'\n'''\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"6 2\") == \"5\"\nassert solution(\"8 3\") == \"13\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"13 4\") == \"49\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"\nassert solution(\"3 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n305 306\\n306 307\\n307 308\\n308 309\\n309 310\\n310 311\\n311 312\\n312 313\\n313 314\\n314 315\\n315 316\\n316 317\\n317 318\\n318 319\\n319 320\\n320 321\\n321 322\\n322 323\\n323 324\\n324 325\\n325 326\\n326 327\\n327 328\\n328 329\\n329 330\\n330 331\\n331 332\\n332 333\\n333 334\\n334 335\\n335 336\\n336 337\\n337 338\\n338 339\\n339 340\\n340 341\\n341 342\\n342 343\\n343 344\\n344 345\\n345 346\\n346 347\\n347 348\\n348 349\\n349 350\\n350 351\\n351 352\\n352 353\\n353 354\\n354 355\\n355 356\\n356 357\\n357 358\\n358 359\\n359 360\\n360 361\\n361 362\\n362 363\\n363 364\\n364 365\\n365 366\\n366 367\\n367 368\\n368 369\\n369 370\\n370 371\\n371 372\\n372 373\\n373 374\\n374 375\\n375 376\\n376 377\\n377 378\\n378 379\\n379 380\\n380 381\\n381 382",
        "num_ids_2": 1566,
        "num_ids_4": 1566
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n7 4\\n7 5\\n7 5\\n3 1\\n2 3\\n7 5\\n2 4\\n7 4\\n2 4\\n1 5') == 4\nassert solution('4 6 7\\n2 1 3\\n1 3 2\\n3 1 1\\n1 2 1\\n1 2 1\\n1 2 1\\n1 2 1\\n1 2 1') == 4\nassert solution('7 8 9\\n7 7\\n7 6\\n7 6\\n7 8\\n7 7\\n7 6\\n7 4\\n7 4\\n7 6\\n7 4\\n7 4\\n7 4') == 3\nassert solution('7 8 9\\n7 7\\n7 6\\n7 6\\n7 8\\n7 7\\n7 6\\n7 4\\n7 4\\n7 6\\n7 4\\n7 4\\n7 4') == 3\nassert solution('3 1 3 2 4\\n1 2\\n1 3\\n1 2\\n2 1\\n2 1\\n3 1\\n3 2\\n3 2\\n3 1\\n3 2') == 3\n",
        "num_ids_2": 118,
        "num_ids_4": 234
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2\\n2 3\\n3 4\\n3 5') == '4'\nassert solution('1 2 3\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5\\n7 4') == '4'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == '4'\nprint('Testcases passed')\n",
        "num_ids_2": 64,
        "num_ids_4": 108
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('1\\n1') == '1'\nassert solution('5\\n5\\n5\\n5\\n5') == '5'\nassert solution('1 2\\n1 2') == '2'\n",
        "num_ids_2": 94,
        "num_ids_4": 129
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == \"11\"\n\nassert solution(\n'''5 3\n2 1 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n5 10000000000\\n5 6 9999999999') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\n\n\"\"\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('3 3\\n7 101 1 1\\n1 9 1 1') == '1 2\\n1 1\\n1 3'\nassert solution('3 3\\n7 101 1 1\\n1 9 1 1') == '1 2\\n1 1\\n1 3'\nassert solution('3 3\\n7 101 1 1\\n1 9 1 1') == '1 2\\n1 1\\n1 3'\n",
        "num_ids_2": 72,
        "num_ids_4": 136
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994'''\n\nassert solution('''10 100\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010\n10010010010010010010010010010010''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n4 1\n4 12\n5 1\n5 12\n6 1\n6 12\n7 1\n7 12\n8 1\n8 12'''\n\nassert solution('''3 10\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n1\\n4\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\",
        "num_ids_2": 1266,
        "num_ids_4": 1266
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\"\n) == \"\"\"\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\"\nassert solution(\n\"\"\"\n2 3\n5 10000000000\n5 6 9999999999\n\"\"\"\n) == \"\"\"\n1 5\n2 1\n2 9999999994\n\"\"\"\n\nimport sys\nsys.path.append(r\"../../../..\")\n\nfrom library.logic import get_truth_value\nfrom numpy import arange\nfrom numpy.random import randint\nfrom typing import List, Tuple",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == '1 5\\n2 1\\n2 9999999994'\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/1.in') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n\nassert solution('''3 3\n1 1\n1 1 1\n1 1\n''') == '''1 1\n1 1\n1 1\n1 1\n'''\n\n\"\"\"\n\nfrom typing import List\nimport unittest\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\n\nassert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('10 0 0 0') == '1 0 0'\nassert solution('10 10 10 10') == '1 1 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 6 5 4\\n\") == \"2 1 3\"\nassert solution(\"40 40 40 60\\n\") == \"20 20 20\"\nassert solution(\"201 101 101 200\\n\") == \"1 100 100\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''40 40 40 60''') == '20 20 20'\nassert solution('''201 101 101 200''') == '1 100 100'\nassert solution('''741 409 11\n    189 2\n    18 2\n    164 8\n    24 3\n    377 5\n    228 7\n    140 9\n    101 8\n    189 3\n    196 4\n    197 9\n    197 6\n    27 3\n    179 4\n    18 3\n    237 9\n    17 3\n    111 2\n    230 7\n    181 4\n    181 2\n    72 1\n    182 9\n    61 6\n    175 9\n    79 1\n    187 9\n    18 1\n    122 9\n    122 8\n    34 7\n    46 4\n    58 8\n    7 3\n    13 1\n    26 4\n    34 1\n    144 8\n    19 2\n    40 4\n    43 8\n    47 1\n    88 9\n    85 2\n    23 7\n    34 9\n    16 3\n    39 7\n    14 1\n    105 9\n    131 4\n    143 8\n    165 1\n    89 1\n    39 1\n    44 7\n    48 1\n    64 9\n    71 4\n    32 7\n    46 3\n    37 9\n    18 4\n    83 1\n    33 1\n    100 9\n    28 2\n    56 4\n    59 8\n    8 3\n    12 1\n    20 1\n    95 1\n    117 2\n    109 1\n    122 1\n    149 8\n    15 1\n    173 8\n    75 2\n    25 1\n    89 7\n    39 8\n    85 7\n    62 6\n    84 7\n    105 7\n    110 4\n    130 9\n    139 3\n    136 4\n    90 9\n    126 4\n    107 8\n    132 1\n    136 7\n    35 1\n    81 1\n    23 1\n    14 1\n    28 2\n    56 1\n    9 1\n    64 9\n    43 4\n    76 1\n    67 7\n    34 5\n    22 1\n    45 9\n    59 5\n    73 6\n    55 2\n    24 3\n    25 1\n    135 9\n    162 1\n    60 1\n    83 1\n    92 3\n    30 1\n    20 2\n    84 1\n    65 1\n    87 9\n    32 1\n    60 2\n    69 1\n    43 1\n    27 1\n    108 1\n    117 9\n    116 1\n    100 9\n    91 1\n    87 1\n    73 8\n    58 1\n    43 1\n    37 1\n    35 9\n    33 1\n    32 1\n    29 1\n    107 1\n    113 1\n    121 9\n    110 2\n    101 1\n    114 8\n    117 8\n    108 1\n    90 1\n    76 3\n    63 8\n    51 5\n    45 1\n    41 1\n    4 1\n    4 1\n    40 2\n    47 1\n    29 1\n    27 1\n    248 1\n    239 1\n    222 1\n    220 4\n    214 9\n    222 2\n    200 8\n    185 1\n    184 1\n    179 1\n    172 1\n    167 1\n    171 1\n    163 1\n    159 1\n    153 1\n    152 1\n    153 1\n    156 1\n    153 1\n    149 1\n    147 1\n    139 1\n    134 1\n    127 1\n    116 1\n    114 1\n    109 1\n    93 1\n    87 1\n    77 1\n    76 1\n    76 1\n    74 1\n    73 1\n    73 1\n    73 1\n    74 1\n    74 1\n    74 1\n    74 1\n    74 1\n    74 1\n    75 1\n    76 1\n    78 1\n    79 1\n    79 1\n    79 1\n    79 1\n    79 1\n    79 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    80 1\n    81 1\n    82 1\n    82 1\n    82 1\n    82 1\n    82 1\n    82 1\n    82 1\n    82 1\n    83 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    84 1\n    85 1\n    86 1\n    86 1\n    86 1\n    86 1\n    86 1\n    86 1\n    86 1\n    86 1\n    87 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    88 1\n    89 1\n    90 1\n    90 1\n    90 1\n    90 1\n    90 1\n    90 1\n    90 1\n    90 1\n    91 1\n    92 1\n    92 1\n    92 1\n    92 1\n    92 1\n    92 1\n    92 1\n    93 1\n    94 1\n    94 1\n    94 1\n    94 1\n    94 1\n    94 1\n    94 1\n    94 1\n    94 1\n    95 1\n    96 1\n    96 1\n    96 1\n    96 1\n    96 1\n    96 1\n    96 1\n    97 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    98 1\n    99 1\n    99 1\n    99 1\n    99 1\n    99 1\n    99 1\n    99 1\n    99 1\n    99 1\n    100 1\n    101 1\n    101 1\n    101 1\n    101 1\n    101 1\n    101 1\n    101 1\n    102 1\n    103 1\n    103 1\n    103 1\n    103 1\n    103 1\n    103 1\n    103 1\n    103 1\n    104 1\n    105 1\n    105 1\n    105 1\n    105 1\n    105 1\n    105 1\n    105 1\n    106 1\n    107 1\n    107 1\n    107 1\n    107 1\n    107 1\n    107 1\n    107 1\n    108 1\n    109 1\n    109 1\n    109 1\n    109 1\n    109 1\n    109 1\n    109 1\n    109 1\n    110 1\n    111 1\n    111 1\n    111 1\n    111 1\n    111 1\n    111 1\n    111 1\n    111 1\n    112 1\n    113 1\n    113 1\n    113 1\n    113 1\n    113 1\n    113 1\n    113 1\n    114 1\n    115 1\n    115 1\n    115 1\n    115 1\n    115 1\n    115 1\n    115 1\n    116 1\n    117 1\n    117",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nprint('tests passed')\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nprint(solution('2 3 4 5'))",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '''2\nRBGRGBRGR'''\nassert solution('''8\nBBBGBRRR''') == '''2\nBRBGBRGR'''\nassert solution('''13\nBBRRRRGGGGGRR''') == '''6\nBGRBRBGBGBGRG'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \"\"\nassert solution(\"RBGRRBRGG\") == \"\"\nassert solution(\"BBBGBRRR\") == \"\"\nassert solution(\"BBRRRRGGGGGRR\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 39
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0]\n\n'''\nn = int(stdin.readline())\ns = stdin.readline().strip()",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG'\n",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\nassert solution('10\\nRRRRRRRRRRR') == '2\\nRRRRRRRRRR'\nassert solution('20\\n
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''9\nRBGRRBRGG\n'''\n) == '2'\n\n\nassert solution(\n'''8\nBBBGBRRR\n'''\n) == '2'\n\n\nassert solution(\n'''13\nBBRRRRGGGGGRR\n'''\n) == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n9\nRBGRRBRGG\n''') == '''\n2\nRBGRGBRGR\n'''\nassert solution('''\n8\nBBBGBRRR\n''') == '''\n2\nBRBGBRGR\n'''\nassert solution('''\n13\nBBRRRRGGGGGRR\n''') == '''\n6\nBGRBRBGBGBGRG\n'''\nassert solution('''\n9\nRRRRRGGGGGRR\n''') == '''\n2\nRBGRGBRGR\n'''\nassert solution('''\n8\nBBBGBRRR\n''') == '''\n2\nBRBGBRGR\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\n",
        "num_ids_2": 48,
        "num_ids_4": 77
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 5 6') == '4'\nassert solution('1 3 5 7 6') == '4'\nassert solution('1 3 5 6 7 8 9') == '4'\nassert solution('6 7 8 3 4 5 9 10 11') == '6'\nassert solution('6 7 8 3 4 5 9 10 11') == '6'\n",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''7\n3 3 4 7 5 6 8''') == '''4\n2 3 5 6 \n'''\n\nassert solution(\n'''6\n1 3 5 2 4 6''') == '''2\n1 4 \n'''\n\nassert solution(\n'''4\n10 9 8 7''') == '''1\n1 \n'''\n\nassert solution(\n'''9\n6 7 8 3 4 5 9 10 11''') == '''6\n1 2 3 7 8 9 \n'''\n\nassert solution(\n'''9\n6 7 8 3 4 5 9 10 11''') == '''6\n1 2 3 7 8 9 \n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 3 4 7 5 6 8\\n') == '1\\n2 3 5'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\n",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n'\n'3 3 4 7 5 6 8\\n'\n'9 9 8 7 6 5 4 3\\n'\n'2 2 3 3 1 1\\n'\n'5 5 6 7 8 9\\n'\n'7 7 8 9 7 9 8\\n'\n'6 6 7 7 8 8 7\\n'\n'4 4 7 7 7 7 7 7 7\\n'\n'3 3 4 7 5 6 8') == '4\\n1 2 3 5 6'\nassert solution('2\\n'\n'10 9 8 7\\n'\n'6 7 8 3 4 5 9 10 11\\n'\n'2 2 3 3 1 1\\n'\n'5 5 6 7 8 9\\n'\n'7 7 8 9 7 9 8\\n'\n'6 6 7 7 8 8 7\\n'\n'4 4 7 7 7 7 7 7 7\\n'\n'3 3 4 7 5 6 8') == '6\\n1 2 3 5 6'\nassert solution('4\\n'\n'10 9 8 7\\n'\n'6 7 8 3 4 5 9 10 11\\n'\n'2 2 3 3 1 1\\n'\n'5 5 6 7 8 9\\n'\n'7 7 8 9 7 9 8\\n'\n'6 6 7 7 8 8 7\\n'\n'4 4 7 7 7 7 7 7 7\\n'\n'3 3 4 7 5 6 8') == '2\\n1 4'\nassert solution('5\\n'\n'10 9 8 7\\n'\n'6 7 8 3 4 5 9 10 11\\n'\n'2 2 3 3 1 1\\n'\n'5 5 6 7 8 9\\n'\n'7 7 8 9 7 9 8\\n'\n'6 6 7 7 8 8 7\\n'\n'4 4 7 7 7 7 7 7 7\\n'\n'3 3 4 7 5 6 8') == '1\\n1 4'\nassert solution('9\\n'\n'6 7 8 3 4 5 9 10 11\\n'\n'2 2 3 3 1 1\\n'\n'5 5 6 7 8 9\\n'\n'7 7 8 9 7 9 8\\n'\n'6 6 7 7 8 8 7\\n'\n'4 4 7 7 7 7 7 7 7\\n'\n'3 3 4 7 5 6 8') == '8\\n1 2 3 5 6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '1\\n1 4'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7\") == \"\"\nassert solution(\"7 5 3 1 9 2 4\") == \"\"\nassert solution(\"7 7 5 3 1 9 2 4\") == \"\"\nassert solution(\"7 7 5 3 1 9 2 4 8\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 44
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '1'\nassert solution('7') == '1'\nassert solution('7') == '1'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('test') == '1'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 3 5 2 4 6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 3 4 7 5 6 8') == '4'\nassert solution('6\\n6 7 8 3 4 5 9 10 11') == '1'\nassert solution('4\\n1 3 5 2 4 6') == '2'\nassert solution('9\\n9 10 11 12 13 14 15 16 17 18 19') == '6'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"2 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1''') == 'Yes'\nassert solution('''5 1''') == 'Yes'\nassert solution('''2 3''') == 'Yes'\nassert solution('''6 4''') == 'No'\nassert solution('''15 2''') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('3 4') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('3 2') == 'Yes'\nassert solution('1 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('1 3') == 'No'\nassert solution('3 4') == 'Yes'\nassert solution('3 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('3 3') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '1'\nassert solution('10 10') == '10'\nassert solution('3 2') == '5'\nassert solution('10 9') == '9'\nassert solution('8 10') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"100 30\") == \"200\"\nassert solution(\"100 30\") == \"200\"\nassert solution(\"100 30\") == \"200\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('81 58') == '110'\nassert solution('2 2') == '0'\nassert solution('30 35') == '60'\nassert solution('98 42') == '89'\nassert solution('0 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10') == '5'\nassert solution('81 58') == '110'\nassert solution('10 1000') == '100'\nassert solution('100 100') == '100'\n\"\"\"\n\n\"\"\"\nBonus Question\n\nThe idea is that for a bus ride, if the person is on the bus then he has to pay the fare before the bus leaves.\n\nSo, there is a bus ride with a fare of 6 yen and a toll of 2 yen.\nHow much will the bus leave the person if he uses a special bus ticket?\n\nThe bus ticket has 50% discount.\n\nSample Input\n100 6\n\nSample Output\n50\n\n\"\"\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('81 58') == '110'\nassert solution('81 58') == '110'\nassert solution('58 37') == '110'\nassert solution('58 37') == '110'\nassert solution('37 58') == '110'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"101 110\") == \"110\"\nassert solution(\"101 110\") == \"110\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 20') == '30'\nassert solution('50 50') == '100'\nassert solution('90 10') == '10'\nassert solution('40 10') == '30'\nassert solution('50 50') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('0\\n0') == '0'\nassert solution('2\\n0') == '0'\nassert solution('2\\n2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"5\\n\") == \"8\"\nassert solution(\"100\\n\") == \"135\"\n\"\"\"\nfrom collections import defaultdict\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '27'\nassert solution('5') == '297'\nassert solution('7') == '4423'\nassert solution('9') == '66981'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2\n'''\n) == '8'\nassert solution(\n'''\n5\n'''\n) == '80'\nassert solution(\n'''\n0\n'''\n) == '1'\nassert solution(\n'''\n3\n'''\n) == '27'\nassert solution(\n'''\n4\n'''\n) == '196'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '26'\nassert solution('10') == '610'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('1') == None\nassert solution('123') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 8\nassert solution(\"3\") == 9\nassert solution(\"4\") == 10\nassert solution(\"5\") == 11\nassert solution(\"6\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\n''') == '1'\nassert solution(\n'''2\n''') == '4'\nassert solution(\n'''3\n''') == '7'\nassert solution(\n'''4\n''') == '6'\nassert solution(\n'''5\n''') == '9'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == \"YES\"\nassert solution('3') == \"NO\"\nassert solution('0') == \"NO\"\nassert solution('5') == \"YES\"\nassert solution('4') == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'YES'\nassert solution('3\\n') == 'NO'\nassert solution('4\\n') == 'NO'\nassert solution('5\\n') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\nassert solution('7') == 'YES'\nassert solution('3') == 'NO'\nassert solution('9') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5\n'''\n) == 'YES'\n\nassert solution(\n'''\n6\n'''\n) == 'NO'\n\nassert solution(\n'''\n7\n'''\n) == 'NO'\n\nassert solution(\n'''\n3\n'''\n) == 'NO'\n\nassert solution(\n'''\n4\n'''\n) == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('15') == 'YES'\nassert solution('16') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5'''\n) == 'YES'\nassert solution(\n'''1'''\n) == 'NO'\nassert solution(\n'''7'''\n) == 'YES'\nassert solution(\n'''8'''\n) == 'YES'\nassert solution(\n'''9'''\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('9') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\nassert solution('1') == 'NO'\nassert solution('8') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'ABC'\nassert solution('99') == 'ABC'\nassert solution('999') == 'ABC999'\nassert solution('1998') == 'ABD'\nassert solution('1999') == 'ABD'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1998') == 'ABD'\nassert solution('1999') == 'ABC'\nassert solution('1998') == 'ABD'\nassert solution('1997') == 'ABC'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('999') == 'ABC'\nassert solution('ABC') == 'ABC'\nassert solution('ABC') == 'ABC'\nassert solution('ABC') == 'ABC'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC000\") == \"ABC\"\nassert solution(\"ABC999\") == \"ABC\"\nassert solution(\"ABC001\") == \"ABD\"\nassert solution(\"ABC002\") == \"ABD\"\nassert solution(\"ABC003\") == \"ABD\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('999') == 'ABC999'\nassert solution('1000') == 'ABC001'\nassert solution('1000') == 'ABC002'\nassert solution('1000') == 'ABC003'\nassert solution('1001') == 'ABC004'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''999''') == 'ABC'\nassert solution('''997''') == 'ABC'\nassert solution('''996''') == 'ABD'\nassert solution('''995''') == 'ABE'\nassert solution('''994''') == 'ABF'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABCD\") == \"ABC\"\nassert solution(\"ABCDE\") == \"ABC\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ABC\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ABC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 56
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ABC'\nassert solution('ABD') == 'ABC'\nassert solution('ABCD') == 'ABD'\nassert solution('ABDC') == 'ABDC'\nassert solution('ABCD') == 'ABCD'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 'A'\nassert solution('2') == 'B'\nassert solution('3') == 'C'\nassert solution('4') == 'D'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n11\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n13\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\") == \"Yay!\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n13') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n8') == 'Yay!'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n18\\n19') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') == 'Yay!'\n",
        "num_ids_2": 64,
        "num_ids_4": 143
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\n\n'''\n",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n12') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n13') == 'Yay!'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"15\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"5\\n\"\n    \"2\\n\"\n    \"5\\n\"\n    \"3\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"3\\n\"\n    \"2\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"3\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"2\\n\"\n    \"2\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n) == \"Yay!\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n20\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n25\") == \"Yay!\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\") == \"Yay!\"\n\nassert solution(\n\"\"\"\n1\n2\n4\n8\n9\n16\n\"\"\") == \"Nay!\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Yay!'\nassert solution('a') == 'Yay!'\nassert solution('1') == 'Yay!'\nassert solution('1\\n1') == 'Yay!'\nassert solution('1\\n2') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!', 'Error'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'a'\nassert solution('pink') == 'pink'\nassert solution('p') == 'p'\nassert solution('p') == 'p'\nassert solution('p') == 'p'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('pink') == 'pink'\nassert solution('black') =='red'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == \"a\"\nassert solution('a\\nb') == \"red\"\nassert solution('a\\nb\\nc') == \"red\"\nassert solution('a\\nb\\nc\\nd') == \"red\"\nassert solution('a\\nb\\nc\\nd\\ne') == \"red\"\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"pink\") == \"pink\"\nassert solution(3200) == \"pink\"\n\n\"\"\"\n\"\"\"\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3200\\npink\\n') == 'pink\\n'\nassert solution('1200\\nred\\n') =='red\\n'\nassert solution('0\\ntest\\n') == 'test\\n'\nassert solution('10\\n\\n') == '\\n\\n'\nassert solution('40\\n\\n') == '\\n\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('pink') == 'pink'\nassert solution('3200') == 'pink'\nassert solution('p') =='red'\nassert solution('abc') =='red'\nassert solution('123') =='red'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('3200\\nteal') =='red'\nassert solution('3200\\nblack') =='red'\nassert solution('3200\\nwhite') =='red'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3200\npink\n''') == 'pink'\nassert solution('''3200\nblue\n''') =='red'\nassert solution('''3200\ngreen\n''') =='red'\nassert solution('''3200\nblack\n''') =='red'\nassert solution('''3200\nwhite\n''') =='red'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('pink') == 'pink'\nassert solution('red') =='red'\nassert solution('3200') == 'pink'\nassert solution('3200') =='red'\nassert solution('3200') == 'pink'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"pink\") == \"pink\"\nassert solution(\"red\") == \"red\"\nassert solution(\"green\") == \"red\"\nassert solution(\"white\") == \"red\"\nassert solution(\"pink\") == \"pink\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1234') == 'ARC'\nassert solution('2786') == 'AGC'\nassert solution('4208') == 'ABC'\nassert solution('1121') == 'ARC'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'ARC'\nassert solution('1201') == 'AGC'\nassert solution('1201') == 'AGC'\nassert solution('12345') == 'AGC'\nassert solution('123456') == 'AGC'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[0]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1209') == 'ARC'\nassert solution('1299') == 'AGC'\nassert solution('1199') == 'ABC'\nassert solution('1189') == 'ARC'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('2800') == 'ARC'\nassert solution('1299') == 'AGC'\nassert solution('1399') == 'ARC'\nassert solution('4200') == 'AGC'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'AGC'\nassert solution('1199') == 'ACG'\nassert solution('1179') == 'ACG'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"ABC\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1200') == 'ABC'\nassert solution('1299') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('1049') == 'ARC'\nassert solution('2200') == 'AGC'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[0] + stdin[1:].replace(stdin[0], 'ABC')\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(119) == \"991\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\nassert solution('777') == '777'\nassert solution('1234') == '1234'\nassert solution('999') == '999'\nassert solution('222') == '222'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(119) == \"991\"\nassert solution(13) == \"133\"\nassert solution(1023) == \"1023\"\nassert solution(914) == \"914\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(119) == \"991\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(119) == \"991\"\nassert solution(111) == \"11\"\nassert solution(10) == \"10\"\nassert solution(1000) == \"1000\"\nassert solution(1000000) == \"1000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\nassert solution('99') == '999'\nassert solution('999') == '9999'\nassert solution('9981') == '99991'\nassert solution('9999') == '999999'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''119''') == \"991\"\n'''\nimport sys\nfrom functools import reduce\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('119') == '991'\nassert solution('111') == '9'\nassert solution('10') == '1'\nassert solution('9') == '1'\nassert solution('999') == '999'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\n\nassert solution('''\n5\na\na\na\na\na\n''') == \"a\"\n\nassert solution('''\n7\na\na\na\na\na\na\na\n''') == \"a\"\n\nassert solution('''\n9\na\na\na\na\na\na\na\na\na\n''') == \"a\"\n\nassert solution('''\n12\na\na\na\na\na\na\na\na\na\na\na\n''') == \"a\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n5\nabbac\nac\nbccddaaf\nzzzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n2\nabc\nabc\n''') == 'abc'\nassert solution('''\n1\na\n''') == 'a'\nassert solution('''\n9\nzzzzzzzzzzzzzzzzzzzzzzzz\n''') == 'zzzzzzzzzzzzzzzzzzzzzz'\n'''\nfrom collections import Counter\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n\nabac\nac\nbcdaf\nzzzzzz\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aaaaaabbbaa') == 'aabbbaa'\nassert solution('aaaaaabbbaa') == 'aabbbaa'\nassert solution('aaaaaabbbaa') == 'aabbbaa'\nassert solution('aaaaaabbbaa') == 'aabbbaa'\nassert solution('aaaaaabbbaa') == 'aabbbaa'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\n\n\n\"\"\"\n\n\nfrom typing import List\n\n\"\"\"\n1. Binary search\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abbaac') == 'abac'\nassert solution('ac') == 'ac'\nassert solution('bccddaaf') == 'bcdaf'\nassert solution('zzzzzzzzzz') == 'zzzzzzzzzz'\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''aaaaa\nbb\nccccc\nd''') == \"ab\"\nassert solution('''ab\nbc\ncd\nde\nef''') == \"ab\"\nassert solution('''abc\nxyz\naba''') == \"aba\"\nassert solution('''aab\nbab\ncba\naba''') == \"aba\"\nassert solution('''abcd\nefgh\nijklmnop\nqrstuvwxy\nyz''') == \"efgh\"\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ac\") == \"ac\"\nassert solution(\"abcabc\") == \"abcabc\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aac\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580",
        "num_ids_2": 1763,
        "num_ids_4": 1763
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '''2\n5\n5\n333\n0\n0\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n7\\n') == '0'\nassert solution('1\\n19\\n') == '3'\nassert solution('2\\n1\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 5 6') == '2\\n1\\n0\\n333\\n6'\nassert solution('2 1\\n2 2') == '0\\n0'\nassert solution('10 9\\n23 45') == '2\\n0'\nassert solution('100 13\\n101 123') == '3\\n0'\nassert solution('123 456\\n15 46') == '6\\n0'\n",
        "num_ids_2": 47,
        "num_ids_4": 83
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''4\n16 8\n43 44\n65 67\n180 181\n''') == '3\\n1\\n1\\n2\\n0'\nassert solution('''3\n20 19\n40 38\n60 62\n''') == '2\\n2\\n1\\n2\\n0'\nassert solution('''1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n4''') == '''2\n5\n4\n333\n0'''\n\nassert solution('''123\n456''') == '''0\n1\n1\n333\n'''\n\nassert solution('''100\n13''') == '''2\n5\n4\n333\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_out",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 2 2\\n2 2 2') == '2.5'\nassert solution('3\\n2 2 2\\n2 2 2') == '2.5'\nassert solution('5\\n2 2 2 2 2\\n2 2 2 2 2') == '2.5'\nassert solution('7\\n2 2 2 2 2 2 2 2\\n2 2 2 2 2 2 2') == '2.5'\nassert solution('10\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == '2.5'\n",
        "num_ids_2": 44,
        "num_ids_4": 101
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n') == '2.666666666666667'\nassert solution('2\\n1 2\\n') == '1.0'\nassert solution('3\\n3 3 3\\n') == '2.0'\nassert solution('2\\n1 1\\n') == '0.5'\nassert solution('3\\n2 1 2\\n') == '1.666666666666667'\n",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n3 4 1 2\n''') == '2.666666666666667'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\nassert solution(stdin) == '2.666666666666667'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n3 4 1 2\"\"\") == 2.666666666666667\nassert solution(\"\"\"1\n4\n4 4 4 4\"\"\") == 1.0\nassert solution(\"\"\"5\n2\n1 2 3 4 5\"\"\") == 2.0\nassert solution(\"\"\"7\n2\n1 2 3 4 5 6 7\"\"\") == 4.5\nassert solution(\"\"\"100\n1\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\"\") == 50.0\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '[2.666666666666667]'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 1 2') == '2.666666666666667'\n\nInput\n4 5\n0 1 2 3 4\n\nOutput\n1.0\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 2.666666666666667\n\nInput\n3 1\n1 2 3\n\nOutput\n2.33333333333333\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n",
        "num_ids_2": 1429,
        "num_ids_4": 1429
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(example)) == 'YES'\nprint(solution(''.join(input())))\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n2 3''') == 'NO'\nassert solution('''1 2\n2 3''') == 'NO'\nassert solution('''1 2\n2 1''') == 'YES'\nassert solution('''2 4\n5 4 3 2 1\n3 2\n5 4\n1 2 3 4 5\n1 3\n1 3\n3 2\n1 2 4 3\n1 2\n1 3\n1 2 3\n3 2\n2 1 2 3''') == 'NO'\nassert solution('''2 4\n5 4 3 2 1\n3 2\n5 4\n1 2 3 4 5\n1 3\n1 3\n3 2\n1 2 4 3\n1 2\n1 3\n1 2 3\n3 2\n2 1 2 3''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\"\"\") == \"\"\"\\\nYES\nNO\nYES\nYES\nNO\nYES\nYES\"\"\"\nassert solution(\"\"\"\\\n2\n2\n1\n1\n2\n2\n1 2\n1 2\n1 1\"\"\") == \"\"\"\\\nNO\nNO\"\"\"\nassert solution(\"\"\"\\\n2\n3 2\n2 1 1\n1 1\n1 1\n2 1\n1 1\n1 1\"\"\") == \"\"\"\\\nYES\nYES\"\"\"\nassert solution(\"\"\"\\\n3\n3 2\n3 2 1\n2 1\n3 2\n2 1\n1 1\n1 2\n1 2\n1 2\n1 1\n2 1\n1 1\"\"\") == \"\"\"\\\nYES\nYES\"\"\"\nassert solution(\"\"\"\\\n3\n3 2\n3 2 1\n2 1\n3 2\n2 1\n1 1\n1 2\n1 2\n1 2\n1 1\n2 1\n1 1\n1 1\"\"\") == \"\"\"\\\nNO\nNO\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n1\n2\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\n-----Answer-----\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''.strip()) == 'YES'\n\nassert solution(\n'''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''.strip()) == 'NO'\n\nassert solution(\n'''\n5 4\n3 2\n5 2 1\n2 1\n4 2\n3 1 2\n2 1\n3 2\n2 2\n5 2 1\n2 1\n3 2\n3 2 1\n2 2\n4 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''.strip()) == 'YES'\n\nassert solution(\n'''\n5 4\n3 2\n5 2 1\n2 1\n4 2\n3 1 2\n2 1\n3 2\n2 2\n5 2 1\n2 1\n3 2\n3 2 1\n2 2\n4 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''.strip()) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n4 1 2 3\\n3 2\") == \"NO\"\nassert solution(\"1 2\\n4 1 2 3\\n3 2\\n3 2\\n3 2\") == \"YES\"\nassert solution(\"1 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3\") == \"YES\"\nassert solution(\"1 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3\") == \"NO\"\nassert solution(\"1 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3\") == \"NO\"\n",
        "num_ids_2": 50,
        "num_ids_4": 122
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bab') == 'bab'\nassert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('abracadabra') == 'abracadabra'\nassert solution('z') == 'z'\n",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '11'\nassert solution('bab') == 'baabbb'\nassert solution('baab') == 'baaba'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n''') == ''\nassert solution('''\nbab\n''') == 'bab'\nassert solution('''\nbaa\n''') == 'baa'\nassert solution('''\n''') == ''\nassert solution('''\nbab\n''') == 'bab'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n6\nbaabbb\n''') == 'bab'\nassert solution('''\\\n10\nooopppssss\n''') == 'oops'\nassert solution('''\\\n1\nz\n''') == 'z'\nassert solution('''\\\n4\naabb\n''') == 'aabb'\nassert solution('''\\\n5\nabbba\n''') == 'abbba'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\n",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\n\nprint(solution(stdin))",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nprint(\"Complete! Let's check it now\")",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 2') == ''\nassert solution('2 3 3') == ''\nassert solution('2 3 1') == ''\nassert solution('2 3 2') == ''\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n4 3 4\\n2 4 1\\n') == '1'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\n",
        "num_ids_2": 89,
        "num_ids_4": 145
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n3\\n3\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n4\\n4\\n1\\n1\\n3\\n3\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n3\\n2\\n1\\n1\\n\") == \"0\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 98
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '0'\nassert solution('''8 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''8 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\n\nassert solution('''\n1 0\n''') == '0'\n\nassert solution('''\n5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 3 2\") == \"0\"\nassert solution(\"2 4 5\") == \"0\"\nassert solution(\"1 4 2\") == \"1\"\nassert solution(\"3 5 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''3 3\n1 2 1\n4 3 4\n2 4 2\n''') == '0'\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('GB') == 'GRB'\nassert solution('RR') == 'GRB'\nassert solution('GB') == 'GRB'\nassert solution('RBRGB') == 'GRB'\nassert solution('BRGBRGB') == 'GRB'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcd\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nRB\n''') == '1\\nRB\\n'\nassert solution('''7\nRBRGGB\n''') == '3\\nRBRGRG\\n'\nassert solution('''10\nGGRBRGBGBGBGRGBGBGRGBGBGBGRGBGBGRGB\n''') == '3\\nGGRGRBGBGGRBGBGBGGRBGBGRBGBGBGBG\\n'\nassert solution('''12\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\n''') == '2\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\\n'\nassert solution('''32\n
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"B\") == \"\"\nassert solution(\"BB\") == \"\"\nassert solution(\"BRAB\") == \"B\"\nassert solution(\"RB\") == \"R\"\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('RGBRGBRGB') == 3\nassert solution('BRB') == 1\nassert solution('RGGBRB') == 1\nassert solution('RGGRRB') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'GB'\nassert solution('GBGB') == 'GBGB'\nassert solution('GBGBGB') == 'GBGBGB'\nassert solution('RGBRGBR') == 'RGBRGBR'\nassert solution('RRRRRRRR') == 'RRRRRRRR'\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('B') == 'B'\nassert solution('RR') == ''\nassert solution('GBRB') == 'GBRB'\nassert solution('GBGR') == 'GBRB'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\nBRB\n''') == '1'\nassert solution(\n'''\n7\nRGBGRBB\n''') == '3'\nassert solution(\n'''\n6\nRGBG\n''') == '3'\nassert solution(\n'''\n8\nRGGBRGB\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('RGBRGBRGB') == '3'\nassert solution('GB') == '2'\nassert solution('BRGBRGB') == '3'\nassert solution('RRGBB') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\nBRB\n\"\"\") == \"\"\"\n1\nGRB\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.10000000 BTC\") == \"48000.0\"\nassert solution(\"10000 JPY\") == \"48000.0\"\nassert solution(\"1000000 JPY\") == \"1098.0\"\nassert solution(\"90000000 JPY\") == \"999998.0\"\nassert solution(\"-110000000 JPY\") == \"-1999998.0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 JPY\\n2 BTC') == '2'\nassert solution('2 JPY\\n1 BTC') == '2'\nassert solution('3 JPY\\n2 BTC') == '6'\nassert solution('4 JPY\\n1 BTC') == '4'\nassert solution('5 JPY\\n1 BTC') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 JPY') == '1'\nassert solution('3 JPY') == '3'\nassert solution('1.0000000000 JPY') == '1'\nassert solution('3.0000000001 JPY') == '3'\nassert solution('1.0000000JPY') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1JPY') == '1.00000000'\nassert solution('1.00000000') == '1.00000000'\nassert solution('9.999999999') == '9.999999999'\nassert solution('1.000000001') == '1.000000002'\nassert solution('0.99999') == '0.99999'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n2 JPY\\n0.10000000 BTC\\n1 JPY\\n2 BTC\\n') == '7600.0'\nassert solution('4\\n1 JPY\\n0.10000000 BTC\\n1 JPY\\n2 BTC\\n2 JPY\\n3 BTC\\n') == '10680.0'\nassert solution('5\\n100000 JPY\\n0.00000000 BTC\\n100000 JPY\\n0.00000000 BTC\\n100000 JPY\\n0.00000000 BTC\\n100000 JPY\\n0.00000000 BTC\\n100000 JPY\\n0.00000000 BTC\\n') == '134784.0'\nassert solution('6\\n100000000 JPY\\n0.00000001 BTC\\n100000000 JPY\\n0.00000001 BTC\\n100000000 JPY\\n0.00000001 BTC\\n100000000 JPY\\n0.00000001 BTC\\n100000000 JPY\\n0.00000001 BTC\\n') == '134784.0'\n",
        "num_ids_2": 63,
        "num_ids_4": 184
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''3\n100000 JPY\n0.5 BTC\n30000 JPY\n2.8 BTC\n''') == '2.80000'\nassert solution('''4\n100000 JPY\n0.5 BTC\n30000 JPY\n2.8 BTC\n10.5 BTC\n''') == '10.50000'\nassert solution('''5\n100000 JPY\n0.5 BTC\n30000 JPY\n2.8 BTC\n10.5 BTC\n100000 BTC\n0.1 BTC\n''') == '100.0'\nassert solution('''6\n100000 JPY\n0.5 BTC\n30000 JPY\n2.8 BTC\n10.5 BTC\n100000 BTC\n0.1 BTC\n1 BTC\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\n\"\"\"\n    ) == \"48000.0\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('3\\n2000 JPY\\n1000 BTC\\n4000 JPY\\n5000 JPY') == '26000000.0'\nassert solution('4\\n10000 JPY\\n0.10000000 BTC\\n2000 JPY\\n1000 BTC\\n4000 JPY\\n5000 JPY') == '4520000.0'\nassert solution('5\\n10000 JPY\\n0.10000000 BTC\\n2000 JPY\\n1000 BTC\\n4000 JPY\\n5000 JPY\\n6000 JPY') == '5568000.0'\n",
        "num_ids_2": 47,
        "num_ids_4": 124
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"5 6\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '3'\nassert solution('2 2') == '1'\nassert solution('5 4') == '3'\nassert solution('3 3') == '2'\nassert solution('6 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[1]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('2 1') == '1'\nassert solution('4 3') == '3'\nassert solution('10 1') == '9'\nassert solution('10 2') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == input(\"\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('puplipun') == 'pupplipun'\nassert solution('ipcc') == 'icpp'\nassert solution('pupilippi') == 'pupipiilpi'\nassert solution('pupilipi') == 'pupilipi'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('abbbccd') == 'abccbbdc'\nassert solution('ttr') == 'ttgttr'\nassert solution('aa') == 'a'\nassert solution('bbb') == 'bbb'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == 'icpc'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('dvcccq') == 'dvcqcc'\nassert solution('lhjsnmmg') == 'gmhjqnsl'\nassert solution('kpfqwnmmg') == 'fqwnmnpk'\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ipcc') == 'icpc'\nassert solution('ipccc') == 'icpc'\nassert solution('ccipccc') == 'ccipccc'\nassert solution('ccipcccc') == 'ccipcccc'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ip cc') == 'icpc'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ipaa') == 'aipai'\nassert solution('ipa') == 'ipa'\nassert solution('aaipa') == 'aaipa'\nassert solution('aaipaa') == 'aaipaa'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"cppbmmleaywqkacnqmwzjhsvhvxgjdjsblf\") == \"ccipbmmleaywqkacnqmwzjhsvhvxgjdjsblff\"\nassert solution(\"iepb muxbqmfizxweeaiuoea ctbxlnjxueoauoouoixuoaqxoea\") == \"iepb muxbqmfizxweeaiuoeacctbxlnjxueoauoouoixuoaqxoea\"\nassert solution(\"nqhivhppgktwnhgfvuhcjbjlxuwxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxufbdxqxqdhnqxuhcjbjlxuxzvfnjxuf",
        "num_ids_2": 73,
        "num_ids_4": 1833
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"ABD\") == \"Yes\"\nassert solution(\"ABC\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('ABC') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('ABCABA') == 'Yes'\nassert solution('ABCAAB') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('ABBA') == 'Yes'\nassert solution('BABA') == 'Yes'\nassert solution('ABA') == 'Yes'\nassert solution('AB') == 'No'\n'''",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('AAB') == 'Yes'\nassert solution('BAB') == 'Yes'\nassert solution('ABB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"ABAB\") == \"No\"\nassert solution(\"ABABA\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAA') == 'No'\nassert solution('BBB') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('BAA') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABBA\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"BBA\") == \"Yes\"\nassert solution(\"BAB\") == \"Yes\"\nassert solution(\"AAB\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"ABB\") == \"Yes\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 3\nassert solution('RRS') == 2\nassert solution('RRR') == 3\nassert solution('RRS') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    stdin\n) == \"2\"\nassert solution(\n    \"RRR\"\n) == \"0\"\nassert solution(\n    \"RRS\"\n) == \"2\"\nassert solution(\n    \"RRS\"\n) == \"0\"\nassert solution(\n    \"R\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 1\nassert solution('RRRRS') == 0\nassert solution('RRSRS') == 2\nassert solution('RRRRSR') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRSR\") == \"2\"\nassert solution(\"RRRS\") == \"3\"\nassert solution(\"RRSRR\") == \"3\"\nassert solution(\"RRRSR\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('R') == '1'\nassert solution('RR') == '1'\nassert solution('RRS') == '2'\nassert solution('RRR') == '3'\nassert solution('RRSR') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == 2\nassert solution(\"RSRS\") == 1\nassert solution(\"RRSRS\") == 0\nassert solution(\"RRR\") == 3\nassert solution(\"RRSRRS\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RSR\") == \"3\"\nassert solution(\"RRR\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRRS') == '2'\nassert solution('RRRSRSRS') == '3'\nassert solution('RRRRSRRSR') == '3'\nassert solution('RRRRSRSRSRRRRRRS') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('R') == 0\nassert solution('RRS') == 2\nassert solution('RRR') == 0\nassert solution('RRRRS') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4') == '4 1 2 3'\nassert solution('1 2 3 4 5') == '5 1 2 4 3'\nassert solution('4 2 3 1') == '1 2 4 3'\nassert solution('1 2 3 4 5 6 7 8 9') == '2 3 4 5 1 6 7 8 9'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 1\") == \"2 1 1\"\nassert solution(\"1 2 1 2\") == \"1 2 2 1\"\nassert solution(\"1 2 1 2 2\") == \"1 2 1 1 2\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 4') == '4 1 2'\nassert solution('1 2 3 4') == '3 4 2 1'\nassert solution('1 2 3 4 5') == '5 4 3 2 1'\nassert solution('1 1 1') == '1 1 1'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('5 5 5') == '5 5 5'\nassert solution('1 2 3 4 5 6 7 8 9') == '9 7 6 5 4 3 2 1'\nassert solution('0 0 0') == '0 0 0'\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"2 1 3\"\nassert solution(\"3 2 1\") == \"1 3 2\"\nassert solution(\"1 3 2\") == \"3 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"99 6 7\") == \"7 99 6\"\nassert solution(\"50 50 50\") == \"50 50 50\"\nassert solution(\"0 0 0\") == \"0 0 0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"1 3 3\") == \"3 1 2\"\nassert solution(\"1 3 2\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('3 1 2') == '1 2 3'\nassert solution('1 2 3 4') == '2 4 1 3'\nassert solution('2 4 1 3') == '1 2 4 3'\nassert solution('1 2 3 4') == '1 2 4 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 100') == \"100\"\nassert solution('10 10') == \"10\"\nassert solution('20 30') == \"40\"\nassert solution('80 60') == \"160\"\nassert solution('100 120') == \"120\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(100)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\nassert solution('35 24') == '15'\nassert solution('40 51') == '100'\nassert solution('80 93') == '139'\nassert solution('40 51') == '139'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('30 100') == '100'\nassert solution('20 10') == '50'\nassert solution('11 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('30 100') == '100'\nassert solution('20 10') == '50'\nassert solution('40 100') == '100'\nassert solution('0 0') == '0'\nassert solution('15 50') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"100\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 100') == '100'\nassert solution('20 40') == '100'\nassert solution('30 100') == '100'\nassert solution('40 40') == '100'\nassert solution('50 50') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+++++\") == \"3\"\nassert solution(\"--++-\") == \"-1\"\nassert solution(\"+--++-\") == \"-1\"\nassert solution(\"++++++\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\nassert solution('+---+-++-+-++-++') == '5'\nassert solution('+--+-++--++--+-++') == '1'\nassert solution('+--+--++----++----+') == '-1'\nassert solution('+--++-++----+--++--') == '-2'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 31,
        "num_ids_4": 67
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('-++') == '0'\nassert solution('+++') == '1'\nassert solution('+++') == '2'\nassert solution('++-') == '-1'\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++-++-++\") == \"2\"\nassert solution(\"+-++-++-++\") == \"2\"\nassert solution(\"-++-++-++-++\") == \"2\"\nassert solution(\"++--++--++\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+-++') == \"2\"\nassert solution('-++-') == \"-1\"\nassert solution('-++--') == \"-3\"\nassert solution('+-++-++-++-') == \"-5\"\nprint(solution
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--++\") == \"3\"\nassert solution(\"+--++-++\") == \"4\"\nassert solution(\"+--++-++-++\") == \"5\"\nassert solution(\"+++-++-++-++\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('++-') == '2'\nassert solution('--++') == '1'\nassert solution('+-++') == '2'\nassert solution('++++') == '3'\nassert solution('+-++-') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+++') == '2'\nassert solution('+-++-++') == '2'\nassert solution('+-++-+++') == '2'\nassert solution('+-++-++-++') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--++-\") == \"3\"\nassert solution(\"+--++-++-++\") == \"5\"\nassert solution(\"+--++-++-++-++\") == \"10\"\nassert solution(\"-++-++-++-++-++\") == \"-15\"\n",
        "num_ids_2": 25,
        "num_ids_4": 59
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2019/04/31\") == \"Heisei\"\nassert solution(\"2019/05/30\") == \"TBD\"\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/01/01') == 'TBD'\nassert solution('2019/12/30') == 'Heisei'\nassert solution('2019/05/29') == 'TBD'\nassert solution('2019/06/29') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('20/04/29') == 'TBD'\nassert solution('20/04/30') == 'Heisei'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2019/06/30') == 'Heisei'\nassert solution('2019/07/30') == 'Heisei'\nassert solution('2019/08/30') == 'Heisei'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2019/06/30') == 'Heisei'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\n\nprint(\"All test cases passed successfully!\")\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/01') == 'TBD'\nassert solution('2019/05/02') == 'TBD'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2019/04/30) == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/01/01\") == \"TBD\"\nassert solution(\"2019/02/28\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/31\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\n",
        "num_ids_2": 53,
        "num_ids_4": 71
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '4'\nassert solution('2\\n3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\nassert solution('3\\n1337 1337 1337\\n3 3 6 6') == '3'\n\n\n\"\"\"\n\n\"\"\"\n\nCodingBat\n\n\"\"\"",
        "num_ids_2": 53,
        "num_ids_4": 95
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n2\\n3\\n1\\n1\\n2\\n3\\n1\\n1\\n2\\n1\\n2\\n3\\n2\\n2\\n1\\n3\\n1\\n2\\n3\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n",
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337\\n') == '3'\nassert solution('3\\n1 3 1\\n') == '1'\n\"\"\"\n",
        "num_ids_2": 57,
        "num_ids_4": 94
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\n\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''18''') == '14'\nassert solution('''10''') == '9'\nassert solution('''3''') == '3'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\nassert solution('''0\n2 2\n''') == '2'\nassert solution('''4\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '9'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337\\n') == '3'\n\n\n\"\"\"\n",
        "num_ids_2": 57,
        "num_ids_4": 77
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom sys import stdin,stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2 3 4') == '1\\n2 3\\n'\nassert solution('3 3\\n1 2 3') == '1\\n2\\n3\\n'\nassert solution('2 2\\n1 2') == '1\\n2\\n'\nassert solution('2 1\\n1') == '1\\n'\nassert solution('1 1\\n') == '\\n'\n",
        "num_ids_2": 47,
        "num_ids_4": 83
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''7 3\n1 2 3 2 1 3 2''') == '2'\nassert solution('''7 4\n1 2 3 2 1 3 2''') == '3'\nassert solution('''7 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\n\n\n-----Alternate Solutions-----\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nThe only difference between easy and hard versions are constraints on $n$ and $k$.\n\nYou are messaging in one of the popular social networks via your smartphone. Your smartphone can show at most $k$ most recent conversations with your friends. Initially, the screen is empty (i.e. the number of displayed conversations equals $0$).\n\nEach conversation is between you and some of your friends. There is at most one conversation with any of your friends. So each conversation is uniquely defined by your friend.\n\nYou (suddenly!) have the ability to see the future. You know that during the day you will receive $n$ messages, the $i$-th message will be received from the friend with ID $id_i$ ($1 \\le id_i \\le 10^9$).\n\nIf you receive a message from $id_i$ in the conversation which is currently displayed on the smartphone then nothing happens: the conversations of the screen do not change and do not change their order, you read the message and continue waiting for new messages.\n\nOtherwise (i.e. if there is no conversation with $id_i$ on the screen):  Firstly, if the number of conversations displayed on the screen is $k$, the last conversation (which has the position $k$) is removed from the screen.  Now the number of conversations on the screen is guaranteed to be less than $k$ and the conversation with the friend $id_i$ is not displayed on the screen.  The conversation with the friend $id_i$ appears on the first (the topmost) position on the screen and all the other displayed conversations are shifted one position down. \n\nYour task is to find the list of conversations (in the order they are displayed on the screen) after processing all $n$ messages.\n\nIn the first example the list of conversations will change in the following way (in order from the first to last message):  $[]$;  $[1]$;  $[2, 1]$;  $[3, 2]$;  $[3, 2]$;  $[1, 3]$;  $[1, 3]$;  $[2, 1]$. \n\nIn the second example the list of conversations will change in the following way:  $[]$;  $[2]$;  $[3, 2]$;  $[3, 2]$;  $[1, 3, 2]$;  and then the list will not change till the end.\n\nInput\n7 2\n1 2 3 2 1 3 2\n\nOutput\n2\n2 1 \n\nInput\n10 4\n2 3 3 1 1 2 1 2 3 3\n\nOutput\n3\n1 3 2 \n\n\n-----Note-----\n\nIn the first example the list of conversations will change in the following way (in order from the first to last message):  $[]$;  $[1]$;  $[2, 1]$;  $[3, 2]$;  $[3, 2]$;  $[1, 3]$;  $[1, 3]$;  $[2, 1]$. \n\nIn the second example the list of conversations will change in the following way:  $[]$;  $[2]$;  $[3, 2]$;  $[3, 2]$;  $[1, 3, 2]$;  and then the list will not change till the end.\n\"\"\"\n\nfrom collections import deque\nfrom typing import Deque, List, Tuple",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2 3 2 1 3 2') == '2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('2 2\\n1 2 3 2 1 3 2') == '2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('4 4') == '3'\nassert solution('4 3') == '2'\nassert solution('4 4 3') == '2 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''15 4\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''10 4''') == '3'\nassert solution('''5 4''') == '2'\nassert solution('''5 5''') == '2'\nassert solution('''1 1''') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 3 3\\n1 3 2\") == \"3\\n1 3 2\"\nassert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"3 2\\n2 3 3\\n1 3 2\\n1 1\") == \"2\"\nassert solution(\"3 2\\n2 3 3\\n1 3 2\\n2 2\") == \"1 3 2\"\nassert solution(\"3 2\\n2 3 3\\n1 3 2\\n2 1\") == \"1 3 2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 93
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom math import log2",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\n\nNote\nThe \"money\" data structure is implemented with a dictionary data structure.\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"1\n-1\n3\n2\n2\n\"\"\"\n\nassert solution(\n    \"\"\"1\n1\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n4\n5\n6\n7\n8\n9\n9\n9\n10\n10\n11\n12\n12\n12\n13\n14\n15\n16\n18\n19\n20\n\"\"\") == \"\"\"3\n1\n1\n1\n1\n3\n3\n4\n1\n3\n3\n3\n3\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n4\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\n(We read $n$ and $q$ from the standard input and $n$ integers $a_1, a_2, \\dots, a_n$ from the standard input.)\n\nFor each $j$ from $1 \\le j \\le q$, the query is the integer number $b_j$.\n\nThe answer to the $j$-th query is the minimum number of coins that is necessary to obtain the value $b_j$ using some subset of coins ($b_j$ can be obtained by taking some subset of the coins in the same way as Polycarp. For example, if there are $2$, $4$, $8$, $2$, $4$, and $8$ coins, the minimum number of coins necessary to get the value $b_j$ is $1$ plus the number of coins in the same way as Polycarp. In the second case, we have $4$, $8$, $2$, $4$, and $8$ coins, we have $2$ coins to get the value $b_j$, we have $1$ and $2$ coins to get the value $4$, and $4$ coins to get the value $8$. If Polycarp can't obtain the value $b_j$, the answer to the $j$-th query is -1.\n\nThe final line contains $q$ integers $ans_j$ \u2014 the answer to the $j$-th query.\n\nInput Sample\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\nOutput Sample\n1\n-1\n3\n2\n\nInput Explanation\nIn the first test case, there are $5$ coins, the value of the $1$-th coin is $2$, the value of the $2$-th coin is $4$, the value of the $3$-th coin is $8$, the value of the $4$-th coin is $2$, and the value of the $5$-th coin is $4$.\n\nIn the second test case, Polycarp can obtain the value $14$ in the same way as Polycarp, so the answer to the $1$-th query is $1$, the answer to the $2$-th query is $1$, the answer to the $3$-th query is $3$, and the answer to the $4$-th query is $3$.\n\nIn the third test case, there are $5$ coins, the value of the $1$-th coin is $2$, the value of the $2$-th coin is $4$, the value of the $3$-th coin is $8$, the value of the $4$-th coin is $2$, and the value of the $5$-th coin is $4$.\n\nIn the fourth test case, Polycarp can't obtain the value $10$ in the same way as Polycarp, so the answer to the $1$-th query is -1, the answer to the $2$-th query is -1, the answer to the $3$-th query is -1, and the answer to the $4$-th query is -1.\n\nIn the fifth test case, there are $5$ coins, the value of the $1$-th coin is $2$, the value of the $2$-th coin is $4$, the value of the $3$-th coin is $8$, the value of the $4$-th coin is $2$, and the value of the $5$-th coin is $4$.\n\nIn the sixth test case, Polycarp can obtain the value $14$ in the same way as Polycarp, so the answer to the $1$-th query is $1$, the answer to the $2$-th query is $1$, the answer to the $3$-th query is $3$, and the answer to the $4$-th query is $3$.\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '1\\n-1\\n3\\n2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n\n'''\n\"yes\"\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nn, q = map(int, sys.stdin.readline().split())\nA = [int(x) for x in sys.stdin.readline().split()]\nfor _ in range(q):\n    b = int(sys.stdin.readline())\n    l, r = 1, 1\n    for i in range(n):\n        if A[i] < l:\n            l = A[i]\n        if A[n - 1 - i] < r:\n            r = A[n - 1 - i]\n        if l > r:\n            break\n        l *= 2\n        r *= 2\n    if l > b:\n        print(-1)\n    else:\n        print(min(b - l + 1, r - b + 1))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 4\n2 4 8 2 4\n8\n5\n14\n10\"\"\"\n) == \"\"\"1\n-1\n3\n2\n2\"\"\"\n\nassert solution(\n\"\"\"10 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"\"\"1\n-1\n2\n3\n2\"\"\"\n\nassert solution(\n\"\"\"10 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"\"\"1\n-1\n2\n3\n2\"\"\"\n\nassert solution(\n\"\"\"20 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"\"\"1\n-1\n3\n2\n2\"\"\"\n\nassert solution(\n\"\"\"20 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"\"\"1\n-1\n3\n2\n2\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n11\n''') == '2\\n1\\n2\\n3\\n-1\\n'\n'''\nSample test case:\nYour first line of input contains the number of tests, $T$,\n$T$ lines follow, each containing two integers, $n$ and $q$,\nthe number of coins and the number of queries.\n\nYour second line contains $n$ integers $a_1, a_2, \\dots, a_n$,\nthe values of the coins ($1 \\le a_i \\le 2 \\cdot 10^9$).\n\nYour third line contains $q$ integers $b_1, b_2, \\dots, b_q$,\nthe values of the queries ($1 \\le b_j \\le 10^9$).\n\nYour fourth line contains $q$ integers $c_1, c_2, \\dots, c_q$,\nthe answers to the queries ($1 \\le c_j \\le 10^9$).\n\nThe next $q$ lines contain one integer each, the answer to the $j$-th query.\n\nPrint $q$ lines, each containing an integer equal to the answer on the $j$-th query.\n\nIf Polycarp can't obtain the value $b_j$ he will say -1 instead.\n\nFinally, print the total amount of coins Polycarp has, i.e. the total amount of coins he can use to attain any value in $b_j$.\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''5 4\n2 4 8 2 4\n8\n10\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''6 5\n2 4 2 2 2 2\n7\n3\n2\n1\n4\n2\n''') == '1\\n2\\n1\\n-1\\n-1\\n3\\n'\n\nassert solution('''6 5\n2 4 2 2 2 2\n7\n3\n2\n1\n4\n2\n''') == '1\\n2\\n1\\n-1\\n-1\\n3\\n'\n\nassert solution('''7 5\n2 4 2 2 2 2\n7\n3\n2\n1\n4\n2\n''') == '1\\n2\\n1\\n-1\\n-1\\n3\\n'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n2 6 7\n\"\"\"\n) == \"21\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 3\\n1 2 3') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('5 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n') == '21'\nassert solution('5 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n') == '21'\n",
        "num_ids_2": 55,
        "num_ids_4": 138
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n1 1 1 1\n2 1 1\n''') == '2'\n'''\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('5 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n') == '21'\nassert solution('2 3\\n1 2\\n1 2\\n') == '0'\nassert solution('1 2\\n1 2\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '1'\n",
        "num_ids_2": 88,
        "num_ids_4": 126
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\nassert solution('1 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\nassert solution('2 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 130
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 4\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('5 5\\n5 5 5 5 5 5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5",
        "num_ids_2": 72,
        "num_ids_4": 1274
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''4 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''4 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n1 1 2') == '0'\nassert solution('1 1 1\\n1 1 2') == '2'\nassert solution('2 2 1\\n2 3 2') == '2'\nassert solution('2 8 10\\n2 9 12') == '2'\nassert solution('3 2 1\\n3 3 2') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1368,
        "num_ids_4": 1368
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '0'\nassert solution('2 8 10') == '2\\n2 2 1'\nassert solution('2 4 6 6 6') == '2'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 1 2 3 4') == '1\\n1 1 2\\n1 1 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0\\n0\\n0'\nassert solution('2\\n1 2 1\\n1 1 2') == '2\\n1 1 2\\n1 2 1'\nassert solution('3\\n1 3 1\\n1 1 3') == '2\\n1 1 3\\n1 2 2'\nassert solution('4\\n1 1 1 1\\n1 1 1 1') == '0\\n0\\n0\\n0'\nassert solution('5\\n2 4 6 6 6\\n6 6 6 6 6') == '2\\n1 2 3'\n",
        "num_ids_2": 55,
        "num_ids_4": 116
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 6 6 6') == '2'\nassert solution('3\\n2 8 10') == '2'\nassert solution('4\\n1 1 1 1') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''1\n1 1 1 1''') == '0'\nassert solution('''1\n1 1 1 1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''4\n2 4 6 6 6\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1 1\n1 1 1 1\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"2\"\nassert solution(\"1\\n1 2 2\\n1 3 3\\n1 4 4\\n1 5 5\") == \"2\\n1 1 2\\n1 2 1\"\nassert solution(\"2\\n1 1 1\\n1 1 2\\n1 1 2\") == \"2\\n2 2 1\\n2 2 1\"\nassert solution(\"2\\n1 1 1\\n1 1 2\\n1 1 2\") == \"2\\n2 2 1\\n2 2 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 103
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\"\"\"\n------Alternate Solution------\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\n\nfor _ in range(int(stdin.readline().strip())):\n    n, k = map(int, stdin.readline().strip().split())\n    s = stdin.readline().strip()\n    t = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            t += 1\n        else:\n            t = max(0, t - k)\n    print(t)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Hello, world') == 'Hello, world'\nassert solution('This is a test') == 'This is a test'\nassert solution('1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 30,
        "num_ids_4": 1182
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n\nassert solution('''\n6 1\n10 30\n6 2\n00000\n5 1\n010101\n3 1\n0101\n2 2\n00\n1 1\n0\n''') == '0'\n\nassert solution('''\n6 1\n10 30\n6 2\n00000\n5 1\n100100\n3 1\n010101\n3 1\n010101\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''\n6 1\n10 30\n6 2\n00000\n5 1\n10010001\n3 1\n010101\n3 1\n010101\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''\n6 1\n10 30\n6 2\n00000\n5 1\n10010001\n3 1\n01010101\n3 1\n01010101\n2 2\n00\n1 1\n0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '4\\n1 3 5'\nassert solution('7 1') == '3\\n1 4 5'\nassert solution('3 1') == '2\\n1'\nassert solution('5 2') == '4\\n1 3'\nassert solution('5 1') == '3\\n1'\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3''') == '4'\nassert solution('''8 1\n10 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n7 8''') == '3'\nassert solution('''8 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n7 8''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '1 3'\nassert solution('11 11') == '0'\nassert solution('29 30') == '3'\nassert solution('30 30') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3''') == '3'\nassert solution('''3 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3''') == '1'\nassert solution('''3 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3''') == '2'\nassert solution('''3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n''') == '3'\nassert solution('''3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''2 1\n4 4\n1 1\n1 2\n2 2\n3 3\n3 3\n''') == '0'\nassert solution('''1 1\n4 4\n1 1\n1 2\n2 2\n3 3\n3 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3\\n4 6 7'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '4\\n1 3 5 6'\n",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '1'\nassert solution('1\\n2\\n1\\n1') == '1'\nassert solution('1\\n2\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 3\\n3 3\\n2 2\\n2 3\\n2 3') == '1 3 5 6'\nassert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3'\nassert solution('7 3\\n2 3\\n3 3\\n2 2\\n2 3\\n2 3\\n2 3') == '3'\nassert solution('7 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n29 29\\n28 30') == '3'\nassert solution('7 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n29 29\\n28 30') == '3'\n",
        "num_ids_2": 73,
        "num_ids_4": 147
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\") == \"2\\n1\"\nassert solution(\"3\\n2\") == \"3\\n1\"\nassert solution(\"3\\n3\") == \"3\\n2\"\nassert solution(\"3\\n3\") == \"3\\n2\"\nassert solution(\"3\\n3\") == \"3\\n2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\"\"\") == \"30\\n31\\n10\\n\"\n\nassert solution(\n\"\"\"2\n4\n7 8 10 9\n3\n5 4 6\"\"\"\n) == \"12\\n10\\n\"\n\nassert solution(\n\"\"\"1\n1\n5\n1 2 3 4 5\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"2\n3\n3 3 3 3\n4\n7 8 9 1\"\"\"\n) == \"10\\n\"\n\nassert solution(\n\"\"\"3\n4\n1 2 3 4\n5\n5 4 3 2 1\"\"\"\n) == \"5\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\n'''\n\nInput\n2\n5\n8 17 4 19 5\n2\n6 10 18\n\nOutput\n16\n17\n\nInput\n2\n7\n3 4 6 5 7 8\n3\n2 4 4\n\nOutput\n18\n19\n\nInput\n3\n9\n9 8 7 6 5 4 3 2 1\n7\n1 3 5 7 9 4 6 8\n6\n3 1 2 4 5 6 7\n\nOutput\n6\n7\n8\n\nInput\n3\n9\n8 7 6 5 4 3 2 1\n7\n3 2 4 5 7 6 8\n6\n2 1 4 3 5 6 7\n\nOutput\n8\n9\n10\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n1\\n1\\n\"\nassert solution(\"2\\n3\\n2\\n\") == \"3\\n3\\n2\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\\n2\\n2\\n\"\nassert solution(\"5\\n5\\n5\\n\") == \"5\\n5\\n5\\n\"\nassert solution(\"2\\n5\\n5\\n5\\n\") == \"5\\n5\\n5\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n6\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n6\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 5''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 5''') == '31'\nassert solution('''3\n6\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 5''') == '30'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n3\") == \"\"\nassert solution(\"3\\n4\\n3\") == \"\"\nassert solution(\"3\\n4\\n5\\n6\\n3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''1\n2\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''1\n2\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 4''') == '10'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nfrom sys import stdin, stdout",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n-5 -1 -3''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3''') == '30'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30 31 10'\nassert solution('''2\n5\n5 5 5 5\n5\n5 5 5 5\n2\n2 3 4\n1\n3\n5\n5\n2\n3''') == '30 30 30 30 30 30 30 30 30'\nassert solution('''3\n4\n3 1 2 3\n5\n4 4 4 4 4 4\n3\n4 4 4\n2\n4 4\n5\n4 4 4\n1\n4\n5\n3\n1\n2\n3\n1\n2\n4\n2\n3\n1\n2\n4\n2\n3\n1''') == '454545454545454545454545454545454545'\nassert solution('''2\n5\n5 5 5 5\n5\n5 5 5 5\n2\n2 3 4\n1\n3\n5\n5\n2\n3''') == '30 30 30 30 30 30 30 30 30'\nassert solution('''2\n5\n5 5 5 5\n5\n5 5 5 5\n2\n2 3 4\n1\n3\n5\n5\n2\n3\n3''') == '30 30 30 30 30 30 30 30'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n2 1 2''') == '1'\nassert solution('''2\n2\n3 6''') == '1'\nassert solution('''2\n4\n2 10 1 20''') == '2'\nassert solution('''1\n3\n2 3 4''') == '2'\nassert solution('''1\n1\n42''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\n",
        "num_ids_2": 99,
        "num_ids_4": 186
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('6\\n6\\n2 3 4 5 6 7\\n2\\n1 3 4\\n5\\n1 2 3 4 5 6\\n1\\n42') == '1\\n1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('6\\n6\\n2 3 4 5 6 7\\n2\\n1 3 4\\n5\\n1 2 3 4 5 6\\n1\\n42') == '1\\n1'\n",
        "num_ids_2": 100,
        "num_ids_4": 170
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n3''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n1''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n3''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2\\n1'\nassert solution('2\\n4\\n2 10 1 20\\n2\\n4') == '2\\n2\\n2\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1') == '2\\n2\\n1\\n2\\n1\\n2\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2\\n2\\n1\\n2\\n1\\n2\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1'\n",
        "num_ids_2": 69,
        "num_ids_4": 164
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"2\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"3\\n3\") == \"1\"\nassert solution(\"1\\n2\\n2\") == \"1\"\nassert solution(\"2\\n1\\n2\\n3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_stdout\n\"\"\"\n\nfrom itertools import combinations\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Hello\") == \"NO\"\nassert solution(\"You are Awesome\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 6\") == \"YES\"\nassert solution(\"5 2 6 27\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n1 1 1 1''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'YES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n2\\n3\\n6') == 'NO'\nassert solution('5\\n2\\n6\\n27') == 'YES'\nassert solution('3\\n3\\n5\\n18') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n1\\n2\\n3\\n4') == 'NO'\n\n\n\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''3 1 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''4 1 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n5 5 5 5''') == 'YES'\nassert solution('''4 1 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n5 5 5 5''') == 'NO'\nassert solution('''5 1 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n5 5 5 5''') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nYES\\nNO\\nYES'\n'''\n\n'''\nRight answer: https://www.hackerrank.com/challenges/two-arrays/solution\n'''\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == \"NO\"\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == \"YES\"\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == \"YES\"\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n4 3 5 18''') == \"YES\"\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\\n\") == \"YES\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 2 3 4\\n\") == \"NO\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n') == 'YES'\nassert solution('4\\n') == 'YES'\nassert solution('3\\n') == 'NO'\nassert solution('1 2 3\\n') == 'NO'\nassert solution('3 1 2 1\\n') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 0 1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\n\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\n\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\n\nassert solution('''5\n0 1 2 1 2\n''') == 'YES'\n\nassert solution('''5\n2 1 2 1 2\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7\\n5'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3 7\\n5'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO'\n",
        "num_ids_2": 60,
        "num_ids_4": 98
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3\\n4 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3\\n4 7\\n5\\n7 4 3 2 1\\n'\n",
        "num_ids_2": 81,
        "num_ids_4": 123
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n4\\n4\") == \"YES\"\nassert solution(\"3\\n3\\n3\\n3\") == \"YES\"\nassert solution(\"5\\n5\\n5\\n5\") == \"YES\"\nassert solution(\"4\\n4\\n4\\n4\") == \"YES\"\nassert solution(\"5\\n5\\n5\\n5\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"YES\\n0\"\nassert solution(\"1\\n2\\n3\") == \"NO\"\nassert solution(\"1\\n3\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n2\\n3\") == \"NO\"\nassert solution(\"1\\n1\\n2\\n3\\n4\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n7\n7 2 7 3 3 1 4\n\"\"\") == \"\"\"\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n5\n4 3 1 5 3\n\"\"\") == \"\"\"\nYES\n1\n3 \n4\n5 4 3 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"\"\"\nNO\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"\"\"\nYES\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"\"\"\nYES\n1\n3 \n4\n5 4 3 1 \n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == '18'\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == '8'\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == '-1'\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == '-1'\nassert solution(\"6 4\\n9 0 0\\n1 0 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n3 0 0\\n\") == '18'\n",
        "num_ids_2": 89,
        "num_ids_4": 167
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 4''') == '18'\nassert solution('''7 1 1''') == '18'\nassert solution('''2 1 1''') == '18'\nassert solution('''4 0 1''') == '18'\nassert solution('''8 1 1''') == '18'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n1 0 1\\n') == '-1'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n1 0 1\\n1 0 1\\n') == '-1'\n",
        "num_ids_2": 89,
        "num_ids_4": 172
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 91,
        "num_ids_4": 129
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-\"\nassert solution(\"5 4\") == \"8\"\nassert solution(\"5 5\") == \"-\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1') == '-1'\n\n\n\"\"\"\n",
        "num_ids_2": 87,
        "num_ids_4": 124
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 2') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'\nassert solution('2 4') == '-1'\nassert solution('1 2 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('4\\n1\\n1\\n2\\n3\\n1') == '2'\nassert solution('5\\n1\\n1\\n2\\n3\\n1') == '6'\nassert solution('5\\n1\\n1\\n2\\n3\\n1') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 76
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n\nassert solution(\n'''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n\nassert solution(\n'''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n\nassert solution(\n'''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n\nassert solution(\n'''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\\n6\\n-1\"\nassert solution(\n\"\"\"4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\\n6\\n-1\"\nassert solution(\n\"\"\"4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\\n6\\n-1\"\nassert solution(\n\"\"\"4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\\n6\\n-1\"\nassert solution(\n\"\"\"4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\\n6\\n-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\n\nassert solution('''2 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\n\nassert solution('''3 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '-1'\n\nassert solution('''1 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\n\nassert solution('''2 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n-1'\n\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\n\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\n\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\n\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\"\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2') == '2'\nassert solution('2\\n1\\n2') == '2'\nassert solution('1\\n3\\n1\\n1') == '3'\nassert solution('2\\n3\\n4\\n1') == '4'\nassert solution('1\\n1\\n1\\n1') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '2'\nassert solution('5\\n1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '2'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '2'\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 99
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n4 8 15 16 23\n\"\"\") == \"\"\"5\n\"\"\".strip()\n\nassert solution(\"\"\"12\n4 8 4 15 16 8 23 15 16 4 42 23 42\n\"\"\") == \"\"\"0\n\"\"\".strip()\n\nassert solution(\"\"\"15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"\"\"3\n\"\"\".strip()\n\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12') == '0'\nassert solution('15') == '3'\nassert solution('23') == '2'\nassert solution('42') == '1'\nassert solution('1234') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1\\n1') == '1'\nassert solution('3\\n1 2\\n1 2 3') == '2'\nassert solution('4\\n4 8 4 4 8 4 4 8 4 4 4 8 4 4 4 4') == '0'\nassert solution('5\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 4 42 23 42\\n') == '0'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\nassert solution('6\\n4 8 4 15 16 8 16 22 23 15 16 4 42 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22",
        "num_ids_2": 46,
        "num_ids_4": 1461
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '0'\nassert solution('''4 8 15 16 23''') == '5'\nassert solution('''12''') == '0'\nassert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '3'\nassert solution('''15''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5 6') == 1\nassert solution('1 2 3 4 5 6 7') == 2\nassert solution('1 2 3 4 5 6 7 8') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 0\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 8 15 16 23\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0'\nassert solution('5\\n4 8 15 16 23\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '5'\nassert solution('15\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\nassert solution('4\\n1 2 3 4\\n4 5 6 7\\n7 8 9 10\\n11 12 13 14\\n14 15 16 17 18 19\\n19 20 21 22 23 24\\n23 24 25 26 27 28 29\\n29 30 31 32 33 34 35\\n34 35 36 37 38 39 40\\n40 41 42 43 44 45 46 47 48 49\\n49 50 51 52 53 54 55 56 57 58 59\\n59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\nn') == '3'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\n",
        "num_ids_2": 63,
        "num_ids_4": 397
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '0'\nassert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '3'\nassert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '0'\nassert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '0'\nassert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '0'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n1\\n') == '1'\nassert solution('11\\n2\\n') == '2'\nassert solution('17\\n2\\n') == '3'\nassert solution('48\\n6\\n') == '5'\nassert solution('80\\n35\\n') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == '0'\nassert solution('4 6') == '3'\nassert solution('13 42') == '2'\nassert solution('1337 420') == '2'\nassert solution('123456789 1000000000') == '9150'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == ''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n'\n                '5 5\\n'\n                '13 42\\n'\n                '18 4\\n'\n                '1337 420\\n'\n                '123456789 1000000000\\n'\n                '100500 9000') == '0\\n'\n\nassert solution('2\\n'\n                '5 5\\n'\n                '13 42\\n'\n                '18 4\\n'\n                '1337 420\\n'\n                '123456789 1000000000\\n'\n                '100500 9000') == '3\\n'\n\nassert solution('2\\n'\n                '1234\\n'\n                '1234') == '1\\n'\n\nassert solution('2\\n'\n                '5 5\\n'\n                '1542\\n'\n                '1542') == '2\\n'\n\nassert solution('2\\n'\n                '5 5\\n'\n                '1946\\n'\n                '1946') == '3\\n'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1, 2') == '0'\nassert solution('10, 20') == '3'\nassert solution('100, 200') == '2'\nassert solution('5, 5') == '0'\nassert solution('13, 42') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '92'\nassert solution('123456789 1000000000') == '9150'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n\nfrom math import log10\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 10') == '1'\nassert solution('10 1') == '1'\nassert solution('100 10') == '101'\nassert solution('1 1000000000') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1000000000') == '0'\nassert solution('100500 9000') == '3'\nassert solution('1342 42') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 4') == '2'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '999999995'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string\n\n\"\"\"\n\nfrom sys import stdin, stdout\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '12339'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '0'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '15'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '54306'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '999999995'\n",
        "num_ids_2": 107,
        "num_ids_4": 214
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '1\\n0\\n1\\n2\\n3\\n4\\n5\\n6'\nassert solution('2\\n1\\n0\\n10\\n100') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('3\\n5\\n2\\n9\\n4\\n1') == '5\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('4\\n6\\n3\\n2\\n1') == '6\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('5\\n7\\n4\\n3\\n2\\n1') == '7\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n",
        "num_ids_2": 98,
        "num_ids_4": 211
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0\\n10\") == '0'\nassert solution(\"1\\n0\\n10\") == '0'\nassert solution(\"1\\n1\\n10\") == '0'\nassert solution(\"2\\n1\\n10\") == '1'\nassert solution(\"2\\n2\\n10\") == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n7 5 12345') == '12339'\nassert solution('5\\n0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '15'\nassert solution('10\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '54306'\nassert solution('20\\n1 1 2\\n2 2 1') == '2'\nassert solution('20\\n1 1 2\\n2 1 1') == '1'\n",
        "num_ids_2": 64,
        "num_ids_4": 133
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n7 1 10') == '0\\n9\\n9\\n9\\n1\\n0\\n0'\n",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"999999995\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2\\n2\\n3\\n1\\n2') == '5'\nassert solution('1\\n3\\n2\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2') == '5'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n100\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000') == '1000000'\nassert solution('10\\n7\\n5\\n4\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 71,
        "num_ids_4": 1561
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3\\n1 2 2 3 2 4 5\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('10 4\\n1 2 2 3 2 4 6 9 10 11 12\\n') == '6'\nassert solution('10 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 3 2 4 10') == '6'\nassert solution('1 2 2 3 2 4 6 10') == '8'\nassert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\\n\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\\n\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\\n\") == \"4\"\n",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('6 8\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('10 1\\n7') == '7'\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\nassert solution('''8 3\n1 2 2 3 2 4 6 10''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 3 2 4 10\\n1 2 2 3 2 4 6 10\\n') == '6'\nassert solution('2 3 2 3 2 4 10\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n",
        "num_ids_2": 56,
        "num_ids_4": 101
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n\n\"\"\"\n\nfrom collections import Counter\nfrom math import ceil, floor\nfrom sys import stdin, stdout\n\n_, k = map(int, stdin.readline().strip().split(' '))\nd = Counter(map(int, stdin.readline().strip().split(' ')))\n\nleft = 0\nfor i in d:\n    left += (d[i] - 1) * k\nleft = left % (2 * k)\n\nleft = int(ceil(left / 2))\nstdout.write(str(left))\n\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('1 1\\n1\\n') == '1'\n\n\"\"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 83
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 3 2 4 10\\n') == '6'\nassert solution('1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('1\\n1\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 82
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'aBC'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc', 1) == 'abc'\nassert solution('abc', 2) == 'bca'\nassert solution('abc', 3) == 'cab'\nassert solution('abc', 4) == 'cba'\nassert solution('abc', 5) == 'abc'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1', '') == ''\nassert solution('3 1', 'AB') == 'aB'\nassert solution('3 1', 'ABC') == 'aB'\nassert solution('3 1', 'ABCDE') == 'aB'\nassert solution('3 2', 'ABC') == 'AB'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\", \"abc\", 3) == \"aBC\"\nassert solution(\"A\", \"B\", 2) == \"AB\"\nassert solution(\"abc\", \"ABC\", 3) == \"aBC\"\nassert solution(\"ab\", \"ABC\", 3) == \"aBC\"\nassert solution(\"abc\", \"ABC\", 4) == \"abcd\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\nassert solution('3 1\\nXZY') == 'xzY'\nassert solution('3 1\\nAaBbC') == 'aabc'\nassert solution('3 1\\nAcCbC') == 'accb'\nassert solution('3 1\\nAbCbC') == 'abcb'\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc', 1) == 'abc'\nassert solution('ABC', 1) == 'aBC'\nassert solution('abc', 2) == 'bAC'\nassert solution('ABC', 2) == 'bAC'\nassert solution('abc', 3) == 'cAB'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aBC\", \"1\") == \"aBC\"\nassert solution(\"ABC\", \"1\") == \"ABC\"\nassert solution(\"ABC\", \"2\") == \"AB\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 1\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '1 5 2 3 4 6'\nassert solution('khabarovsk 1\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '1 2 3 4 6 5'\nassert solution('khabarovsk 1\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '1 2 3 4 6 5'\nassert solution('khabarovsk 1\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '1 2 3 4 6 5'\n",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('3') == '3'\nassert solution('khabarovsk 20') == '3'\nassert solution('moscow 10') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\nkhabarovsk 10\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\"\nassert solution(\"1\\na 10\\nb 10\\nc 10\\nd 10\\ne 10\\nf 10\\ng 10\\nh 10\\ni 10\\nj 10\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"1\\nab 10\\nb 10\\nc 10\\nd 10\\ne 10\\nf 10\\ng 10\\nh 10\\ni 10\\nj 10\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"1\\na 10\\nb 10\\nc 10\\nd 10\\ne 10\\nf 10\\ng 10\\nh 10\\ni 10\\nj 10\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"1\\na 10\\nb 10\\nc 10\\nd 10\\ne 10\\nf 10\\ng 10\\nh 10\\ni 10\\nj 10\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n",
        "num_ids_2": 116,
        "num_ids_4": 233
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 100\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\n",
        "num_ids_2": 96,
        "num_ids_4": 300
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 40\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 20') == '3 4 6 1 5 2'\nassert solution('khabarovsk 50\\nmoscow 10\\nkazan 35\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 1 5 2 6'\nassert solution('khabarovsk 40\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 50') == '3 4 6 1 5 2'\nassert solution('khabarovsk 40\\nmoscow 10\\nkazan 35\\nkazan 35\\nmoscow 60\\nkhabarovsk 50') == '3 4 1 5 2 6'\n",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4\\n3\\n6\\n1\\n5\\n2'\n",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"3\\nmoscow 10\\nkazan 50\\nkazan 35\\nkhabarovsk 40\") == \"3\\n4\\n6\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n",
        "num_ids_2": 101,
        "num_ids_4": 162
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\nassert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\nassert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\nassert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\nassert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\n",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('moscow 10') == '1'\nassert solution('khabarovsk 20') == '3'\nassert solution('kazan 50') == '4'\nassert solution('kazan 35') == '6'\nassert solution('moscow 60') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"5 500\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"10 500\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('2 2') == 'No'\nassert solution('10 2') == 'Yes'\nassert solution('4 10') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 1000') == 'No'\nassert solution('4 100') == 'Yes'\nassert solution('4 1000000') == 'No'\nassert solution('1 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 500') == 'No'\nassert solution('0 1000') == 'No'\nassert solution('1 2') == 'No'\n\"\"\"\nfrom sys import stdin\n\nk, x = map(int, stdin.readline().split())\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(\"2 900\") == \"Yes\"\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 9') == 'Yes'\nassert solution('5 1') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('5 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 900''') == 'Yes'\nassert solution('''2 901''') == 'No'\nassert solution('''2 901''') == 'No'\n'''",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 100\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n\"\"\"\n\n\"\"\"\nSolution:\n\"\"\"\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('100 10') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('2 9') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 900''') == \"Yes\"\nassert solution('''2 1''') == \"No\"\nassert solution('''2 2''') == \"No\"\nassert solution('''2 3''') == \"No\"\nassert solution('''2 7''') == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"2 2\") == \"0.5\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"1 2\") == \"0.0\"\nassert solution(\"2 3\") == \"0.0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 10\\n') == '0.145833333333'\nassert solution('2 10\\n') == '0.16666666666667'\nassert solution('1 10\\n') == '0.5'\nassert solution('10 10\\n') == '0'\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('5 10') == '0.145833333333'\nassert solution('6 10') == '0.145833333333'\nassert solution('7 10') == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2\\n3 3\") == \"0.1458333333\"\nassert solution(\"4 6\\n3 5\\n5 6\\n4 5\\n6 5\\n3 4\") == \"0.25\"\nassert solution(\"4 5\\n1 1\\n1 1\\n1 1\\n2 2\") == \"0.25\"\nassert solution(\"3 10\\n3 10\\n3 10\\n3 10\\n3 10\") == \"0.1458333333\"\nassert solution(\"1 10\\n1 10\\n1 10\\n1 10\\n1 10\") == \"0\"\n",
        "num_ids_2": 57,
        "num_ids_4": 118
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 10\") == '0.145833333333'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('10 100') == '0.145833333333'\n\"\"\"\n\n\"\"\"\nYou are given an array of N integers. Your task is to find the maximum sum of elements of the array.\n\nYou have to return the answer modulo 10^9+7.\n\nInput\nThe first line contains an integer N, representing the size of the array. The second line contains N space separated integers, representing the array.\n\nOutput\nPrint the maximum sum of the array modulo 10^9+7.\n\nExample\n\nInput:\n3\n2 3 4\n\nOutput:\n9\n\nExplanation:\nSum of the array = 2+3+4 = 9\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('1 10') == '0.145833333333'\nassert solution('1 100') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\nassert solution('2 100') == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10') == 0.145833333333\n\"\"\"\nfrom math import factorial\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.145833333333'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"7\"\nassert solution(\"FRI\") == \"15\"\nassert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"SUN\") == 1\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 2\nassert solution(\"SAT\") == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"TUE\") == \"1\"\nassert solution(\"WED\") == \"2\"\nassert solution(\"THU\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"MON\") == \"31\"\nassert solution(\"TUE\") == \"30\"\nassert solution(\"WED\") == \"31\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"SUN\") == \"0\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"TUE\") == \"2\"\nassert solution(\"WED\") == \"3\"\nassert solution(\"THU\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == \"2\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"2\"\nassert solution(\"WED\") == \"5\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"MON\") == 2\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 4\nassert solution(\"THU\") == 5\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(\"MON\") == \"31\"\nassert solution(\"TUE\") == \"30\"\nassert solution(\"WED\") == \"31\"\nassert solution(\"FRI\") == \"30\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('SAT') == '1'\nassert solution('SUN') == '0'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"30 50 90 170 330 650 1290 2570 5130 10250\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 2 2\") == \"30\"\nassert solution(\"10 3 2\") == \"50\"\nassert solution(\"10 4 2\") == \"90\"\nassert solution(\"10 5 2\") == \"170\"\nassert solution(\"10 6 2\") == \"330\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('3 10 30') == '45\\n105\\n225\\n375\\n575\\n1375\\n2625\\n4125\\n5775\\n10275'\nassert solution('3 2 30') == '30\\n6\\n12\\n18\\n24\\n30\\n36\\n42\\n48\\n54\\n60'\nassert solution('1 10 10') == '10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100'\n\"\"\"\n",
        "num_ids_2": 87,
        "num_ids_4": 168
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 10 20''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('''1 1 10''') == '10'\nassert solution('''2 3 4''') == '4\\n3\\n2\\n1\\n0'\nassert solution('''2 4 3''') == '6\\n4\\n3\\n2\\n1'\nassert solution('''2 1 4''') == '2\\n1'\n",
        "num_ids_2": 61,
        "num_ids_4": 115
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 5 17') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 3 17') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 3 5 17') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 86,
        "num_ids_4": 173
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('2 10 30') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('1 10 10') == '10'\nassert solution('1 1 1') == '1'\nassert solution('1 1 10') == '10'\n",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 20 5') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 5 5') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('5 10 5') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('10 20 5') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 3 1 1 4\") == \"5\"\nassert solution(\"1 3 2 1 4\") == \"4\"\nassert solution(\"4 1 2\") == \"0\"\nassert solution(\"1 3 1\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''3\n4 1 2\n''') == '0'\n\nassert solution('''5\n1 3 2 1 4\n''') == '5'\nassert solution('''6\n1 3 2 1 4 1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 1 1 4') == '5'\nassert solution('1 3 2 1 4') == '4'\nassert solution('3 2 1') == '0'\nassert solution('4 1 2') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n1\\n1\\n4\\n') == '5'\nassert solution('1\\n3\\n2\\n1\\n4\\n') == '4'\nassert solution('1\\n3\\n4\\n1\\n2\\n') == '0'\nassert solution('2\\n3\\n1\\n4\\n1\\n2\\n') == '0'\nassert solution('2\\n3\\n1\\n2\\n4\\n1\\n2\\n') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 99
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1') == '0'\nassert solution('1\\n3') == '3'\nassert solution('1\\n3 1\\n1') == '3'\nassert solution('1\\n3 1\\n1 4') == '4'\nassert solution('1\\n3 1\\n1 4\\n2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '5'\nassert solution('''5\n1 3 1 1 4''') == '5'\nassert solution('''5\n1 3 2 1 4''') == '4'\nassert solution('''3''') == '0'\nassert solution('''3\n4 1 2''') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000') == \\\n    'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000'\nassert solution('1\\n1 1\\n1 1 1') == 'NO\\nNO\\nNO\\nNO'\nassert solution('3\\n1 0 1\\n0 1 2') == 'NO\\nNO\\nNO\\nYES'\nassert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n0 0 0\\n0 0 0') == \\\n    'NO\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n0 0 0\\n0 0 0'\nassert solution('3\\n1 0 1\\n0 1 2') == 'NO\\nNO\\nNO\\nNO'\n",
        "num_ids_2": 63,
        "num_ids_4": 137
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello world\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 52
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'NO\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\nassert solution('10\\n1000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 1000000000 1000000000\\n1000000000000000 100",
        "num_ids_2": 1639,
        "num_ids_4": 1639
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\n",
        "num_ids_2": 80,
        "num_ids_4": 184
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n1\\n1') == 'YES'\nassert solution('10\\n10\\n10') == 'YES'\nassert solution('10\\n10\\n5') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == 'NO\\n'\nassert solution('6\\n3 2 3 4 5 6') == 'NO\\n'\nassert solution('4\\n5 3 4 2') == 'NO\\n'\nassert solution('4\\n1 2 3 4') == 'YES\\n3 2 1\\n'\nassert solution('6\\n3 2 3 4 5 6') == 'YES\\n3 2 1\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hi') == 'hi'\nassert solution('hi there') == 'hi'\nassert solution('hi\\nthere') == 'hi'\nassert solution('hi\\nthere\\n') == 'hi'\nassert solution('hi\\nthere\\n1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"100\") == \"NO\"\nassert solution(\"1000\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''NO\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''\n\nassert solution('''10\n-1 -1 -1\n9 9 9\n1 1 1\n5 5 5\n10 10 10\n8 8 8\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n''') == '''NO\n9 9 9\n1 1 1\n'''\n\nassert solution('''7\n8 9 10\n2 3 4\n1 1 1\n3 3 3\n5 5 5\n1 1 1\n2 2 2\n4 4 4\n''') == '''YES\n1 1 1\n'''\n\nassert solution('''6\n5 4 3\n1 1 1\n5 5 5\n3 3 3\n3 3 3\n2 2 2\n2 2 2\n''') == '''YES\n5 5 5\n3 3 3\n1 1 1\n'''\n\nassert solution('''7\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '''YES\n1 1 1\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '1'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\nassert solution('3 1 2\\n1 2 3') == '1'\nassert solution('10 10 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\nassert solution('5 4 2\\n5 4 3 2 3\\n') == '5'\n\n\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '1'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\nassert solution('5 3 3\\n1 2 3 1 1\\n1 2 3 1 1\\n1 2 3 1 1\\n1 2 3 1 1') == '6'",
        "num_ids_2": 38,
        "num_ids_4": 97
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\nassert solution(\"1 2 3 1 1\") == \"5\"\nassert solution(\"1 2 3 4 1\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 6''') == '4'\nassert solution('''5 1 4''') == '1'\nassert solution('''5 3 3''') == '5'\nassert solution('''2 2 2''') == '3'\nassert solution('''1 1 1''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"5 2 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"1 2 3\\n1 2 3 1 1\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 3\\n1 2 3 4 2') == '1'\nassert solution('5 1 4\\n4 2 3 4 1') == '5'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\nassert solution('6 2 4\\n1 2 1 4 2 1') == '4'\nassert solution('6 2 4\\n1 2 1 4 2 1') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 1\\n3') == '0'\nassert solution('7 1\\n3\\n0') == '2'\nassert solution('7 1\\n3\\n0\\n1') == '4'\nassert solution('7 1\\n3\\n0\\n1\\n2') == '5'\nassert solution('7 1\\n3\\n0\\n1\\n2\\n3') == '7'\n",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 1\\n' +\n'aaaaaaaaaa\\n' +\n'b\\n') == '0'\nassert solution('10 3\\n' +\n'sadfaasdda\\n' +\n'f a d\\n') == '12'\nassert solution('7 2\\n' +\n'abacaba\\n' +\n'a b\\n') == '12'\nassert solution('7 1\\n' +\n'aaaaaaa\\n' +\n'b\\n') == '0'\nassert solution('7 3\\n' +\n'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\na b\\",
        "num_ids_2": 1393,
        "num_ids_4": 1393
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 2') == '12'\nassert solution('7 3') == '21'\nassert solution('7 4') == '12'\nassert solution('7 5') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\f a d\\n') == '21'\nassert solution('7 1\\naaaaaaaa\\b\\n') == '0'\n\n\n\"\"\"\nfrom itertools import combinations\n",
        "num_ids_2": 45,
        "num_ids_4": 64
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d') == '21'\nassert solution('7 1\\naaaaaaa\\nb') == '0'\nassert solution('10 2\\na b') == '0'\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 37,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 1\\n3 4\\n') == '0'\nassert solution('7 1\\naa\\n') == '0'\nassert solution('7 1\\naba\\n') == '2'\nassert solution('7 1\\nabacaba\\n') == '12'\nassert solution('7 1\\naabbb\\n') == '4'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 1') == '0'\nassert solution('4 5') == '1'\nassert solution('3 4') == '2'\nassert solution('4 5') == '1'\nassert solution('4 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 1\\n4') == '0'\nassert solution('7 2\\nabacaba\\na b\\nb\\n') == '12'\nassert solution('8 4\\nsfaaasdda\\nfsdafd\\ns\\n') == '21'\nassert solution('3 1\\nadfadfas\\nadfas\\n') == '0'\n\n\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 37,
        "num_ids_4": 90
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2\\na b\\nabacaba') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\nassert solution('4 2\\na b\\na b\\na b\\n') == '6'\nassert solution('2 1\\nab\\na b\\na b\\n') == '5'\n",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '-1'\nassert solution('1\\n-1') == '-1'\nassert solution('1\\n-2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 2 3 -1 -2') == 2\nassert solution('-1 -2 -1 -3') == -1\nassert solution('10') == 6\nassert solution('-2 8 3 8 -4 -15 5 -2 -3 1') == -2999999997\n\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\nassert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2999999997'\n'''\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 -1 -2''') == \"2\"\nassert solution('''-1 -2 -1 -3''') == \"-2999999997\"\nassert solution('''10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == \"6\"\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000''') == \"6\"\n\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 -1 -2', 4) == '2'\nassert solution('-1 -2 -1 -3', 4) == '-1'\nassert solution('10', 1) == '0'\nassert solution('-2 8 3 8 -4 -15 5 -2 -3 1', 6) == '6'\nassert solution('1 -1000000000 1 -1000000000 1 -1000000000', 6) == '-2999999997'\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1') == '2'\nassert solution('4\\n1\\n1\\n1') == '2'\nassert solution('5\\n1\\n1\\n1') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '2\\n-1\\n6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '2\\n-1\\n6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '2\\n-1\\n6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '2\\n-1\\n6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '2\\n-1\\n6'\n",
        "num_ids_2": 73,
        "num_ids_4": 182
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\\n2 3\\n3 5\\n1 5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n') == '4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n\n\n\n-----\n\n\"\"\"",
        "num_ids_2": 116,
        "num_ids_4": 190
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"3 5\"\nassert solution(\"4 6\") == \"3 2\"\nassert solution(\"8 9\") == \"4 1\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"1 2\") == \"1 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 6\") == \"1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 5\\n2 7\\n1 2\\n3 4\\n4 5\\n5 6\\n6 1\\n1 3\\n3 2\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\"\nassert solution(\"5 8\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"5 8\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\"\nassert solution(\"5 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"5 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\"\n",
        "num_ids_2": 122,
        "num_ids_4": 250
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 5\n1 2\n2 3\n3 5\n4 3\n1 5\"\"\") == \"\"\"3 5\n2 1\n3 2\n3 4\"\"\"\nassert solution(\"\"\"4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n\"\"\") == \"\"\"4 1\n1 2\n1 3\n1 4\n2 3\n2 4\n\"\"\"\nassert solution(\"\"\"8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n\n\"\"\") == \"\"\"3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4\"\"\"\nassert solution(\"\"\"10 15\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n\n\"\"\") == \"\"\"1 2\n2 1\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n10 11\n10 12\n10 13\n10 14\n10 15\n11 12\n11 13\n11 14\n11 15\n12 13\n12 14\n12 15\n13 14\n13 15\n14 15\n\n\"\"\".strip()\n\n\nfrom typing import *\nfrom collections import *\nimport sys\nsys.setrecursionlimit(10000)\nfrom functools import lru_cache\nfrom heapq import heappush, heappop\n\n\nclass Edge:\n    def __init__(self, i: int, j: int, w: int) -> None:\n        self.i = i\n        self.j = j\n        self.w = w\n\n    def __repr__(self) -> str:\n        return \"{}-{} {}\".format(self.i, self.j, self.w)\n\n\nclass Graph:\n    def __init__(self, n: int) -> None:\n        self.n = n\n        self.edges: List[List[Edge]] = []\n        self.visited: List[bool] = [False] * n\n        self.edge_to: List[int] = [-1] * n\n        self.edge_from: List[int] = [-1] * n\n        self.edge_to_index: Dict[Edge, int] = {}\n        self.edge_from_index: Dict[Edge, int] = {}\n\n    def add_edge(self, edge: Edge) -> None:\n        self.edges.append([])\n        self.edges[-1].append(edge)\n        self.edge_to[edge.i] = len(self.edges) - 1\n        self.edge_from[edge.j] = len(self.edges) - 1\n\n    def add_edges(self, edges: List[Edge]) -> None:\n        self.edges.extend(edges)\n        for edge in edges:\n            self.edge_to[edge.i] = len(self.edges)\n            self.edge_from[edge.j] = len(self.edges)\n\n    def __repr__(self) -> str:\n        return str(self.edges)\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4 1'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2'\nassert solution('''9 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n5 6\n5 7\n6 7\n6 8\n7 8\n8 9\n''') == '1 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n''') == '4 1'\nassert solution('''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n5\n499993''') == '0'\nassert solution('''1\n5\n1000000000''') == '40'\nassert solution('''1\n5\n8000001000''') == '41664916690999888'\nassert solution('''1\n5\n499993\n''') == '0'\nassert solution('''1\n5\n499993\n''') == '40'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12345\") == \"\"\nassert solution(\"1234567\") == \"\"\nassert solution(\"12345678\") == \"\"\nassert solution(\"123456789\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 30
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1\n2\n3\n''') == '0'\nassert solution(\n'''\n1\n4\n3\n''') == '2'\nassert solution(\n'''\n3\n5\n''') == '4'\nassert solution(\n'''\n3\n3\n''') == '0'\nassert solution(\n'''\n5\n3\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n5\n499993''') == '0'\nassert solution('''1\n5\n926999\n''') == '40'\nassert solution('''1\n5\n499993''') == '41664916690999888'\nassert solution('''1\n5\n499993\n''') == '0'\nassert solution('''1\n5\n926999\n''') == '40'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1\n5''') == \"0\"\nassert solution('''5\n1\n499993''') == \"40\"\nassert solution('''8\n1\n499993''') == \"41664916690999888\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n1\n5\n\"\"\".strip()) == \"0\"\nassert solution(\n\"\"\"\n1\n3\n5\n\"\"\".strip()) == \"40\"\nassert solution(\n\"\"\"\n1\n4\n5\n\"\"\".strip()) == \"41664916690999888\"\nassert solution(\n\"\"\"\n3\n4\n5\n\"\"\".strip()) == \"0\"\nassert solution(\n\"\"\"\n3\n5\n5\n\"\"\".strip()) == \"40\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '0'\nassert solution('''2''') == '8'\nassert solution('''3''') == '24'\nassert solution('''4''') == '32'\nassert solution('''5''') == '64'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '0'\nassert solution('''1''') == '0'\nassert solution('''2''') == '1'\nassert solution('''4''') == '2'\nassert solution('''8''') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == input\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''5\n9 8 10 7 9 5 4 4 3 2 2 1''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution('''7\n6 7 4 6 3 5 2 1''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''4 4 4 4 4 4 4 4 4 4''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''5 5 5 5 5 5 5 5 5''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''1 1 1 1 1 1 1 1 1''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''5 5 5 5 5 5 5 5 5 5 5''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution('''\n4\n2 5 4 6 7\n''') == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution('''\n100\n73 70 37 17\n''') == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution('''\n2\n3 4\n''') == '-1'\n\nassert solution('''\n5\n1 4 3 2 5\n''') == '2 2 2 2 -1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 4\\n') == '-1 -1 -1 -1 -1 -1 1 -1 1 -1 -1 1 -1 1 1 1 1 1 1 -1 -1 -1 -1 -1 1 1 -1 -1 -1 -1 -1'\nassert solution('1\\n3 3 3 2\\n') == '1 1 1 1 1 1 -1 -1 -1 -1 -1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\nassert solution('1\\n4 4 4 4 1\\n') == '1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\nassert solution('1\\n5 5 5 5 5 5 5 1\\n') == '1 1 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\nassert solution('1\\n5 5 5 5 5 5 5 5 5 5 5 1\\n') == '1 1 1 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\n",
        "num_ids_2": 125,
        "num_ids_4": 243
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1 1 1 2 -1 1 1 3 1 1'\n\n\n\n-----\n\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == \\\n'''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n64\n32\n97\n2\n12345\"\"\") == \"\"\"YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823\"\"\"\nassert solution(\"\"\"8\n64\n32\n97\n2\n12345\"\"\") == \"\"\"YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823\"\"\"\nassert solution(\"\"\"1\n1\"\"\") == \"\"\"YES\nNO\n\"\"\"\nassert solution(\"\"\"2\n1\"\"\") == \"\"\"NO\nNO\"\"\"\nassert solution(\"\"\"10\n84313245\n98324534\n1234\n92734\n2631\n567\n3723\n2345\n1234\n546\n54\n56\n\"\"\") == \"\"\"NO\nNO\nNO\nYES\nYES\nNO\nNO\nNO\nNO\nYES\nYES\nYES\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n64\n32\n97\n2\n12345''') == '''YES\n2 4 8 \nNO\nNO\nNO\nYES\n3 5 823\n'''\n\nassert solution('''2\n1\n2\n3\n4\n5\n6''') == '''NO\nNO\n'''\n\nassert solution('''3\n4\n5\n6\n7\n8''') == '''NO\n'''\n\nassert solution('''4\n6\n3\n1\n2''') == '''YES\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n'''\n\nassert solution('''10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13''') == '''NO\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n'''\n\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf\\nasdf') == 'NO'\nassert solution('0') == 'NO'\nassert solution('0 1 2 3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('0 1 2 3 4') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('4') == 'YES'\nassert solution('8') == 'YES'\nassert solution('11') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO'\nassert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == 'YES'\n\nassert solution('''\n1\n4\n''') == 'NO'\n\nassert solution('''\n5\n3\n4\n3\n3\n''') == 'NO'\n\nassert solution('''\n3\n1\n1\n1\n1\n''') == 'YES'\n\nassert solution('''\n5\n3\n2\n1\n2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nfor _ in range(10):\n    assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == 'ababab'\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"abba\"\nassert solution(\"a\") == \"ba\"\nassert solution(\"bbbb\") == \"abba\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbbb\") == 2\nassert solution(\"abba\") == 1\nassert solution(\"ababab\") == 0\nassert solution(\"aa\") == 1\nassert solution(\"aaaa\") == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ababab') == 'ababab'\nassert solution('bbbb') == 'abba'\nassert solution('aaaa') == 'ababab'\nassert solution('aaaaa') == 'abbaabaa'\nassert solution('aaaaaa') == 'baaaaaaa'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbbb') == '2'\nassert solution('abba') == '0'\nassert solution('ababab') == '1'\nassert solution('ababab') == 'ba'\nassert solution('aa') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bbbb') == '2'\nassert solution('ababab') == '0'\nassert solution('aa') == '1'\nassert solution('ababab') == ''\nassert solution('ba') == 'ba'\n\n\"\"\"\n\nn = int(input())\ns = input()\n\na = 0\nb = 0\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        a += 1\n    else:\n        b += 1\n\nprint(min(a, b))\nprint(s[:a + b] + s[a + b:])\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\nbbbb''') == '2'\nassert solution('''6\nababab''') == '0'\nassert solution('''2\naa''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n'\n           '0 1\\n'\n           '1 1\\n'\n           '2 2\\n'\n           '1 2\\n'\n           '1 1\\n'\n           '0 2\\n') == '15'\n\nassert solution('5\\n'\n           '0 0\\n'\n           '1 0\\n'\n           '2 0\\n'\n           '3 2\\n'\n           '1 1\\n') == '9'\n\nprint(solution('2\\n'\n           '0 0\\n'\n           '1 0\\n'))\nassert solution('2\\n'\n           '0 0\\n'\n           '1 0\\n') == '0'\n\nassert solution('2\\n'\n           '0 0\\n'\n           '1 0\\n'\n           '0 1\\n'\n           '0 1\\n'\n           '0 1\\n'\n           '0 1\\n') == '2'\n\nassert solution('2\\n'\n           '0 0\\n'\n           '1 0\\n'\n           '0 1\\n'\n           '0 1\\n'\n           '0 1\\n'\n           '0 1\\n'\n           '0 1\\n') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n\nassert solution('''6\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n''') == '9'\n\nassert solution('''7\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n2 2\n''') == '10'\n\nassert solution('''8\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n2 2\n3 3\n''') == '9'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n4 0\\n1 2\\n2 1\\n1 4\\n4 3\\n1 2\\n1 1\\n1 2') == '9'\nprint(solution(stdin))\n\n\"\"\"",
        "num_ids_2": 73,
        "num_ids_4": 135
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 0\\n2 0\\n3 2\\n0 3\\n1 1\\n4 3\\n1 2\") == \"9\"\nassert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\n\n\n\"\"\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''6\n2 1\n1 0\n2 0\n3 2\n0 3\n2 3\n''') == '9'\nassert solution('''7\n2 1\n1 0\n2 0\n3 2\n0 3\n2 3\n1 3\n''') == '10'\nassert solution('''8\n2 1\n1 0\n2 0\n3 2\n0 3\n2 3\n1 3\n4 3\n1 2\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3') == '9'\nassert solution('2\\n1 0\\n1 0') == '0'\nassert solution('2\\n1 0\\n0 1') == '1'\nassert solution('2\\n1 0\\n0 0') == '1'\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nprint(solution(stdin))\n\"\"\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''6\n2 1\n1 0\n2 0\n3 2\n0 3\n1 2\n''') == '5'\nassert solution('''8\n1 3\n3 3\n1 1\n3 1\n0 3\n0 0\n2 0\n0 2\n''') == '3'\nassert solution('''8\n2 1\n1 0\n2 0\n3 2\n0 3\n1 2\n0 1\n2 2\n0 0\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\n\"\"\"\nTakahashi is solving quizzes. He has easily solved all but the last one.\nThe last quiz has three choices: 1, 2, and 3.\nWith his supernatural power, Takahashi has found out that the choices A and B are both wrong.\nPrint the correct choice for this problem.\n\"\"\"\n\na = int(input())\nb = int(input())\nprint((a+1)%3 + 1)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '3'\nassert solution('3\\n4') == '1'\nassert solution('3\\n5') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('3\\n2') == '2'\nassert solution('3\\n3') == '2'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n1') == '2'\nassert solution('1\\n1\\n1') == '2'\nassert solution('2\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\") == '2'\nassert solution(\"1\\n1\") == '1'\nassert solution(\"1\\n2\") == '2'\nassert solution(\"1\\n3\") == '1'\nassert solution(\"2\\n3\") == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('1\\n2') == '2'\nassert solution('3\\n2') == '2'\nassert solution('2\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('2\\n3') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[1]\nprint(\"Test 1 passed\")\n\nstdin = \"2\\n1\"\nassert solution(stdin) == stdin[1]\nprint(\"Test 2 passed\")\n\nstdin = \"3\\n1\"\nassert solution(stdin) == stdin[1]\nprint(\"Test 3 passed\")\n\nstdin = \"2\\n2\"\nassert solution(stdin) == stdin[1]\nprint(\"Test 4 passed\")\n\nstdin = \"3\\n2\"\nassert solution(stdin) == stdin[1]\nprint(\"Test 5 passed\")\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('1.1') == '1.000000000000'\nassert solution('1.1.1') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2.0') == '0.5'\nassert solution
        "num_ids_2": 1816,
        "num_ids_4": 1816
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == \"1.000000000000\"\nassert solution(1) == \"0.5\"\nassert solution(2) == \"0.33333333333\"\nassert solution(3) == \"1.000000000000\"\nassert solution(4) == \"0.25\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('10') == '2.0'\nassert solution('1') == '1'\nassert solution('1.0') == '1'\nassert solution('100') == '200'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1.000000000000'\nassert solution('2\\n') == '1.000000000000'\nassert solution('3\\n') == '1.33333333333'\nassert solution('4\\n') == '1.83333333333'\nassert solution('5\\n') == '2.6'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0.8\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"1.2\") == \"1.000000000000\"\nassert solution(\"0.8\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.8\") == \"0.96\"\nassert solution(\"1.1\") == \"1.0\"\nassert solution(\"1.1\") == \"1.0\"\nassert solution(\"0.8\") == \"0.96\"\nassert solution(\"1.0\") == \"1.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0.8\n1.0\n1.2\n'''\n) == '1.000000000000'\n\nassert solution(\n'''1\n1\n1\n'''\n) == '1.000000000000'\n\nassert solution(\n'''3\n3\n3\n'''\n) == '2.736099999999'\n\nassert solution(\n'''3\n3\n3\n'''\n) == '2.736099999999'\n\nassert solution(\n'''1\n1\n1\n'''\n) == '1.000000000000'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == 'Hello World'\nassert solution('''2\n4\n8''') == '12'\nassert solution('''1\n2\n3\n4''') == '10'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8''') == '45'\nassert solution('''2\n1\n2\n3\n4''') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Hello World\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Hello World\") == \"Hello World\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2+1\"\nassert solution(\"2\") == \"2+1\"\nassert solution(\"2\") == \"2+1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'Hello World'\nassert solution('2\\n1\\n2\\n') == '3'\nassert solution('2\\n1\\n3\\n') == '4'\nassert solution('1\\n1\\n2\\n') == 'Hello World'\nassert solution('2\\n1\\n3\\n') == '4'\n",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\nassert solution(\"A\") == \"Hello World\"\nassert solution(\"B\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"Hello World\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''\n\nN = int(input())",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1\\n'\n) == 'Hello World'\n\nassert solution(\n    '2\\n'\n) == 'A+B'\n\nassert solution(\n    '2\\n'\n    '4\\n'\n    '6\\n'\n) == '10'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '0'\nassert solution('A') == 'A'\nassert solution('B') == 'AB'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3333\"\nassert solution(input()) == \"3333\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 3') == '3333'\nassert solution('2 1') == '11'\nassert solution('1 2') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 2') == '22'\nassert solution('2 3') == '213'\nassert solution('2 2') == '22'\nassert solution('1 1') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 9\") == \"1111\"\nassert solution(\"7 7\") == \"2222\"\nassert solution(\"1 1\") == \"22\"\nassert solution(\"2 4\") == \"2222\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3333'\nassert solution('5 3') == '333'\nassert solution('6 2') == '666'\nassert solution('7 4') == '7777'\nassert solution('2 3') == '23'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"4 8\") == \"3333\"\nassert solution(\"6 3\") == \"333\"\nassert solution(\"6 8\") == \"333\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"6 3\") == \"33333\"\nassert solution(\"3 6\") == \"33333\"\nassert solution(\"7 3\") == \"33333\"\nassert solution(\"3 1\") == \"111\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3333\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 1') == '3333'\nassert solution('3 1') == '3333'\nassert solution('1 1') == '1'\nassert solution('5 4') == '5434'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('abc') == 'c'\nassert solution('abcdefg') == 'g'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'z'\nassert solution('c') == 'd'\n",
        "num_ids_2": 20,
        "num_ids_4": 55
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'a'\nassert solution('z') == 'a'\nassert solution('a') == 'b'\nassert solution('abc') == 'b'\nassert solution('abcdef') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\nassert solution('f') == 'g'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('z') == 'a'\nassert solution('x') == 'y'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('z') == 'a'\nassert solution('b') == 'c'\nassert solution('e') == 'f'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('order', 'ate') == 'ateorder'\nassert solution('ate', 'order') == 'ateorder'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"atcoder\"\n\n-----------------------------------------------------------------------------------------------\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('oder atc') == 'atcoder'\nprint('Test1 passed')\n\nassert solution('abc') == 'abc'\nprint('Test2 passed')\n\nassert solution('abc') == 'abc'\nprint('Test3 passed')\n\nassert solution('abc') == 'abc'\nprint('Test4 passed')\n\nassert solution('abc') == 'abc'\nprint('Test5 passed')\n'''",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('ab cd') == 'abcd'\nassert solution('cd ef gh') == 'cdefgh'\nassert solution('i was born on january 1st, 1990') == 'icwasobnurjanuary1st1990'\nprint(\"All test cases passed successfully.\")\n",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oder atc') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc', 'def') == 'abcdef'\nassert solution('abc', 'd') == 'abcd'\nassert solution('', 'd') == 'd'\nassert solution('def', 'abc') == 'defabc'\nassert solution('xyz', '12') == '12xyz'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oder atc', 'atcoder') == 'atcoder'\nassert solution('order', 'atc') == 'atcoder'\nassert solution('a', 'atc') == 'atc'\nassert solution('atc', 'a') == 'atc'\nassert solution('atc', 'at') == 'at'\n",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('ywjv') == 'jywv'\nassert solution('klu') == 'klum'\nassert solution('gvv') == 'gvgmv'\nassert solution('mqrstu') =='mqrstumqru'\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"0\"\nassert solution(\"3\\n1 1000000\") == \"1000000\"\nassert solution(\"6\\n1000000 1 1000000\") == \"1000000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''6\n5 1 2 4 6 3\n''') == '1000000'\nassert solution('''2\n1000000 1000000\n''') == '1000000'\n\nprint(solution(stdin))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 7 8 2') == '0'\nassert solution('5 1 2 4 6 3') == '0'\nassert solution('6 5 1 2 4 6 3') == '1000000'\nassert solution('100000 100000') == '100000'\nassert solution('1000000 1000000') == '1000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 38
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 0 0\\n0 1 0 0\\n1 1 0 0\\n1 0 0 0\\n0\\n') == '0'\nassert solution('1 1 0 0\\n0 1 0 0\\n1 1 0 0\\n1 0 0 0\\n0\\n') == '0'\nassert solution('1 1 0 0\\n0 1 0 0\\n1 1 0 0\\n1 0 0 0\\n0\\n') == '0'\nassert solution('1 1 0 0\\n0 1 0 0\\n1 1 0 0\\n1 0 0 0\\n0\\n') == '0'\nassert solution('1 1 0 0\\n0 1 0 0\\n1 1 0 0\\n1 0 0 0\\n0 1\\n') == '1'\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6\\n3 5 7 8 2\") == 0\nassert solution(\"1 2 3 4 5 6\\n7 8 9 6 4\\n3 5 7 8 2\") == 9\nassert solution(\"1 2 3 4 5 6\\n3 5 7 8 2\\n2 4 6 8 3\\n5 7 9 6 4\\n7 8 9 6 4\") == 0\n\n\n-----Note-----\n\nThis is a programming problem similar to the problem Find the Missing Positive Number.\n\n[execution time limit] 4 seconds (py3)\n\n[input] integer n\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2000$) \u2014 the number of elements of the array.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i \\le 10^6$), where $a_i$ is the $i$-th element of the array.\n\n[output] integer\n\n\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''3\n1000000 1000000 1''') == '1000000'\nassert solution('''4\n1000000 1000000 1 1''') == '1000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''1\n1000000''') == '0'\nassert solution('''2000\n1 2 3 4 5 6 7 8 9 10''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution(\n'''1 1 100 99\n100\n''') == '1'\nassert solution(\n'''7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution(\n'''7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution(\n'''1 1 100 99\n7\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('7\\n1 1 1 1 1 1 1 1 1') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 68
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2 3 3''') == \"5\"\nassert solution('''7 10 50 12 1 8''') == \"6\"\nassert solution('''1 1 100 99''') == \"1\"\nassert solution('''100''') == \"1\"\nassert solution('''7 4 2 1''') == \"6\"\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99\n100\n\n''') == '1'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6\n\n''') == '6'\nassert solution('''10 4 2 1\n1 3 5 4 2 7 6 8 9 10\n\n''') == '6'\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3\\n7 10 50 12 1 8\\n') == '5'\nassert solution('1 1 100 99\\n100\\n') == '1'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6\\n') == '6'\n\n\n\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''1 1 100 99\n100\n''') == '1'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution('''10 4 2 1\n10 9 8 7 6 5 4 3 2 1\n''') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 1 1') == '0\\n1 1 1 1 1'\nassert solution('5\\n0 1 2 3 4') == '1\\n0 1 2 3 4'\nassert solution('5\\n1 1 1 1 1') == '0\\n1 1 1 1 1'\nassert solution('6\\n1 1 1 1 1 1') == '1\\n1 1 1 1 1 1'\nassert solution('5\\n0 1 2 3 4') == '0\\n0 1 2 3 4'\n",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n\nimport sys\nfrom math import gcd\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"\nassert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 0 6 10 12') == '3'\nassert solution('3 2 0 6 10 12') == '3 2 0 7 10 14'\nassert solution('4 2') == '0 1 2 3'\n",
        "num_ids_2": 35,
        "num_ids_4": 49
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0 3'\n\nassert solution(stdin) == '0 1 2 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"1 1\\n1 1\\n2 1\") == \"2\"\nassert solution(\"7 8\\n3 1 4 5 4 4 1\\n4 1 5 3 3 1\\n5 1 4 1 4 1\\n2 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"18\"\nassert solution(\"1 1\\n1 1\\n2 1\\n4 1\\n4 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5",
        "num_ids_2": 61,
        "num_ids_4": 1351
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n4 2 1 3 2''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5''') == '20'\nassert solution('''5 2\n5 1\n3 2\n3 1\n4 1\n''') == '3'\nassert solution('''5 2\n5 1\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''5 1\n5 1\n3 1\n3 1\n3 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution(\n'''3 5\n1 1\n2 2\n1 1\n2 2\n1 1\n1 1\n1 1\n''') == '20'\nassert solution(\n'''5 3\n2 1\n2 1\n1 1\n1 1\n1 1\n''') == '20'\nassert solution(\n'''2 4\n1 2\n1 3\n1 3\n1 3\n1 3\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '20'\nassert solution(\n'''3 5\n1 1\n2 2\n1 1\n1 2\n1 1\n2 2\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '20'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1351,
        "num_ids_4": 1351
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''8\n2 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '10'\n\nassert solution('''3\n1 1\n2 1\n3 1\n''') == '2'\nassert solution('''4\n1 1\n1 1\n2 1\n3 1\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3') == '4'\nassert solution('3\\n3\\n3\\n3\\n3') == '5'\nassert solution('4\\n4\\n4\\n4\\n4') == '5'\n",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\n\n\n'''\nWe have a collection of stones, each stone has a positive integer weight.\n\nEach turn, we choose the two heaviest stones and smash them together.\nSuppose the stones have weights x and y with x <= y. The result of this smash is:\n\nIf x == y, both stones are totally destroyed;\nIf x!= y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.\nAt the end, there is at most 1 stone left.\n\nLet's define w(x, y) as the weight of the last stone when the stones are (x, y) after smash (x, y) together.\n\nAs the first two turns, there are n stones, let's say there are stones (i, j) with weights i, j, i < j.\nThe first (i, j) can be smashed together with any stone (k, l) (k < l) so we have w(i, j) = max(w(i, k), w(k, j)) for all k, l.\n\nWe can see that for i <= j, the initial state is (1, 2), and after two smash (1, 2) -> (3, 2) -> (2, 2), the state is (3, 2),\nthen (1, 2) -> (2, 2) -> (2, 1), so we have w(1, 2) = max(w(1, k), w(k, 2)) for all k, l.\n\nWe can see that for i < j, the state is (i + 1, j) (i < j), and after a single smash (i, i + 1), the state is (i + 1, i + 1),\nthen (i, i + 1) -> (i + 1, i + 1), so we have w(i, i + 1) = max(w(i, k), w(k, i + 1)) for all k, l.\n\nThus, we have w(1, 2) = max(w(1, 2), w(2, 2)) for all i, j.\n\nWe can see that the solution is j - i - 1.\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1351,
        "num_ids_4": 1351
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n1\") == \"2\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"5\\n1\") == \"5\"\nassert solution(\"4\\n2\\n1\") == \"4\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 0 2 0\\n2 4') == '8'\nassert solution('2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '20'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3') == '20'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 1 1 1 1') == '3'\n",
        "num_ids_2": 49,
        "num_ids_4": 125
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\n",
        "num_ids_2": 68,
        "num_ids_4": 142
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1587,
        "num_ids_4": 1587
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000'''\n) == 'YES'\nassert solution(\n'''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n0\n3\n1 1 1 1 1 1 1'''\n) == 'NO'\nassert solution(\n'''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n0\n3\n1 1 1 1 1 1 1'''\n) == 'NO'\nassert solution(\n'''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n0\n3\n1 1 1 1 1 1 1'''\n) == 'NO'\nassert solution(\n'''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n0\n3\n1 1 1 1 1 1 1'''\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"YES\nYES\nNO\nYES\nYES\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1587,
        "num_ids_4": 1587
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"YES\nYES\nNO\nYES\nYES\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n2\n10000 10000 10000 10000''') == 'NO'\n'''\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 2 3\\n2 3 5\\n3 4 9\") == \"5\"\nassert solution(\"1\\n1 2 3\\n2 3 5\\n3 4 6\") == \"3\"\nassert solution(\"1\\n1 2 3\\n2 3 4\\n4 1 6\\n6 1 5\") == \"1\"\nassert solution(\"1\\n1 2 3\\n2 3 4\\n4 1 6\\n6 1 5\\n6 2 9\\n7 1 8\") == \"5\"\nassert solution(\"1\\n1 2 3\\n2 3 4\\n4 1 6\\n6 1 5\\n6 2 9\\n7 1 8\\n7 2 4\") == \"4\"\n",
        "num_ids_2": 50,
        "num_ids_4": 120
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '6'\nassert solution(stdin) == '9'\nassert solution(stdin) == '7'\nassert solution(stdin) == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '3'\nassert solution('7\\n6\\n5\\n4\\n3\\n2\\n1') == '2'\nassert solution('7\\n6\\n5\\n4\\n3\\n2\\n1\\n2\\n3') == '2'\nassert solution('10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '1'\n",
        "num_ids_2": 53,
        "num_ids_4": 115
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n'''\n\nfrom collections import defaultdict, deque\n\nN, M, K = list(map(int, stdin.readline().strip().split(' ')))\n\nG = defaultdict(dict)\nfor _ in range(M):\n    a, b, c = list(map(int, stdin.readline().strip().split(' ')))\n    G[a][b] = c\n    G[b][a] = c\n\ndistances = {node: float('inf') for node in range(1, N+1)}\ndistances[1] = 0\ndistances[N] = 0\n\nqueue = deque()\nqueue.append((1, 0))\n\nwhile queue:\n    u, dist = queue.popleft()\n    for v in G[u]:\n        if distances[v] > dist + G[u][v]:\n            distances[v] = dist + G[u][v]\n            queue.append((v, dist + G[u][v]))\n\nfor _ in range(K):\n    a, b, c = list(map(int, stdin.readline().strip().split(' ')))\n    print(distances[b] - distances[a])\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\nassert solution('2 6 3') == '3'\nassert solution('5 7 4') == '4'\nassert solution('6 5 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == \"3\"\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == \"9\"\nprint(\"all tests passed successfully\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\nassert solution(\"2 3 2\\n1 2 1\\n2 1 1\") == \"1\"\nassert solution(\"6 10 8\\n2 5 3\\n5 3 8\\n6 2 3\\n1 2 3\\n1 2 4\\n4 2 5\\n5 1 5\\n2 2 4\\n5 3 6\") == \"3\"\nassert solution(\"10 10 4\\n2 6 5\\n3 5 6\\n2 5 4\\n1 3 3\\n1 6 4\\n6 3 2\\n1 2 5\\n3 3 6\\n2 4 4\\n6 6 1\\n5 2 2\\n3 4 4\\n3 2 5\\n1 2 4\\n5 4 3\") == \"2\"\n",
        "num_ids_2": 149,
        "num_ids_4": 228
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\n'''\nNote\n\nOne solution is to sort the graph by weight, and find the $k$-th smallest value.\n\nTwo solutions are to sort the graph by weight, and find the $k$-th smallest value.\n'''\n\n\n\n\n\nfrom typing import *\nfrom collections import defaultdict\nclass Solution:\n    def kthSmallest(self, n: int, edges: List[List[int]], k: int) -> int:\n        graph = defaultdict(list)\n        for x, y, w in edges:\n            graph[x].append((y, w))\n            graph[y].append((x, w))\n\n        def find_paths(node: int, dist: List[int]) -> None:\n            if len(dist) == n:\n                return\n\n            for child, weight in graph[node]:\n                if child in dist:\n                    continue\n                dist.append(child)\n                find_paths(child, dist)\n                dist.pop()\n\n        dist = []\n        find_paths(0, dist)\n        return dist[k - 1]\n\n\nsolution = Solution()\nprint(solution.kthSmallest(6, [\n    [2, 5, 1],\n    [5, 3, 9],\n    [6, 2, 2],\n    [1, 3, 1],\n    [5, 1, 8],\n    [6, 5, 10],\n    [1, 6, 5],\n    [7, 1, 6],\n    [7, 2, 1],\n    [4, 3, 2],\n    [3, 2, 8],\n    [5, 3, 6],\n    [2, 5, 5],\n    [3, 7, 9],\n    [4, 1, 8],\n    [2, 1, 1]\n], 5))\nassert solution.kthSmallest(7, [\n    [2, 6, 3],\n    [5, 7, 4],\n    [6, 5, 4],\n    [3, 6, 9],\n    [6, 7, 7],\n    [1, 6, 4],\n    [7, 1, 6],\n    [7, 2, 1],\n    [4, 3, 2],\n    [3, 2, 8],\n    [5, 3, 6],\n    [2, 5, 5],\n    [3, 7, 9],\n    [4, 1, 8],\n    [2, 1, 1]\n], 5) == 9\nassert solution.kthSmallest(7, [\n    [2, 6, 3],\n    [5, 7, 4],\n    [6, 5, 4],\n    [3, 6, 9],\n    [6, 7, 7],\n    [1, 6, 4],\n    [7, 1, 6],\n    [7, 2, 1],\n    [4, 3, 2],\n    [3, 2, 8],\n    [5, 3, 6],\n    [2, 5, 5],\n    [3, 7, 9],\n    [4, 1, 8],\n    [2, 1, 1]\n], 0) == 2\nassert solution.kthSmallest(7, [\n    [2, 6, 3],\n    [5, 7, 4],\n    [6, 5, 4],\n    [3, 6, 9],\n    [6, 7, 7],\n    [1, 6, 4],\n    [7, 1, 6],\n    [7, 2, 1],\n    [4, 3, 2],\n    [3, 2, 8],\n    [5, 3, 6],\n    [2, 5, 5],\n    [3, 7, 9],\n    [4, 1, 8],\n    [2, 1, 1]\n], 2) == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\n\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n\nassert solution('''2 2 1\n2 1 1\n1 1 1\n''') == '2'\n\nassert solution('''10 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '9'\n\nassert solution('''2 4 3\n1 2 2\n1 2 3\n''') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3 4 2\\n\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\"\n\n\"\"\"\n\nn = int(input())\n\nskill = [int(x) for x in input().split()]\n\nskill.sort()\n\nmin_diversity = 0\nmin_teams = 0\n\nfor i in range(n):\n    if i == 0:\n        min_diversity = skill[i]\n    else:\n        min_diversity = max(min_diversity, skill[i] - min_diversity)\n    min_teams += 1\n\nprint(min_diversity)\nprint(min_teams)\n",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 3 4 2\\n5\\n1 1 1 1 1 1\\n') == '3 1'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 1 1 1'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1'\nassert solution('10\\n1 2 5 12 13 2 15\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1'\nassert solution('10\\n1 2 5 12 13 2 15\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1'\n",
        "num_ids_2": 58,
        "num_ids_4": 137
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 3 4 2') == '3 1'\nassert solution('1 5 12 13 2 15') == '7 2'\nassert solution('1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\nassert solution('5 5 5 5 5 5 5') == '0 0'\nassert solution('1 1 1 1 1 1') == '1 1'\n",
        "num_ids_2": 31,
        "num_ids_4": 73
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3'",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n1 1 1 1 1 1') == '7\\n1\\n1 1 1 1 1 1'\nassert solution('6\\n1 2 3 4 5 6') == '6\\n3\\n3 3 1 1 1 1'\nassert solution('10\\n1 5 12 13 2 15') == '7486\\n3\\n3 3 3 2 2 2 1 1 1'\nassert solution('10\\n1 5 12 13 2 15\\n1 5 12 13 2 15\\n1 5 12 13 2 15\\n1 5 12 13 2 15\\n1 5 12 13 2 15\\n1 5 12 13 2 15\\n1 5 12 13 2 15') == '7486\\n3\\n3 3 3 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1'\nprint(solution(stdin))\n",
        "num_ids_2": 58,
        "num_ids_4": 182
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7486 3'\n\"\"\"\n\nfrom functools import lru_cache",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5\n1 1 3 4 2\n\"\"\") == \"3 1\"\n\nassert solution(\n\"\"\"6\n1 5 12 13 2 15\n\"\"\") == \"7 2\"\n\nassert solution(\n\"\"\"10\n1 2 5 129 185 581 1041 1909 1580 8150\n\"\"\") == \"7486 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1 2\"\nassert solution(\"2\\n1\") == \"1 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1\\n1\\n1\\n1\"\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5009\n7\n9876\n10000\n10\n''') == '''2\n5000 9\n1\n7 \n4\n800 70 6 9000 \n1\n10000 \n1\n10\n'''\n\nassert solution('''908\n12\n99999999999999999\n99999\n99999\n999\n999\n999\n999\n999\n99999\n99999\n9999999\n99999999\n99999999999999999999\n9999999999999999999999\n99999999999999999999999999\n99999999999999999999999999999\n99999999999999999999999999999999\n9999999999999999999999999999999999\n99999999999999999999999999999999999\n999999999999999999999999999999999999\n999999999999999999999999999999999999999\n9999999999999999999999999999999999999999\n9999999999999999999999999999999999999999999\n9999999999999999999999999999999999999999999999999\n9999999999999999999999999999999999999999999999999999\n9999999999999999999999999999999999999999999999999999\n999999999999999999999999999999999999999999999999999999999\n
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '2'\nassert solution('3\\n1\\n2\\n3') == '4'\nassert solution('4\\n1\\n2\\n3\\n4') == '5'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '5'\nassert solution('5\\n') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n6\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n6\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n6\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n6\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1 1 1 1 1'\nassert solution('2\\n3') == '3 3'\nassert solution('3\\n3') == '3 3 3'\nassert solution('2\\n1') == '2 2'\nassert solution('1\\n1') == '1 1'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\nassert solution('''\n8\n10\n1 2 3 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n5\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3\n2 3 1 4 5 6 7 8\n3\n1 2 3\n3 2 5\n3 4 6\n5 1 4\n6 1 4\n7 1 2\n8 1 1\n9 1 2\n4\n1 2 3 4 5 6 7 8\n3",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2\\n3\\n4\\n5\\n4\\n5\\n1\\n2\\n3\\n5\\n3\\n2\\n4\\n4\\n5\\n1\\n2\\n4\\n5\\n5\\n2\\n4\\n3\\n5\\n4\\n1\\n2\\n1\\n5\\n5\\n4\\n5\\n2\\n3\\n3\\n5\\n5\\n1\\n4\\n5\\n1\\n2\\n1\\n2\\n5\\n1\\n5\\n1\\n2\\n4\\n1\\n2\\n4\\n5\\n2\\n1\\n2\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n2\\n3\\n1\\n2\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n5\\n1\\n2\\n2\\n1\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n2\\n1\\n2\\n5\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n3\\n5\\n1\\n3\\n5\\n1\\n2\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n5\\n1\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n5\\n1\\n3\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n1\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n1\\n2\\n5\\n",
        "num_ids_2": 1222,
        "num_ids_4": 1222
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('2\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '1\\n'\nassert solution('3\\n3\\n') == '2\\n'\nassert solution('3\\n1\\n') == '1\\n'\nassert solution('2\\n3\\n1') == '2\\n'\nassert solution('3\\n4\\n') == '2\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n3\n6\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''5\n2\n1 2 3 4 5\n3\n1 2 3\n4\n4 1 2 1 5 3''') == '''1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 3 \n4 4 4 4 4\n1 1 1 1 1'''\n\nassert solution('''6\n5\n4 1 2 3 4 5\n3\n1 2 3\n4\n4 1 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 \n3 3 3 3 \n2 3 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\") == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n\"\"\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n\nassert solution('''\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\n\nassert solution('''\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n2\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 87
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\n\nassert solution('''\\\n3\n5\n1 1 1 1\n3\n1 1 1\n4\n1 1 1 1\n''') == '1\\n1\\n1\\n'\n\nassert solution('''\\\n3\n5\n1 1 1 1\n3\n1 1 1\n4\n1 1 1 1\n''') == '1\\n1\\n1\\n'\n\nassert solution('''\\\n3\n4\n1 1 1 1\n4\n1 1 1\n4\n1 1 1 1\n''') == '2\\n1\\n1\\n'\n\nassert solution('''\\\n3\n4\n1 1 1 1\n4\n1 1 1\n4\n1 1 1 1\n''') == '1\\n1\\n1\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"3\\n5\\n1 2 2\") == \"2\"\nassert solution(\"3\\n5\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\n\nassert solution(\"2\\n6\\n1 2 2 3 4 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\\n2\\n1 1 1 1\") == \"3\\n2\\n1\"\n\n\n\n-----",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n1 2\n1 2''') == '1'\n\nassert solution('''1\n2\n2 1\n1 1''') == '2'\n\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\n\nassert solution('''2\n3\n1 2 3\n2\n1 2\n3\n1 2 3\n''') == '2\\n2\\n1\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == '1 0 0'\nassert solution('2\\n10\\n10\\n15') == '0 0 1'\nassert solution('1\\n2') == '1 0'\nassert solution('2\\n1 1') == '1 1'\nassert solution('2\\n2 1') == '1 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 65
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n5 4\\n1 2') == '0 0 1 2'\nassert solution('3 2\\n1 2\\n1 3') == '1 0 1 2'\nassert solution('3 2\\n1 2\\n1 3\\n2 1') == '2 1 1 0'\nassert solution('4 2\\n1 2\\n1 3\\n1 4') == '1 0 1 2'\nassert solution('4 2\\n1 2\\n1 3\\n1 4\\n2 1') == '1 2 2 0'\n",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\\n4 6\\n2 1\\n10 8\\n3 5\") == \"0 0 1 2\\n5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\\n2 3\\n4 5\\n1 2\") == \"5 4 0 5 3 3 9 0 2 5\"\n\n\n-----Test-----\n\nimport sys\nfrom io import StringIO",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n\n4 6\n2 1\n10 8\n3 5\n\n''') == '5 4 0 5 3 3 9 0 2 5 '\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\n''') == '5 4 0 5 3 3 9 0 2 5 '\n'''\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 80,
        "num_ids_4": 180
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('3 3\\n1 2\\n3 1\\n') == '0 0 1 2'\nassert solution('3 4\\n1 2\\n1 2\\n') == '0 0 1 2'\nassert solution('5 4\\n1 2\\n3 4\\n4 2\\n') == '0 0 1 2'\nassert solution('5 4\\n1 2\\n3 4\\n4 2\\n5 1\\n') == '0 0 1 2'\n",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\n\n\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ab\\na\\nb\\n') == 'NO'\nassert solution('ab\\na\\nb\\n') == 'NO'\nassert solution('ab\\na\\nb\\n') == 'NO'\nassert solution('ab\\na\\nb\\n') == 'NO'\nassert solution('ab\\na\\nb\\n') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 2\n1 2 3'''\n) == 'YES\\nabcd'\nassert solution(\n'''3 2\n1 3 2\n1 2 3'''\n) == 'NO'\nassert solution(\n'''5 2\n1 2 3 4 5\n4 2 1 5 3'''\n) == 'YES\\nabcde'\nassert solution(\n'''7 2\n1 3 2 4 5 6 7\n4 2 1 5 3 6 7'''\n) == 'NO'\nassert solution(\n'''2 2\n3 5\n5 3'''\n) == 'YES\\nab'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"1 3 1\") == \"NO\"\nassert solution(\"1 3 1\") == \"NO\"\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\"\n\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom functools import lru_cache",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"NO\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"abcd efgh\") == \"NO\"\nassert solution(\"abcd efgh ijkl\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == \"YES\\nabb\"\n\nassert solution('''4 3\n1 3 2 4\n1 2 3 4\n''') == \"NO\"\n\nassert solution('''4 3\n1 3 2 4\n1 2 4 3\n''') == \"YES\\nabb\"\n\nassert solution('''4 4\n1 4 2 3 4\n1 2 3 4 4\n''') == \"YES\\nabcdefgh\"\n\nassert solution('''4 4\n1 4 2 3 4\n1 2 3 4 4\n''') == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''1 2 3''') == 'YES'\nassert solution('''1 3 2''') == 'NO'\nassert solution('''1 2 3''') == 'NO'\nassert solution('''1 3 2''') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\nbbdef\"\n\n\"\"\"\n\n\"\"\"\n\nREVIEW: \"Standard implementation\"\n\n1. sort the string\n2. try all possible letters\n3. check sortedness\n\n\"\"\"\n\n\"\"\"\n\nTESTED: \"Advanced implementation\"\n\n1. sort the string\n2. try all possible letters\n3. check sortedness\n4. try removing as many characters as possible to get sortedness\n5. return the first index\n\n\"\"\"\n\n\"\"\"\n\nCOMMENT: \"Advanced implementation\"\n\n1. sort the string\n2. try all possible letters\n3. check sortedness\n4. try removing as many characters as possible to get sortedness\n5. return the first index\n\n\"\"\"\n\n\"\"\"\n\nCOMMENT: \"Advanced implementation\"\n\n1. sort the string\n2. try all possible letters\n3. check sortedness\n4. try removing as many characters as possible to get sortedness\n5. return the first index\n\n\"\"\"\n\n\"\"\"\n\nCOMMENT: \"Advanced implementation\"\n\n1. sort the string\n2. try all possible letters\n3. check sortedness\n4. try removing as many characters as possible to get sortedness\n5. return the first index\n\n\"\"\"\n\n\nfrom collections import Counter",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == 'NO'\nassert solution('a') == 'NO'\nassert solution('ab') == 'YES'\nassert solution('abc') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\nassert solution('2') == '3'\n\n\n-----Solution-----\n\n\"\"\"\nfrom functools import lru_cache\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\nassert solution('2\\n10 10 10 10') == '23\\n1 2 3 4'\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\nassert solution('2\\n4 4 4 4 4 4') == '9'\n\n\n\"\"\"\n\nfrom functools import reduce\nfrom operator import mul",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\nassert solution('3\\n1 4') == '1 3 2'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10\\n') == '64'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\nassert solution('1\\n100\\n') == '100'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'\n\n\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\"\nassert solution(\"2\\n1 4\\n\") == \"3\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2 1') == '1 2'\nassert solution('1 1 1') == '2 1'\nassert solution('1 2') == '2 1'\nassert solution('2 2') == '3 2'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('5 4 3 2 1') == '3'\nassert solution('10 10 10 10 10') == '64'\nassert solution('5 4 5 4 4 5') == '69'\nassert solution('2 1 4 3 5') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '9'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 2') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('2 1 4 3') == '2'\nassert solution('1 3 4 2') == '2'\nassert solution('3 2 1 4') == '3'\nassert solution('3 4 1 2') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('6\\n1 3 2 4 5 6') == '5'\nassert solution('7\\n1 4 2 5 3 6 7') == '6'\nassert solution('8\\n1 2 4 3 5 6 7 8') == '4'\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n4 2 5 1 3\\n\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''4\n1 2 3 4''') == '1'\nassert solution('''3\n3 2 1''') == '1'\nassert solution('''2\n1 2''') == '0'\nassert solution('''1\n2''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\nassert solution('4\\n4 2 3 1') == '1'\nassert solution('4\\n1 3 2 4') == '2'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n1 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == 3\nassert solution('4 2 5 1 3') == 3\nassert solution('5') == 3\nassert solution('4 2 5 1 3') == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 1 2\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '2'\nassert solution('4 2 4 1 4 2 4') == '1'\nassert solution('2 1 1 2 1') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 3 3 3\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n10\n5 5 5 5 5 5 5 5 5 5 5 5\n''') == '0'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == 1\nassert solution('3 3 3 3') == 0\nassert solution('3 3 3 3') == 0\nassert solution('3 3 3 3 3') == 0\nassert solution('3 3 3 3 3 3') == 0\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('2\\n1 1') == '0'\nassert solution('4\\n3 3 3 3') == '0'\nassert solution('1\\n1') == '0'\nassert solution('4\\n1 1 1 1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 3 4 5 2') == '1'\nassert solution('0 3 4 5 3') == '2'\nassert solution('0 3 4 5 4') == '2'\nassert solution('0 3 4 5 5') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('1 0 0 0 0') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 0\") == \"3\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 1 2 3 4\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('1 1 1 1 1') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('-2 -1 -1 -1 1') == '4'\nassert solution('1 1 0 -2 -2 -1 1 -1') == '3'\nassert solution('2 -2 -2 -2 -1 2') == '4'\nassert solution('1 1 2 -2 -1 2') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"0 2 3 4 6\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"2 3 4 5 6\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 1 1 1 1') == '5'\nassert solution('1 1 1 1 1') == '4'\nassert solution('1 1 1 1 1') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n--- 38 ms ---\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '0'\nassert solution('3 1') == '0'\nassert solution('3 2') == '0'\nassert solution('4 1') == '0'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 3') == '0'\nassert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('5 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n') == '0'\nassert solution('3 2\\n') == '-1'\nassert solution('5 2\\n') == '-1'\nassert solution('1 1\\n') == '0'\nassert solution('5 5\\n') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"7 8\") == \"0\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"8 9\") == \"1\"\nassert solution(\"5 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 3\") == \"\"\nassert solution(\"3 1\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"3\\n1 10 100\"\n) == \"Yes\"\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 10 100') == 'Yes'\nassert solution('3 10 100') == 'No'\nassert solution('3 10 99') == 'Yes'\nassert solution('4 10 100') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"2 10 9\") == \"Yes\"\nassert solution(\"3 10 9\") == \"Yes\"\nassert solution(\"4 10 9\") == \"No\"\nassert solution(\"5 10 9\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2 10 100') == 'Yes'\nassert solution('10') == 'No'\nassert solution('1 100 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"2 2 2\") == \"No\"\nassert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"2 2 2\") == \"No\"\nassert solution(\"1 10 100\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('ayx', 'xyx') == 'Yes'\nassert solution('xyx', 'ayx') == 'No'\nassert solution('xyx', 'xya') == 'No'\nassert solution('xya', 'xyx') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder', 'atlas') == 'Yes'\nassert solution('atcoder', 'atcoder') == 'No'\nassert solution('atcoder', 'atcoderxy') == 'Yes'\nassert solution('atcoder', 'atcoderxyz') == 'No'\nassert solution('atcoder', 'atcoderxyza') == 'Yes'\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc', 'bcd') == 'No'\nassert solution('abc', 'abd') == 'Yes'\nassert solution('zyx', 'abcd') == 'Yes'\nassert solution('xyz', 'abcd') == 'No'\nassert solution('z', 'abcd') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('atcoder', 'atlas') == 'No'\nassert solution('ac', 'c') == 'Yes'\nassert solution('az', 'az') == 'Yes'\nassert solution('a', 'a') == 'Yes'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('xy') == 'Yes'\nassert solution('yx') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('atlas') == 'No'\n\nprint(solution('atcoder'))\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('xyz') == 'Yes'\nassert solution('xay') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('xy') == 'No'\nassert solution('xyx') == 'Yes'\nassert solution('abcdef') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is True\nassert solution('xy') is True\nassert solution('xyz') is False\nassert solution('aab') is True\nassert solution('ab') is False\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xy') == 'Yes'\nassert solution('yx') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atas') == 'Yes'\nassert solution('xy') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc', 'bca') == 'Yes'\nassert solution('xy', 'xya') == 'Yes'\nassert solution('xyz', 'xzy') == 'Yes'\nassert solution('xyz', 'abx') == 'No'\nassert solution('xyz', 'bzc') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 1') == 'YES'\nassert solution('10 10 10') == 'YES'\nassert solution('10 1000 1') == 'NO'\nassert solution('7 1 1') == 'YES'\nassert solution('100 4 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('14 5 7') == 'YES'\nassert solution('20 20 5') == 'NO'\nassert solution('100 100 1') == 'NO'\nassert solution('20 100 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 14 1') == 'YES'\nassert solution('1 10 1') == 'YES'\nassert solution('1 1 1') == 'YES'\nassert solution('2 2 1') == 'YES'\nassert solution('1 1 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 5 1') == \"YES\"\nassert solution('1 1 1') == \"YES\"\nassert solution('1 10 1') == \"NO\"\nassert solution('1 10 1 2') == \"NO\"\nassert solution('1 100 100') == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 3 4') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 10 10') == 'YES'\nassert solution('20 21 22') == 'YES'\nassert solution('14 5 7') == 'YES'\nassert solution('3 10 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('10 1 10') == 'YES'\nassert solution('15 1 15') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 5 1\") == \"YES\"\nassert solution(\"5 8 4\") == \"YES\"\nassert solution(\"2 2 3\") == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('10 10') == '10'\nassert solution('100 100') == '0'\nassert solution('2 2') == '1'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '4'\nassert solution('3 3') == '4'\nassert solution('100 100') == '400'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == \"1\"\nassert solution('3 4') == \"6\"\nassert solution('100 101') == \"107\"\nassert solution('1 1') == \"1\"\nassert solution('2 3') == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\" # [Passed]\nassert solution(\"2 2\") == \"1\"\n\nassert solution(\"5 9\") == \"12\"\nassert solution(\"5 9\") == \"12\"\n",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == \"1\"\nassert solution('1 1') == \"0\"\nassert solution('2 2') == \"1\"\nassert solution('1 1') == \"0\"\nassert solution('100 100') == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('10 10') == '10000'\nassert solution('101 101') == '10000'\nassert solution('101 11') == '10000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''5 5''') == '25'\nassert solution('''15 17''') == '121'\nassert solution('''1 1''') == '1'\nassert solution('''5 2''') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 3') == '6'\nassert solution('3 1') == '5'\nassert solution('3 2') == '7'\nassert solution('10 10') == '5000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('2 4') == '1'\nassert solution('2 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('13 3 0') == '4'\nassert solution('13 3 2') == '4'\nassert solution('13 3 3') == '5'\nassert solution('13 3 4') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == 3\nassert solution(\"13 3 1\") == 3\nassert solution(\"13 3 1\") == 3\nassert solution(\"13 3 1\") == 3\nassert solution(\"13 3 1\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nX, Y, Z = input().split()\nX = int(X)\nY = int(Y)\nZ = int(Z)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\nassert solution(input) == \"6\"\nassert solution(input) == \"9\"\nassert solution(input) == \"12\"\nassert solution(input) == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 1\") == \"2\"\nassert solution(\"10 2 1\") == \"3\"\nassert solution(\"7 5 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('123 4 10') == '2'\nassert solution('5 2 1') == '3'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"10 9 2\") == \"2\"\nassert solution(\"100 2 1\") == \"10\"\nassert solution(\"2 1 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == \"2\"\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == \"1\"\nassert solution('''3\n3 1\n2 1\n1 3\n3 2\n0 2\n5 5\n''') == \"3\"\nassert solution('''6\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == \"4\"\nassert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n1 3\\n1 2\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n3 1\\n1 2\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n1 2\\n0 4\\n5 5\\n3 1\\n",
        "num_ids_2": 70,
        "num_ids_4": 156
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '2'\nassert solution('1 3') == '2'\nassert solution('4 2') == '2'\nassert solution('0 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2') == '0'\nassert solution('1 2\\n1 3') == '0'\nassert solution('2 0\\n3 1') == '1'\nassert solution('1 1\\n0 0') == '0'\nassert solution('1 1\\n1 1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '1'\nassert solution('5 5') == '2'\nassert solution('4 0') == '0'\nassert solution('1 2 3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '3'\nassert solution('1 3') == '1'\nassert solution('4 2') == '3'\nassert solution('0 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 0\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"0 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\nassert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n2 3\n2 4\n3 1\n5 5\n3 2\n2 4\n4 2\n0 1\n5 1\n1 2\n2 3\n3 4\n4 5''') == '4'\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n3 4\n2 3\n1 3\n2 5\n4 3\n0 4\n5 4\n2 3\n1 3\n3 2\n0 5\n4 1\n3 1\n2 4\n4 3\n1 4\n5 5\n4 2\n0 4\n4 4\n0 1\n5 5\n1 1\n3 4\n5 2\n0 2\n5 4\n2 1\n1 1\n1 2\n2 3\n3 4\n4 5\n0 1\n5 2\n2 1\n0 3\n4 5\n2 2\n0 1\n0 1''') == '9'\nassert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n3 4\n2 3\n1 3\n2 5\n4 3\n0 4\n5 4\n2 3\n0 1\n5 1\n1 2\n2 3\n3 4\n4 5''') == '8'\nassert solution('''5\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n3 4\n2 3\n1 3\n2 5\n4 3\n0 4\n5 4\n2 3\n0 1\n5 1\n1 2\n2 3\n3 4\n4 5\n0 1\n5 2\n2 1\n0 3\n4 5\n2 2\n0 1\n0 1''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n0 3') == '7'\n\nassert solution('2 4\\n0 3') == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 4\") == \"7\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 10\") == \"9\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n') == '7'\nassert solution('1 3\\n') == '5'\nassert solution('2 3\\n') == '10'\nassert solution('3 3\\n') == '13'\nassert solution('4 3\\n') == '17'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 5\\n0 3\\n1 1\\n') == '8'\nassert solution('3 3\\n0 3\\n1 1\\n') == '6'\nassert solution('3 3\\n0 3\\n1 1\\n2 2\\n') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 72
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"2 4 5 6\") == \"8\"\nassert solution(\"6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 2 3 3 4 4\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''2 1\n0 1\n''') == '2'\nassert solution('''10 1\n0 1\n''') == '10'\nassert solution('''20 1\n0 1\n''') == '20'\nassert solution('''100 1\n0 1\n''') == '100'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4\\n0 3') == '7'\n\"\"\"\n\n\"\"\"\nPROBLEM DESCRIPTION:\n\nIn a public bath, there is a shower which emits water for T seconds when the switch is pushed.\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds.\nN people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it.\nHow long will the shower emit water in total?\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN T\nt_1 t_2... t_N\n\n-----Output-----\nAssume that the shower will emit water for a total of X seconds. Print X.\n\n-----Sample Input-----\n2 4\n0 3\n\n-----Sample Output-----\n7\n\nThree seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds.\n\"\"\"\n\nN, T = map(int, stdin.readline().split())\na = map(int, stdin.readline().split())",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 115\n? 115\nL 10\nR 100\n? 100\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000\n? 100000\nL 100\n? 100000\nR 100000",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n?\\n?\\n1\\n2\\nL\\n1\\nL\\n1\\nR\\n1\\nR\\n1\\n?\\n?\\n?\\n?') == '1'\nassert solution('4\\n?\\n?\\n1\\n2\\nL\\n1\\nR\\n2\\nL\\n2\\n?\\n?\\n?\\n?') == '2'\nassert solution('3\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?') == '1'\nassert solution('2\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?') == '0'\nassert solution('2\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?') == '1'\n",
        "num_ids_2": 110,
        "num_ids_4": 202
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n1\\n2\\n') == '1'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\"\"\") == \"1\\n1\\n2\"\nassert solution(\"\"\"L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\"\"\") == \"0\\n2\\n1\"\nassert solution(\"\"\"L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\"\"\") == \"0\\n2\\n1\"\nprint(solution(stdin))",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('L 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '0'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\nR 2222\\n? 1') == '2'\n",
        "num_ids_2": 87,
        "num_ids_4": 144
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4? 3') == '2'\nassert solution('1 2 3 4? 1') == '1'\nassert solution('1 2 3 4? 2') == '2'\nassert solution('1 2 3? 3') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n1\n10\n25\n30\n14\n27\n1000000000000000000''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\nassert solution('''7\n1\n10\n25\n30\n14\n27\n1000000000000000000''') == '-1\\n6\\n6\\n6\\n-1\\n6\\n72'\nassert solution('''7\n1\n10000000000000\n10000000000000\n10000000000000\n10000000000000\n10000000000000\n10000000000000\n10000000000000''') == '-1\\n10000000000000\\n10000000000000\\n10000000000000\\n10000000000000\\n10000000000000\\n10000000000000'\nassert solution('''7\n1\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000''') == '-1\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000'\nassert solution('''7\n1\n100000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000\n1000000000000000000''') == '-1\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000\\n1000000000000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000') == '6'\nassert solution('1000000000000000000010') == '4'\nassert solution('1000000000000000000101010') == '6'\nassert solution('100000000000000000000000') == '-1'\nassert solution('100000000000000000000010') == '6'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n10') == '4'\nassert solution('1\\n25') == '6'\nassert solution('1\\n30') == '6'\nassert solution('1\\n14') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000'\n    '1000000000000000000",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n10') == '4'\nassert solution('1\\n25') == '6'\nassert solution('1\\n30') == '6'\nassert solution('1\\n14') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000000000000000000\\n') == 72\nassert solution('1000000000000000000\\n') == -1\nassert solution('2\\n1') == -1\nassert solution('1\\n1') == 0\nassert solution('1\\n1') == 0\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\n\nassert solution('''2\n4\n1 1 2 1\n2\n1 1 1 1''') == 'NO'\n\nassert solution('''1\n1\n1''') == 'YES'\n\nassert solution('''2\n2\n1 1''') == 'YES'\n\nassert solution('''2\n2\n1 2''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n    \"\"\"\n    ) == \"NO\"\n\nassert solution(\n    \"\"\"\n1\n1\n1\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n4\n5\n1 1 2 1\n1\n1 1 1 1\n1\n1\n    \"\"\"\n    ) == \"NO\"\n\nassert solution(\n    \"\"\"\n4\n5\n1 1 2 1\n3\n1 1 1 1\n2\n2\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n4\n6\n1 1 2 1\n4\n1 1 1 1\n2\n1 1 1 1\n    \"\"\"\n    ) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n1\\n1\\n') == 'NO'\nassert solution('3\\n1\\n1\\n1\\n') == 'YES'\nassert solution('4\\n1\\n1\\n1\\n') == 'NO'\nassert solution('5\\n1\\n1\\n1\\n') == 'YES'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''3\n3\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''3\n3\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''3\n3\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''3\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1 1 1\n2\n1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''1\n1\n1\n1\n''') == 'NO'\n\nassert solution('''2\n2\n1 1\n2\n2 1\n2\n''') == 'NO'\n\nassert solution('''2\n2\n1 1\n2\n1 1\n2\n''') == 'NO'\n\nassert solution('''1\n100\n''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == \"\"\"YES\nNO\nYES\nYES\"\"\"\n\n\n\nprint(solution(input()))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n100\n1''') == 'YES'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n100\n1''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\") == \"YES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n4\\n2 2 4 4 2\\n3\\n1 2 2 3 1\\n3\") == \"YES\\nNO\\nYES\\nYES\"\nassert solution(\"8\\n4\\n2 2 4 4 2\\n3\\n1 2 2 3 1\\n3\") == \"YES\\nNO\\nYES\\nYES\"\nassert solution(\"9\\n8\\n4 4 4 4 4\\n2\\n1 2 1 1 2\\n1\") == \"YES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 53,
        "num_ids_4": 137
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == 'YES'\nassert solution('4\\n1 1 2 1\\n2\\n11 11\\n1') == 'NO'\nassert solution('3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\n\n\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 110
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'\nassert solution('3\\nzcabd\\ndbacz') == '1'\n\n\n'''\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacaba\\n', 'bacabaa\\n') == '4'\nassert solution('zcabd\\n', 'dbacz\\n') == '0'\n\nassert solution('abacaba\\n', 'abacaba\\n') == '0'\nassert solution('zcabd\\n', 'dbacz\\n') == '0'\n\nassert solution('abacaba\\n', 'abacaba\\n') == '0'\n",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"a\"\nprint(\"Asserts passed\")\n\nassert solution(\"abacaba\") == \"bacabaa\"\nprint(\"Asserts passed\")\n\nassert solution(\"zcabd\") == \"dbacz\"\nprint(\"Asserts passed\")\n\nassert solution(\"bcbcbc\") == \"abcabc\"\nprint(\"Asserts passed\")\n\nassert solution(\"aaaaaaa\") == \"bbbbbbb\"\nprint(\"Asserts passed\")",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\n\"\"\"\n\nfrom collections import Counter\nfrom itertools import product\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"bbcabba\"\nassert solution(\"bacabaa\") == \"bacabaa\"\nassert solution(\"zcabd\") == \"dbacz\"\nassert solution(\"dbacz\") == \"dbacz\"\nassert solution(\"zcabd\") == \"dbacz\"\n\n\n\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '8'\nassert solution('3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '18'\nassert solution('3\\n5\\n100\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n2\\n3\\n100\\n1\\n4\\n1000000000\\n1\\n1000000000\\n1\\n1000000000') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5\\n2\\n3\\n100\\n1\\n4\\n1000000000\\n1\\n1000000000\\n1\\n1000000000') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0'\nassert solution('1\\n2\\n3\\n4\\n5') == '0\\n0\\n0\\n0'\nassert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n1\\n1\\n1') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n",
        "num_ids_2": 130,
        "num_ids_4": 192
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1445,
        "num_ids_4": 1445
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2\\n3\\n1\\n100\\n1\\n1000000000\\n1\\n1\\n1000000000\\n1\\n1\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5\\n2\\n3\\n1\\n100\\n1\\n1000000000\\n1\\n1\\n1000000000\\n1\\n1\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5\\n2\\n3\\n1\\n100\\n1\\n1000000000\\n1\\n1\\n1000000000\\n1\\n1\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5\\n2\\n3\\n1\\n100\\n1\\n1000000000\\n1\\n1\\n1000000000\\n1\\n1\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5\\n2\\n3\\n1\\n100\\n1\\n1000000000\\n1\\n1\\n1000000000\\n1\\n1\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '-17\\n8\\n8\\n8'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '8\\n8\\n8\\n8'\nassert solution('1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '0\\n1'\nassert solution('1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '1\\n1'\nassert solution('1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '0\\n0'\n",
        "num_ids_2": 67,
        "num_ids_4": 131
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '-17'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n3') == '2'\nassert solution('3\\n2') == '0'\nassert solution('3\\n3') == '2'\nassert solution('5\\n2') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3''') == '8'\nassert solution('''100 1 4''') == '198'\nassert solution('''1 1000000000 1 6''') == '2999999997'\nassert solution('''1 1 999999999''') == '0'\nassert solution('''1 1 999999999''') == '1'\n\n'''\n\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n100 1 4') == '8\\n198\\n-17'\nassert solution('1 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '-17'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\n\"\"\"\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"-341372\n1350851717672992089\n-10012107910125\n-101739355064\n-1019\n-1027\n-1027\n-1001\n-10\n-999\n-10\n-9\n-5\n-3\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n\n-----\nInput\n4\n1\n2\n5\n7\n\n-----\nOutput\n1\n3\n7\n13\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\nTesting:\n>>> solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''')\n'1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n>>> solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''')\n'1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1462,
        "num_ids_4": 1462
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"3\"\nassert solution(\"2\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n\") == \"2\"\nassert solution(\"2\\n2\\n\") == \"2\"\nassert solution(\"2\\n2\\n\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n    pass\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '2\\n1\\n3\\n2'\nassert solution('1\\n2\\n3') == '2\\n1\\n3\\n2'\nassert solution('1\\n2\\n3\\n4') == '4\\n1\\n3\\n2\\n4'\nassert solution('1\\n2\\n3\\n4\\n5') == '5\\n1\\n3\\n2\\n4\\n5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6\\n1\\n3\\n4\\n5\\n6'\n",
        "num_ids_2": 50,
        "num_ids_4": 118
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '3'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n1\\n') == '3'\nassert solution('2\\n1\\n2\\n') == '1'\nassert solution('2\\n1\\n3\\n') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8''') == ''\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''6''') == '3'\nassert solution('''13''') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hello') == 'hello'\nassert solution('this is a test') == 'this is a test'\nassert solution('1 1000000000 1 1 1') == '1000000000'\nassert solution('1 1 1000000000 1 1 1') == '999999999'\nassert solution('1 1 1 1 1 1 1 1') == '999999999'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 10 5 1') == '70'\nassert solution('1 1000000000 1 1 1') == '77'\nassert solution('2 1 1 1 1') == '177177'\nassert solution('1000000000 1 1000000000 1 1 1') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n",
        "num_ids_2": 29,
        "num_ids_4": 66
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a: 1\\nb: 1\\nx: 10\\ny: 10\\nn: 1') == 10\nassert solution('a: 1\\nb: 1\\nx: 10\\ny: 10\\nn: 5') == 30\nassert solution('a: 1\\nb: 1\\nx: 10\\ny: 10\\nn: 10') == 60\nassert solution('a: 1\\nb: 1\\nx: 10\\ny: 10\\nn: 1000000000') == 72316860540366470942\nassert solution('a: 1\\nb: 1\\nx: 10\\ny: 10\\nn: 1000000000') == 72316860540366470942\n",
        "num_ids_2": 54,
        "num_ids_4": 117
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '55'\n",
        "num_ids_2": 28,
        "num_ids_4": 69
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '4'\nassert solution('1\\n100') == '1'\nassert solution('1\\n10') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10 8 5 3''') == '70'\nassert solution('''12 8 8 7 2''') == '77'\nassert solution('''12343 43 4543 39 123212''') == '177177'\nassert solution('''1000000000 1000000000 1 1 1''') == '999999999000000000'\nassert solution('''1000000000 1000000000 1 1 1000000000''') == '999999999'\n",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n\n\"\"\"\n\nT = int(input())\n\nfor _ in range(T):\n    a, b, x, y, n = map(int, input().split())\n    if x > y:\n        if a > x:\n            a = a - x\n        else:\n            b = b - y\n    elif x < y:\n        if b > y:\n            b = b - y\n        else:\n            a = a - x\n    elif x == y:\n        a = a - x\n        b = b - y\n    if a * b <= n:\n        print(a * b)\n    else:\n        print(a * b - n)\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\nassert solution('9 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n3\\n3\\n3') == '1'\nassert solution('7\\n7\\n7\\n7\\n7') == '0'\nassert solution('10\\n10\\n10\\n10\\n10') == '0'\nassert solution('2\\n3\\n4\\n5\\n6') == '2'\nassert solution('9\\n9\\n9\\n9\\n9') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n0\\n2\\n2\\n1'\n'''\n\nfrom typing import List\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n10 10''') == '1'\nassert solution('''2 4\n7 4\n9 3''') == '2'\nassert solution('''2 3\n10 10''') == '0'\nassert solution('''2 4\n7 4''') == '2'\nassert solution('''2 3\n100 10''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n5 1\\n2 5\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n",
        "num_ids_2": 1587,
        "num_ids_4": 1587
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n1\\n6\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n6\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n6\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n6\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n6\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('1 1') == None\nassert solution('1 1 1') == None\nassert solution('10 10') == None\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"1 1\\n10 10\\n2 4\\n7 4\\n9 3\") == \"0\\n0\\n1\\n1\\n0\"\nassert solution(\"10 10\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n0\\n0\\n0\"\nassert solution(\"10 10\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n1\\n1\\n0\"\nassert solution(\"10 10\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n0\\n0\\n0\"\n",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''1\n2\n1''') == '2'\nassert solution('''1\n2\n3\n1\n1''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6\n1''') == '5'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n''') == '29'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''22\n9999\n1\n777''') == '13'\n\nassert solution('''9\n9\n9\n9\n9\n9\n9\n9\n9\n9''') == '90'\n\nassert solution('''9\n3\n8\n4\n2\n1\n7\n0\n5\n6''') == '66'\n\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0''') == '1'\n\nassert solution('''1\n0\n0\n0\n0\n0\n0\n0\n0\n0''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''10\n11\n11\n111\n111\n1\n1\n1111\n1\n22\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"999\") == \"9\"\nassert solution(\"9999\") == \"9\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"\nassert solution(\"1\\n222\\n222\\n1\") == \"13\\n90\\n1\\n66\"\nassert solution(\"1\\n222\\n222\\n1\\n1\") == \"13\\n90\\n1\\n66\"\nassert solution(\"1\\n222\\n222\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"13\\n90\\n1\\n66\"\nassert solution(\"1\\n222\\n222\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"13\\n90\\n1\\n66\"\n",
        "num_ids_2": 59,
        "num_ids_4": 136
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"22\") == \"1\"\nassert solution(\"9000\") == \"9\"\nassert solution(\"999\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n    3\n    22\n    9999\n    1\n    777\n    ''') == '13'\nassert solution('''\\\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    ''') == '90'\nassert solution('''\\\n    5\n    22\n    9999\n    1\n    777\n    ''') == '90'\nassert solution('''\\\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    ''') == '36'\nassert solution('''\\\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    ''') == '36'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\"\"\") == 'YES\\n2 6\\n1 2\\n'\n\nassert solution(\n\"\"\"\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n\"\"\") == 'NO\\n'\n\nassert solution(\n\"\"\"\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == 'YES\\n2 2\\n4 1\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"YES\\n1 1\"\nassert solution(\"3\\n5\\n1 1 1 1 1\") == \"YES\\n1 1\\n3 2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 71
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\\n5\") == \"YES\"\nassert solution(\"5\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"YES\\n2 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n2\\n1') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"NO\"\n",
        "num_ids_2": 56,
        "num_ids_4": 127
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1209,
        "num_ids_4": 1209
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\n''') == 'YES'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"1\n5\n5\n1 1 1 1 1\n2\n2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"2\n5\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"3\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == 5\nassert solution(\"3\\n1\\n2\\n3\\n4\") == 6\nassert solution(\"3\\n-1\\n0\\n2\") == 6\nassert solution(\"3\\n-1\\n0\\n2\\n-3\") == 6\nassert solution(\"3\\n-1\\n0\\n2\\n-3\\n-1\") == 6\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 2 3'''\n) == '6'\nassert solution(\n'''3 -1 0 2'''\n) == '6'\nassert solution(\n'''2 -3 -1 0 2'''\n) == '6'\nassert solution(\n'''2 -3 -1 0 2'''\n) == '6'\nassert solution(\n'''2 -3 -1 0 2'''\n) == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 3 -1 2\") == 5\nassert solution(\n    \"1 -2 3 -1\") == 7\nassert solution(\n    \"-1 1 -3 1 -1\") == 4\nassert solution(\n    \"-1 -1 -2 -3 -4\") == 0\nassert solution(\n    \"1 1 -1 2 2\") == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\") == \"2\"\nassert solution(\"3\\n4\") == \"7\"\nassert solution(\"-1\\n-1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"-3\\n-1\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n'''\n[4,2,3]\n2\n\n[3,-1,0,2]\n3\n\n[2,-3,-1,5,-4]\n2\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"-1,2,3\") == \"2,3,-1\"\nassert solution(\"-1,2,3,4\") == \"2,3,-1,4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 47
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4,2,3') == 5\nassert solution('3,-1,0,2') == 6\nassert solution('2,-3,-1,5,-4') == 6\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('0 0 0') == ''\nassert solution('1') == ''\nassert solution('0 0 0 1') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0,2,1,-6,6,-7,9,1,2,0,1\") == \"true\"\nassert solution(\"0,2,1,-6,6,-7,9,-1,2,0,1\") == \"false\"\nassert solution(\"3,3,6,5,-2,2,5,1,-9,4\") == \"true\"\nassert solution(\"2,1,4,5,-1,-2,3,-4,4,-1,5,-1,-3,-2,6,-1,-4,2,-3,-5,-5,-1,1,-5,3,-2,-5,4,-2,3,-4,1,-3,2,-5,5,-3,-3,-1,-5,3,-3,-3,-1,4,-5,-2,-5,2,-3,-4,-1,2,-3,-1,-3,-2,-2,-3,3,-3,-4,-2,-1,-3,-3,-2,-5,5,1,-2,-3,-2,-4,-2,-2,1,-2,-3,-3,-5,3,-1,-1,-5,1,3,-5,2,-3,-1,5,-3,-3,-2,-3,-2,-4,-4,-4,1,-3,-3,-2,-3,-2,-4,-5,-5,2,-1,-5,3,-5,-4,-1,-3,-5,-4,-3,2,-4,2,-2,-5,2,-5,-1,5,2,-1,-3,-5,-3,-5,1,-4,-5,-2,-1,-3,-4,-4,5,2,-5,3,-4,-2,-1,-2,-4,-3,-3,-2,2,-4,-4,-1,-5,-3,-4,-5,2,-4,-2,-1,-5,3,-5,-3,-2,-2,2,-5,-1,-5,-5,-3,-2,-5,-3,-3,-5,-3,-3,2,-4,1,-5,2,-3,-2,1,-5,-1,-2,-1,-5,3,-5,-2,-5,-3,-1,2,-3,-3,-5,-1,-1,-5,-1,-4,-3,-4,-4,-2,-5,-2,-5,-5,-1,-5,-3,-3,-4,-5,-2,-1,-1,2,5,1,-5,-5,-4,-3,-3,-2,-5,5,2,-2,-4,-4,1,-2,-4,-5,-5,-2,-5,2,-1,-4,-3,-2,-5,5,1,-4,-4,-2,-5,-4,-4,2,-5,2,-5,-5,-2,-5,-1,-2,-5,4,2,-5,5,-4,-3,-1,4,-2,-4,-3,-3,-4,-4,-5,2,-5,-5,2,-4,-5,3,-4,-5,5,2,-2,-5,2,-2,-2,-1,3,-4,-5,-3,-5,3,-5,-2,-5,-5,-3,-4,-5,4,2,-2,-5,-3,-5,-2,-5,-3,-4,-4,-3,-5,-5,-5,2,-3,-5,-4,-5,5,5,-2,-5,-3,-4,-4,-5,5,2,-2,-5,5,-4,-3,-4,-5,-4,-5,3,-4,-5,-5,-1,-5,-4,-5,-3,-5,5,2,-5,5,-4,-5,5,-5,5,-5,-5,5,-5,-5,-5,-1,-5,-3,-4,-5,5,-5,5,5,-1,-5,5,5,-1,-5,-5,-5,-5,-5,-5,-5,5,-5,-5,-5,-5,-1,-5,-3,-2,-4,-5,-5,-5,-5,-5,-5,-5,-5,-4,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-4,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5",
        "num_ids_2": 60,
        "num_ids_4": 1715
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == False\nassert solution([1,1,1,1,1,1,1,1,1,1,1]) == False\n",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,2,2,1,-6,6,6,1,7,7,2]) == False\nassert solution([-9,5,1,7,-7,6,1,6,1,-7,0,8,0,-4,1,3,1,-7,5,7,0,-9,9,-3,1,9,6,0,-5,0,-3,-1,0,-2,8,5,-5,2,-1,-5,7,-8,0,-3,9,2,5,1,0,1,7,6,-1,-8,-1,0,0,-9,8,-1,7,9,3,-2,-4,-7,-2,0,-3,9,1,-3,-8,5,-2,2,9,-4,-1,0,7,2,-7,4,3,-9,-3,-2,5,0,3,2,8,-6,-5,0,4,3,7,9,7,8,1,4,2,-1,-3,-6,1,-1,6,3,1,-1,-7,0,1,1,8,-5,6,-1,2,0,0,-8,6,-4,-8,5,-2,2,9,6,-7,-1,-3,-1,-7,-4,-1,4,1,4,-1,-2,3,3,1,1,5,-4,7,-2,1,1,8,-3,8,7,2,-2,-6,0,1,7,3,2,-1,-2,-4,-6,9,-9,-6,-8,-3,-6,-7,3,7,0,-1,3,-8,-4,-2,1,1,-4,-1,-6,-4,-9,-1,6,-3,-5,8,-2,-1,-1,0,-8,-7,-1,-7,3,4,1,-1,-9,7,2,-8,9,9,-3,0,-9,5,1,2,0,9,-8,4,-8,8,4,7,2,5,7,1,1,2,1,7,6,6,-6,7,5,-4,-6,3,2,1,-1,-2,6,4,-2,7,3,-1,-1,-1,6,3,-8,6,7,5,5,-3,-3,-8,-1,-1,5,-1,-8,-2,4,-2,-3,-2,-1,-4,-2,-5,-2,0,-5,-2,5,-3,-1,-7,-2,1,0,-1,1,7,-1,1,1,-2,3,-5,0,-1,5,3,2,1,0,0,-6,1,0,-3,1,0,1,5,3,-2,-1,1,1,-2,1,2,-2,2,4,-4,-4,-8,-1,-1,-2,3,4,-3,4,5,-2,-2,-2,4,-3,-1,-3,5,3,-4,-6,-3,-1,4,6,3,1,0,0,-3,1,0,-1,-7,-8,2,-1,-8,3,-1,-7,-7,-3,-1,-3,-3,-4,-4,-6,-5,-3,-7,3,-6,0,-2,1,0,-1,1,7,-1,-7,-7,0,4,-1,0,0,-4,1,1,-6,-3,-1,-6,-6,-5,-8,-7,-2,-3,-5,-9,3,-4,-9,-5,-8,-3,-2,-5,-6,-3,-4,-2,-8,3,1,0,3,2,-8,7,-4,-2,4,4,-6,-3,-6,-2,1,-5,6,0,-8,-2,1,1,0,-2,-1,1,1,-1,0,-6,3,5,8,-8,2,2,2,1,-2,3,-4,-1,-1,2,-1,-2,3,-3,-8,-1,3,2,1,-5,2,-1,-8,-4,0,-1,5,-2,1,2,0,-2,6,-1,-2,-2,1,-1,-4,0,-1,-2,-1,5,3,1,6,-2,-6,-6,4,-2,-7,3,-6,2,-3,-1,1,-1,-4,-7,3,-8,-3,0,0,-2,1,4,2,-1,-2,-1,0,2,-5,0,-2,-1,-3,5,1,3,1,0,0,-1,5,4,1,-5,5,-5,1,-1,-1,-1,2,1,2,1,3,-2,-2,-1,1,3,0,-2,-1,0,-1,1,-2,-1,-1,0,-3,-3,-2,-2,0,-6,-2,-1,-8,-1,-1,1,2,-1,0,-1,1,2,-1,1,-3,-3,0,-2,4,-1,3,1,1,0,-5,1,-1,-2,-3,-1,-4,1,-2,1,-5,-2,-5,-5,-1,-1,-2,3,0,1,-4,1,-3,1,1,-2,-5,1,-5,1,0,5,-5,1,-5,1,-3,-2,-1,0,-2,1,0,1,1,0,0,-2,-5,-3,-4,-6,-4,-3,-1,-1,-3,3,-5,-5,-5,-5,-1,-3,-1,-1,-1,-3,2,1,-1,-1,-1,2,1,-1,0,-1,2,-1,-1,-1,0,-2,3,-4,0,-2,-2,2,-3,4,-3,-4,-1,0,0,0,-4,1,-1,-1,-1,1,0,1,-1,1,-1,2,-1,-1,-1,0,-1,3,-3,-2,-1,1,0,2,-2,-2,0,-2,4,-2,3,-1,-1,2,-2,-1,2,-1,3,-1,0,2,-3,-1,-1,-3,1,-1,-1,-2,-3,3,-1,0,-4,1,2,1,2,3,-3,-1,0,-3,0,-2,-1,0,-2,3,-1,0,-3,-2,-1,1,-1,1,-1,3,-1,0,-2,2,-3,3,-1,0,-4,1,1,",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, -7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"\nassert solution([2, 3, 4, 6, 5, -2, 2, 5, 1, -9, 4]) == \"false\"\nassert solution([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == \"true\"\n",
        "num_ids_2": 65,
        "num_ids_4": 127
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == False",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) is True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) is False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) is True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) is False\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) is True\n",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('2\\nbaa\\naaa\\nbaa\\n') == 'baa'\nassert solution('1\\nabc\\n') == 'abc'\nassert solution('2\\nab\\nab\\n') == 'ab'\n",
        "num_ids_2": 70,
        "num_ids_4": 109
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('beat') =='vet'\nassert solution('vet') == 'beat'\nassert solution('beet') =='vet'\nassert solution('bet') == 'beet'\nassert solution('bed') == 'beet'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet and vet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet and vet\"\nassert solution(\"beat\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\n\") == \"bet and bet\"\nassert solution(\"beat\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\n\") == \"bet and bet\"\n",
        "num_ids_2": 68,
        "num_ids_4": 135
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.splitlines()[1]",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\nbeat\\nevet\\nbeet\\nbeat\\nvet\\nbeat\") == \"beet\"\nassert solution(\"3\\nvet\\nevet\\nvet\\nbet\\nbeat\\nbeet\") == \"bet\"\nassert solution(\"5\\nvet\\nevet\\nbet\\nbet\\neet\") == \"bet\"\nassert solution(\"1\\nw\") == \"w\"\nassert solution(\"10\\nwtwtwwtw\") == \"wtwtww\"\n",
        "num_ids_2": 59,
        "num_ids_4": 96
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(f\"{solution(stdin)=}\")\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('beat:vet:beet:bed:vet:bet:beet:') == 'beet'\nassert solution('beat:bet:bet:bet:bet:bet:bet:') == 'bet'\nassert solution('beat:bet:bet:bet:bet:bet:bet:') == 'bet'\nassert solution('beat:bet:bet:bet:bet:bet:bet:') == 'bet'\nassert solution('beat:bet:bet:bet:bet:bet:bet:') == 'bet'\n",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet'\nassert solution('6\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet'\nassert solution('5\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet'\nassert solution('5\\nvet\\nbeet\\nbed\\nbet\\nbeet') == 'beet'\nassert solution('3\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'bet'\n",
        "num_ids_2": 65,
        "num_ids_4": 124
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nbet\\nbeet\\nbed\\nbet\\nbeet\\n') == 'bet'\nassert solution('beat\\nbet\\nbeet\\nbed\\nbet\\nbeet\\n') == 'beet'\nassert solution('beat\\nbet\\nbeet\\nbed\\nbet\\nbeet\\n') == 'beet'\n",
        "num_ids_2": 65,
        "num_ids_4": 124
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '0'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n') == '12'\nassert solution('2\\n1\\n1\\n') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n4 8''') == '8'\nassert solution('''10\n
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n4 8''') == '8'\nassert solution('''3\n1 1 1\n2 -1 -1\n3 1 1''') == '2'\nassert solution('''5\n10 2 3 1 6\n5 3 2 1 6\n4 2 1 6 3\n2 -1 -1 1\n1 1 1 1 1''') == '24'\nassert solution('''3\n3 1 1\n5 3 1\n5 3 2\n4 2 1\n4 -1 -1\n1 1 1\n1 1 1''') == '8'\nassert solution('''4\n4 1 3 1\n3 2 2 1\n2 2 1 3\n2 3 1 4\n1 1 1 1\n1 1 1 1''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8') == '8'\nassert solution('1 2 3 4 5 6 7 8') == '10'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '25'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '100'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '135'\n",
        "num_ids_2": 28,
        "num_ids_4": 156
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\"\n\nprint(\"The testing is done.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n4 8\n\n\"\"\"\n    ) == \"8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n8''') == '8'\nassert solution('''1\n9''') == '1'\nassert solution('''2\n1 1\n2 2''') == '2'\nassert solution('''2\n2 1\n2 1''') == '1'\nassert solution('''3\n1 1 1\n1 2 1\n1 1 1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n4 8') == '8'\nassert solution('3\\n2 1 2') == '3'\nassert solution('5\\n2 4 4 4 2') == '10'\nassert solution('4\\n-2 -4 -4 -2') == '-8'\nassert solution('2\\n2') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 67
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8') == '8'\nassert solution('-8 1 -9 3') == '9'\nassert solution('-4 -9 -3 -1') == '1'\nassert solution('-4 -4 -1 -1') == '-1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234\\n150\\n100\\n') == '84'\n'''",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\nassert solution(\"1234 150 9\") == \"0\"\nassert solution(\"1234 15 9\") == \"0\"\nassert solution(\"1234 15 9\") == \"0\"\nassert solution(\"1234 15 9\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1234\n150\n100\n''') == '84'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"84\"\nassert solution(input(\"\")) == \"84\"\nassert solution(input(\"\")) == \"84\"\nassert solution(input(\"\")) == \"84\"\nassert solution(input(\"\")) == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '84'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\nassert solution(\"1000000 1 100\") == \"1000000\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0\\n0\\n') == '1'\nassert solution('10\\n10\\n10\\n') == '10'\nassert solution('10\\n10\\n5\\n') == '9'\nassert solution('10\\n5\\n10\\n') == '5'\nassert solution('5\\n10\\n5\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 10') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('10 2') == ''\nassert solution('1 1') == ''\nassert solution('10 1') == ''\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"8\"\nassert solution(\"4 2\") == \"48\"\nassert solution(\"5 2\") == \"352\"\nassert solution(\"10 2\") == \"10640\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '8'\nassert solution('''3 3''') == '9'\nassert solution('''2 1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''5 4''') == '7'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"5 3\") == \"130\"\nassert solution(\"100 11\") == \"65537\"\nassert solution(\"999 999\") == \"65539\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '8'\nassert solution('2 3') == '5'\nassert solution('10 10') == '1'\nassert solution('20 10') == '1'\nassert solution('20 11') == '0'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '10'\nassert solution('1 2') == '0'\nassert solution('10 10') == '26'\n'''\n\nfrom itertools import permutations\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 2\n\"\"\".strip()\n) == \"8\"\n\nassert solution(\n\"\"\"\n2 2\n\"\"\".strip()\n) == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2\\n2 3') == 'POSSIBLE'\nassert solution('2 2\\n1 2') == 'POSSIBLE'\nassert solution('1 1\\n1 1') == 'POSSIBLE'\nassert solution('2 1\\n1 1') == 'POSSIBLE'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 3\\n') == 'POSSIBLE'\nassert solution('2 3\\n1 2\\n2 3\\n') == 'POSSIBLE'\nassert solution('1 1\\n1 1\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n2 1\\n') == 'IMPOSSIBLE'\nassert solution('1 1\\n1 2\\n2 1\\n') == 'IMPOSSIBLE'\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'\nassert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'\nassert solution('3 2\\n2 2\\n1 3\\n') == 'IMPOSSIBLE'\nassert solution('1 1\\n1 1\\n') == 'POSSIBLE'\nassert solution('1 1\\n2 1\\n') == 'POSSIBLE'\n",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"POSSIBLE\"\nassert solution(\"2 2\") == \"POSSIBLE\"\nassert solution(\"2 2\") == \"POSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"2 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"2 2\\n1 3\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"2 2\\n1 3\\n3 4\\n\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 72
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\nassert solution('1 2 3') == 'IMPOSSIBLE'\nassert solution('2 2') == 'POSSIBLE'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''2 1\n1 2''') == 'POSSIBLE'\nassert solution('''5 7\n1 2\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n''') == 'POSSIBLE'\nassert solution('''5 7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n''') == 'POSSIBLE'\nassert solution('''5 7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n''') == 'POSSIBLE'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'acdr'\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[1::2]\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'ahgdcjpmlnfz'\nprint(\"All tests passed successfully.\")\n",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('codewars') == 'acdr'\nassert solution('spaceship') == 'acdr'\nassert solution('up') == 'cde'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\nassert solution('aaaaaa') == 'aaaaaa'\nassert solution('aaa') == 'aaa'\nassert solution('aaaab') == 'baa'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aac') == 'ac'\nassert solution('aacc') == 'acc'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('codechef') == 'cdcdc'\nassert solution('subb') == 'b'\nassert solution('code') == 'cdcdc'\nassert solution('ratchet') == 'dcdc'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n\n-----My Solution-----\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcde') == 'acde'\nassert solution('abcdefgh') == 'abcdefgh'\nassert solution('abcdefghi') == 'abcdefghi'\nassert solution('abcdefghj') == 'abcdefghj'\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\nassert solution('a\\nb') == 'ab'\nassert solution('a\\nb\\nc') == 'abc'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == \"YES\"\nassert solution('rng gorilla apple') == \"YES\"\nassert solution('rng raccoon') == \"NO\"\nassert solution('rng raccoon') == \"NO\"\nassert solution('rng raccoon') == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng goror monkey') == 'NO'\nassert solution('rng gorilla') == 'NO'\nassert solution('rng g o r o r') == 'NO'\nassert solution('rng goror') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng') == 'NO'\nassert solution('rngor') == 'NO'\nassert solution('rnggor') == 'NO'\nassert solution('rngg') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\"\"\"\n\nWrite a function that accepts a list of words and a string\nof a word, and returns the number of times that string appears in the list\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == \"YES\"\nassert solution('rng gorilla apple') == \"YES\"\nassert solution('rng gorilla apple') == \"NO\"\nassert solution('rng') == \"NO\"\nassert solution('rng') == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla owl') == 'NO'\nassert solution('rng gorilla rabbit') == 'NO'\nassert solution('rng gorilla elephant') == 'NO'\nassert solution('rng gorilla zoo') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla gapple') == 'NO'\nassert solution('rng gorilla gar apple') == 'NO'\nassert solution('rng gorilla gar ape') == 'YES'\nassert solution('rng gorilla gor ape') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"geek rng gee\") == \"NO\"\nassert solution(\"tacocat\") == \"NO\"\nassert solution(\"zaphod bee\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('7') == 'EQUAL'\nassert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcde') == 'GREATER'\nassert solution('12345') == 'LESS'\nassert solution('1234') == 'EQUAL'\nassert solution('9') == 'GREATER'\nassert solution('90') == 'LESS'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'LESS'\nassert solution('36 4') == 'GREATER'\n\nprint(solution('36 4'))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'LESS'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == 'LESS'\nassert solution(\"1\\n1\") == 'EQUAL'\nassert solution(\"1\\n1000000\") == 'GREATER'\nassert solution(\"11\\n11\") == 'EQUAL'\nassert solution(\"1000000\\n11\") == 'LESS'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('36\\n24') == 'LESS'\nassert solution('36\\n36') == 'EQUAL'\nassert solution('0\\n1') == 'LESS'\nassert solution('0\\n10') == 'GREATER'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('24') == 'LESS'\nassert solution('36') == 'GREATER'\nassert solution('50') == 'EQUAL'\nassert solution('100') == 'LESS'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('96\\n9') == 'LESS'\nassert solution('12\\n12') == 'EQUAL'\nassert solution('96\\n9') == 'LESS'\nassert solution('12\\n12') == 'EQUAL'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\norange\napple\napple\n1\ngrape''') == '2'\nassert solution('''3\norange\norange\napple\n1\ngrape''') == '1'\nassert solution('''3\norange\norange\norange\n1\ngrape''') == '0'\nassert solution('''3\norange\norange\norange\n1\ngrape''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == 2\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na",
        "num_ids_2": 1609,
        "num_ids_4": 1609
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == '2'\nassert solution('apple\\norange\\napple\\n1\\ngrape') == '2'\nassert solution('apple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\norange\\napple\\n1\\ngrape\\n') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple') == 2\nassert solution('appleorange') == 3\nassert solution('banana') == 0\nassert solution('grape') == 3\nassert solution('ab') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\napple\\norange\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"2\\napple\\norange\\n1\\ngrape\\n\") == \"1\"\nassert solution(\"3\\napple\\norange\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\n1\\ngrape\\n\") == \"2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''5\napple\norange\napple\n1\ngrape''') == '4'\nassert solution('''5\napple\norange\napple\n1\ngrape''') == '4'\nassert solution('''2\na\na\n1\na''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a\\na') == '2'\nassert solution('a\\na') == '2'\nassert solution('a\\na') == '2'\nassert solution('b\\nb') == '2'\nassert solution('a\\na') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == '2'\nassert solution('apple\\norange\\napple\\n2\\ngrape') == '5'\nassert solution('banana\\nbanana\\nbanana\\n2\\ngrape') == '4'\nassert solution('apple\\napple\\napple\\n2\\ngrape') == '4'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\nassert solution('b') == 'T'\nprint(\"Test 1 passed\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"T\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'T'\nassert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"CGTG\") == \"T\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n\nassert solution(\"A\") == \"T\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n3') == '5'\nassert solution('2\\n4') == '5'\nassert solution('3\\n2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '14'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n\nassert solution(\n'''4\n2 2 1 1\n1 2 1\n''') == '4'\n\nassert solution(\n'''3\n1 2 3\n2 1 1\n3 1\n''') == '6'\n\nassert solution(\n'''2\n2 1\n1 1\n''') == '2'\n\nassert solution(\n'''1\n1\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution(\n'''\n4\n2 2 2 4\n1 2 2 2\n''') == '12'\nassert solution(\n'''\n5\n1 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution(\n'''\n7\n5 7 3 6 6 8\n4 6 5 3 2 3\n1 2 3 4 5 6\n7 6 5 4 3 2\n''') == '26'\nassert solution(\n'''\n3\n1 1 1\n2 2 2\n1 1 1\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5\n    3 2 2 4 1\n    1 2 2 2 1\n    '''\n) == '14'\nassert solution(\n    '''\n    1\n    2\n    '''\n) == '2'\nassert solution(\n    '''\n    10\n    3 4 5 4 5 6 2 2 1\n    4 5 4 3 2 1 1 1 1\n    '''\n) == '13'\nassert solution(\n    '''\n    2\n    1\n    '''\n) == '2'\nassert solution(\n    '''\n    10\n    2 3 4 5 2 5 4 3 2 1\n    4 5 4 3 2 1 1 1 1 1\n    '''\n) == '9'\n'''\nfor _ in range(int(stdin.readline())):\n    solution(stdin.readline())\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n\nassert solution('''\n6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '36'\n\nassert solution('''\n10\n3 2 2 4 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n''') == '41'\n\nassert solution('''\n5\n3 2 2 4 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n1 2 2 2 1\n''') == '14'\n\nassert solution('''\n5\n3 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '16'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == 14\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 1\") == \"1\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n') == '1\\n'\nassert solution('1 2 2\\n') == '1\\n'\nassert solution('2 3 2\\n') == '2\\n'\nassert solution('1 1 2\\n') == '0\\n'\nassert solution('1 3 2\\n') == '2\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n2 2 2''') == '1'\nassert solution('''3 3\n2 2 2''') == '1'\nassert solution('''3 3\n3 4 4''') == '2'\nassert solution('''4 4\n4 4 4 4''') == '2'\nassert solution('''4 4\n4 4 4 4''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nTestcase 1:\n2\n2\n1 2\n\nTestcase 2:\n3\n2 2 3\n\nTestcase 3:\n6\n3 2 1 3 2 2\n\nTestcase 4:\n10\n2 2 2 2 2 2 2 2 2\n\nTestcase 5:\n10\n1 1 1 1 1 1 1 1 1 1\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 2 2''') == '1'\nassert solution('''5\n5 4 3 2 1''') == '2'\nassert solution('''1000\n123456789''') == '987654321'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n\ntotal = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        total += a[i]\n    else:\n        total += a[i+1]\n\nprint(total - max(a))\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n2 2 2\\n') == '1'\nassert solution('2 3\\n2 2 2\\n') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '1'\nassert solution('3 3 3') == '5'\nassert solution('3 3 4') == '5'\nassert solution('3 3 5') == '7'\nassert solution('3 3 6') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('3 2 1\\n3 2 2\\n3 2 3') == 'Yes'\nassert solution('3 2 1\\n3 2 2\\n3 2 3') == 'No'\nassert solution('3 2 1\\n3 2 2\\n3 2 3') == 'Yes'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'No'\nassert solution('2 2 2') == 'No'\nassert solution('1 0 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 0 1\"\n) == \"Yes\"\nassert solution(\n    \"2 1 2\"\n) == \"Yes\"\nassert solution(\n    \"1 0 1\"\n) == \"No\"\nassert solution(\n    \"2 1 2\"\n) == \"No\"\nassert solution(\n    \"1 0 1\"\n) == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 1 2\n1 1 2\n1 1 2''') == 'No'\nassert solution('''1 2 2\n1 1 1\n1 1 2''') == 'No'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\\n1 0 1\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n2 0 1\") == \"No\"\nassert solution(\"1 0 1\\n1 0 1\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n1 0 1\\n1 0 1\") == \"Yes\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'Yes'\nassert solution('1 0 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\nprint(solution(\"ARC\"))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\nprint(solution('ARC'))\nprint(solution('ARC'))\nprint(solution('ABC'))\nprint(solution('ABC'))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[::-1]\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == input()\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\n\nprint('All set! Click on \"Check\" to earn cool rewards!')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"3 8 1\") == \"0\"\nassert solution(\"5 10 2\") == \"5\"\nassert solution(\"0 0 2\") == \"0\"\nassert solution(\"1 1 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('10 11 10') == '2'\nassert solution('100 100 10') == '0'\nassert solution('100 100 100') == '1'\nassert solution('7 9 9') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('-1 0 1') == '0'\nassert solution('2 2 0') == '0'\nassert solution('2 1 0') == '1'\nassert solution('2 -1 0') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('1 1 1') == '0'\nassert solution('1 10 10') == '10'\nassert solution('7 3 17') == '6'\nassert solution('8 8 8') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('3 8 2') == '0'\nassert solution('5 1 2') == '2'\nassert solution('-1 2 2') == '1'\nassert solution('1 2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('0 1 10') == '5'\nassert solution('1 10 1') == '0'\nassert solution('2 3 5') == '2'\nassert solution('1 1 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 3\") == \"0\"\nassert solution(\"0 0 1\") == \"1\"\nassert solution(\"2 2 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''25''') == 'Christmas'\nassert solution('''24''') == 'Christmas Eve'\nassert solution('''23''') == 'Christmas Eve Eve'\nassert solution('''22''') == 'Christmas Eve Eve Eve'\nassert solution('''21''') == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''25''') == 'Christmas'\nassert solution('''23''') == 'Xmas Eve Eve Eve'\nassert solution('''24''') == 'Xmas Eve'\nassert solution('''25''') == 'Christmas'\nassert solution('''22''') == 'Xmas Eve Eve Eve'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Christmas\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    input()\n) == 'Christmas'\n\nassert solution(\n    input()\n) == 'Christmas Eve'\n\nassert solution(\n    input()\n) == 'Christmas Eve Eve'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n\nprint(\"All test cases passed.\")\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('21') == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Christmas\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Christmas\"\nassert solution(input()) == \"Christmas Eve\"\nassert solution(input()) == \"Christmas Eve Eve\"\nassert solution(input()) == \"Christmas Eve Eve Eve\"\nassert solution(input()) == \"Christmas Eve Eve Eve Eve\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\nassert solution('25') == \"Christmas Eve\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('7') == '4'\nassert solution('11') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n') == '3'\nassert solution('8\\n') == '4'\nassert solution('4\\n') == '2'\nassert solution('7\\n') == '3'\nassert solution('3\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('-1') == ''\nassert solution('5') == '2'\nassert solution('6') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('7') == '4'\nassert solution('10') == '2'\nassert solution('10') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('10') == '6'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '4'\nassert solution('4') == '2'\nassert solution('9') == '2'\nassert solution('1') == '0'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '4'\n'''\nTakahashi loves numbers divisible by 2.\nYou are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\nHere, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder.\nFor example,\n - 6 can be divided by 2 once: 6 -> 3.\n - 8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1.\n - 3 can be divided by 2 zero times.\n\n-----Input-----\nN\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\n7\n\n-----Sample Output-----\n4\n\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '4'\nassert solution('10') == '6'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 5') == 'No'\nassert solution('4 7 9 4') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('1 1 1 2') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('2 1 9 7') == 'No'\nassert solution('1 1 1 1') == 'Yes'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"2 4 6 8\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"1 2 3 5\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('4 7 9 1') == 'Yes'\nassert solution('1 2 4 7') == 'No'\nassert solution('1 2 3 5') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 4') == 'No'\nassert solution('3 4 5 1') == 'Yes'\nassert solution('6 7 8 9 1') == 'No'\nassert solution('4 4 3 2') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('1 2 3 5') == 'Yes'\nassert solution('1 2 4 5') == 'No'\nassert solution('1 2 3 4') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:3].upper()\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\nsolution 2\n\"\"\"\n\nimport sys",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('a b c') == 'abc'\nassert solution('a b c d') == 'abcd'\nassert solution('a b c d e') == 'abcde'\nassert solution('a b c d e f') == 'abcfd'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"hello world\") == \"HW\"\nassert solution(\"Hello World\") == \"HW\"\nassert solution(\"a bc\") == \"aBC\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('ct fb') == 'CF'\nassert solution('b') == 'B'\nassert solution('1') == '1'\nassert solution('a') == 'A'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('a') == 'A'\nassert solution('abc') == 'ABC'\nassert solution('abc def') == 'A B C'\nassert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('codingbat hangman') == 'COD'\nassert solution('ZxgXxGxGxGx
        "num_ids_2": 29,
        "num_ids_4": 1836
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"ABC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('100 100 120') == 'No'\nassert solution('500 500 500') == 'Yes'\nassert solution('500 1000 500') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('1 9 5') == 'No'\nassert solution('50 100 120') == 'Yes'\nassert solution('500 120 100') == 'Yes'\nassert solution('50 120 100') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''50 100 120\n''') == 'Yes'\nassert solution(\n'''5 45 78\n''') == 'No'\nassert solution(\n'''5 100 5\n''') == 'No'\nassert solution(\n'''50 100 60\n''') == 'No'\nassert solution(\n'''50 30 12\n''') == 'Yes'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\n'''\n\na, b, c = [int(i) for i in stdin.split()]\n\nprint(\"Yes\" if a+b >= c else \"No\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('50 100 120') == \"Yes\"\nassert solution('50 100 50') == \"No\"\nassert solution('50 50 50') == \"No\"\nassert solution('50 50 50') == \"No\"\nassert solution('50 50 50 50') == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A 10 10') == 'Yes'\nassert solution('B 1 1') == 'Yes'\nassert solution('B 1 5') == 'No'\nassert solution('B 4 9') == 'Yes'\nassert solution('B 1 100') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"5\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('5 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\n",
        "num_ids_2": 217,
        "num_ids_4": 418
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'\nassert solution('''4 6\n6 6 6 6\n''') == '0'\nassert solution('''2 4\n6 6 6 6\n2 2 2 2\n''') == '2'\nassert solution('''5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n''') == '36'\nassert solution('''4 4\n6 6 6 6\n2 2 2 2\n2 2 2 2\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 8\n7 9 8 9\n''') == '5'\nassert solution('''3 7\n1 2 3 4\n''') == '1'\nassert solution('''4 3\n5 7 7 7\n''') == '2'\nassert solution('''4 3\n5 7 7 8\n''') == '2'\nassert solution('''4 5\n5 7 7 8 9\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8') == '5'\n\"\"\"\n\nn, a = map(int, stdin.readline().split())\ns = stdin.readline().strip()\n\nN = s.count('1')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8') == '5'\nassert solution('5 10') == '5'\nassert solution('4 6') == '0'\nassert solution('1 2 3 4') == '1'\nassert solution('6 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\"\"\"\nl = [7,9,8,9]\nl[2:3] = [9]\nprint(l)\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4 2 1 3\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '4 2 1 3'\nassert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3 4 5') == '5 4 3 2 1'\nassert solution('1 2 3 4 5 6') == '6 4 3 2 1'\nassert solution('1 2 3 4 5 6 7') == '7 6 5 4 3 2 1'\n",
        "num_ids_2": 29,
        "num_ids_4": 66
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('0 1 0 2 0') == '0 2 1 0 0'\nassert solution('0 1 0 2 0') == '0 2 1 0 0'\nassert solution('0 1 0 2 0') == '0 2 1 0 0'\nassert solution('0 1 0 2 0') == '0 2 1 0 0'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4\n1 2 3 4\"\"\"\n) == '4 2 1 3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"4 2 1 3\") == \"4 2 1 3\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 1') == '1'\nassert solution('1 2 3 4 5') == '5 4 3 2 1'\nassert solution('10 10 10 10 10') == '10'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10 9 8 7 6 5 4 3 2 1'\nprint(\"All tests passed successfully.\")\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 3 4 5\") == \"No\"\nassert solution(\"10 3\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 1\") == \"Yes\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n",
        "num_ids_2": 1760,
        "num_ids_4": 1760
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('6 5\\n1 2 3 4 5') == 'No'\nassert solution('6 5\\n1 2 3 4 5') == 'No'\nassert solution('10 4\\n1 2 3 4 5') == 'Yes'\nassert solution('10 4\\n1 2 3 4 5') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n5\\n6') == 'Yes'\nassert solution('6\\n5\\n4') == 'No'\nassert solution('1\\n3\\n5\\n6\\n9\\n10\\n11') == 'No'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 88
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'No'\nassert solution(input2) == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''3 4\n2 1 1''') == 'No'\nassert solution('''10 5\n4 5 6\n4 5 6''') == 'Yes'\nassert solution('''10 5\n4 5 6\n4 2 2''') == 'No'\nassert solution('''20 5\n4 5 6\n4 2 2''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == 'No'\nassert solution('10 3') == 'Yes'\nassert solution('100 4') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''1 1\n2 2\n3 3''') == 'No'\nassert solution('''4 4\n10 2\n3 5\n2 3''') == 'Yes'\nassert solution('''3 3\n2 5\n3 2''') == 'No'\nassert solution('''5 5\n5 5\n5 4\n5 3\n5 2\n5 1''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6\n10 5 7''') == 'No'\nassert solution('''10 3\n4 5 6\n4 5 6\n10 5 7''') == 'No'\nassert solution('''10 3\n4 5 6\n4 5 6\n10 5 7\n4 5 6''') == 'Yes'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('10 3\\n4 5 4') == 'No'\nassert solution('10 1\\n1 1') == 'Yes'\nassert solution('10 1\\n1 1') == 'No'\nassert solution('5 2\\n1 3 5') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == -1\nassert solution(\"ababab\") == -1\nassert solution(\"abaabab\") == 6\nassert solution(\"ababab\") == 8\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abc') == '1'\nassert solution('abcabab') == '2'\nassert solution('abcabc') == '3'\nassert solution('xyzxyzxyz') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('aaaaa') == '3'\nassert solution('ababab') == '3'\nassert solution('xyzxyzxyz') == '3'\nassert solution('aaaaa') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcdef') == '0'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '0'\nassert solution('xyzxyzxyzxyz') == '6'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcdefg\") == 5\nassert solution(\"ababab\") == 1\nassert solution(\"ababababaab\") == 4\nassert solution(\"xyzzxyzxyzxyzxyzxyz\") == 5\nassert solution(\"aaaaaaaaa\") == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 51
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '6'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 4\nassert solution(\"abaababa\") == 6\nassert solution(\"abaabab\") == 5\nassert solution(\"abaabab\") == 6\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"ababab\") == \"4\"\nassert solution(\"abcabc\") == \"4\"\nassert solution(\"abcba\") == \"2\"\nassert solution(\"abc\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ababab\") == \"ababab\"\nassert solution(\"xyzxyzxyz\") == \"xyzxyzxyz\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"abababab\") == \"abababab\"\nassert solution(\"abababababa\") == \"abababab\"\nprint(solution(\"abcabcabc\"))",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 4\nassert solution('abaababa') == 6\nassert solution('abaabab') == 4\nassert solution('abaaba') == 2\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('acb') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('zab') == 'Yes'\nassert solution('aba') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bac') == \"Yes\"\nassert solution('acb') == \"No\"\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nprint(\"Passed all tests!\")\n\n\"\"\"\n\n\"\"\"\nSolution:\n\nFirst, we compute the hashes of each possible permutation.\nThen, if the hash of two strings are equal, we can conclude they have the same permutation.\n\"\"\"\n\n\"\"\"\nSOLUTION\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('acb') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('bacbacb') == 'Yes'\nassert solution('acbacb') == 'Yes'\nassert solution('abc') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\n\"\"\"\n\n\"\"\"\n1.3.1.1 The Algorithm\n\nThe above algorithm is the fastest one to solve this problem.\n\nAlgorithm:\n\nCreate a list of 26 characters from abc.\n\nFor each character, create a copy of the list, so that each character of the list has a different copy.\n\nFind the position of the character of a given character in the list.\n\nAppend the position of the character to the original list.\n\nCheck if the new list has the given character.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\"\"\"\n\n\"\"\"\n1.3.1.2 The Analysis\n\nFor each character, there are 26 positions in the list.\n\nFor each character, the position of the character in the list is the index of the character.\n\nThe length of the list is 26.\n\nFor each character, the position of the character in the list is the index of the character.\n\nAlgorithm:\n\nCreate a list of 26 characters from abc.\n\nFor each character, create a copy of the list.\n\nFind the position of the character in the list.\n\nAppend the position to the original list.\n\nCheck if the new list has the given character.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\"\"\"\n\n\"\"\"\n1.3.1.3 The Code\n\nThe code is a bit lengthy but very intuitive.\n\nCheck if the list has the given character.\n\nConvert the result to string.\n\"\"\"\n\n\"\"\"\n1.3.1.4 Summary\n\nAlgorithm:\n\nCreate a list of 26 characters from abc.\n\nFor each character, create a copy of the list.\n\nFind the position of the character in the list.\n\nAppend the position to the original list.\n\nCheck if the new list has the given character.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\n1.4.2.1 Implement the Solution\n\nThe solution above is by using a stack.\n\nThe solution below is by using a hash table.\n\n1.4.2.2 Analysis\n\nThe solution above is by using a stack.\n\nThe solution below is by using a hash table.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\"\"\"\n\n\"\"\"\n1.4.2.3 Implement the Solution\n\nThe dictionary can be implemented using a hash table.\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\n1.4.2.4 Summary\n\nThe dictionary can be implemented using a hash table.\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\n1.4.2.5 Implement the Solution by Hash Table\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\n1.4.2.6 Implement the Solution by Hash Table\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\"\"\"\n\n\"\"\"\n1.4.2.7 Summary\n\nThe dictionary can be implemented using a hash table.\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\n1.4.2.8 Implement the Solution by Hash Table\n\nThe search operation takes O(1) time.\n\nThe check operation takes O(1) time.\n\nThe convertion takes O(n) time.\n\nThe total operation takes O(n) time.\n\nAlgorithm:\n\nCreate a dictionary of characters.\n\nFor each character, create a hash table.\n\nFor each character, find the character in the dictionary.\n\nCheck if the character is in the hash table.\n\nConvert the result to string.\n\n-----Sample Input-----\nbac\n\n-----Sample Output-----\nYes\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('abc') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('bac') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abca') == 'Yes'\nassert solution('bacb') == 'No'\nassert solution('bacb') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nassert solution('''10\n65370839565\n9165493334\n''') == '634589092585'\n\nfrom typing import Iterable\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == \"646\"\nassert solution('''1\n1000000\n1000000\n''') == \"757402647\"\nassert solution('''2\n1 3\n4 2\n''') == \"20\"\nassert solution('''3\n1 3\n4 2\n5 2\n''') == \"414\"\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\n\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\n\nassert solution('''2\n1 3\n4 2\n''') == '20'\n\nassert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\n\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution(\n'''1\n1000000\n1000000\n''') == '757402647'\nassert solution(\n'''2\n1 3\n4 2\n''') == '20'\nprint('all tests passed')",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"646\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2') == '20'\nassert solution('3\\n1 9\\n3 9\\n') == '249'\nassert solution('4\\n1 4\\n3 4\\n7 4\\n') == '98'\nassert solution('5\\n1 8 7 2 4\\n9 7 2 9 3') == '646'\n",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '20'\nassert solution('4 2') == '7'\nassert solution('5 3') == '13'\nassert solution('5 1') == '5'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1000000\\n1000000') == '20'\nassert solution('2\\n1 3\\n4 2') == '7'\nassert solution('3\\n1 8\\n2 9\\n3') == '37'\nassert solution('4\\n1 8\\n2 9\\n3 4\\n5') == '43'\nassert solution('5\\n1 8\\n2 9\\n3 4\\n5 6\\n7') == '49'\n",
        "num_ids_2": 36,
        "num_ids_4": 82
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''4 1 1\n1 2\n2 3\n2 4\n3 4\n4 1\n''') == '4'\nassert solution('''4 1 1\n1 1\n2 2\n2 3\n2 4\n3 4\n4 1\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3 4\") == \"7\"\nassert solution(\"3 4 5\") == \"17\"\nassert solution(\"4 4 5 4 4 4 4\") == \"20\"\nassert solution(\"9 3 4\") == \"17\"\nassert solution(\"2 5 4 2 6 3 1\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 5') == '17'\nassert solution('3 4 8') == '17'\nassert solution('2 2') == '7'\nassert solution('9 4 8') == '17'\nassert solution('9 3 8') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n\"\"\"\n) == \"17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"17\"\nassert solution(stdin) == \"16\"\n\n\n\n\"\"\"\n\nn, m, k = map(int, stdin.readline().strip().split())\na = list(map(int, stdin.readline().strip().split()))\noffers = []\nfor _ in range(m):\n    x, y = map(int, stdin.readline().strip().split())\n    offers.append((x, y))\n\na.sort()\n\ncost = 0\nfor i in range(k):\n    m = 0\n    for offer in offers:\n        m = max(m, offer[0] - i)\n    cost += a[i] * m\n\nprint(cost)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 7 5\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"9 2\") == \"17\"\nassert solution(\"9 7\") == \"17\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\n\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\n\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n\nassert solution('''5 5 4\n2 4 3 1 2\n2 1\n3 1\n''') == '6'\n\nassert solution('''9 8 3\n7 1 2 8 2 6 5\n2 3\n2 1\n1 2\n6 7\n1 2\n3 3\n4 1\n5 2\n5 4\n6 3\n6 1\n''') == '17'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''9 1 2\n1 2 3 4 5 6 7 8 9\n5 1\n3 5\n7 1\n2 3\n3 4\n''') == '4'\nassert solution('''9 1 2\n1 2 3 4 5 6 7 8 9\n6 8\n6 8\n7 1\n2 3\n3 4\n''') == '4'\n'''\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 2 5') == '17'\nassert solution('7 4 5') == '17'\nassert solution('9 4 8') == '17'\nassert solution('6 8 5 1 8 1 1 2 1') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 69,
        "num_ids_4": 105
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\n\n\"\"\"\nfrom collections import defaultdict, deque\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n3 4\\n3 5\\n3 6\\n3 7') == '1'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '1'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == '2'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n4 5\n4 6\n5 7''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n1 7') == 0\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n7 6\\n1 6') == 1\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n4 7\\n5 7\\n1 7') == 1\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 7') == 1\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n1 6\\n1 7') == 2\n",
        "num_ids_2": 76,
        "num_ids_4": 148
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n'\n                '1 2\\n'\n                '2 3\\n'\n                '3 4\\n'\n                '4 5\\n'\n                '4 6\\n'\n                '5 7\\n') == '2'\nassert solution('7\\n'\n                '1 2\\n'\n                '2 3\\n'\n                '3 4\\n'\n                '3 5\\n'\n                '3 6\\n'\n                '4 5\\n'\n                '4 6\\n'\n                '5 7\\n') == '0'\nassert solution('7\\n'\n                '1 2\\n'\n                '2 3\\n'\n                '3 4\\n'\n                '3 5\\n'\n                '3 6\\n'\n                '3 7\\n'\n                '4 5\\n'\n                '4 6\\n'\n                '5 7\\n') == '1'\nassert solution('7\\n'\n                '1 2\\n'\n                '2 3\\n'\n                '3 4\\n'\n                '3 5\\n'\n                '3 6\\n'\n                '3 7\\n'\n                '4 5\\n'\n                '4 6\\n'\n                '5 7\\n') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1 2\\n1 3\\n2 4\\n2 5\\n4 6\\n4 7\\n5 6\\n5 7\\n1 7\\n1 6\\n1 4\\n1 2\\n1 3\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n1 7\\n1 6\\n1 4\\n1 2\\n1 3\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n4 6\\n4 7\\n5 6\\n5 7\\n1 7\\n1 6\\n1 4\\n1 2\\n1 3\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n1 7\\n1 6\\n1 4\\n1 2\\n1 3\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n1 7\\n1 6\\n1 4\\n1 2\\n1 3\\n') == '1'\n",
        "num_ids_2": 135,
        "num_ids_4": 267
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n2\\n3\\n4') == '5'\nassert solution('1\\n1') == '2'\nassert solution('2\\n2') == '3'\nassert solution('2\\n3\\n4') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '3'\nassert solution('2 4') == '5'\nassert solution('2 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\nThe smallest divisor of $n$ is 1, so the smallest number that is not divisible by $n$ is $1$; it is the $1$-th positive integer.\n\nThe smallest divisor of $n$ is 2, so the smallest number that is not divisible by $n$ is $2$, $4$ and so on; it is the $2$-th positive integer.\n\nThe smallest divisor of $n$ is $n$, so the smallest number that is not divisible by $n$ is $n$ itself.\n\nThe smallest divisor of $n$ is $n$**2, so the smallest number that is not divisible by $n$ is $n^2$ and so on; it is the $3$-th positive integer.\n\nThe smallest divisor of $n$ is $n$**3, so the smallest number that is not divisible by $n$ is $n^3$, $n^2$ and so on; it is the $7$-th positive integer.\n'''\n\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\nThe smallest divisor of $n$ is 1, so the smallest number that is not divisible by $n$ is $1$; it is the $1$-th positive integer.\n\nThe smallest divisor of $n$ is 2, so the smallest number that is not divisible by $n$ is $2$, $4$ and so on; it is the $2$-th positive integer.\n\nThe smallest divisor of $n$ is $n$, so the smallest number that is not divisible by $n$ is $n$ itself.\n\nThe smallest divisor of $n$ is $n$**2, so the smallest number that is not divisible by $n$ is $n^2$ and so on; it is the $3$-th positive integer.\n\nThe smallest divisor of $n$ is $n$**3, so the smallest number that is not divisible by $n$ is $n^3$ and so on; it is the $7$-th positive integer.\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 7') == '10'\nassert solution('3 7') == '4'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1999999999'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('4') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2''') == '2'\nassert solution('''10 4''') == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('10 3') == '3'\nassert solution('10 7') == '7'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n1 3 2'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2''') == ''''2'''\nassert solution('''10 4''') == '''3'''\nassert solution('''10 4''') == '''1 3 2'''\nassert solution('''7 2''') == ''''2'''\nassert solution('''7 3''') == ''''3'''\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('3 4\\n1 1 1\\n2 2 2\\n3 3 3\\n') == '3\\n1 3\\n'\n\"\"\"\nimport sys\nsys.setrecursionlimit(15000)\nn, k = map(int, stdin.split())\nstdin = [int(item) for item in stdin.split()]",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2''') == '''2\n2 1'''\nassert solution('''10 4''') == '''3\n1 3 2'''\nassert solution('''10 10''') == '''9\n9 8 7 6 5 4 3 2 1'''\nassert solution('''100 100''') == '''20\n19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'''\nassert solution('''100 1000''') == '''21\n19 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'''\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2') == '2', '7 2'\nassert solution('10 4') == '3', '10 4'\n\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1\\n2'\nassert solution('1\\n2\\n2') == '1\\n2'\nassert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('1\\n2\\n3\\n4') == '1\\n2\\n3'\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '263'\nassert solution('''3''') == '18'\nassert solution('''1 6''') == '17'\nassert solution('''1 7''') == '16'\nassert solution('''1 5''') == '15'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1413,
        "num_ids_4": 1413
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n3 1\\n2 1\\n2 1\\n2 1') == '8'\nassert solution('2 3\\n3 1\\n2 1\\n2 1\\n2 1') == '18'\nassert solution('2 3\\n3 1\\n2 1\\n2 1\\n2 1') == '26'\nassert solution('2 2\\n3 1\\n2 1\\n2 1\\n2 1') == '29'\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '4'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n2 3') == '3'\nassert solution('1 2\\n2 1') == '1'\nassert solution('1 2\\n2 2') == '2'\nassert solution('1 2\\n2 1\\n1 3') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '263'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '263'\n\n\"\"\"\n\nfrom typing import List\n\n\"\"\"\nFirst pass: I did a brute force solution. The best way to solve this is to try every possible combination of cards.\nSecond pass: I did a backtracking solution, this is a greedy algorithm.\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1413,
        "num_ids_4": 1413
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\",
        "num_ids_2": 1413,
        "num_ids_4": 1413
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''abcdef\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7''') == '3'\n\nassert solution(\n'''dfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11''') == '5'\n\nassert solution(\n'''abacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7''') == '3'\n\nassert solution(\n'''cdefbfbebebe\n5\n2 1 4\n1 4 b\n2 4 6\n1 5 b\n1 6 f\n1 5 b\n2 4 6\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11''') == '5'\n\nassert solution(\n'''abcdef\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abacaba''') == '''3'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''xqjhcnzbnmzqo''') == '''1'''\nassert solution('''vqahqywqjvxnhjp''') == '''2'''\nassert solution('''pwdfqhwgjqxplqzq''') == '''6'''\n",
        "num_ids_2": 39,
        "num_ids_4": 91
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\nassert solution(\"bbaab\") == \"3\"\nassert solution(\"bbbab\") == \"4\"\nassert solution(\"bbaaaaaa\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ba'\nassert solution('abc') == 'cba'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'zyxwvutsrqponmlkjihgfedcba'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abcdefgh''') == '''abcdefgh'''\nassert solution('''babacaba''') == '''babacaba'''\nassert solution('''dfcbbcfeeedbaea''') == '''babacaba'''\nassert solution('''abcdefghii''') == '''abcd'''\nassert solution('''dabcba''') == '''ab'''\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abacaba''') == '''3'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''asddfddf''') == '''0'''\nassert solution('''afsdsfaf''') == '''1'''\nassert solution('''asdffasdf''') == '''1'''\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc') == 'abc'\nassert solution('adb') == 'b'\nassert solution('cd') == 'cd'\nassert solution('ce') == 'e'\nassert solution('d') == 'd'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaab') == 'b'\nassert solution('abacaba') == 'c'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n'''\n    ) == '154873396'\nassert solution(\n'''979385723\n493985275\n724395063\n284748776\n926716387\n417939071\n598569119\n638952874\n246935909\n'''\n    ) == '979385723'\nassert solution(\n'''833790034\n1246592581\n9374866131\n3079157954\n7316373750\n8835406938\n5349647711\n3134106155\n2833069147\n'''\n    ) == '833790034'\nassert solution(\n'''843717488\n2436762904\n4186712710\n3524236475\n1109331549\n8376943284\n8269065981\n1505558180\n1634997898\n'''\n    ) == '843717488'\nassert solution(\n'''759154391\n6385475643\n3410755878\n1330577060\n2613206994\n4070949677\n4957962553\n2912916207\n2419373385\n'''\n    ) == '759154391'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"979314628\"\n",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('154873296'\n'386592714'\n'm729641835'\n'863725149'\n'975314628'\n'412968357'\n'631457982'\n'598236471'\n'247189563'\n) == \"154873396\"\n\nassert solution('154738791'\n'386592714'\n'm729641835'\n'863725149'\n'975314628'\n'412968357'\n'631457982'\n'598236471'\n'247189563'\n) == \"154738976\"\n\nassert solution('154738796'\n'386592714'\n'm729641835'\n'863725149'\n'975314628'\n'412968357'\n'631457982'\n'598236471'\n'247189563'\n) == \"154738795\"\n\nassert solution('154738795'\n'386592714'\n'm729641835'\n'863725149'\n'975314628'\n'412968357'\n'631457982'\n'598236471'\n'247189563'\n) == \"154738794\"\n\nassert solution('154738794'\n'386592714'\n'm729641835'\n'863725149'\n'975314628'\n'412968357'\n'631457982'\n'598236471'\n'247189563'\n) == \"154738793\"",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('967280564\\n434976009\\n613916236\\n491804017\\n215899409\\n565539162\\n246451279\\n570918074\\n814819057') == '967280160\\n434977993\\n613916236\\n491804017\\n215899409\\n565539162\\n246451279\\n570918074\\n814819057'\nassert solution('62951129\\n639763066\\n624671949\\n939114657\\n105937561\\n854582938\\n176272567\\n738425653\\n836872390') == '62951129\\n639763066\\n624671949\\n939114657\\n105937561\\n854582938\\n176272567\\n738425653\\n836872390'\nassert solution('373004215\\n335522122\\n401123814\\n873770260\\n903287938\\n743268538\\n809543437\\n640275142\\n193412156') == '373004215\\n335522122\\n401123814\\n873770260\\n903287938\\n743268538\\n809543437\\n640275142\\n193412156'\nassert solution('637632852\\n183727290\\n412476848\\n522458398\\n958441445\\n519074572\\n435118532\\n546059042\\n320251635') == '637632852\\n183727290\\n412476848\\n522458398\\n958441445\\n519074572\\n435118532\\n546059042\\n320251635'\n",
        "num_ids_2": 229,
        "num_ids_4": 459
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n'''.strip()) == '''\n154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n'''.strip()\n\nassert solution('''\n582731460\n423519082\n922083797\n853017922\n371540280\n725855696\n846375047\n539227726\n354676653\n098609677\n'''.strip()) == '''\n853017922\n371540280\n539227726\n354676653\n098609677\n'''.strip()\n\nassert solution('''\n526318151\n845871712\n762957243\n371833900\n498622200\n186574899\n654799003\n486866592\n438883332\n659766279\n'''.strip()) == '''\n845871712\n371833900\n498622200\n654799003\n659766279\n'''.strip()\n\nassert solution('''\n119919401\n269500116\n722793770\n795880894\n547222954\n737890943\n812867271\n369396786\n811505358\n856998431\n'''.strip()) == '''\n119919401\n547222954\n812867271\n811505358\n'''.strip()\n\nassert solution('''\n119919401\n269500116\n722793770\n795880894\n547222954\n737890943\n812867271\n369396786\n811505358\n856998431\n'''.strip()) == '''\n119919401\n547222954\n812867271\n811505358\n'''.strip()",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n''') == '154873396'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n98343468\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n979343468\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n",
        "num_ids_2": 232,
        "num_ids_4": 352
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('154873296') == '154873296'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '876312514'\nassert solution('979314628') == '979314628'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\"\"\") == \"\"\"3\n6\n8\n-1\n9\n4\"\"\"\n\nassert solution(\"\"\"3 4\n1 1 1\n3 1\n1 2\n3 2\n3 4\n5 4\n4 4\n7 3\n1 8\n1 9\"\"\") == \"\"\"3\n3\n2\n4\n-1\n5\n5\n6\n7\n7\n8\"\"\"\n\nassert solution(\"\"\"3 4\n1 1 1\n3 1\n1 2\n3 2\n3 4\n5 4\n4 4\n7 3\n1 8\n1 9\"\"\") == \"\"\"3\n3\n2\n4\n-1\n5\n5\n6\n7\n7\n8\"\"\"\n\nassert solution(\"\"\"2 5\n1 1 1\n1 1 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n1 1\n1 1\n2 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n4 4\n5 2\n1 1\n5 4\n1 5\n1 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n5\\n5 3\\n3 1\\n1 1 1 1\\n1 1\\n5 4\\n5 3\\n5 1\\n1 2') == '3\\n5\\n6\\n8\\n9'\nassert solution('2\\n2\\n1\\n2\\n3\\n4\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10",
        "num_ids_2": 862,
        "num_ids_4": 862
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '6'\nassert solution('''9 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n9 2\n8 7\n2 6''') == '6'\nassert solution('''9 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n9 2\n8 7\n2 6\n6 4''') == '-1'\nassert solution('''9 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n9 2\n8 7\n2 6\n6 4\n7 4''') == '-1'\nassert solution('''9 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n9 2\n8 7\n2 6\n6 4\n7 4\n9 8''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 1 1 1 3 3 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9') == '3 6 8 -1 9 4'\nassert solution('5 4\\n1 1 1 1 1 1 3 3 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9') == '3 6 8 -1 9 4'\nassert solution('7 7\\n1 1 1 1 1 1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3 6 8 -1 9 4'\nassert solution('7 7\\n1 1 1 1 1 1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3 6 8 -1 9 4'\nassert solution('7 7\\n1 1 1 1 1 1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3 6 8 -1 9 4'\n",
        "num_ids_2": 104,
        "num_ids_4": 218
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"3 5\\n1 1 3 5 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n5\\n8\\n-1\\n9\\n4\"\nassert solution(\"3 5\\n1 1 3 5 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n5\\n8\\n-1\\n9\\n4\"\nassert solution(\"3 5\\n1 1 3 5 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n5\\n8\\n-1\\n9\\n4\"\nassert solution(\"3 5\\n1 1 3 5 3 5\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n5\\n8\\n-1\\n9\\n4\"\n",
        "num_ids_2": 124,
        "num_ids_4": 246
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '6\\n3\\n9\\n4\\n-1\\n8\\n'\nassert solution('''6 3\n1 1 1 1 3 3 3\n3 1\n1 3\n3 4\n7 3\n1 8\n1 9''') == '6\\n3\\n9\\n4\\n-1\\n8\\n'\nassert solution('''4 3\n1 1 1 1\n3 1\n1 3\n3 4\n7 3\n1 8\n1 9\n1 4\n3 2''') == '-1\\n4\\n-1\\n8\\n'\nassert solution('''5 5\n1 1 1 1 1\n2 1\n3 1\n4 1\n5 1\n1 1''') == '1\\n1\\n-1\\n2\\n-1\\n'\nassert solution('''6 5\n1 1 1 1 1 1\n2 1\n3 1\n4 1\n5 1\n1 1''') == '1\\n1\\n-1\\n2\\n-1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 28
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '[3, 6, 8, -1, 9, 4]'\n\n'''\n\n'''\nConstraints\n2 <= n <= 10^5\n1 <= q <= 10^5\n1 <= p_i < i <= n\nAll entries are distinct.\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2\\n1 3\\n3 4\\n3 5\\n7 3\\n1 8\\n1 9') == '3 6 8 -1 9 4'\nassert solution('1 2\\n1 3\\n3 4\\n3 5\\n7 3\\n1 8\\n1 9') == '6 8'\nassert solution('2 2\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('2 3\\n1 2\\n1 3\\n3 4\\n3 5\\n7 3\\n1 8\\n1 9') == '3 6 8 -1 9 4'\nassert solution('3 2\\n1 1\\n1 1\\n1 1') == '1'\n",
        "num_ids_2": 81,
        "num_ids_4": 149
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution('''2\n4 2 0 10\n1 2 1 1\n''') == 'YES'\n\nassert solution('''3\n4 2 0 10\n1 2 1 1\n2 4 3 3\n''') == 'NO'\n\nassert solution('''4\n5 4 3 2 1\n3 2 1 1 1\n2 1 1 1 1\n1 1 1 1 1\n3 1 1 1 1\n''') == 'YES'\n\nassert solution('''5\n5 4 3 2 1\n3 2 1 1 1\n2 1 1 1 1\n1 1 1 1 1\n3 1 1 1 1\n''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_out\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n10 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n10 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n100 105 102 103\n101 101 101 3\n1 1 1 100000000''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n100 105 102 103\n101 101 101 3\n1 1 1 100000000''') == 'NO'\nassert solution('''1\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''1\n1 1 1 100000000''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n1 1 1 1\n\"\"\") == 'YES'\n\nassert solution(\n\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n3\n1 1 1 1\n\"\"\") == 'NO'\n\nassert solution(\n\"\"\"4\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n2\n1 1 1 1\n\"\"\") == 'YES'\n\nassert solution(\n\"\"\"4\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n1 1 1 1\n\"\"\") == 'NO'\n\nassert solution(\n\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n3\n1 1 1 1\n2\n2 1 1 1\n\"\"\") == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n''') == 'YES\\nYES\\nNO\\nNO\\nYES'\n\nassert solution('''5\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n''') == 'YES\\nNO\\nNO\\nNO\\nYES'\n\nassert solution('''5\n3 2 1 100000000\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n''') == 'NO\\nNO\\nNO\\nNO\\nNO'\n\nassert solution('''5\n3 2 1 100000000\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\n\nassert solution('''5\n3 2 1 100000000\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"\"\"YES\nYES\nNO\nNO\nYES\n\"\"\"\n\nassert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"\"\"YES\nYES\n\"\"\"\n\nassert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"\"\"YES\nYES\n\"\"\"\n\nassert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"\"\"NO\n\"\"\"\n\nassert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"\"\"NO\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2 1 100000000\") == \"YES\"\nassert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\r\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 1 1 2 2 2 2 2 2') == '3 3\\n3 3\\n3 3\\n3 3'\nassert solution('3 3\\n2 1 5 3 5') == '3 3\\n4 4\\n6 6\\n5 5'\nassert solution('5 5\\n2 1 5 3 5 5') == '9 8 12 6 8\\n9 8 12 6 8\\n9 8 12 6 8\\n9 8 12 6 8'\nassert solution('2 10\\n2 1 5 3 5 5') == '3 3\\n3 3\\n3 3\\n3 3'\n\n\n\n-----",
        "num_ids_2": 67,
        "num_ids_4": 143
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3 4 6 5'\nassert solution('1 2 1 1 2 2 2 2 2 2') == '9 8 12 6 8'\nassert solution('5 5') == '3 3'\nassert solution('2 1 5 3 5') == '3 3'\nassert solution('2 1 5 3 5') == '3 3'\n",
        "num_ids_2": 39,
        "num_ids_4": 66
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10') == '3 3'\nassert solution('2 10') == '3 3'\nassert solution('4 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('3 10') == '3 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n\n\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\n",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n\nprint(solution('''4 4\n1 2 3 4\n'''))\nprint(solution('''5 5\n2 1 5 3 5\n'''))\nprint(solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n'''))\n\n'''\n\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''5 10\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''3 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('1 3') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('2 3') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"YES\"\nassert solution(\"2 6\") == \"YES\"\nassert solution(\"2 6 10\") == \"NO\"\nassert solution(\"4 3 8 9 10\") == \"YES\"\nassert solution(\"3 2 4 6\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 6\") == \"YES\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"10 6\") == \"YES\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"10 6\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n2 5\\n2 1\\n1 2\\n4 8\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\",
        "num_ids_2": 264,
        "num_ids_4": 1000
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 2\\n1 2') == 'YES'\nassert solution('1 1\\n1 1') == 'NO'\nassert solution('2 2\\n1 1\\n1 1') == 'YES'\nassert solution('2 2\\n1 1\\n1 1\\n1 1') == 'YES'\nassert solution('1 1\\n1 1') == 'NO'\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES'\nassert solution('''10 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nNO'\nassert solution('''10 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nNO'\nassert solution('''10 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nNO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''5 5\n1 2\n1 3\n2 4\n3 4\n3 5\n3 4\n4 3\n3 5\n4 3\n3 2\n3 1\n2 3\n1 4\n2 4\n2 3''') == 'NO\\nYES\\nNO\\nYES\\nYES\\nNO\\nYES'\nassert solution('''3 2\n2 1\n1 2\n2 1\n1 2''') == 'YES\\nYES\\nNO'\nassert solution('''4 3\n1 2\n1 3\n2 4\n2 3''') == 'YES\\nYES\\nYES\\nYES'\nassert solution('''2 1\n2 1\n2 1''') == 'YES\\nYES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n\nassert solution('''3\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n\nassert solution('''1\n1\n1\n''') == 'YES'\n\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'YES'\n\nassert solution('''1\n1\n1\n''') == 'NO'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == 'YES'\nassert solution('1\\n3\\n2') == 'NO'\nassert solution('1\\n3\\n3') == 'YES'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n5\\n1 1 1 1 1') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n    n,*a = [int(x) for x in stdin.readline().split()]\n    b = sorted(a)\n    if b == a:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1,n):\n            stdout.write(f'{a[0]} {a[i]}\\n')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\".join(input().splitlines())) == \"YES\"\nassert solution(\"\".join(input().splitlines())) == \"NO\"\nassert solution(\"\".join(input().splitlines())) == \"YES\"\nassert solution(\"\".join(input().splitlines())) == \"YES\"\nassert solution(\"\".join(input().splitlines())) == \"YES\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n1 2\n2 1\n1 3\n''') == 'YES'\nassert solution('''1\n2\n1 2\n2 1\n1 3\n''') == 'NO'\nassert solution('''1\n2\n1 1\n2\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''1\n2\n1 1\n2\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''1\n2\n1 2\n2 1\n1 3\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('''3\n3\n1 1 1\n3\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO\\n'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1 3') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('1 1 1') == 'NO'\nassert solution('1 1000 101 1000') == 'YES\\n1 2\\n1 3\\n1 4'\nassert solution('1 2 3 4') == 'NO'\n\n\n-------\n- n - 1 roads needed\n- |X_i| + |Y_i| = n - 1\n- |X_i| < n\n- X_i!= Y_i\n\n- Try to build all connections, if there is a connection already, will make another connection\n- Two gang may not have a connection, or may have a connection back and forth\n\n- In the end, the number of gang should be exactly n - 1",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('00101') == '00101'\nassert solution('0010111') == '0010111'\nassert solution('11111101') == '01111111'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test_case_1) == expected_1\nassert solution(test_case_2) == expected_2\nassert solution(test_case_3) == expected_3\nprint(solution(test_case_4))\nprint(solution(test_case_5))\n\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n\n'''\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''\n3 2\n11101\n3 1\n1101\n''') == '0011'\nassert solution('''\n6 1\n11001100\n4 3\n1111100\n7 11\n1111100\n''') == '11011100'\n\n\n-----\n-----\n-----\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\n\"\"\"\n\nclass Solution:\n    def lexicographicalOrder(self, nums: List[int], k: int) -> List[int]:\n        from bisect import bisect_left\n\n        sorted_nums = sorted(nums)\n        m = len(nums)\n        res = []\n        for i in range(k):\n            ind = bisect_left(sorted_nums, nums[i])\n            if ind == m:\n                return res\n            res.append(sorted_nums[ind])\n            nums[i] = sorted_nums[ind]\n        return res\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 14\n11111010''') == '01011110'\nassert solution('''4 4\n10101\n7 9\n10111\n14 15\n11111''') == '001111'\nassert solution('''6 6\n00010100\n4 4\n11110\n4 1\n10011\n1 4\n010011''') == '00011000'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n\n>>> print(solution(input))\n01011110\n0101111\n0011111\n\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''2 5\n1 2\n3 4\n4 5\n2 4\n2 5\n2 4\n2 3\n''') == '2 4'\n\nassert solution('''2 1\n3 5\n6 6\n2 6\n2 7\n2 6\n2 5\n2 4\n2 3\n2 4\n2 3\n2 5\n2 4\n2 3\n''') == '2 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4'\nprint(solution(input()))\n",
        "num_ids_2": 72,
        "num_ids_4": 109
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '1 2 3'\nassert solution('1 5') == '1 4'\nassert solution('1 4') == '1'\nassert solution('1 8') == '2'\nassert solution('1 3') == '1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\"\"\") == \"\"\"\n3\n1 4 7 \n\"\"\"\nassert solution(\n    \"\"\"\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\"\"\") == \"\"\"\n3\n1 2 4 \n\"\"\"\nassert solution(\n    \"\"\"\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\"\"\") == \"\"\"\n4\n1 3 5 6\n\"\"\"\n\n\"\"\"\nNotes\n\nI was able to solve this problem in 2-3h.\n\nI had to submit my code only after 20:00.\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 7\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\n",
        "num_ids_2": 82,
        "num_ids_4": 168
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n1 4 7'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 2 4'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"3\\n1\") == \"0\"\nassert solution(\"4\\n1\") == \"0\"\nassert solution(\"5\\n1\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\n\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\nassert solution('''7 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '3'\n\nassert solution('''8 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''1 5\n7 10\n10 10\n9 10\n6 9\n7 8\n8 9\n7 8\n8 9\n7 9\n''') == '2'\nassert solution('''5 1\n6 10\n10 10\n9 10\n7 8\n8 9\n7 8\n8 9\n7 9\n7 8\n8 9\n7 8\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 3 4\") == \"3\"\nassert solution(\"2\\n-3 0\") == \"0\"\nassert solution(\"3\\n-3 0\") == \"0\"\nassert solution(\"3\\n3 3\") == \"3\"\nassert solution(\"3\\n3 2\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10''') == '55'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1''') == '225'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n1 3 2\n-100 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\"\"\"2\n2 1\n-3 0\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n1 3 2\n-100 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n-5 6 5 4\n-3 -4 2 1\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2 1\\n3 2') == '3'\nassert solution('1\\n3 1\\n2 3') == '6'\nassert solution('1\\n2 2\\n3 2') == '9'\nassert solution('1\\n2 3\\n3 4') == '0'\nassert solution('1\\n1 1\\n2 3') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2 2\\n') == '3'\nassert solution('1\\n1 2\\n') == '0'\nassert solution('1\\n1 1\\n') == '0'\nassert solution('2\\n1 3\\n-1 2\\n') == '3'\nassert solution('1\\n1 1\\n-1 0\\n') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2\\n-100 2 3\\n') == '3'\nassert solution('3\\n1 3 2\\n-100 2 3\\n') == '3'\nassert solution('2\\n2 1\\n-3 0\\n') == '0'\nassert solution('2\\n1 2\\n-3 0\\n') == '0'\nassert solution('3\\n2 1 4 3 5\\n2 2 2 3 4\\n') == '19'\n",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 5\") == '21 7 15 21 3'\nassert solution(\"1 2\") == '0 0'\nassert solution(\"3 2 3\") == '1 3 3'\nassert solution(\"2 4 1\") == '1 3'\nassert solution(\"4 5 2\") == '1 3'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n\n\"\"\"\n\nfrom typing import List\nimport sys\n\n\nclass Node:\n    def __init__(self, label: int, *children: int):\n        self.label = label\n        self.children = list(children)\n\n    def __repr__(self):\n        return f\"<Node label={self.label} children={self.children}>\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n1 3') == '1 3 3 0'\nassert solution('1 2\\n2 3\\n3 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\nprint(solution(''))\n\n\n\n'''\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3\\n1 3\\n') == '0 1 3 0'\nassert solution('3 2\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3 0'\nassert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\n'''\n\nn, m = [int(x) for x in stdin.split()]\n\ntree = {}\n\nfor i in range(n - 1):\n    u, v, w = [int(x) for x in stdin.split()]\n\n    if u in tree:\n        tree[u].append((v, w))\n    else:\n        tree[u] = [(v, w)]\n\n    if v in tree:\n        tree[v].append((u, w))\n    else:\n        tree[v] = [(u, w)]\n\nfor i in range(m):\n    q = int(stdin.readline())\n    res = 0\n\n    for u in tree.keys():\n        for v, w in tree[u]:\n            if w <= q:\n                res += 1\n\n    print(res)\n",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_case_1.txt\").read()) == \"0 0 1 3\"\nassert solution(open(\"test_case_2.txt\").read()) == \"0 1 3\"\nassert solution(open(\"test_case_3.txt\").read()) == \"1 2 3\"\nassert solution(open(\"test_case_4.txt\").read()) == \"1 1 1\"\nassert solution(open(\"test_case_5.txt\").read()) == \"1 2 2\"\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '21 7 15 21 3'\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65",
        "num_ids_2": 642,
        "num_ids_4": 1272
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'NO'\nassert solution('1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'NO'\nassert solution('1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'NO'\n",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2",
        "num_ids_2": 1469,
        "num_ids_4": 1469
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'YES'\nassert solution('''100\n''') == 'YES'\nassert solution('''3\n1 2 4\n4\n1 3 4 4\n1''') == 'NO'\nassert solution('''3\n1 2 4\n4\n1 3 4 4\n1''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == 'NO'\nassert solution('''3''') == 'NO'\nassert solution('''1 2 2''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''5 5 5 5''') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hi\\n') == 'YES'\nassert solution('hi\\n') == 'YES'\nassert solution('hi\\n') == 'NO'\nassert solution('hi\\n') == 'NO'\nassert solution('hi\\n') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n2\\n1 2 2') == 'YES'\nassert solution('3\\n3\\n1 2 2') == 'YES'\nassert solution('3\\n2\\n3 4 3') == 'NO'\nassert solution('3\\n2\\n4 2 3') == 'NO'\nassert solution('3\\n2\\n5 1 3 2') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Hi') == 'YES'\nassert solution('1') == 'NO'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2\\n2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == \"12\"\nassert solution('''4 5\n1001\n10101\n''') == \"11\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1010\n1101''') == '12'\nassert solution('''4 5\n1001\n10101''') == '11'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/problem_24/00-large_input.txt') == '12'\nassert solution('inputs/problem_24/01-small_input.txt') == '11'\nassert solution('inputs/problem_24/02-large_input.txt') == '11'\nassert solution('inputs/problem_24/03-large_input.txt') == '11'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12\\n'\nassert solution('4 5\\n1001\\n10101\\n') == '11\\n'\nassert solution('3 3\\n1111\\n1111\\n') == '1\\n'\nassert solution('3 3\\n1111\\n1111\\n') == '1\\n'\nassert solution('3 4\\n1111\\n1111\\n') == '12\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '11'\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n3\\n') == '3'\nassert solution('4\\n4\\n') == '4'\nassert solution('5\\n5\\n') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 11\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4 4\n1010\n1101\n\"\"\") == \"12\"\nassert solution(\"\"\"4 5\n1001\n10101\n\"\"\") == \"11\"\nassert solution(\"\"\"4 6\n1 0\n1 0\n\"\"\") == \"2\"\nassert solution(\"\"\"5 5\n1 1\n1 1\n\"\"\") == \"10\"\nassert solution(\"\"\"5 6\n1 0\n1 0\n1 0\n1 1\n\"\"\") == \"10\"\n\n\n-----\n\nThere is a simple algorithm for solving this problem:\n\n1. Write a function that, given two binary numbers $a$ and $b$, outputs their sum in decimal notation.\n2. Add a value to the answer ($a \\& ~ b$) in decimal notation.\n3. If $b > 0$, repeat the process from step 2 until $b = 0$; otherwise stop the process.\n\nThe value $a \\& ~ b$ means bitwise AND of $a$ and $b$.\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == \"YES\\n2 1 4 5\"\nassert solution('1\\n3') == \"NO\"\nassert solution('1\\n5') == \"NO\"\nassert solution('1\\n7') == \"YES\\n2 3 5 7 1 8 4 10\"\nassert solution('1\\n15') == \"YES\\n2 6 10 14 8 16 10 2 14 6 8 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n4\n6\n8\n10\n''') == 'YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10\n''') == 'NO\\nNO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10\n''') == 'NO\\nNO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10\n''') == 'NO\\nNO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10\n''') == 'NO\\nNO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"input/a.in\") == \"YES\\n2 4 1 5\"\nassert solution(\"input/b.in\") == \"YES\\n2 4 6 8 1 3 5 11\"\nassert solution(\"input/c.in\") == \"NO\\n
        "num_ids_2": 44,
        "num_ids_4": 1524
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == 'NO'\nassert solution('''2''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''8''') == 'NO'\nassert solution('''10''') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"NO\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"YES\"\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\nassert solution(stdin) == ''\n\nInput\n3\n3\n10\n100\n\nOutput\nNO\nYES\n2 3 4 5 6 8 9 10\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\nNO\nYES\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('2\\n2') == 'NO'\nassert solution('1\\n3') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4\") == \"NO\\nYES\\n2 4 1 5\"\nassert solution(\"2\\n4\\n6\") == \"NO\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\nassert solution(\"2\\n4\\n6\\n8\") == \"NO\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\nassert solution(\"2\\n4\\n6\\n8\\n10\") == \"NO\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\nassert solution(\"2\\n4\\n6\\n8\\n10\\n12\") == \"NO\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\n",
        "num_ids_2": 54,
        "num_ids_4": 127
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4\n6\n8\n10\n''') == 'NO\\nYES\\n2 4 1 5'\nassert solution('''1\n8\n2\n6\n10\n''') == 'NO\\nYES\\n2 4 1 5'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n1 2 3 4\n''') == '0'\n\nassert solution('''3\n2\n1 2\n2\n1 2\n3\n1 1\n''') == '3'\n\nassert solution('''3\n3\n1 2 3 4\n''') == '1'\n\nassert solution('''3\n2\n1 1 2\n2\n1 1 1 1\n1\n1\n''') == '1'\n\nassert solution('''3\n3\n1 2 3 4\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'\nassert solution('''5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '5'\nassert solution('''1\n1\n1\n1\n1\n1''') == '0'\nassert solution('''2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '4'\n'''\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n') == '5\\n1\\n0\\n4\\n0'\nassert solution('2\\n3\\n1\\n2\\n3\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n",
        "num_ids_2": 1295,
        "num_ids_4": 1295
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n2\") == \"\"\nassert solution(\"1\\n2\\n2\\n3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == '4'\nassert solution('1 2\\n2 3\\n3 4') == '3'\nassert solution('2 2\\n2 3\\n3 4') == '1'\nassert solution('2 2\\n3 3\\n3 4') == '2'\nassert solution('2 2\\n3 3\\n4 4') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\nassert solution('''7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '5\\n4\\n2\\n7'\nassert solution('''7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n''') == '8\\n6\\n4\\n3\\n2\\n1'\nassert solution('''7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4') == '3'\nassert solution('2\\n4') == '2'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == \"3\"\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == \"4\"\nassert solution('''4\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == \"3\"\nassert solution('''6\n6\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\nassert solution('''6\n6\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '4'\nassert solution('''4\n4\n1 2\n3 4\n5\n1 2\n2 3\n2 4\n2 5\n3 4\n3 5\n2 2\n3''') == '3'\nassert solution('''4\n4\n1 1\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n2 2\n2 3\n3 3\n4 4\n5\n1 2\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'\nassert solution('''6\n6\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2\\n3\\n2\\n7\\n'\nassert solution('''7\n7\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'\nassert solution('''10\n10\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'\nassert solution('''14\n14\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3\\n4\\n2\\n7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3\\n4\\n2\\n3'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3\\n4\\n2\\n7'\nassert solution('''4\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n23 55') == '5'\nassert solution('23 0') == '60'\nassert solution('0 1') == '1439'\nassert solution('4 20') == '1180'\nassert solution('23 59') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\nassert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1''') == '5\\n60\\n1439\\n1180\\n1\\n'\nassert solution('''3\n23 55\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\nassert solution('''4\n23 55\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\n'''\nSample Case 0\n\n23 55\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59\n23 0\n0 1\n4 20\n23 59",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('23 55') == '5'\nassert solution('23 0') == '60'\nassert solution('0 1') == '1439'\nassert solution('4 20') == '1180'\nassert solution('23 59') == '1'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 0\\n0 1\") == \"1439\"\nassert solution(\"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"5\"\nassert solution(\"1\\n2 2\") == \"3\"\nassert solution(\"1\\n1 1\") == \"2\"\nassert solution(\"5\\n23 55\\n23 59\") == \"1180\"\n",
        "num_ids_2": 49,
        "num_ids_4": 77
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''123 456\n0 0\n1 1\n13 0\n0 0\n''') == '123'\nassert solution('''0 0\n23 59\n0 0\n''') == '0'\nassert solution('''123 456\n0 0\n1 1\n13 0\n''') == '0'\nassert solution('''3123\n0 0\n0 0\n0 0\n''') == '0'\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n12345\\n2355\\n4567\\n678\\n') == '60\\n1439\\n1180\\n1\\n'\n\n\"\"\"\n\nimport sys\n\nfor i in range(int(sys.stdin.readline().strip())):\n    h, m = map(int, sys.stdin.readline().strip().split())\n    h, m = (h + m // 60) % 24, m % 60\n    print(60 * h + m)\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n'''\nfrom sys import stdin\nfrom re import split\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('LRUD') == '1 2'\nassert solution('LURD') == '1 4'\nassert solution('RRUDU') == '3 4'\nassert solution('LLDDR') == '-1'\nassert solution('UDDDUDUU') == '1 4'\n\n\n-----Note-----\nThis problem is a very similar to a 4.4. Longest substring without repeating characters.\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(1500)",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"LLDDR\") == \"1 4\"\nassert solution(\"LRUD\") == \"1 4\"\nassert solution(\"RDDUD\") == \"3 4\"\nassert solution(\"RRUDRDRUDD\") == \"3 4\"\nassert solution(\"RDRDRUDD\") == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('LURDRURDL') == '1 2'\nassert solution('LURDRULDRURDLDRDD') == '1 4'\nassert solution('LDULDRDDDRUL') == '1 4'\nassert solution('LDDD') == '-1'\nassert solution('L') == '-1'\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"LRUD\") == \"1 2\"\nassert solution(\"LURD\") == \"1 4\"\nassert solution(\"RRUDU\") == \"-1\"\nassert solution(\"LLDDR\") == \"3 4\"\n\n\n\"\"\"\nimport sys",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('LRUD') == \"1 2\"\nassert solution('LURD') == \"1 4\"\nassert solution('RRUDU') == \"-1\"\nassert solution('LLDDR') == \"3 4\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout\n\nt = int(stdin.readline())\n\nfor _ in range(t):\n    n = int(stdin.readline())\n    s = stdin.readline().strip()\n\n    l, r = -1, -1\n    \n    for i in range(n):\n        if s[i] == 'U':\n            if l == -1:\n                l = i\n            else:\n                r = i\n    \n    if l == -1:\n        stdout.write('-1\\n')\n    else:\n        stdout.write(f'{l} {r}\\n')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''LURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''LLDDR\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''LURD\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU''') == '1 4'\nassert solution('''LURD\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU''') == '1 4'\nassert solution('''LURD\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU\n5\nLLDDR\n5\nRRUDU''') == '1 4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('UDUDLRRLLUULR') == '1 2'\nassert solution('RURRRR') == '1 2'\nassert solution('LURDDUDDDUDUDUD') == '2 4'\nassert solution('UDUDUDUDUD') == '-1'\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('LRUD') == '1 2'\nassert solution('LURD') == '1 4'\nassert solution('RRUDU') == '3 4'\nassert solution('LLDDR') == '-1'\nassert solution('RUDDDLRRUUUUUUD') == '4 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''6\n9\n1 2 1 2 1 4 2 4\n2\n1 2 1 4 1 4 1\n1\n1\n5\n1 1 1 2 2 2\n''') == '3'\nassert solution('''12\n7\n1 2 1 2 1 4 2 4\n3\n1 2 1 4 1 4 1\n1\n1\n5\n1 1 1 2 2 2\n''') == '3'\nassert solution('''12\n7\n1 2 1 2 1 4 2 4\n6\n1 2 1 4 1 4 1\n1\n1\n5\n1 1 1 2 2 2\n''') == '2'\nassert solution('''12\n7\n1 2 1 2 1 4 2 4\n6\n1 2 1 4 1 4 1\n1\n1\n5\n1 1 1 2 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('\\n') == ''\nassert solution('0\\n') == ''\nassert solution('0\\n0\\n') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nfrom sys import stdin,stdout",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('4\\n4\\n4\\n4\\n4\\n4') == '1'\nassert solution('2\\n4') == '0'\nassert solution('5\\n2\\n1\\n1\\n1\\n1') == '1'\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123') == '1'\nassert solution('12345') == '3'\nassert solution('12345678901') == '9'\nassert solution('123456789012345678901') == '9'\nassert solution('1234567890123456789012345678901') == '9'\n",
        "num_ids_2": 21,
        "num_ids_4": 54
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == '0'\nassert solution('1\\ntest') == '1'\nassert solution('1\\ntest\\ntest') == '1'\nassert solution('1\\ntest\\ntest\\ntest') == '1'\nassert solution('1\\ntest\\ntest\\ntest\\ntest') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1337\\n') == '0'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\n",
        "num_ids_2": 66,
        "num_ids_4": 166
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '121'\nassert solution('1') == '0'\nassert solution('1337') == '0'\nassert solution('9 4 1 7 10 1 6 5') == '121'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\n\n\"\"\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n5\\n1') == '2'\nassert solution('1\\n3\\n1') == '2'\nassert solution('1\\n4\\n1') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 2 3 4') == '1'\nassert solution('4\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('7') == '0'\nassert solution('5') == '10'\nassert solution('1') == '1'\nassert solution('3') == '6'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hihi') == 'hi'\nassert solution('hihello') == 'hello'\nassert solution('hijhk') == 'jhk'\nassert solution('hijhijh') == 'jhij'\nassert solution('hihihihi') == 'hi'\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 3') == '6'\nassert solution('10 6') == '18'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '227'\nassert solution('5 10') == '0'\nassert solution('20 100 50 20 100500') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('4\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nprint(solution(input()))\n\n\n\n'''\n",
        "num_ids_2": 184,
        "num_ids_4": 184
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1\\n2\\n2') == ''\nassert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8') == '6\\n18\\n0\\n227\\n8'\nassert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8') == '6\\n18\\n0\\n227\\n8'\nassert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8') == '6\\n18\\n0\\n227\\n8'\n",
        "num_ids_2": 22,
        "num_ids_4": 202
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a = [1, 2, 1, 3]') == '6'\nassert solution('a = [1, 2, 1, 3]') == '18'\nassert solution('a = [1, 2, 1, 3]') == '0'\nassert solution('a = [1, 2, 1, 3]') == '227'\nassert solution('a = [1, 2, 1, 3]') == '8'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500''') == '6'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\n\n'''\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1,2\") == 1\nassert solution(\"1,2,3\") == 2\nassert solution(\"1,1,3\") == 3\nassert solution(\"1,2,3,4,5\") == 4\nassert solution(\"1,2,3,4,5,6,7\") == 7\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"stdin\", [1,2,3], [1,1]) == 1\nassert solution(\"stdin\", [1,2], [1,2,3]) == 2\nassert solution(\"stdin\", [1,2,3,4,5,6,7], [1,1,1,1,1,1,1]) == 4\n",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''1 2''') == '2'\nassert solution('''2 3''') == '1'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 1 2''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == 1\nassert solution('1\\n2\\n3\\n') == 2\nassert solution('1\\n1\\n') == 0\nassert solution('1\\n1\\n2\\n3\\n') == 0\nassert solution('1\\n1\\n1\\n1\\n') == 1\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 1') == '2'\nassert solution('1 2 3\\n2 1') == '2'\nassert solution('1 2 3\\n2 1\\n3 1') == '2'\nassert solution('1 2 3\\n2 1\\n3 1\\n4 1') == '2'\nassert solution('1 2 3\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 75
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1,2,3''') == \"2\"\nassert solution('''1,2''') == \"1\"\nassert solution('''1,2,3,4,5''') == \"2\"\nassert solution('''1,2,3,4,5,6''') == \"2\"\nassert solution('''1,2,3,4,5,6,7''') == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2],[1,2,3]) == 1\nassert solution([1,2],[1,2,3,3]) == 2\nassert solution([1,1],[1,2]) == 1\nassert solution([1,1],[1,2,3]) == 2\nassert solution([1,2,3],[1,1,3]) == 2\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1,2') == '1'\nassert solution('1,2,3') == '2'\nassert solution('1,1') == '1'\nassert solution('1,2,3,4,5,6') == '3'\nassert solution('4,5,6,3,5,6,7,5,6,7') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''5 10 100''') == '2'\nassert solution('''10 100 1000''') == '1'\nassert solution('''1 1 2''') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['4', '5', '6', '1', '2', '3'])) == 1\nassert solution('\\n'.join(['4', '5', '1', '2', '3'])) == 2\nassert solution('\\n'.join(['4', '5', '1', '2'])) == 2\nassert solution('\\n'.join(['4', '5', '1'])) == 2\nassert solution('\\n'.join(['4', '5'])) == 2\n",
        "num_ids_2": 57,
        "num_ids_4": 102
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3) == [1,3,3,1]\nassert solution(0) == []\nassert solution(1) == [1]\nassert solution(2) == [1,1]\nassert solution(3) == [1,3,3,1]\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '1\\n0\\n1'\nassert solution('0\\n') == ''\nassert solution('0\\n0\\n0') == ''\nassert solution('1\\n2\\n3') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == [1,3,3,1]\nassert solution('3') == [1,3,3,1]\nassert solution('2') == [1,3]\nassert solution('1') == [1]\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == ['1']\nassert solution('2') == ['1', '1', '1', '1']\nassert solution('3') == ['1', '1', '1', '2', '1', '1', '1', '1', '1', '1']\nassert solution('4') == ['1', '1', '1', '2', '1', '1', '1', '3', '1', '1', '1', '1']\nassert solution('5') == ['1', '1', '1', '1', '1', '2', '1', '3', '3', '1', '1', '1', '1', '1', '1', '1', '1', '1']\n",
        "num_ids_2": 29,
        "num_ids_4": 109
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n2\n3\n''') == '[1,3,3,1]'\nassert solution('''0\n2\n1\n2\n''') == '[1,3,3,1]'\nassert solution('''0\n10\n3\n5\n8\n7\n9\n11\n13\n''') == '[1,10,10,5,5,8,7,11,13,13]'\nassert solution('''0\n5\n5\n7\n9\n11\n''') == '[1,5,5,11,15,55,127,385,640,1287,2305,2925,4620,6485,8620,9543,11406,12970,14455,16327,17137,18434,19263,20350,21615,23102,24605,26186,28065,29701,31312,33226,34725,37440,39845,42141,44565,47270,49750,54385,58255,62187,64982,67493,71752,75454,78245,82495,87600,89441,93636,98243,102599,106521,111336,118255,122680,127817,133601,139551,145605,150789,155082,160367,164841,172394,177958,183507,190674,195736,202903,209709,225295,231459,239188,246271,253626,260786,264351,271780,277211,285355,290896,294827,300780,305059,319651,333636,336992,348060,356739,360931,364521,370711,374563,380069,383924,390681,396945,401409,407439,422523,428924,441917,449216,455879,463316,469866,473034,481407,490518,502783,510899,526969,542064,556740,569012,573023,581578,586035,592639,601862,604909,610526,622298,630419,637718,655637,667318,678080,687652,698819,702670,710670,722993,733287,737788,748043,758310,769985,779969,789995,798859,808821,818792,829066,839727,849598,863660,872741,878956,887896,896626,906681,913664,924571,933062,943045,953025,960995,969878,980101,990085,990035,990188,990282,990316,990532,990822,990982,991045,991094,991220,991283,991330,991421,991479,991518,991606,991655,991692,991738,991817,991896,991932,991965,992025,992099,992213,992325,992390,992423,992521,992601,992770,992836,992903,992958,993025,993085,993093,993128,993216,993280,993330,993422,993510,993574,993609,993685,993698,993775,993852,993928,993976,993979,993996,994064,994081,994092,994099,994112,994124,994141,994147,994212,994214,994228,994290,994310,994317,994324,994345,994356,994371,994377,994404,994419,994439,994443,994469,994515,994526,994542,994549,994567,994584,994599,994613,994625,994647,994657,994676,994681,994686,994723,994737,994748,994766,994773,994786,994799,994807,994820,994839,994852,994866,994883,994897,994914,994941,994949,994959,994971,994974,994996,995008,995029,995059,995069,995083,995097,995114,995129,995149,995159,995171,995176,995183,995189,995215,995233,995249,995263,995281,995297,995309,995333,995351,995364,995376,995416,995443,995459,995475,995493,995502,995518,995541,995553,995567,995582,995599,995611,995634,995651,995663,995687,995707,995722,995745,995764,995771,995782,995799,995817,995841,995867,995883,995907,995919,995939,995959,995981,995989,996003,996019,996033,996053,996069,996077,996089,996093,996109,996137,996161,996174,996187,996193,996208,996221,996239,996271,996283,996301,996307,996321,996342,996363,996375,996399,996411,996422,996443,996466,996477,996489,996493,996511,996523,996539,996563,996577,996589,996591,996613,996627,996639,996643,996649,996651,996663,996677,996691,996711,996727,996741,996763,996777,996790,996801,996813,996827,996859,996871,996883,996897,996909,996921,996943,996957,996969,996981,996989,997003,997023,997037,997059,997073,997087,997099,997111,997133,997147,997171,997183,997197,997201,997231,997243,997249,997263,997287,997299,997311,997333,997347,997363,997369,997383,997391,997397,997409,997423,997439,997443,997457,997477,997489,997493,997509,997521,997533,997547,997559,997571,997583,997587,997599,997611,997623,997639,997643,997647,997659,997669,997683,997697,997719,997733,997757,997769,997783,997797,997817,997833,997851,997869,997873,997891,997911,997929,997947,997967,997979,997981,997983,997987,997989,997999,998009,998027,998039,998051,998063,998083,998097,998110,998127,998143,",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3) == [1, 3, 3, 1]\nassert solution(5) == [1, 5, 10, 10, 5, 1]\nassert solution(0) == []\nassert solution(1) == [1]\nassert solution(2) == [1, 1]\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([]) == []\nassert solution([1]) == [1]\nassert solution([1,2,3]) == [1,3,3,1]\nassert solution([1,2,3,4]) == [1,4,6,4,1]\nassert solution([1,2,3,4,5]) == [1,5,10,10,5,1]\n",
        "num_ids_2": 17,
        "num_ids_4": 61
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([3]) == [1,3,3,1]\nassert solution([4, 0, 0]) == [1,4,6,4,1]\nassert solution([33,0,0]) == [1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
        "num_ids_2": 38,
        "num_ids_4": 1916
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == [1]\nassert solution('1') == [1,1]\nassert solution('2') == [1,2,1]\nassert solution('3') == [1,3,3,1]\nassert solution('4') == [1,4,6,4,1]\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"11111111111111111111111111111110\") == 30\nassert solution(\"111001010110011100011011000111000\") == 9\n",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(3) == 1\nassert solution(5) == 2\nassert solution(7) == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00010001\") == 1\nassert solution(\"00110\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\nassert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 46
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(0b00000000000000000000000000001011) == 3\nassert solution(0b00000000000000000000000010000000) == 1\nassert solution(0b11111111111111111111111111101) == 31\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0000000000000001') == 1\nassert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n'''\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        return bin(n).count(\"1\")",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([9]) == [1,0,0]\nassert solution([0,9]) == [1,0,0]\nassert solution([0,9,9]) == [1,0,0,0]\n",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([1]) == [1,0]\nassert solution([]) == [1]\nassert solution([9]) == [1,0,0]\n",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([0]) == [1]\nassert solution([9,9,9]) == [1,0,0,0]\nassert solution([9,9]) == [1,0,0]\n",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"\") == \"1,0\"\nassert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"1,2,3,4,5,6,7,8,9,0\") == \"1,2,3,4,5,6,7,8,9,9\"\nassert solution(\"5,9,4,4,1\") == \"5,9,4,4,2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 97
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123') == '124'\nassert solution('4573') == '4574'\nassert solution('8978') == '8979'\nassert solution('45454545') == '4545456'\nassert solution('979') == '980'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('1,2,3,4') == '1,2,4,5'\nassert solution('1,2,3,4,5,6') == '1,2,4,5,6,7'\nassert solution('1,2,3,4,5,6,7') == '1,2,4,5,6,7,8'\nassert solution('1,2,3,4,5,6,7,8,9') == '1,2,4,5,6,7,8,9,0'\n",
        "num_ids_2": 40,
        "num_ids_4": 104
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"124\"\nassert solution(\"4321\") == \"4322\"\nassert solution(\"9999\") == \"1000000\"\nassert solution(\"111111111\") == \"111110000\"\nassert solution(\"11111111\") == \"1000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([\"1\",\"2\",\"3\"]) == [\"1\",\"2\",\"4\"]\nassert solution([\"4\",\"3\",\"2\",\"1\"]) == [\"4\",\"3\",\"2\",\"2\"]\nassert solution([\"9\",\"9\",\"9\",\"9\"]) == [\"1\",\"0\",\"0\",\"0\"]\nassert solution([\"0\",\"0\",\"0\",\"0\"]) == [\"1\",\"0\",\"0\",\"0\"]\nassert solution([\"9\",\"9\",\"9\",\"9\",\"9\"]) == [\"1\",\"0\",\"0\",\"0\",\"0\"]\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([1,2,3]) == [1, 2, 4]\nassert solution([4,3,2,1]) == [4, 3, 2, 2]\nassert solution([4,3,2,9]) == [4, 3, 2, 10]\nassert solution([4,3,2,1,6]) == [4, 3, 2, 2, 7]\nassert solution([0]) == [1]\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4'\nassert solution('-2 4') == '0'\nassert solution('0 2') == '0'\nassert solution('1 4') == '5'\nassert solution('-2 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 -1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 2') == '1'\nassert solution('3 3') == '6'\nassert solution('3 4') == '5'\nassert solution('3 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"5 -1\") == \"4\"\nassert solution(\"5 -3\") == \"2\"\nassert solution(\"3 -3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2:-1]\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '4'\nassert solution('3 1') == '4'\nassert solution('1000 1') == '1001'\nassert solution('1 1000') == '1001'\nassert solution('4 -3') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '4'\nassert solution('-3 1') == '-2'\nassert solution('3 -1') == '-2'\nassert solution('-3 -1') == '2'\nassert solution('3 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('1 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('2 10\\n0 10\\n-2 -4\\n3 4\\n4 -4') == '3'\nassert solution('2 10\\n0 10\\n-2 -4\\n-2 4\\n3 4') == '2'\nassert solution('2 10\\n0 10\\n-2 -4\\n3 4\\n4 -4') == '2'\n",
        "num_ids_2": 58,
        "num_ids_4": 118
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5') == '3'\nassert solution('0 5') == '1'\nassert solution('-2 4') == '1'\nassert solution('3 4') == '2'\nassert solution('4 -4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 5\n0 5\n-2 4\n3 4\n4 -4\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"2 4\n0 0\n0 0\"\"\"\n) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 5') == '3'\nassert solution('-2 4') == '3'\nassert solution('3 4') == '3'\nassert solution('4 -4') == '3'\nassert solution('-5 4') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n-1 -1\\n1 1\\n-1 1\\n2 2\") == \"2\"\nassert solution(\"3 4\\n-1 -1\\n1 1\\n-1 1\\n1 1\") == \"3\"\nassert solution(\"3 4\\n0 -1\\n1 1\\n-1 1\\n1 1\") == \"3\"\nassert solution(\"3 4\\n0 -1\\n1 1\\n-1 1\\n1 1\") == \"3\"\nassert solution(\"3 4\\n-1 -1\\n1 1\\n-1 1\\n1 1\") == \"3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 5') == '3'\nassert solution('-2 4') == '3'\nassert solution('3 4') == '5'\nassert solution('4 -4') == '5'\nassert solution('3 5') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '1'\nassert solution('2 5') == '2'\nassert solution('-2 4') == '0'\nassert solution('3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n') == '3'\nassert solution('2 10\\n1 2\\n1 1\\n2 1\\n3 3\\n4 2\\n4 2\\n4 3\\n5 3\\n5 4\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5\\n') == '3'\nassert solution('1000 10\\n1 1\\n1000 1\\n1 1000\\n1000 1000\\n1000 1000\\n100 1000\\n10000 1\\n10000 1000\\n10000 10000\\n10001 1000\\n10001 10000\\n10001 10001\\n10002 10002\\n10003 10003\\n10004 10004\\n10005 10005\\n10006 10006\\n10007 10007\\n10008 10008\\n10009 10009\\n10010 10010\\n10011 10011\\n10012 10012\\n10013 10013\\n10014 10014\\n10015 10015\\n10016 10016\\n10017 10017\\n10018 10018\\n10019 10019\\n10020 10020\\n10021 10021\\n10022 10022\\n10023 10023\\n10024 10024\\n10025 10025\\n10026 10026\\n10027 10027\\n10028 10028\\n10029 10029\\n10030 10030\\n10031 10031\\n10032 10032\\n10033 10033\\n10034 10034\\n10035 10035\\n10036 10036\\n10037 10037\\n10038 10038\\n10039 10039\\n10040 10040\\n10041 10041\\n10042 10042\\n10043 10043\\n10044 10044\\n10045 10045\\n10046 10046\\n10047 10047\\n10048 10048\\n10049 10049\\n10050 10050\\n10051 10051\\n10052 10052\\n10053 10053\\n10054 10054\\n10055 10055\\n10056 10056\\n10057 10057\\n10058 10058\\n10059 10059\\n10060 10060\\n10061 10061\\n10062 10062\\n10063 10063\\n10064 10064\\n10065 10065\\n10066 10066\\n10067 10067\\n10068 10068\\n10069 10069\\n10070 10070\\n10071 10071\\n10072 10072\\n10073 10073\\n10074 10074\\n10075 10075\\n10076 10076\\n10077 10077\\n10078 10078\\n10079 10079\\n10080 10080\\n10081 10081\\n10082 10082\\n10083 10083\\n10084 10084\\n10085 10085\\n10086 10086\\n10087 10087\\n10088 10088\\n10089 10089\\n10090 10090\\n10091 10091\\n10092 10092\\n10093 10093\\n10094 10094\\n10095 10095\\n10096 10096\\n10097 10097\\n10098 10098\\n10099 10099\\n10100 10100\\n10101 10101\\n10102 10102\\n10103 10103\\n10104 10104\\n10105 10105\\n10106 10106\\n10107 10107\\n10108 10108\\n10109 10109\\n10110 10110\\n10111 10111\\n10112 10112\\n10113 10113\\n10114 10114\\n10115 10115\\n10116 10116\\n10117 10117\\n10118 10118\\n10119 10119\\n10120 10120\\n10121 10121\\n10122 10122\\n10123 10123\\n10124 10124\\n10125 10125\\n10126 10126\\n10127 10127\\n10128 10128\\n10129 10129\\n10130 10130\\n10131 10131\\n10132 10132\\n10133 10133\\n10134 10134\\n10135 10135\\n10136 10136\\n10137 10137\\n10138 10138\\n10139 10139\\n10140 10140\\n10141 10141\\n10142 10142\\n10143 10143\\n10144 10144\\n10145 10145\\n10146 10146\\n10147 10147\\n10148 10148\\n10149 10149\\n10150 10150\\n10151 10151\\n10152 10152\\n10153 10153\\n10154 10154\\n10155 10155\\n10156 10156\\n10157 10157\\n10158 10158\\n10159 10159\\n10160 10160\\n10161 10161\\n10162 10162\\n10163 10163\\n10164 10164\\n10165 10165\\n10166 10166\\n10167 10167\\n10168 10168\\n10169 10169\\n10170 10170\\n10171 10171\\n10172 10172\\n10173 10173\\n10174 10174\\n10175 10175\\n10176 10176\\n10177 10177\\n10178 10178\\n10179 10179\\n10180 10180\\n10181 10181\\n10182 10182\\n10183 10183\\n10184 10184\\n10185 10185\\n10186 10186\\n10187 10187\\n10188 10188\\n10189 10189\\n10190 10190\\n10191 10191\\n10192 10192\\n10193 10193\\n10194 10194\\n10195 10195\\n10196 10196\\n10197 10197\\n10198 10198\\n10199 10199\\n10200 10200') == '3'\n",
        "num_ids_2": 100,
        "num_ids_4": 1357
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == \"3\"\nassert solution('''3 3\n2 2\n-1 -1\n0 0\n1 1''') == \"2\"\n'''\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == '3'\nassert solution('-2 4') == '3'\nassert solution('0 5') == '3'\nassert solution('3 4') == '3'\nassert solution('0 0') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('8') == \"No\"\nassert solution('14') == \"Yes\"\nassert solution('40') == \"Yes\"\nassert solution('100') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\nimport sys\nassert (solution(sys.stdin.read().strip()) == sys.stdin.read().strip())",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\nassert solution('15') == 'No'\nassert solution('90') == 'Yes'\nassert solution('1000000000') == 'Yes'\nassert solution('12254739311') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"3\"\n) == \"Yes\"\nassert solution(\n\"16\"\n) == \"Yes\"\nassert solution(\n\"123\"\n) == \"Yes\"\nassert solution(\n\"1234\"\n) == \"No\"\nassert solution(\n\"12345\"\n) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"22\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"23\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(123) == \"Yes\"\nassert solution(456) == \"No\"\nassert solution(789) == \"Yes\"\nassert solution(1000) == \"Yes\"\nassert solution(7654) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123456789') == 'No'\nassert solution('1234567890') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('11234567890') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\"\nassert solution(\"2\\n2 1\\n\") == \"0\"\nassert solution(\"3\\n-1 2 3\\n\") == \"8\"\nassert solution(\"3\\n3 2 1\\n\") == \"10\"\nassert solution(\"3\\n2 3 1\\n\") == \"10\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 5 -1') == '12'\nassert solution('5\\n3 5 -1') == '8'\nassert solution('5\\n3 5 -1') == '10'\nassert solution('5\\n5 5 -1') == '0'\nassert solution('3\\n3 5 -1') == '12'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3\\n3 5 -1'\n) == '12'\nassert solution(\n    '3\\n3 5 -1'\n) == '8'\nassert solution(\n    '3\\n3 5 -1'\n) == '10'\nassert solution(\n    '5\\n3 5 -1 5 2 5'\n) == '1'\nassert solution(\n    '5\\n3 5 -1 5 2 5'\n) == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 -1') == '12'\nassert solution('5\\n3 5 -1\\n2 3 -2\\n3 4 -3\\n4 5 5') == '12 8 10'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 -1') == '12'\nassert solution('5\\n3 5 -1') == '8'\nassert solution('5\\n3 5 -1\\n3 4 -1\\n2 4 -1') == '10'\nassert solution('10\\n1 1 2 3 4 5 6 7 8 9 10') == '14'\nassert solution('5\\n1 1 2 3 4') == '15'\n",
        "num_ids_2": 32,
        "num_ids_4": 83
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 5 -1') == '12'\nassert solution('3\\n3 5 -1\\n2\\n2 1\\n3\\n2 3 1\\n4\\n4 2 2\\n5\\n3 5 4 3') == '8'\n\"\"\"\n\nN = int(input())\nX = [int(x) for x in input().split()]",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 -1''') == '12\\n8\\n10'\nassert solution('''3\n2 1 -1''') == '12\\n8\\n10'\nassert solution('''5\n5 4 3 2 1''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''5\n0 4 3 2 1''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''5\n2 3 1 4 5''') == '6\\n4\\n2\\n0\\n0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"vowel\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"vowel\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(a) == 'vowel'\nassert solution(e) == 'vowel'\nassert solution(i) == 'vowel'\nassert solution(o) == 'vowel'\nassert solution(u) == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"a\") == \"vowel\"\nassert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"WWWBB\") == 3\nassert solution(\"WWWWB\") == 1\nassert solution(\"BBBBBB\") == 0\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBBWW\") == \"0\"\nassert solution(\"BWWWWBB\") == \"1\"\nassert solution(\"WBBBWBWB\") == \"3\"\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\nprint(solution(stdin))\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('BBBWW') == ''\nassert solution
        "num_ids_2": 18,
        "num_ids_4": 1586
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"BBBBWWWWW\") == 2\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1586
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(BBBWW) == '1'\nassert solution(WWWWB) == '2'\nassert solution(BWWWB) == '3'\nassert solution(WWWWWW) == '4'\nassert solution(WWWWWWWW) == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"BBBWWBBW\") == 2\nassert solution(\"WWWWWBWWWWWW\") == 1\nassert solution(\"WWWWWWWWWWWWBBWWWWWWBBWWWWWWWWWWWW\") == 1\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 59
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BWWWWW') == '0'\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 1586
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 4') == 'No'\nassert solution('0 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 10') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 22') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1 21') == 'Yes'\nassert solution('-1 21') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 -3') == 'No'\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 21''') == 'Yes'\nassert solution('''1 22''') == 'No'\nassert solution('''1 2''') == 'No'\nassert solution('''1 22''') == 'No'\nassert solution('''1 1''') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('15 32') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('17 24') == 'Yes'\nassert solution('24 18') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 22\") == \"No\"\nassert solution(\"4 25\") == \"No\"\nassert solution(\"-2 -3\") == \"No\"\nassert solution(\"-1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('2 3') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('-1 -1') == 'No'\nassert solution('-1 1') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 100') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3 4') == '2'\nassert solution('2 2 3 2 3 4') == '1'\nassert solution('4 2 1 4 1') == '3'\nassert solution('3 2 1 4 1') == '2'\nassert solution('5 2 1 4 1') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''0\n0 0 0 0 0 0 0 0''') == '4'\nassert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''4\n1 1 2 3 4''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 7 3 1 8\") == \"3\"\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3''') == '4'\nassert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''7\n5 1 4 1 6 3 3''') == '6'\nassert solution('''7\n9 4 3 2 1 5 7 9''') == '6'\nassert solution('''7\n2 9 2 1 3 2 3''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 41
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('6\\n5 2 3 4 5 6') == '2'\nassert solution('10\\n6 3 9 6 6 6 3 9 6') == '9'\nassert solution('10\\n6 3 9 6 6 6 3 9 6') == '9'\nassert solution('1\\n5') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n\nN = int(input())\nA = list(map(int,input().split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 2 2 3 3 2 1') == 3\nassert solution('3 1 4 1 5 9 2') == 4\nassert solution('3 1 4 1 5 9 2 3') == 3\nassert solution('3 1 4 1 5 9 2 3 3') == 4\n",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\"\n) == \"5\"\n\nassert solution(\n    \"4\"\n) == \"9\"\n\nassert solution(\n    \"2\"\n) == \"0\"\n\nassert solution(\n    \"8\"\n) == \"45\"\n\nassert solution(\n    \"7\"\n) == \"49\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4\n''') == '5'\nassert solution('''\n5\n4\n''') == '9'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n2\n''') == '1'\nassert solution('''\n1\n1\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('4') == ''\nassert solution('10') == ''\nassert solution('1') == ''\nassert solution('9') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4\n''') == '5'\nassert solution('''\n2\n0\n''') == '1'\nassert solution('''\n1\n0\n''') == '1'\nassert solution('''\n2\n0\n''') == '2'\nassert solution('''\n2\n1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"3\\n0\") == \"0\"\nassert solution(\"3\\n1\") == \"6\"\nassert solution(\"3\\n2\") == \"10\"\nassert solution(\"3\\n3\") == \"15\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4''') == '5'\nassert solution('''2\n10''') == '10'\nassert solution('''7\n10''') == '10'\nassert solution('''4\n6''') == '8'\nassert solution('''10\n5''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 4 5\") == \"NO\"\nassert solution(\"2 4 4\") == \"YES\"\nassert solution(\"2 4 2\") == \"NO\"\nassert solution(\"2 4 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 4') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('1 1 2 3') == 'YES'\nassert solution('1 1 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 6 6') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('2 2 3') == 'NO'\nassert solution('2 4 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 4 3\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 2 2\") == \"YES\"\nassert solution(\"5 5 5\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 3 1\") == \"NO\"\nassert solution(\"10 10 10\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"2 1 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 1 3\") == \"NO\"\nassert solution(\"2 5 3\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(read()) == 'YES'\nassert solution(read()) == 'NO'\nassert solution(read()) == 'YES'\nassert solution(read()) == 'NO'\nassert solution(read()) == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 4') == 'NO'\nassert solution('5 4 3') == 'YES'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 2 2') == 'NO'\nassert solution('2 4 6') == 'NO'\nassert solution('3 3 3') == 'YES'\nassert solution('4 3 4') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(11) == \"No\"\nassert solution(22) == \"No\"\nassert solution(43) == \"No\"\nassert solution(10) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(29) == \"Yes\"\n\nassert solution(5) == \"No\"\nassert solution(10) == \"Yes\"\nassert solution(45) == \"No\"\nassert solution(42) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"11\") == \"No\"\nassert solution(\"21\") == \"No\"\nassert solution(\"90\") == \"Yes\"\nassert solution(\"09\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('29') == 'Yes'\nassert solution('99') == 'No'\nassert solution('59') == 'No'\nassert solution('89') == 'Yes'\nassert solution('891') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(10) == \"No\"\nprint(solution(int(stdin.read())))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes'\nassert solution('99') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('1234567891') == 'No'\nassert solution('10') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'No'\nassert solution('9') == 'Yes'\nassert solution('9') == 'No'\nassert solution('9') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('9') == 'No'\nassert solution('999') == 'Yes'\nassert solution('99') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"31\") == \"No\"\nassert solution(\"30\") == \"No\"\nassert solution(\"32\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(19) == \"No\"\nassert solution(99) == \"No\"\nassert solution(99) == \"No\"\nassert solution(3) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == '1'\nassert solution('10 7 3\\n2 6 8\\n9 8 1\\n') == '7'\nassert solution('4 4 4\\n1 2 3\\n3 4 5\\n4 5 6\\n') == '5'\nassert solution('6 7 2\\n5 4 2\\n2 3 1\\n') == '3'\nassert solution('2 1 2\\n1 2 1\\n') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 96
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 3') == '1'\nassert solution('1 1 3') == '1'\nassert solution('1 2 1') == '2'\nassert solution('1 2 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('2 3 4') == '2'\nassert solution('3 2 4') == '3'\nassert solution('3 4 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3') == '1'\nassert solution('5 3 3') == '1'\nassert solution('5 3 2') == '2'\nassert solution('5 2 3') == '2'\nassert solution('5 3 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('2 1 2') == '1'\nassert solution('2 3 2') == '1'\nassert solution('2 2 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3\") == \"1\"\nassert solution(\"5 3 3\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 1 1') == '1'\nassert solution('5 1 1') == '1'\nassert solution('5 1 1') == '1'\nassert solution('5 10 10') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3 3''') == '1'\nassert solution('''5 3 2''') == '2'\nassert solution('''100 50 50''') == '0'\nassert solution('''100 50 21''') == '3'\nassert solution('''25 2 11''') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"No\"\nassert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"Yes\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n.#.\\n\") == \"Yes\"\nassert solution(\"5 5\\n..*..\\n**..\\n*..*.\\n.**.*\\n*.*.*\\n.*.*.*\") == \"Yes\"\n\"\"\"\n\nfrom __future__ import annotations",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''5 6\n.#..#.#\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nH, W = map(int, stdin.split(\" \"))\ngrid = [list(map(int, line.split(\" \"))) for line in stdin.split(\"\\n\")]\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\nprint(col_sum)\n\nrow_sum = [sum(r) for r in grid]\ncol_sum = [sum(r) for r in zip(*grid)]\n\nprint(row_sum)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.",
        "num_ids_2": 1585,
        "num_ids_4": 1585
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"#...#\") == \"Yes\"\nassert solution(\"#...#\") == \"Yes\"\nassert solution(\"...#\") == \"No\"\nassert solution(\".....\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n.#.\\n###\\n.#.') == 'Yes'\nassert solution('3 3\\n.#.\\n###\\n.#.') == 'No'\nassert solution('3 3\\n.#.\\n###\\n.#.') == 'No'\nassert solution('3 3\\n.#.\\n###\\n.#.') == 'No'\nassert solution('3 3\\n.#.\\n###\\n.#.') == 'Yes'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n.\\n.#\\n##\") == \"Yes\"\nassert solution(\"2 3\\n#.\\n#.\\n#.\") == \"No\"\nassert solution(\"3 3\\n.#.\\n#.#\\n#.#\\n\") == \"No\"\nassert solution(\"4 5\\n.#.#.\\n.#.#.#\\n#.###.#\\n#.#.#.#\\n.#.#.#.#\\n#.#.#.#.#\\n#.###.###\\n\") == \"Yes\"\nassert solution(\"4 5\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n\") == \"Yes\"\n",
        "num_ids_2": 42,
        "num_ids_4": 122
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 20') == 'Yes'\nassert solution('30 10 20') == 'No'\nassert solution('20 10 10') == 'Yes'\nassert solution('20 20 10') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('3 2 1') == 'Yes'\nassert solution('30 30 20') == 'No'\nassert solution('1 100 1') == 'Yes'\nassert solution('10 30 30') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 10') == 'No'\nassert solution('10 30 30') == 'Yes'\nassert solution('10 30 30 30') == 'No'\nassert solution('30 30 30 30') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('100 100 100') == 'No'\nassert solution('10 30 30') == 'No'\nassert solution('10 30 10') == 'No'\nassert solution('10 30 30') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 40 30\") == \"Yes\"\nassert solution(\"10 40 40\") == \"Yes\"\nassert solution(\"10 40 30\") == \"No\"\nassert solution(\"10 40 40\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('50 30 10') == 'No'\nassert solution('50 30 10') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n\") == \"Yes\"\nassert solution(\"1 2 3\\n\") == \"No\"\nassert solution(\"2 2 1\\n\") == \"Yes\"\nassert solution(\"2 2 1\\n\") == \"No\"\nassert solution(\"3 3 3\\n\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 30 30\") == \"No\"\nassert solution(\"10 30 30 40\") == \"No\"\nassert solution(\"10 30 30 40 50\") == \"Yes\"\nassert solution(\"1 10 10\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 15') == 'No'\nassert solution('1 2 3') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Balanced'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 4 1\") == \"Right\"\nassert solution(\"3 9 1 3\") == \"Left\"\nassert solution(\"3 1 5 2\") == \"Right\"\nassert solution(\"3 1 2 1\") == \"Balanced\"\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 1 1 1') == 'Right'\nassert solution('3 1 1 1') == 'Balanced'\nassert solution('3 1 1 1') == 'Balanced'\nassert solution('3 1 1 1') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Balanced'\nassert solution('1 2 3 4 5') == 'Right'\nassert solution('1 1 1 1') == 'Balanced'\nassert solution('1 1 1 1 1') == 'Balanced'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\nassert solution('3 8 7 1') == 'Balanced'\n'''\n'''\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Left'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 6 4 5\") == \"Left\"\nassert solution(\"4 9 2 3\") == \"Left\"\nassert solution(\"3 4 9 2\") == \"Left\"\nassert solution(\"4 5 4 5\") == \"Balanced\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 7 2\") == \"Right\"\nassert solution(\"3 8 7 3\") == \"Balanced\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\n\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n",
        "num_ids_2": 26,
        "num_ids_4": 68
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '11'\nassert solution('3\\n1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '22'\nassert solution('4\\n1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '29'\nassert solution('5\\n1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '37'\n",
        "num_ids_2": 91,
        "num_ids_4": 210
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"3\\n4 5 6 7 8 9 -2 -3 4 -2\\n1 2 3 4 5 6 7 8 9 -2 -3 4 -2\\n1 2 3 4 5 6 7 8 9 -2 -3 4 -2\\n1 2 3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"2\\n1 0 1\\n1 0 1\") == \"0\"\nassert solution(\"3\\n1 0 1\\n1 0 1\\n1 0 1\") == \"0\"\nassert solution(\"4\\n1 0 1 0\\n1 0 1 0\\n1 0 1 0\\n1 0 1 0\") == \"0\"\n",
        "num_ids_2": 101,
        "num_ids_4": 146
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n2 4 5 6 7 8 9 -2 -3 4 -2') == '0'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1",
        "num_ids_2": 74,
        "num_ids_4": 1394
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n'\n    '1 1 0 1 0 0 0 1 0 1\\n'\n    '3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\n\nassert solution(\n    '1\\n'\n    '1 1 0 1 0 0 0 1 0 1\\n'\n    '3 4 5 6 7 8 9 -2 -3 4 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n') == '0'\n\nassert solution(\n    '1\\n'\n    '1 1 0 1 0 0 0 1 0 1\\n'\n    '3 4 5 6 7 8 9 -2 -3 4 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n'\n    '1 -2 -2 -1 -2 -2 -2 -2 -2\\n') == '-2'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 8\nassert solution(sample_input2) == 6\nassert solution(sample_input3) == 0\nassert solution(sample_input4) == 0\nassert solution(sample_input5) == 0\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"6\"\n",
        "num_ids_2": 29,
        "num_ids_4": 115
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\\n2 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n",
        "num_ids_2": 154,
        "num_ids_4": 500
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('12 3') == 'No'\nassert solution('3 5') == 'Yes'\nassert solution('2 4') == 'Yes'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3''') == 'Yes'\nassert solution('''9 9''') == 'No'\nassert solution('''3 3''') == 'Yes'\nassert solution('''2 3''') == 'No'\nassert solution('''1 2''') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('-999-555-5555') == 'No'\nassert solution('845-1-4444') == 'Yes'\nassert solution('845-1-4444-1') == 'No'\nassert solution('909-999-99') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('269-6650') == 'Yes'\nassert solution('101-1010') == 'No'\nassert solution('101-1010101') == 'No'\nassert solution('101-10101010') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('0') == 'No'\nassert solution('A1') == 'No'\nassert solution('26') == 'Yes'\nassert solution('26-6650') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"269-6650\")\nassert solution(\"1-4-3-5-2\")\nassert solution(\"5-4-3-2\")\nassert not solution(\"1-2\")\nassert not solution(\"1-a\")\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"2 5 7\") == \"Yes\"\nassert solution(\"2 9\") == \"No\"\nassert solution(\"3 9\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 -') == 'Yes'\nassert solution('1 1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"3 3 6\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 6\") == \"1\"\nassert solution(\"4 3 5\") == \"3\"\nassert solution(\"8 4 12\") == \"3\"\nassert solution(\"2 3 6\") == \"1\"\nassert solution(\"4 3 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 4 3\") == \"1\"\nassert solution(\"3 4 6\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 3 4\") == \"2\"\nassert solution(\"2 3 4\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 5 2\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 1 1\") == \"0\"\nassert solution(\"2 2 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('2 1 1') == '1'\nassert solution('2 1 2') == '1'\nassert solution('2 1 3') == '2'\nassert solution('4 1 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3, 2, 6) == '1'\nassert solution(2, 1, 5) == '1'\nassert solution(2, 3, 4) == '1'\nassert solution(7, 2, 5) == '2'\nassert solution(3, 6, 8) == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == \"1\"\nassert solution('3 2 9') == \"3\"\nassert solution('5 9 3') == \"6\"\nassert solution('6 2 6') == \"1\"\nassert solution('6 2 9') == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 3 3') == '0'\nassert solution('3 2 6') == '1'\nassert solution('3 3 3') == '0'\nassert solution('1 1 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == 1\nassert solution(\"1 1 1\") == 0\nassert solution(\"2 2 2\") == 1\nassert solution(\"3 3 3\") == 2\nassert solution(\"4 4 4\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 8 2'''\n) == '3\\n4\\n7\\n8'\n\nassert solution(\n'''20 30 10'''\n) == '10\\n20\\n30'\n\nassert solution(\n'''10 4 2'''\n) == '10\\n4\\n2'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"3 4 2\") == \"3\"\nassert solution(\"5 7 3\") == \"3\"\nassert solution(\"3 8 2\") == \"3\"\nassert solution(\"5 7 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 1 1\") == \"1\"\nassert solution(\"3 1 2\") == \"1 2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 3 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 8 2''') == ''\nassert solution('''3 8 2'''\n                 '''\\n\\n''') == '''3\n4\n7\n8'''\nassert solution('''1 1 1''') == ''\nassert solution('''3 9 2''') == ''\nassert solution('''3 8 2''') == ''\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8\\n'\n\nassert solution('3 10 3') == '3\\n4\\n7\\n8\\n9\\n10\\n'\n\nassert solution('5 4 1') == '5\\n6\\n7\\n8\\n9\\n10\\n'\n\nassert solution('3 1 1') == '3\\n'\n\nassert solution('3 2 2') == '3\\n4\\n'",
        "num_ids_2": 52,
        "num_ids_4": 95
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"3\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"4 4 4\") == \"3\"\nassert solution(\"5 5 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 8 2') == \"3\\n4\\n7\\n8\"\nassert solution('3 2 2') == \"3\\n4\"\nassert solution('10 10 10') == \"\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'ABC'\nassert solution('C++') == 'Cpp'\nassert solution('C++X') == 'CppX'\nassert solution('C++XABC') == 'CppXabc'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"ABxC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABxC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABxC\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(solution) == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ABC\"\n\"\"\"\n\nimport sys\n\n\"\"\"\nSample 1:\n4 4 1\nABCDEFGHI\n\nSample 2:\n3 4 1\nABCD\n\nSample 3:\n5 3 1\nAAAAAAAAA\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"ABC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\nprint(solution(\"AtCoder Beginner Contest\"))\n\n\"\"\"\n\n\n\"\"\"\nAB - A\nAC - A\nBA - B\nBC - B\nCA - C\nCB - C\nDA - D\nDB - D\n\nABD - AD\nACE - CE\nADB - AD\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"Dima C. Veronikov\") == \"DCV\"\nassert solution(\"Exhibition\") == \"EX\"\nassert solution(\"Dima C. Veronikov\") == \"DCV\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'ABC'\nprint(solution(stdin))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 5 4'''\n) == 'YES'\n\nassert solution(\n'''10 3 2'''\n) == 'YES'\n\nassert solution(\n'''10 4 0'''\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 4 2\") == \"YES\"\nassert solution(\"1 4 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 4') == 'NO'\nassert solution('2 1 5') == 'YES'\nassert solution('1 1 4') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 3 2') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == 'NO'\nassert solution('2 3 4') == 'YES'\nassert solution('2 5 4') == 'NO'\nassert solution('10 10 1') == 'YES'\nassert solution('1 2 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 4') == 'NO'\nassert solution('2 3 5') == 'YES'\nassert solution('5 2 5') == 'YES'\nassert solution('2 3 2') == 'YES'\nassert solution('2 3 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 1 4') == 'YES'\nassert solution('3 1 4') == 'YES'\nassert solution('4 5 4') == 'NO'\nassert solution('1 1 4') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('1 1 2') == 'NO'\nassert solution('10 1 1') == 'YES'\nassert solution('10 1 2') == 'NO'\nassert solution('100 1 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input().strip()) == \"NO\"\nassert solution(input().strip()) == \"NO\"\nassert solution(input().strip()) == \"YES\"\nassert solution(input().strip()) == \"YES\"\nassert solution(input().strip()) == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 17') == '83'\nassert solution('100 17') == '83'\nassert solution('7 17') == '0'\nassert solution('100 8') == '100'\nassert solution('7 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '83'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 17') == '83'\nassert solution('5 17') == '42'\nassert solution('0 0') == '0'\nassert solution('1 0') == '1'\nassert solution('5 9') == '42'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('10 17') == '83'\nassert solution('100 17') == '83'\nassert solution('10 17') == '83'\nassert solution('10 100') == '101'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100 17') == '83'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 17') == '83'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 17') == '83'\nassert solution('100 17') == '83'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(100,17) == 83\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"83\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"100 17\") == \"83\"\nassert solution(\"10017\") == \"83\"\nassert solution(\"100 17\") == \"83\"\nassert solution(\"1000000001 1\") == \"1000000001\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\n\"\"\"\nfrom itertools import product\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('2 3') == '6'\nassert solution('5 7') == '15'\nassert solution('3 4') == '12'\nassert solution('3 5') == '15'\n",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nprint(solution(\"1000000000 1000000000\"))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('10000000000 1000000000000') == '-1'\nassert solution('1000000000000000000') == '1000000000000000000'\nassert solution('1000000000000000000000') == '-1'\nassert solution('100000000000000000000000') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 59
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1000000000000000000 1000000000000000000\") == \"-1\"\nassert solution(\"1000000000000000000\") == \"-1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''2\n-1000000000000000 -1000000000000000''') == '-1'\nassert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''1000000000000000000 1000000000''') == '1000000000000000000'\nassert solution('''1000000000000000000 1000000000''') == '1000000000000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 40
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '1'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 53
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"1\\n2\") == \"No\"\nassert solution(\"1\\n0\") == \"Yes\"\nassert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"1\\n2\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"2018\\n201\") == \"No\"\nassert solution(\"2016\\n6\") == \"Yes\"\nassert solution(\"2016\\n5\") == \"No\"\nassert solution(\"0\\n1\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '2018\\n218\\n'\n) == 'Yes'\nassert solution(\n    '1000000\\n1681\\n'\n) == 'No'\nassert solution(\n    '0\\n0\\n'\n) == 'Yes'\nassert solution(\n    '5\\n13\\n'\n) == 'No'\nassert solution(\n    '0\\n0\\n'\n) == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"1000000\") == \"Yes\"\n\n\"\"\"\n\n\"\"\"\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = int(input())\n    coins = [500] * n\n    coins[a] = 1\n    print(\"Yes\" if sum(coins) == n else \"No\")\n\n\"\"\"\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = int(input())\n    if n == a:\n        print(\"Yes\")\n    elif n - a >= 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''2020\n20''') == 'No'\nassert solution('''1449\n499''') == 'No'\nassert solution('''1449\n1000''') == 'Yes'\nassert solution('''1549\n9''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('E869120 has A 1-yen coins and infinitely many 500-yen coins.\\nDetermine if he can pay exactly N yen using only his 1-yen and 500-yen coins.\\n2018\\n218') == 'Yes'\nassert solution('2018\\n218') == 'Yes'\nassert solution('2018\\n88') == 'No'\nassert solution('2018\\n2000000') == 'No'\nassert solution('2018\\n0') == 'No'\n",
        "num_ids_2": 74,
        "num_ids_4": 101
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('15\\n300') == 'No'\nassert solution('10\\n199') == 'No'\nassert solution('10\\n500') == 'Yes'\nassert solution('0\\n0') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2018\\n218\\n') == 'Yes'\nassert solution('2018\\n3\\n') == 'No'\nassert solution('2018\\n5\\n') == 'No'\nassert solution('2018\\n10\\n') == 'Yes'\nassert solution('2018\\n2\\n') == 'Yes'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('10\\n5') == 'No'\nassert solution('10\\n4') == 'Yes'\nassert solution('10\\n10') == 'Yes'\nassert solution('10\\n14') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"safe\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"3 3 4\") == \"dangerous\"\nassert solution(\"5 2 1\") == \"dangerous\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"4 1 2\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"safe\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 3 6''') =='safe'\n\nassert solution(\n'''5 3 7''') =='safe'\n\nassert solution(\n'''5 3 4''') == 'dangerous'\n\nassert solution(\n'''5 3 7''') =='safe'\n\nassert solution(\n'''5 3 5''') == 'dangerous'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"dangerous\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"dangerous\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"dangerous\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 3 5') == 'dangerous'\nassert solution('4 3 1') =='safe'\nassert solution('3 5 1') == 'dangerous'\nassert solution('3 5 2') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == \"safe\"\nassert solution('4 3 6') == \"safe\"\nassert solution('4 3 4') == \"safe\"\nassert solution('1 1 1') == \"dangerous\"\nassert solution('1 2 3') == \"dangerous\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('2') == '1'\nassert solution('10') == '9'\nassert solution('0') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '9'\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nassert solution('10\\n') == '9'\nassert solution('123456789') == '123456789'\nassert solution('123456789\\n') == '123456789'\nassert solution('1234567890') == '1234567890'\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"9\"\n\n\"\"\"\n\n\"\"\"\n1\n9\n\n10\n1\n\n100\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"11\") == \"10\"\nassert solution(\"100\") == \"99\"\nassert solution(\"1000\") == \"999\"\nassert solution(\"100000\") == \"9999\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '1'\nassert solution('10\\n') == '9'\nassert solution('40\\n') == '25'\nassert solution('20\\n') == '16'\nassert solution('100\\n') == '99'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n''') == '9'\nassert solution('''11\n''') == '9'\nassert solution('''111\n''') == '9'\nassert solution('''1000000\n''') == '999999'",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '9'\nassert stdin == '10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == \"10\"\nassert solution('1\\n1\\n1\\n1') == \"1\"\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == \"1\"\nassert solution('2\\n1\\n1') == \"0\"\nassert solution('2\\n1\\n2\\n2\\n2') == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 91
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n1\\n3\\n2\") == 10\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1623,
        "num_ids_4": 1623
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1') == '10'\nassert solution('3\\n1 1') == '6'\nassert solution('3\\n2 3') == '10'\nassert solution('3\\n2 3') == '10'\nassert solution('3\\n3 2') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[0]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''1\n1\n1''') == '3'\nassert solution('''2\n2\n1 1''') == '3'\nassert solution('''10\n1\n1''') == '3'\nassert solution('''10\n1\n1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\n\"\"\"\n\"\"\"\n\n1. Test\n\n2. PSEUDOCODE\n - Initialize\n - Loop\n - Determine the ratio\n - Add the ratio to the total\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\n\"\"\"\n\"\"\"\n=====Submission Successful=====\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'yes' # or 'no'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is True\nassert solution('uncopyrightable') == 'yes'\nassert solution('abcdefg') == 'no'\nassert solution('abcdefgh') == 'no'\nassert solution('aaa') == 'yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable2') == 'no'\nassert solution('uncopyrightable3') == 'no'\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable2') == 'no'\nassert solution('uncopyrightable3') == 'yes'\nassert solution('uncopyrightable4') == 'no'\nassert solution('uncopyrightable5') == 'no'\n\nprint('Test passed.')\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == 'yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('copyrightable') == 'no'\nassert solution('copyrightable') == 'no'\nassert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'yes'\n\nprint('tests passed')\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"abc\") == \"yes\"\nassert solution(\"abc\") == \"yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"uncopyrightable\") == \"yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\n",
        "num_ids_2": 33,
        "num_ids_4": 79
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('copyrightable') == 'no'\nassert solution('uncopyrightable') == 'yes'\nassert solution('copyrightable') == 'no'\nassert solution('copeyrightable') == 'no'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WEEWW') == 1\nassert solution('EWEWE') == 1\nassert solution('WEEWE') == 1\nassert solution('WE') == 1\nassert solution('WEEWWE') == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWEE') == '3'\nassert solution('EEW') == '0'\nassert solution('WE') == '1'\nassert solution('WEEWEE') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('WEEWW') == \"1\"\nassert solution('EEEWW') == \"0\"\nassert solution('WWEEW') == \"1\"\nassert solution('WEEWW') == \"1\"\nassert solution('EEEWWW') == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEEWWE') == '2'\nassert solution('E') == '0'\nassert solution('WEEWEW') == '1'\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEEWE') == '0'\nassert solution('WEEWWE') == '1'\nassert solution('WEEWEW') == '2'\nassert solution('WEEWEWE') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEEWEWE') == '0'\nassert solution('WEEWWWE') == '0'\nassert solution('WEEWEWEWEEWEEWWE') == '0'\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWW') == '1'\nassert solution('WWE') == '2'\nassert solution('WE') == '0'\nassert solution('E') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EWEWW') == '0'\nassert solution('WEEWE') == '2'\nassert solution('EWWE') == '0'\nassert solution('WEEW') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WEEWW') == 1\nassert solution('WWEEWWE') == 1\nassert solution('E') == 1\nassert solution('WEEWEEWEEWW') == 1\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n1 4\\n3 4\\n4 5\\n1 2\\n2 3\\n4 5\\n\") == \"2\\n2\\n1\\n2\\n2\\n2\\n1\\n1\"\nassert solution(\"6 4\\n1 2\\n2 3\\n1 4\\n4 5\\n2 4\\n5 1\\n1 3\\n3 4\\n4 5\\n\") == \"2\\n2\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 4\\n4 5\\n2 4\\n5 1\\n1 3\\n3 4\\n4 5\\n\") == \"2\\n2\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\"\n",
        "num_ids_2": 68,
        "num_ids_4": 216
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '''2\n2\n1\n1'''\n\nassert solution('''3 2\n1 2\n2 3''') == '''1\n1\n1'''\n\nassert solution('''5 2\n1 2\n2 3\n1 4\n2 4\n3 4''') == '''2\n2\n2\n2\n2\n2'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"0\\n2\\n2\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n2 3\") == \"0\\n2\\n1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n2 3\\n1 3\") == \"0\\n1\\n1\\n2\"\n",
        "num_ids_2": 60,
        "num_ids_4": 124
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '''2\n2\n1\n1\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('2 3\\n1 2\\n2 3') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n2 3') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n2 3\\n1 4\\n2 3') == '2\\n2\\n1\\n1'\n",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '''2\n2\n1\n1'''\n\nassert solution('''1 2\n2 3\n1 4''') == '''2\n2\n1\n1'''\n\nassert solution('''2 2\n1 2\n2 3''') == '''2\n2\n2\n1'''\n\nassert solution('''2 2\n2 3\n2 4\n3 4\n1 4\n1 3\n2 4\n2 3''') == '''2\n2\n2\n1\n1\n2\n1\n2'''\n\nassert solution('''2 2\n1 2\n2 3\n3 4\n4 1\n1 4\n2 3''') == '''2\n2\n2\n1\n1\n1\n2\n1\n2'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2\\n1 4') == '2'\nassert solution('2 3\\n1 2\\n2 3') == '2'\nassert solution('2 3\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('2 3\\n1 2\\n2 3\\n3 4\\n4 5') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 68
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"2\\n2\\n1\"\nassert solution(\"2 1\") == \"2\\n1\"\nassert solution(\"2 2\") == \"1\\n1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 2\") == \"1\\n1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 56
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''4 3\n1 2\n2 3\n1 4'''\n) == '2\\n2\\n1\\n1'\n\nassert solution(\n    '''4 3\n1 2\n2 3\n3 4'''\n) == '2\\n1\\n1\\n1'\n\nassert solution(\n    '''4 3\n1 2\n2 3\n1 3'''\n) == '2\\n1\\n0\\n0'\n\nassert solution(\n    '''4 5\n1 4\n2 3\n1 3\n2 4\n3 4'''\n) == '2\\n1\\n0\\n0\\n0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\") == 2\nassert solution(\"2\\n3\\n1\") == 3\nassert solution(\"1\\n2\\n3\\n4\\n5\") == 10\nassert solution(\"1\\n2\\n3\\n4\") == 6\nassert solution(\"1\\n2\") == 0\n",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '25'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n10\\n15\") == \"30\"\nassert solution(\"3\\n15\\n10\") == \"25\"\nassert solution(\"3\\n15\\n15\") == \"25\"\nassert solution(\"3\\n5\\n15\\n10\") == \"25\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '30'\nassert solution('3\\n5\\n10\\n15\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '15'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '15'\n",
        "num_ids_2": 39,
        "num_ids_4": 84
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"10\"\nassert solution(\"15\") == \"15\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5\\n10\\n15') == '25'\nassert solution('5\\n5\\n10\\n10') == '0'\nassert solution('5\\n5\\n10\\n15\\n15') == '30'\nassert solution('5\\n5\\n10\\n15\\n10') == '15'\nassert solution('5\\n5\\n10\\n15\\n5') == '30'\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5\\n5\\n5\\n5\") == \"25\"\nassert solution(\"5\\n5\\n5\\n5\\n0\") == \"0\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"25\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"25\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"25\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == ''\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('aabbca') == '2'\nassert solution('zxcvbn') == '0'\nassert solution('ab') == '1'\nassert solution('abcd') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('aabbca') == 2\nassert solution('a') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n",
        "num_ids_2": 18,
        "num_ids_4": 47
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\"\nassert solution(\"2\\naabbca\\n\") == \"0\"\nassert solution(\"4\\naabbca\\n\") == \"2\"\nassert solution(\"4\\naabbca\\n\") == \"0\"\nassert solution(\"1\\naabbca\\n\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('\\n') is None\nassert solution('aabbca') == '2'\nassert solution('aabca') == '2'\nassert solution('abbc') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabbca') == '2'\nassert solution('a') == '1'\nassert solution('aa') == '0'\nassert solution('aabbc') == '2'\nassert solution('aabac') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2:-2]\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aabbca\") == \"2\"\nassert solution(\"aabbb\") == \"2\"\nassert solution(\"bbbbb\") == \"2\"\nassert solution(\"abababab\") == \"1\"\nassert solution(\"a\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aabbcc') == '3'\nassert solution('abcdef') == '0'\nassert solution('abcdefghi') == '1'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"abca\") == \"a\"\nassert solution(\"abcda\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Rainy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunset') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n\nprint(\"All tests passed successfully.\")\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunshine') == 'Sunshine'\nassert solution('RainSunshine') == 'RainSunshine'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sun') == 'Sunny'\nassert solution('Sun') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Cloudy\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('SunnY') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('CloUy') == 'Rainy'\nassert solution('CLouDy') == 'Rainy'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunshine\") == \"Sunshine\"\nassert solution(\"Sunshine\") == \"Sunshine\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunshine\") == \"Sunshine\"\nassert solution(\"Sunshine and Sunshine\") == \"Sunshine and Sunshine\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''7 17 120'''\n) == '119'\nassert solution(\n'''7 17 120'''\n) == '119'\nassert solution(\n'''7 17 120'''\n) == '119'\nassert solution(\n'''7 17 120'''\n) == '119'\nassert solution(\n'''7 17 120'''\n) == '119'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 10') == '0'\nassert solution('2 10 100') == '199'\nassert solution('7 17 120') == '119'\nassert solution('10 10 10') == '120'\nassert solution('10 10 1') == '120'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 17 120') == '119'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 17 120') == '119'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"7 15 2\") == \"83\"\nassert solution(\"7 17 22\") == \"97\"\nassert solution(\"7 15 22\") == \"97\"\nassert solution(\"7 17 22\") == \"97\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '119'\nassert solution(input()) == '119'\nassert solution(input()) == '119'\nassert solution(input()) == '119'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '119'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('8 3 4') == '23'\nassert solution('6 3 4') == '12'\nassert solution('5 5 4') == '10'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 17 120') == '119'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1,1) == 3800\nassert solution(10,1) == 3800\nassert solution(3,2) == 14400\nassert solution(10,5) == 12800\nassert solution(100,999) == 92378\n\"\"\"\n\n\"\"\"\nSolution:\n\nThe number of test cases we have is min(N,5). We can calculate the answer as the sum of N * 1000 milliseconds times the sum of 1/2**i (i=0..10) with i=0..min(N,5).\n\n\"\"\"\n\nfrom itertools import count\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '3800'\nassert solution('''1 2''') == '3800'\nassert solution('''2 1''') == '3800'\nassert solution('''2 2''') == '7200'\nassert solution('''10 10''') == '45800'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 2\") == \"6738\"\nassert solution(\"4 4\") == \"13663\"\nassert solution(\"4 4\") == \"13663\"\nassert solution(\"4 4\") == \"13663\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '16000'\nassert solution('3 2') == '6000'\nassert solution('4 3') == '24000'\nassert solution('5 4') == '24000'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3800'\nprint(solution(stdin))\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1''') == '3800'\n'''\nThe probability of the code succeeding in one attempt is 1/2, and the probability of the code succeeding in two attempts is 1/4, and so on.\nThe answer is given by the sum of the expected values of the execution time of the code for each attempt.\nThe sum of the execution times of the code for each attempt is equal to the sum of the execution times of the code for each attempt (including the last attempt).\nThe sum of the execution times of the code for each attempt is equal to (N \\choose M) * [ (1/2) + (2/4) + (3/8) +... ]\n= (N \\choose M) * (2 + 4 + 8 +...)\n= (N \\choose M) * (N \\choose 2) * 2\n= (N \\choose M) * (N \\choose 3) * 2\n= (N \\choose M) * (N \\choose 4) * 2\n= (N \\choose M) * (N \\choose 5) * 2\n= (N \\choose M) * (N \\choose 6) * 2\n= (N \\choose M) * (N \\choose 7) * 2\n= (N \\choose M) * (N \\choose 8) * 2\n= (N \\choose M) * (N \\choose 9) * 2\n= (N \\choose M) * (N \\choose 10) * 2\n= (N \\choose M) * (N \\choose 11) * 2\n= (N \\choose M) * (N \\choose 12) * 2\n= (N \\choose M) * (N \\choose 13) * 2\n= (N \\choose M) * (N \\choose 14) * 2\n= (N \\choose M) * (N \\choose 15) * 2\n= (N \\choose M) * (N \\choose 16) * 2\n= (N \\choose M) * (N \\choose 17) * 2\n= (N \\choose M) * (N \\choose 18) * 2\n= (N \\choose M) * (N \\choose 19) * 2\n= (N \\choose M) * (N \\choose 20) * 2\n= (N \\choose M) * (N \\choose 21) * 2\n= (N \\choose M) * (N \\choose 22) * 2\n= (N \\choose M) * (N \\choose 23) * 2\n= (N \\choose M) * (N \\choose 24) * 2\n= (N \\choose M) * (N \\choose 25) * 2\n= (N \\choose M) * (N \\choose 26) * 2\n= (N \\choose M) * (N \\choose 27) * 2\n= (N \\choose M) * (N \\choose 28) * 2\n= (N \\choose M) * (N \\choose 29) * 2\n= (N \\choose M) * (N \\choose 30) * 2\n= (N \\choose M) * (N \\choose 31) * 2\n= (N \\choose M) * (N \\choose 32) * 2\n= (N \\choose M) * (N \\choose 33) * 2\n= (N \\choose M) * (N \\choose 34) * 2\n= (N \\choose M) * (N \\choose 35) * 2\n= (N \\choose M) * (N \\choose 36) * 2\n= (N \\choose M) * (N \\choose 37) * 2\n= (N \\choose M) * (N \\choose 38) * 2\n= (N \\choose M) * (N \\choose 39) * 2\n= (N \\choose M) * (N \\choose 40) * 2\n= (N \\choose M) * (N \\choose 41) * 2\n= (N \\choose M) * (N \\choose 42) * 2\n= (N \\choose M) * (N \\choose 43) * 2\n= (N \\choose M) * (N \\choose 44) * 2\n= (N \\choose M) * (N \\choose 45) * 2\n= (N \\choose M) * (N \\choose 46) * 2\n= (N \\choose M) * (N \\choose 47) * 2\n= (N \\choose M) * (N \\choose 48) * 2\n= (N \\choose M) * (N \\choose 49) * 2\n= (N \\choose M) * (N \\choose 50) * 2\n= (N \\choose M) * (N \\choose 51) * 2\n= (N \\choose M) * (N \\choose 52) * 2\n= (N \\choose M) * (N \\choose 53) * 2\n= (N \\choose M) * (N \\choose 54) * 2\n= (N \\choose M) * (N \\choose 55) * 2\n= (N \\choose M) * (N \\choose 56) * 2\n= (N \\choose M) * (N \\choose 57) * 2\n= (N \\choose M) * (N \\choose 58) * 2\n= (N \\choose M) * (N \\choose 59) * 2\n= (N \\choose M) * (N \\choose 60) * 2\n= (N \\choose M) * (N \\choose 61) * 2\n= (N \\choose M) * (N \\choose 62) * 2\n= (N \\choose M) * (N \\choose 63) * 2\n= (N \\choose M) * (N \\choose 64) * 2\n= (N \\choose M) * (N \\choose 65) * 2\n= (N \\choose M) * (N \\choose 66) * 2\n= (N \\choose M) * (N \\choose 67) * 2\n= (N \\choose M) * (N \\choose 68) * 2\n= (N \\choose M) * (N \\choose 69) * 2\n= (N \\choose M) * (N \\choose 70) * 2\n= (N \\choose M) * (N \\choose 71) * 2\n= (N \\choose M) * (N \\choose 72) * 2\n= (N \\choose M) * (N \\choose 73) * 2\n= (N \\choose M) * (N \\choose 74) * 2\n= (N \\choose M) * (N \\choose 75) * 2\n= (N \\choose",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 100') == '100'\nassert solution('10 100') == '100'\nassert solution('1 1000000') == '100000'\nassert solution('1000000 1000') == '100000'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3800\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn, m = [int(x) for x in input().split()]",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('abcdefg') == None\nassert solution('abcd') == 'a'\nassert solution('ab') == None\nassert solution('abc') == 'b'\n",
        "num_ids_2": 25,
        "num_ids_4": 44
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == None\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('codechefregularcontest') == None\nassert solution('codechefregularcontest') == None\nassert solution('codechefregularcontest') == None\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('atcoderregularcontest') == None\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoder') == 'None'\nassert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('acd') == 'c'\n",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == None\nassert solution(\"atcoderregularcontest\") == None\nassert solution(\"atcoderregularcontest\") == None\nassert solution(\"atcoderregularcontest\") == None\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"b\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('abc') == None\nassert solution('aaa') == None\nassert solution('aabc') == None\nassert solution('aabb') == 'b'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('solveatcoderregularcontest') == None\nassert solution('aaa') == None\nassert solution('aa') == None\nassert solution('ab') == 'a'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 4 3\\n') == '4\\n3\\n3\\n4'\nassert solution('1 2 3\\n') == '1\\n2\\n3\\n3'\nassert solution('1 2 3 4\\n') == '1\\n2\\n3\\n4'\nassert solution('2 4 4 3\\n') == '4\\n3\\n3\\n4'\nassert solution('1 2 3 4\\n') == '1\\n2\\n3\\n4'\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4 4 3\\n') == '4\\n3\\n3\\n4'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n1'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"3\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"4\\n2 4 3 4\") == \"4\\n3\\n3\\n4\"\nassert solution(\"4\\n2 3 3 4\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('2\\n4 4') == '4\\n4'\nassert solution('4\\n2 4 4 3') == '4\\n4\\n4\\n4'\nassert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('6\\n1 2 3 4 5 6') == '5\\n4\\n5\\n6'\n",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n4 4 4 3\n''') == '4\\n3\\n3\\n4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '8\\n7\\n6\\n5\\n4\\n3\\n2'\nassert solution('''30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n''') == '29\\n28\\n27\\n26\\n25\\n24\\n23\\n22\\n21\\n20'\nassert solution('''1000\n9999999999\n''') == '999\\n998\\n997\\n996\\n995\\n994\\n993\\n992\\n991\\n990\\n989\\n988\\n987\\n986\\n985\\n984\\n983\\n982\\n981\\n980'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4\n2 4 4 3'''\n) == '''4\n3\n3\n4'''\n\nassert solution(\n'''2\n4 3'''\n) == '''3\n3'''\n\nassert solution(\n'''4\n6 0 -4 1'''\n) == '''4\n-1\n-1\n-1\n1'''\n\nassert solution(\n'''4\n4 3 5 4'''\n) == '''4\n3\n3\n3\n4'''\n\nassert solution(\n'''4\n4 4 4 4'''\n) == '''-1\n-1\n-1\n-1'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"2\\n1\\n3\") == \"2\"\nassert solution(\"2\\n4\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('1 2 3 4') == '4\\n3\\n3\\n4'\nassert solution('3 4 4 3') == '3\\n3\\n3\\n4'\nassert solution('2 3 4 3') == '4\\n3\\n3\\n4'\nassert solution('2 3 4 1') == '4\\n3\\n3\\n1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\n'''\n    pass\n    \n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"10\\n2 3 4 5 6 7 8 9 10\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"10\\n2 3 4 5 6 7 8 9 10\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"10\\n2 4 4 6 7 8 9 10\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\n",
        "num_ids_2": 50,
        "num_ids_4": 140
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1 1') == '2'\nassert solution('1 1 2 1 1 1') == '2'\nassert solution('3 4 5 1 1 2 4') == '8'\nassert solution('2 2 2 2 2') == '0'\nassert solution('1 1 1 1 1') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution
        "num_ids_2": 36,
        "num_ids_4": 1825
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 2 4 2 1') == 2\nassert solution('3 1 2 4 2 1') == 2\nassert solution('1 1 1 1 1 1 1') == 1\nassert solution('1 1 1 1 1 1') == 1\nassert solution('2 2 2 2 2 2') == 0\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('7\\n3 1 2 4 2 1') == '2'\nassert solution('10\\n3 1 2 4 2 1') == '4'\nassert solution('15\\n3 1 2 4 2 1') == '4'\nassert solution('7\\n3 1 2 4 2 1') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.\\n'\nassert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.\\n'\nassert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.\\n'\nassert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.\\n'\nassert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 4 2 1') == '2'\nassert solution('3\\n3 2 1 4 2') == '0'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n2 2 3 4 4 3') == '0'\nassert solution('10\\n
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 2 4 2 1') == '2'\nassert solution('2 1 3 2 2 1') == '4'\nassert solution('3 1 2 4 2 1') == '2'\nassert solution('1 1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n2 3 3') == '2'\nassert solution('2\\n3 2') == '2'\nassert solution('2\\n3 3') == '2'\nassert solution('2\\n4 3 4') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''3\n3\n1\n2\n1\n2''') == '3'\nassert solution('''3\n5\n2\n1\n1\n1\n2\n1\n2\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '4'\nassert solution('2\\n5') == '1'\nassert solution('3\\n2') == '1'\nassert solution('3\\n5') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3\n7 1\n2\n5\n10\n\"\"\") == \"8\"\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n10\\n') == '5'\nassert solution('2\\n2\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('2\\n3\\n3\\n3') == '3'\nassert solution('3\\n1\\n2\\n3') == '4'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('5\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 98
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"N\nD X\n2\n5\n10\"\"\") == \"8\"\nassert solution(\"\"\"5\n1\n1\n1\n1\n1\"\"\") == \"5\"\nassert solution(\"\"\"3\n7 1\n2\n5\n10\"\"\") == \"8\"\nassert solution(\"\"\"7\n1\n2\n3\n4\n5\n6\n7\"\"\") == \"14\"\nassert solution(\"\"\"100\n7\n3\n5\n10\"\"\") == \"200\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"4\\n7 3\\n1\\n2\\n5\\n10\\n2\\n3\\n4\") == \"6\"\nassert solution(\"4\\n7 4\\n1\\n2\\n5\\n10\\n2\\n3\\n4\") == \"9\"\nassert solution(\"5\\n7 6\\n1\\n2\\n5\\n10\\n2\\n3\\n4\") == \"10\"\nassert solution(\"5\\n7 6\\n1\\n2\\n5\\n10\\n2\\n3\\n4\") == \"12\"\n",
        "num_ids_2": 58,
        "num_ids_4": 128
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3\n7 1\n2\n5\n10\n\"\"\") == \"8\"\nassert solution(\n\"\"\"3\n7 4\n1\n1\n\"\"\") == \"10\"\nassert solution(\n\"\"\"3\n7 4\n2\n2\n\"\"\") == \"8\"\nassert solution(\n\"\"\"3\n7 4\n2\n3\n\"\"\") == \"6\"\nassert solution(\n\"\"\"3\n7 4\n1\n3\n\"\"\") == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''3\n10 1\n2\n5\n10''') == '8'\nassert solution('''3\n20 100\n2\n5\n10''') == '8'\nassert solution('''3\n6 1\n2\n5\n10''') == '8'\nassert solution('''3\n8 1\n2\n5\n10''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"0\\n0\\n0\\n100\\n\") == \"0\"\nassert solution(\"0\\n0\\n0\\n1\\n\") == \"0\"\nassert solution(\"0\\n2\\n2\\n1\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n2\\n2\\n100\") == \"2\"\nassert solution(\"1\\n2\\n2\\n100\") == \"0\"\nassert solution(\"1\\n1\\n2\\n100\") == \"0\"\nassert solution(\"1\\n2\\n2\\n100\") == \"0\"\nassert solution(\"1\\n1\\n1\\n100\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n5\\n\") == \"3\"\nassert solution(\"2\\n2\\n2\\n5\\n\") == \"3\"\nassert solution(\"2\\n2\\n2\\n10\\n\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\n    \"2\\n2\\n2\\n200\\n\") == \"0\"\nassert solution(\n    \"3\\n3\\n3\\n500\\n\") == \"0\"\nassert solution(\n    \"4\\n4\\n4\\n1000\\n\") == \"1\"\nassert solution(\n    \"5\\n5\\n5\\n2000\\n\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('100') == '2'\nassert solution('100') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n5\") == 5\nassert solution(\"1\\n2\\n3\\n10\") == 1\nassert solution(\"2\\n2\\n2\\n20\") == 0\nassert solution(\"5\\n2\\n2\\n20\") == 1\nassert solution(\"20\\n20\\n20\\n20\") == 1\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2\n100\n''') == '2'\nassert solution('''1\n1\n1\n1\n1\n''') == '6'\nassert solution('''2\n2\n2\n2\n2\n2\n''') == '12'\nassert solution('''3\n3\n3\n3\n3\n3\n''') == '24'\nassert solution('''5\n5\n5\n5\n5\n5\n''') == '30'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('1\\n1\\n1\\n100') == '1'\nassert solution('1\\n1\\n1\\n10') == '0'\nassert solution('1\\n1\\n1\\n1000') == '0'\nassert solution('1\\n1\\n1\\n1000') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'No'\nassert solution('1 3 2') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 2 1\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 -1') == 'No'\nassert solution('1 4 1') == 'Yes'\nassert solution('1 -2 -1') == 'No'\nassert solution('1 2 2') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 3') == 'No'\nassert solution('1 2 2') == 'No'\nassert solution('-1 3 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('2 2 2') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('-1 -1 1') == 'No'\nassert solution('3 2 2') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1,3,2) == \"Yes\"\nassert solution(1,1,2) == \"No\"\nassert solution(1,1,1) == \"No\"\nassert solution(3,1,2) == \"No\"\nassert solution(1,1,0) == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''1 3 2'''\n) == 'Yes'\nassert solution(\n    '''0 4 -4'''\n) == 'No'\nassert solution(\n    '''0 3 -3'''\n) == 'No'\nassert solution(\n    '''5 6 9'''\n) == 'Yes'\nassert solution(\n    '''1 1 1'''\n) == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 -1 1') == 'Yes'\nassert solution('1 2 2') == 'No'\nassert solution('1 1 -1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('-1 -3 -2') == 'Yes'\n\nprint(solution(stdin))\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('1 1\\n1\\n1\\n1') == '1'\nassert solution('2 1\\n1\\n1\\n1') == '2'\nassert solution('3 1\\n1\\n1\\n1') == '3'\nassert solution('3 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('2 5\\n10\\n10\\n') == '2'\nassert solution('2 2\\n10\\n10\\n') == '2'\nassert solution('1 4\\n3\\n5\\n9\\n') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\n\nassert solution('''3 1000\n9\n99\n7\n4\n0\n0\n0\n0\n0\n0''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1000') == '9'\nassert solution('120 100') == '3'\nassert solution('100 140 100') == '6'\nassert solution('10 5') == '2'\nassert solution('10 5 10 10 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"2 3 4 5\") == \"1\"\nassert solution(\"2 3 4 5 6\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"9\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\napple\\n:orange\\napple\\n:orange\\napple') == 2\n\nassert solution('3\\napple\\n:orange\\napple\\n:orange\\napple') == 2\n\nassert solution('3\\napple\\n:orange\\napple\\n:orange\\napple') == 2\n\nassert solution('3\\napple\\n:orange\\napple\\n:orange\\napple') == 2\n\nassert solution('3\\napple\\n:orange\\napple\\n:orange\\napple') == 2",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"apple\\norange\\napple\") == \"2\"\nassert solution(\"apple\\napple\\napple\") == \"1\"\nassert solution(\"apple\\napple\\napple\\napple\") == \"2\"\nassert solution(\"apple\\napple\\napple\\napple\\napple\") == \"2\"\nassert solution(\"apple\\napple\\napple\\napple\\napple\\napple\") == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple\\norange\\napple\\n') == '2'\nassert solution('hello\\n') == '1'\nassert solution('\\n') == '0'\nassert solution('\\n\\n\\n') == '0'\nassert solution('apple\\napple\\napple\\n') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\n\nassert solution('\\n\\n') == '\\n'\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\napple\norange\napple\n''') == \"2\"\n\nassert solution('''3\napple\norange\napple\n''') == \"2\"\n\nassert solution('''5\ng\ne\nb\ns\nk\n''') == \"1\"\n\nassert solution('''5\na\nb\nc\nd\ne\n''') == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple,orange,apple') == '2'\nassert solution('apple,apple,orange') == '3'\nassert solution('apple,orange,apple,orange') == '2'\nassert solution('apple,orange,apple,orange,apple') == '5'\nassert solution('apple,apple,apple') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\napple\\norange\\napple\\n') == '2'\nassert solution('2\\napple\\norange\\napple\\n') == '2'\nassert solution('1\\napple\\n') == '1'\nassert solution('2\\nbanana\\nbanana\\n') == '2'\nassert solution('2\\napple\\nbanana\\nbanana\\n') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 77
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"1 400\") == \"1 1\"\nassert solution(\"1 200\") == \"1 2\"\nassert solution(\"1 400\") == \"1 1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 58
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('10000 1 1 1 1') == '0 1'\nassert solution('2 2') == '0 1'\nassert solution('2 1') == '0 1'\nassert solution('1 1') == '1 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"2200 2500 2700 2700\") == \"2 2\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"1 1\") == \"1 1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2100 2500 2700 2700') == \"2 2\"\nassert solution('252526') == \"3 3\"\nassert solution('2 2') == \"2 1\"\nassert solution('4 4') == \"3 1\"\nassert solution('4 5') == \"1 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2', \"1st example\"\nassert solution('''4\n1769 1612 1756 1713''') == '2 1', \"2nd example\"\nassert solution('''4\n1769 1612 1756 1713''') == '1 1', \"3rd example\"\nassert solution('''4\n2 2 2 2''') == '2 2', \"4th example\"\nassert solution('''4\n1769 1612 1756 1713''') == '1 1', \"5th example\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 4 2\") == \"1 1\"\nassert solution(\"5\\n400 150 123 124 125\") == \"1 1\"\nassert solution(\"3\\n3040 3060 3060\") == \"2 2\"\nassert solution(\"4\\n300 400 260 70\") == \"1 1\"\nassert solution(\"7\\n2929 2929 2829 2829 3029 3029\") == \"2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('3000 1900 2000 1800') == '3 2'\nassert solution
        "num_ids_2": 31,
        "num_ids_4": 1690
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2100 2500 2700 2700') == '2 2'\nassert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('4\\n3200 2500 2700 2700') == '1 1'\nassert solution('8\\n3200 2500 2700 2700') == '1 1'\nassert solution('8\\n3200 2500 2700 2700') == '1 1'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxo\") == solution(\"xox\")\nassert solution(\"oxx\") == \"1000\"\nassert solution(\"xox\") == solution(\"xox\")\nassert solution(\"xox\") == solution(\"xox\")\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('oxo') == '900'\nassert solution('xoo') == '900'\nassert solution('oxx') == '900'\nassert solution('xox') == '900'\nassert solution('xxx') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"ooxx\") == \"1400\"\nassert solution(\"xoxo\") == \"1600\"\nassert solution(\"xoox\") == \"1400\"\nassert solution(\"oxox\") == \"2200\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('oxo') == '900'\nassert solution('oxx') == '900'\nassert solution('xox') == '900'\nassert solution('xox') == '900'\nassert solution('xox') == '900'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oox\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"oxo\") == \"900\"\nassert solution(\"oox\") == \"900\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ooxx') == '900'\nassert solution('oxo') == '900'\nassert solution('xo') == '900'\nassert solution('xox') == '900'\nassert solution('oox') == '900'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('x') == ''\nassert solution('xoxo') == ''\nassert solution('xooxo') == ''\nassert solution('ooxxo') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"0\"\nassert solution(\"xyx\") == \"0\"\nassert solution(\"xxo\") == \"0\"\nassert solution(\"xox\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oxx') == '900'\nassert solution('ooo') == '0'\nassert solution('oxo') == '900'\nassert solution('oxxo') == '0'\nassert solution('oxxooxxooxx') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('H H') == 'H'\nassert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'H'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\nassert solution('D D') == 'D'\nassert solution('H D') == 'H'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('H H') == 'H'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"H\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"H\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('2124') == '1+2+4-2=7'\nassert solution('1223') == '1+2+3-2=7'\nassert solution('1224') == '1+2+4-2=7'\nassert solution('1225') == '1+2+5-2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"9866\") == \"8-6+6-6=2\"\nassert solution(\"98769\") == \"8-6-7+6+9=2\"\nassert solution(\"7777\") == \"7+7+7+7=7\"\nassert solution(\"98989\") == \"8-9+9-9+9=0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12345') == '1+2+3+4=7'\nassert solution('01234') == '1+0=1'\nassert solution('12345') == '1+2=3'\nassert solution('98765') == '9-8=1'\nassert solution('4567') == '4-5=1'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1698\") == \"-1+6+9+8=7\"\nassert solution(\"1234\") == \"-1+2+3+4=7\"\nassert solution(\"42\") == \"1+2+3+2=7\"\nassert solution(\"987\") == \"9+7+8+9=7\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"1222\"\n) == \"1+2+2+2=7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"12123\") == \"1+1+1+3=4\"\nassert solution(\"121234\") == \"1+1+2+1=3\"\nassert solution(\"121234\") == \"1+1+2+2=4\"\nassert solution(\"012345\") == \"1+0+1+2+3=5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('12345') == '1+2+3+4=7'\nassert solution('123456') == '1+2+3+4+5=7'\nassert solution('987654') == '9-7+3-5=7'\nassert solution('123456') == '1+2+3+4+5=7'\n",
        "num_ids_2": 27,
        "num_ids_4": 68
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"2 3 1\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '2'\nassert solution('''1 1 2 2''') == '2'\nassert solution('''2''') == '0'\nassert solution('''2 3 4 3 1''') == '2 0 0 0 0'\nassert solution('''4''') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '3\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '102\\n10\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0",
        "num_ids_2": 53,
        "num_ids_4": 1742
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n'\n    '1 1 2 2\\n'\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n    '5\\n'\n    '1 1 2 2\\n'\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n    '3\\n'\n    '1 1 2\\n'\n) == '2\\n1\\n1'\nassert solution(\n    '5\\n'\n    '2 2 3 3 4 4\\n'\n) == '3\\n2\\n2\\n2\\n2'\nassert solution(\n    '6\\n'\n    '1 1 2 2 3 3 4 4 4\\n'\n) == '5\\n0\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 3 3') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 3 4 5') == '2\\n2\\n0\\n0\\n0'\nassert solution('3 3 3 2 1 1') == '1\\n2\\n0\\n0\\n0'\nassert solution('3 3 3 2 4 1') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"1 1 2 2 0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"1 2 2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 46
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3') == '2'\nassert solution('1 2') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''5\n2 3 4 5 6\n''') == '2\\n2\\n2\\n2\\n0'\nassert solution('''5\n1 3 4 5 6\n''') == '2\\n2\\n2\\n0\\n0'\nassert solution('''5\n1 2 3 4 5\n''') == '2\\n2\\n2\\n2\\n0'\nassert solution('''5\n1 2 3 4 5\n''') == '2\\n2\\n2\\n2\\n0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2 2 0 0 0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2 2 1 0 0 0 0 0 0 0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 19 20 20 21 22 22 23\") == \"2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 19 20 20 21 22 22 23 24 25 26 27 28 29 30 31\") == \"2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 46,
        "num_ids_4": 212
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '2'\nassert solution('3\\n3\\n3\\n3\\n') == '2'\nassert solution('5\\n5\\n5\\n5\\n') == '0'\nassert solution('6\\n6\\n6\\n6\\n') == '0'\nassert solution('10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 3\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\",
        "num_ids_2": 1775,
        "num_ids_4": 1775
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n''') == '3'\nassert solution('''\n123456789101112\n''') == '6'\nassert solution('''\n123456789101112\n''') == '9'\nassert solution('''\n123456789101112\n''') == '10'\nassert solution('''\n123456789101112\n''') == '12'\n",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"6\") == \"3\"\nassert solution(\"42\") == \"3\"\n\nprint(solution(\"42\"))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '3'\nassert solution('3\\n4\\n3\\n2\\n1\\n0\\n') == '3'\nassert solution('10\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3'\nassert solution('10\\n2\\n5\\n7\\n1\\n2\\n3\\n4\\n6\\n8\\n9\\n10\\n') == '5'\n",
        "num_ids_2": 39,
        "num_ids_4": 90
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '0'\nassert solution('5') == '2'\nassert solution('7') == '3'\nassert solution('9') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == 3\nassert solution('2') == 2\nassert solution('1000') == 1000\nassert solution('3') == 2\nassert solution('1') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"100\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('7') == 7\nassert solution('4') == 4\nassert solution('9') == 9\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == 0\nassert solution('2') == 1\nassert solution('9') == 3\nassert solution('4') == 3\nassert solution('4') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'\nassert solution('1234') == 'No'\nassert solution('1123') == 'Yes'\nassert solution('1234') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n\nprint(\"Test Case 1: {}\".format(solution(stdin)))\n'''\n\n'''\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1118) == \"Yes\"\n\nassert solution(1159) == \"No\"\n\nassert solution(1234) == \"No\"\n\nassert solution(1111) == \"Yes\"\n\nassert solution(981) == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1101\") == \"No\"\nassert solution(\"1187\") == \"Yes\"\nassert solution(\"1175\") == \"No\"\nassert solution(\"1008\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1118) == 'Yes'\nassert solution(1113) == 'No'\nassert solution(1112) == 'Yes'\nassert solution(1231) == 'No'\nassert solution(1111) == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"987654321\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1189\") == \"No\"\nassert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1234\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1119') == 'No'\nassert solution('1864') == 'No'\nassert solution('1918') == 'Yes'\nassert solution('111') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"112\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''1\n2\n1 1''') == '1'\nassert solution('''1\n2\n3\n1''') == '0'\nassert solution('''2\n1\n1\n1''') == '2'\nassert solution('''2\n2\n2\n2''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('4\\n1 5\\n2 4\\n3 6\\n4 8') == '4'\nassert solution('5\\n1 5\\n2 4\\n3 6\\n4 8\\n5 10') == '1'\nassert solution('2\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('4\\n1 5\\n2 4\\n3 6\\n4 8') == '4'\n",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('5\\n1 5\\n2 4\\n3 6\\n4 7') == '2'\nassert solution('5\\n2 4\\n3 6\\n4 7') == '3'\nassert solution('5\\n2 4\\n3 6\\n4 7\\n5 8') == '2'\nassert solution('5\\n2 4\\n3 6\\n4 7\\n5 8\\n6 9') == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n5\n2 4\n3 6\"\"\") == \"3\"\nassert solution(\"\"\"2\n1 5\n2 4\n3 6\"\"\") == \"3\"\nassert solution(\"\"\"3\n1 5\n2 4\n3 6\"\"\") == \"2\"\nassert solution(\"\"\"4\n1 5\n2 4\n3 6\"\"\") == \"3\"\nassert solution(\"\"\"5\n1 5\n2 4\n3 6\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\n",
        "num_ids_2": 65,
        "num_ids_4": 469
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '2'\nassert solution('2 3') == '2'\nassert solution('3 1') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n2\\n2') == '3'\nassert solution('2\\n4\\n6') == '3'\nassert solution('2\\n6\\n2') == '3'\nassert solution('1\\n5\\n5') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n2 4\\n3 6') == '3'\nassert solution('2\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('3\\n1 5\\n2 4\\n3 6') == '2'\nassert solution('4\\n1 5\\n2 4\\n3 6') == '0'\nassert solution('5\\n1 5\\n2 4\\n3 6') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''2\n1 5\n2 4\n3 4''') == '1'\nassert solution('''2\n1 5\n2 4\n2 2''') == '2'\nassert solution('''2\n1 5\n2 4\n1 2''') == '2'\nassert solution('''2\n1 5\n2 4\n1 3''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \">\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('B C') == '='\nassert solution('A C') == '='\nassert solution('C B') == '='\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AB') == '<'\nassert solution('AC') == '>'\nassert solution('BA') == '='\nassert solution('BB') == '='\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"D E\") == \">\"\nassert solution(\"C D\") == \"=\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 11') == '<'\nassert solution('11 10') == '>'\nassert solution('10 10') == '='\nassert solution('A A') == '='\nassert solution('B 10') == '='\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('A B') == '<'\nassert solution('A B') == '='\nassert solution('A B') == '>'\nassert solution('A B') == '<'",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '='\nassert solution('D E') == '>'\nassert solution('E F') == '>'\nassert solution('F G') == '>'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('A B') == '='\n\nprint(solution('A B'))\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == '<'\nassert solution(\"B A\") == '>'\nassert solution(\"B C\") == '='\nassert solution(\"C B\") == '='\nassert solution(\"C D\") == '='\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2#1'\nassert solution('3 5') == '1#2#1'\nassert solution('3 5\\n..\\n.#.\\n..') == '11111'\nassert solution('3 5\\n.###\\n.#.#\\n.##.\\n.#.\\n.#.#\\n.#.#\\n..#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n",
        "num_ids_2": 28,
        "num_ids_4": 1568
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\nassert solution('4 7\\n.....\\n.#.#.\\n.....\\n#....\\n....\\n....\\n') == '222222\\n1#2#1#1#1'\nassert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\nassert solution('4 7\\n.....\\n.#.#.\\n.....\\n#....\\n....\\n....\\n') == '222222\\n1#2#1#1#1'\nassert solution('4 7\\n.....\\n.#.#.\\n.....\\n#....\\n....\\n....\\n#....\\n') == '222222\\n1#2#1#1#1'\n",
        "num_ids_2": 79,
        "num_ids_4": 158
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''\\\n3 5\n.....\n.#.#.\n.....\n''') == '1#2#1'\nassert solution('''\\\n3 3\n....\n.#.#\n....\n''') == '11111'\nassert solution('''\\\n1 2\n...\n.#\n.#\n''') == '1'\nassert solution('''\\\n3 4\n..#.\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....''') == '11211'\nassert solution('''2 3\n...\n..\n''') == '1#2#1'\nassert solution('''2 2\n..\n..\n''') == '1'\nassert solution('''3 3\n...\n.#.\n.#.\n''') == '1#1#'\nassert solution('''3 3\n..\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\nassert solution('3 5\\n......\\n....#.\\n#......\\n') == '11211\\n1#2#1'\nassert solution('3 5\\n#...\\n#..#.\\n#..#.\\n#..#.\\n') == '11211\\n1#2#1'\nassert solution('3 5\\n.......\\n......\\n#......\\n.......\\n') == '11211\\n1#2#1'\nassert solution('3 5\\n.......\\n....#..\\n......\\n.......\\n') == '11211\\n1#2#1'\n",
        "num_ids_2": 65,
        "num_ids_4": 142
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0]\n\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('25 35 6') == '2'\nassert solution('2 4 40') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('100 100 1000') == '3'\nassert solution('1000000 100000000 1000000000') == '3'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''4 4 240\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100''') == '5'\nassert solution('''2 3 1000\n1 1 1 1\n1 1 1 1''') == '1000'\nassert solution('''8 3 1000\n100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100''') == '0'\nassert solution('''2 3 1000\n1 1 1 1\n1 1 1 1''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 2\n60 90 120\n80 150 80 150''') == '2'\nassert solution('''10 10 100000\n100 100000 100000''') == '0'\nassert solution('''20 1000000 1000000''') == '0'\nassert solution('''10 10 1\n
        "num_ids_2": 18,
        "num_ids_4": 45
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution('3 4 40\\n60 90 120\\n80 150 80 150') == '1'\nassert solution('3 4 60\\n60 90 120\\n80 150 80 150') == '0'\nassert solution('3 4 60\\n60 90 120\\n80 150 80 150') == '2'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '3'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('60 90 120') == '3'\nassert solution('60 80 80 80') == '3'\nassert solution('60 80 80 90') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('120 150 120 150') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '3'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1 1 1 1 1''') == '10'\n'''\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1000 2000 700 3 3\") == \"16000\"\nassert solution(\"1000 2000 700 3 1\") == \"8780\"\nassert solution(\"2000 2000 700 3 1\") == \"16000\"\nassert solution(\"1000 2000 700 3 2\") == \"5200\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('50 50 50 100 100') == '12000'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('11') == '4'\nassert solution('10000000') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '8'\nassert solution('5\\n') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\nassert solution('6') == '7'\nassert solution('7') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == 4\nassert solution(2) == 1\nassert solution(1) == 1\nassert solution(20) == 6\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == 4\nassert solution('4') == 1\nassert solution('5') == 2\nassert solution('6') == 4\nassert solution('7') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 4\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('3') == '4'\nassert solution('4') == '8'\nassert solution('5') == '10'\nassert solution('6') == '12'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('10') == '9'\nassert solution('100') == '99'\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n') == '9'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '4'\nassert solution('10\\n') == '9'\nassert solution('4\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10''') == '9'\nassert solution('''2''') == '1'\nassert solution('''5''') == '4'\nassert solution('''10''') == '9'\nassert solution('''33''') == '9'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"10\") == \"9\"\nassert solution(\n\"1000\") == \"9999\"\nassert solution(\n\"1342\") == \"1341\"\nassert solution(\n\"108\") == \"103\"\nassert solution(\n\"15\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1'\nassert solution(3) == '4'\nassert solution(4) == '1'\nassert solution(5) == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10''') == '9'\nassert solution('''15''') == '9'\nassert solution('''64''') == '9'\nassert solution('''100''') == '9'\nassert solution('''1001''') == '9'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == \"9\"\nassert solution('20') == \"16\"\nassert solution('30') == \"25\"\nassert solution('40') == \"32\"\nassert solution('50') == \"31\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('9') == '3'\nassert solution('10') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10\n8\n8\n6\n''') == '3'\nassert solution('''\n5\n15\n25\n25\n30\n''') == '4'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == 3\nassert solution('5\\n10\\n8\\n8\\n6\\n7\\n') == 2\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == 3\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == 3\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n",
        "num_ids_2": 47,
        "num_ids_4": 115
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''1\n10\n8\n8\n6''') == '1'\nassert solution('''2\n10\n8\n8\n6''') == '2'\nassert solution('''10\n10\n8\n8\n6''') == '5'\nassert solution('''100\n10\n8\n8\n6''') == '99'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n10\n8\n8\n6\n\"\"\") == \"3\"\nassert solution(\"\"\"1\n10\n8\n8\n6\n\"\"\") == \"1\"\nassert solution(\"\"\"2\n10\n8\n8\n6\n\"\"\") == \"2\"\nassert solution(\"\"\"10\n8\n8\n6\n\"\"\") == \"3\"\nassert solution(\"\"\"14\n14\n10\n10\n8\n8\n6\n6\n4\n4\n2\n2\n1\n1\n\"\"\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('4\\n8\\n8\\n6') == '1'\nassert solution('4\\n8\\n8\\n6\\n4') == '2'\nassert solution('4\\n8\\n8\\n6\\n4\\n2') == '2'\nassert solution('4\\n8\\n8\\n6\\n4\\n2\\n1') == '2'\n",
        "num_ids_2": 41,
        "num_ids_4": 88
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'\nassert solution('2\\n20\\n16\\n') == '1'\nassert solution('5\\n6\\n5\\n4\\n3\\n') == '4'\nassert solution('10\\n1\\n') == '5'\nassert solution('100\\n1\\n') == '5'\n",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\n10\n8\n8\n6\n''') == \"3\"\n\nassert solution(\n'''\n2\n3\n5\n7\n9\n''') == \"1\"\n\nassert solution(\n'''\n8\n7\n6\n5\n4\n3\n2\n1\n''') == \"5\"\n\nassert solution(\n'''\n1\n1\n1\n1\n1\n1\n''') == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n8\\n8\\n8') == '1'\nassert solution('8\\n8\\n8\\n8') == '3'\nassert solution('8\\n8\\n8\\n8') == '4'\nassert solution('8\\n8\\n8\\n8') == '5'\nassert solution('8\\n8\\n8\\n8') == '6'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(EX_SHORT) == '5'\nassert solution(EXAMPLE) == '5'\nassert solution(EXAMPLE2) == '5'\nassert solution(EXAMPLE3) == '5'\nassert solution(EXAMPLE4) == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"AQWERTY\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ABCDEFGHIJKLMNOPQRSTUVWXY\"\nassert solution(\"IHGFEBJKLMNOPQRSTUVWXYSYZ\") == \"GHGFEBJKLMNOPQRSTUVW\"\nassert solution(\"WXYZABCDEFGHIJKLMNOPQRSTUVW\") == \"XYZABCDEFGHIJKLMNOP\"\nassert solution(\"WAQWEQERQWWE\") == \"WAQWEQERQ\"\n",
        "num_ids_2": 56,
        "num_ids_4": 131
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[7:13]\nassert solution('QWERTYASDFZXCV') == 'ASDFZ'\n\n'''",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 1812
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWEASY') == '5'\nassert solution('ABCDE') == '0'\nassert solution('FGHI') == '1'\nassert solution('GHIJKL') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWX'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('bcdefghijklmnopqrstuvwxy') == 'abcdefghijklmnopqrstuvwxy'\nassert solution('cdefghijklmnopqrstuvwxy') == 'abcdefghijklmnopqrstuvwxy'\nassert solution('defghijklmnopqrstuvwxy') == 'abcdefghijklmnopqrstuvwxy'\n",
        "num_ids_2": 73,
        "num_ids_4": 141
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\nassert solution('ASDFZXCV') == 5\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('abcdefg') == '0'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '26'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '26'\nassert solution('abcdefg') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 76
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A') == 'A'\nassert solution('Z') == 'A'\nassert solution('AA') == 'AA'\nassert solution('AB') == 'AB'\nassert solution('ABCD') == 'ABCD'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 4 1 2\") == \"2\"\nassert solution(\"4\\n2 4 1 2\\n3 2 4 3\") == \"4\"\nassert solution(\"4\\n2 4 1 2\\n3 2 4 3\\n3 3 2 4\") == \"4\"\nassert solution(\"4\\n2 4 1 2\\n3 2 4 3\\n3 3 2 4\\n3 3 2 4\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 100
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 12 40\\n') == '2'\nassert solution('5\\n2 3 4 5\\n') == '3'\nassert solution('3\\n1 2 3\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('3 9 30') == '2'\nassert solution('1 2 3') == '0'\nassert solution('1 10000000') == '1'\nassert solution('1 1000000000') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"5 4 3 2\") == \"4\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 5 5\") == \"2\"\n\"\"\"\nimport sys",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('1 2 3') == '0'\nassert solution('4 6 5 2 3 1') == '4'\nassert solution('4 7 5 6 3 2') == '3'\nassert solution('6 5 4 3 2 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 12 40\\n') == '2'\nassert solution('1 2 3\\n') == '4'\nassert solution('2 3 4\\n') == '2'\nassert solution('1 2 3\\n4 5 6\\n') == '2'\nassert solution('3 4 5 6\\n1 2 3 4 5 6 7\\n') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 6\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1') == 1\nassert solution('100') == 100\nassert solution('1000') == 1000\nassert solution('10000') == 10000\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '6'\nassert solution('''20''') == '28561'\nassert solution('''30''') == '28890'\nassert solution('''40''') == '326480'\nassert solution('''500''') == '68864'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"15\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n    1\n''') == '6'\nassert solution('''\n    5\n''') == '6'\nassert solution('''\n    100\n''') == '6'\n\nassert solution('''\n    100000000\n''') == '6'\nassert solution('''\n    1000000001\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 1\nassert solution(\"10\") == 1\nassert solution(\"100\") == 1\nassert solution(\"1000\") == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('1000') == '93488502579709'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '6'\nassert solution('3') == '6'\nassert solution('3 4 2') == '9'\nassert solution('3 4 2 5') == '15'\nassert solution('3 4 2 5 6') == '21'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '6'\nassert solution('''\n10\n''') == '210'\nassert solution('''\n4\n''') == '8'\nassert solution('''\n10\n''') == '210'\nassert solution('''\n20\n''') == '840'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('4') == '3'\nassert solution('6') == '5'\nassert solution('8') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"\") == 0\nassert solution(\"1\") == 1\nassert solution(\"1,2\") == 3\nassert solution(\"3\") == 3\n",
        "num_ids_2": 14,
        "num_ids_4": 32
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '6'\nassert solution('''5''') == '15'\nassert solution('''20''') == '120'\nassert solution('''9''') == '45'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '15'\nassert solution('15') == '105'\nassert solution('42') == '210'\nassert solution('54321') == '72574748'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('2 3 1') == '2'\nassert solution('2 3 1') == '2'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    3 1\n    ''') == '2'\nassert solution('''\n    5\n    3 1 3 1 3\n    ''') == '3'\nassert solution('''\n    1\n    1\n    ''') == '0'\nassert solution('''\n    2\n    1\n    ''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 2') == '-1'\nassert solution('4 1 2 3') == '2'\nassert solution('1 2 3 4') == '-6'\nassert solution('10 9 8 7 6 5 4 3 2 1') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 2 1') == '2'\nassert solution('3 2 3') == '1'\nassert solution('3 3 3') == '0'\nassert solution('3 3 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('2\\n4 1') == '-1'\nassert solution('2\\n3 2') == '-1'\nassert solution('2\\n5 2') == '-1'\nassert solution('3\\n1 2 3') == '-1'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 1 2') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '0'\nassert solution('1 1 2 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 3') == '-1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2', 'WA'\nassert solution('''1 2\n1 AC\n2 WA''') == '1 2', 'AC'\nassert solution('''1 2\n1 AC\n1 WA''') == '1 2', 'WA'\nassert solution('''1 1\n1 AC\n2 WA''') == '1 1', 'AC'\nassert solution('''1 1\n1 AC\n1 WA''') == '1 1', 'WA'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('3 2\\n1 WA\\n1 AC\\n2 WA\\n2 AC') == '0 0'\nassert solution('3 2\\n1 AC\\n2 AC\\n3 AC') == '1 1'\nassert solution('3 2\\n1 AC\\n2 AC\\n3 AC\\n4 AC\\n5 AC') == '2 2'\nassert solution('3 2\\n1 AC\\n2 AC\\n3 AC\\n4 AC\\n5 AC\\n6 AC\\n7 AC') == '3 0'\n",
        "num_ids_2": 60,
        "num_ids_4": 116
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n'''\n\nfrom sys import stdin\n\nn, m = map(int, stdin.readline().strip().split())\na = [stdin.readline().strip().split() for _ in range(n)]\n\ncorrect, penalty = 0, 0\nfor i in range(n):\n    if a[i][1] == 'AC':\n        correct += 1\n        penalty += i\n    else:\n        correct += 0\n        penalty += i\nprint(correct, penalty)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(my_input))\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 WA') == '2 2'\nassert solution('1 AC') == '2 0'\nassert solution('2 WA') == '1 2'\nassert solution('2 AC') == '1 0'\nassert solution('3 WA') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 WA\") == \"2 0\"\nassert solution(\"1 AC\") == \"1 0\"\nassert solution(\"2 WA\") == \"2 2\"\nassert solution(\"2 AC\") == \"2 2\"\nassert solution(\"2 WA\") == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2 2'\nassert solution('2 5') == '2 2'\nassert solution('2 2') == '2 0'\nassert solution('2 3') == '2 1'\nassert solution('2 3') == '1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == '5'\nassert solution('3 1') == '4'\nassert solution('3 2') == '2'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[2]\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"5\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"5 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '3'\nassert solution('5 1') == '4'\nassert solution('8 5') == '3'\nassert solution('10 10') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 1\") == \"5\"\nassert solution(\n    \"3 3\") == \"2\"\nassert solution(\n    \"3 1 1\") == \"4\"\nassert solution(\n    \"3 2\") == \"2\"\nassert solution(\n    \"4 3\") == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1\\n4 1 5') == 5\nassert solution('4 1\\n4 1 5') == 5\nassert solution('4 1\\n4 1 5') == 5\nassert solution('4 1\\n4 1 5') == 5\nassert solution('4 1\\n4 1 5') == 5\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1\\n4 1 5') == '5'\nassert solution('3 1\\n4 1 5') == '5'\nassert solution('2 1\\n4 1 5') == '4'\nassert solution('4 3\\n4 1 5 6 7') == '5'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n10\\n2\\n') == '16'\nassert solution('2\\n10\\n2\\n') == '16'\nassert solution('1\\n10\\n3\\n') == '10'\nassert solution('2\\n10\\n5\\n') == '16'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('1\\n10\\n2\\n1\\n2\\n3') == '4'\nassert solution('1\\n10\\n2\\n1\\n2') == '4'\nassert solution('1\\n10\\n2\\n1\\n2\\n3') == '4'\nassert solution('1\\n10\\n2\\n1\\n2\\n3\\n4\\n5\\n6') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 88
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\") == \"4\"\nassert solution(\"1\\n10\\n2\\n0\\n0\") == \"4\"\nassert solution(\"1\\n10\\n2\\n0\\n2\") == \"16\"\nassert solution(\"1\\n10\\n2\\n0\\n3\") == \"25\"\nassert solution(\"1\\n10\\n2\\n0\\n4\") == \"32\"\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\n10\n2\n''') == '4'\nassert solution('''\n1\n10\n3\n''') == '6'\nassert solution('''\n1\n10\n3\n2\n5\n''') == '10'\nassert solution('''\n1\n10\n3\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n''') == '26'\nassert solution('''\n2\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n10\n2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n10\n2\n\"\"\") == \"16\"\nassert solution(\"\"\"\n3\n10\n2\n\"\"\") == \"20\"\nassert solution(\"\"\"\n4\n10\n2\n\"\"\") == \"28\"\nassert solution(\"\"\"\n5\n10\n2\n\"\"\") == \"30\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n2\n''') == '4'\nassert solution('''\n1\n100\n2\n''') == '100'\nassert solution('''\n1\n4\n2\n''') == '3'\nassert solution('''\n1\n4\n2\n1\n''') == '4'\nassert solution('''\n2\n2\n2\n2\n2\n2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n1\n''') == '1'\nassert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n3\n''') == '3'\nassert solution('''1\n10\n4\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10\n2\n''') == '4'\nassert solution('''\n2\n10\n2\n''') == '8'\nassert solution('''\n2\n11\n2\n''') == '4'\nassert solution('''\n3\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == 4\nassert solution('1\\n10\\n5\\n') == 10\nassert solution('1\\n10\\n1\\n') == 1\nassert solution('1\\n10\\n5\\n') == 10\nassert solution('1\\n10\\n1\\n') == 1\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n2\\n10\\n2\\n\") == \"16\\n\"\nassert solution(\"1\\n10\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2",
        "num_ids_2": 43,
        "num_ids_4": 1455
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n10\\n10\\n10') == '10'\nassert solution('10\\n10\\n10\\n10') == '10'\nassert solution('2\\n2\\n2\\n2') == '4'\nassert solution('3\\n3\\n3\\n3') == '9'\nassert solution('1\\n2\\n3\\n4') == '10'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n\n\"\"\"\nChecking time limit exceeded\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"400\\n200\\n100\\n140\") == \"400\\n200\\n100\\n140\"\nassert solution(\"200\\n200\\n200\\n200\") == \"0\"\nassert solution(\"200\\n200\\n100\\n140\") == \"240\\n0\"\nassert solution(\"600\\n300\\n220\\n420\") == \"520\\n0\"\nprint(\"All tests passed successfully.\")\n",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100\\n100\\n100\\n100') == '0'\nassert solution('300\\n220\\n100\\n400') == '520'\nassert solution('1000000\\n1000000\\n1000000\\n1000000') == '0'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\\n10\\n10\\n10\") == \"20\"\nassert solution(\"5\\n5\\n5\\n5\") == \"5\"\nassert solution(\"3\\n3\\n3\\n3\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n10\\n10\\n10\") == \"20\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\nassert solution('500\\n300\\n220\\n420\\n') == '520'\nassert solution('500\\n300\\n220\\n420\\n') == '520'\nassert solution('500\\n300\\n220\\n420\\n') == '520'\nassert solution('500\\n300\\n220\\n420\\n') == '520'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"3 5 5 3 3\") == \"0\"\nassert solution(\"3 1 3 2 2\") == \"2\"\nassert solution(\"1 2 3 4 0\") == \"0\"\nassert solution(\"2 1 2 2 1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 4 4 0 2\n''') == '4'\nassert solution('''2\n1\n''') == '0'\nassert solution('''7\n5 0 5 0 5 0\n''') == '2'\nassert solution('''7\n5 4 3 0 2 1\n''') == '1'\nassert solution('''7\n5 4 3 0 2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:-1]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4' # This is not quite correct, as the answer can be 10^9+7.\nassert solution('5') == '0'\nassert solution('5') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 66
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 0') == '0'\nassert solution('1 2 3 4 0 2') == '4'\nassert solution('1 2 3 4 0 2 3') == '8'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 0 2\\n') == '4\\n'\nassert solution('2 5 4 0 2\\n') == '0\\n'\nassert solution('3 4 4 0 2\\n') == '0\\n'\nassert solution('3 5 4 0 2\\n') == '0\\n'\nassert solution('4 4 4 0 2\\n') == '0\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('4 3 1 0 2') == '0'\nassert solution('1 3 3 2 4') == '0'\nassert solution('1 2 3 4 5') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 2 5''') == '84'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('10 3 9') == '23'\nassert solution('12 4 15') == '16'\nassert solution('16 32 42') == '26'\nassert solution('15 17 22') == '29'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 2 5') == '84'\nprint(solution('20 2 5'))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '84'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 2 5''') == '84'\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 2 5') == '84'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('20 3 5') == '111'\nassert solution('20 3 1') == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 3 10\") == \"15\"\nassert solution(\"10 36 100\") == \"105\"\nassert solution(\"10 2 2\") == \"0\"\nassert solution(\"10 2 7\") == \"19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC200\") == \"ABC200\"\nassert solution(\"ABC200\") == \"ABC200\"\nassert solution(\"ABC200\") == \"ABC200\"\nassert solution(\"ABC200\") == \"ABC200\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC680\") == \"ABC680\"\nassert solution(\"ABC97\") == \"ABC976\"\nassert solution(\"ABC337\") == \"ABC337\"\nassert solution(\"ABC456\") == \"ABC456\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ABC100\"\nassert solution(input()) == \"ABC680\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100') == 'ABC100'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC23\") == \"ABC23\"\nassert solution(\"ABC4\") == \"ABC4\"\nassert solution(\"ABC58\") == \"ABC58\"\nassert solution(\"ABC80\") == \"ABC80\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC2\") == \"ABC20\"\nassert solution(\"ABC100\") == \"ABC100\"\nassert solution(\"ABC101\") == \"ABC102\"\nassert solution(\"ABC102\") == \"ABC103\"\nassert solution(\"ABC103\") == \"ABC104\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC680') == 'ABC100'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100') == 'ABC100'\nprint('Test passed')\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ABC'\nassert solution('ABC680') == 'ABC100'\nassert solution('ABC9') == 'ABC9'\nassert solution('ABC89') == 'ABC89'\nassert solution('ABC80') == 'ABC80'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == 'ABC1'\nassert solution('''\n2\n''') == 'ABC21'\nassert solution('''\n3\n''') == 'ABC321'\nassert solution('''\n4\n''') == 'ABC431'\nassert solution('''\n5\n''') == 'ABC5321'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 10') == '5'\nassert solution('2 2') == '5'\nassert solution('2 22') == '5'\nassert solution('10 1') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''2 2\n''') == '5'\nassert solution('''5 8\n''') == '2'\nassert solution('''1 1\n''') == '0'\nassert solution('''9 22\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 5') == '5'\nassert solution('5 1') == '5'\nassert solution('5 5') == '5'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5\\n2 5\\n3 5\\n4 5\\n5 5') == '5'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '5'\nassert solution('5 5') == '5'\nassert solution('10 10') == '5'\nassert solution('1 31') == '0'\nassert solution('5 12') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == 'Takahashi'\nassert solution('5 5') == 'Takahashi'\nassert solution('5 5') == 'Takahashi'\nassert solution('5 5') == 'Takahashi'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 5') == '5'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('10 10') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 5\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n1 10\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 31') == '10'\nassert solution('1 1') == '0'\nassert solution('7 21') == '28'\nassert solution('14 29') == '31'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''3 3\n''') == '2'\nassert solution('''7 3\n''') == '0'\nassert solution('''20 3\n''') == '15'\nassert solution('''10 6\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n3\\n3\") == \"-1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 46
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nN = int(input())\na = list(map(int,input().split()))\na_i = [i for i in range(1,N+1) if i not in a]\nprint(-1 if len(a_i) == 0 else len(a_i))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3\n3\n1\n2\n''') == '2'\nassert solution(\n'''3\n3\n1\n3\n''') == '-1'\nassert solution(\n'''4\n1\n2\n3\n4\n''') == '3'\nassert solution(\n'''4\n2\n1\n2\n3\n''') == '-1'\nassert solution(\n'''4\n1\n2\n2\n1\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('4\\n4\\n1\\n2\\n3\\n4\\n4') == '-1'\nassert solution('4\\n4\\n1\\n3\\n3\\n3\\n3') == '1'\nassert solution('5\\n5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10') == '2'\nassert solution('6\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == -1\nassert solution(\"3\\n1\\n2\") == 2\nassert solution(\"3\\n1\\n2\\n2\") == -1\nassert solution(\"3\\n3\\n1\\n2\") == -1\n",
        "num_ids_2": 16,
        "num_ids_4": 48
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3\n1\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n3\n2\n1\n\"\"\") == \"-1\"\nassert solution(\"\"\"5\n3\n1\n2\n3\n4\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n5\n3\n1\n2\n4\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n5\n4\n1\n2\n3\n\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n2\\n1\\n4\") == \"1\"\nassert solution(\"3\\n6\\n2\\n6\\n1\") == \"1\"\nassert solution(\"3\\n6\\n2\\n4\\n1\") == \"1\"\nassert solution(\"3\\n6\\n2\\n4\\n1\") == \"1\"\nassert solution(\"3\\n6\\n2\\n4\\n1\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('2') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n2\\n6') == '1\\n'\nassert solution('3\\n6\\n2\\n6') == '1\\n'\nassert solution('1\\n6\\n2\\n6') == '1\\n'\nassert solution('3\\n1\\n6\\n2\\n6') == '2\\n'\nassert solution('10\\n6\\n2\\n6') == '2\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 84
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n6\n2\n6\"\"\") == \"1\"\nassert solution(\n\"\"\"2\n2\n2\"\"\") == \"2\"\nassert solution(\n\"\"\"5\n2\n3\n2\n5\n3\"\"\") == \"1\"\nassert solution(\n\"\"\"10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\"\"\") == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2') == '1'\nassert solution('3\\n6\\n2\\n6\\n2') == '1'\nassert solution('4\\n6\\n2\\n6\\n2') == '2'\nassert solution('4\\n6\\n2\\n6\\n2') == '2'\nassert solution('5\\n6\\n2\\n6\\n2') == '3'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n6\\n2\\n6\"\n) == \"1\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('1\\n3\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n2\\n6') == '1'\nassert solution('6\\n6\\n6') == '0'\nassert solution('6\\n6\\n6') == '0'\nassert solution('6\\n2\\n6') == '1'\nassert solution('6\\n6\\n6') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n10\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n10\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n10\") == \"4\"\n",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"10 2\") == \"5\"\nassert solution(\"4 2\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == \"1\"\nassert solution('1 1') == \"1\"\nassert solution('2 2') == \"2\"\nassert solution('1 1 1 1 1') == \"1\"\nassert solution('5 2') == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == 1\nassert solution('2 2') == 1\nassert solution('2 1') == 2\nassert solution('5 4') == 2\nassert solution('2 4') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 2''') == '1'\n\nassert solution(\n'''5 3''') == '2'\n\nassert solution(\n'''10 5''') == '1'\n\nassert solution(\n'''10 5''') == '2'\n\nassert solution(\n'''20000 100000''') == '13'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('10 5\\n1 2 1 3 1 2 4 1 2 1 3 2 2 1 4 3 2') == '2'\nassert solution('100 8\\n1 2 1 1 2 1 1 2 1 2 1 2 2 1 1 2 1 2 2 1 2 1 2 2 2 1 2 1 1 2 1 2 1 2 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 2 1 1 1 2 1') == '2'\nassert solution('100 8\\n1 2 1 1 2 1 1 2 1 2 1 2 2 1 1 2 1 2 2 1 2 1 2 2 2 1 2 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 2 1 1 1 2 1') == '2'\nassert solution('1000 5\\n1 2 1 1 2 1 1 2 1 2 1 2 2 1 1 2 1 2 2 1 2 1 2 2 2 1 2 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 2 1 1 1 2 1') == '2'\n",
        "num_ids_2": 48,
        "num_ids_4": 187
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1'\nassert solution('3 3') == '2'\nassert solution('1 1') == '2'\nassert solution('1 2') == '3'\nassert solution('1 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\n\"\"\"\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()[1:]))\n\nmax_elem = max(a)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n6 1 1\\n6 1 1\") == \"No\"\nassert solution(\"4\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5\") == \"No\"\n",
        "num_ids_2": 37,
        "num_ids_4": 97
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1\\n') == 'Yes'\nassert solution('4\\n5 1 1\\n4 3 2\\n5 1 1\\n4 2 1\\n4 1 1\\n4 3 2\\n') == 'Yes'\nassert solution('2\\n1 1 1\\n1 1 1\\n') == 'No'\nassert solution('10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10",
        "num_ids_2": 64,
        "num_ids_4": 1640
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('4\\n3 1 2\\n6 1 1\\n2 1 2\\n2 1 3\\n2 1 1') == 'Yes'\nassert solution('4\\n5 1 5\\n3 1 2\\n6 1 1\\n2 1 2\\n2 1 3\\n2 1 1') == 'No'\nassert solution('2\\n1 0\\n1 0\\n1 0') == 'Yes'\nassert solution('6\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'Yes'\n",
        "num_ids_2": 55,
        "num_ids_4": 117
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == \"Yes\"\nassert solution('1\\n0 0\\n1 1') == \"Yes\"\nassert solution('1\\n0 0\\n1 1\\n4 4') == \"No\"\nassert solution('1\\n0 0\\n1 1\\n2 2') == \"No\"\nassert solution('1\\n0 0\\n1 1\\n1 1') == \"Yes\"\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n5 1 2\\n6 1 1') == 'No'\nassert solution('2\\n3 1 2\\n3 1 2\\n6 1 1') == 'No'\nassert solution('2\\n3 1 2\\n3 1 2\\n6 1 1') == 'No'\nassert solution('2\\n3 1 2\\n6 1 1\\n6 1 1') == 'Yes'\n",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1 1 1\n1 1 2\n''') == 'Yes'\nassert solution('''2\n2 1 1\n1 1 1\n2 2 1\n''') == 'Yes'\nassert solution('''3\n3 1 1\n3 2 1\n2 1 1\n''') == 'No'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2') == 'Yes'\nassert solution('2\\n1 2\\n6 1 1') == 'Yes'\nassert solution('3\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4') == 'No'\nassert solution('2\\n0 0\\n1 1\\n1 1') == 'Yes'\nassert solution('3\\n0 0\\n1 1\\n1 1') == 'No'\n",
        "num_ids_2": 35,
        "num_ids_4": 87
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''3\n5 3 2\n7 2 1''') == 'No'\nassert solution('''3\n7 3 1\n5 1 1''') == 'No'\nassert solution('''2\n3 1 2\n4 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n4 2 1''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 4') == '3'\nassert solution('5 2') == '6'\nassert solution('0 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1, 3) == 2\nassert solution(2, 3) == 3\nassert solution(1, 3) == 2\nassert solution(2, 3) == 3\nassert solution(4, 7) == 5\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"10 100\") == \"100\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 3''') == '2'\nassert solution('''1 1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 2''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('2 3') == '2'\nassert solution('4 3') == '4'\nassert solution('3 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"7 6\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 0') == '0'\nassert solution('0 0') == '0'\nassert solution('1 1') == '2'\nassert solution('2 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"10 8\") == \"10\"\nassert solution(\"5 4\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '4'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"6\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n1 2\") == \"2\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n2 3\\n3 4\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 106,
        "num_ids_4": 252
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 5\n4 1\n5 2\n5 1\n4 4\n''') == '2'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7\n7 7\n6 4\n''') == '2'\nassert solution('''5 3\n1 2\n2 3\n3 4\n4 5\n5 1\n4 4\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n2 3\n3 4\n4 5\n5 1\n4 4\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 7\n1 3\n1 5\n1 7\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n6 7''') == '1'\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 4\n2 3\n1 4''') == '2'\nassert solution('''7 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '1'\nassert solution('''8 4\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 7''') == '4'\nassert solution('''2 3''') == '1'\nassert solution('''1 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''7 7''') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 7''') == \"4\"\nassert solution('''7 7''') == \"4\"\nassert solution('''3 2''') == \"0\"\nassert solution('''3 2''') == \"0\"\nassert solution('''1 7''') == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 7''') == '4'\nassert solution('''7 7''') == '4'\nassert solution('''6 7''') == '0'\nassert solution('''10 5''') == '0'\nassert solution('''10 10''') == '10'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7') == '4'\nassert solution('7 7') == '4'\nassert solution('6 7') == '4'\nassert solution('5 7') == '4'\nassert solution('5 7') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"4\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"7 7\") == \"4\"\nassert solution(\"5 7\") == \"4\"\nassert solution(\"7 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 5\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 6\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n6 7\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n7 1\n7 2''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0,1,2) == 2\nassert solution(1,1,2) == 3\nassert solution(1,1,3) == 2\nassert solution(0,1,0) == 1\nassert solution(2,1,2) == 1\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\n\n-----\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 1') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3') == '2'\nassert solution('3 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A B C') == 'C'\nassert solution('5 7 5') == '7'\n\nassert solution('5 7 1') == '1'\nassert solution('5 7 9') == '9'\nassert solution('5 7 6') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 2 3') == '2'\nassert solution('2 5 4') == '5'\nassert solution('1 3 4') == '3'\nassert solution('5 7 5') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"-1 -2 -3\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"-1 -1 -1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 2 3') == '4'\nassert solution('0 1 0') == '2'\nassert solution('0 1 1') == '2'\nassert solution('-2 -2 -2') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('5 7 5') == '7'\nassert solution('1 1 1') == '1'\nassert solution('2 5 5') == '5'\nassert solution('3 4 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == 2\nassert solution(\"2 1 1\") == 1\nassert solution(\"3 3 3\") == 3\nassert solution(\"3 2 2\") == 2\nassert solution(\"7 7 7\") == 7\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 30 15 200') == '1 0'\nassert solution('1 2 10 30 15 30 200') == '1 0'\nassert solution('1 2 10 30 15 30 30 30 200') == '1 0'\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution
        "num_ids_2": 1460,
        "num_ids_4": 1460
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 3 10 4 10 5 10 10 50 50 50') == '130 30'\nassert solution('1 2 10 3 10 4 10 5 10 10 50 50 50 50') == '130 30'\nassert solution('1 2 10 3 10 4 10 5 10 10 50 50 50 50') == '130 30'\nassert solution('1 2 10 3 10 4 10 5 10 10 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50",
        "num_ids_2": 39,
        "num_ids_4": 87
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"2 4 3 10 3 10\") == \"6 6\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"1 2 10 20 15 200\"\n) == \"110 10\"\n\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hi') == 'hi'\nassert solution('hello') == 'hl'\nassert solution('i') == 'i'\nassert solution('bob') == 'bob'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('abcd') == 'abcd'\nassert solution('z') == 'z'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('aa') == 'a'\nassert solution('aaa') == 'a'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"apple\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"i\") == \"i\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('apple') == 'a'\nassert solution('donut') == 'd1'\nassert solution('u') == 'u'\nassert solution('a') == 'a'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pon\") == \"YES\"\nassert solution(\"pot\") == \"YES\"\nassert solution(\"pot\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"NO\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcd\") == \"YES\"\nassert solution(\"zzzz\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 68
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"top\") == \"YES\"\nassert solution(\"pot\") == \"NO\"\n\n'''\n\na = list(stdin.split(\"C\"))\n\na = [i.replace(\"C\", \"\") for i in a]\n\nprint(a)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'NO'\nassert solution('top') == 'NO'\nassert solution('pot') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nprint(\"All tests passed successfully.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('pot') == \"YES\"\nassert solution('top') == \"NO\"\nassert solution('pot') == \"YES\"\nassert solution('top') == \"NO\"\nassert solution('top') == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nprint(\"Test cases passed successfully.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('pot') == 'NO'\nassert solution('top') == 'NO'\nassert solution('pot') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'a'\nassert solution('abcabc') == 'abc'\nassert solution('abcabcabc') == 'abcabc'\nassert solution('abcabcabcabc') == 'abcabc'\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"b\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abcabc', 4) == 'abc'\nassert solution('abcabca', 4) == 'abc'\nassert solution('abcabc', 4) == 'abc'\nassert solution('abcabc', 5) == 'abc'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc', 2) == 'ab'\nassert solution('ababc', 4) == 'b'\nassert solution('ababc', 3) == 'abc'\nassert solution('ababcb', 5) == 'abc'\nassert solution('ababcb', 3) == 'abc'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abca\", 4) == \"b\"\nassert solution(\"abcd\", 4) == \"bc\"\nassert solution(\"abcde\", 4) == \"b\"\nassert solution(\"abcdefg\", 4) == \"b\"\nassert solution(\"abcdefg\", 3) == \"b\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc', 2) == 'b'\nassert solution('ab', 2) == 'ab'\nassert solution('ac', 2) == 'ac'\nassert solution('abc', 4) == 'ab'\nassert solution('abc', 5) == 'abc'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aba', 4) == 'b'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aba\", 4) == \"b\"\nassert solution(\"aabb\", 4) == \"b\"\nassert solution(\"abcdefg\", 5) == \"fg\"\nassert solution(\"abcdefgh\", 8) == \"gh\"\nassert solution(\"abcdefgh\", 1) == \"\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"b\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '9'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4 2''') == \"9\"\n'''\nW H N\n2 1 1\n3 3 4\n'''\nassert solution('''8 8 2''') == \"96\"\n'''\nW H N\n3 4 3\n2 1 1\n3 3 4\n'''\nassert solution('''6 6 2''') == \"72\"\n'''\nW H N\n2 5 2\n4 2 2\n2 1 1\n3 3 4\n'''\nassert solution('''3 3 3''') == \"1\"\n'''\nW H N\n1 2 1\n1 1 1\n1 1 1\n'''\nassert solution('''8 3 2''') == \"60\"\n'''\nW H N\n1 1 1\n2 1 1\n3 3 4\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\\n\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''5 4 2\n2 1 1\n3 3 4'''\n) == '9'\n\nassert solution(\n    '''5 5 2\n2 1 1\n4 4 2\n5 4 2\n2 2 1\n4 4 2\n5 4 2'''\n) == '4'\n\nassert solution(\n    '''3 5 2\n2 1 1\n4 4 2\n5 4 2'''\n) == '8'\n'''\nTime limit: 2 seconds\nMemory limit: 256 megabytes\nSource Limit: 100 megabytes\nAllowed deviation: 10 percent\nElements: Only the lower left corner of the rectangle is plotted.\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 1\\n2 3 4') == '9'\nassert solution('5\\n1 2 1\\n2 4 3\\n3 2 1\\n4 3 4\\n5 4 4\\n6 4 5\\n7 4 3\\n8 4 2\\n9 4 1') == '17'\nassert solution('4\\n2 1 2\\n3 2 1\\n2 2 1\\n1 2 3\\n3 1 2\\n3 3 4') == '14'\nassert solution('1\\n0 0 0\\n1 1 1') == '1'\nassert solution('4\\n4 4 4\\n4 4 4') == '16'\n",
        "num_ids_2": 75,
        "num_ids_4": 135
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\nassert solution(\"3 3 3\\n1 1 1\\n2 2 2\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n3 3 3\\n1 1 1\\n2 2 2\\n2 1 1\\n",
        "num_ids_2": 1458,
        "num_ids_4": 1458
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n1 1 1') == '4'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n4 4 4') == '16'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n4 4 1') == '9'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n4 4 3') == '4'\n",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n6 5 1''') == '12'\nassert solution('''3\n6 5 1\n1 10 1''') == '11'\nassert solution('''3\n3 1 1\n1 2 1''') == '0'\nassert solution('''3\n3 1 1\n1 2 1\n2 3 1''') == '1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n6 5 1') == '12\\n11\\n0'\nassert solution('6\\n1 10 1') == '12\\n11\\n0'\nassert solution('8\\n1 1 1') == '0\\n1\\n1'\nassert solution('9\\n1 1 1') == '0\\n1\\n1'\nassert solution('10\\n1 1 1') == '0\\n1\\n1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input1.txt\").read()) == \"12\\n11\\n0\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 1') == '12\\n11\\n0'\nassert solution('1 10 1') == '11\\n0\\n0'\nassert solution('3 7 2') == '12\\n11\\n0'\nassert solution('3 5 3') == '11\\n0\\n0'\nassert solution('3 4 2') == '10\\n0\\n0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 1') == '0'\nassert solution('3 3 1') == '2'\nassert solution('5 2 1') == '12'\nassert solution('6 2 1') == '11'\nassert solution('4 2 1') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 5 1') == '12'\nassert solution('1 10 1') == '11'\nassert solution('3 5 1') == '0'\nassert solution('3 10 1') == '0'\nassert solution('3 5 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n6 5 1\n1 10 1\n''') == '''\n12\n11\n0\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n6 5 1''') == '12\\n11\\n0'\n'''\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"..\\n\"\n\"..\\n\") == \"*.*\\n.*.*\"\nassert solution(\"..\\n\"\n\"..\\n\") == \".*.*\\n.*.*\"\nassert solution(\"..\\n\"\n\"..\\n\") == \".*.*\\n.*.*\"\nassert solution(\"..\\n\"\n\"..\\n\") == \".*.*\\n.*.*\"\nassert solution(\"..\\n\"\n\"..\\n\") == \".*.*\\n.*.*\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n.\\n.*\") == \"*\\n.*\"\n\nassert solution(\"2 4\\n.\\n.*\\n.*\") == \".*\\n.*\\n.*\\n.*\"\n\nassert solution(\"1 4\\n.\\n.*\\n.*\") == \"*\\n.*\\n.*\"\n\nassert solution(\"2 2\\n.\\n.\\n.*\") == \"*\\n.*\"\n\nassert solution(\"2 1\\n.\\n*\") == \"*\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Hi\", \"Hi\") == \"HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHi",
        "num_ids_2": 1767,
        "num_ids_4": 1767
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n*.\\n.*') == '*.\\n.*'\nassert solution('1 1\\n*.\\n.*') == '*.\\n.*'\nassert solution('1 10\\n*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\",
        "num_ids_2": 40,
        "num_ids_4": 1767
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 3\n..*\n.*.\"\"\"\n) == \"\"\"\n*.\n.*.\"\"\"\nassert solution(\n\"\"\"\n10 1\n.*\n\"\"\"\n) == \"\"\"\n.*\n*.\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0\\n0 0\\n0 0\\n') == ''\nassert solution('1 1\\n*\\n*\\n') == '*\\n*\\n'\nassert solution('2 1\\n.\\n*\\n') == '.*\\n.*\\n.*\\n.*\\n'\nassert solution('3 1\\n.\\n*\\n') == '.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 81
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\".*\") == \".*\"\nassert solution(\".*.\") == \".*.*\"\nassert solution(\"..*\") == \"*.*\"\nassert solution(\"..*.\") == \"*.*.*\"\nassert solution(\".**.\") == \"*.*.*.*\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"..\") == \"...\"\nassert solution(\"..\") == \"..\"\nassert solution(\"...\") == \"...\"\nassert solution(\"....\") == \"....\"\nassert solution(\"......\") == \"......\"\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"..\") == \"...\"\nassert solution(\"...*.\") == \"... *.\"\nassert solution(\".......\") == \".......\"\nassert solution(\".....*\") == \"......\"\nassert solution(\"*..*..*\") == \"*..*..*\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''1\n1''') == 'YES'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == 'YES'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1\\n') == 'NO'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n2\\n') == 'NO'\nassert solution('1\\n1\\n2\\n2\\n') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 53
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 6 1 4 5') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n1') == 'NO'\nassert solution('4\\n4 1 2 3') == 'NO'\nassert solution('2\\n1') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 3 1') == 'YES'\nassert solution('5\\n2 3 1 4 5') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('5\\n1 1 1 1 1') == 'NO'\nassert solution('2\\n1 1') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 6 1 4 5''') == \"YES\"\nassert solution('''5\n1 1 2 2 3''') == \"NO\"\nassert solution('''5\n1 1 2 2 3''') == \"NO\"\nassert solution('''5\n2 2 2 2 2''') == \"NO\"\nassert solution('''5\n2 1 2 2 3''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2 1\") == \"NO\"\nassert solution(\"3\\n1 2 1\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"5\\n1 2 1 4 5\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n\") == \"YES\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n\") == \"NO\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n\") == \"NO\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n",
        "num_ids_2": 1218,
        "num_ids_4": 1861
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 6 1 4 5\n''') == 'YES'\n\nassert solution('''\n6\n3 4 5 6 7\n''') == 'NO'\n\nassert solution('''\n5\n2 4 3 5 7\n''') == 'NO'\n\nassert solution('''\n5\n1 2 1 4 5\n''') == 'NO'\n\nassert solution('''\n5\n1 3 1 5 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\nassert solution('''3\n7 5 2''') == 'NO'\nassert solution('''8\n7 5 2\n3 8 6 4 5\n2 7 3 1 8''') == 'YES'\nassert solution('''8\n7 5 2\n3 8 6 4 5\n2 7 3 1 8''') == 'NO'\nassert solution('''8\n7 5 2\n3 8 6 4 5\n2 7 3 1 8''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''8''') == '3'\nassert solution('''1 2 3 4 5''') == '2'\nassert solution('''8''') == '3'\nassert solution('''1 2 3 4 5''') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n8\\n6\\n6\\n6\\n8\\n8\\n') == '2'\nassert solution('2\\n2\\n4\\n5\\n6\\n8\\n8\\n') == '3'\nassert solution('1\\n1\\n2\\n2\\n4\\n5\\n7\\n8\\n') == '4'\nassert solution('1\\n1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 60,
        "num_ids_4": 135
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution(\n    '''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution(\n    '''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution(\n    '''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '6'\n\nassert solution(\n    '''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '3'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '4'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '5'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '6'",
        "num_ids_2": 134,
        "num_ids_4": 268
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '5'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n2\\n3\\n4'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '3'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 80
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '6'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '7'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5') == '2'\nassert solution('2\\n5') == '3'\nassert solution('1\\n10') == '2'\nassert solution('1\\n20') == '3'\nassert solution('1\\n30') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 3') == '1'\nassert solution('3 5') == '2'\nassert solution('22 7') == '5'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"a\\na\\na\\na\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\nassert solution(\"3\\n3\\n3\\n3\") == \"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 48
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == \"2\"\nassert solution('1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == \"3\"\nassert solution('1\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == \"5\"\nassert solution('1\\n4\\n5\\n5\\n5\\n5\\n5\\n5') == \"5\"\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == \"10\"\n",
        "num_ids_2": 65,
        "num_ids_4": 127
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n2\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"3\\n1 2\\n4 2\\n2 1\") == \"1\\n4\\n2\"\nassert solution(\"2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 2\\n2 1\") == \"1\"\n",
        "num_ids_2": 63,
        "num_ids_4": 102
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2''') == '1'\nassert solution('''1 2 3''') == '-1'\nassert solution('''0 1''') == '0'\nassert solution('''2 3 4''') == '2'\nassert solution('''1 2''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12345') == '1'\nassert solution('1234') == '2'\nassert solution('123') == '3'\nassert solution('12') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3') == '1'\nassert solution('2 3\\n4 5') == '2'\nassert solution('1 1\\n1 1') == '1'\nassert solution('4 4\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('3 3\\n1 1\\n1 1\\n1 1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abca') == [4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nassert solution('codeforces') == [9, 4, 5, 3, 0, 0, 9, 0, 3, 1, 0, 0, 0, 0]\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == '0'\nassert solution('qwertyuioplkjhgfdsazxcvbnm') == '1'\nassert solution('abca') == '4'\nassert solution('codeforces') == '9'\n\n\n\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 56
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''1 1\n1 1\n1 1''') == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution('''6 3\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '3 6 6 5 4 3 2 1 9 7 8 6 4 4 1 3 6 1 7 5 1'\n\n\n\n\"\"\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('''abca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('''abca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('''abca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('''abca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    stdin='abca\\n1 3\\n10 5\\ncodeforces'\n) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution(\n    stdin='codeforces\\n2 8 3 2 9\\n26 10'\n) == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution(\n    stdin='codeforces\\n2 8 3 2 9\\n26 10'\n) == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution(\n    stdin='codeforces\\n2 8 3 2 9\\n26 10'\n) == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution(\n    stdin='codeforces\\n2 8 3 2 9\\n26 10'\n) == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''4 2''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''4 2''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''10 10 1 2''') == '''26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26 0 26",
        "num_ids_2": 80,
        "num_ids_4": 852
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('codeforces') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n",
        "num_ids_2": 73,
        "num_ids_4": 151
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'''\n\nassert solution('''8 1\nbaaabaa\n
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '3'\nassert solution('abcde') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\n\nassert solution(\"3 3 4\") == \"0\"\n\nassert solution(\"10 20 30\") == \"3\"\n\nassert solution(\"5 5 5\") == \"0\"\n\nassert solution(\"2 4 3\") == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n5\n10 1 2\n4 1 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2\n3 4 4\n2 3 3\n1 1 5\n6 2 1\n5 2 2\n5 3 2",
        "num_ids_2": 18,
        "num_ids_4": 25
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('1\\n2\\n2') == '1'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1') == '3'\nassert solution('2\\n1\\n1\\n1') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''10 1000000000 1000000000\n2 3 4\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36\\n0\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''1000000000 1000000000\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''1 999999999 999999999\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 10\\n0 0 10\\n0 0 10') == '0\\n0'\nassert solution('0 0 10\\n0 0 10\\n0 0 10') == '0\\n0'\nassert solution('1000000000 1000000000\\n1000000000 1000000000\\n1000000000 999999999\\n1 1000000000 999999999\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '1999999994\\n1999999994\\n2\\n4'\nassert solution('1000000000 1000000000\\n1000000000 1000000000\\n1000000000 999999999\\n1 1000000000 999999999\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '1999999994\\n1999999994\\n2\\n4'\nassert solution('2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2') == '0\\n0\\n0\\n0'\n",
        "num_ids_2": 50,
        "num_ids_4": 186
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('3 2 4') == '0'\nassert solution('10 20 30') == '36'\nassert solution('5 5 5') == '0'\nassert solution('2 4 3') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == 'YES'\nassert solution('2\\n8') == 'NO'\nassert solution('1\\n1') == 'YES'\nassert solution('2\\n1 1') == 'YES'\nassert solution('2\\n1 2') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4\n1 2 3 4\n5\n2 1 4 4 3 3\n5\n2 1 4 4 3 3\n''') == 'YES'\nassert solution('''4\n4\n5 7 9 1\n5\n2 1 4 4 3 3\n6\n2 1 4 4 3 3\n''') == 'NO'\nassert solution('''4\n4\n1 1 1 1\n4\n1 2 5 6\n2\n1 1 1 1\n4\n1 2 5 6\n2\n1 1 1 1\n''') == 'NO'\nassert solution('''4\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 2 5 6\n2\n1 1 1 1\n''') == 'YES'\nassert solution('''4\n4\n1 2 3 4\n4\n1 1 1 1\n4\n1 2 5 6\n2\n1 1 1 1\n5\n1 1 1 1 1\n4\n1 2 5 6\n2\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_similar.txt') == 'YES'\nassert solution('inputs/test_not_similar.txt') == 'NO'\nassert solution('inputs/test_even.txt') == 'YES'\nassert solution('inputs/test_odd.txt') == 'YES'\nassert solution('inputs/test_1.txt') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == 'YES'\nassert solution('2') == 'NO'\nassert solution('2') == 'YES'\nassert solution('11') == 'YES'\nassert solution('11') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n3\n4 1 2\n2\n3 4 1''') == 'NO'\n\nassert solution('''4\n2\n1 2\n2\n1 1 1''') == 'NO'\n\nassert solution('''4\n1\n1 1 1 1\n1 1\n1 1 1''') == 'NO'\n\nassert solution('''4\n2\n2 2\n2\n2 1 1''') == 'YES'\n\nassert solution('''4\n2\n2 2\n2\n2 1 1''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n4') == 'NO'\nassert solution('2\\n1\\n3') == 'NO'\nassert solution('2\\n1\\n2') == 'YES'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES\\n'\n\nassert solution('''7\n4\n4\n1 2 3 4\n4\n1 2 3 4\n2\n1 2 3 4\n1 2 3 4\n2\n1 2 3 4\n1 2 3 4\n''') == 'NO\\n'\n\nassert solution('''7\n4\n1 1 1 1\n4\n1 2 3 4\n2\n1 2 3 4\n1 2 3 4\n2\n1 2 3 4\n1 2 3 4\n''') == 'NO\\n'\n\nassert solution('''7\n6\n1 1 1 1 1 1\n4\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3 4 5 6\n2\n1 2 3 4 5 6\n1 2 3",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'YES'\nassert solution('4\\n1') == 'NO'\nassert solution('5\\n1') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''5\n5\n1 1 2 3 4\n4\n1 2 3 4\n1 2 3\n1 2\n4\n1 2\n1 2\n1 2\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''4\n4\n1 1 2 3\n2\n1 2 3\n1 1\n1 1\n2\n1 2\n2\n1 2\n1 2\n4\n1 1 2 3\n''') == 'NO'\nassert solution('''6\n6\n1 1 2 3 4 5\n6\n1 1 2 3 4\n6\n1 1 2 3\n6\n1 1 2\n6\n1 1\n6\n1 1\n6\n4\n1 1 2 3 4\n''') == 'YES'\nassert solution('''7\n7\n1 1 2 3 4 5 6\n7\n1 1 2 3 4 5\n7\n1 1 2 3 4\n7\n1 1 2 3\n7\n1 1 2\n7\n1 1\n7\n1 1\n7\n4\n1 1 2 3 4 5 6\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\nassert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3') == '22'\nassert solution('6 5 3\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3') == '13'\nassert solution('4 4 1\\n4 5 2\\n4 6 3\\n1 3 4\\n1 4 3\\n2 4 5\\n1 5\\n1 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 109
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\"\n) == \"22\"\n\nassert solution(\n\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\"\n) == \"13\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0\\n2\\n1\\n2\\n0') == '22'\nassert solution('1\\n2\\n0\\n2\\n1\\n2\\n0') == '13'\nassert solution('1\\n0\\n2\\n1\\n2\\n0') == '22'\nassert solution('1\\n0\\n2\\n1\\n2\\n0') == '13'\nassert solution('1\\n0\\n2\\n1\\n2\\n0') == '22'\n",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\nassert solution(\"3 4 7\") == \"13\"\nassert solution(\"5 5 4\") == \"13\"\nassert solution(\"4 3 4\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\nassert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3') == '13'\nassert solution('7 7 7\\n1 2 7\\n2 3 7\\n2 4 7\\n3 4 7\\n4 5 7\\n5 6 7\\n6 7 7') == '31'\nassert solution('7 7 7\\n1 2 7\\n2 3 7\\n2 4 7\\n3 4 7\\n4 5 7\\n5 6 7\\n6 7 7') == '31'\n",
        "num_ids_2": 24,
        "num_ids_4": 111
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"6 5 2\"\n\"1 2 5\"\n\"2 3 7\"\n\"2 4 4\"\n\"4 5 2\"\n\"4 6 8\"\n\"1 6\"\n\"5 3\"\n) == \"22\"\nassert solution(\n\"5 5 4\"\n\"1 2 5\"\n\"2 3 4\"\n\"1 4 3\"\n\"4 3 7\"\n\"3 5 2\"\n\"1 5\"\n\"1 3\"\n\"3 3\"\n\"1 5\"\n) == \"13\"\nassert solution(\n\"3 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4 3 2\"\n\"2 3 1\"\n\"1 2 1\"\n\"2 1 4\"\n\"3 4 2\"\n\"2 3 1\"\n\"1 4 3\"\n\"4 3 2\"\n\"3 2 1\"\n\"2 1 4\"\n\"1 4 3\"\n\"4",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''\n6 6 1\n1 2 10\n2 3 10\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '18'\nassert solution('''\n8 6 1\n1 2 1\n2 3 2\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '19'\n'''\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n6\\n5\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n1 3\\n3 3\\n1 5\\n') == '22'\nassert solution('5\\n5 4\\n1 2 5\\n2 3 4\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('5\\n5 4\\n1 2 5\\n2 3 4\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('5\\n5 4\\n1 2 5\\n2 3 4\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('5\\n5 4\\n1 2 5\\n2 3 4\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n",
        "num_ids_2": 115,
        "num_ids_4": 219
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 3\nassert solution(\"3\") == 5\nassert solution(\"4\") == 7\nassert solution(\"5\") == 11\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '6561'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1 1 1 1 1 1 1 1'\nassert solution('''\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n''') == '3 3 3 3 3 3 3 3'\nassert solution('''\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcd1\") == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3') == '3'\nassert solution('3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3') == '3'\nassert solution('4\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3') == '1'\n",
        "num_ids_2": 77,
        "num_ids_4": 178
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n2\n4\n3\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('7\\n1') == '1'\nassert solution('13\\n1') == '1'\nassert solution('3620\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n7\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n'''\n2\n6\n13\n14\n3620\n10000\n7\n1\n2\n6\n13\n14\n3620\n10000\n1\n2\n6\n13\n14\n3620\n10000\n'''\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n7\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n7\n1\n2\n6\n13\n14\n3620\n10000\n9\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n7\n1\n2\n6\n13\n14\n3620\n10000\n9\n1\n2\n6\n13\n14\n3620\n10000\n19\n1\n2\n6\n13\n14\n3620\n10000\n20\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n'''\n\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0438\u0437 \u0441\u0447\u0435\u0442\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u0430. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0444\u043e\u0440\u043c\u0438\u0442\u044c \u0432 \u0432\u0438\u0434\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 solve(input_string) \u0438 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442\u044b \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u0432\u0430\u0448\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0430\u044f \u0438\u0437 \u0441\u043b\u043e\u0432, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0442\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 (\u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0442\u0440\u0435\u0442\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b). \u0412\u0430\u0448\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0441\u043b\u043e\u0432 \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0442\u043e \u0435\u0441\u0442\u044c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u0442\u043e\u0440\u044b\u0435 \u0434\u0432\u0430. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0437\u0431\u0438\u0442\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043e\u0434\u043d\u0443 \u0438 \u0442\u0443 \u0436\u0435 \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 (\u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432). \u0415\u0441\u043b\u0438 \u0441\u043b\u043e\u0432\u043e \u043a\u043e\u043d\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0435, \u0442\u043e \u043e\u043d\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u0431\u0438\u0442\u043e \u0438 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043e. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u0435\u0441\u044c \u043e\u0442 \u0441\u0442\u0440\u043e\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u043b\u0430 \u0441\u043e\u0431\u043e\u0439 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u043b\u0438\u043d\u0438\u044e, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0430\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0447\u0435\u0442\u043d\u044b\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u0442\u0430\u043c.\n\n\u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430, \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0443:\n\nabc def ghi jkl mno pqrs tuv wxyz\n\u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432:\n\n['abc', 'def', 'ghi', 'jkl','mno', 'pqrs', 'tuv', 'wxyz']\n\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u0441\u0442\u0440\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043b\u043e\u0432. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0438\u0437 \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u0438\u0432\u0435\u0434\u0451\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435:\n\n['abc', 'def', 'ghi', 'jkl','mno', 'pqrs', 'tuv', 'wxyz']\n['abc', 'def', 'ghi', 'jkl','mno', '",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n2 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n2\n5\n1 2 3 4 5\n4\n1 2 3 4\n4\n1 2 3 4\n5\n1 2 3 4 5\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n3\n5\n1 2 3 4 5\n5\n1 2 3 4 5\n4\n1 2 3 4\n5\n1 2 3 4 5\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n4\n5\n1 2 3 4 5\n4\n1 2 3 4\n4\n1 2 3 4\n5\n1 2 3 4 5\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n7\n8\n1 2 3 4 5 6 7\n4\n1 2 3 4\n6\n1 2 3 4\n5\n1 2 3 4\n5\n1 2 3 4\n6\n''') == '''\n1 1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''6\n10\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''6\n10\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''10\n10\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''10\n10\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\n    6\n    5\n    1 2 3 4 5\n    3\n    2 3 1\n    6\n    4 6 2 1 5 3\n    1\n    1\n    4\n    3 4 1 2\n    5\n    5 1 2 4 3\n    \"\"\") == \"\"\"\n    1 1 1 1 1 \n    3 3 3 \n    2 3 3 2 1 3 \n    1 \n    2 2 2 2 \n    4 4 4 1 4\n    \"\"\"\n\"\"\"\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"\"\"\n... 6\n... 5\n... 1 2 3 4 5\n... 3\n... 2 3 1\n... 6\n... 4 6 2 1 5 3\n... 1\n... 1\n... 4\n... 3 4 1 2\n... 5\n... 5 1 2 4 3\n... \"\"\")\n'1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4 \\n'\n>>> solution(\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_easy.txt\").read()) == open(\"test_easy_solution.txt\").read()\nassert solution(open(\"test_hard.txt\").read()) == open(\"test_hard_solution.txt\").read()\nprint(solution(open(\"input.txt\").read()))\n\"\"\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''\n6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n5 4 3 2 1\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''\n5\n5\n1 2 3 4 5\n3\n1 2 3\n5\n1 2 3 4\n5\n1 2 3 4 5\n1\n1\n2\n3\n4\n5\n''') == '1 1 1 1 1\\n2 2 2 2\\n1\\n2 2 2\\n3 3 3\\n4 4 4 4'\n\nprint(solution('''\n1\n1\n1\n1\n1\n1\n1\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nprint(solution('1\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2'))\nprint(solution('1\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2'))\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''4\n2\n1 2 1\n2\n1 1 2 1\n''') == '''1 1 1 1 \n1 1 1 1 1 1 \n1 1 1 1 1 1 \n1 1 1 1 1 1'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('''2\n10\n3 4 5 6 7 8 9 10\n5\n1 2 3 4 5\n7\n1 2 3 4 5 6\n''') == '1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n3\n2 3\n0 3 1 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n4\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n5\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n4\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n''') == '1 1 1 1 1 1 1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3'\n\nassert solution('''1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n3\n2 3\n0 3 1 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n4\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n5\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n4\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\nassert solution('''3 5\n0 3 1\n0 2 4\n''') == '7'\nassert solution('''3 5\n0 3 1\n0 2 4\n0 1 2\n''') == '7'\nassert solution('''4 3\n-1 1 -1\n-1 0 1\n-1 1 1\n-1 2 1\n-1 3 1\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 6\n1 5''') == '8'\nassert solution('''3 5\n0 3 1''') == '7'\nassert solution('''2 5\n0 3 1''') == '7'\nassert solution('''2 3\n0 1 2\n4 3 5''') == '8'\nassert solution('''3 3\n-1 -2 -3\n2 1 0''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5') == '8'\nassert solution('1\\n5\\n1\\n2\\n0\\n3\\n4\\n5') == '7'\nassert solution('1\\n5\\n1\\n3\\n2') == '7'\nassert solution('2\\n5\\n1\\n2') == '7'\nassert solution('2\\n5\\n1\\n2\\n3') == '7'\n",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"7\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5\\n1 5') == '8'\nassert solution('2 6\\n1 5') == '8'\nassert solution('3 5\\n0 3 1') == '7'\nassert solution('3 5\\n0 3 1\\n0 3 1') == '7'\nassert solution('3 5\\n0 3 1\\n0 3 1\\n0 3 1') == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\n\nassert solution('''10 5\n3 4 3 2 1 0 1 1 2\n''') == '16'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9\n''') == '8'\n\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '2'\nassert solution('1\\n1') == '0'\nassert solution('1\\n10') == '1'\nassert solution('3\\n10\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('2\\n3') == '2'\nassert solution('2\\n3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\\n-2 4 -1 2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7'\nassert solution('0 3 1') == '5 -2 4 -1 2'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'RUUURRRRUU'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'RRRRUUU'\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(input() for _ in range(int(input())))) == 'YES'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[-1]\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''3\n3\n1 0\n2 0\n3 0\n4 0''') == 'NO'\nassert solution('''3\n3\n1 0\n2 0\n3 0\n4 0\n5 0''') == 'YES'\nassert solution('''3\n3\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0''') == 'NO'\nassert solution('''2\n2\n1 0\n0 1''') == 'YES'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\\n1 2\\n1 2\") == \"NO\"\nassert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"NO\"\nassert solution(\"3\\n1 2\\n3 3\\n5 5\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 57
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"a1\").read()) == open(\"a2\").read()\n\nNote that the number of packages is 5 and the robot stays at the point (0, 0) after one move, then moves to the point (1, 0) and then to the point (1, 0) again. The solution cannot be \"YES\" since the robot will be at the point (0, 0) after all the moves.\n\nFor the second test case in the example the optimal path RRRUUU is shown below:  [Image]\n\n\"\"\"\n\nn = int(input())\npackages = [None] * n\nfor i in range(n):\n    packages[i] = tuple(map(int, input().split()))\n\nx, y = 0, 0\npackets = [(x, y)]\nfor i in range(n):\n    x, y = packages[i]\n    if x < x0:\n        x0 = x\n    if y < y0:\n        y0 = y",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3''') == 'YES'\n\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3''') == 'YES'\n\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n2\n4 3''') == 'YES'\n\nassert solution('''3\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n2 2''') == 'NO'\n\nassert solution('''3\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n2 2''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"inputs/2/2\") == \"YES\"\nassert solution(\"inputs/2/3\") == \"NO\"\nassert solution(\"inputs/2/4\") == \"YES\"\nassert solution(\"inputs/2/5\") == \"NO\"\nassert solution(\"inputs/2/6\") == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 2') == '3'\nassert solution('1 3') == '2'\nassert solution('10 10') == '0'\nassert solution('10 100') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''2 3\n2 3\n6 12\n50 6''') == '0'\nassert solution('''3 3\n2 1\n2 1\n2 1''') == '1'\nassert solution('''6 4\n7 8\n7 8\n5 3\n13 12\n1000000000''') == '3'\nassert solution('''100000 300\n10000000 0\n10000000''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('1') == '1'\nassert solution('1a') == '1a'\nassert solution('1a1') == '1a2'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 37
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('1\\n1') == ''\nassert solution('1\\n2') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n3') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 1\nassert solution('1') == 0\nassert solution('2 1') == 1\nassert solution('100 100') == 0\nassert solution('100000000100000000') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''5 1''') == '8'\nassert solution('''100000000000000001 1''') == '899999999999999999'\nassert solution('''5 2''') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('1\\n0') == '0'\nassert solution('4\\n1 1 1 1') == '3'\nassert solution('1\\n0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9\\n1 1 1 1 1 1 1 1 1 1 1') == '7'\nassert solution('5\\n1 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '2'\nassert solution('5\\n1 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 1 1') == '4'\nassert solution('5\\n1 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 1 1') == '4'\nassert solution('5\\n1 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 1 1') == '4'\n",
        "num_ids_2": 59,
        "num_ids_4": 131
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n\nassert solution('''1\n1\n0\n''') == '0'\n\nassert solution('''1\n3\n0\n''') == '1'\n\nassert solution('''1\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''1\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''6\n2\n0 0 1 0 1 0 1\n3\n1 0 0\n6\n1 1 0 0 1\n5\n1 0 0 0 0 1\n6\n1 0 0 0 0 0 1\n5\n1 1 0 1 1 1\n''') == '4\\n0\\n2\\n4\\n1'\nassert solution('''7\n1\n0 0 1 0 1 0 1\n3\n1 0 0\n7\n1 1 0 0 1\n5\n1 0 0 0 0 1\n6\n1 0 0 0 0 0 1\n5\n1 1 0 1 1 1\n''') == '1\\n0\\n2\\n4\\n1'\nassert solution('''7\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n7\n1 1 0 0 1\n5\n1 0 0 0 0 1\n6\n1 0 0 0 0 0 1\n5\n1 1 0 1 1 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''7\n6\n0 0 1 0 1 0 1\n3\n1 0 0\n7\n1 1 0 0 1\n5\n1 0 0 0 0 1\n6\n1 0 0 0 0 0 1\n5\n1 1 0 1 1 1\n''') == '2\\n0\\n2\\n4\\n1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0\n0\n1\n0\n1''') == '2'\nassert solution('''3\n1\n0\n1\n0\n1''') == '2'\nassert solution('''7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n5\n0 0 1 0 1 0 1''') == '2'\nassert solution('''1\n1\n0''') == '0'\nassert solution('''2\n5\n1 0 0\n5\n1 1 0 0 1''') == '2'\nassert solution('''3\n5\n1 0 0\n5\n1 1 0 0 1\n5''') == '4'\nassert solution('''4\n5\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '2\\n0\\n2\\n4\\n1\\n'\nassert solution('4\\n5\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '2\\n0\\n2\\n4\\n1\\n'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '2\\n0\\n2\\n4\\n1\\n'\n",
        "num_ids_2": 142,
        "num_ids_4": 219
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0'\nassert solution('0 0 1 0 1 0 1') == '2'\nassert solution('3') == '0'\nassert solution('1 0 0') == '2'\nassert solution('5') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7\n9 10\n7 7\n6 4\n4 4\n3 2\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1''') == 'cbcacab'\nassert solution('''14\n17 18\n14 14\n13 13\n10 10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n''') == 'cbcacab'\nassert solution('''1\n2 2\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''3\n4 4\n6 2''') == 'cbcacab'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"cbcacab\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == 'bcbacab'\nassert solution('5 4') == 'abcd'\nassert solution('6 2') == 'baabab'\nassert solution('7 3') == 'cbcacab'\nassert solution('1 3') == 'a'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aab') == 'ab'\nassert solution('aabb') == 'ab'\nassert solution('aabc') == 'ab'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a\\nb\\nc\\nd\\na\\na\\na\\na') == 'a'\nassert solution('ab\\na\\na\\na\\na') == 'a'\nassert solution('abc\\na\\na\\na\\na') == 'a'\nassert solution('abc\\na\\na\\na\\na') == 'a'\nassert solution('abc\\na\\na\\na\\na') == 'a'\n",
        "num_ids_2": 42,
        "num_ids_4": 78
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcabcab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacabc'\nassert solution('''7 3\n5 4\n6 2''') == 'bcaacab'\nassert solution('''7 3\n5 4\n6 2''') == 'bcaaabab'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == 'a'\nassert solution('1 1\\n1 2\\n') == 'c'\nassert solution('1 1\\n1 2\\n1 3\\n') == 'a'\nassert solution('1 1\\n1 1\\n1 1\\n') == 'a'\nassert solution('1 1\\n1 2\\n') == 'c'\n",
        "num_ids_2": 30,
        "num_ids_4": 72
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22\\n1 1000 0\\n2 1 2\\n6 43 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''7\n11\n2 1 4 1 5 9 2 6 5 3 5\n1\n3\n2 1 4 1 5 9 2 6 5 3 5\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22\\n1 3 2\\n2 1 2\\n6 43 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''7\n11\n4 1 4 1 5 9 2 6 5 3 5\n1\n10\n4 1 4 1 5 9 2 6 5 3 5\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22\\n1 2 3\\n2 1 2\\n6 43 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''7\n11\n5 1 4 1 5 9 2 6 5 3 5\n1\n10\n5 1 4 1 5 9 2 6 5 3 5\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22\\n1 2 3\\n2 1 2\\n6 43 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''\n5\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1\n7\n1 1 1 1 1 1\n''') == '6 43 41\\n1 1000 0\\n2 1 2\\n6 43 41\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''\n4\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1\n7\n1 1 1 1 1 1\n''') == '6 43 41\\n1 1000 0\\n2 1 2\\n6 43 41\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 43 41\\n1 1000 0\\n2 1 2\\n6 43 41\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''\n6\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 43 41\\n1 1000 0\\n2 1 2\\n6 43 41\\n2 2 1\\n3 4 2\\n4 4 3\\n'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    7\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1 1 1 1\n    7\n    1 1 1 1 1 1 1\n    \"\"\") == \"\"\"\n    6 23 21\n    1 1000 0\n    2 1 2\n    6 45 46\n    2 2 1\n    3 4 2\n    4 4 3\n    \"\"\"\n\nassert solution(\"\"\"\n    1\n    1\n    1\n    \"\"\") == \"\"\"\n    0 0\n    \"\"\"\n\nassert solution(\"\"\"\n    5\n    5\n    5\n    5\n    5\n    \"\"\") == \"\"\"\n    0 0\n    \"\"\"\n\nassert solution(\"\"\"\n    1\n    1\n    1\n    \"\"\") == \"\"\"\n    0 0\n    \"\"\"\n\nassert solution(\"\"\"\n    8\n    8\n    8\n    8\n    8\n    8\n    8\n    8\n    8\n    \"\"\") == \"\"\"\n    0 0\n    \"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 1 1') == '6 22 22'\nassert solution('2 1') == '2 1 2'\nassert solution('6 1 1 1 1 1 1') == '6 45 46'\nassert solution('7 1 1 1 1 1 1 1') == '6 45 46'\nassert solution('8 1 1 1 1 1 1 1') == '6 45 46'\n",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\n''') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nprint(solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''))\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''6\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\n3\n4\n1 1 1\n1 2 3 4\n2\n1 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\n4\n2\n1 1\n1 1\n1 1\n1 1\n\n4\n2\n1 1\n1 1\n1 1\n1 1\n\n7\n3\n1 1 1\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\n\nprint(solution('''3\n5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\n3\n3\n1 2 3\n1 2 3\n1 2 3\n\n5\n1 2 3 4 5\n2 1 2 3 4\n1 2 3 4 5\n3 1 2 4 5\n1 2 3 4 5\n3 1 2 4 5\n\n3\n3\n3 1 2\n3 1 2\n3 1 2\n\n3\n3\n3 1 2\n3 1 2\n3 1 2\n\n3\n3\n3 1 2\n3 1 2\n3 1 2\n\n3\n3\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n\n4\n4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n4 1 2 3 4\n\n5\n5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n5 1 2 3 4 5\n\n4\n4\n4 1 2 3\n4 1 2 3\n4 1 2 3\n4 1 2 3\n\n4\n4\n4 1 2 3\n4 1 2 3\n4 1 2 3\n4 1 2 3\n\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"1 2\") == \"1 2 1\"\nassert solution(\"1 1 1\") == \"1 1 1 1\"\nassert solution(\"1 1 2\") == \"1 2 1 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 46
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1231,
        "num_ids_4": 1231
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1') == '0'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '40'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '32'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '31'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '31'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '31'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '32'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n2\\n') == '4'\nassert solution('2\\n1\\n2\\n3\\n') == '8'\nassert solution('2\\n1\\n2\\n3\\n4\\n') == '12'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '22'\n",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'\nassert solution('10\\n9 10 10 10 9\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10') == '16\\n57\\n128\\n78\\n41\\n21\\n6'\nassert solution('10\\n9 10 10 10 9\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10\\n10 9 10 10 10') == '16\\n57\\n128\\n78\\n41\\n21\\n6'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 10\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'\n",
        "num_ids_2": 228,
        "num_ids_4": 452
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nt = int(stdin.readline().strip())\nwhile t > 0:\n    n, k = map(int, stdin.readline().strip().split())\n    a = list(map(int, stdin.readline().strip().split()))\n    b = list(map(int, stdin.readline().strip().split()))\n    print(max([max(a[i:]) + max(b[:i]) for i in range(n)]))\n    t -= 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '27'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '39'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '11'\n",
        "num_ids_2": 89,
        "num_ids_4": 237
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer_str\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''5\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''2\n1 2\n2 4\n4 5\n3 2\n3 3\n3 3\n''') == '2\\n2'\nassert solution('''4\n1 2 3 4\n5 4 3 2\n1 5 4 3\n2 2 5 3\n4 4 2 1\n''') == '5\\n5'\nassert solution('''8\n1 2 3 4 5 6 7 8\n9 8 7 6 5 4 3 2\n1 9 8 7 6 5 4 3\n2 1 9 8 7 6 5 4\n3 2 1 9 8 7 6 5\n4 3 2 1 9 8 7 6\n5 4 3 2 1 9 8 7\n6 5 4 3 2 1 9 8 7\n7 6 5 4 3 2 1 9 8 7\n8 7 6 5 4 3 2 1 9 8 7\n''') == '42'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution(\n'''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''10 1\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''10 1\n3 2 3 1 3 3 1 4 1\n2 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''3 1\n1 2 3\n1 2 3''') == '0 2 4'\nassert solution('''4 1\n2 2 3 3\n1 2 3 3\n''') == '0 2 4'\nassert solution('''10 1\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0 2 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n1 2 3 4 4 1 2 1 3\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n1 2 3 4 4 1 2 1 3\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 1\") == \"0 2 4 7 8 11 13 14 16 17\"\n\n\n\n\n\n\n\nimport sys",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''100 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''100 1\n3 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 1') == '0 0 0 0 0 0 0 0'\nassert solution('4 1') == '0 0 0 0'\nassert solution('8 2') == '0 1 1 2 2 2 3 3'\nassert solution('4 2') == '0 1 2 2'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''5\n3 1\n3 2\n20 100\n''') == 'abb'\nassert solution('''2\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n''') == 'aab'\nassert solution('''1\n2\n''') == ''\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'b'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\n' + 'aabab\\n' + 'baaba\\n' + 'bbaaa\\n' + 'abb\\n' + 'bab\\n' + 'aaaaabaaaaabaaaaaaaa\\n'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\nInput\n\n3\n5 2\n3 2\n4 2\n\nOutput\n\naaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n4\\n2') == 'aaa'\nassert solution('2\\n1\\n1') == 'a'\nassert solution('2\\n1\\n5') == 'baa'\nassert solution('2\\n1\\n7') == 'abaa'\nassert solution('2\\n1\\n10') == 'aaba'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa'\n\nassert solution('''7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaabb'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"abaa\"\nassert solution(stdin) == \"bab\"\nassert solution(stdin) == \"aaaaabaaaaabaaaaaaaa\"\nassert solution(stdin) == \"bbaaa\"\nassert solution(stdin) == \"abb\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('5 1') == '1'\nassert solution('5 2') == '1'\nassert solution('5 10') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3') == '6'\nassert solution('2\\n5 7\\n1 2 3 4 5 6\\n1 3 4 5 6 7 8 9') == '2'\nassert solution('2\\n5 7\\n1 2 3 4 5 6\\n1 3 4 5 6 7 8 9') == '2'\nassert solution('2\\n5 7\\n1 2 3 4 5 6\\n1 3 4 5 6 7 8 9') == '2'\nassert solution('2\\n5 7\\n1 2 3 4 5 6\\n1 3 4 5 6 7 8 9') == '2'\n",
        "num_ids_2": 124,
        "num_ids_4": 188
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"inputs/test_2.txt\") == \"5\"\n\"\"\"\n\n\"\"\"\nThoughts: not sure how to solve, much of the solution is from the site:\nhttps://www.geeksforgeeks.org/number-platforms-to-reach-nth-building-using-minimum-number-of-trips/\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List\n\nstdin = \"\"\"\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1 1\n1000000000\n1000000000''') == '1'\n\nassert solution(\n'''2 2\n1 1\n1000000000\n1000000000\n0 1''') == '2'\n\nassert solution(\n'''3 3\n1 1\n1000000000\n1000000000\n0 1\n0 2\n0 3\n0 4\n0 5''') == '5'\n\nassert solution(\n'''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n0 14\n0 15\n0 16\n0 17\n0 18\n0 19\n0 20\n0 21\n0 22\n0 23\n0 24\n0 25\n0 26\n0 27\n0 28\n0 29\n0 30\n0 31\n0 32\n0 33\n0 34\n0 35\n0 36\n0 37\n0 38\n0 39\n0 40\n0 41\n0 42\n0 43\n0 44\n0 45\n0 46\n0 47\n0 48\n0 49\n0 50\n0 51\n0 52\n0 53\n0 54\n0 55\n0 56\n0 57\n0 58\n0 59\n0 60\n0 61\n0 62\n0 63\n0 64\n0 65\n0 66\n0 67\n0 68\n0 69\n0 70\n0 71\n0 72\n0 73\n0 74\n0 75\n0 76\n0 77\n0 78\n0 79\n0 80\n0 81\n0 82\n0 83\n0 84\n0 85\n0 86\n0 87\n0 88\n0 89\n0 90\n0 91\n0 92\n0 93\n0 94\n0 95\n0 96\n0 97\n0 98\n0 99\n0 100\n0 101\n0 102\n0 103\n0 104\n0 105\n0 106\n0 107\n0 108\n0 109\n0 110\n0 111\n0 112\n0 113\n0 114\n0 115\n0 116\n0 117\n0 118\n0 119\n0 120\n0 121\n0 122\n0 123\n0 124\n0 125\n0 126\n0 127\n0 128\n0 129\n0 130\n0 131\n0 132\n0 133\n0 134\n0 135\n0 136\n0 137\n0 138\n0 139\n0 140\n0 141\n0 142\n0 143\n0 144\n0 145\n0 146\n0 147\n0 148\n0 149\n0 150\n0 151\n0 152\n0 153\n0 154\n0 155\n0 156\n0 157\n0 158\n0 159\n0 160\n0 161\n0 162\n0 163\n0 164\n0 165\n0 166\n0 167\n0 168\n0 169\n0 170\n0 171\n0 172\n0 173\n0 174\n0 175\n0 176\n0 177\n0 178\n0 179\n0 180\n0 181\n0 182\n0 183\n0 184\n0 185\n0 186\n0 187\n0 188\n0 189\n0 190\n0 191\n0 192\n0 193\n0 194\n0 195\n0 196\n0 197\n0 198\n0 199\n0 200\n0 201\n0 202\n0 203\n0 204\n0 205\n0 206\n0 207\n0 208\n0 209\n0 210\n0 211\n0 212\n0 213\n0 214\n0 215\n0 216\n0 217\n0 218\n0 219\n0 220\n0 221\n0 222\n0 223\n0 224\n0 225\n0 226\n0 227\n0 228\n0 229\n0 230\n0 231\n0 232\n0 233\n0 234\n0 235\n0 236\n0 237\n0 238\n0 239\n0 240\n0 241\n0 242\n0 243\n0 244\n0 245\n0 246\n0 247\n0 248\n0 249\n0 250\n0 251\n0 252\n0 253\n0 254\n0 255\n0 256\n0 257\n0 258\n0 259\n0 260\n0 261\n0 262\n0 263\n0 264\n0 265\n0 266\n0 267\n0 268\n0 269\n0 270\n0 271\n0 272\n0 273\n0 274\n0 275\n0 276\n0 277\n0 278\n0 279\n0 280\n0 281\n0 282\n0 283\n0 284\n0 285\n0 286\n0 287\n0 288\n0 289\n0 290\n0 291\n0 292\n0 293\n0 294\n0 295\n0 296\n0 297\n0 298\n0 299\n0 300\n0 301\n0 302\n0 303\n0 304\n0 305\n0 306\n0 307\n0 308\n0 309\n0 310\n0 311\n0 312\n0 313\n0 314\n0 315\n0 316\n0 317\n0 318\n0 319\n0 320\n0 321\n0 322\n0 323\n0 324\n0 325\n0 326\n0 327\n0 328\n0 329\n0 330\n0 331\n0 332\n0 333\n0 334\n0 335\n0 336\n0 337\n0 338\n0 339\n0 340\n0",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    r\"\"\"\n    4\n    7 1\n    1 5 2 3 1 5 4\n    1 3 6 7 2 5 4\n    1 1\n    1000000000\n    1000000000\n    5 10\n    10 7 5 15 8\n    20 199 192 219 1904\n    10 10\n    15 19 8 17 20 10 9 2 10 19\n    12 13 6 17 1 14 7 9 19 3\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    r\"\"\"\n    4\n    7 1\n    1 5 2 3 1 5 4\n    1 3 6 7 2 5 4\n    1 1\n    1000000000\n    1000000000\n    5 10\n    10 7 5 15 8\n    20 199 192 219 1904\n    10 10\n    15 19 8 17 20 10 9 2 10 19\n    12 13 6 17 1 14 7 9 19 3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    r\"\"\"\n    4\n    7 1\n    1 5 2 3 1 5 4\n    1 3 6 7 2 5 4\n    1 1\n    1000000000\n    1000000000\n    5 10\n    10 7 5 15 8\n    20 199 192 219 1904\n    10 10\n    15 19 8 17 20 10 9 2 10 19\n    12 13 6 17 1 14 7 9 19 3\n    \"\"\"\n) == \"5\"\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom collections import deque\nfrom bisect import bisect_left\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\n\nfor _ in range(T):\n    n, k = [int(i) for i in sys.stdin.readline().strip().split()]\n    x = [int(i) for i in sys.stdin.readline().strip().split()]\n    y = [int(i) for i in sys.stdin.readline().strip().split()]\n    m = max(x)\n    print(n - max(max(x) - k, max(y) - k))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('2 3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''0\n3\n0\n1\n2\n2\n0\n0\n10\n''') == '1'\nassert solution(\n'''7\n3\n0\n1\n2\n2\n0\n0\n10\n''') == '7'\nassert solution(\n'''4\n3\n1\n2\n1\n2\n''') == '0'\nassert solution(\n'''7\n4\n1\n2\n1\n2\n''') == '0'\nassert solution(\n'''7\n7\n1\n2\n1\n2\n''') == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 1 1 0') == '4'\nassert solution('2 1 2 1 2 1 2 1 0 0 0 2 0 0 0') == '5'\nassert solution('0 1 0 0 0 0 0') == '1'\nassert solution('1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0') == '1'\nassert solution('1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 85
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n1\\n2') == '0'\nassert solution('1\\n2\\n2') == '0'\nassert solution('1\\n2\\n2\\n2') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''2 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '0'\nassert solution(stdin) == '7'\nassert solution(stdin) == '0'\nassert solution(stdin) == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n2\n3\n4\n2\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3\n2\n3\n0\n1\n2\n0\n2\n3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10\n\n3\n1\n2\n1\n2\n\n0\n1\n2\n2\n0\n0\n10''') == '4\\n7\\n7\\n7\\n7\\n7\\n'\nprint('Passed: 2/2')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5 2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5 2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5 2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5 2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7'\n\nassert solution('''1\n5 2 1\n5 3 2\n5 4 3\n5 5 4\n5 6 5''') == '1 2 \\n1 3 2 \\n1 4 3 \\n1 5 4 \\n1 6 5'\n\nassert solution('''4\n2 1 4\n1 3 3\n2 4 2\n2 5 4''') == '1 4 \\n1 3 3 \\n2 4 2 \\n2 5 4'\n\nassert solution('''3\n3 1 1\n2 2 2\n2 3 2\n''') == '1 3 \\n1 2 2 \\n1 2 2'\n\nassert solution('''1\n2 1 1\n2 2 2\n2 3 2\n''') == '1 2 \\n1 2 2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n\nassert solution('''2\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '1 2\\n3 4\\n5 6\\n7 8\\n9 10'\n\nassert solution('''3\n6 10\n11 22\n13 44\n15 60\n17 80\n''') == '11 22\\n13 44\\n15 60\\n17 80'\n\nassert solution('''4\n10 30\n13 42\n15 54\n17 76\n''') == '13 42\\n15 54\\n17 76'\n\nassert solution('''3\n8 12\n13 21\n14 43\n15 59\n16 80\n''') == '13 21\\n14 43\\n15 59'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"40 30 50 10\"\nassert solution(\"6 20 50\") == \"32 20 38 44 50\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\nassert solution(\"9 13 22\") == \"1 10 13 4 19 22 25 16 7\"\nprint(solution(stdin))\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22''') == '1 49'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13 22\n9 13",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7'\n'''\nNote\n\nThis is a little harder than the previous one \u2014 we have to keep in mind that our array is not necessarily the sorted one. It may be, for example, sorted in decreasing order. \n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('5 4 3 2 1') == '1 2 3 4 5'\nassert solution('5 9 3 2 4 8') == '3 2 4 5 9'\nassert solution('99 99') == '99'\nassert solution('99 100') == '100 99'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '1 2 3'\nassert solution('''3\n2 3 1''') == '1 2 3'\nassert solution('''6\n50 30 25 12 10 40 5''') == '10 12 5 25 30 50'\nassert solution('''4\n99 45 98 54 54''') == '54 45 98 99'\nassert solution('''4\n99 45 98 54 54''') == '54 45 98 99'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_lines[0]) == output_lines[0]",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1'\nassert solution('1 1 1 1') == '1 1 1'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7 8 9'\nassert solution('2 2 2 2') == '2 2 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 71
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1 1'\nassert solution('1 1 2 2 1') == '1 2 2 1'\nassert solution('1 2 1 1') == '1 2 1'\nassert solution('1 2 1 2') == '1 2 1 2'\n",
        "num_ids_2": 42,
        "num_ids_4": 74
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 3 2') == '1 2 3'\nassert solution('2 1 3') == '1 2 3'\nassert solution('2 3 1') == '1 2 3'\nassert solution('3 1 2') == '1 2 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 1 2') == '1 2 3'\nassert solution('2 2 1 3') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1'\nassert solution('1 1 2 2') == '1 2 2'\nassert solution('1 2 1 2') == '1 2 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('3 3 2 1') == '1 2 3'\nassert solution('3 3 1 4 2') == '1 2 3 4'\nassert solution('4 2 3 1') == '1 2 3 4'\nassert solution('2 3 1') == '1 2 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3''') == 'YES'\nassert solution('''2\n4\n2 2 8 8\n3\n3 3 3''') == 'NO'\nassert solution('''2\n5\n2 2 3 4 5\n5\n1 1 1 1 1''') == 'YES'\nassert solution('''2\n3\n1 1 1\n1 1 1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    2\n    2 3\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n''') == 'NO'\nassert solution('''\n    5\n    1\n    1 1 1 1\n''') == 'YES'\nassert solution('''\n    5\n    2\n    3\n    2 3\n    5 5 5 5\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n''') == 'NO'\nassert solution('''\n    5\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n''') == 'YES'\nassert solution('''\n    5\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\n'\n\nassert solution('''6\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 2 3 4 5\n''') == 'NO\\n'\n\nassert solution('''7\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 2 3 4 5\n6\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3\n4\n5 5 5 5 5\n4\n1 1 1 1 1\n5\n2 2 3 4 5 6\n7\n3 3 3 3 3",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n4\n2 3\n4\n2 2 8 8\n3\n3 3 3''') == 'NO'\nassert solution('''2\n4\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\n'''\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\\n1\") == \"YES\"\nassert solution(\"2\\n1\\n1\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3\\n2\\n4\\n2\\n2\\n8\\n8') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n2') == 'NO'\nassert solution('2\\n3\\n2\\n4\\n2\\n2\\n8\\n8') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n2') == 'NO'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\") == \"YES\"\n",
        "num_ids_2": 15,
        "num_ids_4": 38
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asd') == ''\nassert solution('1234') == '1 2 3 4'\nassert solution('12345') == '1 2 3 4 5'\nassert solution('123456') == '1 2 3 4 5 6'\nassert solution('1234567') == '1 2 3 4 5 6 7'\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2\\n-1\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n10\\n2\\n4\\n6\\n7\\n13') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('2\\n2') == '-1 '\nassert solution('4\\n6\\n7\\n13') == '13 9 7 11 8 4 1 3 5 2 6 10 12 '\nassert solution('3\\n1\\n3') == '3 1 3 '\nassert solution('5\\n3\\n5') == '3 1 5 2 '\n",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0''') == ''\nassert solution('''1''') == '-1'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '1 2'\nassert solution('''4''') == '2 1'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\".join(example.split(\"\\n\"))) == \"9 6 10 8 4 7 3 1 5 2\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2'\n'''\n\n'''\nimport sys",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n2') == '-1'\nassert solution('5\\n4\\n2') == '2 1 3 4 5'\nassert solution('5\\n3\\n2') == '2 3 1 5'\nassert solution('5\\n2\\n2') == '2 1 3 4 5'\nassert solution('5\\n1\\n2') == '1 2 3 4 5'\n",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n5\\n2\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"5\\n5\\n2\") == \"5 3 6 2 4 1\"\nassert solution(\"5\\n5\\n4\") == \"5 1 3 6 2 4 7\"\nassert solution(\"5\\n5\\n6\") == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\nassert solution(\"4\\n5\\n1\") == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n\n\n\n-----\n\nFor each test case, output a single integer\u00a0\u2014 the minimum number of moves to make the given array $a$ good, or -1 if this is not possible.\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, in the first move, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the seventh test case, you cannot make the array good.\n\n----\n\nIn the first test case, in the first move, you can swap the elements with indices $0$ and $1$.\n\nIn the second test case, you can swap the elements with indices $2$ and $3$.\n\nIn the third test case, you cannot make the array good.\n\nIn the fourth test case, you cannot make the array good.\n\nIn the fifth test case, you cannot make the array good.\n\nIn the sixth test case, in the first move, you",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n7 7\\n3 9 5 2 6 8 4 1 0') == '0'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8 4 1 0\\n7 7\\n3 9 5 2 6 8",
        "num_ids_2": 105,
        "num_ids_4": 1417
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n2\\n') == '0'\nassert solution('3\\n3\\n3\\n') == '1'\nassert solution('4\\n4\\n4\\n') == '2'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('3\\n3\\n3\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''2\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''3\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''2\n5\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\n",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''1\n2\n''') == '-1'\nassert solution('''2\n1\n''') == '-1'\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2 '\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1 '\nassert solution('2\\n0 0 1 0\\n1 2') == '0 -1 1 -1 '\nassert solution('2\\n0 0 1 0\\n1 2\\n1 3\\n') == '0 -1 1 -1 '\nassert solution('2\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1 '\n",
        "num_ids_2": 96,
        "num_ids_4": 152
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '-1 1 -1 1'\nassert solution('5\\n0 0 1 0 0\\n1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7') == '0 1 1 1 1 0 0 0 -1'\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4''') == '0 -1 1 -1'\nassert solution('''5\n0 0 1 0 0\n1 2\n1 3\n1 4\n1 5''') == '0 -1 1 -1'\nassert solution('''5\n0 0 1 0 0\n1 2\n2 3\n1 4\n1 5''') == '0 -1 1 -1'\nassert solution('''9\n0 0 1 0 0 0 0 0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''9\n0 0 1 0 0 0 0 0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9''') == '0 -1 1 -1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"\n\n\n\n-----\n\n\"\"\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0 1\\n0\\n1\\n0\\n1\\n1\\n0\") == \"1\"\nassert solution(\"1\\n0 1\\n0\\n1\\n0\\n1\\n1\\n0\") == \"1\"\nassert solution(\"1\\n0 1\\n0\\n1\\n0\\n1\\n1\\n0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 84
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '2 -1 1 -1'\nassert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '0 -1 1 -1'\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''\n9\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''\n9\n0 0 1 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('12') == '2'\nassert solution('12345') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '1'\nassert solution('12') == '2'\nassert solution('12345') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\n\"\"\"\n\n\nfrom sys import stdin,stdout\nfrom math import ceil",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"3\\n1\") == \"-1\"\nassert solution(\"12\\n1\") == \"3\"\nassert solution(\"12345\\n1\") == \"12\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('3\\n1') == '-1'\nassert solution('12\\n1') == '-1'\nassert solution('12345\\n1') == '12'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n1') == '0'\nassert solution('7\\n2') == '-1'\nassert solution('7\\n3') == '2'\nassert solution('7\\n12') == '-1'\nassert solution('7\\n12345') == '12'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '0\\n-1\\n1\\n-1\\n-1\\n2\\n-1\\n1\\n-1\\n-1\\n'\n\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '0\\n-1\\n1\\n-1\\n-1\\n2\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution
        "num_ids_2": 1437,
        "num_ids_4": 1437
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''BGGGG\n5 3\nBBRGR''') == '1'\nassert solution('''BGGGG\n5 3\nRBGRG\n5 5\nBBBRR''') == '0'\nassert solution('''BGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '3'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result, msg\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BGGGG') == '1'\nassert solution('RBRGR') == '0'\nassert solution('BBBRR') == '3'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n'''\n-----Solution-----\n'''\n'''\npublic class Main {\n    public static void main(String[] args) {\n        int [] testcases = { 1, 2, 3, 4, 5 };\n        int T = testcases[0];\n        for (int t = 0; t < T; t++) {\n            String s = new String(testcases[t + 1]);\n            int n = testcases[t + 2];\n            int k = testcases[t + 3];\n            String[] substr = new String[k];\n            for (int i = 0; i < s.length() - k + 1; i++){\n                int c = 0;\n                for (int j = 0; j < k; j++){\n                    if (s.charAt(i + j) == 'R'){\n                        c++;\n                    }\n                    else if (s.charAt(i + j) == 'G'){\n                        c++;\n                    }\n                    else {\n                        c++;\n                    }\n                }\n                if (c < n) {\n                    continue;\n                }\n                else if (c < 2*n) {\n                    substr[c/2] = 'R';\n                }\n                else {\n                    substr[k-1] = 'B';\n                }\n            }\n            for (int i = 0; i < k; i++){\n                System.out.print(substr[i] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RBRRBGBBGRBBRGRGBGRRGBGBRGBGBGRBGBRBGRRBGBRBGRBGBRBGBBB') == '1'\nassert solution
        "num_ids_2": 1433,
        "num_ids_4": 1433
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n7') == '3'\nassert solution('3\\n5\\n1 1 1 1 1 2 2\\n3\\n1 1 1 1 1 2 2\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1",
        "num_ids_2": 1517,
        "num_ids_4": 1517
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''3\n5\n1 1 1 1 1 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n2\n1 1 1 1 1''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n5\n1 1 1 1 1 1''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n2 1 1 1 1 1 1') == '6\\n3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n2 1 1 1 1 1 1') == '6\\n3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n2 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == '8\\n3'\n",
        "num_ids_2": 70,
        "num_ids_4": 158
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"1\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"1\\n1\\n
        "num_ids_2": 64,
        "num_ids_4": 1517
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n4') == '2'\nassert solution('2\\n3') == '3'\nassert solution('2\\n5') == '2'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1 5 2 4') == '1 2 3 5 4'\nassert solution('1 2 3 4 5') == '1 2 5 3 4'\nassert solution('1 2 3 4 5 6') == '1 2 6 5 4 3'\nassert solution('2 4 3 5 1') == '2 4 5 1 3'\nassert solution('1 4 3 2') == '1 4 3 2'\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\n\nassert solution('''4\n4\n1 2 4 3\n4\n1 2 4 3''') == '''1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\n\nassert solution('''4\n1\n1\n4\n4 3 2 1''') == '''1 2 3 4 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\n\nassert solution('''4\n4\n1 2 4 3\n4\n1 2 4 3''') == '''1 2 3 4 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\n\nassert solution('''4\n4\n1 2 3 4\n4\n1 2 4 3\n4\n1 2 4 3\n4\n1 2 4 3''') == '''1 2 3 4 \n1 2 3 4 \n1 \n1 4 3 2 \n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline().strip())\nl = [int(x) for x in stdin.readline().split()]\np = []\n\nfor i in range(n):\n    for j in range(i, n):\n        if l[j] > l[i]:\n            p.append(l[j])\n            l[j] = l[i]\n            l[i] = p[-1]\n            break\n    else:\n        p.append(l[i])\n\nprint(*p)\n\n\"\"\"\nEasy version:\n\n\"\"\"\nfrom sys import stdin, stdout\n\nn = int(stdin.readline().strip())\nl = [int(x) for x in stdin.readline().split()]\np = []\n\nfor i in range(n):\n    for j in range(i, n):\n        if l[j] > l[i]:\n            p.append(l[j])\n            l[j] = l[i]\n            l[i] = p[-1]\n            break\n    else:\n        p.append(l[i])\n\nstdout.write(' '.join([str(x) for x in p]))\n\n\"\"\"\nHard version:\n\n\"\"\"\nfrom sys import stdin, stdout\n\nn = int(stdin.readline().strip())\nl = [int(x) for x in stdin.readline().split()]\np = []\n\nfor i in range(n):\n    for j in range(i, n):\n        if l[j] > l[i]:\n            l[j], l[i] = l[i], l[j]\n            p.append(l[i])\n            break\n    else:\n        p.append(l[i])\n\nstdout.write(' '.join([str(x) for x in p]))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''\n4\n4\n1 2 4 3\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4') == '1 4 3 2'\nassert solution('2\\n4') == '1 2 3 4'\nassert solution('3\\n4') == '1 2 4 3'\nassert solution('4\\n4') == '1 2 3 4'\nassert solution('5\\n4') == '1 2 4 3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n2\\n2') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1\\n2') == '1'\nassert solution('1\\n2\\n1\\n3') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"input/test_case_1.txt\") == \"NO\"\nassert solution(\"input/test_case_2.txt\") == \"NO\"\nassert solution(\"input/test_case_3.txt\") == \"NO\"\nassert solution(\"input/test_case_4.txt\") == \"NO\"\nassert solution(\"input/test_case_5.txt\") == \"YES\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n1 2 3\\n2 3 1') == 'YES'\nassert solution('2\\n2\\n1 2') == 'YES'\nassert solution('3\\n3\\n1 2 3\\n2 3 1') == 'NO'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n2') == 'NO'\n",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n2\\n2\\n2\\n2') == 'YES'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'YES'\nassert solution('1\\n3') == 'NO'\nassert solution('2\\n4') == 'YES'\nassert solution('2\\n4\\n3') == 'NO'\nassert solution('2\\n3') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n1') == 'YES'\nassert solution('2\\n2\\n2') == 'YES'\nassert solution('2\\n3\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n1') == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\n[3, 2, 1, 4]\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('''3\n2\n1 2\n2\n1\n3\n2\n3\n2\n3\n1\n2\n2\n3\n2\n2\n''') == 'NO\\nYES\\nYES'\nassert solution('''5\n4\n1 2 3 4 5\n1\n1\n2\n3\n4\n2\n''') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('''6\n4\n2 3 4 5 6 1\n3\n1 2 3 4 5\n2\n2\n3\n1 4 3 2\n1\n1\n4\n3 2 1 5 4\n2\n2\n3\n1 4 2 5 3\n1\n1\n2\n3\n4\n1\n''') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('''6\n4\n2 3 4 5 6 1\n3\n1 2 3 4 5\n2\n2\n3\n1 4 3 2\n1\n1\n4\n3 2 1 5 4\n2\n2\n3\n1 4 2 5 3\n1\n1\n2\n3\n4\n1\n''') == 'NO\\nYES\\nNO\\nYES\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n-----",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''1\n1 1''') == '1'\nassert solution('''1\n2 1''') == '2'\nassert solution('''5\n4 6\n3 7\n4 8\n5 9\n6 10''') == '6'\nassert solution('''2\n3 1\n1 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('test_santa') == '5'\nassert solution('test_santa1') == '18'\nassert solution('test_santa2') == '10'\nassert solution('test_santa3') == '6'\nassert solution('test_santa4') == '75015'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015\\n'\n\nassert solution('''10\n1000 2\n4000 5\n2000 5\n5000 1\n10000 1\n5000 50\n2000 500\n1000 10\n10000 100\n5000 2\n2000 2\n1000 1\n''') == '10\\n2500\\n2500\\n5000\\n30000\\n'\n\nassert solution('''5\n5 2\n15 4\n12 7\n6 2\n10000 1\n''') == '5\\n16\\n14\\n12\\n15\\n'\n\nassert solution('''10\n1000 2\n4000 5\n2000 5\n5000 1\n10000 1\n5000 50\n2000 500\n1000 10\n10000 100\n5000 2\n2000 2\n1000 1\n''') == '10\\n2500\\n2500\\n5000\\n30000\\n'\n\nassert solution('''5\n5 2\n12 4\n7 1\n4 1\n10000 1\n5000 50\n2000 500\n1000 10\n5000 2\n2000 2\n1000 1\n''') == '5\\n10\\n9\\n8\\n7\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''1\n2 2\n1 1\n''') == '2'\n\nassert solution('''1\n2 1\n''') == '1'\n\nassert solution('''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''5\n5 2\n100000 50010\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''2\n100000 50010\n5 2\n''') == '5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n\nassert solution('''1\n2 2\n3 4\n5 6\n7 8\n9 10\n''') == '9\\n12\\n21\\n24\\n35\\n36\\n42\\n49'\n\nassert solution('''3\n2 3\n100000 50010\n5 2\n''') == '4\\n9\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13'\n\nassert solution('''4\n4 4\n100000 50010\n5 2\n''') == '6\\n16\\n13\\n11\\n10\\n9'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('100000 50010') == '75015'\nassert solution('12 7') == '10'\nassert solution('6 2') == '6'\nassert solution('1 100000 50010') == '100000'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n5 2\n19 4\n12 7\n6 2\n100000 50010'''\n) == '5\\n18\\n10\\n6\\n75015'\n\nassert solution(\n'''1\n2 2\n3 1\n4 0\n5 0'''\n) == '5\\n5\\n5\\n5\\n5'\n\nassert solution(\n'''100000 50010\n12 7\n6 2\n100000 50010\n0 10\n0 1'''\n) == '5\\n18\\n10\\n6\\n75015'\n\nassert solution(\n'''10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10'''\n) == '10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 2\\n2 1\\n1 1\\n2 1') == '5'\nassert solution('2\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1",
        "num_ids_2": 1302,
        "num_ids_4": 1302
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''\n3\n5 2\n11 10\n5 2\n123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789\n''') == '3'\n\nassert solution('''\n3\n5 2\n11 10\n5 2\n123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789\n''') == '5'\n\nassert solution('''\n3\n5 2\n11 10\n5 2\n123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789\n''') == '5'\n\nassert solution('''\n3\n5 2\n11 10\n5 2\n123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == '''YES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n'''\nassert solution('''7\n100001 1\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''\n1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n221 223\n221 224\n221 225\n222 226\n222 227\n222 228\n222 229\n223 230\n223 231\n223 232\n223 233\n223 234\n223 235\n223 236\n223 237\n223 238\n223 239\n223 240\n223 241\n223 242\n223 243\n223 244\n223 245\n223 246\n223 247\n223 248\n223 249\n223 250\n223 251\n223 252\n223 253\n223 254\n223 255\n223 256\n223 257\n223 258\n223 259\n223 260\n223 261\n223 262\n223 263\n223 264\n223 265\n223 266\n223 267\n223 268\n223 269\n223 270\n223 271\n223 272\n223 273\n223 274\n223 275\n223 276\n223 277\n223 278\n223 279\n223 280\n223 281\n223 282\n223 283\n223 284\n223 285\n223 286\n223 287\n223 288\n223 289\n223 290\n223 291\n223 292\n223 293\n223 294\n223 295\n223 296\n223 297\n223 298\n223 299\n223 300\n223 301\n223 302\n223 303\n223 304\n223 305\n223 306\n223 307\n223 308\n223 309\n223 310\n223 311\n223 312\n223 313\n223 314\n223 315\n223 316\n223 317\n223 318\n223 319\n223 320\n223 321\n223 322\n223 323\n223 324\n223 325\n223 326\n223 327\n223 328\n223 329\n223 330\n223 331\n223 332\n223 333\n223 334\n223 335\n223 336\n223 337\n223 338\n223 339\n223 340\n223 341\n223 342\n223 343\n223 344\n223 345\n223 346\n223 347\n223 348\n223 349\n223 350\n223 351\n223 352\n223 353\n223 354\n223 355\n223 356\n223 357\n223 358\n223 359\n223 360\n223 361\n223 362\n223 363\n223 364\n223 365\n223 366\n223 367\n223 368\n223 369\n223 370\n223 371\n223 372\n223 373\n223 374\n223 375\n223 376\n223 377\n223 378\n223 379\n223 380\n223 381\n223 382\n223 383\n223 384\n223 385\n223 386\n223 387\n223 388\n223 389\n223 390\n223 391\n223 392\n223 393\n223 394\n223 395\n223 396\n223 397\n223 398\n223 399\n223 400\n223 401\n223 402\n223 403\n223 404\n223 405\n223 406\n223 407\n223 408\n223 409\n223 410\n223 411\n223 412\n223 413\n223 414\n223 415\n223 416\n223 417\n223 418\n223 419\n223 420\n223 421\n223 422\n223 423\n223 424\n223 425\n223 426\n223 427\n223 428\n223 429\n223 430\n223 431\n223 432\n223 433\n223 434\n223 435\n223 436\n223 437\n223 438\n223 439\n223 440\n223 441\n223 442\n223 443\n223 444\n223 445\n223 446\n223 447\n223 448\n223 449\n223 450\n223 451\n223 452\n223 453\n223 454\n223 455\n223 456\n223 457\n223 458\n223 459\n223 460\n223 461\n223 462\n223 463\n223 464\n223 465\n223 466\n223 467\n223 468\n223 469\n223 470\n223 471\n223 472\n223 473\n223 474\n223 475\n223 476\n223 477\n223 478\n223 479\n223 480\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000 9') == 'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n                    '1 1 1 1 1 1 1 1 1\\n' + \\\n                    'NO\\n' + \\\n                    'YES\\n' + \\\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('10') == 'YES'\nassert solution('100') == 'YES'\nassert solution('8') == 'YES'\nassert solution('7') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n2 3\n1 100000000\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nassert solution('''8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n2 3\n1 100000000\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nassert solution('''8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n2 3\n1 100000000\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nassert solution('''8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n2 3\n1 100000000\n''') == 'NO\\n'\nassert solution('''8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n2 3\n1 100000000\n''') == 'NO\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 3 1 7 7 1 9 7 3 4 3 1 1 7 7 1 7 2 2 3 1') == 'NO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\n'\nassert solution('9 9 3 1 4 1 9 9 1 2 1 1 1 2 3 2 1 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 2 1 1 1 2 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 1602,
        "num_ids_4": 1602
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 \") == \"\"\nassert solution(\"1 2\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''5 3\n1000000000 9\n''') == 'NO\\n'\n\nassert solution('''8 10\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''9 10\n1000000000 9\n''') == 'YES\\n5 5 5 5 5 5 5 5 5\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''10 10\n1000000000 9\n''') == 'YES\\n5 5 5 5 5 5 5 5 5\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '4\\n55\\n15000000000000000\\n51'\n'''1 2 1\n1 3 3'''\n\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '4\\n55\\n15000000000000000\\n51'\n\nassert solution('''1 3 4\n1 3 2\n1 1 1''') == '0'\n\nassert solution('''1 3 4\n1 3 2\n2 1 1''') == '0'\n\nassert solution('''1 3 4\n1 3 2\n2 2 2''') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n15000000000000000\\n51'\nassert solution('4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n15000000000000000\\n51'\nassert solution('4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n15000000000000000\\n51'\n\n\n\"\"\"\nimport sys",
        "num_ids_2": 89,
        "num_ids_4": 135
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 10 100''') == '55'\nassert solution('''10000000000000000 10000000000000000 10000000000000000''') == '51'\nassert solution('''23 34 45''') == '15000000000000000'\n",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1, 3, 4') == '4'\nassert solution('1, 10, 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '15000000000000000'\nassert solution('23 34 45') == '45'\n\n\n\"\"\"\nfrom collections import deque\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 10 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '15000000000000000'\nassert solution('23 34 45') == '51'",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3''') == '6'\nassert solution('''1 10 100''') == '55'\nassert solution('''10000000000000000 10000000000000000 10000000000000000''') == '51'\nassert solution('''1 2 3''') == '6'\nassert solution('''1 10 100''') == '55'\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n1\\n1'\nassert solution('1\\n2\\n3\\n') == '0\\n3\\n6'\nassert solution('1\\n10\\n100\\n') == '5\\n55\\n141'\nassert solution('1\\n10\\n100\\n' + '10000000000000000 10000000000000000 10000000000000000\\n' + '23 34 45\\n') == '5\\n55\\n141'\nassert solution('1\\n10\\n100\\n' + '10000000000000000 10000000000000000 10000000000000000\\n' + '23 34 45\\n') == '5\\n55\\n141'\n",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '6'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '3'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '5'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '4'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '6'\n\nassert solution('''5\n2 1\nz\nk\nk\nz\nk''') == '1'\n\nassert solution('''4\n3 2\nzz\nzk\nzz\nkz\n''') == '3'\n\nassert solution('''5\n2 3\naaaaa\nzkz\nzkz\nzkz\nzkz\n''') == '5'\n\nassert solution('''4\n4 2\nz\nz\nz\nz\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''6\n6 3\nacbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''6\n6 3\nabcdefg\n3 6\nabcdefg\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\nassert solution('''6\n6 3\nabcdefg\n3 6\nabcdefg\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 1\nassert solution('a') == 1\nassert solution('b') == 2\nassert solution('a') == 1\nassert solution('b') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''1\n1 1\na\n''') == '1'\n\nassert solution('''1\n7 6\nabc\n''') == '7'\n\nassert solution('''1\n100 5\nbbbaa\n''') == '3'\n\nassert solution('''1\n100 5\nbbaa\n''') == '3'",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(TEST_CASE_1) == TEST_CASE_1_EXPECTED\nassert solution(TEST_CASE_2) == TEST_CASE_2_EXPECTED\nassert solution(TEST_CASE_3) == TEST_CASE_3_EXPECTED\nassert solution(TEST_CASE_4) == TEST_CASE_4_EXPECTED\nassert solution(TEST_CASE_5) == TEST_CASE_5_EXPECTED\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"aabb\") == \"aaab\"\nassert solution(\"aabbb\") == \"aaabb\"\nassert solution(\"abcbac\") == \"abcba\"\nassert solution(\"abcba\") == \"abcba\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '6'\nassert solution('''8 10\nabcdcba\n2 1\na\n4 1000\naaba\n8 1000\nab\n4 4\naaaaa\n1 1\na\n2''') == '5'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '3'\nassert solution('''7 1000\nabc\n7 1000\na\n4 1000\naaba\n8 1000\nab\n4 4\naaaaa\n1 1\na\n2''') == '5'\nassert solution('''8 1000\nabc\n7 1000\na\n4 1000\naaba\n8 1000\nab\n4 4\naaaaa\n1 1\na\n2''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcbac\") == 3\nassert solution(\"abc\") == 1\nassert solution(\"aaa\") == 1\nassert solution(\"ecbedececacbcbccbdec\") == 15\nassert solution(\"ecbedececacbcbccbdec\") == 15\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcbac\") == \"6\"\nassert solution(\"ecbedececacbcbccbdec\") == \"10\"\nassert solution(\"aaa\") == \"3\"\nassert solution(\"abczgyo\") == \"5\"\nassert solution(\"ccbbccbccbbccbccbcc\") == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n\n'''\n\nimport sys\nfrom itertools import accumulate",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5\\n6 7 8 9 10 11') == 'YES\\n1 3 5\\n'\nassert solution('2 3 4 5\\n6 7 8 9 10 11') == 'YES\\n1 3 5\\n'\nassert solution('1 2 3 4 5\\n6 7 8 9 10 11') == 'NO\\n'\nassert solution('2 3 4 5\\n6 7 8 9 10 11') == 'NO\\n'\nassert solution('1 2 3 4 5\\n6 7 8 9 10 11\\n11 11 11 11') == 'NO\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 104
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == '''YES\n1 3 5\nNO\nNO\n'''\n\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == '''NO\nNO\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'\nassert solution('''5\n5 3\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n3 1\n1 2 3 4 5\n3 3\n1 2 3 4 5\n3 3\n1 2 3 4 5''') == 'NO'\nassert solution('''7\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n3 1\n1 2 3 4 5\n3 3\n1 2 3 4 5\n3 3\n1 2 3 4 5''') == 'NO'\nassert solution('''7\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n3 1\n1 2 3 4 5\n3 3\n1 2 3 4 5\n3 3\n1 2 3 4 5''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"YES\n1 3 5\nNO\nNO\"\"\"\n\nassert solution(\"\"\"5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"YES\n1 3 5\nNO\nNO\"\"\"\n\nassert solution(\"\"\"5 3\n5 3\n3 4 1 2\n1 1 1 1 1\n\"\"\") == \"\"\"YES\n1 1 1 1 1\n\"\"\"\n\nassert solution(\"\"\"2 2\n1 1\n1 1\n\"\"\") == \"\"\"NO\n\"\"\"\n\nassert solution(\"\"\"10 10\n2 2\n2 2\n3 2\n5 2\n6 2\n7 2\n8 2\n9 2\n10 2\n1 1\n\"\"\") == \"\"\"YES\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10 9\n10 10\n\"\"\"\n\nprint(solution(\"\"\"30 10\n3 1 3 1 1\n2 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\nassert solution('''5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\nassert solution('''7\n7 3\n1 2 3 4 5 6 7\n3 2\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n''') == 'YES\\n1 3 5\\n1 2 3 4 5 6 7\\n'\n\nassert solution('''2\n2 1\n7 2\n''') == 'NO\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\n'\n\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\nassert solution('''3\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO\\nNO\\nNO\\n'\n\nassert solution('''2\n5 2\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11111111111111111111111111111101') == '3221225471'\nassert solution('0000000000000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\nassert solution('0000000000000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\n\n'''",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == 'a'\nassert solution('11') == 'b'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('11111111111111111111111111111101') == 3221225471\n\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"00000000000001010100101011010010100000111010101000100100000\") == \"0\"\nassert solution(\"1110000010100101011010010101000000010101010111100100110111111\") == \"3221225471\"\nassert solution(\"010001001001011110110100111000100001010101011110101010000010111010101\") == \"0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 111
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00111001011110000010100101000000\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"10111111111111111111111111111111\") == 3221225471\n\nassert solution(\"\") == 0\nassert solution(\"0\") == 0\n",
        "num_ids_2": 40,
        "num_ids_4": 66
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11010001000111101011011000111100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"\") == 0\nassert solution(\"100\") == -1\nassert solution(\"111\") == -1\n",
        "num_ids_2": 41,
        "num_ids_4": 57
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(0b0000000000001010) == 0b0000000000001010\nassert solution(0b0000000010000000) == 0b10000000\nassert solution(0b1111111111111111) == 0b1111111111111111\nassert solution(0b0000000000110000) == 0b0000000000110000\nassert solution(0b1111111111111111111111111111111111111111111111111111111111111) == 0b11111111111111111111111111111111111111111111111111111111111111\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"111111111111111111111111111111\") == \"3221225471\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution(' ') is None\nassert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('6') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]\n",
        "num_ids_2": 16,
        "num_ids_4": 113
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(5) == expected_output\n\n\n\n\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == [[1]]\nassert solution(2) == [[1], [1, 1]]\nassert solution(3) == [[1], [1, 1], [1, 2, 1]]\nassert solution(4) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n",
        "num_ids_2": 25,
        "num_ids_4": 78
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == [[1], [1, 1], [1, 2, 1]]\nassert solution(4) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution(7) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6, 1]]\n\n\"\"\"\n[\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1]\n]\n\n\"\"\"\n",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\\n1\"\nassert solution(\"3\") == \"1\\n1\\n1\\n1\"\nassert solution(\"4\") == \"1\\n1\\n1\\n1\\n1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 49
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution(6) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]\nassert solution(7) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6]]\nassert solution(8) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6], [1, 7, 21, 35, 35, 21, 7]]\n\n\"\"\"",
        "num_ids_2": 97,
        "num_ids_4": 248
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == [[]]\nassert solution(\"1\") == [[1]]\nassert solution(\"2\") == [[1], [1, 1]]\nassert solution(\"3\") == [[1], [1, 1], [1, 2, 1]]\nassert solution(\"4\") == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n",
        "num_ids_2": 19,
        "num_ids_4": 56
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"\") == []\nassert solution(\"0\") == []\nassert solution(\"1\") == [1]\nassert solution(\"2\") == [1,1]\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == []\nassert solution(\"A j u g@n.com\") == [\"j.g@n.com\"]\nassert solution(\"a@gmail.com\") == [\"a@gmail.com\"]\nassert solution(\"a@gmail.com\") == [\"a@gmail.com\"]\nassert solution(\"a@gmail.com\") == [\"a@gmail.com\"]\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Enter your code here. Ctrl-D to submit. ') == '', 'Not Empty'\nassert solution('a@a.com b@b.com c@c.com') == ['a@a.com','b@b.com','c@c.com'], 'Not equal'\nassert solution('chris_w_pie@gmail.com') == ['chris_w_pie@gmail.com'], 'Not equal'\nassert solution('d@d.com') == ['d@d.com'], 'Not equal'\nassert solution('d@d-com') == ['d@d-com'], 'Not equal'\n",
        "num_ids_2": 69,
        "num_ids_4": 125
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"a@a.com\") == [\"a@a.com\"]\nassert solution(\"a@a-com\") == [\"a@a-com\"]\nassert solution(\"a@a_com\") == [\"a@a_com\"]\nassert solution(\"a@a-c.om\") == [\"a@a-c.om\"]\n",
        "num_ids_2": 25,
        "num_ids_4": 61
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"0\neve@eve.org\nsusan@eve.org\nedward@gmail.com\nrachel@gmail.com\n\"\"\") == ['rachel@gmail.com', 'edward@gmail.com']\nassert solution(\"\"\"9\nbob@bob.org\nbob123@bob.org\nbob_dylan@bob.org\nbob_dylan@bob.com\nbobdylan@bob.com\nbob-dylan@bob.com\nbob_dylan@bob.org\n\"\"\") == ['bob@bob.com', 'bob123@bob.com', 'bob_dylan@bob.com', 'bob_dylan@bob.org']\nassert solution(\"\"\"1\nadam@gmail.com\nbob@gmail.com\ncarl@gmail.com\ndanny@gmail.com\neric@gmail.com\n\"\"\") == ['adam@gmail.com', 'bob@gmail.com', 'carl@gmail.com']\nassert solution(\"\"\"2\na@a.org\nbob@gmail.com\ncarl@gmail.com\nbob@bob.com\nbob123@bob.com\nbob_dylan@bob.com\nbob_dylan@bob.org\nbob_dylan@bob.com\n\"\"\") == ['bob@bob.com', 'bob123@bob.com', 'bob_dylan@bob.com', 'bob_dylan@bob.org']\nassert solution(\"\"\"7\nabraham@gmail.com\na@a.org\nb@b.org\ncarl@gmail.com\ndanny@gmail.com\neric@gmail.com\n\"\"\") == ['a@a.org', 'b@b.org', 'carl@gmail.com', 'danny@gmail.com', 'eric@gmail.com']\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\npsfjdf\\npsfjdf\\npsfjdf\") == ['psfjdf@psfjdf.com', 'psfjdf.com', 'psfjdf@psfjdf.com']\nassert solution(\"1\\nasjdkfjkasdkfjkasdf\\nasjdkfjasdkfjasdkfj\") == ['asjdkfjasdkfjasdkfj@asjdkfjasdkfjasdkfj.com']\nassert solution(\"4\\naasjdkfjasdkfjasdf\\nasjdkfjasdkfjasdkfj\") == ['aasjdkfjasdkfjasdkfj@aasjdkfjasdkfjasdkfj.com', 'asjdkfjasdkfjasdkfj@asjdkfjasdkfjasdkfj.com', 'aasjdkfjasdkfjasdkfj@aasjdkfjasdkfjasdkfj.com']\nassert solution(\"4\\npsfjdf\\npsfjdf\\npsfjdf\") == ['psfjdf@psfjdf.com', 'psfjdf.com', 'psfjdf@psfjdf.com']\nassert solution(\"4\\nasjdkfjasdkfjasdkfj\\nasjdkfjasdkfjasdkfj\") == ['asjdkfjasdkfjasdkfj@asjdkfjasdkfjasdkfj.com', 'asjdkfjasdkfjasdkfj@asjdkfjasdkfjasdkfj.com']\n",
        "num_ids_2": 117,
        "num_ids_4": 291
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('input.txt') == ['a@a.com', 'b-b@b.com', 'c-c@c.com', 'd-d@d.com', 'e-e@e.com', 'f-f@f.com', 'g-g@g.com', 'h-h@h.com', 'i-i@i.com', 'j-j@j.com']\n>>>>>>> 4ec4bba8b3f12e1c24b9be9b0029e3d1d211b1e0\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\na@a.com\nb@b.com\n''') == ['b@b.com', 'a@a.com']\nassert solution('''7\ntest@test.com\nsecondtest@secondtest.com\nthird@third.com\n''') == ['secondtest@secondtest.com', 'third@third.com', 'test@test.com']\nassert solution('''9\nabc@abc.com\nbac@bac.com\n''') == ['bac@bac.com', 'abc@abc.com']\nassert solution('''9\nabc.com\nbac.com\n''') == ['bac.com', 'abc.com']\nassert solution('''9\ntest@test.com\nsecondtest@secondtest.com\nthird@third.com\n''') == ['secondtest@secondtest.com', 'third@third.com', 'test@test.com']\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc.xyz@gmail.com') == ['abc.xyz@gmail.com']\nassert solution('a@a.com') == ['a@a.com']\nassert solution('abc@gmail.com') == ['abc@gmail.com']\nassert solution('abc@gmail') == ['abc@gmail.com']\nassert solution('abc@gmail..com') == ['abc@gmail.com']\n",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\nusername@websitename.com\\nusername@websitename.org\\nusername@websitename.net\\nusername@websitename.info\\nusername@websitename-info.com\\nusername@websitename-info.net\\nusername@websitename-info.org\\n\") == [\n    'username@websitename.com',\n    'username@websitename.org',\n    'username@websitename.net',\n    'username@websitename.info',\n    'username@websitename-info.com',\n    'username@websitename-info.net',\n    'username@websitename-info.org'\n]\n\"\"\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\na@a.com\nb-b@b.com\nc--c@c.com\nd@d.com\ne@e.com\nf--f@f.com\ng@g.com\nh--h@h.com\ni@i.com\nj@j.com\n''') == ['a@a.com', 'b-b@b.com', 'c--c@c.com', 'd@d.com', 'e@e.com', 'f--f@f.com', 'g@g.com', 'h--h@h.com', 'i@i.com', 'j@j.com']\nassert solution('''2\na@a.com\nb-b@b.com\n''') == ['a@a.com', 'b-b@b.com']\nassert solution('''0\na@a.com\nb-b@b.com\nc--c@c.com\nd@d.com\ne@e.com\nf--f@f.com\ng@g.com\nh--h@h.com\ni@i.com\nj@j.com\n''') == []\nassert solution('''1\na@a.com\n''') == ['a@a.com']\nassert solution('''1\na@a.com\na@a.com\na@a.com\n''') == ['a@a.com']\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(5) == [0, 1, 1, 8, 27]\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(32939)\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == [0, 1, 1, 8, 27, 109, 274, 425, 751, 1213, 1964]\nassert solution('15') == [0, 1, 1, 4, 29, 145, 488, 945, 1411, 2465, 3193, 4753, 6765, 10099, 14464, 2332, 377, 610, 987, 1597, 2584, 4181, 6765]\nassert solution('30') == [0, 1, 1, 8, 27, 109, 274, 425, 751, 1213, 1964, 3808, 8144, 14435, 24883, 32769, 51495, 8320, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074]\nassert solution('50') == [0, 1, 1, 8, 27, 109, 274, 425, 751, 1213, 1964, 3808, 8144, 14435, 24883, 32769, 51495, 8320, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 35796105825]\nassert solution('100') == [0, 1, 1, 8, 27, 109, 274, 425, 751, 1213, 1964, 3808, 8144, 14435, 24883, 32769, 51495, 8320, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 35796105825, 61286429840]\n=====Sample Input=====\n10\n\n=====Sample Output=====\n[0, 1, 1, 8, 27, 109, 274, 425, 751, 1213, 1964]\n\nThere are other useful and clever ways to solve this but we will cover them in future videos.\n\n\"\"\"",
        "num_ids_2": 101,
        "num_ids_4": 421
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"[8, 27, 64]\"\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '[0, 1, 1, 8]'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == []\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == []\nassert solution('1') == [1]\nassert solution('2') == [1, 1]\nassert solution('3') == [1, 1, 1]\nassert solution('4') == [1, 1, 1, 1]\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765\"\n\n=====Sample Input=====\n5\n\n=====Sample Output=====\n[0, 1, 1, 8, 27]\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == [0, 1, 1]\n\nSample Input\n\n6\n\nSample Output\n\n[0, 1, 1, 8, 27, 125]\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\n\nFor even larger N, try some of the following.\n\nFor example, try N = 10.\n\nFor this, you would need to find the sum of the first 10 fibonacci numbers.\n\nSo, we are going to write a function that takes an integer N as input and returns the sum of the first N fibonacci numbers.",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n''') == 0\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n''') == 0\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>kushal</name>\n                <email>kushalgupta@gmail.com</email>\n            </author>\n            <link rel='self' type='application/atom+xml' href='http://www.hackerrank.com/feed'/>\n            <link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n            <title>Tags and Categories</title>\n            <category scheme='http://a9.com/-/spec/opensearch/1.1/' term='SOAP'/>\n            <category term='Web Development' scheme='http://schemas.ogf.org/websearch/'/>\n            <summary>HackerRank is the world's largest coding competition.</summary>\n        </entry>\n        <entry>\n            <author>\n                <name>Arjun</name>\n                <email>arun@gmail.com</email>\n            </author>\n            <link rel='self' type='application/atom+xml' href='http://www.hackerrank.com/feed'/>\n            <link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n            <title>Tags and Categories</title>\n            <category scheme='http://a9.com/-/spec/opensearch/1.1/' term='SOAP'/>\n            <category term='Web Development' scheme='http://schemas.ogf.org/websearch/'/>\n            <summary>HackerRank is the world's largest coding competition.</summary>\n        </entry>\n    </feed>\n''') == 2\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n''') == 0\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>kushal</name>\n                <email>kushalgupta@gmail.com</email>\n            </author>\n            <link rel='self' type='application/atom+xml' href='http://www.hackerrank.com/feed'/>\n            <link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n            <title>Tags and Categories</title>\n            <category scheme='http://a9.com/-/spec/opensearch/1.1/' term='SOAP'/>\n            <category term='Web Development' scheme='http://schemas.ogf.org/websearch/'/>\n            <summary>HackerRank is the world's largest coding competition.</summary>\n        </entry>\n        <entry>\n            <author>\n                <name>Arjun</name>\n                <email>arun@gmail.com</email>\n            </author>\n            <link rel='self' type='application/atom+xml' href='http://www.hackerrank.com/feed'/>\n            <link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n            <title>Tags and Categories</title>\n            <category scheme='http://a9.com/-/spec/opensearch/1.1/' term='SOAP'/>\n            <category term='Web Development' scheme='http://schemas.ogf.org/websearch/'/>\n            <summary>HackerRank is the world's largest coding competition.</summary>\n        </entry>\n    </feed>\n''') == 2\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>Harsh</author>\n<content type=\"text\">\n<!--Optional:-->\n<text xml:space=\"preserve\">HackerRank</text>\n<image type=\"text\">\n<url>\n<![CDATA[http://i.imgur.com/Bj6tWpj.png]]>\n</url>\n<title>Smiling Face With Smiling Eyes</title>\n<description>\n<![CDATA[\n<img src=\"http://i.imgur.com/Bj6tWpj.png\" alt=\"Smiling Face with Smiling Eyes\" style=\"width: 300px;height: 300px;\">]]>\n</description>\n</content>\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n<link rel=\"self\" type=\"application/atom+xml\" href=\"http://codegolf.stackexchange.com/questions/67178/hacker-rank-feed-format\"/>\n</link>\n</entry>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>Harsh</author>\n<content type=\"text\">\n<!--Optional:-->\n<text xml:space=\"preserve\">HackerRank</text>\n<image type=\"text\">\n<url>\n<![CDATA[http://i.imgur.com/Bj6tWpj.png]]>\n</url>\n<title>Smiling Face With Smiling Eyes</title>\n<description>\n<![CDATA[\n<img src=\"http://i.imgur.com/Bj6tWpj.png\" alt=\"Smiling Face with Smiling Eyes\" style=\"width: 300px;height: 300px;\">]]>\n</description>\n</content>\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n<link rel=\"self\" type=\"application/atom+xml\" href=\"http://codegolf.stackexchange.com/questions/67178/hacker-rank-feed-format\"/>\n</link>\n</entry>\n</feed>''') == 2\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n        <title lang='en'>Tags</title>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <content lang='en'>\n        <![CDATA[<p>Tags: <a href='http://hackerrank.com/contests/archive'><b>Archive</b></a> <a href='http://hackerrank.com/contests/weekly-contest-74'><b>Weekly Contest 74</b></a> <a href='http://hackerrank.com/contests/masterclass'><b>Masterclass</b></a> <a href='http://hackerrank.com/contests/new-contest/masterclass'><b>New-Contest Masterclass</b></a> <a href='http://hackerrank.com/contests/new-contest/submittal'><b>New-Contest Submittal</b></a> <a href='http://hackerrank.com/contests/new-contest/submittal/new-submission'><b>New-Contest New-Submission</b></a> <a href='http://hackerrank.com/contests/all'><b>All</b></a></p>\n        ]]></content>\n        <author>\n        <name>HackerRank</name>\n        </author>\n        <id>942860320</id>\n        </entry>\n        </feed>''')\n    # TODO:\n>>>>>>> 65890dbf6a5fdcd3a21e5b2953e8e5d5b3a26b3d\n    # Note: the answer is always 3, as the root element is considered to be at level 0.\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('<a>\\n<b>\\n<c>\\n</c>\\n</b>\\n</a>') == 3\n\nassert solution('<a>\\n<b>\\n<c>\\n</c>\\n</b>\\n<b>\\n<c>\\n</c>\\n</b>\\n</a>') == 3\n\nassert solution('<a>\\n<b>\\n<c>\\n<d>\\n<e>\\n</e>\\n</d>\\n</c>\\n</b>\\n</a>') == 2\n\nassert solution('<a>\\n<b>\\n<c>\\n<d>\\n<e>\\n</e>\\n</d>\\n</c>\\n</b>\\n</a>') == 2\n\nassert solution('<a>\\n<b>\\n<c>\\n<d>\\n<e>\\n</e>\\n</d>\\n</c>\\n</b>\\n</a>') == 0",
        "num_ids_2": 90,
        "num_ids_4": 200
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 0\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 1\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 2\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 0\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 0\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''<a>\n    <b>\n        <c>text1</c>\n        <d>text2</d>\n        <e>text3</e>\n    </b>\n    <f>text4</f>\n</a>''') == 3\nassert solution('''<a>\n    <b>\n        <c>text1</c>\n        <d>text2</d>\n    </b>\n</a>''') == 2\nassert solution('''<a>\n    <b>\n        <c>text1</c>\n        <d>text2</d>\n        <e>text3</e>\n    </b>\n    <f>text4</f>\n</a>''') == 1\nassert solution('''<a>\n    <b>\n        <c>text1</c>\n    </b>\n    <b>\n        <d>text2</d>\n        <e>text3</e>\n    </b>\n    <b>\n        <f>text4</f>\n    </b>\n</a>''') == 3\nassert solution('''<a>\n    <b>\n        <c>text1</c>\n    </b>\n    <b>\n        <d>text2</d>\n    </b>\n    <b>\n        <e>text3</e>\n    </b>\n    <b>\n        <f>text4</f>\n    </b>\n</a>''') == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<a><b><c/></b><d><e/><f/></d></a>') == 0\nassert solution('<a><b/><c><d/></c></b></a>') == 2\nassert solution('<a><b><c><d><e/></d></c></b></a>') == 3\nassert solution('<a><b><c><d/></d></c></b></a>') == 3\nassert solution('<a><b/><c><d/><e/><f/></c></b></a>') == 3\n",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"<example><node><child/></node></example>\") == 0\nassert solution(\"<xml> <example> <node> <child /> </node> </example> </xml>\") == 1\nassert solution(\"<xml> <example><node> <child> <grandchild /> </child> </node> </example> </xml>\") == 2\nassert solution(\"<xml> <example><node> <child> <grandchild> <grandgrandchild /> </grandchild> </grandchild> </child> </node> </example> </xml>\") == 3\nassert solution(\"<xml> <example> <node> <child> <grandchild> <grandgrandchild> <grandgrandgrandchild /> </grandgrandchild> </grandchild> </child> </node> </example> </xml>\") == 4\n\nprint(solution(input()))\n",
        "num_ids_2": 47,
        "num_ids_4": 128
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('<feed xml:lang='en'>'\n              '<title>HackerRank</title>'\n              '<subtitle lang=\"en\">Programming challenges</subtitle>'\n              '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '</feed>') == 0\n\nassert solution('<feed xml:lang='en'>'\n              '<title>HackerRank</title>'\n              '<subtitle lang=\"en\">Programming challenges</subtitle>'\n              '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '<entry>'\n              '<title lang=\"en\">Test</title>'\n              '<link/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '<summary>Contents</summary>'\n              '</entry>'\n              '</feed>') == 1\n\nassert solution('<feed xml:lang='en'>'\n              '<title>HackerRank</title>'\n              '<subtitle lang=\"en\">Programming challenges</subtitle>'\n              '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '</feed>') == 0\n\nassert solution('<feed xml:lang='en'>'\n              '<title>HackerRank</title>'\n              '<subtitle lang=\"en\">Programming challenges</subtitle>'\n              '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '</feed>') == 0\n\nassert solution('<feed xml:lang='en'>'\n              '<title>HackerRank</title>'\n              '<subtitle lang=\"en\">Programming challenges</subtitle>'\n              '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n              '<updated>2013-12-25T12:00:00</updated>'\n              '</feed>') == 0",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\"\"\") == 0\nassert solution(\"\"\"\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\"\"\") == 1\nassert solution(\"\"\"\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\"\"\") == 0\nassert solution(\"\"\"\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\"\"\") == 1\nassert solution(\"\"\"\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\"\"\") == 1\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n\"\n    \"717-555-9012\"\n) == \"NO\"\nassert solution(\n    \"9\\n\"\n    \"111-1111\"\n) == \"YES\"\nassert solution(\n    \"8\\n\"\n    \"818-555-9012\"\n) == \"YES\"\nassert solution(\n    \"9\\n\"\n    \"717-555-9012\"\n) == \"YES\"\nassert solution(\n    \"9\\n\"\n    \"111-1111\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"71234567890\n1234567890123\n2345678901234\n3456789012345\n4567890123456\n5678901234567\n6789012345678\n\"\"\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\n\"\nassert solution(\"\"\"123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n\"\"\") == \"NO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\n\"\nassert solution(\"\"\"123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n1234 567 89012345\n\"\"\") == \"YES\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\n\"\nassert solution(\"\"\"123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n1234 567 89012345\n\"\"\") == \"NO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\n\"\nassert solution(\"\"\"123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n123456789012345\n1234 567 89012345\n\"\"\") == \"YES\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n0123456789''') == 'NO'\nassert solution('''737-737-737-737-737\n1234567890''') == 'NO'\nassert solution('''9587-1234567\n9587-1234567\n9587 1234567''') == 'YES'\nassert solution('''9687 1234567\n9687 1234567\n968 7 1234567''') == 'NO'\nassert solution('''9999 999\n9999 999\n9999 999''') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n\"\"\") == \"\"\"\nYES\nNO\nNO\nNO\nYES\nNO\nNO\nNO\nNO\nYES\nYES\n\"\"\"\n\nassert solution(\"\"\"\n1234567890\n1234567891\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n\"\"\") == \"\"\"\nYES\nNO\nNO\nNO\nYES\nNO\nNO\nNO\nNO\nNO\nYES\n\"\"\"\n\nassert solution(\"\"\"\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n\"\"\") == \"\"\"\nNO\nNO\nNO\nYES\nNO\nNO\nNO\nNO\nNO\nNO\nYES\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"123456789022\") == \"YES\"\nassert solution(\"01234567890\") == \"NO\"\nassert solution(\"012 345 678 90\") == \"NO\"\nassert solution(\"01234567890 \") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"45 4 56 5\") == \"NO\"\nassert solution(\"999000000000\") == \"YES\"\nassert solution(\"5123456789\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"737-737-737-737-737\n818-818-818-818-818\n818-818-818-818-818\n818-818-818-818-818\n818-818-818-818-818\n818-818-818-818-818\n818-818-818-818-818\n818-818-818-818-818\"\"\"\n) == \"\"\"NO\nNO\nYES\nYES\nYES\nNO\nNO\nYES\nYES\"\"\"\n\n\"\"\"\n\nHint:\n\nA valid mobile number is a ten digit number starting with a 7, 8, or 9.\n\n\"\"\"\n\nimport re",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n22334444\\n4444444444\\n4444444444\\n4444444444\\n4444444444\\n7777777777\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\"\nassert solution(\"123456789\\n1234567891\\n123456789012\\n1234567890123\\n12345678901234\\n123456789012345\\n1234567890123456\\n12345678901234567\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\"\nassert solution(\"123456789\\n1234567891\\n123456789012\\n1234567890123\\n12345678901234\\n123456789012345\\n1234567890123456\\n12345678901234567\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\"\nassert solution(\"123456789\\n1234567891\\n123456789012\\n1234567890123\\n12345678901234\\n123456789012345\\n1234567890123456\\n12345678901234567\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\"\nassert solution(\"123456789\\n1234567891\\n123456789012\\n1234567890123\\n12345678901234\\n123456789012345\\n1234567890123456\\n12345678901234567\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\"\n",
        "num_ids_2": 170,
        "num_ids_4": 360
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''912345678\n1234567890\n12345678901\n91234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890''') == \"NO\\nYES\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"71234567890\") == \"YES\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"\") == \"NO\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n2 4 5 6 7\n8 7 6 5 4\n\"\"\") == '1\\n3\\n5\\n7\\n9\\n'\n\nassert solution(\"\"\"5\n1 2 3 4 5\n2 4 5 6 7\n8 7 6 5 4\n\"\"\") == '1\\n3\\n5\\n7\\n'\n\nassert solution(\"\"\"5\n1 2 3 4 5\n2 4 5 6 7\n8 7 6 5 4\n\"\"\") == '1\\n3\\n5\\n7\\n'\n\nassert solution(\"\"\"5\n1 2 3 4 5\n2 4 5 6 7\n8 7 6 5 4\n\"\"\") == '1\\n3\\n5\\n7\\n'\n\nassert solution(\"\"\"5\n1 2 3 4 5\n2 4 5 6 7\n8 7 6 5 4\n\"\"\") == '1\\n3\\n5\\n7\\n'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n1 2 3\") == \"-1\\n4\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n10 11 12\") == \"4\\n12\\n\"\nassert solution(\"1 2 3\\n1 2 3\") == \"4\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n10 11 12\") == \"4\\n12\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"4\\n12\\n7\\n9\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n2 4\\n4\\n1 3\\n\") == \"{1, 3, 5}\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"10\\n9\\n10\\n9\\n\") == \"{9}\"\nassert solution(\"2\\n1\\n1\\n\") == \"{1}\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\"\n",
        "num_ids_2": 50,
        "num_ids_4": 89
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2''') == '''3'''\nassert solution('''1 2''') == '''3'''\nassert solution('''1 1''') == '''2'''\nassert solution('''2 3''') == '''1'''\nassert solution('''9 9''') == '''8'''\n",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5''') == '2\\n4\\n6\\n8\\n'\nassert solution('''1\n1\n2\n2\n4\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15''') == '2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n'\nassert solution('''1\n2\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n''') == '2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n26\\n28\\n30\\n32\\n34\\n36\\n38\\n40\\n42\\n44\\n46\\n48\\n50\\n52\\n54\\n56\\n58\\n60\\n62\\n64\\n66\\n68\\n70\\n72\\n74\\n76\\n78\\n80\\n82\\n84\\n86\\n88\\n90\\n92\\n94\\n96\\n98\\n100\\n102\\n104\\n106\\n108\\n110\\n112\\n114\\n116\\n118\\n120\\n122\\n124\\n126\\n128\\n130\\n132\\n134\\n136\\n138\\n140\\n142\\n144\\n146\\n148\\n150\\n152\\n154\\n156\\n158\\n160\\n162\\n164\\n166\\n168\\n170\\n172\\n174\\n176\\n178\\n180\\n182\\n184\\n186\\n188\\n190\\n192\\n194\\n196\\n198\\n200\\n202\\n204\\n206\\n208\\n210\\n212\\n214\\n216\\n218\\n220\\n222\\n224\\n226\\n228\\n230\\n232\\n234\\n236\\n238\\n240\\n242\\n244\\n246\\n248\\n250\\n252\\n254\\n256\\n258\\n260\\n262\\n264\\n266\\n268\\n270\\n272\\n274\\n276\\n278\\n280\\n282\\n284\\n286\\n288\\n290\\n292\\n294\\n296\\n298\\n300\\n302\\n304\\n306\\n308\\n310\\n312\\n314\\n316\\n318\\n320\\n322\\n324\\n326\\n328\\n330\\n332\\n334\\n336\\n338\\n340\\n342\\n344\\n346",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n2\\n3\\n3\\n3\\n4\\n5\\n5\\n5\\n6\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n11\\n12\\n13\\n13\\n13\\n14\\n14\\n14\\n15\\n15\\n15\\n16\\n16\\n16\\n17\\n17\\n17\\n18\\n18\\n18\\n19\\n19\\n19\\n20\\n20\\n20\\n21\\n21\\n21\\n22\\n22\\n22\\n23\\n23\\n23\\n24\\n24\\n24\\n25\\n25\\n25\\n26\\n26\\n26\\n27\\n27\\n27\\n28\\n28\\n28\\n29\\n29\\n29\\n30\\n30\\n30\\n31\\n31\\n31\\n32\\n32\\n32\\n33\\n33\\n33\\n34\\n34\\n34\\n35\\n35\\n35\\n36\\n36\\n36\\n37\\n37\\n37\\n38\\n38\\n38\\n39\\n39\\n39\\n40\\n40\\n40\\n41\\n41\\n41\\n42\\n42\\n42\\n43\\n43\\n43\\n44\\n44\\n44\\n45\\n45\\n45\\n46\\n46\\n46\\n47\\n47\\n47\\n48\\n48\\n48\\n49\\n49\\n49\\n50\\n50\\n50\\n51\\n51\\n51\\n52\\n52\\n52\\n53\\n53\\n53\\n54\\n54\\n54\\n55\\n55\\n55\\n56\\n56\\n56\\n57\\n57\\n57\\n58\\n58\\n58\\n59\\n59\\n59\\n60\\n60\\n60\\n61\\n61\\n61\\n62\\n62\\n62\\n63\\n63\\n63\\n64\\n64\\n64\\n65\\n65\\n65\\n66\\n66\\n66\\n67\\n67\\n67\\n68\\n68\\n68\\n69\\n69\\n69\\n70\\n70\\n70\\n71\\n71\\n71\\n72\\n72\\n72\\n73\\n73\\n73\\n74\\n74\\n74\\n75\\n75\\n75\\n76\\n76\\n76\\n77\\n77\\n77\\n78\\n78\\n78\\n79\\n79\\n79\\n80\\n80\\n80\\n81\\n81\\n81\\n82\\n82\\n82\\n83\\n83\\n83\\n84\\n84\\n84\\n85\\n85\\n85\\n86\\n86\\n86\\n87\\n87\\n87\\n88\\n88\\n88\\n89\\n89\\n89\\n90\\n90\\n90\\n91\\n91\\n91\\n92\\n92\\n92\\n93\\n93\\n93\\n94\\n94\\n94\\n95\\n95\\n95\\n96\\n96\\n96\\n97\\n97\\n97\\n98\\n98\\n98\\n99\\n99\\n99\\n100\\n100\\n100\\n101\\n101\\n101\\n102\\n102\\n102\\n103\\n103\\n103\\n104\\n104\\n104\\n105\\n105\\n105\\n106\\n106\\n106\\n107\\n107\\n107\\n108\\n108\\n108\\n109\\n109\\n109\\n110\\n110\\n110\\n111\\n111\\n111\\n112\\n112\\n112\\n113\\n113\\n113\\n114\\n114\\n114\\n115\\n115\\n115\\n116\\n116\\n116\\n117\\n117\\n117\\n118\\n118\\n118\\n119",
        "num_ids_2": 1025,
        "num_ids_4": 1025
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n2 4 3 2\n5\"\"\") == \"\"\"3\n1 4\n\"\"\"\nassert solution(\"\"\"5\n2 4 3 2\n5\n1 2 3 4\n5\n2 4 3 2\n\"\"\") == \"\"\"1\n3\n4\n5\n1\n2\n\"\"\"\nassert solution(\"\"\"5\n2 4 3 2\n5\n2 4 3 2\n\"\"\") == \"\"\"3\n1 4\n\"\"\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n2 4 7 8 9\n2 4 11 12\"\"\") == \"\"\"-9 -5 -3 -1 0 1 2 3 4 5 6 7 8 9\"\"\", \"-9 -5 -3 -1 0 1 2 3 4 5 6 7 8 9\"\nassert solution(\"\"\"5\n2 4 7 8 9\n2 4 11 12\"\"\") == \"\"\"-9 -5 -3 -1 0 1 2 3 4 5 6 7 8 9\"\"\", \"-9 -5 -3 -1 0 1 2 3 4 5 6 7 8 9\"\nassert solution(\"\"\"6\n1 2 3 4 5 6\n1 2 3 6\"\"\") == \"\"\"-2 -3 -4 -5 -6\"\"\", \"-2 -3 -4 -5 -6\"\nassert solution(\"\"\"6\n1 2 3 4 5 6\n1 2 3 4 6\"\"\") == \"\"\"-2 -3 -4 -5 -6\"\"\", \"-2 -3 -4 -5 -6\"\nassert solution(\"\"\"6\n1 2 3 4 5 6\n1 2 3 4 5 6\"\"\") == \"\"\"-2 -3 -4 -5 -6\"\"\", \"-2 -3 -4 -5 -6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n2 4 3 1\n5\n2 4 11 3\"\"\") == \"\"\"-1\n4\n9\n11\n3\"\"\".strip())\n\nassert solution(\"\"\"1\n2\n3\n4\n5\"\"\".strip()) == \"\"\"-1\n-1\n-1\n2\n4\n5\"\"\".strip())\n\nassert solution(\"\"\"2\n1\n2\n3\n4\n5\"\"\".strip()) == \"\"\"-1\n-1\n3\n4\n5\"\"\".strip())\n\nassert solution(\"\"\"1\n1\n2\n3\n4\n5\"\"\".strip()) == \"\"1\n1\n3\n5\"\"\".strip())\n\nassert solution(\"\"\"2\n1\n2\n2\n3\n3\"\"\".strip()) == \"\"1\n2\n3\n\"\"\".strip())",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n4 8\\n4\\n') == '2\\n6\\n8\\n'\nassert solution('1\\n2\\n3\\n') == '1\\n3\\n'\nassert solution('2\\n4\\n3\\n') == '1\\n5\\n'\nassert solution('1\\n4\\n3\\n') == '1\\n3\\n'\nassert solution('2\\n4\\n3\\n') == '1\\n5\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(1.34)\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\"\"\") == \"40.00\"\nassert solution(\"\"\"3\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n91         8          Jason      3\n70         7          Glenn      4\n82         2          Fergus     5\n82         4          Kale      6\"\"\") == \"55.00\"\nassert solution(\"\"\"1\nID         MARKS      NAME       CLASS\n2          67         Theodore  6\n\"\"\") == \"21.67\"\nassert solution(\"\"\"0\nMARKS      CLASS      NAME       ID\n\"\"\") == \"0.00\"\nassert solution(\"\"\"7\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n6          70         Dorothy    3\n7          80         Glenn      4\n8          75         Wilson     2\n9          90         Andrei     8\n10         70         Marcus    1\"\"\") == \"70.00\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\nID         MARKS      NAME       CLASS\\n1          97         Raymond    7\\n2          50         Steven     4\\n3          91         Adrian     8\\n4          72         Stewart    5\\n5          80         Peter      6\\n\") == \"80.00\"\n\nassert solution(\"5\\nMARKS      CLASS      NAME       ID\\n92         2      Jack        5\\n89         2      Jill        9\\n55         4      JOE       2\\n97         2      Sam       10\\n\") == \"91.00\"\n\nassert solution(\"7\\nID         MARKS      NAME       CLASS\\n1          97         Raymond    7\\n2          50         Steven     4\\n3          91         Adrian     8\\n4          72         Stewart    5\\n5          80         Peter      6\\n6          75         Elbert    7\\n7          91         Sally      2\\n\") == \"81.00\"\n\nassert solution(\"7\\nMARKS      CLASS      NAME       ID\\n92         2      Jack        5\\n89         2      Jill        9\\n55         4      JOE       2\\n97         2      Sam       10\\n4          72         Stewart    5\\n6          80         Peter      6\\n7          75         Elbert    7\\n8          91         Sally      2\\n\") == \"81.00\"\n\nassert solution(\"7\\nMARKS      NAME       CLASS      ID\\n92         2      Jack        5\\n89         2      Jill        9\\n55         4      JOE       2\\n97         2      Sam       10\\n4          72         Stewart    5\\n6          80         Peter      6\\n7          75         Elbert    7\\n8          91         Sally      2\\n\") == \"81.00\"",
        "num_ids_2": 136,
        "num_ids_4": 331
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9''') == \"92.7\"\nassert solution('''2\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2''') == \"55.5\"\nassert solution('''5\nID         MARKS      NAME       CLASS\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n83         5          Glenn      4\n94         2          Fergus     5''') == \"77.0\"\nassert solution('''6\nID         MARKS      NAME       CLASS\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n83         5          Glenn      4\n95         2          Fergus     5\n91         6          Terence    7\n94         2          Jason      3\n76         6          Kelvin     8\n81         6          Sam       9''') == \"81.0\"\nassert solution('''7\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n83         5          Glenn      4\n95         2          Fergus     5\n91         6          Terence    7\n94         2          Jason      3\n76         6          Kelvin     8\n81         6          Sam       9\n94         2          Jason      3\n70         6          Kelvin     8\n82         6          Sam       9''') == \"79.0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '5',\n    'ID         MARKS      NAME       CLASS'\n    '1          97         Raymond    7'\n    '2          50         Steven     4'\n    '3          91         Adrian     9'\n    '4          72         Stewart    5'\n    '5          80         Peter      6'\n])) == '56.50'\n\nassert solution('\\n'.join([\n    '5',\n    'MARKS      NAME       CLASS'\n    '1          97         Raymond    7'\n    '2          50         Steven     4'\n    '3          91         Adrian     9'\n    '4          72         Stewart    5'\n    '5          80         Peter      6'\n])) == '56.50'\n\nassert solution('\\n'.join([\n    '5',\n    'Name       MARKS      Class      ID'\n    'Gia B.      98                11          1'\n    'Can B.      88                12          2'\n    'Gia B.      89                13          3'\n    'Can B.      90                14          4'\n    'Gia B.      91                15          5'\n])) == '88.25'\n\nassert solution('\\n'.join([\n    '5',\n    'ID         MARKS      NAME       CLASS'\n    '1          97         Raymond    7'\n    '2          50         Steven     4'\n    '3          91         Adrian     9'\n    '4          72         Stewart    5'\n    '5          80         Peter      6'\n])) == '86.50'\n\nassert solution('\\n'.join([\n    '5',\n    'MARKS      NAME       CLASS'\n    '1          97         Raymond    7'\n    '2          50         Steven     4'\n    '3          91         Adrian     9'\n    '4          72         Stewart    5'\n    '5          80         Peter      6'\n])) == '85.50'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nID         MARKS      NAME       CLASS\\n1          97         Raymond    7\\n2          50         Steven     4\\n3          91         Adrian     9\\n4          72         Stewart    5\\n5          80         Peter      6\\n6          75         Lauren     7') == '78.00'\n>>>>>>> master\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n''') == '80.00'\nassert solution('''\\\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n''') == '81.25'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\\n'.join([\n'5',\n'ID         MARKS      NAME       CLASS'\n'1          97         Raymond    7'\n'2          50         Steven     4'\n'3          91         Adrian     9'\n'4          72         Stewart    5'\n'5          80         Peter      6'\n])) == '40.57'\n=====Sample Input=====\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n4\n2\n2\n1\n2\n2\n\n=====Explanation=====\nHere,:\nN=5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n\nTotal students=5\nMARKS column has five marks.\nAverage of marks= 4.57\n\nHint:\nUse \\n as the column delimiter.\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a,b,c,d\\n1234567891011121314151617181920\\n1,2,3,4\\n\") == \"56.00\"\nassert solution(\"a,b,c,d\\n1234567891011121314151617181920\\n9,8,7,6\\n\") == \"54.33\"\nassert solution(\"a,b,c,d\\n1234567891011121314151617181920\\n5,4,3,2\\n\") == \"51.50\"\nassert solution(\"a,b,c,d\\n1234567891011121314151617181920\\n17,16,15,14\\n\") == \"11.67\"\nassert solution(\"a,b,c,d\\n1234567891011121314151617181920\\n1,2,3,4\\n\") == \"56.00\"\n",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['5','ID         MARKS      NAME       CLASS','1          97         Raymond    7','2          50         Steven     4','3          91         Adrian     9','4          72         Stewart    5','5          80         Peter      6'])) == '33.0'\nassert solution('\\n'.join(['5','MARKS','NAME','CLASS','ID'])) == '5\\n4\\n3\\n2\\n1'\nassert solution('\\n'.join(['5','1','2','3','4','5'])) == '3.0'\nassert solution('\\n'.join(['5','ID         MARKS      NAME       CLASS','1          97         Raymond    7','2          50         Steven     4','3          91         Adrian     9','4          72         Stewart    5','5          80         Peter      6'])) == '33.0'\nassert solution('\\n'.join(['5','MARKS','CLASS','ID'])) == '5\\n6\\n4\\n3\\n2'\n",
        "num_ids_2": 111,
        "num_ids_4": 212
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(17) == \"Weird\"\nassert solution(20) == \"Not Weird\"\nassert solution(25) == \"Weird\"\nassert solution(30) == \"Not Weird\"\nassert solution(40) == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\nassert solution(6) == 'Not Weird'\nassert solution(20) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Not Weird\"\nassert solution(\"12\") == \"Weird\"\nassert solution(\"32\") == \"Not Weird\"\nassert solution(\"8\") == \"Weird\"\nassert solution(\"24\") == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == \"Not Weird\"\nassert solution('7') == \"Weird\"\nassert solution('9') == \"Not Weird\"\nassert solution('20') == \"Weird\"\nassert solution('100') == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(15) == \"Not Weird\"\nassert solution(6) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(50) == \"Weird\"\nassert solution(48) == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(4) == \"Weird\"\nassert solution(3) == \"Not Weird\"\nassert solution(24) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(25) == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\nassert solution(6) == 'Not Weird'\nassert solution(7) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Not Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('10') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('<foo><bar/></foo>') == 2\nassert solution('<score>1</score><score>2</score>') == 4\nassert solution('<foo><bar/><bar/></foo>') == 2\nassert solution('<foo><bar/></foo>') == 0\nassert solution('<foo><bar/></foo>') == 0\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution(\n'''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'Example #1'\nassert solution('<feed xml:lang=\"en-US\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'Example #2'\nassert solution('<feed xml:lang=\"en-GB\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'Example #3'\nassert solution('<feed xml:lang=\"en-US\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'Example #4'\nassert solution('<feed xml:lang=\"en-US\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en-GB\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'Example #5'\n",
        "num_ids_2": 200,
        "num_ids_4": 402
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\n",
        "num_ids_2": 188,
        "num_ids_4": 376
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n    <title type=\"text\">HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-us\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-ca\">\\n    <title type=\"text\">HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en-gb\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\n",
        "num_ids_2": 201,
        "num_ids_4": 404
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\nassert solution('''<feed xml:lang='en'>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '2'\nassert solution('''<feed xml:lang='en'>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '1'\nassert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n</feed>''') == '0'\nassert solution('''<feed xml:lang='en'>\n</feed>''') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(stdin.splitlines()[1:])) == \"123\"\n>>>>>>> origin/master\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<author>\n    <name>Harshil</name>\n    </author>'\n    '<id>12345</id>'\n    '<title lang=\"en\">Algorithms</title>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<para xml:lang=\"en\">Programs are hard.</para>'\n    '<para xml:lang=\"en\">But I love Python.</para>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<author>\n    <name>Harshil</name>\n    </author>'\n    '<id>12345</id>'\n    '<title lang=\"en\">Algorithms</title>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<para xml:lang=\"en\">Programs are hard.</para>'\n    '<para xml:lang=\"en\">But I love Python.</para>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<author>\n    <name>Harshil</name>\n    </author>'\n    '<id>12345</id>'\n    '<title lang=\"en\">Algorithms</title>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<para xml:lang=\"en\">Programs are hard.</para>'\n    '<para xml:lang=\"en\">But I love Python.</para>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<author>\n    <name>Harshil</name>\n    </author>'\n    '<id>12345</id>'\n    '<title lang=\"en\">Algorithms</title>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<para xml:lang=\"en\">Programs are hard.</para>'\n    '<para xml:lang=\"en\">But I love Python.</para>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<author>'\n    '<name>Harshil</name>'\n    '</author>'\n    '<id>12345</id>'\n    '<title lang=\"en\">Algorithms</title>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<para xml:lang=\"en\">Programs are hard.</para>'\n    '<para xml:lang=\"en\">But I love Python.</para>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"7\", '7'\n\"\"\")\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"4\", '4'\n\"\"\")\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"0\", '0'\n\"\"\")\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"1\", '1'\n\"\"\")\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"4\", '4'\n\"\"\")\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n<title type=\"text/html\">Announcement</title>\\n<subtitle lang=\"en\">University of North Texas</subtitle>\\n<link type=\"text/html\" href=\"http://www.utexas.edu\"/>\\n<author>Huey</author>\\n<updated>2013-06-23T15:28:41</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n<title type=\"text/html\">Announcement</title>\\n<subtitle lang=\"en\">University of North Texas</subtitle>\\n<link type=\"text/html\" href=\"http://www.utexas.edu\"/>\\n<author>Huey</author>\\n<updated>2013-06-23T15:28:41</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n<title type=\"text/html\">Announcement</title>\\n<subtitle lang=\"en\">University of North Texas</subtitle>\\n<link type=\"text/html\" href=\"http://www.utexas.edu\"/>\\n<author>Huey</author>\\n<updated>2013-06-23T15:28:41</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n<title type=\"text/html\">Announcement</title>\\n<subtitle lang=\"en\">University of North Texas</subtitle>\\n<link type=\"text/html\" href=\"http://www.utexas.edu\"/>\\n<author>Huey</author>\\n<updated>2013-06-23T15:28:41</updated>\\n</feed>') == '6'\n",
        "num_ids_2": 203,
        "num_ids_4": 421
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.00000001 0.00000001 1.00000001 0.00000001\") == 45.0\nassert solution(\"0.00000001 0.00000001 0.00000001 1.00000001\") == 0.0\nassert solution(\"-0.00000001 0.00000001 0.00000001 1.00000001\") == 0.0\nassert solution(\"-0.00000001 0.00000001 1.00000001 0.00000001\") == -45.0\nassert solution(\"0.00000001 0.00000001 -0.00000001 1.00000001\") == 180.0\n",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n0.0 1.0 0.0\n1.0 1.0 0.0\n0.0 1.0 1.0\n''') == 90.0\nassert solution('''\n1.0 1.0 0.0\n0.5 0.5 0.0\n1.0 1.0 1.0\n''') == 60.0\nassert solution('''\n-1.0 1.0 0.0\n0.5 -0.5 0.0\n0.5 1.0 1.0\n''') == 57.0\nassert solution('''\n0.0 0.0 1.0\n1.0 1.0 0.0\n1.0 0.0 0.0\n''') == 43.19\nassert solution('''\n0.0 1.0 1.0\n-1.0 1.0 0.0\n0.0 1.0 0.0\n''') == 57.82\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0''') == '0.0'\n\nassert solution('''0 0 1\n1 0 0\n0 1 0''') == '30.0'\n\nassert solution('''0 0 1\n0 1 0\n0 1 0''') == '60.0'\n\nassert solution('''1 1 1\n1 1 0\n1 1 0''') == '45.0'\n'''\nimport sys\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom test_lib import assert_equals",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '0.00000'\nassert solution(\n    '1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '90.00000'\nassert solution(\n    '0 1 0\\n0 1 0\\n0 1 0\\n0 1 0') == '45.00000'\nassert solution(\n    '0.5 0.5 0\\n0.5 0.5 0\\n0.5 0.5 0\\n0.5 0.5 0') == '45.00000'\nassert solution(\n    '0.5 0.5 0\\n-0.5 0.5 0\\n0.5 0.5 0\\n0.5 0.5 0') == '-135.00000'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0') == '0.0'\nassert solution('1 1 1') == '45.0'\nassert solution('1 1 0') == '60.0'\nassert solution('-3.0 4.0 0') == '54.53'\nassert solution('-3 3 -3') == '45.56'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1.1 1.1 1.1') == '0.0'\nassert solution('1.0 1.0 1.0') == '45.0'\nassert solution('0.0 0.0 1.0') == '90.0'\nassert solution('0.0 1.0 0.0') == '-45.0'\nassert solution('1.0 2.0 3.0') == '60.0'\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0') == '0.00000'\nassert solution('1 1 1') == '90.00000'\nassert solution('0 0 1') == '180.00000'\nassert solution('1 1 0') == '-90.00000'\nassert solution('0 1 1') == '270.00000'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1 1') == '45.0'\nassert solution('1 2 1 1') == '60.0'\nassert solution('-1 -2 1 1') == '-45.0'\nassert solution('1 -2 1 -1') == '-60.0'\nassert solution('1 1 -1 1') == '90.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1\") == \"90\"\nassert solution(\"1 0 1\") == \"0\"\nassert solution(\"0 1 1\") == \"45\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 0 -1\") == \"-45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(('0 0 0', '1 0 0', '0 1 0', '1 1 0')) == '60.00'\nassert solution(('0 0 0', '1 0 0', '0 1 0', '1 1 0')) == '0.00'\nassert solution(('0 0 0', '1 1 1', '1 1 1', '0 1 1')) == '45.0'\nassert solution(('0 0 0', '-1 0 0', '0 -1 0', '0 0 -1')) == '45.0'\nassert solution(('0 0 0', '0 -1 0', '0 -1 0', '0 0 -1')) == '45.0'\n",
        "num_ids_2": 62,
        "num_ids_4": 127
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Hello World\") == 0\nassert solution(\"abc\") == 0\nassert solution(\"abracadabra\") == 2\nassert solution(\"z\") == 1\nassert solution(\"eio\") == 2\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcd') == 0\nassert solution('efgh') == 1\nassert solution('cwtu') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 0\nassert solution('defghijklmnopqrstuvwxyz') == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 49
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a a a b b c\") == 1\nassert solution(\"a b c a\") == 0\nassert solution(\"z\") == 0\nassert solution(\"a a a a a b b c\") == 5\nassert solution(\"a a a a a a b b c\") == 10\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Hello World') == 5\nassert solution('a') == 1\nassert solution('ad') == 2\nassert solution('b') == 1\nassert solution('a b c') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('dummy') == 0\nassert solution('a') == 1\nassert solution('aa') == 2\nassert solution('aaa') == 4\nassert solution('aaaa') == 8\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\nhello\nworld''') == 3\nassert solution('''2\nhoney''') == 1\nassert solution('''2\nhoney''') == 1\nassert solution('''2\nhoney\na''') == 1\nassert solution('''2\nhoney\na\n''') == 1\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(2, \"e i o u\")') == 2\nassert solution('(4, \"hello world\")') == 1\nassert solution('(8, \"hacker rank\")') == 0\n\n=====Sample Input=====\n\n4\nhacker\nRank\nRank\nRank\nRank\n\n=====Sample Output=====\n\n0\n0\n0\n1\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nhi\nhello\ngoodbye\n''') == '3\\n2\\n2\\n1'\nassert solution('''1\nl\nll\nlll\nllll\nllllllllll\n''') == '1\\n1\\n1\\n1\\n5'\nassert solution('''4\nmy\nmy\nmy\nmy\n''') == '3\\n3\\n3\\n3'\nassert solution('''10\naaa\naaaa\naaaa\naaaa\naaaa\naaaaa\naaaaaa\naaaaaaa\naaaaaaaaaa\naaaaaaaaaaaa\naaaaaaaaaaaaa\naaaaaaaaaaaaaa\n''') == '35\\n7\\n9\\n10\\n5'\nassert solution('''1\nh\nh\nh\nh\n''') == '2\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Hello world\") == 0\nassert solution(\"He is 123 man\") == 2\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == 169\nassert solution(\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\") == 0\nassert solution(\"\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 79
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"bbbbb\") == \"0\"\nassert solution(\"ccc\") == \"0\"\nassert solution(\"ccccc\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"MDLXXII\") == True\nassert solution(\"MDLXXVI\") == False\nassert solution(\"MDL\") == False\nassert solution(\"MCDL\") == True\nassert solution(\"XCV\") == False\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == False\nassert solution(\"a\") == False\nassert solution(\"IV\") == True\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"MDCLXVI\") == True\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('VII') == True\nassert solution('XXI') == True\nassert solution('I') == True\nassert solution('MCMLXXXIII') == True\nassert solution('MMMM') == False\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"XIV\") == True\nassert solution(\"XXVII\") == False\nassert solution(\"MMMCMLXXXIII\") == True\nassert solution(\"MMLX\") == False\nassert solution(\"DCXXI\") == False\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"X\") == False\nassert solution(\"XX\") == False\nassert solution(\"C\") == False\nassert solution(\"MCDLXX\") == False\nassert solution(\"MMXIX\") == False\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('XCV') == True\nassert solution('CDXXI') == True\nassert solution('MMMCCCLXXXVIII') == True\nassert solution('MMMDCCCLXXXVIII') == False\nassert solution('MMMMDCCCLXXXVIII') == False\n",
        "num_ids_2": 19,
        "num_ids_4": 47
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"MMMCMXCIX\") == True\nassert solution(\"MMMM\") == False\nassert solution(\"M\") == False\nassert solution(\"VV\") == False\nassert solution(\"CX\") == True\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('MCDLXVI') == True\nassert solution('MMCDLXVI') == False\nassert solution('MCMLXXXIX') == True\nassert solution('MCMXCIX') == False\nassert solution('MCDLVII') == True\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'False'\nassert solution('I') == 'True'\nassert solution('V') == 'True'\nassert solution('X') == 'False'\nassert solution('XL') == 'False'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"II\") == True\nassert solution(\"MCM\") == True\nassert solution(\"III\") == True\nassert solution(\"MMMCM\") == True\nassert solution(\"MMDCCLXXIV\") == False\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\\n\".join([\"+91 987654 3210\", \"+91 9876 543210\", \"+919 1234567890\", \"07911321112\"])) == \"+91 987654 3210\\n+91 9876 543210\\n+919 1234567890\\n07911321112\"\n=====Sample Input=====\n3\n+91 9876543210\n91 9876 543210\n+919 1234567890\n07911321112\n+91 9876543211\n+91 9876543212\n+919 1234567899\n\nOutput:\n+91 9876543210\n+91 9876 543210\n+919 1234567890\n+919 1234567899\n+91 9876543211\n+91 9876543212\n'''\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(stdin.splitlines())) == '+91 xxxxx xxxxx\\n+91 xxxxx xxxxx'\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n+91 1234 5678 9012 3456\n+91 9727 3781 9876 5432\n+91 9784 12345 6789 9090\n+91 9876 4567 8765 4321\n+91 9098 7896 4510 7897\n+91 9098 7897 87098 5678\n+91 9876 5678 4510 7897\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7890\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7897\n\"\"\") == \"\"\"\\\n+91 1234 5678 9012\n+91 9727 3781 9876\n+91 9784 12345 6789\n+91 9876 4567 8765\n+91 9098 7896 4510\n+91 9098 7897 87098\n+91 9098 7897 857098\n+91 9876 5678 4510\n+91 9876 78945 109876\n+91 9876 78945 109876\n+91 9876 5678 4510\n\"\"\"\n\nassert solution(\"\"\"\\\n+91 1234 5678 9012 3456\n+91 9727 3781 9876 5432\n+91 9784 12345 6789 9090\n+91 9876 4567 8765 4321\n+91 9098 7896 4510 7897\n+91 9098 7897 87098 5678\n+91 9876 5678 4510 7897\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7890\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7897\n\"\"\") == \"\"\"\\\n+91 1234 5678 9012\n+91 9727 3781 9876\n+91 9784 12345 6789\n+91 9876 4567 8765\n+91 9098 7896 4510\n+91 9098 7897 857098\n+91 9876 5678 4510\n+91 9876 78945 109876\n+91 9876 78945 109876\n+91 9876 5678 4510\n\"\"\"\n\nassert solution(\"\"\"\\\n+91 1234 5678 9012 3456\n+91 9727 3781 9876 5432\n+91 9784 12345 6789 9090\n+91 9876 4567 8765 4321\n+91 9098 7896 4510 7897\n+91 9098 7897 87098 5678\n+91 9876 5678 4510 7897\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7890\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7897\n\"\"\") == \"\"\"\\\n+91 1234 5678 9012\n+91 9727 3781 9876\n+91 9784 12345 6789\n+91 9876 4567 8765\n+91 9098 7896 4510\n+91 9098 7897 857098\n+91 9876 5678 4510\n+91 9876 78945 109876\n+91 9876 78945 109876\n+91 9876 5678 4510\n\"\"\"\n\nassert solution(\"\"\"\\\n+91 1234 5678 9012 3456\n+91 9727 3781 9876 5432\n+91 9784 12345 6789 9090\n+91 9876 4567 8765 4321\n+91 9098 7896 4510 7897\n+91 9098 7897 87098 5678\n+91 9876 5678 4510 7897\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7890\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7897\n\"\"\") == \"\"\"\\\n+91 1234 5678 9012\n+91 9727 3781 9876\n+91 9784 12345 6789\n+91 9876 4567 8765\n+91 9098 7896 4510\n+91 9098 7897 857098\n+91 9876 5678 4510\n+91 9876 78945 109876\n+91 9876 78945 109876\n+91 9876 5678 4510\n\"\"\"\n\nassert solution(\"\"\"\\\n+91 1234 5678 9012 3456\n+91 9727 3781 9876 5432\n+91 9784 12345 6789 9090\n+91 9876 4567 8765 4321\n+91 9098 7896 4510 7897\n+91 9098 7897 87098 5678\n+91 9876 5678 4510 7897\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7890\n+91 9876 78945 109876 5678\n+91 9876 5678 4510 7897\n\"\"\") == \"\"\"\\\n+91 1234 5678 9012\n+91 9727 3781 9876\n+91 9784 12345 6789\n+91 9876 4567 8765\n+91 9098 7896 4510\n+91 9098 7897 857098\n+91 9876 5678 4510\n+91 9876 78945 109876\n+91 9876 78945 109876\n+91 9876 5678 4510\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n91\n91\n91\n''') == '''+91 91 91 91\n'''\n\nassert solution('''\n91\n123\n\n''') == '''+91 123\n'''\n\nassert solution('''\n91\n91\n91\n91\n\n''') == '''+91 91 91 91\n'''\n\nassert solution('''\n91\n91\n\n''') == '''+91 91\n'''\n\nassert solution('''\n91\n\n''') == '''+91\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"+91 xxxxx xxxxx\") == \"+91 xxxxx xxxxx\"\nassert solution(\"+91 9xxxx xxxxx\") == \"+91 9xxxx xxxxx\"\nassert solution(\"+91 91xxxx xxxxx\") == \"+91 91xxxx xxxxx\"\nassert solution(\"+91 91 9xxxx xxxxx\") == \"+91 91 9xxxx xxxxx\"\nassert solution(\"+91 9 9xxxx xxxxx\") == \"+91 9 9xxxx xxxxx\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+91 9999999999') == '+91 9999999999'\nassert solution('+91 91 1234 5678') == '+91 91 1234 5678'\nassert solution('+91919 91919 91919') == '+91919 91919 91919'\nassert solution('91919 91919 91919') == '+91919 91919 91919'\nassert solution('+91919 91919 91919') == '+91919 91919 91919'\n",
        "num_ids_2": 42,
        "num_ids_4": 97
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n=====Sample Input=====\n3\n07895462130\n919875641230\n9195969878\n\n=====Sample Output=====\n+91 78954 62130\n+91 91959 69878\n+91 919875 641230",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('+91 9xxxx xxxxx') == '+91 9xxxx xxxxx'\nassert solution('+91 91xxxx xxxxx') == '+91 91xxxx xxxxx'\nassert solution('+91 9xxxx xxxxx') == '+91 9xxxx xxxxx'\nassert solution('+91 91xxxx xxxxx') == '+91 91xxxx xxxxx'\nassert solution('+91 9xxxx xxxxx') == '+91 9xxxx xxxxx'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n919102100\n919094696\n0995557890\n''') == '''+91 919102100\n+91 919094696\n+91 995557890\n'''\nassert solution('''\n891012345678\n891012345678\n891012345678\n''') == '''+91 891012345678\n+91 891012345678\n+91 891012345678\n'''\nassert solution('''\n8989053543\n889813543\n-989813543\n-8989053543\n''') == '''+91 8989053543\n+91 89813543\n-8989053543\n-8989053543\n'''\nassert solution('''\n919102100\n919094696\n0995557890\n''') == '''+91 919102100\n+91 919094696\n+91 995557890\n'''\nassert solution('''\n8989053543\n889813543\n-989813543\n-8989053543\n''') == '''+91 8989053543\n+91 89813543\n-8989053543\n-8989053543\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n''') == '''+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n'''\n\nassert solution('''\n+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n''') == '''+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n'''\nassert solution('''\n+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n''') == '''+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n'''\nassert solution('''\n+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n''') == '''+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n'''\nassert solution('''\n+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n''') == '''+91 9876543210\n+91 9876543211\n+91 9876543212\n+91 9876543213\n+91 9876543214\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''alpha 20 30 40\nbeta 30 50 70\n''') == '50.00'\nassert solution(\n'''alpha 20 30 40\nbeta 30 50 70\n''') == '50.00'\nassert solution(\n'''alpha 20 30 40\nalpha 30 40 50\n''') == '37.50'\nassert solution(\n'''alpha 20 30 40\nalpha 30 40 50\n''') == '36.00'\nassert solution(\n'''alpha 20 30 40\nbeta 30 40 50\n''') == '37.50'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('alpha\\nbeta\\nalpha\\ngamma\\nalpha\\nbeta\\n') == '50.00'\nassert solution('alpha\\nbeta\\ngamma\\nalpha\\nbeta\\n') == '50.00'\nassert solution('alpha\\nbeta\\ngamma\\nalpha\\nbeta\\n') == '50.00'\nassert solution('alpha\\nbeta\\ngamma\\nalpha\\nbeta\\n') == '50.00'\nassert solution('alpha\\nbeta\\ngamma\\nalpha\\nbeta\\n') == '50.00'\n",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('stdin') == '50'\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        \"\"\"\n        alpha\n        90 90 90\n        beta\n        80 100 90\n        alpha\n        \"\"\"\n        ) == 90\nassert solution(\n        \"\"\"\n        alpha\n        20 30 40\n        beta\n        30 50 70\n        alpha\n        \"\"\"\n        ) == 35.5\n\"\"\"\n=====Sample Input=====\n5\nalpha 30 90\nbeta 70 100\nalpha 70 90\nbeta 90 90\nalpha\n\n=====Sample Output=====\n70\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\n\nassert solution(\"alpha\\nbeta\\nalpha\\ngamma\\n\") == \"62.00\"\nassert solution(\"alpha\\nbeta\\nalpha\\ngamma\\n\") == \"62.00\"\nassert solution(\"alpha\\nbeta\\nalpha\\ngamma\\n\") == \"62.00\"\nassert solution(\"alpha\\nbeta\\nalpha\\ngamma\\n\") == \"62.00\"\n",
        "num_ids_2": 31,
        "num_ids_4": 79
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '50.00'\n\n>>>>>>> origin/master\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('marks key:value pairs are\\nalpha: [20,30,40]\\nb: [30,50,70]\\nquery_name = \"beta\"') == 50.00\nassert solution('marks key:value pairs are\\nalpha: [20,30,40]\\nb: [30,50,70]\\nquery_name = \"alpha\"') == 20.00\nassert solution('marks key:value pairs are\\nalpha: [20,30,40]\\nb: [30,50,70]\\nquery_name = \"delta\"') == 0.00\n'''\n",
        "num_ids_2": 90,
        "num_ids_4": 136
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\nalpha: 30\nalpha: 40\nalpha: 60\nbeta: 50\nbeta: 70\n''') == '50.00'\nassert solution('''\nalpha: 30\nalpha: 40\nalpha: 60\nbeta: 50\nbeta: 70\n''') == '50.00'\nassert solution('''\nalpha: 30\nalpha: 40\nalpha: 60\nalpha: 70\nbeta: 50\n''') == '50.00'\nassert solution('''\nalpha: 30\nalpha: 40\nalpha: 60\nalpha: 70\nbeta: 50\n''') == '50.00'\nassert solution('''\nalpha: 30\nalpha: 40\nalpha: 60\nbeta: 50\nbeta: 70\n''') == '50.00'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\n\nassert solution(\"20\\n\") == \"15.00\"\nassert solution(\"15\\n\") == \"10.00\"\nassert solution(\"15\\n30\\n50\\n70\") == \"40.00\"\nassert solution(\"15\\n30\\n50\\n70\\n\") == \"40.00\"\n",
        "num_ids_2": 21,
        "num_ids_4": 56
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\n\nassert solution('\\n') == ''\n\nassert solution('\\n\\n') == ''\n\nassert solution('\\n\\n\\n') == ''\n\nassert solution('\\n\\n\\n\\n') == ''",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"adddfddd\") == \"\"\nassert solution(\"daddasddd\") == \"\"\nassert solution(\"adddfdddasddd\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 39
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\nCesar Neri\\nSacha Pinto\\nJosiah Cavalcanti\\nIsla Esquivel\\nAisha Mahmood\\n') == 'Mr. Cesar Neri\\nMs. Aisha Mahmood\\nMr. Josiah Cavalcanti\\nMs. Isla Esquivel\\nMr. Sacha Pinto\\nMs. Josiah Cavalcanti\\n'\n\nassert solution('5\\nJane\\nCesar Neri\\nSacha Pinto\\nJosiah Cavalcanti\\nIsla Esquivel\\nAisha Mahmood\\n') == 'Ms. Aisha Mahmood\\nMs. Josiah Cavalcanti\\nMs. Isla Esquivel\\nMr. Sacha Pinto\\nMr. Josiah Cavalcanti\\nMr. Cesar Neri\\n'\n\nassert solution('3\\nAlice\\nGeorge\\nTom\\n') == 'Ms. George\\nMr. Tom\\nMr. Alice\\n'\nassert solution('5\\nCesar Neri\\nSacha Pinto\\nJosiah Cavalcanti\\nIsla Esquivel\\nAisha Mahmood\\n') == 'Ms. Aisha Mahmood\\nMr. Josiah Cavalcanti\\nMr. Isla Esquivel\\nMr. Sacha Pinto\\nMr. Cesar Neri\\n'",
        "num_ids_2": 197,
        "num_ids_4": 320
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 36
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\nGeorge OShaughness\\nMichael Torg\\nBenjamin S. White\\nSue Kay\\n') == 'Ms. Sue Kay\\nMs. Michael Torg\\nMr. George OShaughness\\nMr. Benjamin S. White'\n\n=====Note=====\nTest-cases are expected to be submitted in the file /home/bonzo/Documents/bonzo-20160216-mta/MTA-2/MTA_2_H/bonzo_solutions/solutions/1.\n\nNote:\nTest-cases are separated by an empty line.\n\n=====Sample Inputs=====\n10\nGeorge OShaughness\nMichael Torg\nBenjamin S. White\nSue Kay\nStephen Crichton\nHenry Davids\nSusan Brown\nMary George\nErin Roseth\nIvan Clyde\nIbrahim Ahmed\n\n=====Sample Outputs=====\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMs. Susan Brown\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\nMr. George OShaughness\n\nNote:\nExpected Outputs are compared to actual outputs in the order they appear in the sample output.\n\n=====Alternate Solution=====\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\nHarry Potter\\nRon Weasley') == '\\nHarry Potter\\nRon Weasley'\nassert solution('3\\nHarry Potter\\nRon Weasley\\nHermione Granger\\nGinny Weasley\\nMinerva McGonagall\\nSeverus Snape\\nTom Riddle\\nDraco Malfoy\\n\\n') == '\\nHarry Potter\\nRon Weasley\\nHermione Granger\\nGinny Weasley\\nMinerva McGonagall\\nSeverus Snape\\nDraco Malfoy\\n\\n'\nassert solution('4\\nGinny Weasley\\nRubeus Hagrid\\nNeville Longbottom\\nNeville Longbottom\\n\\n') == '\\nGinny Weasley\\nRubeus Hagrid\\nNeville Longbottom\\nNeville Longbottom\\n\\n'\nassert solution('9\\nCindy Sandwell\\nLucy Wood\\nTom DeCleel\\nJim Joyce\\nEric Roberts\\nMartha Stewart\\nMartha Stewart\\nHedwig Finn\\nJ.K. Rowling\\n\\n') == '\\nCindy Sandwell\\nLucy Wood\\nTom DeCleel\\nJim Joyce\\nEric Roberts\\nMartha Stewart\\nHedwig Finn\\nJ.K. Rowling\\n\\n'\nassert solution('6\\nDraco Malfoy\\nHarry Potter\\nRon Weasley\\nHermione Granger\\nGinny Weasley\\nMinerva McGonagall\\nSeverus Snape\\nTom Riddle\\n\\n') == '\\nDraco Malfoy\\nHarry Potter\\nRon Weasley\\nHermione Granger\\nGinny Weasley\\nMinerva McGonagall\\nSeverus Snape\\nTom Riddle\\n\\n'\n",
        "num_ids_2": 121,
        "num_ids_4": 298
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nHarry\n37\n37\n11\nM\n''') == '''\nMr. Harry\nMs. 37\nMr. 37\nMs. 11\nMr. 11\n'''\n\nassert solution('''3\nJoshua\n19\n18\nM\n''') == '''\nMs. 18\nMr. 19\nMs. 19\n'''\n\nassert solution('''6\nHarry\n37\n37\n11\nM\nVinay\n19\n''') == '''\nMs. 37\nMr. 11\nMs. 19\nMr. 19\nMs. 18\nMr. 37\n'''\n\nassert solution('''11\nJoshua\n19\n18\nM\n''') == '''\nMs. 18\nMr. 19\nMs. 19\nMr. 18\nMs. 37\nMr. 11\nMs. 19\nMr. 19\n'''\n\nassert solution('''100\nLuky\n1\n1\nM\n''') == '''\nMs. 1\nMr. 1\nMs. 1\nMr. 1\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\nSara 45 M\nJohn 32 M\nKaren 25 F\nKevin 26 M\nKobi 19 M\n''') == \\\n'''\nMs. Kobi\nMr. Sara\nMs. John\nMs. Karen\nMr. Kevin\n'''\n\nassert solution('''\n4\nMike Thomson 20 M\nRobert Bustle 32 M\nAndria Bustle 30 F\nChristopher Columbus 30 M\n''') == \\\n'''\nMr. Michael Scott\nMr. Andria Bustle\nMr. Christopher Columbus\nMs. Andria Bustle\nMs. Christopher Columbus\nMs. Kofi Ben David\n'''\n\nassert solution('''\n5\nHarry\n37\nBerry\n37\nTina\n37\n''') == \\\n'''\nMr. Harry\nMr. Berry\nMr. Tina\nMs. Berry\nMs. Tina\n'''\n\nassert solution('''\n5\nHarry\n37\nBerry\n37\nTina\n37\n''') == \\\n'''\nMr. Harry\nMr. Berry\nMr. Tina\nMs. Berry\nMs. Tina\n'''\n\nassert solution('''\n5\nAlpha\n37\nBeta\n37\nGamma\n37\n''') == \\\n'''\nMs. Alpha\nMs. Beta\nMs. Gamma\nMr. Alpha\nMr. Beta\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AlexIS\") == \"\"\nassert solution(\"JohnDoe\") == \"Mr. John Doe\"\nassert solution(\"MikeT\") == \"Ms. Mike T\"\nassert solution(\"AliceJones\") == \"Ms. Alice Jones\"\n",
        "num_ids_2": 16,
        "num_ids_4": 45
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"2\\n1\\n\") == \"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 2 3''') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\n'''\n'''\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 2 3''') == \"[(0, 0, 1), (0, 1, 0), (0, 2, 1), (1, 0, 2), (1, 1, 1), (1, 2, 0), (2, 0, 0), (2, 1, 1)]\"\n'''\n\nassert solution('''1 1 2 3''') == \"[(0, 0, 1), (0, 1, 0), (0, 2, 1), (1, 0, 2), (1, 1, 1), (1, 2, 0), (2, 0, 0), (2, 1, 1)]\"\nassert solution('''1 2 2 1''') == \"[(0, 0, 0), (1, 0, 1), (2, 0, 0), (0, 1, 0), (0, 2, 1), (1, 0, 2), (1, 1, 1), (1, 2, 0), (2, 0, 0), (2, 1, 1)]\"\nassert solution('''1 2 3 4''') == \"[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0)]\"\nassert solution('''1 3 4 5''') == \"[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (0, 1, 0), (1, 1, 0), (2, 1, 0), (3, 1, 0), (0, 2, 0), (1, 2, 0), (2, 2, 0), (3, 2, 0), (0, 3, 0), (1, 3, 0), (2, 3, 0), (3, 3, 0), (0, 0, 1), (1, 0, 1), (2, 0, 1), (3, 0, 1), (0, 1, 1), (1, 1, 1), (2, 1, 1), (3, 1, 1), (0, 2, 1), (1, 2, 1), (2, 2, 1), (3, 2, 1), (0, 3, 1), (1, 3, 1), (2, 3, 1), (3, 3, 1), (0, 0, 2), (1, 0, 2), (2, 0, 2), (3, 0, 2), (0, 1, 2), (1, 1, 2), (2, 1, 2), (3, 1, 2), (0, 2, 2), (1, 2, 2), (2, 2, 2), (3, 2, 2), (0, 3, 2), (1, 3, 2), (2, 3, 2), (3, 3, 2)]\"\n",
        "num_ids_2": 142,
        "num_ids_4": 354
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 0\") == [\"0 0 0 0\", \"0 0 0 1\", \"0 0 0 2\", \"0 0 1 0\", \"0 0 1 1\", \"0 0 1 2\", \"0 0 2 0\", \"0 0 2 1\", \"0 0 2 2\", \"0 1 0 0\", \"0 1 0 1\", \"0 1 0 2\", \"0 1 1 0\", \"0 1 1 1\", \"0 1 1 2\", \"0 1 2 0\", \"0 1 2 1\", \"0 1 2 2\", \"0 2 0 0\", \"0 2 0 1\", \"0 2 0 2\", \"0 2 1 0\", \"0 2 1 1\", \"0 2 1 2\", \"0 2 2 0\", \"0 2 2 1\", \"0 2 2 2\"]\nassert solution(\"0 0 0 0\") == [\"0 0 0 0\", \"0 0 0 1\", \"0 0 0 2\", \"0 0 1 0\", \"0 0 1 1\", \"0 0 1 2\", \"0 0 2 0\", \"0 0 2 1\", \"0 0 2 2\", \"0 0 3 0\", \"0 0 3 1\", \"0 0 3 2\", \"0 0 4 0\", \"0 0 4 1\", \"0 0 4 2\", \"0 0 5 0\", \"0 0 5 1\", \"0 0 5 2\", \"0 0 6 0\", \"0 0 6 1\", \"0 0 6 2\", \"0 0 7 0\", \"0 0 7 1\", \"0 0 7 2\", \"0 0 8 0\", \"0 0 8 1\", \"0 0 8 2\", \"0 0 9 0\", \"0 0 9 1\", \"0 0 9 2\", \"0 1 0 0\", \"0 1 0 1\", \"0 1 0 2\", \"0 1 0 3\", \"0 1 0 4\", \"0 1 0 5\", \"0 1 0 6\", \"0 1 0 7\", \"0 1 0 8\", \"0 1 0 9\", \"0 1 1 0\", \"0 1 1 1\", \"0 1 1 2\", \"0 1 1 3\", \"0 1 1 4\", \"0 1 1 5\", \"0 1 1 6\", \"0 1 1 7\", \"0 1 1 8\", \"0 1 1 9\", \"0 1 2 0\", \"0 1 2 1\", \"0 1 2 2\", \"0 1 2 3\", \"0 1 2 4\", \"0 1 2 5\", \"0 1 2 6\", \"0 1 2 7\", \"0 1 2 8\", \"0 1 2 9\", \"0 1 3 0\", \"0 1 3 1\", \"0 1 3 2\", \"0 1 3 3\", \"0 1 3 4\", \"0 1 3 5\", \"0 1 3 6\", \"0 1 3 7\", \"0 1 3 8\", \"0 1 3 9\", \"0 1 4 0\", \"0 1 4 1\", \"0 1 4 2\", \"0 1 4 3\", \"0 1 4 4\", \"0 1 4 5\", \"0 1 4 6\", \"0 1 4 7\", \"0 1 4 8\", \"0 1 4 9\", \"0 1 5 0\", \"0 1 5 1\", \"0 1 5 2\", \"0 1 5 3\", \"0 1 5 4\", \"0 1 5 5\", \"0 1 5 6\", \"0 1 5 7\", \"0 1 5 8\", \"0 1 5 9\", \"0 1 6 0\", \"0 1 6 1\", \"0 1 6 2\", \"0 1 6 3\", \"0 1 6 4\", \"0 1 6 5\", \"0 1 6 6\", \"0 1 6 7\", \"0 1 6 8\", \"0 1 6 9\", \"0 1 7 0\", \"0 1 7 1\", \"0 1 7 2\", \"0 1 7 3\", \"0 1 7 4\", \"0 1 7 5\", \"0 1 7 6\", \"0 1 7 7\", \"0 1 7 8\", \"0 1 7 9\", \"0 1 8 0\", \"0 1 8 1\", \"0 1 8 2\", \"0 1 8 3\", \"0 1 8 4\", \"0 1 8 5\", \"0 1 8 6\", \"0 1 8 7\", \"0 1 8 8\", \"0 1 8 9\", \"0 1 9 0\", \"0 1 9 1\", \"0 1 9 2\", \"0 1 9 3\", \"0 1 9 4\", \"0 1 9 5\", \"0 1 9 6\", \"0 1 9 7\", \"0 1 9 8\", \"0 1 9 9\"]\nassert solution(\"0 0 0 1\") == [\"0 0 0 0\", \"0 0 0 1\", \"0 0 0 2\", \"0 0 1 0\", \"0 0 1 1\", \"0 0 1 2\", \"0 0 2 0\", \"0 0 2 1\", \"0 0 2 2\", \"0 1 0 0\", \"0 1 0 1\", \"0 1 0 2\", \"0 1 1 0\", \"0 1 1 1\", \"0 1 1 2\", \"0 1 2 0\", \"0 1 2 1\", \"0 1 2 2\", \"0 2 0 0\", \"0 2 0 1\", \"0 2 0 2\", \"0 2 1 0\", \"0 2 1 1\", \"0 2 1 2\", \"0 2 2 0\", \"0 2 2 1\", \"0 2 2 2\"]\nassert solution(\"0 0 1 1\") == [\"0 0 1 1\", \"0 0 1 2\", \"0 0 2 0\", \"0 0 2 1\", \"0 0 2 2\", \"0 0 3 0\", \"0 0 3 1\", \"0 0 3 2\", \"0 0 4 0\", \"0 0 4 1\", \"0 0 4 2\", \"0 0 5 0\", \"0 0 5 1\", \"0 0 5 2\", \"0 0 6 0\", \"0 0 6 1\", \"0 0 6 2\", \"0 0 7 0\", \"0 0 7 1\", \"0 0 7 2\", \"0 0 8 0\", \"0 0 8 1\", \"0 0 8 2\", \"0 0 9 0\", \"0 0 9 1\", \"0 0 9 2\", \"0 0 10 0\", \"0 0 10 1\", \"0 0 10 2\", \"0 0 11 0\", \"0 0 11 1\", \"0 0 11 2\", \"0 0 12 0\", \"0 0 12 1\", \"0 0 12 2\", \"0 0 13 0\", \"0 0 13 1\", \"0 0 13 2\", \"0 1 0 0\", \"0 1 0 1\", \"0 1 0 2\", \"0 1 0 3\", \"0 1 0 4\", \"0 1 0 5\", \"0 1 0 6\", \"0 1 0 7\", \"0 1 0 8\", \"0 1 0 9\", \"0 1 0 10\", \"0 1 0 11\", \"0 1 0 12\", \"0 1 0 13\", \"0 1 1 0\", \"0 1 1 1\", \"0 1 1 2\", \"0 1 1 3\", \"0 1 1 4\", \"0 1 1 5\", \"0 1 1 6\", \"0 1 1 7\", \"0 1 1 8\", \"0 1 1 9\", \"0 1 1 10\", \"0 1 1 11\", \"0 1 1 12\", \"0 1 1 13\", \"0 1 2 0\", \"0 1 2 1\", \"0 1 2 2\", \"0 1 2 3\", \"0 1 2 4\", \"0 1 2 5\", \"0 1 2 6\", \"0 1 2 7\", \"0 1 2 8\", \"0 1 2 9\", \"0 1 2 10\", \"0 1 2 11\", \"0 1 2 12\", \"0 1 2 13\", \"0 1 3 0\", \"0 1 3 1\", \"0 1 3 2\", \"0 1 3 3\", \"0 1 3 4\", \"0 1 3 5\", \"0 1 3 6\", \"0 1 3 7\", \"0 1 3 8\", \"",
        "num_ids_2": 962,
        "num_ids_4": 1679
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 3 4''') == '[0, 0, 0]\\n[0, 0, 1]\\n[0, 1, 0]\\n[0, 1, 1]\\n[0, 2, 0]\\n[0, 2, 1]\\n[0, 3, 0]\\n[0, 3, 1]\\n[0, 3, 2]\\n[1, 0, 0]\\n[1, 0, 1]\\n[1, 0, 2]\\n[1, 1, 0]\\n[1, 1, 1]\\n[1, 1, 2]\\n[1, 2, 0]\\n[1, 2, 1]\\n[1, 2, 2]\\n[1, 3, 0]\\n[1, 3, 1]\\n[1, 3, 2]\\n[2, 0, 0]\\n[2, 0, 1]\\n[2, 0, 2]\\n[2, 1, 0]\\n[2, 1, 1]\\n[2, 1, 2]\\n[2, 2, 0]\\n[2, 2, 1]\\n[2, 2, 2]\\n[2, 3, 0]\\n[2, 3, 1]\\n[2, 3, 2]'\nassert solution('''2 1 2 3''') == '[0, 0, 0]\\n[0, 0, 1]\\n[0, 0, 2]\\n[0, 1, 0]\\n[0, 1, 1]\\n[0, 1, 2]\\n[0, 2, 0]\\n[0, 2, 1]\\n[0, 2, 2]\\n[1, 0, 0]\\n[1, 0, 1]\\n[1, 0, 2]\\n[1, 1, 0]\\n[1, 1, 1]\\n[1, 1, 2]\\n[1, 2, 0]\\n[1, 2, 1]\\n[1, 2, 2]\\n[2, 0, 0]\\n[2, 0, 1]\\n[2, 0, 2]\\n[2, 1, 0]\\n[2, 1, 1]\\n[2, 1, 2]\\n[2, 2, 0]\\n[2, 2, 1]\\n[2, 2, 2]\\n[3, 0, 0]\\n[3, 0, 1]\\n[3, 0, 2]\\n[3, 1, 0]\\n[3, 1, 1]\\n[3, 1, 2]\\n[3, 2, 0]\\n[3, 2, 1]\\n[3, 2, 2]'\nassert solution('''1 1 2 3''') == '[0, 0, 0]\\n[0, 0, 1]\\n[0, 0, 2]\\n[0, 1, 0]\\n[0, 1, 1]\\n[0, 1, 2]\\n[0, 2, 0]\\n[0, 2, 1]\\n[0, 2, 2]\\n[1, 0, 0]\\n[1, 0, 1]\\n[1, 0, 2]\\n[1, 1, 0]\\n[1, 1, 1]\\n[1, 1, 2]\\n[1, 2, 0]\\n[1, 2, 1]\\n[1, 2, 2]\\n[2, 0, 0]\\n[2, 0, 1]\\n[2, 0, 2]\\n[2, 1, 0]\\n[2, 1, 1]\\n[2, 1, 2]\\n[2, 2, 0]\\n[2, 2, 1]\\n[2, 2, 2]'\nassert solution('''1 1 2 3 4''') == '[0, 0, 0]\\n[0, 0, 1]\\n[0, 0, 2]\\n[0, 0, 3]\\n[0, 0, 4]\\n[0, 1, 0]\\n[0, 1, 1]\\n[0, 1, 2]\\n[0, 1, 3]\\n[0, 1, 4]\\n[0, 2, 0]\\n[0, 2, 1]\\n[0, 2, 2]\\n[0, 2, 3]\\n[0, 2, 4]\\n[0, 3, 0]\\n[0, 3, 1]\\n[0, 3, 2]\\n[0, 3, 3]\\n[0, 3, 4]\\n[0, 4, 0]\\n[0, 4, 1]\\n[0, 4, 2]\\n[0, 4, 3]\\n[0, 4, 4]\\n[1, 0, 0]\\n[1, 0, 1]\\n[1, 0, 2]\\n[1, 0, 3]\\n[1, 0, 4]\\n[1, 1, 0]\\n[1, 1, 1]\\n[1, 1, 2]\\n[1, 1, 3]\\n[1, 1, 4]\\n[1, 2, 0]\\n[1, 2, 1]\\n[1, 2, 2]\\n[1, 2, 3]\\n[1, 2, 4]\\n[1, 3, 0]\\n[1, 3, 1]\\n[1, 3, 2]\\n[1, 3, 3]\\n[1, 3, 4]\\n[1, 4, 0]\\n[1, 4, 1]\\n[1, 4, 2]\\n[1, 4, 3]\\n[1, 4, 4]\\n[2, 0, 0]\\n[2, 0, 1]\\n[2, 0, 2]\\n[2, 0, 3]\\n[2, 0, 4]\\n[2, 1, 0]\\n[2, 1, 1]\\n[2, 1, 2]\\n[2, 1, 3]\\n[2, 1, 4]\\n[2, 2, 0]\\n[2, 2, 1]\\n[2, 2, 2]\\n[2, 2, 3]\\n[2, 2, 4]\\n[2, 3, 0]\\n[2, 3, 1]\\n[2, 3, 2]\\n[2, 3, 3]\\n[2, 3, 4]\\n[2, 4, 0]\\n[2, 4, 1]\\n[2, 4, 2]\\n[2, 4, 3]\\n[2, 4, 4]\\n[3, 0, 0]\\n[3, 0, 1]\\n[3, 0, 2]\\n[3, 0, 3]\\n[3, 0, 4]\\n[3, 1, 0]\\n[3, 1, 1]\\n[3, 1, 2]\\n[3, 1, 3]\\n[3, 1, 4]\\n[3,",
        "num_ids_2": 643,
        "num_ids_4": 1679
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('''2 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('''3 2 3 2''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution('''3 1 3 2''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution('''1 2 3 4''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 0], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 0], [4, 4, 1], [4, 4, 2], [4, 4, 3], [4, 4, 4]]\n",
        "num_ids_2": 236,
        "num_ids_4": 640
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('''2 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('''3 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2]]\nassert solution('''4 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3]]\nassert solution('''5 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 0], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 0], [4, 4, 1], [4, 4, 2], [4, 4, 3], [4, 4, 4]]\n",
        "num_ids_2": 215,
        "num_ids_4": 703
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution(\"1 2 1 1\") == [[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0]]\nassert solution(\"1 1 1 2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 2, 0], [2, 2, 1]]\nassert solution(\"2 2 1 1\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 2, 0], [2, 2, 1]]\nassert solution(\"1 2 1 1\") == [[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0], [2, 0, 0], [2, 1, 0], [2, 2, 0], [1, 2, 0]]\n",
        "num_ids_2": 237,
        "num_ids_4": 509
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\n\n=====Output Format=====\nPrint the list of all permutations of [i,j,k] on a 3D grid where the sum of i+j+k is not equal to n. Each element should be printed on a separate line in lexicographic order.\n\n=====Sample Input=====\n1\n1\n1\n2\n\n=====Sample Output=====\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 3\") == \"No Such Solution\"\nassert solution(\"1 1 1 3\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution(\"2 2 2 4\") == [[0,0,0],[0,0,1],[0,0,2],[0,0,3],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,2,0],[2,2,1],[2,2,2],[2,2,3]]\nassert solution(\"2 2 2 4\") == [[0,0,0],[0,0,1],[0,0,2],[0,0,3],[0,0,4],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,1,4],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,2,4],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,0,4],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[1,1,4],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,0,4],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,1,4],[2,2,0],[2,2,1],[2,2,2],[2,2,3],[2,2,4]]\nassert solution(\"2 2 2 4\") == [[0,0,0],[0,0,1],[0,0,2],[0,0,3],[0,0,4],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,1,4],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,2,4],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,0,4],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[1,1,4],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,0,4],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,1,4],[2,2,0],[2,2,1],[2,2,2],[2,2,3],[2,2,4]]\n",
        "num_ids_2": 98,
        "num_ids_4": 552
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 2 3''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 0, 2],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 1, 2],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 0, 2],\n    [1, 1, 0],\n    [1, 1, 1],\n    [1, 1, 2]\n]\n'''\nassert solution('''0 0 0 0''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 0, 2],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 1, 2],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 0, 2],\n    [1, 1, 0],\n    [1, 1, 1],\n    [1, 1, 2]\n]\n'''\nassert solution('''10 10 10 100''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 0, 2],\n    [0, 0, 3],\n    [0, 0, 4],\n    [0, 0, 5],\n    [0, 0, 6],\n    [0, 0, 7],\n    [0, 0, 8],\n    [0, 0, 9],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 1, 2],\n    [0, 1, 3],\n    [0, 1, 4],\n    [0, 1, 5],\n    [0, 1, 6],\n    [0, 1, 7],\n    [0, 1, 8],\n    [0, 1, 9],\n    [0, 2, 0],\n    [0, 2, 1],\n    [0, 2, 2],\n    [0, 2, 3],\n    [0, 2, 4],\n    [0, 2, 5],\n    [0, 2, 6],\n    [0, 2, 7],\n    [0, 2, 8],\n    [0, 2, 9],\n    [0, 3, 0],\n    [0, 3, 1],\n    [0, 3, 2],\n    [0, 3, 3],\n    [0, 3, 4],\n    [0, 3, 5],\n    [0, 3, 6],\n    [0, 3, 7],\n    [0, 3, 8],\n    [0, 3, 9],\n    [0, 4, 0],\n    [0, 4, 1],\n    [0, 4, 2],\n    [0, 4, 3],\n    [0, 4, 4],\n    [0, 4, 5],\n    [0, 4, 6],\n    [0, 4, 7],\n    [0, 4, 8],\n    [0, 4, 9],\n    [0, 5, 0],\n    [0, 5, 1],\n    [0, 5, 2],\n    [0, 5, 3],\n    [0, 5, 4],\n    [0, 5, 5],\n    [0, 5, 6],\n    [0, 5, 7],\n    [0, 5, 8],\n    [0, 5, 9],\n    [0, 6, 0],\n    [0, 6, 1],\n    [0, 6, 2],\n    [0, 6, 3],\n    [0, 6, 4],\n    [0, 6, 5],\n    [0, 6, 6],\n    [0, 6, 7],\n    [0, 6, 8],\n    [0, 6, 9],\n    [0, 7, 0],\n    [0, 7, 1],\n    [0, 7, 2],\n    [0, 7, 3],\n    [0, 7, 4],\n    [0, 7, 5],\n    [0, 7, 6],\n    [0, 7, 7],\n    [0, 7, 8],\n    [0, 7, 9],\n    [0, 8, 0],\n    [0, 8, 1],\n    [0, 8, 2],\n    [0, 8, 3],\n    [0, 8, 4],\n    [0, 8, 5],\n    [0, 8, 6],\n    [0, 8, 7],\n    [0, 8, 8],\n    [0, 8, 9],\n    [0, 9, 0],\n    [0, 9, 1],\n    [0, 9, 2],\n    [0, 9, 3],\n    [0, 9, 4],\n    [0, 9, 5],\n    [0, 9, 6],\n    [0, 9, 7],\n    [0, 9, 8],\n    [0, 9, 9]\n]\nassert solution('''100 100 100 101''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 0, 2],\n    [0, 0, 3],\n    [0, 0, 4],\n    [0, 0, 5],\n    [0, 0, 6],\n    [0, 0, 7],\n    [0, 0, 8],\n    [0, 0, 9],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 1, 2],\n    [0, 1, 3],\n    [0, 1, 4],\n    [0, 1, 5],\n    [0, 1, 6],\n    [0, 1, 7],\n    [0, 1, 8],\n    [0, 1, 9],\n    [0, 2, 0],\n    [0, 2, 1],\n    [0, 2, 2],\n    [0, 2, 3],\n    [0, 2, 4],\n    [0, 2, 5],\n    [0, 2, 6],\n    [0, 2, 7],\n    [0, 2, 8],\n    [0, 2, 9],\n    [0, 3, 0],\n    [0, 3, 1],\n    [0, 3, 2],\n    [0, 3, 3],\n    [0, 3, 4],\n    [0, 3, 5],\n    [0, 3, 6],\n    [0, 3, 7],\n    [0, 3, 8],\n    [0, 3, 9],\n    [0, 4, 0],\n    [0, 4, 1],\n    [0, 4, 2],\n    [0, 4, 3],\n    [0, 4, 4],\n    [0, 4, 5],\n    [0, 4, 6],\n    [0, 4, 7],\n    [0, 4, 8],\n    [0, 4, 9],\n    [0, 5, 0],\n    [0, 5, 1],\n    [0, 5, 2],\n    [0, 5, 3],\n    [0, 5, 4],",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2\"\n) == \"3 -2\"\nassert solution(\n    \"-4 -5\"\n) == \"5 1\"\nassert solution(\n    \"0 0\"\n) == \"-0.00+0.00i\"\nassert solution(\n    \"1 1\"\n) == \"0.00+0.00i\"\nassert solution(\n    \"2 3\"\n) == \"3 -2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1.1+2.2i\") == \"1.01+2.02i\"\nassert solution(\"3.3+4.4i\") == \"3.31+4.42i\"\nassert solution(\"4.4-1.1i\") == \"4.41+0.11i\"\nassert solution(\"-1.1-1.1i\") == \"0.00+0.00i\"\nassert solution(\"3+4.4i\") == \"3.31+4.42i\"\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1.0 2.0\") == \"3.0 -4.0\"\nassert solution(\"2.0 4.0\") == \"0.0 -4.0\"\nassert solution(\"1.0 2.0 3.0 4.0\") == \"-4.0 -4.0 -1.0 -1.0\"\nassert solution(\"1.0 4.0 2.0 4.0\") == \"1.0 -1.0\"\nassert solution(\"0.0 1.0 1.0 0.0\") == \"0.0 0.0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 104
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0.1+0.1j\") == \"0.2+0.2j\"\nassert solution(\"0.1+0.1j\") == \"0.2+0.2j\"\nassert solution(\"0.1+0.1j\") == \"0.2+0.2j\"\nassert solution(\"0.1+0.1j\") == \"0.2+0.2j\"\nassert solution(\"0.1+0.1j\") == \"0.2+0.2j\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"0.00+1.00i\"\nassert solution(\"0 1\") == \"0.00+1.00i\"\nassert solution(\"0 0\") == \"0.00+0.00i\"\nassert solution(\"0 0.1\") == \"0.00+0.01i\"\nassert solution(\"0.2+1.3i\") == \"0.22+1.30i\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3 -4'\nassert solution('5 6') == '11 -2'\nassert solution('-7 3') == '-10 -11'\nassert solution('7 3') == '10 -2'\nassert solution('-2.456 -1.234') == '-3.082 -0.452'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1+1j\"\nassert solution(\"1.1 1\") == \"1.10+1.01j\"\nassert solution(\"-1.1 1\") == \"-1.10+1.01j\"\nassert solution(\"1.1 -1.1\") == \"0.10-0.10j\"\n\n=====Sample Input 1=====\n1+1j\n\n=====Sample Output 1=====\n1.41+0.71j\n1.11+0.11j\n0.21-0.21j\n0.02+0.02j\n0.00+0.00j\n0.00+0.00j\n\"\"\"\nimport re\nimport sys",
        "num_ids_2": 34,
        "num_ids_4": 78
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"0 0 -1 0 0\"\nassert solution(\"5 5\") == \"-2 -2\"\nassert solution(\"-5 -5\") == \"0.00 -0.00\"\nassert solution(\"1 1\") == \"0.00 0.00\"\nassert solution(\"1 1 1 1\") == \"0.00 0.00 -0.00 -0.00\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1.1 + 2.2i\n''') == '1.1 + 2.2i\\n1.1 - 2.2i\\n1.1 * 2.2i\\n1.1 / 2.2i\\n1.1 % 2.2i\\n0.00 + 2.2i\\n0.00 - 2.2i\\n0.00 * 2.2i\\n0.00 / 2.2i\\n0.00 % 2.2i'\nassert solution('''\n3.3 + 4.4i\n''') == '3.3 + 4.4i\\n3.3 - 4.4i\\n3.3 * 4.4i\\n3.3 / 4.4i\\n3.3 % 4.4i\\n0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i'\nassert solution('''\n3.3 + 4.4i\n''') == '3.3 + 4.4i\\n3.3 - 4.4i\\n3.3 * 4.4i\\n3.3 / 4.4i\\n3.3 % 4.4i\\n0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i'\nassert solution('''\n0.0 + 4.4i\n''') == '0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i\\n0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i'\nassert solution('''\n0.0 + 4.4i\n''') == '0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i\\n0.00 + 4.4i\\n0.00 - 4.4i\\n0.00 * 4.4i\\n0.00 / 4.4i\\n0.00 % 4.4i'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1.000000 2.000000\") == \"1.000000+2.000000i\"\nassert solution(\"3.000000 4.000000\") == \"3.000000+4.000000i\"\nassert solution(\"0.000000 0.000000\") == \"0.000000+0.000000i\"\nassert solution(\"0.000000 1.000000\") == \"0.000000-1.000000i\"\nassert solution(\"1.000000 -1.000000\") == \"-1.000000+1.000000i\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('zxy') == 'xaybzc'\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('yz') == 'xaybzc'\nassert solution('xa') == 'xaybzc'\nassert solution('xa') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('zxy') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"abcxyz\") == \"xaybzc\"\nassert solution(\"abcabc\") == \"abcabc\"\nassert solution(\"abcabcxyz\") == \"abcabc\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xazbzc'\nassert solution('xyzabc') == 'xaybzc'\nassert solution('abcxyz') == 'xazbzc'\nassert solution('xyzabc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'abzc'\nassert solution('xyzabc') == 'xyzcba'\nassert solution('abcxyz') == 'abczba'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xazbzc'\nassert solution('abac') == 'ababc'\nassert solution('xy') == 'xy'\nassert solution('xabcd') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 51
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\n\"\"\"\n-----Description Used-----\nThe strings O and E consist of lowercase English letters (a-z).\n\n------\n\n------\n\n------\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    'xyz\\nabc') == 'xaybzc'\nassert solution(\n    'abc\\nxyz') == 'xaybzc'\nassert solution(\n    'xz\\nza') == 'xyz'\nassert solution(\n    'za\\nxz') == 'xyz'\nassert solution(\n    'x\\nx') == 'x'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    }
]