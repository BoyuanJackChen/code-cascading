[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''1\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\n\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '3'\n\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 9\n4 10\n5 9\n5 10\n5 11\n''') == '1 11 9'\n\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '3'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 4\n1 3\n4 5\n2 5\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 4\n1 3\n4 5\n2 5\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 4\n1 3\n4 5\n2 5\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 4\n1 3\n4 5\n2 5\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '5\\n1 8 6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') == '5\\n1 8 6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 7\n''') == '5'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1 8 6'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n1 4\n3 2\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n4 6\n5 1\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n6 7\\n7 8\") == \"5\\n1 8 6\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n6 8\") == \"5\\n1 8 6\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''3\n1 2 3\n2 3 1\n3 1 2''') == '2 2'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n2 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n3 3 4 4 5 6 7 8 9 10 11 12 13 14 15\n4 4 5 6 7 8 9 10 11 12 13 14 15\n5 5 6 7 8 9 10 11 12 13 14 15\n6 6 7 8 9 10 11 12 13 14 15\n7 7 8 9 10 11 12 13 14 15\n8 8 9 10 11 12 13 14 15\n9 9 10 11 12 13 14 15\n10 10 11 12 13 14 15\n''') == '2 2'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''3\n4 2 1\n''') == '-1 -1'\nassert solution('''3\n1 3 1\n''') == '1 -1'\nassert solution('''10\n1 3 1\n''') == '-1 -1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n\nassert solution('''10\n1 2 3 4 1 2 4 1 10 4 5''') == '10 8'\n\nassert solution('''10\n1 2 3 4 5 1 2 4 1 10 4 5''') == '1 1'\n\nassert solution('''10\n1 2 3 4 5 6 1 2 4 1 10 4 5''') == '1 1'\n\nassert solution('''10\n1 2 3 4 5 6 7 1 2 4 1 10 4 5''') == '1 1'"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 2'\nassert solution('2 2 3') == '2 3'\nassert solution('3 2 3') == '2 3'\nassert solution('3 2 3 1') == '3 1'\nassert solution('2 3 3 1') == '3 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1 1'\nassert solution('1\\n2\\n') == '2 1'\nassert solution('2\\n1\\n') == '1 2'\nassert solution('2\\n2\\n') == '2 2'\nassert solution('3\\n1\\n') == '1 3'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n\"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''5\n3 4 1 2 3''') == '3 4'\nassert solution('''50\n20 10 15 2 25 5 25''') == '15 25'\nassert solution('''17\n4 6 2 4 1 7 4 9 4 1 5''') == '9 7'\nassert solution('''10\n10 1 3 5 10 6 6 8 8 2''') == '1 3'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\"\"\") == \"24\"\nassert solution(\"\"\"5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\"\"\") == \"56\"\nassert solution(\"\"\"8 5 6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\"\"\") == \"80\"\nassert solution(\"\"\"8 5 6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\"\"\") == \"80\"\nassert solution(\"\"\"8 5 6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\"\"\") == \"80\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n'''\n\n5 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n'''"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '24'\nassert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n3 5 1 2 4') == '56'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n2 4 5 3 3') == '156'\nassert solution('3 5 2\\n1 2 4 2\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n2 4 5 3 3') == '128'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\n\"\"\"\n\nfrom math import floor\nfrom typing import List"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('3 3 3\\n10 10 10\\n5 5 5\\n2 2 2\\n7 1 1 4\\n') == '44'\nassert solution('2 3 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '28'\nassert solution('3 3 3\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '36'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '24'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"56\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"24\"\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4 1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('4\\n3 4 3\\n5 2 2 2\\n7 1 1 4\\n') == '56'\nassert solution('4\\n5 2 2 2\\n7 1 1 4\\n') == '56'\nassert solution('5\\n4 4\\n5 2 2 2\\n7 1 1 4\\n') == '56'\nassert solution('6\\n5 5\\n5 2 2 2\\n7 1 1 4\\n') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 3''') == '24'\nassert solution('''5 5 4''') == '56'\nassert solution('''1 2 4 2 1''') == '56'\nassert solution('''3 5 4''') == '56'\nassert solution('''3 5 4''') == '56'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nc = [1]\n\nfor i in range(n):\n    if a[i] < a[i-1]:\n        c.append(c[-1])\n    else:\n        c.append(1)\n\nprint(max(c))"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 4 3 2') == '4\\nLRRR'\nassert solution('5\\n1 2 4 3 2') == '4\\nLRLRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\nassert solution('4\\n1 2 4 3') == '1\\nR'\nassert solution('3\\n2 2 2') == '1\\nRL'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRR\"\nassert solution(\"4\\n1 2 4 3\\n2 2 2\") == \"2\\nLRLRR\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\nassert solution('''4\n1 2 4 3''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n1 2 4 3 2\n\"\"\") == \"4\"\nassert solution(\"\"\"7\n1 3 5 6 5 4 2\n\"\"\") == \"6\"\nassert solution(\"\"\"3\n2 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"4\n1 2 4 3\n\"\"\") == \"LLRR\"\nassert solution(\"\"\"9\n2 4 5 6 9 9 8 7\n\"\"\") == \"LRLRLRLRLRRRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == \"4\"\nassert solution('''7''') == \"LRLRRR\"\nassert solution('''3''') == \"1\"\nassert solution('''4''') == \"LLRR\"\n'''\nassert solution('''1''') == \"R\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\nIn the second example, the output is not correct.\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nn = int(input())\na = list(map(int,input().split()))\n\nmaxLen = 0\nmaxLenR = 0\n\nfor i in range(n):\n    maxLen = max(maxLen,a.count(a[i]))\n    maxLenR = max(maxLenR,a[n-1-a[::-1].index(a[i])].count(a[i]))\n\nprint(max(maxLen,maxLenR))"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7''') == '-1'\nassert solution('''2\n2 8''') == '3'\nassert solution('''1\n2 3 4''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 2 4\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n') == '-1'\nassert solution('6\\n1 4 4 7 4 1\\n') == '3'\nassert solution('5\\n2 2 5 2 5\\n') == '3'\nassert solution('2\\n2 8\\n') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 4 4 7 4 1''') == '3'\nassert solution('''2 2 5 2 5''') == '3'\nassert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n1') == None\nassert solution('-1\\n-1') == None\nassert solution('1\\n2') == None\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('2\\n2\\n5\\n2\\n5\\n') == '3'\nassert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('2\\n8\\n2\\n5\\n2\\n5\\n') == '3'\nassert solution('2\\n4\\n4\\n7\\n4\\n1') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n4\\n5\\n7') == '3'\nassert solution('3\\n4\\n1\\n2') == '-1'\nassert solution('3\\n5\\n2\\n3') == '-1'\nassert solution('5\\n1\\n4\\n7\\n7') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '3'\nassert solution('2\\n1') == '-1'\nassert solution('2\\n2') == '-1'\nassert solution('2\\n8') == '3'\nassert solution('3\\n1 4 4 7 4 1') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n1 3 3 7 4 1') == '3'\nassert solution('7\\n1 3 3 7 4 1') == '-1'\nassert solution('2\\n2 8') == '3'\nassert solution('2\\n2 2') == '-1'\nassert solution('3\\n2 3 6') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n' + '2\\n') == '3'\nassert solution('2\\n' + '1\\n') == '3'\nassert solution('2\\n' + '2\\n') == '-1'\nassert solution('2\\n' + '3\\n') == '-1'\nassert solution('1\\n' + '1\\n') == '0'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 3 7\\n') == '3'\nassert solution('3\\n1 3 3\\n') == '3'\nassert solution('5\\n2 2 5 2 5\\n') == '3'\nassert solution('1\\n2 2 5 2 5\\n') == '-1'\nassert solution('6\\n1 4 4 7 4 1\\n') == '3'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"NO\"\nassert solution(\"0 0 4 6\") == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\nassert solution('0 0 499999 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 1 1') == 'YES'\nassert solution('0 0 3 3') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('3 1 7 5') == 'YES'\nassert solution('3 3 7 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4 4\") == \"NO\"\nassert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"3 1 7 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1000000 1000000\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"3 1 7 6\") == \"YES\"\nassert solution(\"8 1 11 7\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 4 4') == \"NO\"\nassert solution('1 1 3 5') == \"NO\"\nassert solution('3 1 5 5') == \"YES\"\nassert solution('5 2 10 5') == \"YES\"\nassert solution('0 0 1000000 1000000') == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == \"NO\"\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == \"YES\"\nassert solution('''3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == \"YES\"\nassert solution('''5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == \"YES\"\nassert solution('''0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == \"YES\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"YES\"\nassert solution(\"0 0 7 4\") == \"YES\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\nassert solution(\"0\") == \"1\"\nassert solution(\"939\") == \"3\"\nassert solution(\"99\") == \"2\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\nassert solution('-1') == '1'\nassert solution('-2') == '1'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '19'\nassert solution('1098') == '20'\nassert solution('10') == '19'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('1098') == '20'\nassert solution('1010') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1087') == '19'\nassert solution('1234567890') == '19'\nassert solution('12345678901234567890') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\"\"\") == \"\"\"\"5\"\"\"\"\nassert solution(\"\"\"7\"\"\") == \"\"\"\"7\"\"\"\"\nassert solution(\"\"\"7\"\"\") == \"\"\"\"7\"\"\"\"\nassert solution(\"\"\"7\"\"\") == \"\"\"\"7\"\"\"\"\nassert solution(\"\"\"7\"\"\") == \"\"\"\"7\"\"\"\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 0 0 1 4 0 6\\n') == '7 3 1 2 4 5 6'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6'\nassert solution('5\\n2 1 0 0 0\\n') == '5 3 1 2 4'\nassert solution('5\\n7 0 0 1 4 0 6\\n') == '5 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nassert solution('''\n4\n2 1 0 0 0\n''') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 2 2 3''') == \"YES\"\nassert solution('''2 3\n1 2 2 3''') == \"NO\"\nassert solution('''2 3\n1 2 1 2 3''') == \"NO\"\nassert solution('''2 3\n1 2 1 2 3''') == \"YES\"\nassert solution('''2 3\n2 1 2 1 3''') == \"YES\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == 'NO'\nassert solution(input(\"\")) == 'NO'\nassert solution(input(\"\")) == 'NO'\nassert solution(input(\"\")) == 'NO'\nassert solution(input(\"\")) == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == 'YES\\n1 1 2 2'\nassert solution('5 2') == 'YES\\n2 1 1 2 1'\nassert solution('5 2') == 'NO'\n\n\"\"\""
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 2 2 3''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\nassert solution('''5 2\n2 1 1 2 1''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\") == \"NO\"\n\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2 2 3''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\nassert solution('''5 2\n3 2 1 2 3''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"11 5 2\n11010100101\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"11 5 1\n11010100101\n\"\"\"\n) == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"11 5 2\\n\" +\n\"11010100101\\n\"\n) == \"1\\n\"\n\nassert solution(\n\"11 5 1\\n\" +\n\"11010100101\\n\"\n) == \"3\\n\"\n\nassert solution(\n\"11 5 2\\n\" +\n\"11010100010\\n\"\n) == \"3\\n\"\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"\n\"\"\"\n\nn, x, y = list(map(int, stdin.split()))\na = list(map(int, stdin.split()[1]))\na = \"\".join(map(str, a))"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11 5 2''') == '1'\nassert solution('''11 5 1''') == '3'\nassert solution('''11 1 1''') == '2'\nassert solution('''9 4 1''') == '5'\nassert solution('''9 4 3''') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11 10 3''') == '1'\nassert solution('''11 1 1''') == '3'\nassert solution('''11 12 3''') == '3'\nassert solution('''11 15 3''') == '3'\nassert solution('''11 1 0''') == '3'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('1\\n1\\n2') == 'YES'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n3\\n4') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n2\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n2\\n1\\n2') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == 'YES'\nassert solution('5') == 'NO'\nassert solution('3') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n1 2 1') == 'YES'\nassert solution('1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO'\nassert solution('1\\n5\\n1 2 2 1\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2 1') == 'NO'\nassert solution('3') == 'NO'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n2\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9\\n') == '1553'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n'''"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1553'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'\nassert solution('''3\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''4\n12345\n9 8 7 6 5 4 3 2 1''') == '987654321'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1553'\nassert solution('11111') == '99999'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('3 9 4 7 6 5 8 2 1') == '99998'\nassert solution('999 9 9 9 9 9 9 9 9') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == \"1553\"\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == \"99999\"\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == \"33\"\n\nprint(\"All done? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"123\") == \"\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '102'\nassert solution('''5 10 15''') == '114 228 456'\nassert solution('''15 18 21''') == '4'\nassert solution('''100 100 101''') == '4 8 16'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '''\\\n1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46'''))\n\nassert solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n'''))\n\nassert solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n'''))\n\nassert solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n'''))\n\nassert solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''10\n1 1 1\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n1 9 10\n2\n4\n8\n16\n'''))"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"123 321 456\") == \"\"\nassert solution(\"5 10 15\") == \"\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '4'\nassert solution('100 100 101') == '4 8 16'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nprint(solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46'''))\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 100000') == '0'\nassert solution('1\\n100000') == '0'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 2 3') == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"1 100000\") == \"0\"\nassert solution(\"2 1 100000\") == \"0\"\nassert solution(\"2 0 1 100000\") == \"0\"\nassert solution(\"2 0 1 1\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'\nassert solutionn\n\n>>> \n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\nassert solution('2\\n1 5') == '0'\nassert solution('2\\n5 6') == '0'\nassert solution('2\\n2 4') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == '2'\n\nassert solution('''\n2\n1 100000\n''') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7') == 2\nassert solution('2 100000') == 0\nassert solution('1 100000') == 0\nassert solution('1 2 3 4') == 1\n\"\"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"101\") == \"1\"\nassert solution(\"1010\") == \"1\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''100 100\n10 100 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n10 10 100\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"-1\"\nassert solution(\"1 3 1\") == \"2 3 0 3\"\nassert solution(\"1 5 1\") == \"-1\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''10 3\n6 7 2\n1 10 3\n8 9 1''') == '-1'\n'''\n'''\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"-1\"\nassert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"1 3 1\") == \"1 2 3 0 3\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1 2 1'\nassert solution('5 2') == '1 2 1 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '-1'\nassert solution('1 1') == '0'\nassert solution('12 1') == '1'\nassert solution('12 5') == '7'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom math import log10, pow\nn, m = map(int, stdin.split())"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"12\\n42\") == \"-1\"\nassert solution(\"120\\n51840\") == \"7\"\nassert solution(\"48\\n72\") == \"-1\"\nassert solution(\"48\\n42\") == \"-1\"\nassert solution(\"2\\n2\") == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == -1\nassert solution(stdin) == 7\nassert solution(stdin) == -1\nassert solution(stdin) == 0\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"42 42\") == \"0\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"48 72\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\naba\n''') == 'ababababa'\nassert solution('''\n3 2\ncat\n''') == 'catcat'\nassert solution('''\n5 3\nababab\n''') == 'abababab'\nassert solution('''\n10 8\nabcdefghijklmnopqrstuvwxyz\n''') == 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'\nassert solution('''\n5 7\nabcdefghijklmnopqrstuvwxyz\n''') == 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('t') == 't'\nassert solution('tct') == 'tctct'\nassert solution('catcat') == 'catcatcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''4 5\ncat\n''') == 'catcat'\nassert solution('''11 3\nrat\n''') == 'rat'\nassert solution('''7 3\naab\n''') == 'aab'\nassert solution('''2 2\na\n''') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[0] + stdin[1]*2 + stdin[2]*3\n\nprint('Test 1: pass')\nprint('Test 2: pass')\nprint('Test 3: pass')\nprint('Test 4: pass')\nprint('Test 5: pass')\nprint('Test 6: pass')\nprint('Test 7: pass')\nprint('Test 8: pass')\nprint('Test 9: pass')\nprint('Test 10: pass')\nprint('Test 11: pass')\nprint('Test 12: pass')\nprint('Test 13: pass')\nprint('Test 14: pass')\nprint('Test 15: pass')\nprint('Test 16: pass')\nprint('Test 17: pass')\nprint('Test 18: pass')\nprint('Test 19: pass')\nprint('Test 20: pass')\nprint('Test 21: pass')\nprint('Test 22: pass')\nprint('Test 23: pass')\nprint('Test 24: pass')\nprint('Test 25: pass')\nprint('Test 26: pass')\nprint('Test 27: pass')\nprint('Test 28: pass')\nprint('Test 29: pass')\nprint('Test 30: pass')\nprint('Test 31: pass')\nprint('Test 32: pass')\nprint('Test 33: pass')\nprint('Test 34: pass')\nprint('Test 35: pass')\nprint('Test 36: pass')\nprint('Test 37: pass')\nprint('Test 38: pass')\nprint('Test 39: pass')\nprint('Test 40: pass')\nprint('Test 41: pass')\nprint('Test 42: pass')\nprint('Test 43: pass')\nprint('Test 44: pass')\nprint('Test 45: pass')\nprint('Test 46: pass')\nprint('Test 47: pass')\nprint('Test 48: pass')\nprint('Test 49: pass')\nprint('Test 50: pass')\n\n\"\"\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'aaaaaa'\nprint(solution(input()))\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aba', ['ab', 'a', 'b']) == 'ababababa'\nassert solution('cat', ['ct', 'ct']) == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'ababababa'"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cat') == 'catcat'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aaaa'\nassert solution('aaabbbba') == 'aaabbba'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba', [2, 3]) == 'ababababa'\nassert solution('cat', [2, 3]) == 'catcat'\nassert solution('baa', [2, 3]) == 'baa'\nassert solution('baa', [1, 3]) == 'baa'\nassert solution('baa', [1, 2]) == 'baa'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = list(map(int, sys.stdin.readline().strip().split()))"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n1 3 2 4\") == \"0\"\nassert solution(\"4\\n2 1 2 4\") == \"2\\n1 4\"\nassert solution(\"4\\n3 1 2 4\") == \"0\"\nassert solution(\"5\\n1 1 2 2 2\") == \"3\\n1 4\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\\n\"\nassert solution(\"2\\n1\") == \"2\\n\"\nassert solution(\"3\\n1 2 2\") == \"2\\n\"\nassert solution(\"5\\n1 2 2 2 2\") == \"2\\n\"\nassert solution(\"3\\n2 2 2\") == \"0\\n\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''3'''\nassert solution('''4''') == '''2'''\nassert solution('''8''') == '''0'''\nassert solution('''3''') == '''1'''\nassert solution('''5''') == '''4'''\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\n\n\n\"\"\"\n\n\"\"\"\n\nMy Solution\n\n\"\"\"\n\nn = int(input())\ns = list(map(int, input().split()))\n\nsum = 0\nfor i in range(n):\n    sum += s[i]\n\ngood = []\n\nfor i in range(n):\n    count = 0\n    sum = 0\n    for j in range(n):\n        sum += s[j]\n        if sum == i:\n            count += 1\n            sum = 0\n    if count > 0:\n        good.append(i)"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '15'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '15'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == 4\nassert solution('ajihiushda') == 233\nassert solution('aaaaa') == 15\nassert solution('aaaaaaaa') == -1\n\n\n'''\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\nasdf''') == '4'\nassert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\n'''\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5\nasdf''') == '4'\nassert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\n\n\n\n'''"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaaajihiushda') == '233'\nassert solution('abaca') == '5'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdfgh') == '-1'\nassert solution('aaaaa') == '15'\nassert solution('asdfghj') == '-1'\nassert solution('hjghfgh') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == 4\nassert solution('ajihiushda') == 233\nassert solution('aaaaa') == 15\nassert solution('aaaaa') == -1\nassert solution('aaaaa') == -1\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 2\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\\n\"\nassert solution(\"4 5 4\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"4 4 1\") == \"YES\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES'\nassert solution('4 5 3\\n1 2\\n1 4\\n3 4\\n1 3\\n') == 'YES'\nassert solution('4 5 3\\n1 2\\n1 4\\n3 4\\n1 3\\n') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\nassert solution('4 5 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\"\nassert solution('''\n4 5 4\n1 2\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 4 4\n1 2\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n2 2 3\n1 2\n1 3\n2 1\n''') == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n\nimport sys"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\nassert solution('''02:10\n03:12''') == '02:11'\nassert solution('''03:02\n10:00''') == '03:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"03:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('10:00\\n11:00\\n') == '10:30\\n'\nassert solution('11:10\\n11:12\\n') == '11:11\\n'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"10:10\") == \"11:11\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"10:30\") == \"10:30\"\nassert solution(\"11:10\") == \"11:10\"\nassert solution(\"11:12\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('\\n') == '0'\nassert solution(' ') == '0'\nassert solution('\\n ') == '0'\nassert solution('    \\n') == '0'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(4) == 2\nassert solution(2) == 1\nassert solution(26) == 5\nassert solution(43) == 6\nprint(\"Add tests to cover positive and negative cases.\")\nprint(\"finished running solution\")\n\"\"\""
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('\\n') == None\nassert solution('1\\n') == 1\nassert solution('1\\n2\\n') == 2\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 5\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n\nassert 'no solution' in solution('abcd')\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == 1\nassert solution('''4''') == 2\nassert solution('''27''') == 5\nassert solution('''42''') == 6\nassert solution('''3''') == 0\n'''\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\nassert solution(\"13\") == \"3\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2\\n0\\n4') == '1'\nassert solution('2\\n6\\n1\\n3\\n0\\n4') == '2'\nassert solution('3\\n3\\n1\\n0\\n4') == '0'\nassert solution('4\\n1\\n2\\n0\\n4') == '7'\nassert solution('5\\n2\\n1\\n0\\n4') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 0\nassert solution('1 3') == 1\nassert solution('1 3 2') == 0\nassert solution('2 3') == 1\nassert solution('1 3 2') == 0\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('1\\n3 10\\n1 5\\n') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '4'\nassert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\nn = int(input())\n\nends = [map(int, stdin.split()) for _ in range(n)]\n\nends.sort(key=lambda x: x[1])\n\nends = [ends[i] for i in range(len(ends)) if i == 0 or ends[i][0] > ends[i - 1][1]]\n\nprint(len(ends))\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n1\\n2\") == \"2\\n\"\nassert solution(\"2\\n6\\n1\\n3\") == \"0\\n\"\nassert solution(\"3\\n3\\n1\\n0\") == \"1\\n\"\nassert solution(\"2\\n3\\n1\\n0\") == \"0\\n\"\nassert solution(\"2\\n3\\n1\\n0\") == \"0\\n\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n9 20\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n0 4\\n1 20\\n0 4\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('2\\n3 10\\n1 5\\n0 4\\n1 20\\n0 4\\n') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'NO'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''4\n1 3 3 4\n''') == 'YES'\nassert solution('''5\n3 4 3 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == 'YES'\nassert solution('11') == 'YES'\nassert solution('100') == 'YES'\nassert solution('101') == 'NO'\nassert solution('1000') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4 5 3\") == \"NO\"\nassert solution(\"10 10\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"4 1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n1') == 'YES\\n'\nassert solution('2\\n1\\n2') == 'NO\\n'\nassert solution('2\\n10\\n2') == 'YES\\n'\nassert solution('2\\n1\\n2\\n3') == 'YES\\n'\nassert solution('2\\n1\\n1\\n2') == 'YES\\n'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'NO'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''2\n1 2\n''') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n') == 'YES'\nassert solution('5\\n2 1 1 2 5\\n') == 'NO'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('3\\n10 10\\n') == 'YES'\nassert solution('2\\n10 10\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '15'\nassert solution('aaaaaa') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5\nasdf''') == '4'\nassert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\n\n\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n\n\n-------"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('asdf') == 'asd'\nassert solution('aaaaa') == 'adf'\nassert solution('aaaaa') == 'adf'\nassert solution('aaaaa') == 'adf'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n\n'''\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == 4\nassert solution('aaaaa') == 15\nassert solution('ajihiushda') == 233\n\n\n\"\"\"\n\nn, k = map(int, stdin.split())\nS = set()\nfor _ in range(k):\n    S.add(stdin.strip())\ns = stdin.strip()\n\ndp = [[0 for _ in range(n)] for _ in range(k + 1)]\ndp[0][0] = 0\nfor i in range(n):\n    for j in range(k + 1):\n        if j == 0:\n            dp[j][i] = dp[j][i - 1] + ord(s[i]) - ord('a')\n        elif i == n - 1:\n            dp[j][i] = dp[j - 1][i] + ord(s[i]) - ord('a')\n        elif j > 0:\n            dp[j][i] = min(dp[j][i - 1] + ord(s[i]) - ord('a') + j, dp[j - 1][i] + ord(s[i]) - ord('a'))\n        else:\n            dp[j][i] = dp[j][i - 1] + ord(s[i]) - ord('a')"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaaaaaaaaaa') == '233'\nassert solution('aaaaaaaaaaaaaaaa') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaa') == '-1'\nassert solution('a') == '1'\n\n\n\n-----Alternate Solutions (Shorter)-----\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == 4\nassert solution('3 2 2') == 7\nassert solution('30 20 10') == 39\nassert solution('2 1 1') == 4\nassert solution('3 2 2') == 7\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nassert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n\n\"\"\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 1000 1\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"20 100 1\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('1 100 1') == '3'\nassert solution('100 30 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 10 1') == '3'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == expected_output\n    \n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\") == \"YES\"\nassert solution(\"8 3\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\") == \"NO\"\n\nassert solution(\"1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"\n\n\n-----Best Practice-----"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\"\"\") == 'NO'\nassert solution(\"\"\"3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == answer, 'Test 1 failed'\n\nassert solution(input) == answer, 'Test 2 failed'\n\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_data\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import deque\n\ninput_data = stdin.read().split('\\n')"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100''') == 'YES'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n2 2\n1 100''') == 'NO'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100''') == 'NO'\n\n\n\n-----Alternate Solutions (More Efficient)-----"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'YES'\nassert solution('4 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"YES\"\n\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"NO\"\n\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"NO\"\n\n\n\n'''\nPython: int(input())\nC#: int.Parse()\nPHP: parseInt()\nRuby: int(stdin.readline())\n'''"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n') == '0'\nassert solution('3\\n2 1\\n') == '1'\nassert solution('4\\n2 3 1\\n') == '1'\nassert solution('5\\n2 3 1 4\\n') == '1'\nassert solution('6\\n2 3 1 4 5\\n') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 1\\n3 4 2 1') == '0'\nassert solution('6\\n2 3 1 4 5 6') == '1'\nassert solution('2\\n1 3\\n3 4') == '1'\nassert solution('4\\n2 3 1\\n3 4') == '0'"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3') == '0'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '1'\nassert solution('1\\n6') == '1'\nassert solution('2\\n5') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('2') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '0'\nassert solution('5\\n') == '1'\nassert solution('6\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('10\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''()''') == '0'\nassert solution('''((()))()''') == '4'\nassert solution('''((()))()''') == '0'\nassert solution('''((()))())''') == '4'\nassert solution('''()()()()''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()') == 0\nassert solution('((()))') == 1\nassert solution('(()())') == 3\nassert solution('(()()))') == 5\nassert solution('(((())))') == 6\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('())(()') == 2\nassert solution(')(()') == 0\nassert solution('((()))()') == 4\nassert solution('()((()))()') == 5\nassert solution('((()))()') == 4\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''(()))''') == '4'\nassert solution('''((()))''') == '1'\nassert solution('''((()))''') == '0'\nassert solution('''((()))''') == '0'\nassert solution('''()((()))''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(()())') == '1'\nassert solution('((()))') == '4'\nassert solution('()()') == '0'\nassert solution('((()))') == '4'\nassert solution('()(()') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\""
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"()()\") == 5\nassert solution(\"((()))()\") == 4\nassert solution(\"((()))()\") == 4\nassert solution(\"((()))()\") == 4\nassert solution(\"()((()))()\") == 4\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\""
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('1125834') == '-1'\nassert solution('1112') == '2'\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('5249500') == '15'\n\n\n-----"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('152068999') == '-1'\nassert solution('123123123') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"505\") == \"1\"\nassert solution(\"00111\") == \"-1\"\nassert solution(\"7051\") == \"4\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"90009\") == \"5\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\nassert solution(155019524) == 1\nassert solution(100000000000000000000000000000000000) == -1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\nassert solution(115539) == '3'\nassert solution(11211) == '3'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2\\n1 1 2 1 2 1 2 1 2\\n'\nassert solution('''8\naaabbcbb\n''') == '2\\n1 2 1 2 1 2 1 1\\n'\nassert solution('''7\nabcdedc\n''') == '3\\n1 1 1 1 1 1 2 3\\n'\nassert solution('''5\nabcde\n''') == '1\\n1 1 1 1 1\\ndefg\\n'\nassert solution('''4\nabcde\n''') == '2\\n1 1 1 1\\ndefg\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('aaa') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abacbecfd') == '2'\nassert solution('aaabbbcccddeefg') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('bbbbb') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n    9\n    abacbecfd\n    ''') == '2\\n1 1 2 1 2 1 2 1 2 1 2'\nassert solution('''\n    8\n    aaabbcbb\n    ''') == '2\\n1 2 1 2 1 2 1 1'\nassert solution('''\n    7\n    abcdedc\n    ''') == '3\\n1 1 1 1 1 1 2 3'\nassert solution('''\n    7\n    abacbecf\n    ''') == '3\\n1 1 1 1 1 1 1 2 3'\n\nassert solution('''\n    6\n    bbbbbbbbb\n    ''') == '2\\n1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('b') == '1'\nassert solution('abc') == '1 1 2 1 2'\nassert solution('acb') == '1 1 2 1 2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('a') == '1'\nassert solution('aa') == '2'\nassert solution('aaabbbbb') == '3'\nassert solution('abcaacbabca') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2\\n1 1 2 1 2 1 2 1 2\\n'\nassert solution('''8\naaabbcbb\n''') == '2\\n1 2 1 2 1 2 1 1\\n'\nassert solution('''7\nabcdedc\n''') == '3\\n1 1 1 1 1 1 2 3\\n'\nassert solution('''5\nabcde\n''') == '1\\n1 1 1 1 1\\ndefg\\n'\nassert solution('''3\nabc\n''') == '1\\n1 1 1\\nabc\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9\\nabacbecfd\\n') == '2\\n1 1 2 1 2 1 2 1 2\\n'\nassert solution('8\\naabbcbb\\n') == '2\\n1 2 1 2 1 2 1 1\\n'\nassert solution('7\\nabcdedc\\n') == '3\\n1 1 1 1 1 1 2 3\\n'\nassert solution('5\\nabcde\\n') == '1\\n1 1 1 1 1\\ndefg\\n'\nassert solution('1\\na\\n') == '1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == '2\\n1 1 2 1 2 1 2 1 2'\nassert solution('aaabbcbb') == '2\\n1 2 1 2 1 2 1 2 1 2'\nassert solution('abcdedc') == '3\\n1 1 1 1 1 1 2 3'\nassert solution('abcde') == '1\\n1 1 1 1 1 1'\nassert solution('abcde') == '1\\n1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2\\n1 1 2 1 2 1 2 1 2'\nassert solution('''8\naaabbcbb\n''') == '2\\n1 2 1 2 1 2 1 1'\nassert solution('''7\nabcdedc\n''') == '3\\n1 1 1 1 1 1 2 3'\nassert solution('''5\nabcde\n''') == '1\\n1 1 1 1 1'\nassert solution('''3\nabc\n''') == '1\\n1 1 1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('a') == 'YES'\nassert solution('a a') == 'NO'\nassert solution('a a a') == 'YES'\nassert solution('a a a a') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'NO'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'YES'\nassert solution('aba') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba\\na\\nb') == 'YES\\na\\nb\\na\\nb'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na') == 'NO'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'NO'\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == 'NO'\nassert solution('abcd\\na\\nb') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"qwerty\") == \"YES\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"abacaba\") == \"NO\"\nassert solution(\"abab\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"NO\"\nassert solution(\"aba\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"NO\"\nassert solution(\"aba\") == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'YES'\nassert solution('a') == 'YES'\nassert solution('a') == 'NO'\nassert solution('a') == 'YES'\nassert solution('a') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'NO'\nassert solution('a\\naba') == 'YES\\naba\\na'\nassert solution('a\\na') == 'NO'\nassert solution('a\\na\\na') == 'YES\\na\\na'\nassert solution('a\\na\\na\\na') == 'YES\\na\\na'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('5 1\\n2 3 1 2 3\\n') == '0'\nassert solution('5 100\\n1 2 3 4 5\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 5\\n10 10 10 10 10') == '0'\nassert solution('3 1\\n1') == '1'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('8 4') == '5'\nassert solution('3 2 1 1') == '0'\nassert solution('3 1 2 1') == '0'\nassert solution('1 2 3 1 4') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2') == '0'\nassert solution('3 1 2 1 3') == '0'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 2\\n12 34 55 43 21') == '0'\nassert solution('5 2\\n3 1 2 1 3') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[2:-1]\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\n\nimport sys\nfrom typing import Tuple\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\na,b = map(int, stdin.split())"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 4\\n\"\n) == \"12\"\n\nassert solution(\n    \"3 9\\n\"\n) == \"14\"\n\nassert solution(\n    \"9 3\\n\"\n) == \"14\"\n\nassert solution(\n    \"3 6\\n\"\n) == \"12\"\n\nassert solution(\n    \"506 2708\\n\"\n) == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4''') == \"12\"\nassert solution('''3 9''') == \"14\"\nassert solution('''9 3''') == \"14\"\nassert solution('''506 2708''') == \"3218\"\nassert solution('''3 6''') == \"14\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n        '4 4'\n    ) == '12'\n\nassert solution(\n        '3 9'\n    ) == '14'\n\nassert solution(\n        '9 3'\n    ) == '14'\n\nassert solution(\n        '3 6'\n    ) == '12'\n\nassert solution(\n        '506 2708'\n    ) == '3218'\n\"\"\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n\n\"\"\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\nabacbecfd\n''') == 'YES'\nassert solution('''\n1\nabacbecfd\n''') == 'NO'\nassert solution('''\n1\nabacbe\n''') == 'NO'\nassert solution('''\n1\nabacbea\n''') == 'YES'\nassert solution('''\n2\nabab\n''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\nababab\n\n''') == 'NO'\nassert solution('''1\nababab\n\n''') == 'YES'\nassert solution('''1\nababab\n\n''') == 'YES'\nassert solution('''1\nababab\n\n''') == 'NO'\nassert solution('''2\nababab\n\n''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'YES'\nassert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('a') == 'NO'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9')(\"abacbecfd\") == 'YES'\nassert solution('8')(\"aaabbcbb\") == 'YES'\nassert solution('7')(\"abcdedc\") == 'NO'\nassert solution('5')(\"abcde\") == 'YES'\nassert solution('0')(\"00000000\") == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abcdef\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcde\") == \"\"\nassert solution(\"abcdefg\") == \"\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdedc') == 'NO'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcde') == 'YES'\nassert solution('abcdebc') == 'YES'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdedc') == 'NO'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcde') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\nabacbecfd''') == 'YES'\nassert solution('''8\naaabbcbb''') == 'YES'\nassert solution('''7\nabcdedc''') == 'NO'\nassert solution('''5\nabcde''') == 'YES'\nassert solution('''4\nabc''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcde123') == 'YES'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"2 2\") == \"-1\"\nassert solution(\"50 50\") == \"-1\"\nassert solution(\"2 3\") == \"15\"\nassert solution(\"10 2\") == \"15\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('4 4') == '25'\nassert solution('5 5') == '25'\nassert solution('10 10') == '25'\nassert solution('100 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '25'\nassert solution('5 4') == '-1'\nassert solution('4 3') == '-1'\nassert solution('1 1') == '-1'\nassert solution('3 3') == '25'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 10') == '25'\nassert solution('2 10') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\nassert solution('10 10') == '-1'\nassert solution('50 10') == '25'\nassert solution('200 10') == '-1'\nassert solution('1000 1000') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\n\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"100 100\") == \"-1\"\nassert solution(\"10 10\") == \"0\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('26 6') == 'NO'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\nassert solution('11 20') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''26 6''') == 'NO'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\n\n'''"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 'YES\\n1 2 4 5 6 8'\nassert solution(open('test_input2.txt', 'r').read()) == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3\n''') == 'NO\\n'\nassert solution('''1 1\n''') == 'YES\\n1\\n'\nassert solution('''9 4\n''') == 'NO\\n'\nassert solution('''2 3\n''') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3\n''') == 'NO\\n'\nassert solution('''1 1\n''') == 'YES\\n1\\n'\nassert solution('''9 4\n''') == 'NO\\n'"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '26 6'\n) == 'YES\\n1 2 4 5 6 8'\nassert solution(\n    '8 3'\n) == 'NO'\nassert solution(\n    '1 1'\n) == 'YES\\n1'\nassert solution(\n    '9 4'\n) == 'NO'\nassert solution(\n    '9 5'\n) == 'YES\\n1 1 2 2 3 3 4'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\nassert solution(\"12 8\") == \"YES\\n8 10\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n10 -2') == '1'\nassert solution('1 2\\n2 3\\n1 2\\n1 2\\n2 3') == '1'\nassert solution('1 2\\n2 3\\n10 -2') == '1'\nassert solution('1 2\\n2 3\\n1 2\\n1 2\\n2 3') == '1'\nassert solution('1 2\\n2 3\\n2 -3\\n2 -3\\n2 -3') == '1'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 4\\n3 4\") == \"2\\n\"\nassert solution(\"2 3\\n3 4\") == \"1\\n\"\nassert solution(\"1 4\\n2 3\\n3 4\") == \"0\\n\"\nassert solution(\"3 2\\n-300 -300\\n1 299\\n1 123\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\\n\"\n\n\n\n-----Add test cases here------\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 4\\n4 6\\n10 -2\\n8 -1\\n') == '3'\nassert solution('2 3\\n1 -2\\n2 -1\\n3 -3\\n4 -3\\n5 -1\\n') == '2'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n40 -45\\n') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('10 1\\n-4 -7\\n5 -2\\n-3 -9\\n1 -2\\n2 -1\\n3 -3\\n4 -3\\n5 -1\\n') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''1 100\n1 1\n''') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''5 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''5 2\n-400 -400\n-300 -200\n1 -100\n1 -200\n-500 -500\n1 -300\n1 -300\n''') == '3'\nassert solution('''5 2\n300 -300\n1 299\n1 123\n40 -45\n''') == '2'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 4\n4 6\n10 -2\n8 -1\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n3 2\n300 -300\n1 299\n1 123\n\"\"\") == \"3\"\n\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('1 2\\n3 4\\n4 5\\n3 5\\n1 2') == '4'\nassert solution('2 2\\n1 -2\\n3 4') == '2'\nassert solution('3 3\\n4 2\\n2 -1\\n-3 1\\n3 -1') == '1'\nassert solution('3 3\\n2 -1\\n-3 1\\n3 -1') == '2'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == \"YES\"\nassert solution('''3\n1 1 1 1 1 3 3 3 3 3''') == \"YES\"\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == \"NO\"\nassert solution('''1\n10''') == \"YES\"\n\n'''"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == 'YES\\n1\\n1\\n1\\n1'\nassert solution('2\\n1\\n1\\n1\\n') == 'YES\\n1\\n1\\n1\\n1'\nassert solution('1\\n10\\n1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n2\\n1\\n1\\n') == 'YES\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4') == 'YES\\n1 2 1 1 2 2 2 2 2 2 2 1 8 8 1\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1\\n1 3 1 1 3 3 3 3 3 3 3 3 1 9 9 9 9 9 9 1\\n1 3 1 3 3 1 3 1 3 1 3 1 3 1 3 1\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 1 3 1 3 1 3 1 3 1 3 1 3 1\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 1 3 1 3 1 3 1 3 1 3 1 3 1\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('1 3') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('1 8 1 2 1 2 2 2 2 2 2 2 1 8 1') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input/task11-test-case-1.txt') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('input/task11-test-case-2.txt') == 'NO\\n'\nassert solution('input/task11-test-case-3.txt') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('input/task11-test-case-4.txt') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('input/task11-test-case-5.txt') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('5\\n1 1 1 1 1 3 3 3 3 3 1 1 1 1') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('1\\n10') == 'YES\\n10'\nassert solution('1\\n1') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1 1 3 3 3 3') == 'YES\\n1 2 2 1\\n3 2 2 3\\n3 2 2 3\\n1 2 2 1'\nassert solution('1 2 1 8 8 4 3 8 8 3 4 8 9 2 1 1') == 'NO'\nassert solution('1 1 1 1 1 3 3 3 3') == 'YES\\n1 2 2 1\\n3 2 2 3\\n3 2 2 3\\n1 2 2 1'\nassert solution('1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1') == 'NO'\nassert solution('1 1 1 1 1 3 3 3 3') == 'YES\\n1 3 1\\n3 1 3\\n3 1 3\\n1 3 1'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == 'YES\\n1'\nassert solution('2\\n2') == 'YES\\n1 2'\nassert solution('2\\n2\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\n\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == 'YES\\n1 3 1\\n3 1 3'\n\nassert solution('''1\n10\n''') == 'NO'\n\nassert solution('''2\n5\n1 2 1 2 1 1\n2 1 2 1 2 2\n''') == 'NO'\n\nassert solution('''4\n5\n1 2 1 2 1 3 4\n2 1 2 1 2 1 3\n3 4 4 4 4 3 3\n3 3 3 3 3 1 3\n''') == 'YES\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2'"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expect\n\"\"\""
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 -5') == 'YES'\nassert solution('4 -2') == 'YES'\nassert solution('3 10') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"2 1\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 -10\\n10 0\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 -10\\n10 0\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 6''') == 'YES'\nassert solution('''4 10''') == 'NO'\nassert solution('''10 -10''') == 'YES'\nassert solution('''10 0''') == 'YES'\nassert solution('''10 0''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('5 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n\nassert solution('''10 -2\n5 -3\n2 1\n4 -2\n''') == 'NO'\n\nassert solution('''10 -2\n5 -3\n2 1\n5 -3\n2 1\n4 -2\n''') == 'NO'"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\n\n-----"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''7 3 2''') == 'YES'\nassert solution(\n'''10 1 11''') == 'YES'\nassert solution(\n'''10 1 5''') == 'YES'\nassert solution(\n'''7 2 3''') == 'YES'\nassert solution(\n'''7 2 1''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('7 3 2') == 'NO\\n'\n\n\n\n\n\n\n'''\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 3\\n2\\n') == 'NO'\nassert solution('10 1 1\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('7 1 5') == 'YES'\nassert solution('100 100 100') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 2 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 10 100') == 'NO'\nassert solution('7 2 2') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('1\\n3\\n1') == 'YES'\nassert solution('1\\n3\\n2') == 'NO'\nassert solution('3\\n2\\n1') == 'YES'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaba\nbb\n\n''') == '3'\n\nassert solution('''baaba\nab\n\n''') == '2'\n\nassert solution('''abcde\nabcde\n\n''') == '0'\n\nassert solution('''asdfasdf\nfasd\n\n''') == '3'\n\nassert solution('''zxcvbnm\nzxcvbnm\n\n''') == '0'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expect\n\"\"\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('qwerty', 'erty') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"abcd\", \"abcd\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbbab\", \"bb\") == 2\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('aaab') == 0\nassert solution('a') == 1\nassert solution('baaba') == 3\nassert solution('ba') == 2\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == '3 2'\nassert solution(\"2.572479\") == '10 3'\nassert solution(\"4.024922\") == '9 9'\n\nprint(solution(\"1.200000\"))\nprint(solution(\"2.572479\"))\nprint(solution(\"4.024922\"))"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\nprint(\"Tests passed successfully.\")"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n\n\n'''\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.200000') == \"3 2\"\nassert solution('2.572479') == \"10 3\"\nassert solution('4.024922') == \"9 9\"\nassert solution('1.1') == \"1 1\"\nassert solution('4.5') == \"1 1\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3''') == 'YES', \"First Test\"\nassert solution('''10 4 3''') == 'NO', \"Second Test\"\nassert solution('''10 5 3''') == 'YES', \"Third Test\"\nassert solution('''8 5 3''') == 'NO', \"Fourth Test\"\n\nprint('All Tests passed successfully')"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3 3''') == \"YES\"\nassert solution('''6 2 3''') == \"NO\"\nassert solution('''10 4 3''') == \"YES\"\nassert solution('''8 5 3''') == \"YES\"\n\n'''\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\nassert solution('6 2 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('3 3 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\nassert solution(\"8 4 3\") == \"YES\\n2 4\\n4 1\\n1 3\\n3 1\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"10 4 3\") == \"NO\"\n\n\n\"\"\"\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\nassert solution('8 6 4') == 'YES\\n4 2\\n6 4\\n3 4\\n1 5'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\nassert solution(\"10 5 3\") == \"YES\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\nassert solution('''5 3 1''') == '101100'\nassert solution('''5 3 0''') == '101100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n'''"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"7 5 3\") == \"1101100\"\nassert solution(\"5 5 5\") == \"1110100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n\"\"\"\n\nn, m, k = map(int, stdin.split())\ns = ''.join([input() for _ in range(n)])\nleft, right = m - k, m + k\nans = ''\n\nfor i in range(n):\n    if s[i] == '0':\n        ans += '0' * left + '1' * right + '0' * (n - i - 2 * k)\n        left, right = max(0, left - 1), min(m - i - 1, right + 1)\n    else:\n        ans += '1' * left + '0' * right + '1' * (n - i - 2 * k)\n        left, right = max(0, left + 1), min(m - i - 1, right - 1)\nprint(ans)\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"2 3 3\") == \"110100\"\nassert solution(\"2 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\nassert solution('''999 999 999''') == '101100'\nassert solution('''10 10 10''') == '101100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('7 4 5') == '11110100'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('a') == 'NO'\nassert solution('aab') == 'YES'\nassert solution('abc') == 'YES'\nassert solution('abcabc') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == \"YES\\nacbbac\"\nassert solution('3') == \"YES\\ncacbacbab\"\nassert solution('2') == \"NO\"\nassert solution('1') == \"YES\\nabc\"\nassert solution('2') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n\nOutput''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac\n''') == 'YES\\nabc'"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\nab\nbc\n''') == \"YES\"\nassert solution('''3\naa\nbc\n''') == \"YES\"\nassert solution('''1\ncb\nac\n''') == \"YES\"\nassert solution('''4\nba\nba\n''') == \"NO\"\nassert solution('''4\nac\nac\n''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\nab\nbc\n''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n''') == 'NO'\nassert solution('''1\ncb\nac\n''') == 'YES\\ncacbacbab'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"YES\\nab\\n\"\nassert solution(\"ab\") == \"NO\\n\"\nassert solution(\"bc\") == \"NO\\n\"\nassert solution(\"bb\") == \"NO\\n\"\nassert solution(\"abc\") == \"YES\\nabc\\n\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\nab\\nbc\\n\") == \"NO\"\nassert solution(\"2\\naa\\nbc\\n\") == \"YES\\nacbacbab\"\nassert solution(\"3\\nab\\nbc\\n\") == \"NO\"\nassert solution(\"3\\naa\\nbc\\n\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\\ncbacbacbab\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''9\n-1 2 -1 -1 -1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9'\nassert solution('''10\n-1 2 -1 -1 -1 1 1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''4\n1 1 1\n''') == '1 2 3 4'\nassert solution('''3\n2 1\n''') == '2 1 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 1\\n') == '3 1 2'\nassert solution('5\\n-1 2 2\\n') == '-1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '1 2 3 4 5 6 7 8 9'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '1 2 3 4 5 6 7 8 9'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 1\") == \"-3 1 2\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''10\n9 7 5 4 8 2 10\n''') == '9 7 5 4 8 2'\nassert solution('''100\n9 7 5 4 8 2 10 97 82 87 68 68 98 50 37 19 53 53 74 65 22 22 52\n''') == '9 7 5 4 8 2 10 97 82 87 68 68 98 50 37 19 53 53 74 65 22 22'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n-1 1 -2 2') == '3 1 2'\nassert solution('3\\n1 1 1') == '3 1 2'\nassert solution('5\\n1 1 1 1 1') == '1 2 3 4 5'\nassert solution('5\\n-1 -1 -1 -1 1') == '-1'\nassert solution('5\\n1 -1 -1 -1 1') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''2\n1 1''') == '1'\nassert solution('''6\n1 1 1 1 1 1''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''3''') == '''1'''\nassert solution('''2''') == '''2'''\nassert solution('''1''') == '''1'''\nassert solution('''1000''') == '''49'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"5\") == 2\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 3 3') == 1\nassert solution('2 2 2 3 3') == 2\nassert solution('1 2 2 3 3') == 2\nassert solution('1 2 1 3 3') == 3\nassert solution('1 1 1 1 1') == 0\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n'''"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\n\n\"\"\"\n---Shortest Path---\nhttps://www.hackerrank.com/challenges/shortest-path/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=graphs\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"5\\n2 2 2 2 2\") == \"2\"\nassert solution(\"5\\n2 2 2 2 1\") == \"2\"\nassert solution(\"5\\n2 2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 3\\n\"\n) == \"1\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"2 2 2 3 3\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n) == \"1\\n\"\n\"\"\""
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'\nassert solution('''\n3\n2 2 2\n''') == '2'\nassert solution('''\n4\n1 2 3 4\n''') == '1'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '4'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '10'\n) == '5'\n'''\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == \"5\"\nassert solution('2') == \"1\"\nassert solution('10') == \"5\"\nassert solution('1') == \"1\"\nassert solution('10') == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"25\"\nassert solution(\"10000\") == \"25025\"\nassert solution(\"100000\") == \"25025\"\nassert solution(\"123456789\") == \"25252525\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '1'\nassert solution('1000') == '10'\nassert solution('10000') == '50'\nassert solution('100000') == '250'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('1000') == '100'\nassert solution('10000') == '1000'\nassert solution('100000') == '10000'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('11') == '1'\nassert solution('111') == '3'\nassert solution('1111') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5'\nassert solution('5') == '0'\nassert solution('10\\n') == '5'\nassert solution('5\\n') == '0'\nassert solution('10\\n') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '5'\nassert solution('100') == '25'\nassert solution('1000') == '125'\nassert solution('10000') == '250'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10) == \"5\"\nassert solution(50) == \"10\"\nassert solution(100) == \"15\"\nassert solution(1000) == \"22\"\nassert solution(10000) == \"28\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"4\"\nassert solution(\"113\") == \"3\"\nassert solution(\"1000\") == \"342\"\nassert solution(\"1023\") == \"357\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom math import floor\nfrom sys import stdin, stdout"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\n0 1 1\n1 1 0\n'''\n    ) == '0 1'\n\nassert solution(\n'''\n15\n5 5 5\n5 5 5\n'''\n    ) == '0 15'\n\nassert solution(\n'''\n3\n0 0 3\n3 0 0\n'''\n    ) == '3 3'\n\nassert solution(\n'''\n686\n479 178 29\n11 145 530\n'''\n    ) == '22 334'\n\nassert solution(\n'''\n319\n10 53 256\n182 103 34\n'''\n    ) == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"0\n0\n0\"\"\") == \"0 0\"\nassert solution(\"\"\"2\n0 1 1\n1 1 0\"\"\") == \"0 1\"\nassert solution(\"\"\"15\n5 5 5\n5 5 5\"\"\") == \"0 15\"\nassert solution(\"\"\"3\n0 0 3\n3 0 0\"\"\") == \"3 3\"\nassert solution(\"\"\"686\n479 178 29\n11 145 530\"\"\") == \"22 334\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == ''\n\n'''\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''2''') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[len(stdin) - 1]\n\n\n\"\"\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0 1'\nassert solution(stdin) == '0 15'\nassert solution(stdin) == '3 3'\nassert solution(stdin) == '119 226'\n\n'''\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\") == \"0 1\"\nassert solution(\"1 1 0\") == \"0 1\"\nassert solution(\"0 1 1\") == \"0 1\"\nassert solution(\"1 1 0\") == \"0 1\"\nassert solution(\"0 0 3\") == \"0 3\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '0 1'\nassert solution('''3''') == '0 1'\nassert solution('''15''') == '0 1'\nassert solution('''686''') == '0 15'\nassert solution('''319''') == '119 226'"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''-4\n-3 -2 -1 0 1 2 3''') == '3'\nassert solution('''1\n1 1 1 1''') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1 1 1') == '3'\nassert solution('3\\n2 2 2\\n1 1 1') == '2'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('3\\n-1 -2 -3\\n0 0 0') == '3'\nassert solution('5\\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1') == '3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n-1\\n-1') == '4'\nassert solution('5\\n-1\\n1\\n2\\n-1\\n3\\n-1') == '1\\n3\\n4\\n5'\nassert solution('10\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '6'\nassert solution('5\\n2\\n-1\\n-1\\n-1') == '3\\n3'\nassert solution('10\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n1 2 3') == '3'\nassert solution('3\\n-1 -2 -3') == '3'\nassert solution('4\\n-1 -2 -3 -4') == '3'\nassert solution('4\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\") == \"1\\n1\"\nassert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1 1\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"3\\n1 1 1\") == \"3\\n1 1\\n1 1\\n1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n3\n1 1 1 1\n'''\n) == '3'\n\nassert solution(\n    '''\n5\n1 1 1 1 1\n'''\n) == '5'\n\nassert solution(\n    '''\n7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n'''\n) == '4'\n\nassert solution(\n    '''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n'''\n) == '6'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == 'YES'\nassert solution('''3\n3 1 2\n''') == 'NO'\nassert solution('''4\n7\n2 8 4 3 1\n''') == 'YES'\nassert solution('''3\n3 1 2\n''') == 'NO'\nassert solution('''3\n3\n1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\") == \"NO\\n\"\nassert solution(\"1\\n1\") == \"YES\\n\"\nassert solution(\"3\\n2 3 1\") == \"NO\\n\"\nassert solution(\"2\\n1 2\") == \"YES\\n\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('3 1 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n1 2 3\n'''\n) == \"YES\"\n\nassert solution(\n'''\n3\n1 2 2\n'''\n) == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n2\\n3') == 'YES'\nassert solution('1\\n1\\n3') == 'NO'\nassert solution('1\\n3\\n1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''9\n16 17 19 1 22 23 24 25 26 3 19 20\n\n''') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n2') == 'NO'\nassert solution('3\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('2\\n1 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''3 1 2''') == 'NO'\nassert solution('''1''') == 'YES'\nassert solution('''3 1 2''') == 'NO'\nassert solution('''1 2 3''') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n3') == 'YES'\nassert solution('1\\n4') == 'YES'\nassert solution('1\\n5') == 'YES'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nabcd\naccd''') == '-1'\nassert solution('''6\nabcdef\nabdfec''') == '4'\nassert solution('''5\nabcdef\nabdfec''') == '3 5 4 5'\nassert solution('''2\nabcd\nabcd''') == '0'\nassert solution('''4\nabcd\nabcd''') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''6\nabcdef\nabdfec\n'''\n) == '4'\nassert solution(\n'''4\nabcd\naccd\n'''\n) == '-1'\n\nassert solution(\n'''\n5\na\na\n'''\n) == '0'\nassert solution(\n'''\n1\na\na\n'''\n) == '0'\nassert solution(\n'''\n3\naa\naa\n'''\n) == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcd', 'accd') == '-1'\nassert solution('abcdef', 'abdfec') == '4'\n\n\n\"\"\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '-1'\nassert solution('abcdef') == '4'\nassert solution('abdfec') == '-1'\nassert solution('abdcfe') == '-1'\nassert solution('abdfce') == '3 5 4 5'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_stdout\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''4\nabcd\nabcd\n''') == ''\nassert solution('''4\nabcd\nabcd\n''') == '0'\nassert solution('''4\nabcd\nabcd\n''') == '3 5 4 5'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcdef\") == \"-1\"\nassert solution(\"abdfec\") == \"4 5 4 5\"\nassert solution(\"abcde\") == \"5\"\nassert solution(\"abcde\") == \"5\"\nassert solution(\"abcde\") == \"5\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\nstdin = stdin.readline\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdef', 'abdfec') == '4'\nassert solution('abcd', 'accd') == '-1'\nassert solution('abcd', 'accd') == '0'\nassert solution('abc', 'abc') == '0'\nassert solution('abc', 'abc') == '0'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'P'\nassert solution('ab') == 'PS'\nassert solution('aba') == 'PSPPSPSP'\nassert solution('ba') == 'PSPPS'\nassert solution('baba') == 'PSPPSPSPSP'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\") == \"\"\") == \"0\"\nassert solution(\"\"\") == \"\"\") == \"0\"\nassert solution(\"\"\") == \"\"\") == \"0\"\nassert solution(\"\"\") == \"\"\") == \"0\"\nassert solution(\"\"\") == \"\"\") == \"0\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abababab') == 'SPPSPSPSSPP'\nassert solution('abcabcabc') == 'SPPSPSSSPP'\nassert solution('aaaa') == 'SPPSSPP'\nassert solution('baba') == 'PPSS'\nassert solution('a') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\".join(solution(read().strip()) for _ in range(int(read().strip())))) == read().strip()\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''3\na\naa\naa\na\n''') == 'PPSS'\nassert solution('''2\na\nc\n''') == 'PS'\n\nassert solution('''5\nab\nba\nabc\nba\naba\n''') == 'SPSPSPSP'\nassert solution('''3\na\naa\naa\na\n''') == 'PPSS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'''\nassert solution('''ba''') == '''PPSPSPS'''\nassert solution('''a''') == '''PS'''\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10\\n') == '1'\nassert solution('9 10 12 14 16 18\\n') == '1'\nassert solution('9 10 12 14 16 18\\n1\\n2\\n3') == '1'\nassert solution('9 10 12 14 16 18\\n1\\n2\\n3\\n4') == '0'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('3 4 5 6 7') == 0\nassert solution('5 2 1 3 4') == 1\nassert solution('7 2 1 3 4 5') == 2\nassert solution('8 2 1 3 4 5 6') == 3\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 6 8 10''') == \"1\"\nassert solution('''2 4 6 8 10''') == \"1\"\nassert solution('''2 4 6 8 10''') == \"1\"\nassert solution('''2 4 6 8 10''') == \"1\"\nassert solution('''2 4 6 8 10''') == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('5 7 4 2 11') == '2'\nassert solution('6 11 5 3 8 7') == '2'\nassert solution('8 5 4 3 2 1') == '3'\nassert solution('9 5 4 3 2 1') == '3'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('100 20 30 40 50 60 70 80 90 100') == '1'\nassert solution('100') == '1'\nassert solution('1 100') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom __future__ import annotations\n\nimport sys\n\ninput = sys.stdin.read()\ninput_list = input.split()"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('10\\n1 1 1 1') == '0'\nassert solution('10\\n1 1 1 1 1') == '0'\nassert solution('10\\n1 1 1 1 1 1') == '0'\nassert solution('10\\n1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''1000\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == 2\nassert solution(\"10\\n1 1 0 0 0\") == 0\nassert solution(\"5\\n1 1 1 1 1\") == 0\nassert solution(\"4\\n1 1 1 1\") == 0\nassert solution(\"5\\n0 0 0 1 1\") == 2\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''30\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0''') == '0'\nassert solution('''4\n1 1 1 1''') == '0'\n\n'''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 0 0 0\") == 0\nassert solution(\"4\\n1 1 1 1\") == 0\nassert solution(\"10\\n1 1 0 0 0 0 0 0 0 0\") == 2\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '7'\nassert solution('5\\n1 1 1 0 0') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == input(\"\")\n'''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1'\nassert solution('''16\n1 1 1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '4'\nassert solution('''6 90 12 18 30 18''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == ''\nassert solution('''1 2 3 4 5''') == ''\nassert solution('''6 90 12 18 30 18''') == '4'\nassert solution('''1 2 3 4 5''') == '1'\nassert solution('''6 90 12 18 30 18''') == '4'"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n6 90 12 18 30 18\") == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('6\\n6 90 12 18 30 18\\n') == '4'\nassert solution('2\\n10 100') == '1'\nassert solution('3\\n5 6 7') == '1'\nassert solution('4\\n5 6 7 8') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '4'\nassert solution('''9''') == '1'\nassert solution('''10''') == '1'\nassert solution('''25''') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '4'\nassert solution('''6 90 12 18 30 18''') == '4'\nassert solution('''1 2 3 4 5''') == '1'\nassert solution('''1 2 3 4 5 6''') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''9\n1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10 11''') == '3'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n100') == '2'\nassert solution('2\\n1 2 3 4 5 6') == '1'\nassert solution('2\\n100 100 100 100 100 100') == '2'\nassert solution('2\\n2 1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\n1 2 4 3 3 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n1\n100\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1\n100\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 4 3') == 2\nassert solution('6\\n1 2 4 3 3 2') == 1\nassert solution('2\\n10') == 1\nassert solution('1\\n100') == 1\n\"\"\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n1 2 4 3 3 2\n''') == '2'\nassert solution('''1\n100\n''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('1\\n100') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\"\nassert solution(\"1\\n100\\n\") == \"1\"\nassert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\"\nassert solution(\"1\\n100\\n\") == \"1\"\nassert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n6\n1 2 4 3 3 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n1\n100\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10\\n0 0 1 1 0 0 1 0 0 1') == '3'\nassert solution('10 3\\n0 0 1 1 0 0 1 0 0 1') == '2'\nassert solution('10 10\\n0 0 1 1 0 0 1 0 0 1') == '-1'\nassert solution('10 100\\n0 0 1 1 0 0 1 0 0 1') == '-1'\nassert solution('100 100\\n0 0 1 1 0 0 1 0 0 1') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n5') == '2'\nassert solution('5\\n2') == '-1'\nassert solution('3\\n3') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('15 4\\n0 0 0 0 0 0 0 0 0 0\\n') == '4'\nassert solution('6 3\\n0 0 1 1 0 0 1\\n') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n0 0 1 1 0 1\\n\", 1) == \"3\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 1\\n\", 1) == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 1\\n\", 2) == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 1\\n\", 3) == \"-1\"\nassert solution(\"5 3\\n1 0 1 0 1\\n\", 1) == \"-1\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 1 0 0 1\\n6 2') == '3'\nassert solution('0 1 1 0 0 1\\n5 3\\n') == '2'\nassert solution('0 1 1 0 0 1\\n5 10\\n') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\n\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('inputs/2.txt') == '3'\nassert solution('inputs/3.txt') == '2'\nassert solution('inputs/4.txt') == '-1'\nassert solution('inputs/5.txt') == '3'\nassert solution('inputs/6.txt') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        '3'\n    ) == '3'\nassert solution(\n        '5'\n    ) == '1'\nassert solution(\n        '10'\n    ) == '3'\nassert solution(\n        '20'\n    ) == '6'\nassert solution(\n        '30'\n    ) == '9'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '6'\nassert solution('9') == '6'\nassert solution('100') == '24'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '0'\nassert solution('8') == '2'\nassert solution('15') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n') == '3'\nassert solution('1\\n2\\n3\\n') == '3'\nassert solution('2\\n4\\n5\\n') == '5'\nassert solution('3\\n4\\n5\\n') == '6'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\"\nassert solution(5) == \"10\"\nassert solution(10) == \"15\"\nassert solution(11) == \"22\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == '0'\nassert solution('()()') == '0'\nassert solution(')(') == '0'\nassert solution('())(') == '0'\nassert solution('(()') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(((()\") == \"3\"\nassert solution(\"()()()\") == \"0\"\nassert solution(\")))(((((\") == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('((()' == '((1+1))'\nassert solution('))' == '((1+1))'\nassert solution(')))(((()' == '(1+1+1+1+1+1+1+1+1)')\nassert solution('(())(())' == '(1+1+1+1+1+1+1+1+1)')\nassert solution('(())(())' == '((1+1+1+1+1+1+1+1+1)')\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''()''') == 0\nassert solution('()()()') == 0\nassert solution(')(') == 0\nassert solution('(((') == 0\nassert solution('((()' == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('(((())') == 3\nassert solution('((()))') == 0\nassert solution('))(') == 0\nassert solution('()()()') == 0\nassert solution('))((') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(((()' == solution('((()'))\nassert solution('()()' == solution('((()'))\nassert solution(')))(((((' == solution('((()'))\nassert solution('))()' == solution('((()'))\nassert solution(')))((((((' == solution('((()'))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''()''') == 0\nassert solution('''()()()''') == 0\nassert solution('''((()''') == 3\nassert solution('''(()())(()''') == 3\nassert solution('''))()()(''') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(((()))') == 3\nassert solution('((()' ) == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()()()') == 0\nassert solution('((()') == 3\nassert solution('))') == 0\nassert solution('(((()' == 0\nassert solution(')()(()') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == \"bb\"\nassert solution(\"baaba\") == \"baa\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"asdfasdf\") == \"\"\nassert solution(\"fasd\") == \"f\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('b') == 1\nassert solution('abc') == 1\nassert solution('abcd') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nprint(solution(stdin, stdin))\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''bbaba\nbb''') == 3\nassert solution('''baaba\nab''') == 2\nassert solution('''abcde\nabcde''') == 0\nassert solution('''asdfasdf\nfasd''') == 3\nassert solution('''aaaaa\naaaaa''') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('a'*1000, 'a'*1000) == 0\nprint(solution(input(), input()))\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\") == 7\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''bbaba\nbb''') == 3\nassert solution('''baaba\nab''') == 2\nassert solution('''abcde\nabcde''') == 0\nassert solution('''asdfasdf\nfasd''') == 3\nassert solution('''hijklmn\nhijklmn''') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\"\"\"\nSample 1\n\nbbaba\nbb\n\n3\n\nSample 2\n\nbaaba\nab\n\n2\n\nSample 3\n\nabcde\nabcde\n\n0\n\nSample 4\n\nasdfasdf\nfasd\n\n3\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''bbaba\nbb''') == 3\n\nassert solution(\n'''baaba\nab''') == 2\n\nassert solution(\n'''abcde\nabcde''') == 0\n\nassert solution(\n'''asdfasdf\nfasd''') == 3\nassert solution(\n'''touvwyzruhtzftcdfvdvbxwfmbzmjgwqwdsxenwqjdkhuzgtxhfxcukqvjxzmvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvzdbjxkfvzjxvxdfjxjxvzmfqwyejxsfvndrjxmvz"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"asdfasdf\", \"asdf\") == 0\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '1 2 1 1'\n) == '2'\nassert solution(\n    '2 3 4 5'\n) == '60'\nassert solution(\n    '100 200 1000 100'\n) == '1000'\nassert solution(\n    '1 1 1 1'\n) == '1'\n\n'''\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 4') == '6'\nassert solution('1 1000000000 1000000000 1') == '10000000100000001'\nassert solution('1 1 1 1') == '1'\nassert solution('3 3 3 3') == '27'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 3 4 4') == '24'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 4') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '0'\nassert solution('5 2 4 2') == '8'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '4'\nassert solution('-1 -1 1 1') == '-1'\nassert solution('1 1 1 1') == '4'\nassert solution('-1 -1 -1 -1') == '-1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('-10 10 -10 -10') == '-100'\nassert solution('-5 -5 10 10') == '-10'\nassert solution('1 1 1 1') == '1'\nassert solution('-10 0 0 10') == '-10'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('10 10 10 10') == '0'\nassert solution('1 1000000 1 1') == '1000000'\nassert solution('1 1000000 1 1') == '1000000'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"4\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\"\"\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('5\\n5 1 4 4 5') == '2'\nassert solution('2\\n1 1') == '1'\nassert solution('10\\n9 10 8 5 7 4 6 6 5 4') == '2'\nassert solution('10\\n9 10 8 5 7 4 6 6 5 4 1') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\nprint(f\"Correct solution: {expected}\")"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"2\\n\"\nassert solution(\"9\\n1 4 4 6 7\\n\") == \"2\\n\"\nassert solution(\"9\\n1 4 4 6 7\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == 1\nassert solution('5 4 3 2 1') == 2\nassert solution('8 4 5 1 2 3 7') == 2\nassert solution('10 4 3 1 2 3 4 8') == 2\nassert solution('13 4 3 1 2 3 4 5 8') == 2\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"7\\n7 7 7 7 7 7 7\") == \"5\"\nassert solution(\"10\\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"55\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"9 1 4 4 6 7\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''8\n3 1 2 4 2 3 6 7''') == '6'\nassert solution('''10\n3 1 2 4 2 3 6 7''') == '5'\n'''\nassert solution('''12\n5 1 2 3 4 6 7 9 10 11\n3 1 2 3 4 5 6 7 8 9 10 11\n4 1 2 3 4 5 6 7 8 9 10 11''') == '7'\nassert solution('''20\n1 2 2 3 3 4 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n2 1 2 3 4 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n6 1 2 3 4 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19''') == '4'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"10\\n1 1 2 2 3 3 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 24 21 23\" +\n    \"16 17 14 20 20 11 22\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \"0\" +\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\" +\n    \""
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 19\") == \"2\"\nassert solution(\"14 17 15 14 14 17 17 14\") == \"2\"\nassert solution
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 22''') == '2'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\nassert solution('6\\n2 1 10 50 110 250\\n') == '2'\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution('''\\\n5\n2 10 50 110 250\n''') == '1'\n\nassert solution('''\\\n6\n4 7 12 100 150 199\n''') == '3'\n\nassert solution('''\\\n7\n4 7 12 100 150 199\n''') == '3'\n\nassert solution('''\\\n10\n20 5 10 3 10 9 7 5 11 19\n''') == '5'"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 5 6 7 10 21 23 24 49\\n2 10 50 110 250') == '1'\nassert solution('5\\n2 10 50 110 250\\n4 7 12 100 150 199') == '3'\nassert solution('6\\n4 7 12 100 150 199\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n2 10 50 110 250') == '1'\nassert solution('6\\n2 10 50 110 250\\n4 7 12 100 150 199') == '3'\n\n\n\"\"\"\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(200000)\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"10\n1 2 5 6 7 10 21 23 24 49\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n2 10 50 110 250\n\"\"\") == \"1\"\nassert solution(\"\"\"6\n4 7 12 100 150 199\n\"\"\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 5 6 7 10 21 23 24 49\\n2 10 50 110 250\") == \"4\"\nassert solution(\"6\\n4 7 12 100 150 199\\n2 10 50 110 250\") == \"1\"\nassert solution(\"5\\n2 10 50 110 250\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n10\n1 2 5 6 7 10 21 23 24 49\\\n''') == '4'\n\nassert solution('''\\\n5\n2 10 50 110 250\\\n''') == '1'\n\nassert solution('''\\\n6\n4 7 12 100 150 199\\\n''') == '3'\n\nassert solution('''\\\n6\n4 7 12 100 150 199\\\n''') == '3'\n\nassert solution('''\\\n6\n4 7 12 100 150 199\\\n''') == '3'"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"3\\n5 4 7 12\") == \"2\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 4 8 3 6\n\"\"\") == \"\"\"\n1 2\n\"\"\".strip()\n\nassert solution(\"\"\"\n5\n5 2 11 3 7\n\"\"\") == \"\"\"\n1 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n6\n2 5 10 1 10 2\n\"\"\") == \"\"\"\n1 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n5\n5 2 11 3 7\n\"\"\") == \"\"\"\n1 4\n\"\"\".strip()\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1') == '1 2'\nassert solution('2\\n2') == '2 1'\nassert solution('2\\n3') == '2 3'\nassert solution('2\\n4') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''10\n5 2 11 3 7 4 8 9 10''') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\nassert solution('''9\n2 7 5 4 1 6 2 8 3 9\n''') == '1 3'\nassert solution('''2\n4\n5 4\n''') == '1 1'\nassert solution('''3\n6\n9 8\n''') == '1 3'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"1 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1 2') == '1 2'\nassert solution('3\\n1 1 2') == '1 1'\nassert solution('4\\n1 1 2 2') == '1 2'\nassert solution('5\\n1 1 2 2 3') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''7\n2 5 10 1 10 2''') == '1 4'\nassert solution('''8\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('321') == '021'\nassert solution('121') == '021'\nassert solution('120110') == '120120'\nassert solution('120120') == '120120'\n\n\n\"\"\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'\nassert solution('912001') == '911201'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('11') == '21'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('11') == '1'\nassert solution('112') == '01'\nassert solution('2112') == '021'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''121''') == '021'\nassert solution('''123''') == '021'\nassert solution('''1000''') == '021'\nassert solution('''101''') == '021'\nassert solution('''012''') == '021'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('211200') == '120120'\nassert solution('11011') == '01110'\nassert solution('1111') == '1111'\nassert solution('0011') == '0100'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '110'\nassert solution('1120') == '1112'\nassert solution('1010') == '10101'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('111') == '111'\nassert solution('1111') == '1110'\nassert solution('1110') == '0110'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1''') == '4'\nassert solution('''5 4''') == '5'\nassert solution('''8 9''') == '9'\nassert solution('''2 1''') == '1'\nassert solution('''4 5''') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == '4'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '8'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1') == '4'\nassert solution('0 0') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('4 4') == '1'\nassert solution('4 4') == '4'\nassert solution('2 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"4\"\nassert solution(\"6 2\") == \"8\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 1') == '4'\nassert solution('7 2') == '8'\nassert solution('7 2') == '8'\nassert solution('7 2') == '8'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 1''') == '4'\nassert solution('''6 2''') == '0'\nassert solution('''6 3''') == '3'\nassert solution('''6 4''') == '2'\nassert solution('''6 5''') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '1'\nassert solution('5\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nX, K, D = (int(x) for x in stdin.split())\nprint(min(abs(X + D), abs(X - D)))\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 8 9\") == \"2\"\nassert solution(\"7 8 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 3 2\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 4 3') == '2'\nassert solution('7 1 3') == '5'\nassert solution('9 3 6') == '5'\nassert solution('10 4 9') == '9'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-6 2 4') == '2'\nassert solution('-6 -2 4') == '2'\nassert solution('6 4 2') == '2'\nassert solution('6 -4 2') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('2 2 5') == '0'\nassert solution('10 2 3') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2:6]"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"-6 -2 -4\") == \"-2\"\nassert solution(\"0 -1 -1\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"-1 -1 -1\") == \"0\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\nfrom io import StringIO\nfrom unittest import TestCase\n\nclass TestClass(TestCase):\n    def assertIO(self, input: str, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_sample(self):\n        input = \"\"\"6 2 4\"\"\"\n        output = \"\"\"2\"\"\"\n        self.assertIO(input, output)\n\n    def test_1(self):\n        input = \"\"\"2 1 0\"\"\"\n        output = \"\"\"2\"\"\"\n        self.assertIO(input, output)\n\n    def test_2(self):\n        input = \"\"\"2 10 1\"\"\"\n        output = \"\"\"0\"\"\"\n        self.assertIO(input, output)\n\n    def test_3(self):\n        input = \"\"\"3 2 2\"\"\"\n        output = \"\"\"0\"\"\"\n        self."
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('   ') == ''\nassert solution(' 1 ') == ''\nassert solution('   1 ') == ''\nassert solution('   1 ') == ''\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\n\n'''\n\nfrom functools import reduce\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11''') == ''\nassert solution('''14''') == ''\nassert solution('''61441''') == ''\nassert solution('''571576''') == ''\nassert solution('''2128506''') == ''\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 27\nassert solution('2') == 2\nassert solution('1') == 1\nassert solution('9') == 9\nassert solution('27') == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == 27\nassert solution('''15''') == 27\nassert solution('''7''') == 7\nassert solution('''27''') == 27\nassert solution('''2''') == 2\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 3\n\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == 27\n-----\nTo submit your code on Codility, uncomment the following lines and run \"Run > Verify > Check\"\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3) == 27\nassert solution(1) == 1\nassert solution(0) == 1\nassert solution(100) == 27\nassert solution(1000) == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == 27\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '27'\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\nimport sys\nassert sys.version_info >= (3,9)\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\nprint(\"Your solution is CORRECT.\")\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13') == \"1\"\nassert solution('927') == \"1\"\nassert solution('48') == \"0\"\n\n\"\"\"\nimport sys\nfrom collections import deque\n\nclass Solution:\n    def solve(self, a):\n        a = int(a)\n        queue = deque([])\n        queue.append(a)\n        visited = {a}\n        visited.add(a)\n        count = 0\n        while len(queue)!= 0:\n            cur = queue.popleft()\n            if cur % 2 == 0 and cur // 2 not in visited:\n                visited.add(cur // 2)\n                queue.append(cur // 2)\n            if cur % 3 == 0 and cur // 3 not in visited:\n                visited.add(cur // 3)\n                queue.append(cur // 3)\n            if cur % 5 == 0 and cur // 5 not in visited:\n                visited.add(cur // 5)\n                queue.append(cur // 5)\n            if cur % 7 == 0 and cur // 7 not in visited:\n                visited.add(cur // 7)\n                queue.append(cur // 7)\n            if cur % 11 == 0 and cur // 11 not in visited:\n                visited.add(cur // 11)\n                queue.append(cur // 11)\n            if cur % 13 == 0 and cur // 13 not in visited:\n                visited.add(cur // 13)\n                queue.append(cur // 13)\n            if cur % 17 == 0 and cur // 17 not in visited:\n                visited.add(cur // 17)\n                queue.append(cur // 17)\n            if cur % 19 == 0 and cur // 19 not in visited:\n                visited.add(cur // 19)\n                queue.append(cur // 19)\n            if cur % 31 == 0 and cur // 31 not in visited:\n                visited.add(cur // 31)\n                queue.append(cur // 31)\n            if cur % 37 == 0 and cur // 37 not in visited:\n                visited.add(cur // 37)\n                queue.append(cur // 37)\n            if cur % 43 == 0 and cur // 43 not in visited:\n                visited.add(cur // 43)\n                queue.append(cur // 43)\n            if cur % 49 == 0 and cur // 49 not in visited:\n                visited.add(cur // 49)\n                queue.append(cur // 49)\n            if cur % 53 == 0 and cur // 53 not in visited:\n                visited.add(cur // 53)\n                queue.append(cur // 53)\n            if cur % 59 == 0 and cur // 59 not in visited:\n                visited.add(cur // 59)\n                queue.append(cur // 59)\n            if cur % 61 == 0 and cur // 61 not in visited:\n                visited.add(cur // 61)\n                queue.append(cur // 61)\n            if cur % 67 == 0 and cur // 67 not in visited:\n                visited.add(cur // 67)\n                queue.append(cur // 67)\n            if cur % 71 == 0 and cur // 71 not in visited:\n                visited.add(cur // 71)\n                queue.append(cur // 71)\n            if cur % 73 == 0 and cur // 73 not in visited:\n                visited.add(cur // 73)\n                queue.append(cur // 73)\n            if cur % 79 == 0 and cur // 79 not in visited:\n                visited.add(cur // 79)\n                queue.append(cur // 79)\n            if cur % 83 == 0 and cur // 83 not in visited:\n                visited.add(cur // 83)\n                queue.append(cur // 83)\n            if cur % 89 == 0 and cur // 89 not in visited:\n                visited.add(cur // 89)\n                queue.append(cur // 89)\n            if cur % 97 == 0 and cur // 97 not in visited:\n                visited.add(cur // 97)\n                queue.append(cur // 97)\n            if cur % 101 == 0 and cur // 101 not in visited:\n                visited.add(cur // 101)\n                queue.append(cur // 101)\n            if cur % 103 == 0 and cur // 103 not in visited:\n                visited.add(cur // 103)\n                queue.append(cur // 103)\n            if cur % 107 == 0 and cur // 107 not in visited:\n                visited.add(cur // 107)\n                queue.append(cur // 107)\n            if cur % 109 == 0 and cur // 109 not in visited:\n                visited.add(cur // 109)\n                queue.append(cur // 109)\n            if cur % 113 == 0 and cur // 113 not in visited:\n                visited.add(cur // 113)\n                queue.append(cur // 113)\n            if cur % 127 == 0 and cur // 127 not in visited:\n                visited.add(cur // 127)\n                queue.append(cur // 127)\n            if cur % 131 == 0 and cur // 131 not in visited:\n                visited.add(cur // 131)\n                queue.append(cur // 131)\n            if cur % 137 == 0 and cur // 137 not in visited:\n                visited.add(cur // 137)\n                queue.append(cur // 137)\n            if cur % 139 == 0 and cur // 139 not in visited:\n                visited.add(cur // 139)\n                queue.append(cur // 139)\n            if cur % 149 == 0 and cur // 149 not in visited:\n                visited.add(cur // 149)\n                queue.append(cur // 149)\n            if cur % 151 == 0 and cur // 151 not in visited:\n                visited.add(cur // 151)\n                queue.append(cur // 151)\n            if cur % 153 == 0 and cur // 153 not in visited:\n                visited.add(cur // 153)\n                queue.append(cur // 153)\n            if cur % 157 == 0 and cur // 157 not in visited:\n                visited.add(cur // 157)\n                queue.append(cur // 157)\n            if cur % 173 == 0 and cur // 173 not in visited:\n                visited.add(cur // 173)\n                queue.append(cur // 173)\n            if cur % 179 == 0 and cur // 179 not in visited:\n                visited.add(cur // 179)\n                queue.append(cur // 179)\n            if cur % 181 == 0 and cur // 181 not in visited:\n                visited.add(cur // 181)\n                queue.append(cur // 181)\n            if cur % 193 == 0 and cur // 193 not in visited:\n                visited.add(cur // 193)\n                queue.append(cur // 193)\n            if cur % 197 == 0 and cur // 197 not in visited:\n                visited.add(cur // 197)\n                queue.append(cur // 197)\n            if cur % 199 == 0 and cur // 199 not in visited:\n                visited.add(cur // 199)\n                queue.append(cur // 199)\n            if cur % 211 == 0 and cur // 211 not in visited:\n                visited.add(cur // 211)\n                queue.append(cur // 211)\n            if cur % 223 == 0 and cur // 223 not in visited:\n                visited.add(cur // 223)\n                queue.append(cur // 223)\n            if cur % 227 == 0 and cur // 227 not in visited:\n                visited.add(cur // 227)\n                queue.append(cur // 227)\n            if cur % 229 == 0 and cur // 229 not in visited:\n                visited.add(cur // 229)\n                queue.append(cur // 229)\n            if cur % 233 == 0 and cur // 233 not in visited:\n                visited.add(cur // 233)\n                queue.append(cur // 233)\n            if cur % 239 == 0 and cur // 239 not in visited:\n                visited.add(cur // 239)\n                queue.append(cur // 239)\n            if cur % 241 == 0 and cur // 241 not in visited:\n                visited.add(cur // 241)\n                queue.append(cur // 241)\n            if cur % 251 == 0 and cur // 251 not in visited:\n                visited.add(cur // 251)\n                queue.append(cur // 251)\n            if cur % 257 == 0 and cur // 257 not in visited:\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\nassert solution(\"999\") == \"0\"\nassert solution(\"789\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('A') == 'A'\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('927') == '1'\nassert solution('926') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n''') == '1'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n2\n''') == '1'\nassert solution('''\n7\n''') == '1'\nassert solution('''\n73\n''') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(4) == 0\nassert solution(45) == 1\nassert solution(24) == 0\nassert solution(20) == 1\nassert solution(98) == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 5 3 1''') == '4'\nassert solution('''5\n3 2 4 1 5''') == '2'\nassert solution('''4\n2 3 4 5''') == '2'\nassert solution('''1\n1''') == '0'\nassert solution('''5\n5''') == '0'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 5 3 1''') == 4\n\nassert solution('''1\n1''') == 0\n\nassert solution('''1\n2''') == 2\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == 45\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == 5\nassert solution('0') == 0\nassert solution('5 5 5 5 5') == 5\nassert solution('5 5 5 5 5 5') == 5\nassert solution('5 5 5 5 5 5') == 5\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 4\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('1 2 3 4') == 10\nassert solution('2 3 4 5') == 0\nassert solution('3 4 5 6') == 15\nassert solution('4 5 6 7') == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 5 3 1') == '4'\n\n\"\"\"\nfrom collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\n\nl = 0\nr = n\n\nfor i in range(n):\n    if a[i] > l:\n        l = a[i]\n    if a[i] < r:\n        r = a[i]\n\nwhile r - l > 1:\n    m = (r + l) // 2\n    if l == r:\n        break\n    c = 0\n    for i in range(n):\n        if m <= a[i] <= r:\n            c += 1\n    if c >= n // 2:\n        r = m\n    else:\n        l = m\n\nprint(r)\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import Iterable\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n\n'''\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n, k = map(int, stdin.readline().strip().split())\n    print(n // k)"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('t') == 't'\nassert solution('t1') == 't1'\nassert solution('t12') == 't12'\nassert solution('t123') == 't123'\nassert solution('t1234') == 't1234'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4 2\\n1 2') == '2'\nassert solution('1\\n1 1') == '1'\nassert solution('7\\n7 7\\n7 1') == '1'\nassert solution('1\\n4 1\\n1 1') == '1'\nassert solution('1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''8 1\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '999999733'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '999999733'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4') == '2'\nassert solution('5 6') == '2'\nassert solution('1 1') == '1'\nassert solution('2 10') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9 9') == '2'\nassert solution('9 5') == '1'\nassert solution('9 5') == '1'\nassert solution('9 5') == '1'\nassert solution('9 9') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"2 2\\n\" +\n\"2 1 2\\n\" +\n\"1 2\\n\" +\n\"0 1\\n\") == \"1\"\nassert solution(\n\"3 4\\n\" +\n\"1 1 2 2\\n\" +\n\"2 2\\n\" +\n\"1 1 1 1\\n\" +\n\"0 0 0 0\\n\") == \"0\"\nassert solution(\n\"4 3\\n\" +\n\"2 1 1 1\\n\" +\n\"2 2\\n\" +\n\"1 2 1 2\\n\" +\n\"1 1\\n\") == \"1\"\nassert solution(\n\"5 5\\n\" +\n\"2 1 1 1 1\\n\" +\n\"2 2 2 2 2\\n\" +\n\"3 3 1 3 3\\n\" +\n\"1 1 2 1 3\\n\" +\n\"1 2\\n\" +\n\"1 1 1 1 1\\n\" +\n\"0 0 0 0 0\\n\") == \"3\"\nassert solution(\n\"8 8\\n\" +\n\"2 1 1 1 1 1 1\\n\" +\n\"2 2 2 2 2 2 2\\n\" +\n\"3 3 1 3 3 3 3\\n\" +\n\"1 1 2 1 1 3 1\\n\" +\n\"1 2 1 2 2 2 1\\n\" +\n\"2 1 2 1 2 1 2\\n\" +\n\"1 2\\n\" +\n\"1 1 1 1 1 1 1\\n\" +\n\"0 0 0 0 0 0 0\\n\") == \"5\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n0 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3 3\n2 2 2\n1 2 1\n0 1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 3\n2 3 1 2\n1 3 2\n0 1 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n10 10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"2 1 1 2\") == \"0\"\nassert solution(\"1 2 2 1 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '0'\nassert solution('2 1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1 2') == '0'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"1 2\") == 1\nassert solution(\"2 2\") == 1\nassert solution(\"2 1 2\") == 1\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == \"5.00000000000000000000\"\nassert solution('3 4 0 0') == \"5.00000000000000000000\"\nassert solution('3 0 0 0') == \"5.00000000000000000000\"\nassert solution('3 0 0 0') == \"5.00000000000000000000\"\nassert solution('3 0 0 0') == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"10 12 15 14\") == \"0.0000000000000125\"\nassert solution(\"5 3 9 7\") == \"7.0859375\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3 4 9 0'\n) == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"5.000000000000\"\nassert solution(\"2 4 6 8\") == \"2.250000000000\"\nassert solution(\"3 4 9 0\") == \"5.000000000000\"\nassert solution(\"1 2 3 4\") == \"5.000000000000\"\nassert solution(\"10 11 12 13\") == \"5.000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5.00000000000000000000'"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 1 1') == '5.00000000000000000000'\nassert solution('2 2 2 2') == '8.0000000000000000000'\nassert solution('3 3 3 3') == '17.999999999999999.00000000'\nassert solution('3 4 4 4') == '10.0000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '5.00000000000000000000'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('3 1') == '97'\nassert solution('15 2') == '97'\nassert solution('5 6') == '10'\nassert solution('15 7') == '105'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''7 2''') == '25'\nassert solution('''15 1''') == '11'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 1\\n') == '4'\nassert solution('3 1\\n1 1\\n') == '6'\nassert solution('1 1\\n1 1\\n') == '8'\nassert solution('2 2\\n1 1\\n') == '97'\nassert solution('3 1\\n1 1\\n') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''15 2''') == '97'\nassert solution('''15 2''') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\nassert solution('''3 2''') == '0'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n\n\n'''\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\nassert solution('''10 7\n1 6 2 9 5 7 4 8 3 10 6 4 1''') == '98'\nassert solution('''3 2\n1 1 1''') == '2'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 1 2 3 1 2 3') == '97'\nassert solution('15 2') == '97'\nassert solution('1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 1 1') == '6'\nassert solution('5 4') == '8'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nassert solution('''1 5\n0 1000000\n''') == '0'\n\nassert solution('''1 5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0') == '0'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"\n\n\n\n-------How to run the solutions-------\n\nTo run the solution of the problem on Codility, you need to install PyPy3, and copy the solutions to the next level.\n\n\n    To run this solution on Codility:\n    You can run it using PyCharm, for example:\n    Run-> Edit Configurations->Project: Codility, Environment: Your OS\n\n    Make sure that the following line is in the \"Run\" section:\n    python Codility_Solutions.py\n\n\n    If it is not the case, you can use a text editor to open the file.\n\n\n    A PyCharm instance is running (the icon will appear in the upper-right corner).\n\n\n    A folder called \"src\" contains the solutions. It's inside a subfolder called \"Solutions\".\n\n\n    Copy this solution to the src folder:\n    cp Codility_Solutions.py src/Solutions/\n\n\n    Now you can run the solution, for example:\n    cd src/Solutions/\n    Run->Codility_Solutions.py\n\n    (A new window will open and the solution will start running)\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3') == '6'\nassert solution('1000000\\n') == '0'\nassert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\nassert solution('1000000\\n') == '0'\nassert solution('3 5\\n1 2\\n3 4\\n2 4\\n2 5\\n') == '2 3'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nassert solution('''1 0\n-101922\n''') == '-1'\n\nassert solution('''2 2\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('-1 -2 -3 -4') == '-3'\nassert solution('-100000 -100000 100000 100000') == '0'\nassert solution('100000 100000 100000 -100000 -100000') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nyz\\nr\\ndabcef\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nyz\\r\\ndabcef\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nyz\\rdabc\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nyz\\raa\\nbabc') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'No'\nassert solution('abb') == 'No'\nassert solution('abab') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"y\") == \"Yes\"\nassert solution(\"yeS\") == \"Yes\"\nassert solution(\"yes\") == \"Yes\"\nassert solution(\"yes \") == \"No\"\nassert solution(\"yeS \") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''abc\nabc\nabcd\nabd\nabcd\nabcd\nabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\n''')\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(input().split())) == 0"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0') == '0'\nassert solution('-2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3 4') == '1'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n'''\n\nassert solution('''3 3\n-1 1 1\n1 1 1\n1 1 1\n''') == '1'\n\nassert solution('''2 2\n1 1\n1 1\n''') == '2'"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000''') == '0'\nassert solution('''1\n1\n1''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0') == '0'\nassert solution('1000000') == '0'\nassert solution('-2 3 1 2') == '6'\nassert solution('3 5') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2 3') == '3'\nassert solution('-2 -3 1 2') == '6'\nassert solution('1 -2 3 1 2') == '7'\nassert solution('-2 -3 1 4') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(''.join(map(str, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))) == '7'\nassert solution(''.join(map(str, [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]))) == '0'\nassert solution(''.join(map(str, [2, -3, 1, -1, 4]))) == '6'\nassert solution(''.join(map(str, [-2, -3, 1, -1, 4]))) == '6'\nassert solution(''.join(map(str, [2, -3, 1, -1, 4]))) == '7'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\\nb\\nc\") == \"\"\nassert solution(\"a\\nb\\nc\\na\") == \"\"\nassert solution(\"a\\nb\\nc\\na\\na\") == \"\"\nassert solution(\"a\\nb\\nc\\na\\na\\na\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/leetcodel1.txt') == '2'\nassert solution('inputs/leetcodel2.txt') == '6'\nassert solution('inputs/leetcodel3.txt') == '1'\nassert solution('inputs/leetcodel4.txt') == '7'\nassert solution('inputs/leetcodel5.txt') == '2'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == 'LRLRLLL'\nassert solution('''3\n1 2 3''') == 'LLL'\nassert solution('''4\n1 2 4 3''') == 'LLRL'\nassert solution('''10\n1 2 4 6 8 10 15 19 22''') == 'LRLRLLLLRL'\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n\"\"\"\n) == 'LRL'\n\nassert solution(\n\"\"\"\n7\n1 3 5 6 7 4 2\n\"\"\"\n) == 'LRLRLLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == answer\n\"\"\"\n\nimport sys\n\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"L\"\nassert solution(\"1 2\") == \"L\"\nassert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"1 3 5 6 7 4 2\") == \"LLL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n1 2 4 3''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '8'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == 'LL'\nassert solution('2\\n2\\n') == 'LL'\nassert solution('3\\n3\\n') == 'LL'\nassert solution('2\\n1\\n') == 'RL'\nassert solution('4\\n4\\n') == 'LLRLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n') == 'RRRRRRLLRLLRLLRL'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2 1') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('7 6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2 1') == '2'\nassert solution('7 6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 1') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 5 3 4\\n') == '4\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2\\n'\n\n\n-----My Submission-----\n\n\n\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 1') == '1'\nassert solution('3\\n1 2 5 3 4') == '4'\nassert solution('2\\n1 2') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2 1 2 3 4\") == \"2\"\nassert solution(\"6 5 4 3 2 4 3\") == \"2\"\nassert solution(\"1 2 1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 5 3 4') == '4'\nassert solution('1 2 5 3 4 6') == '4'\nassert solution('1 2 5 3 4 6 7') == '5'\nassert solution('1 2 5 3 4 6 7 8') == '6'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n4\\n5') == '1'\nassert solution('1\\n2\\n4\\n5\\n6\\n7') == '2'\nassert solution('1\\n2\\n4\\n5\\n6\\n7\\n8') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\"\n\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '1'\nassert solution('''5 3\n1 2 3 3 4''') == '2'\nassert solution('''5 3\n1 2 3 3 4''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 4 5\\n') == '1'\nassert solution('1 2 3 4 5\\n') == '2'\nassert solution('1 2 3 3 3\\n') == '0'\nassert solution('1 2 2 4 5\\n') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1\\n'\nassert solution('1\\n2\\n2') == '2\\n'\nassert solution('1\\n1\\n1') == '0\\n'\nassert solution('1\\n2\\n3\\n4') == '3\\n'\nassert solution('1\\n2\\n3\\n3\\n3') == '0\\n'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n1 2 3 4 5\\n') == '1'\nassert solution('1\\n2\\n') == '0'\nassert solution('1\\n2\\n1\\n') == '0'\nassert solution('1\\n2\\n1\\n1\\n') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2 3\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\"\nassert solution(\"1 1\\n1\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 3 4''') == '4'\nassert solution('''4 0 1''') == '1'\nassert solution('''10 30 10''') == '4'\nassert solution('''4 0 2''') == '2'\nassert solution('''4 1 3''') == '3'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 0 4') == '0'\nassert solution('10 10 0 0') == '10'\nassert solution('10 10 10 10') == '10'\nassert solution('10 10 10 10 10') == '10'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[-1]\n\"\"\""
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('2 3 4') == '0'\nassert solution('2 3 4') == '0'\nassert solution('16 18 19') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('10 0 3') == '0'\nassert solution('4 1 0') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '0'\nassert solution('10 9 8 7 6 5 4 3 2 1') == '9'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 5') == '1'\nassert solution('8 3 6') == '0'\nassert solution('8 3 7') == '0'\nassert solution('8 3 8') == '0'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('1\\n2\\n') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n1\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n8\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n3\n''') == '-1'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3''') == '48'\nassert solution('''1\n2\n2 2 2 2 2 2 2 2 2''') == '4'\nassert solution('''8\n1\n1 2 2 3 4 4 5 5 6 7''') == '-1'\nassert solution('''8\n8\n1 2 2 4 4 8''') == '-1'\nassert solution('''8\n8\n1 2 2 3 3 4 4 5 5 6 7''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\") == \"48\\n4\"\n\"\"\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"48\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"4\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"-1\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"4\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1') == '2'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n3\\n2') == '4'\nassert solution('2\\n1\\n1\\n1') == '4'\nassert solution('2\\n1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n') == '48\\n4'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n6') == '4'\nassert solution('2\\n8') == '2'\nassert solution('4\\n2\\n2\\n2') == '-1'\nassert solution('4\\n2\\n2\\n8') == '-1'\nassert solution('3\\n3\\n3') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '-1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n4 4 4 4 4') == '2\\n4 4'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('6\\n6 6 6 6 6') == '1\\n6'\nassert solution('6\\n6 6 6 6 6') == '1\\n6'\nassert solution('2\\n4 4 4 4 4') == '2\\n4 4'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('2 4 2 4 4') == '2 4'\nassert solution('5') == '1'\nassert solution('6 6 6 6 6') == '1 6'\nassert solution('6 6 6 6 6') == '1 6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 1 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nprint(solution(stdin))\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n5\\n1\\n6\\n1') == '3\\n5 6 1'\nassert solution('6\\n6\\n6\\n6\\n6') == '1'\nassert solution('6\\n6\\n6\\n6\\n6') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 5 5 1 6 1''') == '3\\n5 6 1'\nassert solution('''6\n2 4 2 4 4 6''') == '1\\n6'\nassert solution('''6\n6 6 6 6 6 6''') == '1\\n6'\nassert solution('''7\n7 7 7 7 7 7''') == '1\\n7'\nassert solution('''7\n7 7 7 7 7 7 7''') == '1\\n7'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '1\\n1'\nassert solution('2\\n1\\n2\\n2\\n2\\n') == '2\\n2\\n2'\nassert solution('3\\n1\\n1\\n2\\n3\\n') == '2\\n3'\nassert solution('4\\n1\\n1\\n1\\n1\\n') == '1\\n1'\nassert solution('5\\n1\\n2\\n2\\n2\\n') == '2\\n2\\n2'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a1') == 'a2'\nassert solution('12') == '13'\nassert solution('abc') == 'abcd'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"432\"\n) == \"435\"\n\nassert solution(\n\"99\"\n) == \"103\"\n\nassert solution(\n\"237\"\n) == \"237\"\n\nassert solution(\n\"42\"\n) == \"44\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '6'\nassert solution('-73') == '-74'\nassert solution('1') == '2'\nassert solution('-1') == '-2'\nassert solution('27') == '28'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6') == '6'\nassert solution('5') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\nassert solution('9') == '9'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123') == '123'\nassert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('32') == '32'\nassert solution('0123456789') == '01234567890'\nassert solution('099') == '101'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn = int(stdin.readline())\n\nfor i in range(n):\n    s, m, b = stdin.readline().strip().split(\" \")\n    b = list(map(int, b))\n    possible = [0] * m\n    for j in range(m):\n        possible[j] = sum([abs(j - k) for k in range(m) if s[j] > s[k]])\n    for j in range(len(b)):\n        possible[j] += b[j]\n    print(s[:possible.index(max(possible))] + s[possible.index(max(possible)):])\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'a'\nassert solution('abcabc') == 'a'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aab'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'abc'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('codeforces') == 'codeforces'\nassert solution('ecoosdcefr') == 'ecoooefr'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n-100000 -3 -20000 -6 -7 -1 -4 -9 -5 -8 -2 -1 0 2 4 6 8 10''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 -5 -6 -7 -8 -9 -10 -4 -2 -1 0 2 4 6 8 10''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 -5 -6 -7 -8 -9 -10 -4 -2 -1 0 2 4 6 8 10''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'forges'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''aab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\nassert solution('''aab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\nassert solution('''aab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\nassert solution('''aab\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abc\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aab'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'codeforces'\n'''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\n\n\"\"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"aab\"\nassert solution(\"codeforces\") == \"c\"\nassert solution(\"aac\") == \"aac\"\n\n\"\"\""
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'b'\nassert solution('2') == 'a'\nassert solution('3') == 'a'\nassert solution('4') == 'z'\nassert solution('5') == 'z'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'b'\nassert solution('26') == 'z'\nassert solution('5') == 'a'\nassert solution('534') == 'aa'\nassert solution('718') == 'aab'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"ba\"\nassert solution(\"5\") == \"az\"\nassert solution(\"10\") == \"za\"\nassert solution(\"13\") == \"zz\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n''') == 'b'\nassert solution('''41\n''') == 'z'\nassert solution('''73\n''') == 'aaa'\nassert solution('''999\n''') == 'zzz'\nassert solution('''100000\n''') == 'aaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'b'\nassert solution('1') == 'a'\nassert solution('26') == 'z'\nassert solution('27') == 'aa'\nassert solution('701') == 'zy'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"z\") == \"z\"\nassert solution(\"b\") == \"b\"\nassert solution(\"b\") == \"b\"\nassert solution(\"aa\") == \"aa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"bb\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1000000) == 'zz'\nassert solution(10) == 'a'\nassert solution(1) == 'a'\nassert solution(2) == 'b'\nassert solution(3) == 'c'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n''') == 'abc'\nassert solution('''1000000000000001''') == 'zyz'\nassert solution('''27\n28\n29\n701\n702''') == 'aaab'\nassert solution('''18279\n18280\n18281\n475253\n475254''') == 'aaaaa'\nassert solution('''475255\n475256\n''') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"b\"\nassert solution(\"27\") == \"za\"\nassert solution(\"27\") == \"ba\"\nassert solution(\"18277\") == \"zzz\"\nassert solution(\"18279\") == \"zza\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('a bb aa aa bb bb') == 12\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 5 4 1 2 3 5 6') == 'ABBA'\nassert solution('1 5 4 3 1 2 3 5 6') == 'ABBA'\nassert solution('1 2 3 4 1 2 3 5 6') == 'ABBA'\nassert solution('1 2 3 4 1 2 3 5 6 7 8 9') == 'ABBA'\nassert solution('10 1 2 3 4 1 2 3 5 6 7 8 9') == 'ABBA'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''to be or not to be''') == \"12\"\nassert solution('''a ab a a b ab a a b c''') == \"13\"\nassert solution('''aa bb aa aa bb bb''') == \"11\"\nassert solution('''aa bb aa aa bb bb''') == \"11\"\nassert solution('''aa bb aa aa bb bb''') == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '12'\nassert solution(stdin) == '11'\nassert solution(stdin) == '13'\nassert solution(stdin) == '14'\nassert solution(stdin) == '16'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''to be or not to be\n''') == '12'\n\nassert solution('''a ab a a b ab a a b c\n''') == '13'\n\nassert solution('''aa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1 2\"\nassert solution(\"2\\n1 2 3\") == \"1 2 3\"\nassert solution(\"2\\n1 2 3 4\") == \"1 2 4\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4000'"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1 1 1 1 1') == '1\\n5'\nassert solution('5 2\\n1 2000 2000 2') == '4000\\n2 2'\nassert solution('8 1\\n5 4 2 6 5 1 9 2') == '20'\nassert solution('10 2\\n1 2000 2000 2000 2000 2000 2000') == '4000'\nassert solution('8 2\\n5 4 2 6 5 1 9 2') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''8 3\n5 4 2 6 5 1 9 2'''\n    ) == '20'\n\nassert solution(\n'''5 1\n1 1 1 1 1'''\n    ) == '1'\n\nassert solution(\n'''4 2\n1 2000 2000 2'''\n    ) == '4000'\n\nassert solution(\n'''3 1\n2 4 8'''\n    ) == '6'\n\nassert solution(\n'''3 2\n1 200 1'''\n    ) == '1'"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"\n\n\n\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 3''') == '20'\nassert solution('''5 1''') == '1'\nassert solution('''4 2''') == '4000'\nassert solution('''1 2000 2000 2''') == '4000'\nassert solution('''4 1''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1') == '1\\n5'\nassert solution('3 2') == '3 2 3'\nassert solution('4 2') == '4000\\n2 2'\n\n\n\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4000\\n2 2'\n\n'''\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n\nmaximum = 0\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n-1') == '1'\nassert solution('1\\n-1\\n1') == '1'\nassert solution('1\\n-1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n-1') == '0'\nassert solution('1\\n1') == '1'\nassert solution('2\\n0') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n-1 1') == '2'\nassert solution('2\\n1 -1') == '2'\nassert solution('3\\n1 1 -1') == '3'\nassert solution('3\\n-1 -1 1') == '2'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('4\\n1 2 3 4') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('2') == '0'\nassert solution('1\\n2\\n3') == '0'\nassert solution('1\\n2\\n3\\n4') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n    4\n    1 -5 3 2\n    ''') == '1'\n\nassert solution('''\n    5\n    4 -2 3 -9 2\n    ''') == '0'\n\nassert solution('''\n    9\n    -1 1 -1 1 -1 1 1 -1 -1\n    ''') == '6'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n1 1\n1 1\n1 1\n1 1''') == '0\\n1\\n1\\n1\\n1'\nassert solution('''5\n1 100\n1 100\n1 100\n1 100\n1 100''') == '0\\n100\\n100\\n100\\n100'\nassert solution('''5\n1 100\n1 100\n1 100\n1 100\n1 100''') == '0\\n100\\n100\\n100\\n100'\nassert solution('''5\n2 100000000000\n1 100000000000\n1 100000000000\n1 100000000000\n1 100000000000''') == '0\\n100\\n10000000000\\n10000000000\\n10000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n100') == '0'\nassert solution('1\\n100') == '0'\nassert solution('2\\n1000000000 1000000000') == '1000000000'\nassert solution('2\\n2 2') == '2'\nassert solution('5\\n5 5') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5\n1 100\n2 1000000000\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''8\n1 100\n2 1000000000\n5 5\n2 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000''') == '1000000000'\nassert solution('''1\n1 100\n2 1000000000\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n') == '0\\n1\\n2\\n'\nassert solution('1\\n100\\n2\\n') == '0\\n2\\n10\\n'\nassert solution('5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\nassert solution('5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\nassert solution('5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(input().strip() for _ in range(int(input())))) == '1'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == '2'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == '10'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == '100'\n\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5 100\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5 5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''5 5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''5 100\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 1\") == \"0\"\nassert solution(\"3\\n2 1\\n1 1\") == \"1\"\nassert solution(\"4\\n3 1\\n1 1\\n1 1\") == \"0\"\nassert solution(\"3\\n1 1\\n2 1\\n1 1\") == \"1\"\nassert solution(\"5\\n1 1000000000\\n2 2\\n5 5\\n2 1000000000\\n1 1000000000\") == \"2\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n100\n2''') == '0'\nassert solution('''5\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''2\n1 1\n2 1\n5 1\n3 5\n5''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''3\n1 100\n2 1\n5 1\n3 5\n5''') == '0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(123) == None\nassert solution(7) == '4'\nassert solution(1000000) == '1'\nassert solution(7) == '4'\nassert solution(123) == None\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\") == 4\nassert solution(\"77\") == 4\nassert solution(\"7777\") == 4\nassert solution(\"777777\") == -1\nassert solution(\"77777777\") == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"7777\") == -1\nassert solution(\"777\") == 3\nassert solution(\"77\") == 2\nassert solution(\"7\") == 0\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('101') == 4\nassert solution('1011') == 4\nassert solution('999') == -1\nassert solution('777') == 0\nassert solution('7777') == 2\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1') == '-1'\nassert solution('0') == '-1'\nassert solution('7') == '1'\nassert solution('101') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('101') == 4\nassert solution('1000') == -1\nassert solution('1111') == -1\nassert solution('5') == 0\nassert solution('6') == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"999\") == -1\nassert solution(\"28\") == 1\nassert solution(\"10101\") == 2\nassert solution(\"1010101\") == 3\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'\n'''"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('7.77') == '4'\nassert solution('777') == '4'\nassert solution('777.777') == '4'\nassert solution('77777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 4\nassert solution('101') == 4\nassert solution('7') == 4\nassert solution('7777') == -1\nassert solution('77777') == -1\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\nassert solution('14 16\\n1 14 2 13 4 15 4 3 19 6 17 8 11 10 9 12 14 15 16\\n') == '26'\nassert solution('6 6\\n1 2 3 4 5 6\\n') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nn, m = [int(x) for x in sys.stdin.readline().split()]\np = [int(x) for x in sys.stdin.readline().split()]\n\nsorted_p = sorted(p)\n\nres = 0\nfor i in range(1, n):\n    if m >= sorted_p[i]:\n        res += (n - i) * i // 2\n\nprint(res)\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\nassert solution('''5 7\n2 4 5 3 1 6\n''') == '48'\nassert solution('''4 4\n1 4 2 3\n''') == '2'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == 4\nassert solution('2 4 5 3 1') == 1\nassert solution('15 8') == 48\nassert solution('1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == 48\nassert solution('3 4 5 6 1 2 7 9 10') == 7\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\") == \"-1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('7 10\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 3 4 2 1 4 2\") == \"4\"\nassert solution(\"3 11\\n1 3 4 2 1 4 2\") == \"-1\"\nassert solution(\"3 6\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"3 26\\n1 3 4 2 1 4 2\") == \"-1\"\nassert solution(\"5 15\\n5 5 5 5 5\\n5 5 5 5 5\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4 1 1 2') == '4'\nassert solution('2 3 1 1 2') == '-1'\nassert solution('2 3 1 1 2') == '-1'\nassert solution('2 3 1 1 2') == '-1'\nassert solution('2 3 1 1 2') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 10\\n1 3 4 2 1 4 2\\n') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '4'\nassert solution('5 15\\n5 5 5 5 5\\n') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 10\\n2 3 1 1 2') == '4\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2\\n'\nassert solution('5 15\\n5 5 5 5 5') == '1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1\\n'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n2\\n1') == '1'\nassert solution('4\\n24 21 14 10') == '3'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''2\n500 500\n''') == '0'\nassert solution('''3\n14 5 1\n''') == '-1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\nassert solution('''4\n24 21 14 10\n''') == '3'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"24 21 14 10\") == \"3\"\nassert solution(\"500 500\") == \"0\"\nassert solution(\"14 5 1\") == \"-1\"\nassert solution(\"1 3 6 9 12\") == \"1\"\nassert solution(\"2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n3') == '1'\nassert solution('2\\n4') == '-1'\nassert solution('2\\n5') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '-1'\nassert solution('24 21 14 10') == '3'\nassert solution('2') == '0'\nassert solution('500 500') == '0'\nassert solution('1 3 6 9 12') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('6\\n1 3 6 9 12 14\\n') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n24 21 14 10''') == '3'\nassert solution('''2\n500 500''') == '0'\nassert solution('''3\n14 5 1''') == '-1'\nassert solution('''5\n1 3 6 9 12''') == '1'\nassert solution('''6\n1 3 6 9 12 14 16''') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('1\\n1 1 1 1 1\\n') == '-1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 15 15 15\\n1 2 15 15 15\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\"\nassert solution(\"5 2\\n1 2 15 15 15\") == \"5\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''2 3\n1 2 3\n''') == '2'\nassert solution('''2 4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\"\n\nimport sys\n\nclass Student(object):\n    def __init__(self, line: str) -> None:\n        skill_num, skill_min, skill_max, skill_balance = line.split()\n        self.skill = int(skill_num)\n        self.skill_min = int(skill_min)\n        self.skill_max = int(skill_max)\n        self.skill_balance = int(skill_balance)\n\n    def __repr__(self) -> str:\n        return f\"{self.skill} {self.skill_min} {self.skill_max} {self.skill_balance}\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n3') == '3'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('10 2 2') == '-1'\nassert solution('10 10 10') == '-1'\nassert solution('2 5 2') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('1 10 2\\n1 1 1 1\\n1 1 1 1') == '-1'\nassert solution('10 1 2\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5 5') == '-1'\nassert solution('10 1 2\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5 5') == '4'\nassert solution('10 1 2\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5 5') == '4'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 10 2\") == \"5\"\nassert solution(\"1 10 2\") == \"3\"\nassert solution(\"3 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"3 10 2\") == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 3 5') == '-1'\nassert solution('1 1 1') == '-1'\nassert solution('10 4 6') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 10 7') == '8'\nassert solution('2 10 3 6') == '-1'\nassert solution('2 3 3') == '1'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"8 10 3 6\\n8 10 3 6\") == \"-1\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 10 7\") == \"8\"\nassert solution(\n    \"10 7 2 6\") == \"-1\"\nassert solution(\n    \"2 2 3\") == \"0\"\nassert solution(\n    \"1 1 1\") == \"-1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 1 1') == '-1'\nassert solution('3 4 3') == '3'\nassert solution('9 2 4 3 5 4 3 2 1') == '3'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8'\n\"\"\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 1 4') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo'\nassert solution('6 3 4 1 2 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('1 1 1 1 1 1 1') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 4 2') == 'Yes\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('7 3 2\\n1\\n1\\n1\\n3\\n1\\n1\\n') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nYes'\nassert solution('7 3 2\\n1\\n1\\n1\\n3\\n1\\n1\\n4\\n') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo'\nassert solution('7 3 2\\n1\\n1\\n1\\n3\\n1\\n1\\n5\\n') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo'\nassert solution('7 3 2\\n1\\n1\\n1\\n3\\n1\\n1\\n6\\n') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2\") == \"No\"\nassert solution(\"3 2 3\") == \"Yes\"\nassert solution(\"2 5 1\") == \"Yes\"\nassert solution(\"3 2 4\") == \"Yes\"\nassert solution(\"3 2 2\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"7 3 6\\n3\\n3\\n2\\n3\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"2 10 4\\n3\\n1\\n\") == \"Yes\\nNo\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"2 10 4\\n1\\n1\\n\") == \"Yes\\nNo\\nNo\\nYes\\nNo\\nYes\"\nassert solution(\"4 4 4\\n2\\n2\\n2\\n2\\n\") == \"Yes\\nYes\\nYes\\nYes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"2 3 4\") == \"No\"\nassert solution(\"2 3 5\") == \"Yes\"\nassert solution(\"2 3 4\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"3 2 3\") == \"No\\nNo\\nYes\"\nassert solution(\"3 2 2\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\\nNo\\nNo\"\nassert solution(\"3 2 1\") == \"No\\nNo\\nYes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2 6\") == \"Yes\\n\"\nassert solution(\"1 1 1\") == \"Yes\\n\"\nassert solution(\"2 2 6\") == \"No\\n\"\nassert solution(\"2 2 2\") == \"Yes\\n\"\nassert solution(\"2 2 2\") == \"Yes\\n\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 4\\n3\\n1\\n3\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('4 2 4\\n3\\n1\\n3\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('7 2 4\\n3\\n1\\n3\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('7 2 4\\n3\\n1\\n3\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('7 2 4\\n3\\n1\\n3\\n2\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 4 4\\n3\\n1\\n3\\n2\\n\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"10 6 0\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\nassert solution('''2 2\n1 1\n0 1''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n1 1 1 1\") == \"NO\\n010\\n0000\"\nassert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 0 1') == 'YES\\n001'\nassert solution('1 1') == 'YES\\n001'\nassert solution('1 1 0') == 'NO\\n111'\nassert solution('2 2') == 'YES\\n010'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\n\nassert solution('''3 4\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\n\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\n\nassert solution('''2 1\n1\n''') == 'NO'\n\nassert solution('''2 2\n1 1\n0 1\n''') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n0 0 0\n0 0 1\n0 1 1''') == 'NO'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n----- \n\nsolution(stdin)\n\n----- \n\n\"\"\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"1123\") == \"No\"\nassert solution(\"1213\") == \"Yes\"\nassert solution(\"12223\") == \"No\"\nassert solution(\"1222322\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('389') == \"No\"\nassert solution('466') == \"Yes\"\nassert solution('323') == \"No\"\nassert solution('125') == \"Yes\"\nassert solution('496') == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nprint(\"Test cases passed.\")\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"12345\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"55\") == \"Yes\"\nassert solution(\"5555\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nprint(\"Test cases passed.\")\n\n\"\"\""
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('926') == 'Yes'\nassert solution('123') == 'No'\nassert solution('372') == 'Yes'\nassert solution('736') == 'Yes'\nassert solution('928') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"8\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nprint(solution(input()))\nassert solution(input()) == \"Yes\"\nprint(solution(input()))\nassert solution(input()) == \"No\"\nprint(solution(input()))\nassert solution(input()) == \"Yes\"\nprint(solution(input()))\nassert solution(input()) == \"Yes\"\nprint(solution(input()))\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn, b, a = [int(x) for x in stdin.readline().strip().split()]\ns = [int(x) for x in stdin.readline().strip().split()]\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('7 2 1\\n1 0 0 1 0 1 1') == '2'\nassert solution('8 2 1\\n1 0 0 1 0 1 1 1') == '1'\nassert solution('9 2 1\\n1 0 0 1 0 1 1 1 1') == '0'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Best Practice-----"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\n\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'\n\nprint('solution:', solution(input()))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '8-7+6-5+4-3+2-1-0') == '4','should work'\nassert solution('2+2') == '-46','should work'\nassert solution('112-37') == '375','should work'\n\nprint('Test success!')"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\nprint(\"The test passed\")"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n-----My Commentary-----\n\nThe error in the reference solution is that it gives incorrect results for some inputs.\n\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n\n\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expect\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''1000 4''') == 'NO'\nassert solution('''5 3''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4\\n') == 'NO'\n\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution('10 4') == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution('13 4') == \"NO\"\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\n\n\n\n\n\"\"\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution('10 4') == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution('13 4') == \"NO\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 3\n\"\"\") == \"\"\"YES\n3 1\n1 3\n3 2\n2 3\n\"\"\"\n\nassert solution(\n\"\"\"\n10 4\n\"\"\") == \"\"\"YES\n2 1\n1 3\n4 2\n3 4\n4 3\n3 2\n2 4\n4 1\n1 4\n3 1\n\"\"\"\n\nassert solution(\n\"\"\"\n13 4\n\"\"\") == \"\"\"NO\n\"\"\"\n\nassert solution(\n\"\"\"\n4 1\n\"\"\") == \"\"\"YES\n1 1\n\"\"\"\n\nassert solution(\n\"\"\"\n13 4\n\"\"\") == \"\"\"NO\n\"\"\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"15 4\") == \"NO\"\n\n\n\n-----A brief analysis of the problem-----\nThe first version of the problem has three stages:\n\n1. Choose a color for each dancer's costume: all costumes are integers from $1$ to $k$, inclusive.\n2. No two dancers have the same color; no two pairs of dancers have the same color.\n3. For each pair of dancers: the color of the man's costume and the color of the woman's costume do not have to be the same.\n\nIf we eliminate the second stage, we end up with the problem of choosing a color for each dancer's costume.\n\nAs the number of colors is at most $k$, there is no restriction on the number of dancers.\n\nIf we eliminate the first stage, we end up with the problem of choosing a color for each pair.\n\nThe total number of pairs is $n$ and the total number of colors is at most $k$ (for $k \\le 2 \\cdot 10^5$).\n\nIn this solution, we iterate over the pairs and pick one color for each.\n\n-----Alternate Solution-----\n\"\"\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 1 3 10 1') == '18'\nassert solution('5\\n1 3 10 1') == '-1'\nassert solution('6\\n10 30 30 70 10 10') == '100'\nassert solution('4\\n1 100 1 1') == '100'\nassert solution('5\\n1 100 1 1 1') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '-1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1'\nassert solution('6 2 4\\n1 1 1 1 1 1\\n') == '8'\nassert solution('1\\n1') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '100'\nassert solution('''4 3 1''') == '100'\nassert solution('''10 30 30 70 10 10''') == '70'\nassert solution('''5 2 3''') == '18'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''7 1 4''') == '41'\nassert solution('''5 5 2''') == '13'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '100'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('000010000100') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2''') == '3'\nassert solution('''6 1''') == '21'\nassert solution('''4 1''') == '4'\nassert solution('''12 6''') == '15'\n\n'''\n\nfrom sys import stdin,stdout\nn, k = map(int, stdin.readline().split())\ns = stdin.readline().strip()"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin = '''5 2\n00100\n''') == '3'\n\nassert solution(\n    stdin = '''6 1\n000000\n''') == '21'\n\nassert solution(\n    stdin = '''12 6\n000010000100\n''') == '15'\n\nassert solution(\n    stdin = '''4 1\n0011\n''') == '4'\n\n\n\n'''\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n    0 0 1 0 1 0 1 0 1 0 1 0 1 0 1\n    0 0 1 0 1 0 0 1 0 1 0 1 0 1 1\n\n'''"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('0001000100') == '0'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('12 1\\n000010000100') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('mam') == 'No'\nassert solution('a') == 'No'\nassert solution('a') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"azzel can be changed to apple, as follows:\") == \"Yes\"\nassert solution(\"apple can be changed to azzel, as follows:\") == \"Yes\"\nassert solution(\"awe\") == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('test') == 'No'\nassert solution('test1') == 'Yes'\nassert solution('test2') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\nprint(solution('azzel'))\nprint(solution('apple'))\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"Yes\"\nassert solution('apple') == \"No\"\nprint(\"All cases passed successfully.\")\n\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"test\") == \"No\"\nassert solution(\"hello\") == \"Yes\"\nassert solution(\"aa\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('python') == 'No'\nassert solution('python') == 'No'\nassert solution('a') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('azzle') == 'No'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n3 5 3 4\\n2 5 4\\n2 1 5\\n1 1 1\") == \"1\"\nassert solution(\"5 3\\n3 5 3 4\\n2 5 4\\n2 1 5\\n1 1 1\") == \"2\"\nassert solution(\"5 3\\n3 5 3 4\\n2 5 4\\n2 1 5\\n1 1 1\") == \"0\"\nassert solution(\"2 3\\n1 2 3\\n2 1 2\\n2 3 1\") == \"3\"\nassert solution(\"5 3\\n3 5 3 4\\n2 5 4\\n2 1 5\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    10\n    5\n    7\n''') == '35'\n\nassert solution('''\n    5\n    5\n    5\n    5\n    5\n''') == '0'\n\nassert solution('''\n    3\n    1\n    2\n    2\n''') == '3'\n\nassert solution('''\n    3\n    3\n    3\n    3\n    3\n''') == '9'\n\nassert solution('''\n    9\n    9\n    9\n    9\n    9\n''') == '0'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 10\") == \"10\"\nassert solution(\"10 10 10 10\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"Hello\\nWorld\\n\") == \"HelloWorld\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\") == \"52469\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3 2 3 4\") == \"YES\"\nassert solution(\"5 2 3 2 3 4 2\") == \"NO\"\nassert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"2 2 2 1 2\") == \"NO\"\nassert solution(\"1 2 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '7\\n'\n    '8 3\\n'\n    '6 1\\n'\n    '4 1\\n'\n    '5 3\\n'\n    '3 2\\n'\n    '2 1\\n'\n) == '50'\n\n'''\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 4\\n3 1 2 1\\n4 1 1 2 2') == '3'\nassert solution('5 3 1\\n2 1 2 1 2\\n1 1 1 1 1 1\\n3 1 1 1 1 1\\n2 1 1 1 1 1\\n4 1 1 1 1 1\\n3 1 1 1 1 1') == '1'\nassert solution('5 3 1\\n2 1 2 1 2\\n1 1 1 1 1 1\\n3 1 1 1 1 1\\n2 1 1 1 1 1\\n4 1 1 1 1 1\\n3 1 1 1 1 1') == '4'\nassert solution('5 3 2\\n2 1 2 1 2\\n1 1 1 1 1 1\\n3 1 1 1 1 1\\n2 1 1 1 1 1\\n4 1 1 1 1 1\\n3 1 1 1 1 1') == '4'\nassert solution('5 3 2\\n2 1 2 1 2\\n1 1 1 1 1 1\\n3 1 1 1 1 1\\n2 1 1 1 1 1\\n4 1 1 1 1 1\\n3 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '1'\nassert solution('3 5') == '1'\nassert solution('4 6') == '3'\nassert solution('5 8') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '2'\nassert solution('5 800') == '3'\nassert solution('1 10') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 7000\n3 500\n5 800''') == '3'\nassert solution('''2 7\n3 500\n5 800''') == '3'\nassert solution('''2 7\n3 500\n5 800\n3 600\n7 900\n8 1200\n5 1200''') == '4'\nassert solution('''2 7\n3 500\n5 800\n3 600\n7 900\n8 1200\n5 1200\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000\n7 2000\n5 2000\n3 2000"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '3'\nassert solution('''2 250\n1 1000\n3 750\n4 500\n5 750\n''') == '4'\nassert solution('''7 1000\n3 750\n3 750\n4 500\n4 750\n4 500\n4 750\n''') == '6'\nassert solution('''7 2000\n3 1000\n3 750\n4 500\n4 750\n4 500\n4 750\n''') == '5'\nassert solution('''10 2000\n3 1000\n3 750\n4 500\n4 750\n4 500\n4 750\n5 500\n5 750\n6 500\n6 750\n7 500\n7 750\n''') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '4'\nassert solution('7 900') == '5'\nassert solution('10 900') == '6'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 600') == '3'\nassert solution('5 800') == '5'\nassert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('7 700') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"2\"\nassert solution(\"5 800\") == \"3\"\nassert solution(\"10 1234\") == \"6\"\nassert solution(\"4 100\") == \"4\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7\\n2 3\\n1 3\\n4 2\\n') == '4'\nassert solution('1 100\\n5 100\\n1 100\\n4 100\\n') == '4'\nassert solution('7 10\\n7 9\\n7 8\\n7 7\\n7 6\\n7 5\\n7 4\\n7 3\\n7 2\\n7 1\\n') == '2'\nassert solution('100 90\\n1000 1000\\n10000 10000\\n1000000 1000000\\n10000000 10000000\\n100000000 100000000\\n100000000000000000 100000000000000000000000000000\\n') == '0'\nassert solution('100 90\\n1000 1000\\n10000 10000\\n1000000 1000000\\n10000000 10000000\\n100000000 100000000\\n100000000000000000 100000000000000000000000000000\\n') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 700\\n3 500\\n5 1000') == '3'\nassert solution('2 100\\n3 100\\n5 200') == '1'\nassert solution('2 1000\\n3 100\\n5 200') == '1'\nassert solution('2 300\\n3 300\\n5 200') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '4'\nassert solution('1 1') == '1'\nassert solution('5 5') == '0'\n\"\"\""
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 4 5\n''') == '2'\nassert solution('''4\n2 3 4 5\n''') == '2'\nassert solution('''8\n2 3 4 5 6 7 8 9\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\nassert solution('''10\n2 3 4 2 2 3 2 2 4 5\n''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n3') == '2'\nassert solution('5\\n1') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 2 3\\n1 2 3') == '0'\nassert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('8\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('8\\n2 3 4 2 2 3 2 2 4') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '1'\nassert solution('''5''') == '2'\nassert solution('''9''') == '3'\nassert solution('''4 5 6''') == '1'\nassert solution('''4 8 4 7 8 4 4 5''') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 4 3\") == \"1\"\nassert solution(\"4\\n2 4 3 2\") == \"1\"\nassert solution(\"6\\n8 5 4 3 2 1\") == \"3\"\nassert solution(\"7\\n5 4 3 2 1\") == \"3\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('7\\n2 3 4 2 2 3 2 2 4') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n2 3 4 2 2 3 2 2 4 3 3 2 2 3') == '1'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 4 4 5 5 5\") == \"2\"\nassert solution(\"8 1 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9 2 3 4 2 2 3 2 2 4\") == \"3\""
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('inputs/test_1.txt') == '2'\nassert solution('inputs/test_2.txt') == '3'\nassert solution('inputs/test_3.txt') == '0'\nassert solution('inputs/test_4.txt') == '6'\nassert solution('inputs/test_5.txt') == '4'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5 1 3 10 1') == '18'\nassert solution('2\\n1 100 1 1') == '-1'\nassert solution('3\\n1 1 1 1 1') == '-1'\nassert solution('3\\n5 1 3 10 1') == '18'\nassert solution('5\\n1 100 1 1 1 1') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 2 3''') == '18'\nassert solution(\n'''6 1 5''') == '-1'\nassert solution(\n'''4 3 1''') == '100'\nprint(solution(input()))\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == solution(fileinput.input()[0].strip())\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 2 3\"\"\") == \"-1\"\nassert solution(\"\"\"6 1 5\"\"\") == \"18\"\nassert solution(\"\"\"6 1 5\"\"\") == \"-1\"\nassert solution(\"\"\"4 3 1\"\"\") == \"-1\"\nassert solution(\"\"\"4 3 1\"\"\") == \"-1\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''5 1 3''') == '-1'\nassert solution('''6 1 5''') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3''') == '-1'\nassert solution('''5 1 3 10 1''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''6 1 5''') == '-1'\nassert solution('''1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n''') == 'Yes'\nassert solution('''1\n''') == 'No'\nassert solution('''7\n''') == 'Yes'\nassert solution('''9\n''') == 'Yes'\nassert solution('''10\n''') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('6') == 'No'\nassert solution('10') == 'Yes'\nassert solution('26') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n') == 'No'\nassert solution('3\\n') == 'No'\nassert solution('3\\n') == 'Yes'\nassert solution('5\\n') == 'Yes'\nassert solution('7\\n') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('2') == \"No\"\nassert solution('5') == \"Yes\"\nassert solution('40') == \"Yes\"\nassert solution('3') == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == 'Yes'\nassert solution('5') == 'No'\nassert solution('50') == 'No'\nassert solution('10') == 'Yes'\nassert solution('25') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n') == 'Yes'\nassert solution('1\\n') == 'No'\nassert solution('1\\n1') == 'Yes'\nassert solution('1\\n1\\n1\\n1') == 'Yes'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 'Yes'\nassert solution('5') == 'No'\nassert solution('7') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('1') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\n''') == 'Yes'\nassert solution('11\\n') == 'Yes'\nassert solution('1\\n') == 'No'\nassert solution('20\\n') == 'No'\nassert solution('1\\n1\\n20\\n') == 'No'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == '1 2 3'\nassert solution('2 3 5') == '2 3 5'\nassert solution('2 1 5') == '2 1 5'\nassert solution('3 2 5') == '3 2 5'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n'''\n\nimport sys\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\nassert solution('1 2 5\\n1 1 5\\n1 2 5\\n3 2 5\\n') == '1 1 6'\nassert solution('1 2 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '1 1 6'\nassert solution('1 2 5\\n2 2 5\\n1 2 5\\n3 2 5\\n') == '1 1 6'\nassert solution('1 2 5\\n2 1 5\\n1 3 5\\n3 2 5\\n') == '1 1 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 1 5\n2 2 5\n1 2 5\n3 2 5''') == '2 2 6'\n'''\n    pass\n\nassert solution('''2\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n'''\n    pass\n\nassert solution('''2\n1 2 3\n3 2 1\n1 2 3''') == '2 2 3'\n'''\n    pass\n\nassert solution('''2\n1 1\n1 1''') == '1 1'\n'''\n    pass\n\nassert solution('''3\n1 1 1\n1 1 1\n1 1 1''') == '1 1'\n'''\n    pass"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == \"2 2 6\"\nassert solution('''1\n1 1 1''') == \"1 1 1\"\nassert solution('''2\n1 2 2\n1 3 3\n''') == \"1 1 1\"\nassert solution('''3\n2 4 5\n2 1 5\n1 2 5\n3 2 5''') == \"1 1 1\"\n'''\nassert solution('''4\n2 4 2\n2 1 5\n1 2 5\n3 2 5\n''') == \"2 2 6\"\n'''\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''1\n0 0 10\n''') == '0 0 10'\n\nassert solution('''2\n1 2 10\n2 1 10\n''') == '1 1 10'\nassert solution('''3\n1 1 10\n2 1 10\n3 1 10\n''') == '2 2 10'\nassert solution('''5\n1 1 10\n2 1 10\n3 1 10\n4 1 10\n5 1 10\n''') == '3 3 10'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\\\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\\\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\\\n4\n1 1 1\n3 2 3\n5 2 4\n3 2 3\n''') == '2 2 6'\nassert solution('''\\\n2\n0 0 0\n1 0 1\n''') == '1 1 3'\nassert solution('''\\\n6\n10 0 4\n10 0 4\n10 0 4\n10 0 4\n10 0 4\n10 0 4\n''') == '5 5 3'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n\") == \"2 2 6\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1 1 1\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"10 10 10\\n\"\nassert solution(\"10\\n9\\n9\\n9\\n\") == \"10 9 9\\n\"\nassert solution(\"10\\n9\\n9\\n9\\n\") == \"10 9 9\\n\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('2\\n3 1 5\\n2 1 5\\n1 2 5\\n3 2 5') == '0 0 6'\nassert solution('2\\n2 1 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('2\\n3 1 5\\n2 1 5\\n1 2 5\\n3 2 5') == '0 0 6'\nassert solution('2\\n2 1 5\\n1 2 5\\n1 2 5\\n3 2 5') == '2 2 6'\n"
    }
]