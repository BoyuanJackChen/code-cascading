[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '5'\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '5'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\"\"\") == \"5\"\n\nassert solution(\"\"\"10\n1 2\n1 3\n2 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\"\"\") == \"8\"\n\nassert solution(\"\"\"15\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n10 11\n10 12\n10 13\n10 14\n10 15\n11 12\n11 13\n11 14\n11 15\n12 13\n12 14\n12 15\n13 14\n13 15\n14 15\"\"\") == \"3\"\n\nassert solution(\"\"\"25\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n4 21\n4 22\n4 23\n4 24\n4 25\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n5 22\n5 23\n5 24\n5 25\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n6 18\n6 19\n6 20\n6 21\n6 22\n6 23\n6 24\n6 25\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n8 19\n8 20\n8 21\n8 22\n8 23\n8 24\n8 25\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n9 20\n9 21\n9 22\n9 23\n9 24\n9 25\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n10 25\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n11 21\n11 22\n11 23\n11 24\n11 25\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n12 22\n12 23\n12 24\n12 25\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n13 24\n13 25\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n14 24\n14 25\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n15 25\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n16 25\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n17 25\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n18 25\n19 20\n19 21\n19 22\n19 23\n19 24\n19 25\n20 21\n20 22\n20 23\n20 24\n20 25\n21 22\n21 23\n21 24\n21 25\n22 23\n22 24\n22 25\n23 24\n23 25\n24 25\"\"\") == \"2\"\n\nassert solution(\"\"\"28\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '5\\n1 8 6'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '5\\n1 8 6'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '5\\n1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(f\"La funcion solution({stdin}) devuelve: {solution(stdin)}\")\n\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4 5 6\") == \"4 6 6\"\nassert solution(\"2 2\") == \"1 2\"\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    4 6\n    3 7\n    3 8\n    ''') == '5'\n\nassert solution(\n    '''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    6 8\n    ''') == '1 8 6'\n\nassert solution(\n    '''\n    7\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    ''') == '1 8 6'\n\nassert solution(\n    '''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    4 6\n    5 6\n    6 7\n    7 8\n    7 9\n    ''') == '1 8 6'\n\nassert solution(\n    '''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    ''') == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == '1 8 6'\n\"\"\""
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''2\n1 2''') == '1 2'\nassert solution('''4\n1 1 1 1 1''') == '1 1'\nassert solution('''5\n1 1 1 1 1 1''') == '1 1'\nassert solution('''9\n1 1 1 1 1 1 1 1''') == '1 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1\\n1'\nassert solution('2\\n2') == '1\\n1'\nassert solution('2\\n1') == '1\\n1'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 2 2') == '8'\nassert solution('1 1 1') == '0'\nassert solution('1 2 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n\nn = int(input())\narr = [int(x) for x in input().split()]\n\ncount = {}\nfor num in arr:\n    count.setdefault(num, 0)\n    count[num] += 1\n\nfor num in arr:\n    if count[num] == 1:\n        x = num\n        break\n\ncount = {}\nfor num in arr:\n    count.setdefault(num, 0)\n    count[num] += 1\n\nfor num in arr:\n    if count[num] == 1:\n        y = num\n        break\n\nprint(str(x) +'' + str(y))\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n1 2 2 2 4 1 1 3 3 4 1''') == '3 3'\nassert solution('''10\n1 3 2 3 4 1 1 3 3 4 1''') == '1 1'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n2 8 1 2 4 1 20 4 5\n''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 4') == '1 2'\nassert solution('1 1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('1 2 4 2 1') == '24'\nassert solution('3 5 2 2 1') == '56'\nassert solution('8 4 7 1 2') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 6\n8 4 7 1 6\n''') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"24\"\n\"\"\"\n\n\n\"\"\"\n\n-----Solution-----\n\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('7 1 1 4') == '56'\nassert solution('5 5 4') == '56'\nassert solution('1 2 4 2 1') == '24'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\nassert solution(\"1 2 3 4\") == \"12\"\nassert solution(\"3 5 3\") == \"23\"\nassert solution(\"3 1 1 4\") == \"23\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"25\"\nassert solution(\"1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n3 5 1 2 4\") == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n\n\n\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('5\\n5\\n1\\n2\\n3\\n4\\n5\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('3 3 2\\n1 2 3\\n4 4 1\\n2 2 1\\n') == '12'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 6\\n8 4 7 1 6\\n') == '56'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 6\\n8 4 7 1 6\\n') == '56'\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '24'\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\nassert solution('''4\n1 2 4 3''') == '4'\nassert solution('''4\n1 3 5 6 5 4''') == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('1 3 5 6 5 4 2') == '6'\nassert solution('2 2 2') == '1'\nassert solution('2 2 2 1') == 'LLR'\nassert solution('1 2 4 3 2') == '4'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 2 4 3 2\n\"\"\") == \"4\"\nassert solution(\"\"\"7\n1 3 5 6 5 4 2\n\"\"\") == \"6\"\nassert solution(\"\"\"3\n2 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"4\n1 2 4 3\n\"\"\") == \"LLRR\"\nassert solution(\"\"\"7\n1 3 5 6 5 4 2\n\"\"\") == \"6\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4'\nassert solution('7\\n1 3 5 6 5 4 2') == 'LRLRRR'\nassert solution('3\\n2 2 2') == '1'\nassert solution('4\\n1 2 4 3') == 'LLRR'\nassert solution('10\\n
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '4'\nassert solution('''7''') == '6'\nassert solution('''3''') == '1'\nassert solution('''4''') == 'LLRR'\nassert solution('''2 2 2''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a\\nb\\nc\\nd\\ne\\n') == \"LLRRRRRLL\"\nassert solution('a\\nb\\nc\\nd\\ne\\n') == \"LLRRRRRLL\"\nassert solution('a\\nb\\nc\\nd\\ne\\n') == \"LLRRRRRLL\"\nassert solution('a\\nb\\nc\\nd\\ne\\n') == \"LLRRRRRLL\"\nassert solution('a\\nb\\nc\\nd\\ne\\n') == \"LLRRRRRLL\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['5', '1 2 4 3 2'])) == '4'\nassert solution('\\n'.join(['7', '1 3 5 6 5 4 2'])) == '6'\nassert solution('\\n'.join(['3', '2 2 2'])) == '1'\nassert solution('\\n'.join(['4', '1 2 4 3'])) == '4'\nassert solution('\\n'.join(['7', '1 3 5 6 5 4 2'])) == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4 3 2\") == \"LRRR\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"LRLRRR\"\nassert solution(\"3\") == \"R\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('2\\n2\\n5\\n5\\n5') == '3'\nassert solution('3\\n1\\n3\\n7\\n3') == '-1'\nassert solution('3\\n1\\n3\\n7\\n3') == '-1'\nassert solution('3\\n1\\n3\\n7\\n3') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\n6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n2\n2 8\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '3'\nassert solution('2\\n1 2\\n2 1') == '-1'\nassert solution('2\\n1 1') == '3'\nassert solution('3\\n1 3 2') == '3'\nassert solution('4\\n1 3 4 7') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 4') == '3'\nassert solution('1 2 3') == '3'\nassert solution('2 2 2') == '-1'\nassert solution('5 4 3 2 1') == '2'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7''') == '-1'\nassert solution('''3\n1 2 3 4\n''') == '-1'\nassert solution('''4\n1 2 3 4\n''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\n\nassert solution('''5\n2 2 5 2 5\n''') == '3'\n\nassert solution('''4\n1 3 3 7\n''') == '-1'\n\nassert solution('''2\n2 8\n''') == '3'\n\nassert solution('''6\n2 2 5 2 5 6\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"2 3 2 4\") == \"\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n''') == '3'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n''') == '-1'\nassert solution('''\n5\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '-1'\nassert solution('''\n7\n1 3 3 7 7 1\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7''') == '-1'\nassert solution('''2\n2 8''') == '3'\nassert solution('''1\n2''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''5\n2 2 5 2 5\n''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'\nassert solution('''2\n2 8\n''') == '3'\nassert solution('''3\n2 2 5 2 5\n''') == '-1'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('3 1 7 6') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"1 1 3 5\\n3 1 5 5\\n3 1 5 5\") == \"YES\"\nassert solution(\"3 1 5 5\\n3 1 5 5\\n3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'NO'\nassert solution('''3 1 5 5''') == 'NO'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''3 3 7 5''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2 4 4\") == \"YES\"\nassert solution(\"0 0 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"NO\"\nassert solution(\"0 0 7 4\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'NO'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''0 0 4 6''') == 'YES'\nassert solution('''0 0 7 4''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000') == 'NO'\nassert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2 2 4 4\n1 1 3 5\n3 1 5 5''') == \"NO\"\nassert solution(\n'''3 2 7 5\n0 0 4 6\n0 0 7 4''') == \"YES\"\nassert solution(\n'''5 2 10 5\n3 1 7 6\n8 1 11 7''') == \"YES\"\nassert solution(\n'''0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000''') == \"YES\"\nassert solution(\n'''0 0 1000000 1000000\n0 0 499999 1000000\n5099876 0 1000000 1000000''') == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'YES'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('10000000000') == '1'\nassert solution('100000000') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1098) == \"20\"\nassert solution(10) == \"19\"\nassert solution(11) == \"20\"\nassert solution(12) == \"19\"\nassert solution(13) == \"18\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10098''') == '20'\nassert solution('''10''') == '19'\n'''\nassert solution('''1098''') == '20'\nassert solution('''10''') == '19'\nassert solution('''1099''') == '1'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\n\nprint(solution(''))\n\n'''"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\nassert solution('10987') == '19'\nassert solution('10099') == '1010'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('2') == '1'\nassert solution('998999999999') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '19'\nassert solution('0') == '19'\nassert solution('-1') == '19'\n\nprint('Test cases passed')\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\nassert solution('7\\n2 1 0 0 1 1 2') == '2 1 4 5 3 6 7'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\"\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 0\\n\") == \"1 0 2\"\nassert solution(\"3\\n1 2 0\\n\") == \"2 1 3\"\nassert solution(\"3\\n0 1 0\\n\") == \"1 0 2\"\nassert solution(\"3\\n0 2 1\\n\") == \"2 1 3\"\nassert solution(\"3\\n1 1 0\\n\") == \"1 2 2\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"2\\n1\\n1\") == \"1\\n2\"\nassert solution(\"3\\n1\\n1\\n1\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5 0 0 2 4\\n') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3\\n'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"2\\n0\") == \"0\"\nassert solution(\"2\\n1\") == \"1\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 2 3\") == \"YES\\n2 1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"NO\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 2\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == None\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2''') == 'YES'\nassert solution('''2 2''') == 'NO'\nassert solution('''5 2''') == 'YES'\nassert solution('''5 2''') == 'NO'\nassert solution('''6 2''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\nassert solution('5 3\\n2 1 1 2 1\\n') == 'YES\\n2 1 1 2 2'\nassert solution('6 2\\n2 1 1 2 1 3\\n') == 'NO'\n\"\"\""
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 1 2 1\") == \"NO\"\nassert solution(\"2 2 1\") == \"NO\"\nassert solution(\"2 1 1 2 1\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\nassert solution('7 3\\n1 2 3 4 5 6 7') == 'YES\\n2 2 3 3'\nassert solution('7 3\\n1 2 3 4 5 6 7') == 'YES\\n1 1 3 3'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('4 2') == 'NO'\nassert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2') == 'YES\\n2 1 1 2 1'\nassert solution('1 2 2 3') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == 'YES'\nassert solution('''4 2''') == 'YES'\nassert solution('''5 2''') == 'NO'\nassert solution('''1 1 1 1 1''') == 'YES'\nassert solution('''2 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"2 2\\n1 2\") == \"YES\\n2 1 1 2 2\"\nassert solution(\"5 2\\n1 2 1 2 1\") == \"YES\\n2 1 1 2 2\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\nassert solution(\"2 2\\n2 1 1\") == \"YES\\n2 1 1 2 1\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 2\n1 2 2 3\n''') == \"YES\\n1 1 2 2\\n\"\n\nassert solution(\n'''5 2\n2 1 1 2 1\n''') == \"YES\\n2 1 1 2 1\\n\"\n\nassert solution(\n'''5 2\n3 2 1 2 1\n''') == \"NO\\n\"\n'''"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''11 5 2\n11010100101'''\n) == '1'\n\nassert solution(\n    '''11 5 1\n11010100101'''\n) == '3'\n'''\nTest.assertEquals(solution('''11 5 2\n11010100101'''),'1')\nTest.assertEquals(solution('''11 5 1\n11010100101'''),'3')\nTest.assertEquals(solution('''11 7 2\n11010100101'''),'6')\nTest."
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 11 11') == '0'\nassert solution('11 100000000 1000000001') == '1'\nassert solution('111 111 111 111 111 11') == '0'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin = '11 5 2\\n11010100101'\n) == '1'\n\nassert solution(\n    stdin = '11 5 1\\n11010100101'\n) == '3'\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 2 1') == '4'\nassert solution('11 9 2') == '2'\nassert solution('11 10 2') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '11 5 2\\n'\n    '11010100101\\n'\n) == '1'\n\nassert solution(\n    '11 5 1\\n'\n    '11010100101\\n'\n) == '3'\n\nassert solution(\n    '100 000 100\\n'\n    '1100010110100\\n'\n) == '1'\n\nassert solution(\n    '11 1000000 101\\n'\n    '1100010110100\\n'\n) == '1'\n\n\n-----"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 8 2') == '1'\nassert solution('11 8 1') == '3'\nassert solution('11 9 1') == '4'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"11 5 2\"\"\"\n) == \"\"\"1\"\"\"\n\nassert solution(\n    \"\"\"11 5 1\"\"\"\n) == \"\"\"3\"\"\"\n\nassert solution(\n    \"\"\"11 6 3\"\"\"\n) == \"\"\"7\"\"\"\n\nassert solution(\n    \"\"\"11 7 1\"\"\"\n) == \"\"\"8\"\"\"\n\nassert solution(\n    \"\"\"11 22 3\"\"\"\n) == \"\"\"5\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\"\nassert solution(\"11 5 2\\n11010100010\") == \"3\"\nassert solution(\"11 5 1\\n11010100010\") == \"4\"\nassert solution(\"11 5 2\\n11010100100\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 11 1') == '-1'\nassert solution('11 11 2') == '0'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nYES\\nNO\\nNO'\nassert solution('3\\n1 2 1\\n3\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nYES'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"\"\"\\\nYES\nYES\nNO\nYES\nNO\n\"\"\"\n\nassert solution(\"\"\"\\\n1\n1\n\"\"\") == \"\"\"\\\nNO\nYES\n\"\"\"\n\nassert solution(\"\"\"\\\n3\n3\n1 1 1\n2\n2\n2\n1\n3\n1\n\"\"\") == \"\"\"\\\nNO\nYES\nNO\n\"\"\"\n\nassert solution(\"\"\"\\\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"\"\"\\\nYES\nYES\nNO\nYES\nNO\n\"\"\"\n\nassert solution(\"\"\"\\\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"\"\"\\\nNO\nNO\nYES\nYES\nNO\nYES\n\"\"\""
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3\n1 2 1''') == 'NO'\nassert solution('''5\n3\n1 2 2\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''3\n4\n1 2 2 1\n5\n1 2 2 3 2\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n4\n1 2 2 1\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1') == 'YES'\nassert solution('2\\n3\\n1\\n2\\n1') == 'YES'\nassert solution('1\\n1\\n2\\n3\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n3\\n2\\n1') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''6\n6\n1 2 3 4 5 6\n6\n1 2 3 4 5\n6\n1 2 3 4\n5\n1 2 3\n4\n1 2\n3\n1 2''') == 'YES'\nassert solution('''6\n6\n1 2 3 4 5 6\n6\n1 2 3 4 5\n6\n1 2 3 4\n5\n1 2 3\n4\n1 2\n3\n1 2''') == 'YES'\nassert solution('''6\n6\n1 2 3 4 5 6\n6\n1 2 3 4 5\n6\n1 2 3 4\n5\n1 2 3\n4\n1 2''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nYES\\nYES\\nNO'\n\"\"\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2') == 'NO'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n2') == \"NO\"\nassert solution('2\\n1\\n1\\n2') == \"YES\"\nassert solution('2\\n1\\n1\\n1') == \"NO\"\nassert solution('2\\n2\\n1\\n1') == \"NO\"\nassert solution('3\\n1\\n2\\n3') == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6''') == 'YES'\nassert solution('''6\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5 6 6''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5 6 6''') == 'NO'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1337\\n1 2 5 4 6 6 3 1 9\\n1 2 5 4 6 6 3 1 9') == 1557\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n1 2 5 4 6 6 3 1 9') == 99999\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == 33"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n11111\\n1 1 1 1 1 1 1 1 1\\n') == '99999'\nassert solution('2\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('3\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99988'\nassert solution('3\\n11111\\n1 1 1 1 1 1 1 1 1\\n') == '99988'\nassert solution('3\\n11111\\n1 1 1 1 1 1 1 1 1\\n') == '99988'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1337\\n1 2 5 4 6 6 3 1 9\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"11111\\n9 8 7 6 5 4 3 2 1\\n1 2 5 4 6 6 3 1 9\") == \"99999\"\nassert solution(\"11111\\n9 8 7 6 5 4 3 2 1\\n1 1 1 1 1 1 1 1 1\") == \"33\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''2\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5 4 6 6 3 1 9\") == \"1553\"\nassert solution(\"11111\") == \"999999\"\nassert solution(\"1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''\n3\n11111\n9 8 7 6 5 4 3 2 1\n''') == '11111'\nassert solution('''\n1\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '4\\n'\n    '1337\\n'\n    '1 2 5 4 6 6 3 1 9\\n') == '1553'\nassert solution(\n    '5\\n'\n    '11111\\n'\n    '9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution(\n    '2\\n'\n    '33\\n'\n    '1 1 1 1 1 1 1 1 1\\n') == '33'\nassert solution(\n    '4\\n'\n    '1 2 3 4 5 6 7 8 9\\n'\n    '10 11 12 13 14 15 16 17\\n'\n    '18 19 20 21 22 23 24 25\\n'\n    '26 27 28 29 30 31 32 33\\n') == '48123'\nassert solution(\n    '8\\n'\n    '3675154545453455\\n'\n    '3 7 6 5 4 9 1 1 1\\n') == '413645'\n\n\n-----\n\n=== Medium ===\n\nShare\nGiven a long decimal number $a$, you are given a function $f$ that maps every digit from $1$ to $9$ to some (possibly the same) digit from $1$ to $9$.\n\nYou can perform the following operation on $a$: choose a non-empty contiguous subsegment of digits in $a$, and replace each digit $x$ from this segment with $f(x)$. For example, if $a = 1337$, $f(1) = 1$, $f(3) = 5$, $f(7) = 3$, and you choose the segment consisting of three rightmost digits, you get $1553$ as the result.\n\nFind the maximum possible number you can obtain from applying this operation any number of times.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ \u2014 the number of digits in $a$.\n\nThe second line contains a string of $n$ characters, denoting the number $a$. Each character is a decimal digit from $1$ to $9$.\n\nThe third line contains exactly $9$ integers $f(1)$, $f(2)$,..., $f(9)$ ($1 \\le f(i) \\le 9$).\n\nThe last line contains exactly $n$ integers $a$ ($1 \\le a \\le 10^5$).\n\n\n-----Output-----\n\nPrint the maximum number you can obtain applying this operation no more than once.\n\n\n-----Examples-----\nInput\n4\n1337\n1 2 5 4 6 6 3 1 9\n\nOutput\n1553\n\nInput\n5\n11111\n9 8 7 6 5 4 3 2 1\n\nOutput\n99999\n\nInput\n2\n33\n1 1 1 1 1 1 1 1 1\n\nOutput\n33\n\nInput\n5\n11111\n9 8 7 6 5 4 3 2 1\n\nOutput\n99999\n\n\n=== Accepted ===\n\n1,195,129\n\n1,175,128\n\n1,78,129\n\n1,5,8\n\n1,2,4\n\n1,9,5\n\n\n\n=== Wrong Answer ===\n\n1,9,6\n\n1,3,9\n\n\n\n=== Solution ==="
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n\nassert solution('''3\n100 8 13\n9 12 15\n25 26 32\n''') == '2\\n4 8 13\\n2 12 15\\n1\\n3 6 8\\n2\\n6 9 12\\n1\\n13 24 26\\n'\n\nassert solution('''3\n100 8 13\n9 12 15\n25 26 32\n''') == '1\\n3 6 8\\n2\\n6 9 12\\n1\\n13 24 26\\n'\n\nassert solution('''5\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '0\\n0 0 3\\n1\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n'"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n') == '2'\nassert solution('3\\n1\\n1\\n') == '3'\nassert solution('4\\n1\\n1\\n') == '4'\nassert solution('5\\n1\\n1\\n') == '5'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n1 3 2\n1 1 3\n1 2 2\n1 1 2\n1 1 1\n1 2 1\n1 1 3\n1 3 1\n1 3 3\n1 3 2\n1 3 1\n1 3 1\n1 2 3\n1 2 1\n1 2 1\n1 1 3\n1 1 3\n1 1 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '4'\nassert solution('100 100 101') == '1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1 1 1'\nassert solution('2') == '1 1 1'\nassert solution('3') == '1 1 1'\nassert solution('4') == '1 1 1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''5\n10000000 10000000 1000000000 1000000000 1000000000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''3\n1 100000\n1 100000\n1 100000''') == '0'\nassert solution('''7\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000''') == '0'\nassert solution('''10\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 3\n''') == '2'\n\nassert solution('''2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\nassert solution('2\\n1 7 2') == '0'\nassert solution('2\\n1 100000 2') == '0'\nassert solution('2\\n1 100000 2 9') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4\n1 3 3 7\n''') == '2'\n\nassert solution(\n'''2\n1 100000\n''') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 3\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\nassert solution(\"4\\n1 3 3 7\") == \"2\"\n\n\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('1 100000') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('99999 0 0 0') == '0'\nassert solution('1 100000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 3 7\\n') == '2\\n'\nassert solution('2\\n1 100000\\n') == '0\\n'\nassert solution('3\\n2 4 4 8\\n') == '0\\n'\nassert solution('5\\n2 3 4 5 6\\n') == '0\\n'\nassert solution('5\\n1 3 4 5 6\\n') == '1\\n'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\\n1 5 1\") == \"1 2 3 0 3\"\nassert solution(\"5 2\\n1 3 1\\n1 2 1\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\") == \"-1\""
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1 2'\nassert solution('3\\n2\\n') == '-1'\nassert solution('3\\n3\\n') == '-1'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4') == '-1'\nassert solution('2 3') == '1 2 0 3'\nassert solution('5 2') == '1 2 0 3 0'\nassert solution('10 3') == '2 2 0 1 1 0 4 3 4 4'\nassert solution('4 10') == '2 2 0 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 3 1\\n1 2 1') == '-1'\nassert solution('5 2\\n1 3 1\\n1 2 1') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('4 2\\n1 3 1\\n1 2 1') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('4 2\\n1 3 1\\n1 2 1') == '2 2 2 1 1 0 3 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1') == '1 2 0 1'\nassert solution('2\\n1\\n1') == '-1'\nassert solution('3\\n2\\n1') == '1 2 0 3'\nassert solution('3\\n2\\n2') == '1 2 1 0'\nassert solution('3\\n2\\n3') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 0 3\\n1 5 1\\n') == '1 2 3 0 3\\n1 5 1\\n'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4 \\n'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('10 4') == '2'\nassert solution('100 000') == '-1'\nassert solution('5 4') == '-1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('120 51840') == '7'\nassert solution('91215651847291849333119418472918493309121565184729184933311941847291849330912156518472918493331194184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309121565184729184933091215651847291849330912156518472918493309"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('120 150') == '-1'\nassert solution('24 32') == '2'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"42 72\") == \"-1\"\nassert solution(\"48 72\") == \"0\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"832 57840\") == \"5\"\nassert solution(\"872 57840\") == \"4\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('120 51840') == 7\nassert solution('42 42') == 0\nassert solution('48 72') == -1\nassert solution('3 4') == -1\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 15') == '2'\nassert solution('30 22') == '3'\nassert solution('40 22') == '-1'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\n\n\n\n\n'''\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''120 51840'''\n) == '7'\nassert solution(\n'''42 42'''\n) == '0'\nassert solution(\n'''48 72'''\n) == '-1'\nprint('all tests passed')"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''120 51840''') == '7'\nassert solution('''42 42''') == '0'\nassert solution('''48 72''') == '-1'\nassert solution('''39 19''') == '2'\nassert solution('''20 1''') == '-1'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abcd') == 'abcdefghij'\nassert solution('abcde') == 'abcdefghij'\nassert solution('abcdeabcd') == 'abcdefghijabcdefghij'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 4\naaa''') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''3 2\ncat\n''') == 'catcat'\nassert solution('''3 4\nabc\n''') == 'abcabc'\nassert solution('''3 2\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''\naba\n''') == 'ababababa'\nassert solution('''\nab\n''') == 'ab'\nassert solution('''\nc\n''') == 'c'\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''a\n''') == 'a'\nassert solution('''aba\n''') == 'ababababa'\nassert solution('''aba\n''') == 'ababababa'\nassert solution('''a\n''') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aba\", \"cat\") == \"ababababa\"\nassert solution(\"aaa\", \"bb\") == \"bbbbbb\"\nassert solution(\"abc\", \"abc\") == \"abcabc\"\nassert solution(\"a\", \"a\") == \"a\"\nassert solution(\"\", \"a\") == \"\"\n\nprint(solution(stdin, stdin))\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip('\\n')\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('cat') == 'catcat'\nassert solution('c') == 'c'\nassert solution('') == ''\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aba', 'cat') == 'ababababa'\nassert solution('a', 'cat') == 'a'\nassert solution('catt', 'cat') == 'catt'\nassert solution('catcat', 'cat') == 'catcatcat'\nassert solution('catcat', 'catcatcat') == 'catcatcatcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('abacabac') == 'abacabac'\nassert solution('abacabac') == 'abacabac'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n') == '0\\n'\nassert solution('5\\n2 1 2 2') == '3\\n4 1 5\\n'\nassert solution('4\\n8 3 5 2') == '2\\n1 4\\n'\nassert solution('5\\n2 1 2 2') == '0\\n'\n\"\"\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1\\n'\nassert solution('3\\n2\\n') == '0\\n'\nassert solution('3\\n3\\n') == '0\\n'\nassert solution('4\\n2\\n') == '0\\n'\nassert solution('4\\n4\\n') == '0\\n'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n3\") == \"2\\n1 4\"\nassert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"2\\n1 2\") == \"0\\n\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\nassert solution('5\\n2 1 2 4 3') == '0'\nassert solution('5\\n2 1 2 4 3') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\nassert solution('5\\n2 1 2 4 3') == '0'\nassert solution('5\\n2 1 2 4 3') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('2\\n1 1 1 1\\n') == '1\\n0'\n\n\n\n\n-----"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaa') == '-1'\nassert solution('asdfasdfasdf') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '1'\nassert solution('adf') == '0'\nassert solution('asf') == '1'\nassert solution('sdf') == '0'\n\n\"\"\""
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('abbbbaa') == '6'\nassert solution('abacaba') == '3'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n asdf\") == \"4\"\nassert solution(\"5 6\\n aaaa\") == \"15\"\nassert solution(\"5 7\\n aaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\nassert solution(\"1000000001 1000000000\\njhgfdhjkhfhgjkhhgkhhg\") == \"-1\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\najihiushda''') == \"15\"\nassert solution('''5 7\naaaaa''') == \"-1\"\nassert solution('''4 5\nasdf''') == \"4\"\nassert solution('''10 100\najihiushda''') == \"233\"\nassert solution('''100 9\nbsdfgdbhbsdfgdbhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbsdfhbs"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('a') == '-1'\nassert solution('ab') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('asdfghjk') == '-1'\n\n\n\n-----"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"ajihiushda\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\") == \"YES\\n2 1\\n2 3\\n3 4\\n4 5\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\\n1 2\") == \"YES\\n1 2\\n1 4\\n2 3\\n3 4\\n4 1\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\\n1 3\") == \"YES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\\n4 1\") == \"NO\"\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 5 1\") == \"NO\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'\nassert solution('4 6 4\\n1 2\\n1 4\\n2 3\\n3 4\\n3 5\\n4 5\\n') == 'YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n3 5\\n'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n') == 'YES\\n1 2\\n1 3\\n1 4\\n'\nassert solution('3 4\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n') == 'YES\\n1 2\\n1 3\\n1 4\\n'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n') == 'NO\\n'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n4 2\\n') == 'NO\\n'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n4 2\\n4 3\\n') == 'NO\\n'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution(\n'''\n4 5 3\n1 2\n1 4\n2 3\n3 4\n''') == \"NO\"\n\n'''\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\n\n\n\n'''"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n\n-----\n\n\"\"\"\n\n\nfrom sys import stdin,stdout\nimport queue\nimport heapq\nfrom collections import defaultdict\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\nassert solution('10:00') == '10:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('11:12') == '11:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10:00\\n11:00\\n') == '10:30\\n'\nassert solution('11:00\\n11:00\\n') == '11:00\\n'\nassert solution('01:02\\n03:02\\n') == '02:02\\n'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '11:30'\nassert solution('''01:02''') == '02:02'\nassert solution('''03:02''') == '03:02'\n\nprint('Test success.')\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''10:00\n11:00'''\n) == '10:30'\n\nassert solution(\n'''11:10\n11:12'''\n) == '11:11'\n\nassert solution(\n'''01:02\n03:02'''\n) == '02:02'\n\nassert solution(\n'''07:03\n11:07'''\n) == '08:07'\n\nassert solution(\n'''04:20\n21:02'''\n) == '04:23'"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:11'\nassert solution('10:00 11:00') == '10:30'\nassert solution('11:10 11:12') == '11:11'\nassert solution('01:02 01:02') == '02:02'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(\"Correctly completed'solution'!\")\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('4\\n') == '2'\nassert solution('27\\n') == '5'\nassert solution('42\\n') == '6'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(4) == 2\nassert solution(2) == 1\nassert solution(26) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n\n\"\"\""
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('27\\n') == '5'\nassert solution('42\\n') == '6'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 2\nassert solution(\"27\") == 5\nassert solution(\"42\") == 6\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n'''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3 10\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '7'\nassert solution('3 10\\n3 9\\n1 2\\n0 4\\n1 20\\n0 4\\n') == '0'\nassert solution('2 6\\n3 9\\n1 2\\n0 4\\n1 20\\n0 4\\n') == '7'\n\n\n-----Test Plan\n\nTest #1\n\nWhat are the first few numbers of the Fibonacci sequence on which your solution works?\n\nThe first few numbers are:\n\n0,1,1,2,3,5,8,13,21\n\nAnswer:\n\n0\n\nTest #2\n\nWhat are the first few numbers of the Fibonacci sequence on which your solution works?\n\nThe first few numbers are:\n\n0,1,1,2,3,5,8,13,21\n\nAnswer:\n\n0\n\nTest #3\n\nWhat are the first few numbers of the Fibonacci sequence on which your solution works?\n\nThe first few numbers are:\n\n0,1,1,2,3,5,8,13,21\n\nAnswer:\n\n0\n\nTest #4\n\nWhat are the first few numbers of the Fibonacci sequence on which your solution works?\n\nThe first few numbers are:\n\n0,1,1,2,3,5,8,13,21\n\nAnswer:\n\n0\n\nTest #5\n\nWhat are the first few numbers of the Fibonacci sequence on which your solution works?\n\nThe first few numbers are:\n\n0,1,1,2,3,5,8,13,21\n\nAnswer:\n\n0\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '7'\nassert solution(stdin) == '4'\n\n\n-----My Analysis-----\n\nThe problem was initially easy to solve.\n\nIt turns out that to solve this problem we could use the fact that the length of the intersection is a function of the length of the segments and that we can rewrite the problem as a 2-dimensional problem. We can solve this problem recursively, but it would be a lot of work to implement.\n\nThe solution is to check that for each segment we can achieve an optimal solution by moving it to either end of the segment. Let us try to find the optimal solution for the segments with lengths $3$, $3$ and $3$.\n\n    For the first segment of length $3$ we can achieve the optimal solution by removing the segment with end-points $1, 2$ from the endpoints of the remaining segment, $[2, 3]$\n    For the second segment of length $3$ we can achieve the optimal solution by removing the segment with end-points $2, 1$ from the endpoints of the remaining segment, $[3, 3]$\n    For the third segment of length $3$ we can achieve the optimal solution by removing the segment with end-points $0, 3$ from the endpoints of the remaining segment, $[3, 3]$\n    Now we have to check if we can achieve an optimal solution for the remaining segments of lengths $3, 2, 1$ and $2$ with endpoints $3, 1, 2$ and $1, 2, 3$ respectively. To do this we first need to check if for the segment with endpoints $3, 1$ we can achieve an optimal solution.\n    If this is the case we can remove this segment from the endpoints of the remaining segments and proceed to the next segment.\n    If we cannot achieve an optimal solution for the remaining segments, we will return an empty string because we cannot achieve an optimal solution for the remaining segments.\n\n\n    For the remaining segments, we can achieve an optimal solution for each segment with length $2$, if we remove the segment with endpoints $2, 1$ from the endpoints of the remaining segment, $[2, 3]$:\n    For the segment with endpoints $3, 1$ we can achieve the optimal solution by removing the segment with endpoints $0, 2$ from the endpoints of the remaining segment, $[2, 3]$\n    For the segment with endpoints $1, 2$ we can achieve the optimal solution by removing the segment with endpoints $2, 1$ from the endpoints of the remaining segment, $[3, 3]$\n    If we can achieve an optimal solution for the remaining segments we can return the optimal solution for the remaining segments.\n\n\n    For the remaining segments, we can achieve an optimal solution for each segment with length $1$, if we remove the segment with endpoints $1, 2$ from the endpoints of the remaining segment, $[2, 3]$:\n    For the segment with endpoints $2, 1$ we can achieve the optimal solution by removing the segment with endpoints $3, 1$ from the endpoints of the remaining segment, $[3, 3]$\n    For the segment with endpoints $2, 3$ we can achieve the optimal solution by removing the segment with endpoints $3, 2$ from the endpoints of the remaining segment, $[3, 3]$\n    If we can achieve an optimal solution for the remaining segments we can return the optimal solution for the remaining segments.\n\n    Let us check if we can achieve an optimal solution for the remaining segments with length $3$, if we remove the segment with endpoints $0, 3$ from the endpoints of the remaining segment, $[3, 3]$:\n    For the segment with endpoints $3, 2$ we can achieve the optimal solution by removing the segment with endpoints $3, 1$ from the endpoints of the remaining segment, $[3, 3]$\n    For the segment with endpoints $1, 3$ we can achieve the optimal solution by removing the segment with endpoints $3, 2$ from the endpoints of the remaining segment, $[3, 3]$\n    If we can achieve an optimal solution for the remaining segments we can return the optimal solution for the remaining segments.\n\n    For the remaining segments, we can achieve an optimal solution for each segment with length $2$, if we remove the segment with endpoints $3, 1$ from the endpoints of the remaining segment, $[3, 3]$:\n    For the segment with endpoints $2, 1$ we can achieve the optimal solution by removing the segment with endpoints $3, 2$ from the endpoints of the remaining segment, $[3, 3]$\n    For the segment with endpoints $2, 2$ we can achieve the optimal solution by removing the segment with endpoints $2, 1$ from the endpoints of the remaining segment, $[3, 3]$\n    If we can achieve an optimal solution for the remaining segments we can return the optimal solution for the remaining segments.\n\n    For the remaining segments, we can achieve an optimal solution for each segment with length $1$, if we remove the segment with endpoints $3, 1$ from the endpoints of the remaining segment, $[3, 3]$:\n    For the segment with endpoints $3, 1$ we can achieve the optimal solution by removing the segment with endpoints $1, 2$ from the endpoints of the remaining segment, $[3, 3]$\n    For the segment with endpoints $1, 3$ we can achieve the optimal solution by removing the segment with endpoints $1, 2$ from the endpoints of the remaining segment, $[3, 3]$\n    If we can achieve an optimal solution for the remaining segments we can return the optimal solution for the remaining segments.\n\n    The last two cases are not very interesting"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\n\nassert solution(\n'''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\n\nassert solution(\n'''\n2\n3 10\n1 5\n\n''') == '7'\n\nassert solution(\n'''\n1\n3 10\n1 5\n\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom bisect import bisect_left"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('2 3') == None\nassert solution('1 3') == None\nassert solution('1 3\\n3 3') == None\nassert solution('1 3\\n3 3\\n1 3') == None\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"1 2 1\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"2\\n2\") == \"YES\"\nassert solution(\"3\\n3\") == \"YES\"\nassert solution(\"4\\n4\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('10\\n
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3') == 'NO'\nassert solution('4 5\\n3') == 'NO'\nassert solution('3\\n3') == 'YES'\nassert solution('10 10\\n10 10') == 'YES'\nassert solution('2 3\\n1 2') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\") == \"YES\"\nassert solution(\"3\\n4 2 1\") == \"YES\"\nassert solution(\"3\\n10 3 4\") == \"YES\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"3\\n5 4 3\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"YES\"\nassert solution(\"2\\n1\\n\") == \"NO\"\nassert solution(\"3\\n3\\n\") == \"NO\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, k = map(int, stdin.split())\ns = stdin.strip()"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabb') == \"4\"\nassert solution('abcbcd') == \"15\"\nassert solution('asdf') == \"4\"\nassert solution('adfghi') == \"-1\"\nassert solution('aabb') == \"4\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"ajihiushda\") == \"233\"\nassert solution(\"a\") == \"0\"\nassert solution(\"\") == \"-1\"\n\nprint(solution(\"asdf\"))\nprint(solution(\"aaaaa\"))\nprint(solution(\"ajihiushda\"))\nprint(solution(\"a\"))\nprint(solution(\"\"))\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"ajihiushda\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba', 3) == 4\nassert solution('a', 1) == 0\nassert solution('abacaba', 3) == 4\nassert solution('aaaaa', 2) == 15\nassert solution('aaaaa', 3) == 15\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abaca\") == \"aba\"\nassert solution(\"ajihiushda\") == \"sdf\"\nassert solution(\"aaaaa\") == \"\"\nassert solution(\"aaaaaa\") == \"aaa\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\nassert solution('6 10') == '15'\nassert solution('10 11') == '-1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"4\"\nassert solution(\"2 1 1\") == \"7\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 100 1\") == \"3\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\n\n\n\"\"\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 1 1\"\n) == \"4\"\n\nassert solution(\n    \"3 2 2\"\n) == \"7\"\n\nassert solution(\n    \"1 100 1\"\n) == \"3\"\n\nassert solution(\n    \"30 20 10\"\n) == \"39\"\n\"\"\"\nfrom math import floor\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\nassert solution('''2 1 2''') == '4'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\nassert solution('''30 19 9''') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 0 0') == '1'\nassert solution('1 1 1') == '4'\nassert solution('2 0 1') == '7'\nassert solution('1 1 1') == '7'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('3 4') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_data\n\n\"\"\""
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"NO\"\nassert solution('''1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"NO\"\n\n\"\"\"\nimport sys\nassert sys.version_info >= (3, 8)"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"3\\n1 1\\n5 5\\n5 5\") == \"NO\"\nassert solution(\"3\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"2\\n1 1\\n1 1\") == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expect\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 2') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4') == 'YES'\nassert solution('8 9\\n9 8') == 'YES'\nassert solution('2 5\\n1 1\\n1 1') == 'YES'\nassert solution('1 100\\n10 10') == 'YES'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''3''') == '0'\nassert solution('''5''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''2, 4, 5, 6''') == '1'\nassert solution('''1, 2, 3, 4, 5, 6''') == '0'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''7''') == '2'\nassert solution('''8''') == '3'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n4\\n5\\n6\\n7') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == ''\nassert solution('''5''') == ''\nassert solution('''6''') == ''\nassert solution('''9''') == ''\nassert solution('''12''') == ''\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == 0\nassert solution('''5''') == 1\nassert solution('''6''') == 1\nassert solution('''100''') == 0"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n5''') == '0'\n\nassert solution('''2\n5\n4\n3''') == '1'\n\nassert solution('''6\n1\n5\n4\n3\n2\n6''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 0\nassert solution('''5''') == 1\nassert solution('''6''') == 1\nassert solution('''9''') == 2\nassert solution('''10''') == 3\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '2'\nassert solution('8') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1, 2, 3') == 0\nassert solution('2, 2, 2') == 1\nassert solution('1, 3, 4') == 1\nassert solution('2, 5, 3') == 1\nassert solution('1, 4, 5') == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"()())\") == 5\nassert solution(\"((()))())\") == 4\nassert solution(\"((()))()\") == 0\nassert solution(\"((())\") == 0\nassert solution(\"((()))\") == 0\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()') == '1'\nassert solution('()()') == '2'\nassert solution('(()())') == '3'\nassert solution('((()))())') == '4'\nassert solution('((()))') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()()') == '2'\nassert solution('((()))') == '5'\nassert solution('((()))') == '4'\nassert solution('((()))') == '0'\nassert solution('()((()))') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('((((()))())())') == '5'\nassert solution('((()()))()()') == '4'\nassert solution('((()()))()()') == '4'\nassert solution('(()(()))()()') == '4'\nassert solution('()((()))()()') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(()())') == '4'\nassert solution('()()') == '4'\nassert solution('()())') == '2'\nassert solution('((()))') == '0'\nassert solution('(((()))())') == '5'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''()()''') == '5'\nassert solution(''')(''') == '4'\nassert solution('''(()())''') == '5'\nassert solution('''))()()(()''') == '4'\nassert solution('''((()))())''') == '5'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('9021325') == '-1'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\n\nimport sys\nsys.path.append('/Users/vivek/Programming/Codechef/Intelli-J/intelligent-coders-club/intelligent-coding-club/intelligent-coding-club')\n\nfrom collections import deque"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5071\n\"\"\"\n) == '4'\nassert solution(\n\"\"\"\n705\n\"\"\"\n) == '1'\nassert solution(\n\"\"\"\n1241367\n\"\"\"\n) == '-1'\nassert solution(\n\"\"\"\n245225\n\"\"\"\n) == '3'\nassert solution(\n\"\"\"\n7324645\n\"\"\"\n) == '2'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"101112\") == \"3\"\nassert solution(\"1234\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"10177\") == \"7\"\nassert solution(\"101769\") == \"7\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcdefgh\") == \"1 1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"abacbecfd\") == \"2\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbbb\") == \"1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"aaabbb\") == \"1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\nabacbecfd''') == '2'\nassert solution('''8\naaabbcbb''') == '2'\nassert solution('''7\nabcdedc''') == '3'\nassert solution('''5\nabcde''') == '1'\nassert solution('''1\na''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('aa') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n9\nabacbecfd\n''') == '2\\n1 1 2 1 2 1 2 1 2'\n\nassert solution(\n'''\n8\naaabbcbb\n''') == '2\\n1 2 1 2 1 2 1 1'\n\nassert solution(\n'''\n7\nabcdedc\n''') == '3\\n1 1 1 1 1 1 2 3'\n\nassert solution(\n'''\n5\nabcde\n''') == '1\\n1 1 1 1 1'\n\nassert solution(\n'''\n6\nfbbccc\n''') == '1\\n1 1 1 1 1 1'"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abcdec') == '1 1 2 1 2 1 2 1 1'\nassert solution('abcdeb') == '1 1 2 1 2 1 2 1 1'\nassert solution('abcdef') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '2'\nassert solution('abcd') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abcdedc') == ''\nassert solution('aaabbcbb') == '1 1 2 1 2 1 2 1 2'\nassert solution('abcde') == '1 1 1 1 1 1'\nassert solution('abacbecfd') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('bbbbccc') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('qwertyuiop') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abcde') == '1 1 1 1 1 1'\nassert solution('aaabbbbccccccccdddddddeeeee') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('abcdeabcde') == '1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'YES'\nassert solution('a b a') == 'NO'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacaba') == 'YES\\nabacaba'\nassert solution('abab') == 'NO'\nassert solution('qwerty') == 'YES\\nqwerty\\nqwerty'\nassert solution('abcde') == 'NO'\nassert solution('a') == 'YES\\na'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'YES'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'YES'\nassert solution('abab') == 'NO'"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('qwerty') == 'YES'\nassert solution('qwerty') == 'YES'\nassert solution('qwerty') == 'NO'\nassert solution('abcd') == 'NO'\nassert solution('abcde') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdef') == 'NO'\nassert solution('abcdefg') == 'NO'\nassert solution('abcdefgh') == 'YES'\nassert solution('a') == 'YES'\nassert solution('ab') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n\n\nfrom typing import List"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aab\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"aa\") == \"NO\"\nassert solution(\"a\") == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('codeforces') == 'YES'\nassert solution('fofo') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('four') == 'NO'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdfasdfasdf') == 'NO'\nassert solution('a') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('abc') == 'NO'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('3 4\\n1 2 3') == '0'\nassert solution('10 10\\n9 3 2 1 3 2 4 1 2 3 1 2 3 1 1 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n4 2 3 1\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('1\\n1\\n') == '0'\nassert solution('100 100\\n12 34 55 43 21\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('2 2\\n3 1') == '0'\n\"\"\""
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n1 3 2 1 5\") == \"0\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('8 8') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n4 2 3 1\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n'''\n\n'''\n-----SOLUTION-----\n\nThis problem is too easy for the algorithm to solve. \nIt's just pretty hard to see that it can solve this problem.\n\nFor more information see this site: https://stackoverflow.com/questions/2351334/maximum-number-of-problems-can-mishka-solve-d\n'''\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n4 2 3 1 5 1 6 4''') == \"5\"\nassert solution('''5 2\n3 1 2 1 3''') == \"0\"\nassert solution('''5 100\n12 34 55 43 21''') == \"5\"\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9 10''') == \"9\"\nassert solution('''1 100\n1''') == \"0\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n'''\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                "
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n\n\"\"\"\nfrom functools import lru_cache\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 5') == '4'\nassert solution('6 7') == '7'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n\n\"\"\"\nfrom math import ceil, floor"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:4]\n\"\"\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 3') == '12'\nassert solution('3 9') == '14'\nassert solution('506 2708') == '3218'\nassert solution('3 6') == '12'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n\n'''\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 4\n\n\"\"\"\n    ) == '12'\n\nassert solution(\n\"\"\"\n3 9\n\n\"\"\"\n    ) == '14'\n\nassert solution(\n\"\"\"\n9 3\n\n\"\"\"\n    ) == '14'\n\nassert solution(\n\"\"\"\n3 6\n\n\"\"\"\n    ) == '12'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n0\n1\n1\n1\n1\n1\n1''') == 'YES'\nassert solution('''1\n0\n0\n0\n0\n0\n0\n0\n0''') == 'YES'\nassert solution('''1\n0\n0\n1\n1\n1\n1\n1\n1''') == 'YES'\nassert solution('''1\n0\n0\n0\n0\n1\n1\n1\n1''') == 'YES'\nassert solution('''1\n0\n0\n0\n0\n0\n0\n1\n1''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\nabcdef''') == 'YES'\nassert solution('''2\nabbcdef''') == 'NO'\nassert solution('''2\nabbcdefg''') == 'NO'\nassert solution('''3\nabcdefg''') == 'NO'\nassert solution('''3\nbbbcccb''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcd') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\"\nassert solution(\"1234\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\n\nassert solution('''8\naaabbcbb\n''') == 'YES'\n\nassert solution('''7\nabcdedc\n''') == 'NO'\n\nassert solution('''5\nabcde\n''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacbecfd') == \"YES\"\nassert solution('aaabbcbb') == \"YES\"\nassert solution('abcdedc') == \"NO\"\nassert solution('abcde') == \"YES\"\nassert solution('fbbfbbf') == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\nabcd\n''') == 'NO'\n\nassert solution(\n'''\n4\nabcd\n''') == 'YES'\n\nassert solution(\n'''\n2\na\na\n''') == 'NO'\n\nassert solution(\n'''\n2\na\na\n''') == 'YES'\n\nassert solution(\n'''\n3\na\na\na\n''') == 'NO'"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\"\nassert solution(\"a\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"abcd\") == \"NO\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == 25\nassert solution('2 1') == -1\nassert solution('5 10') == 25\nassert solution('1 1') == -1\nassert solution('10 10') == 100\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '-1'\nassert solution('1 2') == '25'\nassert solution('10 10') == '25'\nassert solution('10 1') == '-1'\nassert solution('1 100') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"50\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"25\"\n\"\"\""
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('10 10') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"5 6\") == \"25\"\nassert solution(\"20 50\") == \"-1\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 2\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('10 10') == '25'\nassert solution('10 10') == '25'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '25'\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == -1\nassert solution('1 2') == 25\nassert solution('2 1') == -1\nassert solution('2 1') == 25\nassert solution('5 7') == 15\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '25'\nassert solution('10 11') == '26'\nassert solution('100 101') == '-1'\nassert solution('1000 1001') == '-1'\nassert solution('2 2') == '25'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3\n''') == 'NO\\n'\nassert solution('''1 1\n''') == 'YES\\n1\\n'\nassert solution('''9 4\n''') == 'NO\\n'\nassert solution('''10 15\n''') == 'YES\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 1\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 5\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 9\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 10\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"9 1\\n\") == \"YES\\n1 2 4 5 6 8\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8'\nassert solution('''8 3\n''') == 'NO'\nassert solution('''1 1\n''') == 'YES\\n1'\nassert solution('''9 4\n''') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3\\n26 3\\n8 3\\n') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('3 4\\n1 1\\n1 1\\n') == 'YES\\n1 1\\n'\nassert solution('6 5\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution(\"8 3\") == \"NO\\n\"\nassert solution(\"1 1\") == \"YES\\n1\\n\"\nassert solution(\"9 4\") == \"NO\\n\"\nassert solution(\"10 2\") == \"NO\\n\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''26 6'''\n    ) == 'YES'\n\nassert solution(\n'''8 3'''\n    ) == 'NO'\n\nassert solution(\n'''1 1'''\n    ) == 'YES'\n\nassert solution(\n'''9 4'''\n    ) == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == open(\"output.txt\").read()\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('10 -2') == '3'\nassert solution('8 -1') == '3'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '3'\nassert solution('5 4') == '5'\nassert solution('3 2') == '3'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 1\nassert solution('1 2 3 4') == 2\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 -3 4 5') == -1\nassert solution('1 2 -3 4 5 6') == 0\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''1 2\n2 2\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 1\n1 1\n1 1''') == '1'\nassert solution('''1 2\n2 2\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''2 3\n100 -1\n1 1\n''') == '2'\nassert solution('''3 2\n1 2\n-1 1\n''') == '2'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''3 2\n300 -300\n1 299\n1 123''') == '5'\nassert solution('''10 3\n-5 -3\n-4 -2\n-3 -1\n-1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n55 57\n56 57\n57 58\n58 59\n59 60\n60 61\n60 62\n60 63\n60 64\n60 65\n60 66\n60 67\n60 68\n60 69\n60 70\n60 71\n60 72\n60 73\n60 74\n60 75\n60 76\n60 77\n60 78\n60 79\n60 80\n60 81\n60 82\n60 83\n60 84\n60 85\n60 86\n60 87\n60 88\n60 89\n60 90\n60 91\n60 92\n60 93\n60 94\n60 95\n60 96\n60 97\n60 98\n60 99\n60 100\n61 101\n61 102\n61 103\n61 104\n61 105\n61 106\n61 107\n61 108\n61 109\n61 110\n61 111\n61 112\n61 113\n61 114\n61 115\n61 116\n61 117\n61 118\n61 119\n61 120\n61 121\n61 122\n61 123\n61 124\n61 125\n61 126\n61 127\n61 128\n61 129\n61 130\n61 131\n61 132\n61 133\n61 134\n61 135\n61 136\n61 137\n61 138\n61 139\n61 140\n61 141\n61 142\n61 143\n61 144\n61 145\n61 146\n61 147\n61 148\n61 149\n61 150\n61 151\n61 152\n61 153\n61 154\n61 155\n61 156\n61 157\n61 158\n61 159\n61 160\n61 161\n61 162\n61 163\n61 164\n61 165\n61 166\n61 167\n61 168\n61 169\n61 170\n61 171\n61 172\n61 173\n61 174\n61 175\n61 176\n61 177\n61 178\n61 179\n61 180\n61 181\n61 182\n61 183\n61 184\n61 185\n61 186\n61 187\n61 188\n61 189\n61 190\n61 191\n61 192\n61 193\n61 194\n61 195\n61 196\n61 197\n61 198\n61 199\n61 200\n61 201\n61 202\n61 203\n61 204\n61 205\n61 206\n61 207\n61 208\n61 209\n61 210\n61 211\n61 212\n61 213\n61 214\n61 215\n61 216\n61 217\n61 218\n61 219\n61 220\n61 221\n61 222\n61 223\n61 224\n61 225\n61 226\n61 227\n61 228\n61 229\n61 230\n61 231\n61 232\n61 233\n61 234\n61 235\n61 236\n61 237\n61 238\n61 239\n61 240\n61 241\n61 242\n61 243\n61 244\n61 245\n61 246\n61 247\n61 248\n61 249\n61 250\n61 251\n61 252\n61 253\n61 254\n61 255\n61 256\n61 257\n61 258\n61 259\n61 260\n61 261\n61 262\n61 263\n61 264\n61 265\n61 266\n61 267\n61 268\n61 269\n61 270\n61 271\n61 272\n61 273\n61 274\n61 275\n61 276\n61 277\n61 278\n61 279\n61 280\n61 281\n61 282\n61 283\n61 284\n61 285\n61 286\n61 287\n61 288\n61 289\n61 290\n61 291\n61 292\n61 293\n61 294\n61 295\n61 296\n61 297\n61 298\n61 299\n61 300\n61 301\n61 302\n61 303\n61 304\n61 305\n61 306\n61 307\n61 308\n61 309\n61 310\n61 311\n61 312\n61 313\n61 314\n61 315\n61 316\n61 317\n61 318\n61 319\n61 320\n61 321\n61 322\n61 323\n61 324\n61 325\n61 326\n61 327\n61 328\n61 329\n61 330\n61 331\n61 332\n61 333\n61 334\n61 335\n61 336\n61 337\n61 338\n61 339\n61 340\n61 341\n61 342\n61 343\n61 344\n61 345\n61 346\n61 347\n61 348\n61 349\n61 350\n61 351\n61 352\n61 353\n61 354\n61 355\n61 356\n61 357\n61 358\n61 359\n61 360\n61 361\n61 362\n61 363\n61 364\n61 365\n61 366\n61 367\n61 368\n61 369\n61 370\n61 371\n61 372\n61 373\n61 374\n61 375\n61 376\n61 377\n61 378\n61 379\n61 380\n61 381\n61 382\n61 383\n61 384\n61 385\n61 386\n61 387\n61 388\n61 389\n61 390\n61 391\n61 392\n61 393\n61 394\n61 395\n61 396\n61 397\n61 398\n61 399\n61 400\n61 401\n61 402\n61 403\n61 404\n61 405\n61 406\n61 407\n61 408\n61 409\n61 410\n61 411\n61 412\n61 413\n61 414\n61 415\n61 416\n61 417\n61 418\n61 419\n61 420\n61 421\n61 422\n61 423\n61 424\n61 425\n61 426\n61 427\n61 428\n61 429\n61 430\n61 431\n61 432\n61 433\n61 434\n61 435\n61 436\n61 437\n61 438\n61 439\n61 440\n61 441\n61 442\n61 443\n61 444\n61 445\n61 446\n61 447\n61 448\n61 449\n61 450\n61 451\n61 452\n61 453\n61 454\n61 455\n61 456\n61 457\n61 458\n61 459\n61 460\n61 461\n61 462\n61 463\n61 464\n61 465\n61 466\n61 467\n61 468\n61"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3\\n-6 -1\\n1 1\\n1 1\\n-1 -1\\n3 1\\n3 3\\n3 -3') == '3\\n3\\n3\\n3\\n3\\n3'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3\\n3\\n3'\nassert solution('5 2\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5\\n5\\n5'\nassert solution('10 3\\n-6 -1\\n1 1\\n1 1\\n-1 -1\\n3 1\\n3 3\\n3 -3') == '3\\n3\\n3\\n3\\n3\\n3'\nassert solution('5 2\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5\\n5\\n5'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO\\n'\n'''\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\"\n) == \"YES\"\nassert solution(\n    \"1\"\n) == \"NO\"\nassert solution(\n    \"3\"\n) == \"YES\"\nassert solution(\n    \"4\"\n) == \"NO\"\nassert solution(\n    \"1\"\n) == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open('testing/t.in').read()) == 'YES\\n1 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n3 1 1 3\\n3 1 1 3\\n3 1 1 3\\n3 1 1 3\\n3 1 1 3\\n3 1 1 3\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 2 3') == 'NO'\nassert solution('1 1 1 1 1 3 3 3 3 3') == 'YES'\nassert solution('1 2 1 8 8 1 2 2 2 2 2 2 2 1 8 8 1') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 1') == 'YES\\n1 3 1\\n1 3 1'\nassert solution('2 4 4 2 4 2 2 1 1 1 1 1 2 2 3 3 3 3 1') == 'YES\\n1 3 2\\n1 3 2\\n3 2 1\\n1 3 2\\n1 3 2\\n3 2 1\\n1 3 2\\n1 3 2\\n3 2 1'\nassert solution('2 4 4 2 4 2 2 1 1 1 1 1 2 2 3 3 3 3 1') == 'NO'\nassert solution('4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8') == 'YES'\nassert solution('1') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 8 2 2 2 2 2 2 2 1 8 8 1') == 'YES'\nassert solution('1 1 1 1 1 3 3 3 3 3') == 'YES'\nassert solution('1 2 1 1 8 2 2 2 2 2 2 2 1 8 8 1') == 'NO'\nassert solution('1 1 1 1 1 3 3 3 3 3') == 'NO'\nassert solution('1 2 1 1 8 2 2 2 2 2 2 2 1 8 8 1') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"YES\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1 2 1\\n1 2 1\") == \"NO\"\nassert solution(\"2\\n1 2 1\\n1 2 1\") == \"NO\"\nassert solution(\"2\\n1 2 1\\n2 1 1\") == \"NO\"\nassert solution(\"2\\n1 2 1\\n2 1 2\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1\\n') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n\n\n\"\"\"\n\n\"\"\"\nSolution:\n\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 2''') == \"YES\"\nassert solution('''10 1 11''') == \"YES\"\nassert solution('''10 1 5''') == \"YES\"\nassert solution('''8 7 1''') == \"NO\"\nassert solution('''2 3 3''') == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\\n\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\\n\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\\n\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''7 1 11''') == 'YES'\nassert solution('''11 11 11''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 2') == 'NO'\nassert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\n\n\n-----"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 2\\n1 2 1') == 'YES'\nassert solution('7 3 2\\n1 2 1\\n1\\n') == 'YES'\nassert solution('7 3 2\\n1 2 1\\n1\\n') == 'YES'\nassert solution('7 3 2\\n1 2 1\\n2\\n') == 'NO'\nassert solution('7 3 2\\n1 2 1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"bbaba\\nbb\\n\")) == \"3\"\nassert solution(input(\"baaba\\nab\\n\")) == \"2\"\nassert solution(input(\"abcde\\nabcde\\n\")) == \"0\"\nassert solution(input(\"asdfasdf\\nfasd\\n\")) == \"3\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbabaaababbaaabaabb\", \"bbabaaabab\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''bbaba\nbb\n\n''') == '3'\n\nassert solution('''baaba\nab\n\n''') == '2'\n\nassert solution('''abcde\nabcde\n\n''') == '0'\n\nassert solution('''asdfasdf\nfasd\n\n''') == '3'\n\nassert solution('''abbacadaba\nabab\n\n''') == '3'"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('aaaaa', 'aaaaa') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''bbaba''') == 3\nassert solution('''bb''') == 0\nassert solution('''baaba''') == 2\nassert solution('''abcde''') == 3\nassert solution('''asdfasdf''') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''bbaba''') == 3\nassert solution('''bb''') == 0\nassert solution('''baaba''') == 3\nassert solution('''ab''') == 2\nassert solution('''abcde''') == 0\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n\n'''\n\nimport sys\nfrom math import floor\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n\"\"\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0.0000000001') == '1 1'\nassert solution('0.000000001') == '10 10'\nassert solution('0.0000001') == '10 10'\nassert solution('0.00000001') == '9 9'\nassert solution('0.0000000099') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '3 2'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n'''\nfrom math import ceil\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n\n'''\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 3''') == 'NO'\nassert solution('''6 2 3''') == 'YES'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 3') == 'NO'\nassert solution('6 2 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('8 6 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''1000 1 1''') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 3\\n') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n'\nassert solution('10 4 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n'\nassert solution('8 5 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n'\nassert solution('10 3 4\\n') == 'NO\\n'\nassert solution('6 2 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n---"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 3''') == 'YES'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''5 3 3''') == 'NO'\nassert solution('''5 2 3''') == 'YES'\nassert solution('''10 3 4''') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('9 4 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('10 4 3\\n') == 'NO'\nassert solution('6 2 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7'\nassert solution('10 4 3\\n') == 'NO'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"010100\"\nassert solution(\"5 3 6\") == \"010100\"\nassert solution(\"2 2 1\") == \"1100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\nassert solution('''1000 1 1''') == '0000000000100000001'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1\\n') == '1100'\nassert solution('3 3 3\\n') == '101100'\nassert solution('5 3 6\\n') == '01010100'\n\n'''\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n'''\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\n\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\n\n\"\"\""
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\nassert solution('1 100 1') == '10001001'\nassert solution('2 3 2') == '0111'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1\\n') == '1100'\nassert solution('3 3 3\\n') == '101100'\nassert solution('5 3 6\\n') == '01010100'\nassert solution('5 3 1\\n') == '1111'\nassert solution('3 2 3\\n') == '1011'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ab\", \"ca\") == \"YES\"\nassert solution(\"ab\", \"cc\") == \"NO\"\nassert solution(\"ab\", \"bc\") == \"NO\"\nassert solution(\"ab\", \"ab\") == \"YES\"\nassert solution(\"ab\", \"ca\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\nab\nbc''') == \"YES\\nacbbac\"\nassert solution('''3\naa\nbc\n''') == \"YES\\ncacbacbab\"\nassert solution('''3\ncb\nac''') == \"YES\\ncacbacbab\"\nassert solution('''3\nab\nbc''') == \"NO\"\nassert solution('''3\naa\nbc\n''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\ns = stdin.readline().strip()\nt = stdin.readline().strip()"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == \"YES\\nabc\"\nassert solution('abc') == \"YES\\ncbc\"\nassert solution('bc') == \"YES\\ncbc\"\nassert solution('ca') == \"NO\"\nassert solution('cb') == \"YES\\ncbc\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\nab\\nbc\\n\") == \"YES\\nacbbac\"\nassert solution(\"3\\naa\\nbc\\n\") == \"YES\\ncacbacbab\"\nassert solution(\"2\\nab\\nac\\n\") == \"NO\"\nassert solution(\"2\\nba\\nbc\\n\") == \"NO\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\\ncbc\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('', '', '') == 'NO'\nassert solution('', '', '', '') == 'NO'\nassert solution('', '', '', '') == 'NO'\nassert solution('', '', '', '') == 'NO'\nassert solution('', '', '', '') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5\\n') == '1 2 3 4 5'\nassert solution('1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('2\\n1') == '1 2'\nassert solution('1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('2\\n1 1') == '1 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1 1 1 1'\nassert solution('4\\n-1 2 2') == '1 2 3 4'\nassert solution('2\\n1 1') == '1 2'\nassert solution('2\\n1 1') == '1 2'\nassert solution('2\\n1 1') == '1 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''1\n1\n1\n1\n1\n''') == '1'\nassert solution('''2\n3\n4\n''') == '4 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n-1') == '-1'\nassert solution('3\\n1 2\\n') == '3 1 2'\nassert solution('2\\n1 1\\n') == '1 2 3'\nassert solution('1\\n-1') == '-1'\nassert solution('3\\n-1 2 1\\n') == '3 1 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''8\n3 1 2 4 5 6 7 8\n''') == '3 1 4 5 2 6 7 8'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''3\n-2 1\n''') == '-1'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2\\n'\nassert solution('3\\n1 1 1\\n') == '1 2 3 4 5\\n'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n-1 2 2\\n') == '-1\\n'\nassert solution('4\\n1 1 1\\n') == '-1\\n'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-1') == '-1'\nassert solution('2') == '1'\nassert solution('-1 2') == '2 1'\nassert solution('3') == '3 1 2'\nassert solution('-2 1') == '-2 1'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('2 2 2 3 3') == '2'\nassert solution('3 2 2 3 3') == '2'\n\n\n-----"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3\n1 2 3\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"5\n2 2 2 3 3\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"4\n4 6 3 1\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\n\n'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''1 2 3 4 5''') == '3'\nassert solution('''1 2 2 3 3''') == '2'\nassert solution('''1 2 2 3 3''') == '1'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3\\n2 2 2 3 3') == '2'\nassert solution('4\\n2 2 2 3 3') == '3'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('6\\n2 2 2 3 3') == '5'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 3 3') == '2'\nassert solution('2 2 2 3 3') == '2'\nassert solution('2 2 2 3 3 4') == '2'\nassert solution('2 2 2 3 3 4 5') == '2'\nassert solution('2 2 2 3 3 4 5 6') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '5'\n'''\n    >>> solution('''10''')\n    5\n    >>> solution('''25''')\n    5\n    >>> solution('''5''')\n    1\n    >>> solution('''56789''')\n    12\n'''\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('5') == 5\nassert solution('10') == 5\nassert solution('1000000000000') == 5\nassert solution('101010') == 3\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n') == '5'\nassert solution('10\\n') == '5'\nassert solution('10\\n') == '5'\nassert solution('10\\n') == '5'\nassert solution('10\\n') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == 5\n\"\"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''10\n''') == '5'\nassert solution(\n'''100\n''') == '15'\nassert solution(\n'''1000\n''') == '30'\nassert solution(\n'''10000\n''') == '60'\nassert solution(\n'''100000000\n''') == '1449'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('10') == ''\nassert solution('1000000000') == ''\nassert solution('1000000000') == '5'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"10000\") == \"10\"\nassert solution(\"1000\") == \"5\"\nassert solution(\"2\") == \"1\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\nassert solution('12') == '6'\nassert solution('100') == '18'\nassert solution('1000') == '252'\nassert solution('123456789') == '8'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1\\n1 1 0') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1 1'\nassert solution('0 1 1') == '0 1'\nassert solution('2 3 4') == '2 2'\nassert solution('0 0 3') == '0 1'\nassert solution('0 0 3') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == '0 1'\nassert solution('2\\n0 1 1') == '0 1'\nassert solution('15\\n5 5 5') == '0 15'\nassert solution('686\\n479 178 29') == '0 15'\nassert solution('319\\n10 53 256') == '0 15'\n\n\n\"\"\"\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nAlice = 0\nBob = 0\n\nfor i in range(N):\n    if A[i] > B[i]:\n        Alice += 1\n    elif A[i] < B[i]:\n        Bob += 1\n\nprint(Alice, Bob)\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3 0 1\\n2 0 3') == '0 3'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3'\nassert solution('319\\n10 53 256\\n182 103 34') == '119 226'\nassert solution('6\\n0 0 3\\n3 0 0') == '0 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1') == '0 1'\nassert solution('1 1 0') == '0 1'\nassert solution('0 0 3') == '3 3'\nassert solution('3 0 0') == '3 3'\nassert solution('15') == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0 2'\nassert solution(stdin) == '0 4'\nassert solution(stdin) == '1 1'\nassert solution(stdin) == '1 3'\nassert solution(stdin) == '2 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('15') == '0 15'\nassert solution('1') == '0 1'\nassert solution('2') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n0 0 0\n0 0 0''') == '0 0'\nassert solution('''0\n1 1 1\n0 0 0''') == '0 1'\nassert solution('''1\n1 1 0\n0 0 0''') == '1 1'\nassert solution('''1\n0 0 0\n1 1 1''') == '1 2'\nassert solution('''1\n0 0 1\n1 1 0''') == '1 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\n\nassert solution('''15\n5 5 5\n5 5 5\n''') == '0 15'\n\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\n\nassert solution('''686\n479 178 29\n11 145 530\n''') == '22 334'\n\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('-2\\n-2\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5'\nassert solution('5\\n1 1 1 1\\n') == '4\\n4 4\\n1 1'\nassert solution('1\\n1\\n') == '1\\n1'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('6\\n1 1 1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('6\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n'\nassert solution('5\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1 1\"\nassert solution(\"2\\n1 2\") == \"1 1\"\nassert solution(\"3\\n1 2 3\") == \"1 1\"\nassert solution(\"4\\n1 2 3 4\") == \"1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''1\n1 1 1 1''') == '4'\nassert solution('''4\n1 1 1 1''') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n'"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '''3\n7 7\n2 3\n4 5\n'''\n\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '''2\n3 4\n1 1\n'''\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n3\") == \"YES\"\nassert solution(\"1\\n4\") == \"NO\"\nassert solution(\"1\\n5\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''3 1 2''') == 'NO'\nassert solution('''1''') == 'YES'\nassert solution('''3 1 2''') == 'NO'\nassert solution('''5''') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3''') == \"YES\"\nassert solution('''3\n3 1 2''') == \"NO\"\nassert solution('''2\n4 1 2''') == \"YES\"\nassert solution('''2\n2 2''') == \"NO\"\nassert solution('''2\n1 3''') == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1 2 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3 1 2\n\"\"\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'YES'\nassert solution('1') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('2 3 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n3 1 2 4 5') == 'NO'\nassert solution('5\\n5 4 3 2 1') == 'NO'\nassert solution('5\\n3 3 3 2 2') == 'YES'\nassert solution('5\\n2 2 1 2 1') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''10\n5 3 6 1 2 4 4 3 3 9''') == 'YES'\nassert solution('''10\n1 3 4 3 1 2 4 2 3 9''') == 'NO'\nassert solution('''10\n2 3 4 3 1 2 4 2 3 9''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1 2') == 'YES'\nassert solution('2\\n1 2 3') == 'NO'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('3\\n1 2 3 4') == 'YES'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nabcd\naccd''') == '-1'\nassert solution('''6\nabcdef\nabdfec''') == '4'\nassert solution('''5\nabcd\nbccf''') == '-1'\nassert solution('''5\nabcd\nbccf''') == '5 4 4 4'\nassert solution('''5\naabbc\naabbcc''') == '5 2 3 3'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nabcdef\nabdfec''') == '4'\nassert solution('''4\nabcd\naccd''') == '-1'\n\nassert solution('''5\nabcde\nabedf\nabefg\nabcdg\nabcdf\n''') == '5 4 3 5 4 3'\n'''\nIn the third example the string $s$ changes as follows:\n\"abedf\" $\\rightarrow$ \"abefg\" $\\rightarrow$ \"abefgc\" $\\rightarrow$ \"abefg\" $\\rightarrow$ \"abedfg\" $\\rightarrow$ \"abedf\"\n\nIn the fourth example the string $t$ changes as follows:\n\"abefg\" $\\rightarrow$ \"abedf\"\n\nThe last example is impossible to transform the string $s$ into the string $t$ through any allowed moves.\n'''"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abdfec') == 'abdcfe'\nassert solution('abdfce') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"-1\"\nassert solution(\"abdfec\") == \"-1\"\nassert solution(\"abdfec\") == \"-1\"\nassert solution(\"abdfec\") == \"-1\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcd', 'accd') == '-1'\nassert solution('abcdef', 'abdfec') == '4'\nassert solution('abcd', 'acd') == '3 5 4 5'\nassert solution('abcde', 'aecdd') == '4'\nassert solution('abcd', 'abcdd') == '3'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''6\nabcd\naccd\n''') == '-1'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''4\nabc\nab\n''') == '-1'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'P'\nassert solution('ba') == 'SPSPSPS'\nassert solution('aa') == 'SPSPSPS'\nassert solution('abab') == 'SPPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-2]"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'P'\nassert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'P'\nassert solution('aba') == 'SSP'\nassert solution('baba') == 'PSPPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\n\nassert solution(\n'''\n3\na\naa\naa\na\n''') == 'PPSS'\n\nassert solution(\n'''\n2\na\nc\n''') == 'PS'\n\nassert solution(\n'''\n4\na\naa\naa\na\n''') == 'SPPP'\n\nassert solution(\n'''\n6\na\naa\naa\na\naa\na\n''') == 'SSPSSPSSS'"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\n\nassert solution('''3\na\naa\naa\na\n''') == 'PPSS'\n\nassert solution('''2\na\nc\n''') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'P'\nassert solution('ab') == 'SP'\nassert solution('abc') == 'SPPSP'\nassert solution('ababc') == 'SPSPSP'\nassert solution('aba') == 'PSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nba\\na\\nabab\\na\\naba\\nbaba\\nab\\naaba') == 'SPPSPSPS'\nassert solution('3\\na\\na\\na\\n') == 'PPSS'\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'PP'\nassert solution('b') == 'SS'\nassert solution('abc') == 'SSPSSS'\nassert solution('abcab') == 'SSPSPPSSSPS'\nassert solution('ba') == 'PPPSPS'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\""
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n\n'''\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"2 4 6 8 10\"\n) == 1\n\nassert solution(\n\"2 4 6 8 10\"\n) == 1\n\nassert solution(\n\"2 4 6 8 10\"\n) == 1\n\nassert solution(\n\"2 4 6 8 10\"\n) == 1\n\nassert solution(\n\"2 4 6 8 10\"\n) == 1"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''6 7 8 9 10 11''') == '0'\nassert solution('''2 4 6 8 10 12 14''') == '1'\nassert solution('''1 1 1 1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''2 2 2 2 2 2 2 2 2 2 2''') == '0'\n'''\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('0 1 2 3 4') == 1\nassert solution('1 2 3 4 5') == 2\nassert solution('1 2 3 4 5 6 7 8 9 10') == 2\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 2\n\n\n-----Custom test cases-----\n\nNo custom tests are required to pass the custom test cases.\n\nFor more information on custom testing, refer to the comments in the code.\n\"\"\""
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''1 3 4 5 6 7 8 9''') == '3'\n'''\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\nassert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == ''\nassert solution('''5\n1 1 0 0 0\n''') == ''\nassert solution('''4\n1 1 1 1\n''') == ''\nassert solution('''5\n1 1 1 1 1\n''') == ''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''1\n1\n''') == '0'\nassert solution('''100\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0') == 2\nassert solution('5') == 0\nassert solution('1 1 1 1 1') == 0\nassert solution('1 1 0 0 0') == 0\nassert solution('1 1 1 1 0') == 2\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'\nassert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0') == '2'\nassert solution('2\\n1\\n1\\n1\\n') == '0'\nassert solution('3\\n1\\n1\\n1\\n1') == '0'\nassert solution('4\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n2\\n1\\n0') == 2\nassert solution('1\\n1\\n1\\n0') == 1\nassert solution('0\\n0\\n0\\n0') == 0\nassert solution('2\\n1\\n1\\n0') == 0\nassert solution('1\\n0\\n0\\n0') == 0\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1 1 0 0 0\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''4\n6 90 12 18 30 18''') == '4'\nassert solution('''8\n99 100 200 300 400 500 700 1000''') == '4'\n'''\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 1\nassert solution('6 90 12 18 30 18') == 4\nprint('Tests passed successfully')\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''10\n1 3 5 7 9 11 13 15 17 19''') == '4'\n'''\nimport sys\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 3 4 5\\n') == '1'\nassert solution('6\\n6 90 12 18 30 18\\n') == '4'\nassert solution('2\\n1 2 3 4 5\\n') == '0'\nassert solution('2\\n1 3 3 3 3 3\\n') == '3'\nassert solution('4\\n1 3 5 7 9 11\\n') == '3'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5\n1 2 3 4 5\n''') == '1'\nassert solution(\n'''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3') == '3'\nassert solution('4\\n4\\n4\\n4\\n4') == '4'\nassert solution('5\\n5\\n5\\n5\\n5') == '5'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"\nassert solution(\"6 96 12 18 30 18\") == \"3\"\nassert solution(\"6 96 12 18 30 18\") == \"3\"\nassert solution(\"6 96 12 18 30 18\") == \"3\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\nprint(solution(''))\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n100\\n') == '1'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '3'\nassert solution('4\\n1 2 3 4\\n') == '4'\nassert solution('5\\n1 2 3 4 5\\n') == '5'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == 2\nassert solution('''1\n100''') == 1\nassert solution('''7\n1 2 3 4 5 6 7''') == 4\n\nassert solution('''1\n2''') == 1\nassert solution('''3\n1 1 1''') == 2\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2') == 2\nassert solution('1\\n100') == 1\nassert solution('7\\n1 2 3 4 5 6 7') == 1\nassert solution('1\\n100') == 1\nassert solution('2\\n2') == 2\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 4 3 3 2\") == 2\nassert solution(\"100\") == 1\nassert solution(\"100 100 100 100 100 100\") == 5\nassert solution(\"1000 1000 1000 1000 1000\") == 10\nassert solution(\"2 2 2 2\") == 2\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n100') == 1\nassert solution('2\\n1 2') == 2\nassert solution('2\\n2 3') == 1\nassert solution('4\\n1 2 3 4') == 3\nassert solution('7\\n1 2 3 4 5 6 7') == 1\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 4 3 3 2\\n6\\n100') == '2'\nassert solution('1 2 4 3 3 2\\n1\\n100') == '1'\nassert solution('1 2 4 3 3 2\\n2\\n100') == '3'\nassert solution('1 2 4 3 3 2\\n3\\n100') == '5'\nassert solution('1 2 4 3 3 2\\n4\\n100') == '6'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n100\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n100\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n') == 1\nassert solution('2\\n1\\n') == 1\nassert solution('1\\n2\\n') == 2\nassert solution('1\\n1\\n') == 1\nassert solution('3\\n1\\n') == 1\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''5 3\n0 0 0 0 0\n''') == '2'\n\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''15 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3''') == '2'\nassert solution('''10 3''') == '3'\nassert solution('''5 2''') == '3'\nassert solution('''5 10''') == '-1'\nassert solution('''0 0 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1\\n') == '2'\nassert solution('2 2\\n0 0\\n') == '0'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n0 1 1\\n') == '3'\nassert solution('5 3\\n0 0 1 1 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 0 0 0 1\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('0\\n3') == '-1'\nassert solution('0\\n10') == '-1'\nassert solution('1\\n3') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution('''\n5 10\n0 0 0 0 0\n''') == '-1'\n\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 1\n''') == '3'\n\nassert solution('''\n10 10\n0 0 1 1 0 1 0 0 1\n''') == '-1'"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''5 10\n0 0 0 0 0\n''') == '-1'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 1\n''') == '3'\nassert solution('''3 4\n1 1 1 0\n''') == '1'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('6') == '3'\nassert solution('10') == '6'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"123\") == \"2\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"1\"\nassert solution(4) == \"2\"\nassert solution(12) == \"5\"\nassert solution(5) == \"5\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"7\") == \"\"\nassert solution(\"10\") == \"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('100') == '6'\nassert solution('0') == '0'\nassert solution('1001') == '0'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"3\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '3'\nassert solution('''1''') == '1'\nassert solution('''5''') == '3'\nassert solution('''15''') == '4'\nassert solution('''10''') == '4'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '3'\nassert solution('''1''') == '1'\nassert solution('''10''') == '0'\nassert solution('''1000000000''') == '0'\nassert solution('''2''') == '1'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '3'\nassert solution('''10''') == '3'\nassert solution('''20''') == '1'\nassert solution('''100''') == '1'\nassert solution('''1000''') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('7') == '6'\nassert solution('12') == '8'\nassert solution('26') == '13'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('(') == 0\nassert solution('))') == 0\nassert solution('()()()') == 0\nassert solution('((()'\n'''\n\nfrom math import ceil, log"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(((()))') == '3'\nassert solution('()()())') == '0'\nassert solution(')(') == '0'\nassert solution('(((()))') == '3'"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('((()') == '3'\nassert solution('()()()') == '0'\nassert solution('))(((((((((())(())))))))') == '0'\nassert solution(')())()()()()()()()()') == '0'\nassert solution('()()()()()()())()()()()') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(((()'\n    \nassert solution('()()()'\n    \nassert solution('))'\n    \nassert solution('))()'\n    \nassert solution('((()'\n    \n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''(((()''') == '3'\nassert solution(''')))(((((''') == '0'\nassert solution
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('()') == 0\nassert solution('((()))') == 0\nassert solution('(()())') == 0\nassert solution('(((()))') == 0\nassert solution('(((())))') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"(((()\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"))\") == 0\nassert solution(\"(((()))())\") == 0\nassert solution(\"(((())))(((()))))\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.replace('aba', '')\nassert solution(stdin) == stdin.replace('ab', '')\nassert solution(stdin) == stdin.replace('', '')\nassert solution(stdin) == ''\n\nassert solution(\"bbaba\") == \"bb\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb', 'bb') == 3\nassert solution('baaba', 'ab', 'ab') == 2\nassert solution('abcde', 'abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd', 'fasd') == 3\n\n\n\n-------\n\nYou are given a string $s$ consisting of lowercase Latin letters. Your task is to find the maximum possible length of the substring $t$ that is a subsequence of $s$, but does not contain any non-letter characters.\n\nFor example, the strings \"test\", \"tst\", \"tt\", \"et\", \"\" are subsequences of the string \"test\". But the strings \"tset\", \"se\", \"contest\" are not subsequences of the string \"test\".\n\nYou want to remove some substring (contiguous subsequence) from the string $s$ of maximum possible length such that $t$ is still a subsequence of $s$.\n\nIf you want to remove the substring $s[l;r]$ then the string $s$ will be transformed to $s_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}$ (where $|s|$ is the length of $s$).\n\nYour task is to find the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Input-----\n\nThe first line of the input contains one string $s$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nThe second line of the input contains one string $t$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nIt is guaranteed that $t$ is a subsequence of $s$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Examples-----\nInput\nbbaba\nbb\n\nOutput\n3\n\nInput\nbaaba\nab\n\nOutput\n2\n\nInput\nabcde\nabcde\n\nOutput\n0\n\nInput\nasdfasdf\nfasd\n\nOutput\n3\n\n\n\n-------\n\nYou are given a string $s$ consisting of lowercase Latin letters. Your task is to find the maximum possible length of the substring $t$ that is a subsequence of $s$, but does not contain any non-letter characters.\n\nFor example, the strings \"test\", \"tst\", \"tt\", \"et\", \"\" are subsequences of the string \"test\". But the strings \"tset\", \"se\", \"contest\" are not subsequences of the string \"test\".\n\nYou want to remove some substring (contiguous subsequence) from the string $s$ of maximum possible length such that $t$ is still a subsequence of $s$.\n\nIf you want to remove the substring $s[l;r]$ then the string $s$ will be transformed to $s_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}$ (where $|s|$ is the length of $s$).\n\nYour task is to find the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Input-----\n\nThe first line of the input contains one string $s$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nThe second line of the input contains one string $t$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nIt is guaranteed that $t$ is a subsequence of $s$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Examples-----\nInput\nbbaba\nbb\n\nOutput\n3\n\nInput\nbaaba\nab\n\nOutput\n2\n\nInput\nabcde\nabcde\n\nOutput\n0\n\nInput\nasdfasdf\nfasd\n\nOutput\n3\n\n\n\n-------\n\nYou are given a string $s$ consisting of lowercase Latin letters. Your task is to find the maximum possible length of the substring $t$ that is a subsequence of $s$, but does not contain any non-letter characters.\n\nFor example, the strings \"test\", \"tst\", \"tt\", \"et\", \"\" are subsequences of the string \"test\". But the strings \"tset\", \"se\", \"contest\" are not subsequences of the string \"test\".\n\nYou want to remove some substring (contiguous subsequence) from the string $s$ of maximum possible length such that $t$ is still a subsequence of $s$.\n\nIf you want to remove the substring $s[l;r]$ then the string $s$ will be transformed to $s_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}$ (where $|s|$ is the length of $s$).\n\nYour task is to find the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Input-----\n\nThe first line of the input contains one string $s$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nThe second line of the input contains one string $t$ consisting of at least $1$ and at most $2 \\cdot 10^5$ lowercase Latin letters.\n\nIt is guaranteed that $t$ is a subsequence of $s$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum possible length of the substring you can remove so that $t$ is still a subsequence of $s$.\n\n\n-----Examples-----\nInput\nbbaba\nbb\n\nOutput\n3\n\nInput\nbaaba\nab\n\nOutput\n2\n\nInput\nabcde\nabcde\n\nOutput\n0\n\nInput\nasdfasdf\nfasd\n\nOutput\n3\n\n\n\n-------\n\nYou are given a string $s$ consisting of lowercase Latin letters. Your task is to find the maximum possible length of the substring $t$ that is a subsequence"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"bcde\"\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbaaa\", \"baa\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('eel', 'fgh') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\n\n\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"zxcvbnm\") == 7\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 2 1 3\") == \"0\"\nassert solution(\"1 2 2 2\") == \"0\"\nassert solution(\"1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"1 3 1 3\") == \"12\"\nassert solution(\"1 4 1 4\") == \"8\"\nassert solution(\"1 5 1 5\") == \"20\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 4') == '6'\nassert solution('1 2 1 3') == '12'\nassert solution('-1 -2 -3 -4') == '-12'\nassert solution('3 4 1 -3') == '0'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"-1 2 1 1\") == \"1\"\nassert solution(\"1 -2 1 1\") == \"0\"\nassert solution(\"-1 -2 1 1\") == \"2\"\nassert solution(\"1 1 1 -1\") == \"0\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 10 100 1 1') == '100'\nassert solution('1 10 1000 1 1') == '1000'\nassert solution('1 100 10 1 1') == '100'\nassert solution('1 1 100 1 1') == '100'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('2 1 1 1') == '2'\nassert solution('1 1 1 1') == '4'\nassert solution('10 9 2 1') == '4'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 2 1 1') == '4'\nassert solution('3 3 3 3') == '9'\nassert solution('10 10 10 10') == '100'\n\nprint('Testcase 1 passed: ')\nprint('Testcase 2 passed: ')\nprint('Testcase 3 passed: ')\nprint('Testcase 4 passed: ')\nprint('Testcase 5 passed: ')\nprint('Testcase 6 passed: ')\nprint('Testcase 7 passed: ')\nprint('Testcase 8 passed: ')\nprint('Testcase 9 passed: ')\nprint('Testcase 10 passed: ')\nprint('Testcase 11 passed: ')\nprint('Testcase 12 passed: ')\nprint('Testcase 13 passed: ')\nprint('Testcase 14 passed: ')\nprint('Testcase 15 passed: ')\nprint('Testcase 16 passed: ')\nprint('Testcase 17 passed: ')\nprint('Testcase 18 passed: ')\nprint('Testcase 19 passed: ')\nprint('Testcase 20 passed: ')\nprint('Testcase 21 passed: ')\nprint('Testcase 22 passed: ')\nprint('Testcase 23 passed: ')\nprint('Testcase 24 passed: ')\nprint('Testcase 25 passed: ')\nprint('Testcase 26 passed: ')\nprint('Testcase 27 passed: ')\nprint('Testcase 28 passed: ')\nprint('Testcase 29 passed: ')\nprint('Testcase 30 passed: ')\nprint('Testcase 31 passed: ')\nprint('Testcase 32 passed: ')\nprint('Testcase 33 passed: ')\nprint('Testcase 34 passed: ')\nprint('Testcase 35 passed: ')\nprint('Testcase 36 passed: ')\nprint('Testcase 37 passed: ')\nprint('Testcase 38 passed: ')\nprint('Testcase 39 passed: ')\nprint('Testcase 40 passed: ')\nprint('Testcase 41 passed: ')\nprint('Testcase 42 passed: ')\nprint('Testcase 43 passed: ')\nprint('Testcase 44 passed: ')\nprint('Testcase 45 passed: ')\nprint('Testcase 46 passed: ')\nprint('Testcase 47 passed: ')\nprint('Testcase 48 passed: ')\nprint('Testcase 49 passed: ')\nprint('Testcase 50 passed: ')\nprint('Testcase 51 passed: ')\nprint('Testcase 52 passed: ')\nprint('Testcase 53 passed: ')\nprint('Testcase 54 passed: ')\nprint('Testcase 55 passed: ')\nprint('Testcase 56 passed: ')\nprint('Testcase 57 passed: ')\nprint('Testcase 58 passed: ')\nprint('Testcase 59 passed: ')\nprint('Testcase 60 passed: ')\nprint('Testcase 61 passed: ')\nprint('Testcase 62 passed: ')\nprint('Testcase 63 passed: ')\nprint('Testcase 64 passed: ')\nprint('Testcase 65 passed: ')\nprint('Testcase 66 passed: ')\nprint('Testcase 67 passed: ')\nprint('Testcase 68 passed: ')\nprint('Testcase 69 passed: ')\nprint('Testcase 70 passed: ')\nprint('Testcase 71 passed: ')\nprint('Testcase 72 passed: ')\nprint('Testcase 73 passed: ')\nprint('Testcase 74 passed: ')\nprint('Testcase 75 passed: ')\nprint('Testcase 76 passed: ')\nprint('Testcase 77 passed: ')\nprint('Testcase 78 passed: ')\nprint('Testcase 79 passed: ')\nprint('Testcase 80 passed: ')\nprint('Testcase 81 passed: ')\nprint('Testcase 82 passed: ')\nprint('Testcase 83 passed: ')\nprint('Testcase 84 passed: ')\nprint('Testcase 85 passed: ')\nprint('Testcase 86 passed: ')\nprint('Testcase 87 passed: ')\nprint('Testcase 88 passed: ')\nprint('Testcase 89 passed: ')\nprint('Testcase 90 passed: ')\nprint('Testcase 91 passed: ')\nprint('Testcase 92 passed: ')\nprint('Testcase 93 passed: ')\nprint('Testcase 94 passed: ')\nprint('Testcase 95 passed: ')\nprint('Testcase 96 passed: ')\nprint('Testcase 97 passed: ')\nprint('Testcase 98 passed: ')\nprint('Testcase 99 passed: ')\nprint('Testcase 100 passed: ')\nprint('Testcase 101 passed: ')\nprint('Testcase 102 passed: ')\nprint('Testcase 103 passed: ')\nprint('Testcase 104 passed: ')\nprint('Testcase 105 passed: ')\nprint('Testcase 106 passed: ')\nprint('Testcase 107 passed: ')\nprint('Testcase 108 passed: ')\nprint('Testcase 109 passed: ')\nprint('Testcase 110 passed: ')\nprint('Testcase 111 passed: ')\nprint('Testcase 112 passed: ')\nprint('Testcase 113 passed: ')\nprint('Testcase 114 passed: ')\nprint('Testcase 115 passed: ')\nprint('Testcase 116 passed: ')\nprint('Testcase 117 passed: ')\nprint('Testcase 118 passed: ')\nprint('Testcase 119 passed: ')\nprint('Testcase 120 passed: ')\nprint('Testcase 121 passed: ')\nprint('Testcase 122 passed: ')\nprint('Testcase 123 passed: ')\nprint('Testcase 124 passed: ')\nprint('Testcase 125 passed: ')\nprint('Testcase 126 passed: ')\nprint('Testcase 127 passed: ')\nprint('Testcase 128 passed: ')\nprint('Testcase 129 passed: ')\nprint('Testcase 130 passed: ')\nprint('Testcase 131 passed: ')\nprint('Testcase 132 passed: ')\nprint('Testcase 133 passed: ')\nprint('Testcase 134 passed: ')\nprint('Testcase 135 passed: ')\nprint('Testcase 136 passed: ')\nprint('Testcase 137 passed: ')\nprint('Testcase 138 passed: ')\nprint('Testcase 139 passed: ')\nprint('Testcase 140 passed: ')\nprint('Testcase 141 passed: ')\nprint('Testcase 142 passed: ')\nprint('Testcase 143 passed: ')\nprint('Testcase 144 passed: ')\nprint('Testcase 145 passed: ')\nprint('Testcase 146 passed: ')\nprint('Testcase 147 passed: ')\nprint('Testcase 148 passed: ')\nprint('Testcase 149 passed: ')\nprint('Testcase 150 passed: ')\nprint('Testcase 151 passed: ')\nprint('Testcase 152 passed: ')\nprint('Testcase 153 passed: ')\nprint('Testcase 154 passed: ')\nprint('Testcase 155 passed: ')\nprint('Testcase 156 passed: ')\nprint('Testcase 157 passed: ')\nprint('Testcase 158 passed: ')\nprint('Testcase 159 passed: ')\nprint('Testcase 160 passed: ')\nprint('Testcase 161 passed: ')\nprint('Testcase 162 passed: ')\nprint('Testcase 163 passed: ')\nprint('Testcase 164 passed: ')\nprint('Testcase 165 passed: ')\nprint('Testcase 166 passed: ')\nprint('Testcase 167 passed: ')\nprint('Testcase 168 passed: ')\nprint('Testcase 169 passed: ')\nprint('Testcase 170 passed: ')\nprint('Testcase 171 passed: ')\nprint('Testcase 172 passed: ')\nprint('Testcase 173 passed: ')\nprint('Testcase 174 passed: ')\nprint('Testcase 175 passed: ')\nprint('Testcase 176 passed: ')\nprint('Test"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"1 1 1 3\") == \"3\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''9\n9 1 4 4 6 7''') == '2'\nassert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''6\n1 2 4 5 6 7''') == '0'\nassert solution('''9\n1 2 4 4 6 7''') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 1 4 4 6 7') == \"2\"\nassert solution('6 1 4 4 6 7') == \"2\"\nassert solution('6 1 4 4 6') == \"2\"\nassert solution('6 1 4 4') == \"2\"\nassert solution('6 1 4') == \"1\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n3 3 2''') == '0'\nassert solution('''7\n10 11 10 3 4 5 2''') == '1'\nassert solution('''20\n5 4 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('2 1 2 2 3 3') == '2'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('2 2 2 2 2 2') == '1'\nassert solution('1 2 2 2 1 1') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('1\\n1') == '1'\nassert solution('9\\n9 1 4 4 6 7') == '1'\nassert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('4\\n9 1 4 4 6 7') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n6\n9 1 4 4 6 7\n''') == '2', 'error on sample1'\nassert solution(\n'''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '2'\nassert solution('1\\n6') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 21 24') == '2'\nassert solution('7 24 21 23') == '3'\nassert solution('7 24 21 22') == '2'\nassert solution('7 24 21 22 2') == '3'\nassert solution('7 24 21 22 2 22') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23', '16 17 14 20 20 11 22', '3') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '4') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '5') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '6') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '7') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n'''\n18 13 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6 11 5\n7 13 6\n8 15 7\n9 17 8\n10 19 9\n11 22 10\n12 24 11\n'''\n'''\n6 6 7 2 1\n16 17 14 20 20 11 22\n\n0 2 1\n1 3 2\n2 5 1\n3 6 2\n4 8 3\n5 10 4\n6"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23\n12 11 10 9 8 7 6 5 4 3 2 1''') == '2'\nassert solution('''7 24 21 23\n8 6 4 2 1''') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7') == '1'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '2'\nassert solution('1 2 3 4 5 6 7') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == 3\nassert solution(\"7 26 22 21 19 22 21 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 2219\") == 3"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''7\n4 7 12 100 150 199\n''') == '3'\nassert solution('''8\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution(\n'''\n5\n2 10 50 110 250\n''') == '1'\nassert solution(\n'''\n6\n4 7 12 100 150 199\n''') == '3'\nassert solution(\n'''\n4\n1 2 3 4\n''') == '1'\nassert solution(\n'''\n5\n4 7 12 100 150 199\n''') == '2'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''10\n7 8 9 10 15 19 21 22 23 24''') == '2'\nassert solution('''7\n9 11 13 14 15 17 19 22 23 24''') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"10\n1 2 5 6 7 10 21 23 24 49\n\"\"\") == \"4\"\n\nassert solution(\"\"\"5\n2 10 50 110 250\n\"\"\") == \"1\"\n\nassert solution(\"\"\"6\n4 7 12 100 150 199\n\"\"\") == \"3\"\n\nassert solution(\"\"\"6\n3 7 10 15 19 22 25 26\n\"\"\") == \"2\"\n\nassert solution(\"\"\"6\n3 4 7 12 15 19 22 25 26\n\"\"\") == \"2\"\n\n\n\"\"\"\n\"\"\"\n\n\n\n\n\n\n\"\"\"\nFrom GitHub: https://github.com/BennyPokorny/benny2/blob/master/g3/prob-5.py\n\nTask\n\nYou are given $N$ numbers. You have to print the numbers as a sequence in the ascending order.\n\nInput\nFirst line contains an integer $N$ \u2014 the number of numbers to be printed. The second line contains $N$ space-separated integers $a_1, a_2, \\dots, a_N$ \u2014 numbers to be printed.\n\nOutput\nPrint the numbers in ascending order.\n\n\nExamples\n\nInput\n\n6\n3 4 5 6 7\n\nOutput\n\n3 4 5 6 7\n\nInput\n\n3\n1 2 3\n\nOutput\n\n1 2 3\n\nInput\n\n4\n2 4 3 2\n\nOutput\n\n2 3 4 2\n\nNote\n\nIn the second case, output should be 2 4 3 2.\n\nIn the third case, output should be 2 3 4 2.\n\"\"\"\n\nN = int(input())\n\nA = [int(i) for i in input().split()]"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == 4\nassert solution('''5\n2 10 50 110 250''') == 1\nassert solution('''6\n4 7 12 100 150 199''') == 3\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''10\n2 3 4 7 9 11 13 15 16 19''') == '2'\n'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2\\n'\nassert solution('5\\n5 2 11 3 7') == '2 4\\n'\nassert solution('6\\n2 5 10 1 10 2') == '1 4\\n'\n\n\n\n\n\n-------"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"1 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"\nassert solution(\"1 10\") == \"1 10\"\nassert solution(\"5 10\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 8 3 6\\n2 4 8 3 6') == '1 2\\n'\nassert solution('5\\n2 4 8 3 6\\n2 4 8 3 6') == '1 4\\n'\nassert solution('6\\n2 5 10 1 10 2\\n2 5 10 1 10 2') == '1 4\\n'\nassert solution('7\\n2 5 10 1 10 2 11\\n2 5 10 1 10 2 11') == '1 4\\n'\nassert solution('8\\n2 5 10 1 10 2 11 12\\n2 5 10 1 10 2 11 12') == '1 4\\n'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '1 2'\nassert solution('2\\n4\\n3') == '1 4'\nassert solution('2\\n1\\n4') == '1 4'\nassert solution('2\\n1\\n2') == '1 2'\nassert solution('2\\n2\\n4') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"\nassert solution(\"2 2 2 2 2 2\") == \"1 1\"\nassert solution(\"2 2 2 2 2 2\") == \"1 1\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n5 2 11 3 7''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2\\n'\nassert solution('5\\n5 2 11 3 7') == '2 4\\n'\nassert solution('6\\n2 5 10 1 10 2') == '1 4\\n'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"010\"\nassert solution(\"10\") == \"011\"\nassert solution(\"10101\") == \"01011\"\nassert solution(\"010111010101\") == \"010101110\"\nassert solution(\"1111\") == \"0110\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n121\n''') == '021'\n\nassert solution('''\n6\n000000\n''') == '001122'\n\nassert solution('''\n6\n211200\n''') == '211200'\n\nassert solution('''\n6\n120110\n''') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"021\") == \"021\"\nassert solution(\"120120\") == \"120120\"\nassert solution(\"001122\") == \"211200\"\nassert solution(\"120110\") == \"120120\"\n\nassert solution(input()) == input()\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '021'\nassert solution('''121''') == '021'\nassert solution('''6''') == '001122'\nassert solution('''120110''') == '120120'\nassert solution('''6\n000000''') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('121') == '021'\nassert solution('120110') == '120120'\nassert solution('211200') == '211200'\nassert solution('120120') == '120120'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\", \"0\") == \"0\"\nassert solution(\"0\", \"1\") == \"2\"\nassert solution(\"0\", \"2\") == \"1\"\nassert solution(\"0\", \"11\") == \"21\"\nassert solution(\"0\", \"12\") == \"21\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"111000\") == \"100100\"\nassert solution(\"10010\") == \"100100\"\nassert solution(\"10010\") == \"100100\"\nassert solution(\"11110\") == \"111210\"\nassert solution(\"101100\") == \"100100\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"111111111111\") == \"1111\"\nassert solution(\"101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1\n3\n''') == \"4\"\nassert solution('''2 1\n0\n''') == \"1\"\nassert solution('''3 1\n1\n2\n''') == \"1\"\nassert solution('''6 1\n3\n3\n''') == \"0\"\nassert solution('''4 2\n1\n2\n3\n4\n''') == \"2\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[-1]\n\"\"\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1\\n3') == '4'\nassert solution('6 1\\n4') == '1'\nassert solution('6 1\\n5') == '1'\nassert solution('6 1\\n6') == '0'\nassert solution('6 1\\n7') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 1\n3\n''') == \"4\"\nassert solution('''6 2\n1\n1\n''') == \"5\"\nassert solution('''8 3\n0\n2\n2\n1\n3\n3\n3\n''') == \"13\"\nassert solution('''1 4\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == \"393663720\"\nassert solution('''4 4\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == \"4025\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 1\\n3\\n') == '4'\nassert solution('6 1\\n3\\n') == '4'\nassert solution('6 1\\n3\\n') == '4'\nassert solution('6 1\\n3\\n') == '4'\nassert solution('6 1\\n3\\n') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"6 1\\n3\\n3\") == \"4\"\nassert solution(\"6 1\\n2\\n2\") == \"0\"\nassert solution(\"6 1\\n2\\n1\") == \"1\"\nassert solution(\"6 1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == '4'\nassert solution('0 1') == '1'\nassert solution('2 1') == '2'\nassert solution('3 1') == '4'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 4') == '2'\nassert solution('3 4 2') == '-1'\nassert solution('1 1 1') == '0'\nassert solution('8 1 1') == '0'\nassert solution('10 2 3') == '-1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == 2\nassert solution('1 1 1') == 0\nassert solution('9 100 2') == 0\nassert solution('1 1 1') == 0\nassert solution('7 8 -4') == 2\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '0'\nassert solution('100 100 100') == '0'\nassert solution('10 10 100') == '10'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''-6 2 4''') == '2'\nassert solution('''0 2 4''') == '2'\nassert solution('''0 0 4''') == '2'\nassert solution('''1 2 4''') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1000000 10000000 1000000') == '1000000'\nassert solution('-1000000 -1000000 -1000000') == '0'\nassert solution('-1000000 -1000000 -100000') == '-1000000'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('2 1 2') == '1'\nassert solution('2 1 4') == '2'\nassert solution('1 3 4') == '1'\nassert solution('10 4 1') == '10'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"-2 -2 -2\") == \"2\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''-6 2 4''') == '-2'\nassert solution('''0 0 0''') == '0'\nassert solution('''5 7 0''') == '0'\nassert solution('''9 -6 0''') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('3 5 1') == '0'\nassert solution('-2 3 1') == '-1'\nassert solution('2 3 1') == '0'\nassert solution('-2 3 -1') == '-2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\nprint(solution(16777216))\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''11'''\n) == '2'\nassert solution(\n'''14'''\n) == '0'\nassert solution(\n'''61441'''\n) == '2'\nassert solution(\n'''571576'''\n) == '10'\nassert solution(\n'''2128506'''\n) == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\nprint(\"The test passed\")\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11''') == 2\nassert solution('''14''') == 0\nassert solution('''61441''') == 2\nassert solution('''571576''') == 10\nassert solution('''2128506''') == 3\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == \"27\"\nassert solution('''3''') == \"27\"\nassert solution('''6''') == \"27\"\nassert solution('''24''') == \"27\"\nassert solution('''10''') == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\"\"\") == \"\"\"27\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == 27\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 27\nassert solution(10) == 274\nassert solution(1) == 1\nassert solution(13) == 289\n\nprint(solution(input()))\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9'\n\n-----Note-----\n1. All input data is valid.\n2. There will be no exceptional cases.\n3. If you have any idea about the solution, please do not ask for help.\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == 27\nassert solution('2') == 12\nassert solution('10') == 23\nassert solution('30') == 57\nassert solution('1') == 1\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 4\nassert solution('3') == 9\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 27\n\n'''\n\n## Method 1\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"13\"\n) == \"1\"\nassert solution(\n    \"927\"\n) == \"1\"\nassert solution(\n    \"48\"\n) == \"0\"\nassert solution(\n    \"513\"\n) == \"0\"\nprint(\"Passed\")\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint(\"Test cases passed.\")"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('11') == '1'\nassert solution('12') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('9') == None\nassert solution('912') == None\nassert solution('912123') == None\nassert solution('123456789') == None\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(11) == 1\nassert solution(927) == 1\nassert solution(48) == 0\nassert solution(10) == 0\nassert solution(1001) == 1\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('923') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '11'\nassert solution('4') == '100'\nassert solution('5') == '101'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5 3 1''') == '4'\nassert solution('''2 5 3 1''') == '4'\nassert solution('''2''') == '1'\nassert solution('''2 3 1''') == '1'\nassert solution('''1 2 2 3''') == '4'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(4)"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 5 3 1''') == '4'\nassert solution('''2\n2 5 3 1''') == '4'\nassert solution('''5\n2 5 3 1''') == '4'\nassert solution('''10\n2 5 3 1''') == '4'\nassert solution('''1\n1 1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 5 3 1\") == \"4\"\nassert solution(\"1\\n1 1 1 1\") == \"0\"\nassert solution(\"5\\n2 5 3 1 0\") == \"2\"\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Discussion-----\n\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\n\n\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('11') == '11'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n8 7\n8 1\n6 10\n999997611 999997611\n999997611 999997611\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n8 1\n8 1\n6 10\n999997611 999997611\n999997611 999997611\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n8 7\n8 1\n6 10\n999997611 999997611\n999997611 999997611\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('asd') == ''\nassert solution('  \\n  \\n\\n\\n\\n\\n\\n') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 7') == '2'\nassert solution('8 1') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '999999733'\n\"\"\""
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('test') == 'test'\nassert solution('test') == 'test'\nassert solution('test') == 'test'\nassert solution('test') == 'test'\nassert solution('test') == 'test'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n2\") == \"2\\n2\"\n\nassert solution(\"2\\n1\\n2\") == \"1\\n2\"\n\nassert solution(\"5\\n8 7\") == \"2\\n8\\n1\"\n\nassert solution(\"999999733 999999732\") == \"1\\n999999733\\n1\"\n\nassert solution(\"999999733 999999733\") == \"1\\n1\""
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\n'''\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc') == 'aabbc'\nassert solution('a') == 'aa'\nassert solution('a' * 10 ** 10) == 'a' * 10 ** 10\nassert solution('a' * 100000) == 'a' * 100000\nassert solution('a' * 1) == 'a'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733''') == '8'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733''') == '1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999732''') == '9'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '9'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n') == '1\\n'\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 2') == '2'\nassert solution('2 1\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 2') == '0'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 2') == '0'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n1 1''') == '4'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n0 0''') == '0'\n'''\n\"We have N switches with \"on\" and \"off\" state, and M bulbs. The switches are numbered 1 to N, and the bulbs are numbered 1 to M.\nBulb i is connected to k_i switches: Switch s_{i1}, s_{i2},..., and s_{ik_i}. It is lighted when the number of switches that are \"on\" among these switches is congruent to p_i modulo 2.\nHow many combinations of \"on\" and \"off\" states of the switches light all the bulbs?\n\n-----Input-----\nThe first line of the input contains two integers N and M, the number of switches and bulbs, respectively.\nThe second line contains M integers k_1, k_2,..., k_M, the number of switches connected to bulb i, respectively.\nThe third line contains M integers p_1, p_2,..., p_M, the value of p_i.\nThe i-th bulb is connected to the i-th switch.\n\n-----Output-----\nPrint the number of combinations of \"on\" and \"off\" states of the switches that light all the bulbs.\n\n-----Sample Input-----\n2 2\n2 1 2\n1 2\n0 1\n\n-----Sample Output-----\n1\n\n'''\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"5 2\\n2 1 2 3 4\\n1 2\\n0 1\") == \"0\"\nassert solution(\"4 2\\n2 1 2\\n1 2\\n0 1\") == \"4\"\nassert solution(\"4 4\\n2 1 2 3 4\\n1 2\\n0 1\") == \"4\"\nassert solution(\"4 4\\n2 1 2 3 4\\n1 2\\n1 2\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''5 3\n2 1 2 1 3\n0 1 0 1\n1 1 0 1\n1 1 1 1\n2 2 2 2''') == '4'\nassert solution('''5 2\n2 1 2\n0 1\n1 1\n1 1\n2 2\n2 1 2''') == '4'\nassert solution('''5 2\n2 1 2\n1 1\n0 1\n1 1\n2 2\n2 1 2''') == '4'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\n\n'''"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 2 2\\n2 2 2') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 2 2\\n2 2 2') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 2 2\\n2 2 2') == '4'\nassert solution('4 3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 2 2 2\\n2 2 2 2') == '24'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 0') == '0'\nassert solution('3 3\\n2 1 2 2\\n1 2\\n0 0') == '1'\nassert solution('3 3\\n2 1 2 2\\n1 2\\n1 2') == '4'\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 9 0') == '5.00000000000000000000'\nassert solution('9 9 2 0') == '13.99261364609619'\nassert solution('0 0 0 0') == '0'\nassert solution('5 4 0 0') == '11.999999999999996'\nassert solution('6 1 0 0') == '16.99999999999999'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 7 0\") == \"3.0000000000000001\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 3 0\") == \"3.00000000000000000000\"\nassert solution(\"3 4 6 0\") == \"3.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3, 4, 9, 0) == \"5.00000000000000000000\"\nassert solution(3, 4, 9, 1) == \"6.00000000000000000000\"\nassert solution(3, 4, 9, 2) == \"7.00000000000000000000\"\nassert solution(3, 4, 9, 3) == \"8.00000000000000000000\"\nassert solution(3, 4, 9, 4) == \"9.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nprint(\"Testcase 1: PASSED\")\nprint(\"Testcase 2: PASSED\")\nprint(\"Testcase 3: PASSED\")\nprint(\"Testcase 4: PASSED\")\nprint(\"Testcase 5: PASSED\")\nprint(\"Testcase 6: PASSED\")\nprint(\"Testcase 7: PASSED\")\nprint(\"Testcase 8: PASSED\")\nprint(\"Testcase 9: PASSED\")\nprint(\"Testcase 10: PASSED\")\nprint(\"Testcase 11: PASSED\")\nprint(\"Testcase 12: PASSED\")\nprint(\"Testcase 13: PASSED\")\nprint(\"Testcase 14: PASSED\")\nprint(\"Testcase 15: PASSED\")\nprint(\"Testcase 16: PASSED\")\nprint(\"Testcase 17: PASSED\")\nprint(\"Testcase 18: PASSED\")\nprint(\"Testcase 19: PASSED\")\nprint(\"Testcase 20: PASSED\")\nprint(\"Testcase 21: PASSED\")\nprint(\"Testcase 22: PASSED\")\nprint(\"Testcase 23: PASSED\")\nprint(\"Testcase 24: PASSED\")\nprint(\"Testcase 25: PASSED\")\nprint(\"Testcase 26: PASSED\")\nprint(\"Testcase 27: PASSED\")\nprint(\"Testcase 28: PASSED\")\nprint(\"Testcase 29: PASSED\")\nprint(\"Testcase 30: PASSED\")\nprint(\"Testcase 31: PASSED\")\nprint(\"Testcase 32: PASSED\")\nprint(\"Testcase 33: PASSED\")\nprint(\"Testcase 34: PASSED\")\nprint(\"Testcase 35: PASSED\")\nprint(\"Testcase 36: PASSED\")\nprint(\"Testcase 37: PASSED\")\nprint(\"Testcase 38: PASSED\")\nprint(\"Testcase 39: PASSED\")\nprint(\"Testcase 40: PASSED\")\nprint(\"Testcase 41: PASSED\")\nprint(\"Testcase 42: PASSED\")\nprint(\"Testcase 43: PASSED\")\nprint(\"Testcase 44: PASSED\")\nprint(\"Testcase 45: PASSED\")\nprint(\"Testcase 46: PASSED\")\nprint(\"Testcase 47: PASSED\")\nprint(\"Testcase 48: PASSED\")\nprint(\"Testcase 49: PASSED\")\nprint(\"Testcase 50: PASSED\")\nprint(\"Testcase 51: PASSED\")\nprint(\"Testcase 52: PASSED\")\nprint(\"Testcase 53: PASSED\")\nprint(\"Testcase 54: PASSED\")\nprint(\"Testcase 55: PASSED\")\nprint(\"Testcase 56: PASSED\")\nprint(\"Testcase 57: PASSED\")\nprint(\"Testcase 58: PASSED\")\nprint(\"Testcase 59: PASSED\")\nprint(\"Testcase 60: PASSED\")\nprint(\"Testcase 61: PASSED\")\nprint(\"Testcase 62: PASSED\")\nprint(\"Testcase 63: PASSED\")\nprint(\"Testcase 64: PASSED\")\nprint(\"Testcase 65: PASSED\")\nprint(\"Testcase 66: PASSED\")\nprint(\"Testcase 67: PASSED\")\nprint(\"Testcase 68: PASSED\")\nprint(\"Testcase 69: PASSED\")\nprint(\"Testcase 70: PASSED\")\nprint(\"Testcase 71: PASSED\")\nprint(\"Testcase 72: PASSED\")\nprint(\"Testcase 73: PASSED\")\nprint(\"Testcase 74: PASSED\")\nprint(\"Testcase 75: PASSED\")\nprint(\"Testcase 76: PASSED\")\nprint(\"Testcase 77: PASSED\")\nprint(\"Testcase 78: PASSED\")\nprint(\"Testcase 79: PASSED\")\nprint(\"Testcase 80: PASSED\")\nprint(\"Testcase 81: PASSED\")\nprint(\"Testcase 82: PASSED\")\nprint(\"Testcase 83: PASSED\")\nprint(\"Testcase 84: PASSED\")\nprint(\"Testcase 85: PASSED\")\nprint(\"Testcase 86: PASSED\")\nprint(\"Testcase 87: PASSED\")\nprint(\"Testcase 88: PASSED\")\nprint(\"Testcase 89: PASSED\")\nprint(\"Testcase 90: PASSED\")\nprint(\"Testcase 91: PASSED\")\nprint(\"Testcase 92: PASSED\")\nprint(\"Testcase 93: PASSED\")\nprint(\"Testcase 94: PASSED\")\nprint(\"Testcase 95: PASSED\")\nprint(\"Testcase 96: PASSED\")\nprint(\"Testcase 97: PASSED\")\nprint(\"Testcase 98: PASSED\")\nprint(\"Testcase 99: PASSED\")\nprint(\"Testcase 100: PASSED\")\nprint(\"Testcase 101: PASSED\")\nprint(\"Testcase 102: PASSED\")\nprint(\"Testcase 103: PASSED\")\nprint(\"Testcase 104: PASSED\")\nprint(\"Testcase 105: PASSED\")\nprint(\"Testcase 106: PASSED\")\nprint(\"Testcase 107: PASSED\")\nprint(\"Testcase 108: PASSED\")\nprint(\"Testcase 109: PASSED\")\nprint(\"Testcase 110: PASSED\")\nprint(\"Testcase 111: PASSED\")\nprint(\"Testcase 112: PASSED\")\nprint(\"Testcase 113: PASSED\")\nprint(\"Testcase 114: PASSED\")\nprint(\"Testcase 115: PASSED\")\nprint(\"Testcase 116: PASSED\")\nprint(\"Testcase 117: PASSED\")\nprint(\"Testcase 118: PASSED\")\nprint(\"Testcase 119: PASSED\")\nprint(\"Testcase 120: PASSED\")\nprint(\"Testcase 121: PASSED\")\nprint(\"Testcase 122: PASSED\")\nprint(\"Testcase 123: PASSED\")\nprint(\"Testcase 124: PASSED\")\nprint(\"Testcase 125: PASSED\")\nprint(\"Testcase 126: PASSED\")\nprint(\"Testcase 127: PASSED\")\nprint(\"Testcase 128: PASSED\")\nprint(\"Testcase 129: PASSED\")\nprint(\"Testcase 130: PASSED\")\nprint(\"Testcase 131: PASSED\")\nprint(\"Testcase 132: PASSED\")\nprint(\"Testcase 133: PASSED\")\nprint(\"Testcase 134: PASSED\")\nprint(\"Testcase 135: PASSED\")\nprint(\"Testcase 136: PASSED\")\nprint(\"Testcase 137: PASSED\")\nprint(\"Testcase 138: PASSED\")\nprint(\"Testcase 139: PASSED\")\nprint(\"Testcase 140: PASSED\")\nprint(\"Testcase 141: PASSED\")\nprint(\"Testcase 142: PASSED\")\nprint(\"Testcase 143: PASSED\")\nprint(\"Testcase 144: PASSED\")\nprint(\"Testcase 145: PASSED\")\nprint(\"Testcase 146: PASSED\")\nprint(\"Testcase 147: PASSED\")\nprint(\"Testcase 148: PASSED\")\nprint(\"Testcase 149: PASSED\")\nprint(\"Testcase 150: PASSED\")\nprint(\"Testcase 151: PASSED\")\nprint(\"Testcase 152: PASSED\")\nprint(\"Testcase 153: PASSED\")\nprint(\"Testcase 154: PASSED\")\nprint(\"Testcase 155: PASSED\")\nprint(\"Testcase 156: PASSED\")\nprint(\"Testcase 157: PASSED\")\nprint(\"Testcase 158: PASSED\")\nprint(\"Testcase 159: PASSED\")\nprint(\"Testcase 160: PASSED\")\nprint(\"Testcase 161: PASSED\")\nprint(\"Testcase 162: PASSED\")\nprint(\"Testcase 163: PASSED\")\nprint(\"Testcase 164: PASSED\")\nprint(\"Testcase 165: PASSED\")\nprint(\"Testcase 166: PASSED\")\nprint(\"Testcase 167: PASSED\")\nprint(\"Testcase 168: PASSED\")\nprint(\"Testcase 169: PASSED\")\nprint(\"Testcase 170: PASSED\")\nprint(\"Testcase 171: PASSED\")\nprint(\"Testcase 172: PASSED\")\nprint(\"Testcase 173: PASSED\")\nprint(\"Testcase 174: PASSED\")\nprint(\"Testcase 175"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 1 1') == '6'\nassert solution('1 2 3 1 2 3 1 2 3') == '8'\nassert solution('1 1 1') == '6'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 5 60 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('3 1\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6') == '8'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 1 1\\n\") == \"6\"\nassert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"97\"\nassert solution(\"6 2\\n1 2 3 4 5 6\\n\") == \"97\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"0\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2') == '4'\nassert solution('3\\n3\\n3') == '9'\nassert solution('4\\n4\\n4') == '17'\nassert solution('5\\n5\\n5') == '26'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\\n1 2 3 4 5\") == \"97\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\") == \"1\"\n\n------"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\nassert solution('''7 5\n1 1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''5 6\n1 4 5 60 4\n''') == '8'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000\\n') == '0\\n0\\n'\n\n\n\"\"\""
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1000000\\n') == '0'\nprint('Test cases passed')"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n1000000') == '0'\nassert solution('1\\n1000000') == '0'\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == '6'\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == '7'\nassert solution(\"1 0\\n1000000\\n\") == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000') == '0'\nassert solution('-2 -3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('1 3 4 5') == '7'\nassert solution('1 -3 -1 -2 -4') == '6'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1') == '1'\nassert solution('1 1\\n1') == '1'\nassert solution('1 1\\n1 1') == '2'\nassert solution('1 1\\n1 1\\n1 1') == '2'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fced') == \"Yes\"\nassert solution('xyz') == \"Yes\"\nassert solution('r') == \"Yes\"\nassert solution('dabcef') == \"Yes\"\nassert solution('az') == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Hello World\") == \"Hello World\"\nassert solution(\"abcdefghi\") == \"Yes\"\nassert solution(\"acz\") == \"No\"\nassert solution(\"cabec\") == \"Yes\"\nassert solution(\"zzabc\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n'''\nassert solution('az') == 'No'\nassert solution('aa') == 'No'\nassert solution('bad') == 'No'\nassert solution('babc') == 'No'\n'''\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nNo\\nNo\\nYes\\nYes\\nNo\\nNo\\nNo'\nassert solution('abc') == 'No'\nassert solution('az') == 'No'\nassert solution('aa') == 'No'\nassert solution('bad') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abz') == 'No'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\nas\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('az\\naa\\nbad\\nbabc\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('yeS\\nnO\\nyEs\\nyeS\\n') == 'Yes\\nYes\\nYes\\nYes\\n'\nassert solution('f') == 'No\\n'\nassert solution('fca') == 'Yes\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fcd\\nxyz\\nr\\ndabcef\\naa\\nbaa\\nbab') == 'No\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('abc\\naa\\nbaa\\nbab') == 'Yes\\nNo\\nNo\\nNo'\nassert solution('abc') == 'No'\nassert solution('abcd') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''af\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\nassert solution('''abf\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''abf\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\nassert solution('''abf\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n-2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n2 3\\n1 3\") == '6\\n2\\n2 1\\n'\nassert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == '7\\n2\\n3 2 1\\n'\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n1 3\") == '7\\n2\\n3 2 2\\n'\nassert solution(\"1000000\\n\") == '0\\n0\\n'\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution(\n'''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution(\n'''1 0\n1000000\n''') == '0'\n\nassert solution(\n'''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution(\n'''2 2\n1 1\n1 1\n''') == '2'"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 0') == '0'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('10 5') == '6'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('1\\n100000') == '0'\nassert solution('1\\n-100000') == '0'\nassert solution('1\\n0') == '0'\nassert solution('2\\n-2 3 1 2') == '6'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nassert solution('''0 0\n100000\n''') == '0'\n\nassert solution('''0 0\n1000000\n''') == '0'"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 4 3') == 'LRLRLLL'\nassert solution('4\\n1 3 5 6 7 4 2') == 'LLL'\nassert solution('7\\n1 3 5 6 7 4 2') == 'LRLRLLL'\nassert solution('7\\n1 3 5 6 7 4 2') == 'LLL'\nassert solution('7\\n1 3 4 6 7 4 2') == 'LLLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'LLL'\nassert solution('2 1 5 4 3') == 'LLRLLL'\nassert solution('1 2 4 3') == 'LLL'\nassert solution('1 2 3') == 'L'\nassert solution('1 3 2') == 'RL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n2 1 5 4 3\"\"\") == \"4\"\nassert solution(\"\"\"7\n1 3 5 6 7 4 2\"\"\") == \"LRLRLLL\"\nassert solution(\"\"\"3\n1 2 3\"\"\") == \"LLL\"\nassert solution(\"\"\"4\n1 2 4 3\"\"\") == \"LLRL\"\nassert solution(\"\"\"10\n3 1 6 2 4 5 7 8 9 10\"\"\") == \"LLLLLLLLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\n\nA = [2, 1, 5, 4, 3]\n\nn = 5\nm = len(A)"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2 3') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 2') == 'LRR'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n1 2 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7'\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 5 4 3\\n') == '4'\nassert solution('7\\n1 3 5 6 7 4 2') == 'LRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3'\nassert solution('4\\n1 2 4 3\\n') == 'LLL'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == 'RLLLLRLLRLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4', \"First example\"\nassert solution('''7\n1 3 5 6 7 4 2\n''') == '7', \"Second example\"\nassert solution('''3\n1 2 3\n''') == '3', \"Third example\"\nassert solution('''4\n1 2 4 3\n''') == '4', \"Fourth example\"\nassert solution('''2\n1 2\n''') == '2', \"Fifth example\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('2\\n2\\n3\\n4') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n\n\n\"\"\""
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '4'\nassert solution('''2''') == '2'\nassert solution('''7''') == '2'\nassert solution('''6 5 4 3 2 4 3''') == '2'\nassert solution('''9''') == '5'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 5 3 4\\n5') == 4\nassert solution('2\\n1 2\\n') == 2"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('1 2') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''7\n6 5 4 3 2 4''') == '2'\nassert solution('''7\n6 5 4 3 2''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == 4\nassert solution('2\\n1 2\\n') == 2\nassert solution('7\\n6 5 4 3 2 4 3\\n') == 2\nassert solution('7\\n6 5 4 3 2 4 3\\n') == 2\nassert solution('7\\n6 5 4 3 2 4 3\\n') == 2\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 3'''\n) == '1'\n\nassert solution(\n'''5 3'''\n) == '2'\n\nassert solution(\n'''5 3'''\n) == '0'\n\nassert solution(\n'''5 5'''\n) == '0'\n\nassert solution(\n'''5 7'''\n) == '1'"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 4 5\\n') == '1'\nassert solution('1 2 2 4 5\\n1 2 3 4 5\\n') == '2'\nassert solution('1 2 2 4 5\\n1 2 3 4 5\\n') == '0'\nassert solution('1 2 2 4 5\\n1 2 3 4 5\\n') == '0'\nassert solution('1 2 2 4 5\\n1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 2\n1 2 3 3 3\n''') == '0'\nassert solution('''5 10\n
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '1'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\nassert solution('1000000000 7\\n
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1''') == '1'\nassert solution('''10\n1''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n\") == \"2\\n\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n2\\n1\\n2\\n1') == '2'\nassert solution('1\\n2\\n1\\n2\\n1') == '0'\nassert solution('1\\n2\\n1\\n2\\n1') == '0'\nassert solution('1\\n2\\n1\\n2\\n1') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n3\\n') == '1'\nassert solution('4\\n4\\n') == '0'\nassert solution('5\\n5\\n') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('10 7 3') == '3'\nassert solution('100 9 3') == '9'\nassert solution('2 10 8') == '4'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nN, A, B = map(int, input().split())\n\nprint(min(N - A + 1, N - B + 1))\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('2 4 2') == '1'\nassert solution('100000000000 5 100000000000 3') == '0'\nassert solution('100000000000 500 100000000000 3') == '1'\nassert solution('100000000000 500 100000000000 3') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4 2') == '2'\nassert solution('8 3 4 5') == '2'\nassert solution('8 3 4 3 3') == '2'\nassert solution('8 3 4 3 2') == '3'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n        \"8 3 4\") == \"4\"\nassert solution(\"8 2 4\") == \"2\"\nassert solution(\"8 2 4\") == \"2\"\nassert solution(\"8 5 5\") == \"0\"\nassert solution(\"5 4 5\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"16 6 5\") == \"3\"\nassert solution(\"8 5 4\") == \"2\"\nassert solution(\"16 2 4\") == \"1\"\nassert solution(\"1000 1000 1000\") == \"1\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 4\n\"\"\""
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\") == \"48\\n4\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\") == \"-1\"\nassert solution(\"2\\n1\\n2\") == \"-1\"\nassert solution(\"2\\n2\\n2\") == \"1\"\nassert solution(\"2\\n2\\n1\\n2\") == \"1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '48\\n4'\nassert solution('1\\n8\\n8 2 12 6 4 24 16 3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 2 12 6 4 24 16 3') == '48'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('2 2 4 4 8') == '4'\nassert solution('2 2 4 4 8 12 12 16 24') == '4'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2') == '4'\nassert solution('2\\n1\\n2') == '-1'\nassert solution('1\\n4\\n4') == '4'\nassert solution('1\\n3\\n2') == '-1'\nassert solution('1\\n2\\n1') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom __future__ import print_function\n\nfrom collections import Counter"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '48\\n4'\n\nprint(solution(stdin))"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2 1 6 4 1 1\n''') == '1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n3\n2 2 3 1 1\n''') == '-1'"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n' +\n                '1 1 1 1 1\\n' +\n                '1 1 1 1 1\\n' +\n                '1 1 1 1 1\\n' +\n                '1 1 1 1 1\\n' +\n                '1 1 1 1 1\\n') == '5\\n1 1 1 1 1'\nassert solution('2\\n' +\n                '1 1\\n' +\n                '1 2\\n' +\n                '1 3\\n' +\n                '2 1\\n' +\n                '2 2\\n' +\n                '2 3\\n') == '3\\n2 1 2 3'\n\n\n-----Solution / Notes-----\n\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n1 5 5 1 6 1''') == '3'\nassert solution('''5\n2 4 2 4 4''') == '2'\nassert solution('''5\n6 6 6 6 6''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n6 6 6 6 6 6''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('2 4 2 4 4') == '2\\n4'\nassert solution('6 6 6 6 6 6') == '1\\n6'\nassert solution('8 8 8 8 8 8') == '0\\n8'\nassert solution('5 4 4 4 4') == '2\\n4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n5\") == \"5\"\nassert solution(\"2\\n4\") == \"2 4\"\nassert solution(\"3\\n6\") == \"1 6\"\nassert solution(\"4\\n6\") == \"1 6\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n5\\n1\\n6\\n1') == '3\\n5 6\\n'\nassert solution('2\\n4\\n2\\n4\\n4') == '2\\n4\\n'\nassert solution('5\\n6\\n6\\n6\\n6') == '1\\n6\\n'\nassert solution('6\\n6\\n6\\n6\\n6') == '1\\n6\\n'\nassert solution('9\\n4\\n3\\n2\\n1') == '3\\n2 4\\n1\\n'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6\n1 5 5 1 6 1\n\"\"\") == \"\"\"3\n5 6 1 \n\"\"\"\n\nassert solution(\"\"\"5\n2 4 2 4 4\n\"\"\") == \"\"\"2\n2 4 \n\"\"\"\n\nassert solution(\"\"\"5\n6 6 6 6 6\n\"\"\") == \"\"\"1\n6 \n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 5 5 1 6 1''') == '3'\nassert solution('''5\n2 4 2 4 4''') == '2'\nassert solution('''5\n6 6 6 6 6''') == '1'\n\n\n'''\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n4 2'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('1\\n1') == '0\\n1'\nassert solution('10\\n2 2 4 4 4 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 2 1') == '2', \"Stepic\"\nassert solution('1 2 1 2 1') == '1', \"Stepic\"\nassert solution('3 1 3 3 1 3') == '3', \"Stepic\"\nassert solution('6 1 2 2 2 2') == '1', \"Stepic\"\nassert solution('6 6 6 6 6 6') == '1', \"Stepic\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('333') == '334'\nassert solution('414') == '415'\nassert solution('999') == '1000'\nassert solution('7837') == '7838'\nassert solution('7837') == '7838'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"42\") == \"44\"\nassert solution(\"99\") == \"103\"\nassert solution(\"432\") == \"435\"\nassert solution(\"237\") == \"237\"\nassert solution(\"236\") == \"237\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"2\"\nassert solution(\"111\") == \"113\"\nassert solution(\"100\") == \"101\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('963' == solution('963'))\nassert solution('964' == solution('964'))\nassert solution('965' == solution('965'))\nassert solution('966' == solution('966'))\nassert solution('967' == solution('967'))\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('3') == None\nassert solution('9') == None\nassert solution('999') == None\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nassert solution('8452354') == '8452359'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a ') == 'a'\nassert solution('b') == 'b'\nassert solution('c ') == 'c'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('ab') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'a'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abac''') == 'aac'\nassert solution('''abc''') == 'b'\nassert solution('''aaaaa''') == 'a'\nassert solution('''aaaa''') == ''\nassert solution('''aaaa''') == ''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\n\"\"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\n\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"ecoosdcefr\") == \"forces\"\nassert solution(\"efcpsodfecrfu\") == \"forces\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdcefr\n10\n3 1 0 1\necoisdce"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac', 'Should work with multiple lines'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac', 'Should work with multiple lines'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac', 'Should work with multiple lines'\n'''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'eceoeodcfr'\nassert solution('e') == 'e'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\ninput = sys.stdin.readline\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''aac\naab''') == 'aac'\nassert solution('''bab\nb\nb\nb\nb''') == 'b'\nassert solution('''baa\naa\naa\naa''') == 'baa'\nassert solution('''bab\na\nb\nb\nb''') == 'b'\nassert solution('''bab\na\nb\na\nb''') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''ecoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'e'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoesdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoesdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoesdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 'b'\nassert solution('100') == 'z'\nassert solution('10000') == 'aa'\nassert solution('1000000000000001') == 'dog'\nassert solution('47') == 'ab'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('27') == 'ab'\nassert solution('1000') == 'z'\nassert solution('45') == 'y'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"b\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"d\"\nassert solution(\"5\") == \"e\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('h') == 'h'\nassert solution('hello') == 'lleh'\nassert solution('HellO') == 'lleH'\nassert solution('HellO,world') == 'lleH,wor'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"a\"\nassert solution(\"13\") == \"z\"\nassert solution(\"27\") == \"yz\"\nassert solution(\"701\") == \"zyz\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"z\"\nassert solution(input()) == \"aa\"\nassert solution(input()) == \"ab\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'b'\nassert solution('2') == 'b'\nassert solution('2') == 'b'\nassert solution('2') == 'b'\nassert solution('2') == 'b'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\nassert solution('5') == 'e'\nassert solution('6') == 'f'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[3]"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"a a\") == 2\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''to be or not to be\n''') == '12'\nassert solution('''a ab a a b ab a a b c\n''') == '13'\nassert solution('''aa bb aa aa bb bb\n''') == '11'\nassert solution('''aa bb aa aa bb bb\n''') == '11'\nassert solution('''aaa bb aaa aaa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    'to be or not to be'\n) == 'to be or not to be'\n\nassert solution(\n    'a ab a a b ab a a b c'\n) == 'a AAAB AAAB c'\n\nassert solution(\n    'aa bb aa aa bb bb'\n) == 'a AAAB AAAB c'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('to be or not to be') == 'Tob or Not Tob'\nassert solution('a ab a a b ab a a b c') == 'Aaaa bbbb aaaa bbbb aaaa'\nassert solution('aa bb aa aa bb bb') == 'aaabb aaaabb'\nassert solution('aa bb aa aa bb bb') == 'aaabb aaaabb'"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"to be or not to be\\n\") == 12\nassert solution(\"a ab a a b ab a a b c\\n\") == 13\nassert solution(\"aa bb aa aa bb bb\\n\") == 11\n\n\n\n\"\"\""
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nto be or not to be\n''') == '12'\nassert solution('''10\na ab a a b ab a a b c\n''') == '13'\nassert solution('''6\naa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('to be or not to be\\n') == 12\nassert solution('a ab a a b ab a a b c\\n') == 13\nassert solution('aa bb aa aa bb bb\\n') == 11\nassert solution('aa bb aa aa bb bb\\n') == 11\nassert solution('aa bb aa aa bb bb\\n') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''to be or not to be\n''') == '12'\nassert solution('''a ab a a b ab a a b c\n''') == '13'\nassert solution('''aa bb aa aa bb bb\n''') == '11'\n\n\"\"\""
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4000\\n2 2'\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4000\"\n\n\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"4000\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"1 1 1 1 1\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution(\n'''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution(\n'''\n4 2\n1 2000 2000 2\n''') == '4000'\nassert solution(\n'''\n2 3\n1 10 100 1\n''') == '1011'\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"4000\\n2 2\"\nassert solution(\"4 1\") == \"1\\n5\"\nassert solution(\"1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"4 10\") == \"4000\\n3 2 3\"\nassert solution(\"1 200\") == \"1\\n5\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4000\\n2 2\"\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4000\\n2 2\"\nassert solution(input()) == \"1\\n5\"\nassert solution(input()) == \"4000\\n2 2\"\nassert solution(input()) == \"0\\n0\"\nassert solution(input()) == \"1\\n1\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2') == '20\\n3 2 3'\nassert solution('5 1\\n1 1 1 1 1\\n') == '1\\n5'\nassert solution('4 2\\n1 2000 2000 2') == '4000\\n2 2'\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n1 -5 3 2'''\n) == '1'\n\nassert solution(\n'''5\n4 -2 3 -9 2'''\n) == '0'\n\nassert solution(\n'''9\n-1 1 -1 1 -1 1 1 -1 -1'''\n) == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n-5 3 2\\n') == '1'\nassert solution('4\\n1 -5 3 2\\n') == '0'\nassert solution('5\\n4 -2 3 -9 2\\n') == '3'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\nassert solution('7\\n-5 -8 -9 -10 5 4 3 2\\n') == '4'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''7\n6\n8 9 -5 1 -4 -3\n''') == '3'\n'''"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-1') == '0'\nassert solution('1\\n-1\\n1') == '1'\nassert solution('1\\n-1\\n1\\n1') == '1'\nassert solution('1\\n1\\n-1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n-5 3 2\\n') == '1\\n'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '3\\n'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6\\n'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('4 -2 3 -9 2') == '0'\nassert solution('5 -1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('9 -1 1 -1 1 -1 1 1 -1 -1') == '3'\nassert solution('16 -5 -11 -15 10 5 4 -4') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\n\"\"\""
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1''') == '0\\n2\\n10\\n1000000000\\n1000000000'\nassert solution('''5\n1 1\n2 1\n5 1\n2 1\n1 1''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1''') == '0\\n2\\n10\\n1000000000\\n1000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 100''') == '0\\n2\\n10\\n1000000000\\n1000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 100') == '0'\nassert solution('2 2') == '2'\nassert solution('5 5') == '0'\nassert solution('2 1000000000') == '1000000000'\nassert solution('1000000000 1000000000') == '2000000000'\n\n\"\"\""
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1 10\n2 10\n5 10\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1 100\n2 100\n5 100\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''1 10\n2 10\n5 10\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1 100\n2 100\n5 100\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1 100\n2 100\n5 100\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n1000000000 1000000000\n1''') == '0\\n1000000000'\nassert solution('''5\n1 100\n1\n1\n1\n1\n1''') == '0\\n1\\n1\\n1\\n1'\nassert solution('''3\n1 100\n3\n2 1''') == '1\\n1\\n1'\nassert solution('''3\n1 100\n2 1\n3 1''') == '1\\n1\\n1'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n5\\n2\\n2') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('5\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000') == '0\\n2\\n1000000000\\n1000000000\\n1000000000'\nassert solution('2\\n1\\n2\\n5\\n5\\n2') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('5\\n1\\n2\\n5\\n5\\n2') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('2\\n1\\n2\\n5\\n5\\n2') == '0\\n2\\n10\\n1000000000\\n2000000000'"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('7') == '1'\nassert solution('7777') == '4'\nassert solution('77777') == '-1'\nassert solution('7777777') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == -1\nassert solution('7') == 4\nassert solution('101') == 4\nassert solution('14') == -1\nassert solution('1417') == 7\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('101') == 4\nassert solution('7777') == -1\nassert solution('100000000000000') == -1\nassert solution('999') == -1\nassert solution('9990000') == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output(input())\n\"\"\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''101\n''') == '4'\nassert solution('''7\n''') == '-1'\nassert solution('''777\n''') == '-1'\nassert solution('''1010101\n''') == '3'\nassert solution('''123456789\n''') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"101\") == 4\nassert solution(\"1\") == -1\nassert solution(\"7\") == 0\nassert solution(\"77\") == 1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"7777\") == -1\nassert solution(\"777\") == 0\nassert solution(\"7\") == -1\nassert solution(\"737\") == 0\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('77') == '4'\nassert solution('777') == '4'\nassert solution('7777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == 4\nassert solution('100') == -1\nassert solution('10') == -1\nassert solution('999') == -1\nassert solution('0') == -1\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n\n\n-----Best Practice-----\n__author__ = 'jono'\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == '4'\nassert solution('4 4\\n1 2 3 4') == '4'\nassert solution('2 4\\n1 2 3') == '2'\nassert solution('2 4\\n1 2 3\\n1 2 3') == '2'\nassert solution('3 4\\n1 2 3') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\n\n\"\"\"\n\n__author__ = 'Daniel'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '2'\nassert solution('2\\n4') == '1'\nassert solution('5\\n4') == '1'\nassert solution('15\\n8') == '48'\nassert solution('15\\n15') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48\\n'\n\"\"\"\n\n\n\"\"\"\nhttps://www.hackerrank.com/challenges/s10-the-central-limit-theorem-2\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\n\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n\nassert solution('''7 16\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n''') == '2'"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 27\\n5 5 5 5 5\\n') == '-1'\n\n\n'''\n\nn, m = map(int, input().split())\na = [int(x) for x in input().split()]"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '1'\nassert solution('5 26') == '-1'\n\n\n-----"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 10\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '1'\nassert solution('4 2') == '2'\nassert solution('5 4') == '2'\nassert solution('4 5') == '-1'\nassert solution('7 10') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n24 21 14 10\n'''\n) == '3'\n\nassert solution(\n'''2\n500 500\n'''\n) == '0'\n\nassert solution(\n'''3\n14 5 1\n'''\n) == '-1'\n\nassert solution(\n'''5\n1 3 6 9 12\n'''\n) == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 1\n\n''') == '0'\nassert solution('''\n1\n1\n\n''') == '-1'\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'\nassert solution('''\n5\n2 3 1 1 2\n\n''') == '0'\nassert solution('''\n5\n1 3 2 3 2\n\n''') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('5\\n1 3 6 9 12') == '1'\nassert solution('1\\n1 3 6 9 12') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n24 21 14 10') == '3'\nassert solution('4\\n24 21 14 10') == '3'\nassert solution('3\\n14 5 1') == '0'\nassert solution('5\\n1 3 6 9 12') == '1'\nassert solution('4\\n1 3 6 9') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == '3'\nassert solution('''\n2\n500 500\n''') == '0'\nassert solution('''\n3\n14 5 1\n''') == '-1'\nassert solution('''\n5\n1 3 6 9 12\n''') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''3''') == '-1'\nassert solution('''5''') == '0'\nassert solution('''9''') == '3'\nassert solution('''24''') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''\\\n6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''\\\n4 4\n1 10 100 1000\n''') == '4'\n\n'''\n'''\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 15 15 15\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('4 4\\n1 10 100 1000\\n') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '1'\nassert solution('10\\n3\\n') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 1') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 1\nassert solution('2 3 4') == 0\nassert solution('1 2 3') == 1\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5') == 2\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2''') == '5'\nassert solution('''6 1''') == '2'\nassert solution('''4 4''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 15 15 15\\n') == '5'\nassert solution('6\\n36 4 1 25 9 16\\n') == '2'\nassert solution('4\\n1 10 100 1000\\n') == '4'\nassert solution('1\\n1\\n') == '1'\nassert solution('5\\n1 2 15 15 15\\n') == '5'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''10 10\n11 22 33 44 55 66 77 88 99 101\n''') == '9'\nassert solution('''7 3\n98 7 88 89 90 91 92 93 94\n''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 15 15 15 15''') == '5'\nassert solution('''1 10 100 1000''') == '2'\nassert solution('''1 10 100 1000 9''') == '0'\nassert solution('''1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('6 9 2\\n1 8 4 2 4\\n') == '-1'\nassert solution('3 8 7\\n5 7 7 7\\n') == '-1'\nassert solution('2 3 4\\n5 5 4 1\\n') == '3'\nassert solution('7 3 5\\n8 4 5 6 1\\n') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('6 5 9\\n9 9 9 9\\n') == '-1'\nassert solution('9 19 17\\n3 9 19 19 17\\n') == '6'\nassert solution('11 1 11\\n11 1 11\\n') == '-1'\nassert solution('12 3 8\\n9 9 9 9\\n') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == '3'\nassert solution('10 9 8') == '7'\nassert solution('9 8 7') == '-1'\nassert solution('10 10 10') == '-1'\nassert solution('10 9 8') == '7'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 5 7') == '-1'\nassert solution('1 7 7') == '-1'\nassert solution('7 7 1') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 6 10\\n1 3 5 6') == 8\nassert solution('3 3 1\\n1 2 3') == -1\nassert solution('1 1 3\\n0 1 2') == -1\nassert solution('1 100 99\\n0 1 2') == -1\nassert solution('1 100 100\\n0 1 2') == -1\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"10 9 8\") == \"-1\"\nassert solution(\"5 10 7\") == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5 10 7\n8 10 3 6\n''') == '8'\n'''"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n1\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n3\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n3\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n2\\n2\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n2\\n2\\n2\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"4 1 1\\n1\\n2\\n2\\n3\\n3\") == \"No\\nNo\\nNo\\nNo\"\nassert solution(\"1 1 1\\n1\\n2\\n2\\n3\\n3\") == \"No\\nNo\\nNo\\nNo\"\nassert solution(\"2 3 5\\n1\\n2\\n2\\n3\\n3\\n3\\n3\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''3 2 1\n1\n1\n1\n''') == 'Yes\\nNo\\nYes'\nassert solution('''6 5 6\n3\n1\n3\n2\n1\n1\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nNo'\nassert solution('''4 3 2\n2\n1\n3\n2\n1\n''') == 'No\\nNo\\nYes\\nNo'\nassert solution('''10 2 5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 2 6\") == \"No\"\nassert solution(\"5 1 6\") == \"No\"\nassert solution(\"5 2 6\") == \"No\"\nassert solution(\"5 2 6\") == \"No\"\nassert solution(\"5 1 6\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\") == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\".rstrip()\n\nassert solution(\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\") == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\".rstrip()\n\nassert solution(\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\") == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\".rstrip()\n\nassert solution(\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\") == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\".rstrip()\n\nassert solution(\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\") == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\".rstrip()"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 4') == 'No'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == 'Yes'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == 'No'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == 'No'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == 'No'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''7 8 2\n2\n1\n4\n7\n8\n2\n''') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nYes'\nassert solution('''1000000 100000 100000\n1000000\n''') == 'Yes\\n'\nassert solution('''1000000 100000 100000\n2\n''') == 'Yes\\n'\nassert solution('''1000000 100000 100000\n2\n3\n''') == 'Yes\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''10 1 0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nNo'\nassert solution('''1 1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''2 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''2 1\n1 1\n''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\nassert solution('''3 2\n0 0\n1 0\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES\\n001\\n010'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n01010101\\n0000'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n') == 'NO'\nassert solution('1 1\\n0 1\\n') == 'YES\\n1\\n0'\nassert solution('2 1\\n0\\n') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\nassert solution('''2 2\n0 0\n0 1\n1 1\n''') == 'YES'\nassert solution('''3 3\n0 0 0\n0 0 1\n1 1 1\n''') == 'NO'\nassert solution('''3 3\n0 0 0\n0 0 1\n1 1 0\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''1 1\n0 1\n0 0\n''') == 'YES'\nassert solution('''1 2\n0 0\n0 0\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''2 2\n0 1\n0 1''') == 'NO'\nassert solution('''3 4\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES\\n00\\n10'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n010\\n0000'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''2 2\n1 1\n0 1\n'''\n    ) == 'YES'\n\nassert solution(\n    '''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n'''\n    ) == 'NO'\n\nassert solution(\n    '''2 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n'''\n    ) == 'YES'\n\nassert solution(\n    '''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n'''\n    ) == 'NO'\n\nassert solution(\n    '''2 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n'''\n    ) == 'YES'"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'NO'\nassert solution('''3 4\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''2 3\n1 1 0\n0 0 1''') == 'NO'\nassert solution('''3 3\n1 1 0\n0 0 1\n1 0 1''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''2 2\n1 1\n1 1''') == 'YES'\nassert solution('''2 2\n0 1\n0 0''') == 'NO'\nassert solution('''2 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''2 3\n1 1 1\n0 0 1\n0 1 1''') == 'NO'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('121') == 'Yes'\nassert solution('73') == 'No'\nassert solution('421') == 'Yes'\nassert solution('38') == 'No'\nassert solution('736') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"369\") == \"No\"\nassert solution(\"123\") == \"Yes\"\nassert solution(\"777\") == \"Yes\"\nassert solution(\"899\") == \"Yes\"\nassert solution(\"0\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('7654321') == 'Yes'\nassert solution('1') == 'No'\nassert solution('1123456789') == 'No'\nassert solution('129876') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(''.join(['1', '3', '6', '7', '0', '2', '5', '8', '4', '9', '3', '2', '5', '1', '8', '3', '7', '0', '1', '4', '9', '2', '6', '5'])) == 'Yes'\nassert solution(''.join(['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '2', '5', '8', '1', '3', '6', '4', '7', '9', '0', '1', '3', '2', '6'])) == 'Yes'\nassert solution(''.join(['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '2', '3', '6', '4', '5', '7', '8', '9', '0', '1', '4', '2', '3', '5'])) == 'No'\nassert solution(''.join(['2', '2', '2', '3', '2', '2', '3', '1', '2', '2', '1', '3', '3', '2', '3', '1', '3', '3', '1', '2', '2', '3', '1', '2', '2', '3', '2', '1', '2', '2', '1', '1', '2', '3', '2', '2', '3', '1', '2', '2', '3', '2', '3', '3', '3', '2', '2', '1', '3', '3', '1', '2', '2', '2', '2', '2', '1', '1', '1', '1', '1', '3', '2', '3', '3', '2', '2', '1', '2', '3', '2', '1', '2', '3', '2', '3', '3', '3', '1', '3', '2', '2', '3', '3', '2', '1', '2', '3', '2', '2', '3', '1', '2', '3', '3', '3', '2', '2', '1', '2', '3', '2', '1', '2', '1', '2', '1', '1', '3', '2', '3', '2', '3', '1', '3', '1', '1', '2', '2', '1', '3', '1', '1', '3', '1', '2', '2', '2', '2', '3', '2', '1', '1', '2', '1', '2', '2', '1', '3', '1', '2', '1', '3', '2', '3', '2', '3', '2', '1', '3', '2', '2', '3', '2', '3', '2', '2', '1', '2', '2', '1', '1', '3', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '3', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"57\") == \"No\"\nassert solution(\"74\") == \"No\"\nassert solution(\"121\") == \"No\"\nassert solution(\"958\") == \"Yes\"\nassert solution(\"991\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7362660') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2736') == 'No'\nassert solution('12373') == 'Yes'\nassert solution('3345') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\nassert solution('11332') == \"No\"\nassert solution('112344') == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"121\") == \"No\"\nassert solution(\"373\") == \"Yes\"\nassert solution(\"436\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"122\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('9 2 1') == '4'\nassert solution('9 2 1') == '5'\nassert solution('9 2 1') == '6'\n\n\"\"\""
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == '5'\n\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('6 3 1\\n1 0 0 1 0 1') == '2'\nassert solution('7 4 2\\n1 0 0 1 0 1 1') == '2'\nassert solution('7 6 2\\n1 0 0 1 0 1 1') == '1'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n\ninput_data = \"\"\"5 2 1\n0 1 0 1 0\n\"\"\"\noutput_data = \"\"\"5\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"\nassert solution(\"7 2 1\\n1 0 0 1 0 1 1\") == \"4\"\nassert solution(\"8 2 1\\n1 0 0 1 0 1 1 1\") == \"5\"\nassert solution(\"9 2 1\\n1 0 0 1 0 1 1 1 1\") == \"6\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('1\\n0\\n0') == '0'\nassert solution('1\\n0\\n0\\n0') == '0'\nassert solution('2\\n1\\n0') == '1'\nassert solution('2\\n1\\n1') == '2'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n8-7+6-5+4-3+2-1-0\n''') == '4'\n\nassert solution(\n'''\n2+2\n''') == '-46'\nassert solution(\n'''\n112-37\n''') == '375'\n\nassert solution(\n'''\n-8\n''') == '-128'\n\nassert solution(\n'''\n-100\n''') == '-1'"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"112-37\") == 375\nassert solution(\"2+2\") == -46\nprint(\"Tests passed successfully.\")"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\"\"\""
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nassert solution('0+0') == '0'\nassert solution('8+7+6-5+4-3+2-1-0') == '4'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\"\"\""
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n4 1\\n1 3\\n3 2\\n2 3\\n3 4\\n4 2\\n2 4\\n4 1\\n1 4\\n3 1\\n4 3\\n4 2\\n1 4\\n3 1\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4\\n4 1\\n1 3\\n4 2\\n3 4\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n4 3\\n4 2\\n1 4\\n3 1\\n') == 'NO'\nassert solution('100 3\\n100 1\\n100 2\\n100 3\\n100 1\\n100 2\\n100 3\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\n100 3\\n100 3\\n100 1\\n100 2\\"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('10 4') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n''') == \"YES\"\nassert solution('''10 4\n''') == \"YES\"\nassert solution('''13 4\n''') == \"NO\"\nassert solution('''13 5\n''') == \"NO\"\nassert solution('''14 5\n''') == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n4 3\\n4 1\\n1 3\\n3 2\\n2 3\\n3 4\\n4 2\\n4 3\\n4 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n1 3\\n1 2\\n3 2\\n2 1\\n2 3\\n3 4') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n4 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n1 3\\n1 2\\n3 2\\n2 1\\n2 3\\n3 4'\nassert solution('2 3\\n4 3\\n1 1\\n1 3\\n3 2\\n2 3\\n3 4\\n4 2\\n4 3\\n4 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n3 1\\n1 4\\n1 3\\n1 2\\n3 2\\n2 1\\n2 3\\n3 4') == 'NO'\nassert solution('7 4\\n1 1\\n1 3\\n3 1\\n1 3\\n3 1\\n3 1\\n4 1\\n4 1\\n1 4\\n4 1\\n4 1\\n4 1\\n1 4\\n4 1\\n1 4\\n1 4\\n1 3\\n1 2\\n3 2\\n2 1\\n2 3\\n3 4\\n4 2') == 'YES\\n2 1\\n1 3\\n3 1\\n1 3\\n3 1\\n1 3\\n3 1\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\nassert solution('''13 4\n''') == 'NO'\nassert solution('''15 4\n''') == 'NO'\nassert solution('''9 3\n''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 1\\n4 1\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 4\\n4 3\\n4 2\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"5 3\\n1 2\\n2 4\\n3 4\\n2 1\\n4 3\\n1 3\\n2 4\\n4 1\") == \"YES\\n2 1\\n1 3\\n3 2\\n2 4\\n4 3\\n4 1\\n3 2\\n2 4\\n1 4\"\nassert solution(\"1 0\\n1 0\\n1 0\\n1 0\\n1 0\") == \"NO\"\nassert solution(\"2 1\\n2 1\\n1 1\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"1 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"-1\"\nassert solution(\"4 3 1\") == \"100\"\nassert solution(\"10 30 30 70 10 10\") == \"30\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''5 3 4\n1 1 1 1 1''') == '1'\nassert solution('''7 4 4\n1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 4\") == \"0\"\nassert solution(\"3 1 4 3\") == \"1\"\nassert solution(\"6 1 5\") == \"-1\"\nassert solution(\"4 3 1\") == \"100\"\nassert solution(\"3 1 2\") == \"2\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\n\nassert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"-1\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"18\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"\nassert solution(\"10 4 2\\n10 15 40 15 40 10\") == \"80\"\nassert solution(\"9 3 1\\n1 1 1 1 1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(\"1 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"15\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1\\n0011') == '15'\nassert solution('4 1\\n0101') == '4'\nassert solution('6 1\\n000000') == '21'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('1 1\\n0011') == '1'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"5 2\") == \"3\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"0000000\") == \"0\"\nassert solution(\"0000100\") == \"21\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"-3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 4711 4712 4713 4714 4715 4716 4717 4718 4719 4720 4721 4722 4723 4724 4725 4726 4727 4728 4729 4730 4731 4732 4733 4734 4735 4736 4737 4738 4739 4740 4741 4742 4743 4744 4745 4746 4747574747847479479479047914792479347944795479647974798479948047910147921247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647971747981847991948479904791011247931347941447951547961647"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1\\n001') == '1'\nassert solution('3 1\\n001') == '2'\nassert solution('3 1\\n001') == '1'\nassert solution('3 1\\n0011') == '4'\nassert solution('3 1\\n000000') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('4 1\\n0011\\n') == '4'\nassert solution('12 6\\n000010000100\\n') == '15'\nassert solution('12 0\\n0000000\\n') == '12'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == '3'\nassert solution('3 1') == '4'\nassert solution('3 1') == '4'\nassert solution('6 1') == '15'\nassert solution('0') == '4'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nSolution:\n\nSince we can only change the character one time, we know that we have to change every character in string S one time.\nIf we replace every character in S with the one that is least common among the characters in S, we will have string T,\nand vice versa.\nIf we find the two strings to be equal, then they are the same.\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"No\"\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('banana') == 'No'\nassert solution('apple') == 'Yes'\nassert solution('aaz') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"azzel\", \"apple\") == \"Yes\"\nassert solution(\"azazel\", \"apple\") == \"Yes\"\nassert solution(\"azzel\", \"apple\") == \"Yes\"\nassert solution(\"azazel\", \"apple\") == \"Yes\"\n\nassert solution(\"zzx\", \"xxz\") == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"azzel\", \"apple\") == \"Yes\"\nassert solution(\"abcdef\", \"abcde\") == \"Yes\"\nassert solution(\"aazaz\", \"azaz\") == \"Yes\"\nassert solution(\"abcdef\", \"abcde\") == \"No\"\nassert solution(\"a\", \"a\") == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('lolll') == 'Yes'\nassert solution('lolllll') == 'Yes'\nassert solution('aaa') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"YES\\n7\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"NO\\n10\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"NO\\n9\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"YES\\n6\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"YES\\n5\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4\\n2\\n2\\n1\") == \"Yes\\n3\"\nassert solution(\"10\\n6\\n1\\n1\\n2\\n2\\n1\\n1\") == \"No\\n0\"\nassert solution(\"10\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"No\\n0\"\nassert solution(\"10\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 1\\n3\\n3\\n3\\n3') == '10'\nassert solution('4 3 1\\n2\\n3\\n3\\n4') == '4'\nassert solution('4 3 1\\n1\\n2\\n3\\n4') == '0'\nassert solution('2 2 2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2 2 2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5,2,3,1,1\\n') == '0\\n'\nassert solution('5,2,3,1,1\\n') == '2\\n'\nassert solution('5,2,3,1,1\\n') == '10\\n'\nassert solution('5,2,3,1,1\\n') == '2\\n'\nassert solution('5,2,3,1,1\\n') == '1\\n'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"10 1\") == \"7\"\nassert solution(\"1 100\") == \"99\"\nassert solution(\"10 1\") == \"7\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5\\n2 2 1\") == \"YES\\n2\"\nassert solution(\"1 3 5\\n2 2 1\") == \"NO\"\nassert solution(\"1 1\\n1\\n\") == \"YES\\n0\"\nassert solution(\"1 3 5\\n1 3 1\\n1\\n\") == \"YES\\n2\"\nassert solution(\"2 3 4\\n3 5 1\\n2\\n\") == \"NO\\n2\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1\\n2\\n5\\n3\") == \"1\\n2\\n5\"\nassert solution(\"2\\n3\\n1\\n2\\n5\\n3\") == \"0\\n5\"\nassert solution(\"2\\n3\\n1\\n2\\n5\\n3\") == \"5\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n3\\n1\\n2\\n5\\n3\") == \"5\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 3\n2 2 1\n3 3 2\n\"\"\") == \"10\"\nassert solution(\"\"\"1 10\n2 2 1\n3 3 2\n\"\"\") == \"14\"\nassert solution(\"\"\"100 100\n1 1 100\n2 2 1\n3 3 2\n\"\"\") == \"0\"\n\"\"\"\n\nOutput each answer on a separate line.\n\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a1 0 b1 2 c1 1\") == \"Yes\\n1\"\nassert solution(\"a0 1 b1 2 c1 1\") == \"No\\n4\"\nassert solution(\"a0 0 b0 2 c1 1\") == \"No\\n4\"\nassert solution(\"a0 0 b0 2 c0 1\") == \"Yes\\n1\"\nassert solution(\"a0 0 b0 2 c0 3\") == \"No\\n4\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\n\nassert solution('''2 700\n3 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800''') == '3'\n\nassert solution('''2 700\n3 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500\n5 800\n2 500"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"10 5\") == \"2\"\n\"\"\""
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 100\") == \"2\"\nassert solution(\"100 4\") == \"4\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 100\") == \"4\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 3') == '1'\nassert solution('1 1') == '0'\nassert solution('1 100') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5\\n1 4\\n2 2\\n3 4\\n4 5\\n3') == '4'\nassert solution('10 5\\n1 10\\n2 2\\n3 4\\n4 5\\n3') == '4'\nassert solution('15 5\\n1 10\\n2 2\\n3 4\\n4 5\\n3') == '6'\nassert solution('14 5\\n1 10\\n2 2\\n3 4\\n4 5\\n3') == '5'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '0'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 700\\n3 500\") == \"3\"\nassert solution(\"1 100\\n1 100\") == \"0\"\nassert solution(\"2 400\\n1 100\\n2 100\\n1 100\\n1 100\\n1 100\\n1 100\") == \"3\"\nassert solution(\"1 100\\n1 100\\n1 100\") == \"0\"\nassert solution(\"2 300\\n1 100\\n1 100\\n1 100\") == \"2\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''1 100\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5''') == '10'\nassert solution('''1 100\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6''') == '6'\nassert solution('''1 1000\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 6\n6 7''') == '5'\nassert solution('''1 1000\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 6\n6 7\n7 7\n7 8''') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1 1\") == \"3\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '4'\n\nassert solution('''2 700\n3 500\n5 800\n''') == '3'\n\nassert solution('''2 700\n3 500\n5 800\n''') == '2'\n\nassert solution('''2 700\n3 500\n5 800\n''') == '1'\n\nassert solution('''3 800\n2 200\n3 300\n2 500\n5 800\n''') == '4'"
    }
]