[
    {
        "number": 4000,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"1 8 6\"\nassert solution(stdin) == \"1 8 6\"\nassert solution(stdin) == \"1 8 6\"\nassert solution(stdin) == \"1 8 6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4001,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20 8\"\nassert solution(stdin) == \"20 8\"\nassert solution(stdin) == \"20 8\"\nassert solution(stdin) == \"20 8\"\nassert solution(stdin) == \"20 8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4002,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 24\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"L\"\nassert solution(stdin) == \"R\"\nassert solution(stdin) == \"L\"\nassert solution(stdin) == \"R\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4004,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4005,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4006,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 20\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4007,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 3 1 2 4\"\nassert solution(stdin) == \"7 3 2 1 4\"\nassert solution(stdin) == \"7 4 2 3 6 5 1\"\nassert solution(stdin) == \"7 4 2 3 6 5 1\"\nassert solution(stdin) == \"7 4 2 3 6 5 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4008,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4009,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4010,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '99999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4012,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 3\"\nassert solution(stdin) == \"1 1 3\"\nassert solution(stdin) == \"1 1 3\"\nassert solution(stdin) == \"1 1 3\"\nassert solution(stdin) == \"1 1 3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4013,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4014,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"3 2\") == \"3 2\"\nassert solution(\"3 2 3\") == \"3 2 3\"\nassert solution(\"3 2 4\") == \"3 2 4\"\nassert solution(\"3 2 5\") == \"3 2 5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4015,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4016,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ababababa\"\nassert solution(stdin) == \"ababababa\"\nassert solution(stdin) == \"ababababa\"\nassert solution(stdin) == \"ababababa\"\nassert solution(stdin) == \"ababababa\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4017,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 233\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= k <= 10^5\n\n1 <= stdin.length <= 10^5\nstdin.length <= k\n\n1 <= s.length <= 10^5\ns.length <= k\n\ns contains only lowercase Latin letters.\n\n\"\"\"\n\nimport math\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4019,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4020,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10:30\"\nassert solution(stdin) == \"11:11\"\nassert solution(stdin) == \"01:02\"\nassert solution(stdin) == \"02:02\"\nassert solution(stdin) == \"02:02\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4021,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(27) == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4022,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4023,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4024,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 233\n\n-----Constraints-----\n\n1 <= n <= 100\n1 <= k <= 100\n\n1 <= stdin.length <= 10^5\nstdin.length <= k\n\n1 <= s.length <= 10^5\ns.length <= k\n\ns contains only lowercase Latin letters.\n\n\"\"\"\n\nimport math\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4025,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4026,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4027,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4028,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4029,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4030,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4031,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5, [\"a\", \"ab\", \"abab\", \"ba\", \"aba\", \"abab\"]) == \"YES\"\nassert solution(5, [\"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\"]) == \"YES\"\nassert solution(5, [\"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\"]) == \"NO\"\nassert solution(5, [\"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\"]) == \"NO\"\nassert solution(5, [\"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\", \"qwerty\"]) == \"NO\"\n",
        "num_ids_2": 67,
        "num_ids_4": 139
    },
    {
        "number": 4032,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n-----Constraints-----\n\n1 <= n <= 100\n1 <= k <= 100\n\n1 <= a_i <= 100\n\n-----Time Limit: 1 sec (py3)-----\n\nSample Input 1:\n\n8 4\n4 2 3 1 5 1 6 4\n\nSample Output 1:\n\n5\n\nSample Input 2:\n\n5 100\n12 34 55 43 21\n\nSample Output 2:\n\n5\n\nSample Input 3:\n\n5 100\n12 34 55 43 21\n\nSample Output 3:\n\n0\n\nSample Input 4:\n\n5 100\n12 34 55 43 21\n\nSample Output 4:\n\n0\n\nSample Input 5:\n\n5 100\n12 34 55 43 21\n\nSample Output 5:\n\n0\n\n-----Note-----\n\nIn the first example, Mishka can solve problems in the following order: $[4, 2, 3, 1, 5, 1, 6, 4] \\rightarrow [2, 3, 1, 5, 1, 6] \\rightarrow [2, 3, 1, 5, 1, 6] \\rightarrow [3, 1, 5, 1, 6] \\rightarrow [1, 5, 1, 6] \\rightarrow [5, 1, 6]$, so the number of solved problems will be equal to $5$.\n\nIn the second example, Mishka can't solve any problem because the difficulties of problems from both ends are greater than $k$.\n\nIn the third example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the fourth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the fifth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the sixth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the seventh example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the eighth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the ninth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the tenth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the eleventh example, Mishka's solving skill is so amazing that he can solve all the problems.\n\nIn the twelfth example, Mishka's solving skill is so amazing that he can solve all the problems.\n\n-----Time Limit: 1 sec (py3)-----\n\nPython 3.9.3 (default, May 19 2020, 06:50:24) [MSC v.1916 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n= RESTART: C:/Users/Mishka/Desktop/Python/Mishka/solution.py =\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5\n\n5",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4033,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"14\"\nassert solution(stdin) == \"3218\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4034,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 25\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4036,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4037,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4038,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4040,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4041,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4042,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 2\"\nassert solution(stdin) == \"10 3\"\nassert solution(stdin) == \"9 9\"\nassert solution(stdin) == \"10 3\"\nassert solution(stdin) == \"9 9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4044,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01010100\"\nassert solution(stdin) == \"101100\"\nassert solution(stdin) == \"110100\"\nassert solution(stdin) == \"001101\"\nassert solution(stdin) == \"010011\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4045,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4046,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4047,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4048,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 5\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4049,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 15\"\nassert solution(stdin) == \"0 15\"\nassert solution(stdin) == \"0 15\"\nassert solution(stdin) == \"0 15\"\nassert solution(stdin) == \"0 15\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4050,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4051,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3, [1, 2, 3]) == \"NO\"\nassert solution(3, [1, 2, 3, 4]) == \"YES\"\nassert solution(3, [1, 2, 3, 4, 5]) == \"NO\"\nassert solution(3, [1, 2, 3, 4, 5, 6]) == \"YES\"\nassert solution(3, [1, 2, 3, 4, 5, 6, 7]) == \"NO\"\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4052,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4053,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SPPSPSPS\"\nassert solution(stdin) == \"PS\"\nassert solution(stdin) == \"PS\"\nassert solution(stdin) == \"PS\"\nassert solution(stdin) == \"PS\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4054,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4055,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4056,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4057,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4058,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4059,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4060,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4062,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Sample Input-----\n6\n9 1 4 4 6 7\n\n-----Sample Output-----\n2\n\nIf we choose K=5 or 6, Problem 1, 5, and 6 will be for ARCs, Problem 2, 3, and 4 will be for ABCs, and the objective is achieved.\nThus, the answer is 2.\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4064,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4065,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4066,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4067,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"021\"\nassert solution(stdin) == \"001122\"\nassert solution(stdin) == \"211200\"\nassert solution(stdin) == \"120120\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4068,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4069,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4070,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4071,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"27\"\nassert solution(\"4\") == \"27\"\nassert solution(\"5\") == \"27\"\nassert solution(\"6\") == \"27\"\nassert solution(\"7\") == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\nassert solution(0) == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4073,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4074,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"999999733\"\nassert solution(stdin) == \"999999733\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4075,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4076,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5.00000000000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4077,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"97\"\n\n-----Constraints-----\n1 <= stdin.length <= 10^5\n1 <= stdin[i] <= 10^5\n1 <= stdin[i] <= 10^5\n\n-----Time Limit-----\n1 second\n\n-----Space Limit-----\n1 megabyte\n\n-----Elements-----\n1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= m <= 10^5\n\n-----Sample Input 1-----\n\n3\n1 4 5 60 4\n\nSample Output 1:\n\n8\n\n-----Sample Input 2-----\n\n3\n1 4 5 60 4\n\nSample Output 2:\n\n6\n\n-----Sample Input 3-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 3:\n\n97\n\n-----Sample Input 4-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 4:\n\n97\n\n-----Sample Input 5-----\n\n3\n1 4 5 60 4\n\nSample Output 5:\n\n97\n\n-----Sample Input 6-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 6:\n\n97\n\n-----Sample Input 7-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 7:\n\n97\n\n-----Sample Input 8-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 8:\n\n97\n\n-----Sample Input 9-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 9:\n\n97\n\n-----Sample Input 10-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 10:\n\n97\n\n-----Sample Input 11-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 11:\n\n97\n\n-----Sample Input 12-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 12:\n\n97\n\n-----Sample Input 13-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 13:\n\n97\n\n-----Sample Input 14-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 14:\n\n97\n\n-----Sample Input 15-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 15:\n\n97\n\n-----Sample Input 16-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 16:\n\n97\n\n-----Sample Input 17-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 17:\n\n97\n\n-----Sample Input 18-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 18:\n\n97\n\n-----Sample Input 19-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 19:\n\n97\n\n-----Sample Input 20-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 20:\n\n97\n\n-----Sample Input 21-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 21:\n\n97\n\n-----Sample Input 22-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 22:\n\n97\n\n-----Sample Input 23-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 23:\n\n97\n\n-----Sample Input 24-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 24:\n\n97\n\n-----Sample Input 25-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 25:\n\n97\n\n-----Sample Input 26-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 26:\n\n97\n\n-----Sample Input 27-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 27:\n\n97\n\n-----Sample Input 28-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 28:\n\n97\n\n-----Sample Input 29-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 29:\n\n97\n\n-----Sample Input 30-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 30:\n\n97\n\n-----Sample Input 31-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 31:\n\n97\n\n-----Sample Input 32-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 32:\n\n97\n\n-----Sample Input 33-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 33:\n\n97\n\n-----Sample Input 34-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 34:\n\n97\n\n-----Sample Input 35-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 35:\n\n97\n\n-----Sample Input 36-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 36:\n\n97\n\n-----Sample Input 37-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 37:\n\n97\n\n-----Sample Input 38-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 38:\n\n97\n\n-----Sample Input 39-----\n\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\nSample Output 39:\n\n97\n\n-----Sample Input 40-----",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4078,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4079,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4080,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4081,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"L\"\nassert solution(stdin) == \"L\"\nassert solution(stdin) == \"L\"\nassert solution(stdin) == \"L\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4082,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4083,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4084,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 48\n\n-----Constraints-----\n1 <= t <= 25\n1 <= n <= 10^6\n1 <= d_i <= 10^6\n\n-----Time complexity-----\nO(n)\n\nO(n)\n\nO(n)\n\n-----Space complexity-----\nO(n)\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4086,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5 6\"\nassert solution(stdin) == \"1 2 4\"\nassert solution(stdin) == \"1 2 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4087,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '435'\nassert solution(stdin) == '44'\nassert solution(stdin) == '237'\nassert solution(stdin) == '42'\nassert solution(stdin) == '99'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4088,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"aac\", \"solution failed\"\nassert solution(stdin) == \"a\", \"solution failed\"\nassert solution(stdin) == \"a\", \"solution failed\"\nassert solution(stdin) == \"a\", \"solution failed\"\nassert solution(stdin) == \"a\", \"solution failed\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4089,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:\n - the dogs numbered 1,2,\\cdots,26 were respectively given the names a, b,..., z;\n - the dogs numbered 27,28,29,\\cdots,701,702  were respectively given the names aaa, aab, aac,..., zy, zz;\n - the dogs numbered 703,704,705,\\cdots,18277,18278  were respectively given the names aaaa, aaab,...;\n - the dogs numbered 18279,18280,18281,\\cdots,475253,475254  were respectively given the names aaaaa, aaaab,...;\n - the dogs numbered 475255,475256,\\cdots  were respectively given the names aaaaa, aaaab,...;\n - and so on.\nTo sum it up, the dogs numbered 1, 2, \\cdots were respectively given the following names:\na, b,..., z, aa, ab,..., az, ba, bb,..., bz,..., za, zb,..., zz, aaa, aab,..., aaz, aba, abb,..., abz,..., zzz, aaaa,...\n\n\"\"\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4090,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\nassert solution(stdin) == 13\nassert solution(stdin) == 11\nassert solution(stdin) == 12\nassert solution(stdin) == 12\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4091,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4000\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4092,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n\n-----Constraints-----\n\n1 <= n <= 10^4\n-10^9 <= a_i <= 10^9\n\n-----Time Limit-----\n1 second\n\n-----Space Limit-----\n1 megabyte\n\n-----Alternatives-----\n\n1. Use a stack to store the subsegments of the array.\n2. Use a queue to store the subsegments of the array.\n3. Use a stack to store the subsegments of the array.\n4. Use a queue to store the subsegments of the array.\n5. Use a stack to store the subsegments of the array.\n6. Use a queue to store the subsegments of the array.\n7. Use a stack to store the subsegments of the array.\n8. Use a queue to store the subsegments of the array.\n9. Use a stack to store the subsegments of the array.\n10. Use a queue to store the subsegments of the array.\n11. Use a stack to store the subsegments of the array.\n12. Use a queue to store the subsegments of the array.\n13. Use a stack to store the subsegments of the array.\n14. Use a queue to store the subsegments of the array.\n15. Use a stack to store the subsegments of the array.\n16. Use a queue to store the subsegments of the array.\n\n-----Success-----\n0\n\n-----Failure-----\n0\n\n-----Time complexity-----\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)\n\nO(n)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4093,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"1000000000\"\nassert solution(stdin) == \"2000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4094,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4095,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4096,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4097,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4098,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4099,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 7\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4100,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4101,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4102,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"1234567890\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4103,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4104,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"375\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"46\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4105,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4106,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4107,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4108,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4109,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4110,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4111,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4112,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 2 6\"\nassert solution(input()) == \"2 2 6\"\nassert solution(input()) == \"2 2 6\"\nassert solution(input()) == \"2 2 6\"\nassert solution(input()) == \"2 2 6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n\n-----Sample Input-----\nredcoder\n\n-----Sample Output-----\n2\n\nFor example, we can change the fourth character to o and get a palindrome redooder.\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4116,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(5) == \"No\"\nassert solution(1) == \"No\"\nassert solution(2) == \"No\"\nassert solution(3) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4118,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 10\nassert solution(input()) == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4119,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4120,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4121,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4122,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4123,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ZZ\"\nassert solution(stdin) == \"ZZZAA\"\nassert solution(stdin) == \"AA\"\nassert solution(stdin) == \"AA\"\nassert solution(stdin) == \"AA\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4126,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4127,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 217\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4128,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"999999999\"\nassert solution(stdin) == \"381621773\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4129,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4130,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4131,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"000001000002\"\nassert solution(input()) == \"000002000001\"\nassert solution(input()) == \"000001000001\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4132,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4133,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__. \") == \"false\"\nassert solution(\"?(__-_+_/_____):-__<___,_____<__. \") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. \") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. \") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. \") == \"false\"\n",
        "num_ids_2": 52,
        "num_ids_4": 148
    },
    {
        "number": 4134,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4135,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"thisisexampletwo\"\nassert solution(stdin) == \"z\"\nassert solution(stdin) == \"plmaetwoxesisiht\"\nassert solution(stdin) == \"z\"\nassert solution(stdin) == \"rocesfedoc\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4136,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"873\"\nassert solution(stdin) == \"19\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"381\"\nassert solution(stdin) == \"4902\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4137,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4138,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4139,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 1\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4141,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"APPROVED\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4142,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4143,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 23\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4146,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4147,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"23\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4148,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"CDEZAB\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4149,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4 2\"\nassert solution(stdin) == \"3 4 2\"\nassert solution(stdin) == \"3 4 2\"\nassert solution(stdin) == \"3 4 2\"\nassert solution(stdin) == \"3 4 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4150,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"11111\"\nassert solution(stdin) == \"22111\"\nassert solution(stdin) == \"21112\"\nassert solution(stdin) == \"1121122\"\nassert solution(stdin) == \"221122\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4151,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4152,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4157,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9 3 6 12 4 8\"\nassert solution(stdin) == \"12 4 8 6 3 9\"\nassert solution(stdin) == \"3 6 12 4 8 9\"\nassert solution(stdin) == \"9 3 6 12 4 8\"\nassert solution(stdin) == \"12 4 8 6 3 9\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4158,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4159,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"0 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4160,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4161,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\n-----Sample Input-----\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\n-----Sample Output-----\nNo\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4164,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4166,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"702\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4167,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4168,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1011\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4171,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4172,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"1000\"\nassert solution(stdin) == \"42000000000000\"\nassert solution(stdin) == \"42\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4174,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4177,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(s) == \"xxxxxxx\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4178,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\nassert solution(input) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4179,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 100\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4181,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"No War\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4183,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4185,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4186,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"99\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4187,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4188,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4189,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4190,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 0 0 2\"\nassert solution(stdin) == \"0 0 0 2\"\nassert solution(stdin) == \"0 0 0 1\"\nassert solution(stdin) == \"0 0 0 0\"\nassert solution(stdin) == \"0 0 0 0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4191,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4192,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4194,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4195,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 5\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4196,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4197,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4198,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4199,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4201,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"WA\"\nassert solution(input) == \"AC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4204,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4205,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4206,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"33\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1000000000000000000000000000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4207,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4208,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4209,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4211,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4212,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 110\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4213,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4214,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.2761423749\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4215,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4218,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"0.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4220,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"nikoand...\", \"solution() failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4221,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"apples\") == \"apples\"\nassert solution(\"apples\") == \"apples\"\nassert solution(\"apples\") == \"apples\"\nassert solution(\"apples\") == \"apples\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4222,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 5\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4225,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4226,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\nassert solution(input) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4227,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Sample Input-----\n3 3\n1 2\n1 3\n2 3\n\n-----Sample Output-----\n2\n\nThe given graph is shown in the following figure:\nThe following two paths satisfy the condition:\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"18\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 60\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4230,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4231,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4232,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"-1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4233,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4 1\"\nassert solution(stdin) == \"3 5 2\"\nassert solution(stdin) == \"3 5 1\"\nassert solution(stdin) == \"3 4 1\"\nassert solution(stdin) == \"3 5 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4234,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4235,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4236,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4237,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123456789) == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4239,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n2\n\nBy withdrawing 1 yen, 9 yen, 36(=6^2) yen and 81(=9^2) yen, we can withdraw 5 yen in two operations.\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4240,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4241,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4242,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2020\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4244,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4246,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4247,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.410'\nassert solution(stdin) == '5.620'\nassert solution(stdin) == '5.480'\nassert solution(stdin) == '6.040'\nassert solution(stdin) == '6.720'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4249,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4250,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 1217,
        "num_ids_4": 1217
    },
    {
        "number": 4251,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4253,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"48\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4254,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"unsafe\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4255,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4257,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4258,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"OK\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4260,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.6666666667\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4261,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"TCODER\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4264,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4266,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5 6 7 8 9\"\nassert solution(input()) == \"5 6 7 8 9\"\nassert solution(input()) == \"5 6 7 8 9\"\nassert solution(input()) == \"5 6 7 8 9\"\nassert solution(input()) == \"5 6 7 8 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4267,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4269,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3776) == \"Bad\"\nassert solution(3776) == \"Good\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4270,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == '3.5'\nassert solution(input) == '3.49999'\nassert solution(input) == '3.5'\nassert solution(input) == '3.49999'\nassert solution(input) == '3.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4271,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"14\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Sample Input-----\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n\n-----Sample Output-----\n2\n\nWe can choose three people with the following names:\n - MASHIKE, RUMOI, OBIRA\n - MASHIKE, RUMOI, HOROKANAI\nThus, we have two ways.\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4274,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4275,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(sippuu) == \"Yes\"\nassert solution(sippuu) == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4276,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4277,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4279,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4280,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 22,
        "num_ids_4": 1290
    },
    {
        "number": 4281,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 8\"\nassert solution(stdin) == \"3 6\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4282,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 2 4 1 5\"\nassert solution(stdin) == \"3 1 2\"\nassert solution(stdin) == \"3 1 2\"\nassert solution(stdin) == \"3 1 2\"\nassert solution(stdin) == \"3 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4283,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 1:\n\n6\n1 10 17 12 15 2\n\nSample Output 1:\n\n3\n\nSample Input 2:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 2:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 3:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 3:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 4:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 4:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 5:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 5:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 6:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 6:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 7:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 7:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 8:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 8:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 9:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 9:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 10:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 10:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 11:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 11:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 12:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 12:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 13:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 13:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 14:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 14:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 15:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 15:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 16:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 16:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 17:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 17:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 18:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 18:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 19:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 19:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 20:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 20:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 21:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 21:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 22:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 22:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 23:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 23:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 24:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 24:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 25:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 25:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 26:\n\n6\n1 1000 10000 10 100 1000000000\n\nSample Output 26:\n\n1\n\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit: 1 minute -----\n\nSample Input 27:\n\n6\n1 1000 10000 10",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4284,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\nassert solution(stdin) == '5'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 24",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4286,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"16\"\n\nassert solution(stdin) == \"18\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4287,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"\n\nassert solution(stdin) == \"45\"\n\nassert solution(stdin) == \"-\"\n\n-----Constraints-----\n1 <= stdin.length <= 10^5\n1 <= a, n <= 10^5\n1 <= l_i, r_i <= a\n0 <= x_i, p_i <= 10^5\n\n-----Time Limit-----\nO(n)\n\nO(n)\n\nO(n)\n\n-----Space Limit-----\nO(n)\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4288,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4292,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 210\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4293,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4294,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3, 5) == 0\nassert solution(3, 6) == 10\nassert solution(3, 7) == 0\nassert solution(3, 8) == 10\nassert solution(3, 9) == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4295,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4296,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"win\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4299,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4301,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4302,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 40\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4304,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4305,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4306,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 50\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4307,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(105) == 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4308,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"111\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4311,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4313,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4314,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"###\"\nassert solution(input()) == \"###\"\nassert solution(input()) == \"###\"\nassert solution(input()) == \"###\"\nassert solution(input()) == \"###\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4315,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6.28318530717958623200\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4316,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4317,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"16\"\nassert solution(input()) == \"39\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4318,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4319,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4320,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4321,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"50\"\n\n-----Constraints-----\n1 <= stdin.length <= 10^4\n1 <= stdin[i] <= 10^9\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4322,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4323,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4324,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"tleelte\"\nassert solution(stdin) == \"qwerty\"\nassert solution(stdin) == \"vvvvvv\"\nassert solution(stdin) == \"abcde\"\nassert solution(stdin) == \"leel\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4325,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 12\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4326,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4327,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"16\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\nassert solution(input) == \"IMPOSSIBLE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4331,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(1234) == \"No\"\nassert solution(12345) == \"No\"\nassert solution(12345678) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(1234) == \"No\"\nassert solution(12345) == \"No\"\nassert solution(12345678) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4333,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 1 -1 0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4334,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4335,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4336,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3.000000\"\nassert solution(input) == \"0.000000\"\nassert solution(input) == \"0.000000\"\nassert solution(input) == \"0.000000\"\nassert solution(input) == \"0.000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4337,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Four\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4339,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 7\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4340,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 3 5 9\"\nassert solution(stdin) == \"1 1 3 5 9\"\nassert solution(stdin) == \"1 1 3 5 9\"\nassert solution(stdin) == \"1 1 3 5 9\"\nassert solution(stdin) == \"1 1 3 5 9\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4341,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\n-----Constraints-----\n1 <= stdin.length <= 10^5\n1 <= n, m <= 10^5\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v_i, u_i <= n\n1 <= v",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4342,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4343,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"bc\"\nassert solution(stdin) == \"qoztvz\"\nassert solution(stdin) == \"alvuw\"\nassert solution(stdin) == \"nijfvj\"\nassert solution(stdin) == \"tvqhwp\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4344,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4345,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4346,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1134\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4347,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n",
        "num_ids_2": 16,
        "num_ids_4": 39
    },
    {
        "number": 4348,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"cccccc\"\nassert solution(stdin) == \"cccccc\"\nassert solution(stdin) == \"cccccc\"\nassert solution(stdin) == \"cccccc\"\nassert solution(stdin) == \"cccccc\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4349,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4350,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4 1\"\nassert solution(stdin) == \"3 5 2\"\nassert solution(stdin) == \"3 5 1\"\nassert solution(stdin) == \"3 4 1\"\nassert solution(stdin) == \"3 5 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4351,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(3) == \"No\"\nassert solution(2) == \"No\"\nassert solution(1) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4352,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Alice\"\nassert solution(stdin) == \"Bob\"\nassert solution(stdin) == \"Draw\"\nassert solution(stdin) == \"Alice\"\nassert solution(stdin) == \"Bob\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4353,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"happy\",\"newyear\",\"enjoy\"]) == \"happy newyear enjoy\"\nassert solution([\"happy\",\"newyear\",\"enjoy\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\",\"\",\",\",\",\"\",\n
        "num_ids_2": 1588,
        "num_ids_4": 1588
    },
    {
        "number": 4354,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(2) == 14\nassert solution(3) == 14\nassert solution(4) == 14\nassert solution(5) == 14\nassert solution(6) == 14\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4356,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4357,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"53\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4358,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"15950\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4359,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"215\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4360,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '7.5'\nassert solution(stdin) == '7.49999'\nassert solution(stdin) == '7.50001'\nassert solution(stdin) == '7.5'\nassert solution(stdin) == '7'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4361,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"A\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\"\n) == \"6\"\nassert solution(\n    \"2 2\"\n) == \"6\"\nassert solution(\n    \"2 2\"\n) == \"6\"\nassert solution(\n    \"2 2\"\n) == \"6\"\nassert solution(\n    \"2 2\"\n) == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4364,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YYMM\"\nassert solution(stdin) == \"MMYY\"\nassert solution(stdin) == \"AMBIGUOUS\"\nassert solution(stdin) == \"NA\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4365,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4366,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3719\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4368,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4370,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yay!\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4371,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 34\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4372,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2999999987\"\nassert solution(stdin) == \"12 13\"\nassert solution(stdin) == \"5 3\"\nassert solution(stdin) == \"1 7\"\nassert solution(stdin) == \"2999999987\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4373,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4374,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 11\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4376,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 9\"\nassert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"2 13\"\nassert solution(stdin) == \"3 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4377,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1 3\"\nassert solution(stdin) == \"20 20 20\"\nassert solution(stdin) == \"1 100 100\"\nassert solution(stdin) == \"1 100 100\"\nassert solution(stdin) == \"1 100 100\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4378,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4379,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4381,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"110\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 8\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4383,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'ABC'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4385,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yay!\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4386,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3200) == \"pink\"\nassert solution(3200) == \"red\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4387,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"ABC\"\nassert solution(input) == \"ARC\"\nassert solution(input) == \"AGC\"\nassert solution(input) == \"ARC\"\nassert solution(input) == \"AGC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"9001\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"abac\"\nassert solution(stdin) == \"ac\"\nassert solution(stdin) == \"bcdaf\"\nassert solution(stdin) == \"abac\"\nassert solution(stdin) == \"ac\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4390,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4391,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n-----Constraints-----\n1 <= stdin.length <= 10^5\n1 <= stdin[i] <= 5000\n1 <= k <= stdin.length\n1 <= a_1, a_2,..., a_n <= stdin.length\n\n-----Time Limit-----\nO(n)\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4392,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4393,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"z\"\nassert solution(stdin) == \"oops\"\nassert solution(stdin) == \"baabbb\"\nassert solution(stdin) == \"bab\"\nassert solution(stdin) == \"baa\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4394,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4395,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"RGBRGBRG\"\nassert solution(stdin) == \"GRBGRBG\"\nassert solution(stdin) == \"BRGBRGB\"\nassert solution(stdin) == \"RGBG\"\nassert solution(stdin
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4396,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"48000.0\"\nassert solution(stdin) == \"48000.1\"\nassert solution(stdin) == \"48000.2\"\nassert solution(stdin) == \"48000.3\"\nassert solution(stdin) == \"48000.4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4397,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4398,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ipcc\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4399,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4400,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4401,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3 1 2\"\nassert solution(input) == \"3 1 2\"\nassert solution(input) == \"3 1 2\"\nassert solution(input) == \"3 1 2\"\nassert solution(input) == \"3 1 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4402,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4404,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Heisei\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4405,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"\n\nassert solution(stdin) == \"9\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4406,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4407,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4408,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4409,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4410,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4411,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4412,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"30\"\nassert solution(stdin) == \"31\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"31\"\nassert solution(stdin) == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4413,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Constraints-----\n\n1 <= n <= 100\n1 <= a_i <= 100\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4414,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4415,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4416,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4418,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4419,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"92\"\nassert solution(stdin) == \"87654322\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4420,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12339\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4421,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4422,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"aBC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4423,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4 6 1 5 2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4424,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4425,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.145833333333'\nassert solution(stdin) == '0.145833333333'\nassert solution(stdin) == '0.145833333333'\nassert solution(stdin) == '0.145833333333'\nassert solution(stdin) == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4426,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4427,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"30\"\nassert solution(stdin) == \"50\"\nassert solution(stdin) == \"90\"\nassert solution(stdin) == \"170\"\nassert solution(stdin) == \"330\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4428,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4429,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4430,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 26\n1 <= c_1, c_2, c_3 <= c_k\n\nTime Limit: 1 sec\n\nSample Input\n\n3\n2\nabacaba\na b\n\nSample Output\n\n1\n\nExplanation\n\nNorge can print substrings $s[1\\ldots2]$, $s[2\\ldots3]$, $s[1\\ldots3]$, $s[1\\ldots1]$, $s[2\\ldots2]$, $s[3\\ldots3]$, $s[5\\ldots6]$, $s[6\\ldots7]$, $s[5\\ldots7]$, $s[5\\ldots5]$, $s[6\\ldots6]$, $s[7\\ldots7]$.\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4432,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4433,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 5\"\nassert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"3 2\"\nassert solution(stdin) == \"3 4\"\nassert solution(stdin) == \"3 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4434,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 40\n\n-----Constraints-----\n1 <= t <= 200\n1 <= n <= 5 * 10^5\n\nTime Limit: 1 sec\nMemory Limit: 1GB\n\n-----Submissions-----\n7\n4\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4436,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4437,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"abba\"\nassert solution(stdin) == \"ababab\"\nassert solution(stdin) == \"ababab\"\nassert solution(stdin) == \"ba\"\nassert solution(stdin) == \"ba\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4438,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4439,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4440,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1.000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4441,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == \"Hello World\"\nassert solution(2) == \"A+B\"\nassert solution(3) == \"A+B\"\nassert solution(4) == \"A+B\"\nassert solution(5) == \"A+B\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4442,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3333\"\nassert solution(input()) == \"444\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"A\") == \"b\"\nassert solution(\"z\") == \"z\"\nassert solution(\"Z\") == \"z\"\nassert solution(\"A\") == \"z\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4444,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"atcoder\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4445,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4446,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4447,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3 2 0 6 10 12\"\nassert solution(stdin) == \"3 2 0 7 10 14\"\nassert solution(stdin) == \"3 2 0 7 10 14\"\nassert solution(stdin) == \"3 2 0 7 10 14\"\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4448,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4449,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4450,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4451,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"7486\"\nassert solution(stdin) == \"7486\"\nassert solution(stdin) == \"7486\"\nassert solution(stdin) == \"7486\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4452,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"5000 9\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"9876\"\nassert solution(stdin) == \"10000\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4453,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"3 3 3 3 3\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4454,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4455,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"10 4 10 15\") == \"0 0 1 2\"\nassert solution(\"5 4 1 5 4 3 7 1 2 5\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"4 6\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"4 4\") == \"0 0 1 2\"\nassert solution(\"4 4\") == \"0 0 1 2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4456,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4457,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"43\"\nassert solution(stdin) == \"64\"\nassert solution(stdin) == \"69\"\nassert solution(stdin) == \"43\"\nassert solution(stdin) == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4458,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4460,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4464,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4465,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4468,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4469,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4470,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 4\nassert solution(stdin) == 6\nassert solution(stdin) == -1\nassert solution(stdin) == -1\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4471,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4472,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 4\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 1-----\nInput\n3\nabacaba\nbacabaa\n\nOutput\n0\n\nExample 2\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\nExample 3\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 4-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 5-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 6-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 7-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 8-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 9-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 10-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 11-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 12-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 13-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 14-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 15-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 16-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 17-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded-----\nTime Limit: 1 second\n\n-----Example 18-----\nInput\n3\nzcabd\ndbacz\n\nOutput\n0\n\n-----Constraints-----\n1 <= n <= 10^5\n\n-----Time Limit Exceeded-----\nTime Limit: 1 second\n\n-----Space Limit Exceeded",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4473,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4474,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4475,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"70\"\nassert solution(stdin) == \"77\"\nassert solution(stdin) == \"177177\"\nassert solution(stdin) == \"999999999\"\nassert solution(stdin) == \"999999999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4476,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 13\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4478,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4479,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == '6'\nassert solution(stdin) == '13'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4480,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"0\",\"2\",\"1\",\"-6\",\"6\",\"-7\",\"9\",\"1\",\"2\",\"0\",\"1\"]) == \"true\"\nassert solution([\"0\",\"2\",\"1\",\"-6\",\"6\",\"-7\",\"9\",\"1\",\"2\",\"0\",\"1\"]) == \"false\"\nassert solution([\"3\",\"3\",\"6\",\"5\",\"-2\",\"2\",\"5\",\"1\",\"-9\",\"4\"]) == \"true\"\nassert solution([\"3\",\"3\",\"6\",\"5\",\"-2\",\"2\",\"5\",\"1\",\"-9\",\"4\"]) == \"false\"\n",
        "num_ids_2": 68,
        "num_ids_4": 132
    },
    {
        "number": 4481,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"beat\"\nassert solution(stdin) == \"vet\"\nassert solution(stdin) == \"beet\"\nassert solution(stdin) == \"bed\"\nassert solution(stdin) == \"bet\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4482,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '84'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4485,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"POSSIBLE\"\nassert solution(input()) == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4486,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"acdr\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4487,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4488,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(36) == \"GREATER\"\nassert solution(24) == \"LESS\"\nassert solution(0) == \"EQUAL\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4489,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"A\"\nassert solution(\"T\") == \"C\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"14\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4493,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4494,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"ARC\"\nassert solution(input()) == \"ABC\"\nassert solution(input()) == \"ABC\"\nassert solution(input()) == \"ABC\"\nassert solution(input()) == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4495,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4496,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(25) == \"Christmas\"\nassert solution(24) == \"Christmas Eve\"\nassert solution(23) == \"Christmas Eve Eve\"\nassert solution(22) == \"Christmas Eve Eve\"\nassert solution(21) == \"Christmas Eve Eve\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4497,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4499,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ABC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4500,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4502,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4 2 1 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4503,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4504,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 6\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4505,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(bac) == \"Yes\"\nassert solution(bac) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4506,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 757402647",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4507,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4508,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4509,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"1999999999\"\nassert solution(stdin) == \"113\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4510,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4511,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '263'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4512,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4513,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"154873396\"\nassert solution(stdin) == \"336592714\"\nassert solution(stdin) == \"729645835\"\nassert solution(stdin) == \"863725145\"\nassert solution(stdin) == \"975314628\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4514,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4515,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4516,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4 6 5\"\nassert solution(stdin) == \"9 8 12 6 8\"\nassert solution(stdin) == \"3 3\"\nassert solution(stdin) == \"5 5\"\nassert solution(stdin) == \"2 1 5 3 5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4517,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4518,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4519,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01011110\"\nassert solution(stdin) == \"0101111\"\nassert solution(stdin) == \"0011111\"\nassert solution(stdin) == \"01011110\"\nassert solution(stdin) == \"0101111\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4520,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4521,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4522,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"21 7 15 21 3\"\nassert solution(stdin) == \"0 0 0\"\nassert solution(stdin) == \"0 0 0\"\nassert solution(stdin) == \"0 0 0\"\nassert solution(stdin) == \"0 0 0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4523,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n-----Constraints-----\n\n1 <= t <= 10^5\n1 <= n <= 10^5\n1 <= a_i <= 100\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4524,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '12'\nassert solution(stdin) == '11'\nassert solution(stdin) == '10'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4525,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4526,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n\n-----Constraints-----\n1 <= t <= 10^4\n1 <= n <= 10^4\n1 <= a_i <= n\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\na_i = 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4528,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1439\"\nassert solution(stdin) == \"1180\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"60\"\nassert solution(stdin) == \"1439\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4529,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n\n1 <= t <= 10^4\n1 <= n <= 10^5\n1 <= a_i <= n\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4531,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 121\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4532,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"227\"\nassert solution(stdin) == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4533,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1, [1,2]) == 1\nassert solution(2, [1,2]) == 2\nassert solution(3, [1,2,3]) == 1\nassert solution(4, [1,2,3,4]) == 2\nassert solution(5, [1,2,3,4,5]) == 2\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4534,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3) == [1,3,3,1]\nassert solution(4) == [1,3,3,2,1]\nassert solution(5) == [1,3,3,2,2,1]\nassert solution(6) == [1,3,3,2,2,2,1]\nassert solution(7) == [1,3,3,2,2,2,2,1]\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4535,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 31\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4536,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"1\",\"2\",\"3\"]) == \"1\"\nassert solution([\"4\",\"3\",\"2\",\"1\"]) == \"4\"\nassert solution([\"4\",\"3\",\"2\",\"2\"]) == \"4\"\nassert solution([\"1\",\"2\",\"3\",\"4\"]) == \"4\"\nassert solution([\"1\",\"2\",\"3\",\"4\",\"5\"]) == \"5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4537,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4538,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n\n-----Sample Output-----\nSample Input:\n4 5\n0 5\n-2 4\n3 4\n4 -4\n\nSample Output:\n3\n\n-----Constraints-----\n - 1 \\leq N \\leq 2\\times 10^5\n - 0 \\leq D \\leq 2\\times 10^5\n - |X_i|,|Y_i| \\leq 2\\times 10^5\n - All values in input are integers.\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(1234) == \"No\"\nassert solution(12345) == \"No\"\nassert solution(12345678) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4540,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"8\"\nassert solution(input()) == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4541,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"vowel\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4543,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4544,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4547,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4550,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4551,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Left\"\nassert solution(stdin) == \"Balanced\"\nassert solution(stdin) == \"Right\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4552,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4553,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4555,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3 4 7 8\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4556,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4557,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4558,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"83\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4559,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1000000000000000000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4560,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4561,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4563,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4564,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"cocacola\") == \"yes\"\nassert solution(\"cocacola\") == \"no\"\nassert solution(\"cocacola\") == \"yes\"\nassert solution(\"cocacola\") == \"no\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4565,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4566,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4567,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"correct\"\nassert solution(input()) == \"incorrect\"\nassert solution(input()) == \"correct\"\nassert solution(input()) == \"incorrect\"\nassert solution(input()) == \"correct\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4568,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4569,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"Sunny\", \"Cloudy\", \"Rainy\"]) == \"Cloudy\"\nassert solution([\"Sunny\", \"Cloudy\", \"Rainy\", \"Sunny\"]) == \"Cloudy\"\nassert solution([\"Cloudy\", \"Rainy\", \"Sunny\"]) == \"Cloudy\"\nassert solution([\"Cloudy\", \"Rainy\", \"Sunny\", \"Cloudy\"]) == \"Cloudy\"\nassert solution([\"Cloudy\", \"Rainy\", \"Sunny\", \"Cloudy\", \"Rainy\"]) == \"Cloudy\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4570,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"119\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4571,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 3800\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4572,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"atcoderregularcontest\"]) == \"b\"\nassert solution([\"atcoderregularcontest\", \"atcoderregularcontest\"]) == None\nassert solution([\"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\"]) == None\nassert solution([\"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\"]) == None\nassert solution([\"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\", \"atcoderregularcontest\"]) == None\n",
        "num_ids_2": 40,
        "num_ids_4": 110
    },
    {
        "number": 4573,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4575,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4576,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4577,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1,2,3) == \"Yes\"\nassert solution(1,2,4) == \"No\"\nassert solution(1,2,5) == \"No\"\nassert solution(1,2,6) == \"No\"\nassert solution(1,2,7) == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4578,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"yellow orange\"\nassert solution(input) == \"orange\"\nassert solution(input) == \"orange\"\nassert solution(input) == \"orange\"\nassert solution(input) == \"orange\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4581,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"900\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4582,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"H\"\nassert solution(input) == \"D\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4583,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1+2+2+2=7\"\n\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4584,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1118) == \"Yes\"\nassert solution(1119) == \"No\"\nassert solution(1) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(3) == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4587,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"A B\") == \">=\"\nassert solution(\"A B\") == \"=\"\nassert solution(\"A B\") == \">=\"\nassert solution(\"A B\") == \"=\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"11211\"\nassert solution(input()) == \"1#2#1\"\nassert solution(input()) == \"11211\"\nassert solution(input()) == \"1#2#1\"\nassert solution(input()) == \"1#2#1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4590,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\nassert solution(\"80 150 80 150\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4591,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7900\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4592,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 9\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4594,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4595,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4596,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4600,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 2\"\nassert solution(input()) == \"2 2\"\nassert solution(input()) == \"2 2\"\nassert solution(input()) == \"2 2\"\nassert solution(input()) == \"2 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4603,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"520\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4604,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 84\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4606,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ABC100\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4607,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 5\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4608,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == -1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4609,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\nassert solution(input) == \"2\"\nassert solution(input) == \"3\"\nassert solution(input) == \"4\"\nassert solution(input) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4610,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4612,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n-----Sample Input-----\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n-----Sample Output-----\n4\n\nThe figure below shows the given graph:\nThe edges shown in red are bridges. There are four of them.\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4614,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4615,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"110\"\nassert solution(stdin) == \"110\"\nassert solution(stdin) == \"110\"\nassert solution(stdin) == \"110\"\nassert solution(stdin) == \"110\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4616,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"abbreviate\") == \"abbreviate\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aab\") == \"aab\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4617,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\nassert solution(input) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"ba\"\nassert solution(input()) == \"ba\"\nassert solution(input()) == \"ba\"\nassert solution(input()) == \"ba\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4619,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4620,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"11\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4621,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\"\n) == \"*.\\n*.\\n*.\\n*.\"\nassert solution(\n    \"2 2\"\n) == \"*.\\n*.\\n*.\\n*.\"\nassert solution(\n    \"2 2\"\n) == \"*.\\n*.\\n*.\\n*.\"\nassert solution(\n    \"2 2\"\n) == \"*.\\n*.\\n*.\\n*.\"\nassert solution(\n    \"2 2\"\n) == \"*.\\n*.\\n*.\\n*.\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4622,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4623,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n\n1 <= t <= 1000\n1 <= n <= 1000\n1 <= x <= 1000\n\n-----Time Limit-----\n\n1 second\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4625,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"26\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4626,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"36\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4627,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4628,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"22\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"22\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4629,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4630,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"3 3 3 3 3\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4631,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1 2 6 4 0 3'\nassert solution(stdin) == '7 5 -2 4 -1 2'\nassert solution(stdin) == '7 5 -2 4 -1 2'\nassert solution(stdin) == '7 5 -2 4 -1 2'\nassert solution(stdin) == '7 5 -2 4 -1 2'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4632,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4633,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4634,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4635,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"cbcab\"\nassert solution(stdin) == \"ababab\"\nassert solution(stdin) == \"cbcab\"\nassert solution(stdin) == \"ccbbaaa\"\nassert solution(stdin) == \"baabab\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4636,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6 23 21\"\nassert solution(stdin) == \"6 23 21\"\nassert solution(stdin) == \"6 23 21\"\nassert solution(stdin) == \"6 23 21\"\nassert solution(stdin) == \"6 23 21\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4637,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"27\"\nassert solution(stdin) == \"39\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"17\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4638,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(stdin) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(stdin) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(stdin) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(stdin) == \"0 2 4 7 8 11 13 14 16 17\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4639,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"aaabb\"\nassert solution(stdin) == \"aabab\"\nassert solution(stdin) == \"baaba\"\nassert solution(stdin) == \"abb\"\nassert solution(stdin) == \"bab\"\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4640,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4641,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4642,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 49\"\nassert solution(stdin) == \"20 40 30 50 10\"\nassert solution(stdin) == \"26 32 20 38 44 50\"\nassert solution(stdin) == \"8 23 18 13 3\"\nassert solution(stdin) == \"1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4643,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n\n1 <= a_i <= 100\n\n-----Time Limit-----\n\nO(nlogn)\n\n\n\n-----Submissions-----\n\nSubmissions\n\nSubmit\n\nCode\n\n==> python solution.py\n3 3 1 2\n1 2 3 \n\n==> Output\n1 2 3 \n\n==> Explanation\n\nThe tickets are sorted in non-decreasing order.\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4644,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4645,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4646,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4647,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 2 2 2 2 1 1 0 2\"\nassert solution(stdin) == \"0 -1 1 -1\"\nassert solution(stdin) == \"0 -1 1 -1\"\nassert solution(stdin) == \"0 -1 1 -1\"\nassert solution(stdin) == \"0 -1 1 -1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4648,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4649,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4650,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n\n1 <= t <= 10^4\n1 <= n <= 10^5\n1 <= a_i \\le 10^9\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4651,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 5 2 4 3\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 4 3 2\"\nassert solution(stdin) == \"1 2 3 4\"\n",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4652,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4653,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"75015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4654,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4655,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"55\"\nassert solution(stdin) == \"15000000000000000\"\nassert solution(stdin) == \"51\"\nassert solution(stdin) == \"233445\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4656,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4657,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4658,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"964176192\"\nassert solution(stdin) == \"3221225471\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4659,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\nassert solution(10) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\nassert solution(20) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\nassert solution(30) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\nassert solution(40) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4660,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == [], \"The solution should be a list of valid email addresses\"\n\n=====Output Format=====\nOutput a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4661,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == [0, 1, 1, 8, 27]\n\n=====Sample Input-1=====\n\n3\n\n=====Sample Output-1=====\n\n[0, 1, 1]\n\n=====Sample Input-2=====\n\n5\n\n=====Sample Output-2=====\n\n[0, 1, 1, 8, 27]\n\n>>>>>>> a3c8d9d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4662,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"<root>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4663,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n=====Sample Input 1=====\n3\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4664,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin.split())\n\n=====Sample Input-1=====\n3\n1 2 3 4 5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10 11\n8 9 10 11 12\n9 10 11 12 13\n10 11 12 13 14\n11 12 13 14 15\n12 13 14 15 16\n13 14 15 16 17\n14 15 16 17 18\n15 16 17 18 19\n16 17 18 19 20\n17 18 19 20 21\n18 19 20 21 22\n19 20 21 22 23\n20 21 22 23 24\n21 22 23 24 25\n22 23 24 25 26\n23 24 25 26 27\n24 25 26 27 28\n25 26 27 28 29\n26 27 28 29 30\n27 28 29 30 31\n28 29 30 31 32\n29 30 31 32 33\n30 31 32 33 34\n31 32 33 34 35\n32 33 34 35 36\n33 34 35 36 37\n34 35 36 37 38\n35 36 37 38 39\n36 37 38 39 40\n37 38 39 40 41\n38 39 40 41 42\n39 40 41 42 43\n40 41 42 43 44\n41 42 43 44 45\n42 43 44 45 46\n43 44 45 46 47\n44 45 46 47 48\n45 46 47 48 49\n46 47 48 49 50\n47 48 49 50 51\n48 49 50 51 52\n49 50 50 51 53\n49 50 50 51 54\n49 50 50 51 55\n49 50 50 51 56\n49 50 50 51 57\n49 50 50 51 58\n49 50 50 51 59\n49 50 50 51 60\n49 50 50 51 61\n49 50 50 51 62\n49 50 50 51 63\n49 50 50 51 64\n49 50 50 51 65\n49 50 50 51 66\n49 50 50 51 67\n49 50 50 51 68\n49 50 50 51 69\n49 50 50 51 70\n49 50 50 51 71\n49 50 50 51 72\n49 50 50 51 73\n49 50 50 51 74\n49 50 50 51 75\n49 50 50 51 76\n49 50 50 51 77\n49 50 50 51 78\n49 50 50 51 79\n49 50 50 51 80\n49 50 50 51 81\n49 50 50 51 82\n49 50 50 51 83\n49 50 50 51 84\n49 50 50 51 85\n49 50 50 51 86\n49 50 50 51 87\n49 50 50 51 88\n49 50 50 51 89\n49 50 50 51 90\n49 50 50 51 91\n49 50 50 51 92\n49 50 50 51 93\n49 50 50 51 94\n49 50 50 51 95\n49 50 50 51 96\n49 50 50 51 97\n49 50 50 51 98\n49 50 50 51 99\n49 50 50 51 100\n49 50 50 51 101\n49 50 50 51 102\n49 50 50 51 103\n49 50 50 51 104\n49 50 50 51 105\n49 50 50 51 106\n49 50 50 51 107\n49 50 50 51 108\n49 50 50 51 109\n49 50 50 51 110\n49 50 50 51 111\n49 50 50 51 112\n49 50 50 51 113\n49 50 50 51 114\n49 50 50 51 115\n49 50 50 51 116\n49 50 50 51 117\n49 50 50 51 118\n49 50 50 51 119\n49 50 50 51 120\n49 50 50 51 121\n49 50 50 51 122\n49 50 50 51 123\n49 50 50 51 124\n49 50 50 51 125\n49 50 50 51 126\n49 50 50 51 127\n49 50 50 51 128\n49 50 50 51 129\n49 50 50 51 130\n49 50 50 51 131\n49 50 50 51 132\n49 50 50 51 133\n49 50 50 51 134\n49 50 50 51 135\n49 50 50 51 136\n49 50 50 51 137\n49 50 50 51 138\n49 50 50 51 139\n49 50 50 51 140\n49 50 50 51 141\n49 50 50 51 142\n49 50 50 51 143\n49 50 50 51 144\n49 50 50 51 145\n49 50 50 51 146\n49 50 50 51 147\n49 50 50 51 148\n49 50 50 51 149\n49 50 50 51 150\n49 50 50 51 151\n49 50 50 51 152\n49 50 50 51 153\n49 50 50 51 154\n49 50 50 51 155\n49 50 50 51 156\n49 50 50 51 157\n49 50 50 51 158\n49 50 50 51 159\n49 50 50 51 160\n49 50 50 51 161\n49 50 50 51 162\n49 50 50 51 163\n49 50 50 51 164\n49 50 50 51 165\n49 50 50 51 166\n49 50 50 51 167\n49 50 50 51 168\n49",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4665,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.0'\n\n=====Sample Input 1=====\n3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4666,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == \"Not Weird\"\nassert solution(6) == \"Weird\"\nassert solution(20) == \"Not Weird\"\nassert solution(21) == \"Weird\"\nassert solution(24) == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"<root>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<child>\\n<",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4668,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin.replace('\\n',''))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4669,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]) == 2\nassert solution([\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]) == 1\nassert solution([\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]) == 2\nassert solution([\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]) == 1\nassert solution([\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]) == 1\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4670,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == True\nassert solution(input) == False\n\n=====Sample Input-1=====\n3\nI\nV\nX\nL\nC\nD\nM\n====Sample Output-1=====\nTrue\n\n=====Sample Input-2=====\n3\nI\nV\nX\nL\nC\nD\nM\n====Sample Output-2=====\nFalse\n\n=====Sample Input-3=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\n====Sample Output-3=====\nFalse\n\n=====Sample Input-4=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\n====Sample Output-4=====\nTrue\n\n=====Sample Input-5=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\n====Sample Output-5=====\nFalse\n\n=====Sample Input-6=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\n====Sample Output-6=====\nTrue\n\n=====Sample Input-7=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\nV\n====Sample Output-7=====\nFalse\n\n=====Sample Input-8=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\nV\nV\n====Sample Output-8=====\nTrue\n\n=====Sample Input-9=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\nV\nV\nV\n====Sample Output-9=====\nFalse\n\n=====Sample Input-10=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\nV\nV\nV\nV\nV\n====Sample Output-10=====\nTrue\n\n=====Sample Input-11=====\n3\nI\nV\nX\nL\nC\nD\nM\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4671,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin.strip())\n\n=====Example 1=====\nInput\n\n3\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n\nOutput\n\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n\nExplanation\n\nThe given mobile numbers may have +91, 91 or 0 written before the actual 10 digit number. Alternatively, there may not be any prefix at all. Alternatively, there may not be any prefix at all.\n\n=====Example 2=====\nInput\n\n3\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 xxxxx xxxxx\n+91 x",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4672,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '50.0'\n\n=====Sample Input-1=====\n3\nalpha\nbeta\nalpha\nbeta\nalpha\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\nbeta\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4673,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Mr. Henry Davids\\nMs. Mary George\"\nassert solution(stdin) == \"Ms. Mary George\"\nassert solution(stdin) == \"Mr. Henry Davids\"\nassert solution(stdin) == \"Ms. Mary George\"\nassert solution(stdin) == \"Mr. Henry Davids\"\n",
        "num_ids_2": 35,
        "num_ids_4": 64
    },
    {
        "number": 4674,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == [\n    [0,0,0],\n    [0,0,1],\n    [0,0,2],\n    [0,1,0],\n    [0,1,1],\n    [0,1,2],\n    [1,0,0],\n    [1,0,1],\n    [1,0,2],\n    [1,1,0],\n    [1,1,1],\n    [1,1,2],\n    [2,0,0],\n    [2,0,1],\n    [2,0,2],\n    [2,1,0],\n    [2,1,1],\n    [2,1,2],\n    [3,0,0],\n    [3,0,1],\n    [3,0,2],\n    [3,1,0],\n    [3,1,1],\n    [3,1,2],\n    [4,0,0],\n    [4,0,1],\n    [4,0,2],\n    [4,1,0],\n    [4,1,1],\n    [4,1,2],\n    [5,0,0],\n    [5,0,1],\n    [5,0,2],\n    [5,1,0],\n    [5,1,1],\n    [5,1,2],\n    [6,0,0],\n    [6,0,1],\n    [6,0,2],\n    [6,1,0],\n    [6,1,1],\n    [6,1,2],\n    [7,0,0],\n    [7,0,1],\n    [7,0,2],\n    [7,1,0],\n    [7,1,1],\n    [7,1,2],\n    [8,0,0],\n    [8,0,1],\n    [8,0,2],\n    [8,1,0],\n    [8,1,1],\n    [8,1,2],\n    [9,0,0],\n    [9,0,1],\n    [9,0,2],\n    [9,1,0],\n    [9,1,1],\n    [9,1,2],\n    [10,0,0],\n    [10,0,1],\n    [10,0,2],\n    [10,1,0],\n    [10,1,1],\n    [10,1,2],\n    [11,0,0],\n    [11,0,1],\n    [11,0,2],\n    [11,1,0],\n    [11,1,1],\n    [11,1,2],\n    [12,0,0],\n    [12,0,1],\n    [12,0,2],\n    [12,1,0],\n    [12,1,1],\n    [12,1,2],\n    [13,0,0],\n    [13,0,1],\n    [13,0,2],\n    [13,1,0],\n    [13,1,1],\n    [13,1,2],\n    [14,0,0],\n    [14,0,1],\n    [14,0,2],\n    [14,1,0],\n    [14,1,1],\n    [14,1,2],\n    [15,0,0],\n    [15,0,1],\n    [15,0,2],\n    [15,1,0],\n    [15,1,1],\n    [15,1,2],\n    [16,0,0],\n    [16,0,1],\n    [16,0,2],\n    [16,1,0],\n    [16,1,1],\n    [16,1,2],\n    [17,0,0],\n    [17,0,1],\n    [17,0,2],\n    [17,1,0],\n    [17,1,1],\n    [17,1,2],\n    [18,0,0],\n    [18,0,1],\n    [18,0,2],\n    [18,1,0],\n    [18,1,1],\n    [18,1,2],\n    [19,0,0],\n    [19,0,1],\n    [19,0,2],\n    [19,1,0],\n    [19,1,1],\n    [19,1,2],\n    [20,0,0],\n    [20,0,1],\n    [20,0,2],\n    [20,1,0],\n    [20,1,1],\n    [20,1,2],\n    [21,0,0],\n    [21,0,1],\n    [21,0,2],\n    [21,1,0],\n    [21,1,1],\n    [21,1,2],\n    [22,0,0],\n    [22,0,1],\n    [22,0,2],\n    [22,1,0],\n    [22,1,1],\n    [22,1,2],\n    [23,0,0],\n    [23,0,1],\n    [23,0,2],\n    [23,1,0],\n    [23,1,1],\n    [23,1,2],\n    [24,0,0],\n    [24,0,1],\n    [24,0,2],\n    [24,1,0],\n    [24,1,1],\n    [24,1,2],\n    [25,0,0],\n    [25,0,1],\n    [25,0,2],\n    [25,1,0],\n    [25,1,1],\n    [25,1,2],\n    [26,0,0],\n    [26,0,1],\n    [26,0,2],\n    [26,1,0],\n    [26,1,1],\n    [26,1,2],\n    [27,0,0],\n    [27,0,1],\n    [27,0,2],\n    [27,1,0],\n    [27,1,1],\n    [27,1,2],\n    [28,0,0],\n    [28,0,1],\n    [28,0,2],\n    [28,1,0],\n    [28,1,1],\n    [28,1,2],\n    [29,0,0],\n    [29,0,1],\n    [29,0,2],\n    [29,1,0],\n    [29,1,1],\n    [29,1,2],\n    [30,0,0],\n    [30,0,1],\n    [30,0,2],\n    [30,1,0],\n    [30,1,1],\n    [30,",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4675,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"C+D\"\nassert solution(stdin) == \"C-D\"\nassert solution(stdin) == \"C*D\"\nassert solution(stdin) == \"C/D\"\nassert solution(stdin) == \"mod(C) mod(D)\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4676,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"xyz\"\nassert solution(stdin) == \"abc\"\nassert solution(stdin) == \"xaybzc\"\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4677,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(s) == \"00\"\nassert solution(s) == \"01\"\nassert solution(s) == \"B\"\nassert solution(s) == \"0\"\nassert solution(s) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4679,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"A\"\nassert solution(stdin) == \"B\"\nassert solution(stdin) == \"C\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4680,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5, 5, 7) == \"YES\"\nassert solution(5, 5, 7) == \"NO\"\nassert solution(5, 5, 7) == \"NO\"\nassert solution(5, 5, 7) == \"NO\"\nassert solution(5, 5, 7) == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4681,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 11\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4682,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4683,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 11\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4684,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4685,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"30\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4686,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4687,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4\"\n) == \"3\"\nassert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"2 2\"\n) == \"2\"\nassert solution(\n    \"3 3\"\n) == \"3\"\nassert solution(\n    \"1 1\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4689,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4690,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4691,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"AC x 3\"\nassert solution(input) == \"WA x 1\"\nassert solution(input) == \"TLE x 2\"\nassert solution(input) == \"RE x 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4692,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4694,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4695,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4696,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Even\"\nassert solution(input()) == \"Odd\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4697,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4698,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4699,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4701,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 10\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4702,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\nassert solution(1) == 0\nassert solution(1) == 0\nassert solution(1) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4703,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 176\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4704,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4705,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15800\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4706,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"abc\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4708,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"48000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ABC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4711,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1300\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4712,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3\"\n) == \"#####\"\nassert solution(\n    \"abc\"\n) == \"#####\"\nassert solution(\n    \"arc\"\n) == \"#####\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4713,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4715,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4716,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4717,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"B\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"B\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"B\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4718,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2018/01/07\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4719,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"aac\"\nassert solution(input()) == \"aac\"\nassert solution(input()) == \"aac\"\nassert solution(input()) == \"aac\"\nassert solution(input()) == \"aac\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4720,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 7\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4722,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Possible\"\nassert solution(input) == \"Impossible\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4723,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"atcoder\"\nassert solution(stdin) == \"coder\"\nassert solution(stdin) == \"tcoder\"\nassert solution(stdin) == \"ztcoder\"\nassert solution(stdin) == \"btcoder\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4724,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2032\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4725,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4726,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"AC\"\nassert solution(stdin) == \"TLE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4727,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 4 8 0\"\nassert solution(stdin) == \"4 4 8 0\"\nassert solution(stdin) == \"4 4 8 0\"\nassert solution(stdin) == \"4 4 8 0\"\nassert solution(stdin) == \"4 4 8 0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4728,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4729,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"PASS\"\nassert solution(stdin) == \"FAIL\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"ok so far\"\nassert solution(input()) == \"ok so far\"\nassert solution(input()) == \"ok so far\"\nassert solution(input()) == \"ok so far\"\nassert solution(input()) == \"ok so far\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4731,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Fair Game\"\nassert solution(stdin) == \"Player 1 lost\"\nassert solution(stdin) == \"Player 2 lost\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4732,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10010\"\nassert solution(stdin) == \"1010\"\nassert solution(stdin) == \"10010\"\nassert solution(stdin) == \"1010\"\nassert solution(stdin) == \"10010\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4733,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"52\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4734,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"menolaxiosexmox\"\nassert solution(stdin) == \"alemaxe maxos\"\nassert solution(stdin) == \"pamoli toxes\"\nassert solution(stdin) == \"pamolextoxes\"\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4735,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4736,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1820000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4737,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4738,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9\"\n",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4740,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4741,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5/9\"\nassert solution(stdin) == \"5/9\"\nassert solution(stdin) == \"5/9\"\nassert solution(stdin) == \"5/9\"\nassert solution(stdin) == \"5/9\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4742,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Transposition\"\nassert solution(stdin) == \"Retrograde\"\nassert solution(stdin) == \"Inversion\"\nassert solution(stdin) == \"Nonsense\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4743,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Gah kove bababa\"\nassert solution(stdin) == \"Cat-a-pil-lar\"\nassert solution(stdin) == \"Co-ding is the best\"\nassert solution(stdin) == \"Cociccah gs the bestuh\"\nassert solution(stdin) == \"def solution(stdin)\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4744,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4745,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4746,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.875'\nassert solution(stdin) == '4.25'\nassert solution(stdin) == '1.875'\nassert solution(stdin) == '1.875'\nassert solution(stdin) == '1.875'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4748,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4749,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4750,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1\"\nassert solution(stdin) == \"3 4\"\nassert solution(stdin) == \"3 2\"\nassert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4751,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"true\"\nassert solution(stdin) == \"false\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4752,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"2\", \"7\", \"11\", \"15\"]) == \"0 1\"\nassert solution([\"2\", \"7\", \"11\", \"15\", \"99\"]) == \"0 1\"\nassert solution([\"2\", \"7\", \"11\", \"15\", \"99\", \"999\"]) == \"0 1\"\nassert solution([\"2\", \"7\", \"11\", \"15\", \"99\", \"999\", \"9999\"]) == \"0 1\"\nassert solution([\"2\", \"7\", \"11\", \"15\", \"99\", \"999\", \"9999\", \"99999\"]) == \"0 1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 106
    },
    {
        "number": 4753,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4754,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4755,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"180\"\nassert solution(stdin) == \"123451000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4757,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3 4 5 6 7 8\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4758,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"60\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4759,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.6666666666666667'\nassert solution(stdin) == '2.5'\nassert solution(stdin) == '1.6666666666666667'\nassert solution(stdin) == '2.5'\nassert solution(stdin) == '1.6666666666666667'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4760,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4761,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4762,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.66666667'\nassert solution(stdin) == '0.50000000'\nassert solution(stdin) == '0.50000000'\nassert solution(stdin) == '0.50000000'\nassert solution(stdin) == '0.50000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4763,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"triple 19\"\nassert solution(input()) == \"triple 19\"\nassert solution(input()) == \"triple 19\"\nassert solution(input()) == \"triple 19\"\nassert solution(input()) == \"triple 19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"168\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4765,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4766,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"smile. raise your right hand. raise your left hand.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4767,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4768,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4769,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4770,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(stdin) == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution(stdin) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(stdin) == \"Dr. Chaz needs 80 more pieces of chicken!\"\nassert solution(stdin) == \"Dr. Chaz will have 1 piece of chicken left over!\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4771,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"kala\"\nassert solution(stdin) == \"kala\"\nassert solution(stdin) == \"kala\"\nassert solution(stdin) == \"kala\"\nassert solution(stdin) == \"kala\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4773,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\nSample Input 3:\nNSEW\nSample Output 3:\n4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4774,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 - 2 = 3 - 4\"\nassert solution(stdin) == \"1 / 2 = 3 / 4\"\nassert solution(stdin) == \"1 + 4 = 2 + 2\"\nassert solution(stdin) == \"1 - 2 = 3 - 4\"\nassert solution(stdin) == \"0 * 4 = 2 - 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4775,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4776,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4777,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 1\"\nassert solution(stdin) == \"2 3\"\nassert solution(stdin) == \"2 3\"\nassert solution(stdin) == \"2 3\"\nassert solution(stdin) == \"2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4778,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"A\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"A\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4779,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"168\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4780,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"CBADEF\"\nassert solution(stdin) == \"CDBEAF\"\nassert solution(stdin) == \"CBADEF\"\nassert solution(stdin) == \"CDBEAF\"\nassert solution(stdin) == \"CBADEF\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4781,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4782,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 22\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4783,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4784,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"28\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4785,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"hiss\"\nassert solution(stdin) == \"no hiss\"\nassert solution(stdin) == \"amiss\"\nassert solution(stdin) == \"no hiss\"\nassert solution(stdin) == \"amiss\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4786,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4787,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 21\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4788,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '90'\nassert solution(stdin) == '180'\nassert solution(stdin) == '90'\nassert solution(stdin) == '180'\nassert solution(stdin) == '90'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4789,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4790,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4791,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.299038105676658'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4792,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"robert\"\nassert solution(stdin) == \"robert\"\nassert solution(stdin) == \"robert\"\nassert solution(stdin) == \"robert\"\nassert solution(stdin) == \"robert\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4793,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4794,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1953566\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4796,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4797,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nassert solution(\"foss<<rritun\") == \"def solution\"\nassert solution(\"foss<<rritun\") == \"def solution\"\nassert solution(\"foss<<rritun\") == \"def solution\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4798,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"KMP\") == \"KMP\"\nassert solution(\"MS\") == \"MS\"\nassert solution(\"KMP-\") == \"KMP\"\nassert solution(\"MS-\") == \"MS\"\nassert solution(\"KMP-\") == \"KMP\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4799,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Province or Gold\"\nassert solution(stdin) == \"Estate or Gold\"\nassert solution(stdin) == \"Province or Gold\"\nassert solution(stdin) == \"Province or Gold\"\nassert solution(stdin) == \"Province or Gold\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '75.7142857'\nassert solution(stdin) == '75.7142857'\nassert solution(stdin) == '75.7142857'\nassert solution(stdin) == '75.7142857'\nassert solution(stdin) == '75.7142857'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4801,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4802,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '23 45'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4803,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.414214\"\nassert solution(stdin) == \"1.414214\"\nassert solution(stdin) == \"1.414214\"\nassert solution(stdin) == \"1.414214\"\nassert solution(stdin) == \"1.414214\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4804,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3: 2,1\"\nassert solution(stdin) == \"50: 2,1\"\nassert solution(stdin) == \"50: 2,2\"\nassert solution(stdin) == \"50: 2,3\"\nassert solution(stdin) == \"50: 2,4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4805,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4806,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SSKKKHHS\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4807,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4809,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4810,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"bok\"\nassert solution(stdin) == \"koaski\"\nassert solution(stdin) == \"kakosi\"\nassert solution(stdin) == \"bok\"\nassert solution(stdin) == \"koaski\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4811,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\nassert solution(stdin) == 8\nassert solution(stdin) == 8\nassert solution(stdin) == 8\nassert solution(stdin) == 8\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4812,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4813,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"WIN\"\nassert solution(stdin) == \"LOSE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4814,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"INCREASING\"\nassert solution(stdin) == \"DECREASING\"\nassert solution(stdin) == \"NEITHER\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4815,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Nina wins!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4816,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.0\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4817,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"165\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4819,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4820,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4821,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"GRESKA\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4822,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4823,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4824,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4825,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4826,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 'Alice'\nassert solution(2) == 'Bob'\nassert solution(3) == 'Alice'\nassert solution(4) == 'Bob'\nassert solution(5) == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"thirty is the number of letters here\"\nassert solution(stdin) == \"thirty is the number of letters here\"\nassert solution(stdin) == \"thirty is the number of letters here\"\nassert solution(stdin) == \"thirty is the number of letters here\"\nassert solution(stdin) == \"thirty is the number of letters here\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4828,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 5\n\nSample Input 3:\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n\nSample Output 3:\n0\n\n-----Constraints-----\n1 <= stdin.length <= 200\n\n-----Time Limit-----\n1 minute\n\n-----Memory Limit-----\n4 GB\n\n-----Bug Fixes-----\n- Fixed a bug in the program that was causing the program to crash when the program was written with a $13$ memory.\n- Fixed a bug in the program that was causing the program to crash when the program was written with a $13$ memory.\n\"\"\"\n\nimport sys",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4829,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Odd 6\"\nassert solution(stdin) == \"Even 6\"\nassert solution(stdin) == \"Not a moose\"\nassert solution(stdin) == \"Not a moose\"\nassert solution(stdin) == \"Not a moose\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4830,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4831,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Peter Pan frames\"\nassert solution(stdin) == \"Peter Pan frames\"\nassert solution(stdin) == \"Peter Pan frames\"\nassert solution(stdin) == \"Peter Pan frames\"\nassert solution(stdin) == \"Peter Pan frames\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4832,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.141593\"\nassert solution(stdin) == \"882.000000\"\nassert solution(stdin) == \"1385.442360\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4833,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4834,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4835,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4836,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4837,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4838,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4839,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4840,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Tie\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"makes sense\"\nassert solution(stdin) == \"something is fishy\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4842,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 18\"\nassert solution(stdin) == \"2 121\"\nassert solution(stdin) == \"1 18\"\nassert solution(stdin) == \"2 121\"\nassert solution(stdin) == \"1 18\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4843,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"CORRECT\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
        "num_ids_2": 1594,
        "num_ids_4": 1594
    },
    {
        "number": 4845,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Saturday\"\nassert solution(stdin) == \"Sunday\"\nassert solution(stdin) == \"Monday\"\nassert solution(stdin) == \"Tuesday\"\nassert solution(stdin) == \"Wednesday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4846,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"129\"\nassert solution(stdin) == \"480\"\nassert solution(stdin) == \"40\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4847,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '4.0'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4848,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7\nassert solution(1) == 2\nassert solution(2) == 2\nassert solution(2) == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4849,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4850,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6.843530573929037\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4851,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"27\"\nassert solution(stdin) == \"27\"\nassert solution(stdin) == \"27\"\nassert solution(stdin) == \"27\"\nassert solution(stdin) == \"27\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 7\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4853,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 -2 4\"\nassert solution(stdin) == \"5 -2 4\"\nassert solution(stdin) == \"5 -2 4\"\nassert solution(stdin) == \"5 -2 4\"\nassert solution(stdin) == \"5 -2 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4854,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 2 2 1 1\"\nassert solution(stdin) == \"1 1 1 3 3 3 2 2 2\"\nassert solution(stdin) == \"1 1 1 3 3 3 2 2 2\"\nassert solution(stdin) == \"1 1 1 3 3 3 2 2 2\"\nassert solution(stdin) == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4855,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"875\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4856,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"437\"\nassert solution(stdin) == \"132\"\nassert solution(stdin) == \"231\"\nassert solution(stdin) == \"221\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4857,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"programming\"\nassert solution(stdin) == \"contest\"\nassert solution(stdin) == \"programming\"\nassert solution(stdin) == \"contest\"\nassert solution(stdin) == \"programming\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4858,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'X'\nassert solution(stdin) == 'A'\nassert solution(stdin) == 'A'\nassert solution(stdin) == 'A'\nassert solution(stdin) == 'A'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4859,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 0 3\"\nassert solution(stdin) == \"1 1 2\"\nassert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 3 0\"\nassert solution(stdin) == \"3 0 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4860,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 3 6 12\"\nassert solution(stdin) == \"1 3 6 12\"\nassert solution(stdin) == \"1 3 6 12\"\nassert solution(stdin) == \"1 3 6 12\"\nassert solution(stdin) == \"1 3 6 12\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4861,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '157079.04857106 15.598261092309'\n\nSample Input:\n10 8.9 40075000 272.1\nSample Output:\n15.598261092309\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4862,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4863,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nSample Input:\n5\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4864,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"..xx..\"\nassert solution(stdin) == \"xx..xx\"\nassert solution(stdin) == \"xx..xx\"\nassert solution(stdin) == \"..xx..\"\nassert solution(stdin) == \"xx..xx\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4865,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14 20\"\nassert solution(stdin) == \"14 20\"\nassert solution(stdin) == \"14 20\"\nassert solution(stdin) == \"14 20\"\nassert solution(stdin) == \"14 20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4866,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"31 9\") == \"yup\"\nassert solution(\"31 9\") == \"nope\"\nassert solution(\"31 9\") == \"nope\"\nassert solution(\"31 9\") == \"nope\"\nassert solution(\"31 9\") == \"nope\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4867,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"#.#.#.\\n#.#.#.#\\n.honi#.\\n.ker#.\\n.nera#.\\n.irak#.\\n.#.#.#.\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\n.#.#.#.#\\",
        "num_ids_2": 1420,
        "num_ids_4": 1420
    },
    {
        "number": 4868,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"Sample Input:\") == \"Sample Input\"\nassert solution(\"Sample Output:\") == \"Sample Output\"\n",
        "num_ids_2": 212,
        "num_ids_4": 238
    },
    {
        "number": 4869,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Need more materials!\"\nassert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4870,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"use the stairs\"\nassert solution(stdin) == \"use the stairs\"\nassert solution(stdin) == \"use the stairs\"\nassert solution(stdin) == \"use the stairs\"\nassert solution(stdin) == \"use the stairs\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4871,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '128.8'\nassert solution(stdin) == '89.06666666666666'\nassert solution(stdin) == '128.8'\nassert solution(stdin) == '89.06666666666666'\nassert solution(stdin) == '128.8'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4872,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n5\n1 45 65 84 346\nSample Output:\n3\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4873,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\ngrid = []\nfor _ in range(N):\n    grid.append(list(sys.stdin.readline().rstrip()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4875,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ay yay ebay osay indkay otay oday ityay\"\nassert solution(stdin) == \"i cant speak pig latin\"\nassert solution(stdin) == \"i am so sorry\"\nassert solution(stdin) == \"i am so sorry\"\nassert solution(stdin) == \"i am so sorry\"\n",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4876,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Anywhere is fine I guess\"\nassert solution(stdin) == \"Anywhere is fine I guess\"\nassert solution(stdin) == \"Anywhere is fine I guess\"\nassert solution(stdin) == \"Anywhere is fine I guess\"\nassert solution(stdin) == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4877,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nSample Input:\n5 0 15\nSample Output:\n2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"19\"\nassert solution(\"1 3\") == \"19\"\nassert solution(\"1 4\") == \"19\"\nassert solution(\"1 5\") == \"19\"\nassert solution(\"1 6\") == \"19\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4879,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4880,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"marywasnosyagain\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4881,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Either'\nSample Input:\n1\nSample Output:\nEven\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nEven\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\nOdd\n\nSample Input:\n1\nSample Output:\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4882,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '1'\nassert solution(stdin) == '5'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4883,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4884,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4885,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4886,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"true\"\nassert solution(stdin) == \"false\"\nassert solution(stdin) == \"true\"\nassert solution(stdin) == \"false\"\nassert solution(stdin) == \"true\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4887,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4888,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n21\\n34\\n18\\n9\\n\"\n) == \"79\"\nassert solution(\n    \"4\\n21\\n34\\n18\\n9\\n\"\n) == \"79\"\nassert solution(\n    \"4\\n21\\n34\\n18\\n9\\n\"\n) == \"79\"\nassert solution(\n    \"4\\n21\\n34\\n18\\n9\\n\"\n) == \"79\"\nassert solution(\n    \"4\\n21\\n34\\n18\\n9\\n\"\n) == \"79\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4890,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 0\"\nassert solution(stdin) == \"2 3\"\nassert solution(stdin) == \"2 3 2\"\nassert solution(stdin) == \"2 3 2\"\nassert solution(stdin) == \"2 3 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4891,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\nassert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\nassert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\nassert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\nassert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4892,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.3334'\nassert solution(stdin) == '1.3334'\nassert solution(stdin) == '1.3334'\nassert solution(stdin) == '1.3334'\nassert solution(stdin) == '1.3334'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4893,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4894,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"G:       F: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                  \\ne: ----------------------------------------------------------\\nd:                                                  \\nc:                                                  \\nb:                                                  \\na: ----------------------------------------------------------\"\n",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4895,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4896,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4897,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ASHMEADE\"\nassert solution(stdin) == \"BLAKE\"\nassert solution(stdin) == \"BOLT\"\nassert solution(stdin) == \"CARTER\"\nassert solution(stdin) == \"FRATER\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4898,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4899,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"hello\") == \"heey\"\nassert solution(\"hello\") == \"heey\"\nassert solution(\"hello\") == \"heey\"\nassert solution(\"hello\") == \"heey\"\nassert solution(\"hello\") == \"heey\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4900,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 3 4\"\nassert solution(stdin) == \"1 3 4\"\nassert solution(stdin) == \"1 3 4\"\nassert solution(stdin) == \"1 3 4\"\nassert solution(stdin) == \"1 3 4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4901,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"AJRB\") == \"ABCD\"\nassert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"AJRB\") == \"ABCD\"\nassert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4902,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 2\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 1\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 0\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 0\n",
        "num_ids_2": 29,
        "num_ids_4": 71
    },
    {
        "number": 4903,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aaaaa\") == \"no\"\nassert solution(\"aaaaa\") == \"go\"\nassert solution(\"aaaaa\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4904,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'A'\nassert solution(stdin) == 'B'\nassert solution(stdin) == 'A'\nassert solution(stdin) == 'B'\nassert solution(stdin) == 'A'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4905,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4906,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution(stdin) == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution(stdin) == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution(stdin) == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution(stdin) == 'H3e2l3o1W1o3r4l2d1!2'\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4907,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Alice\"\nassert solution(\"3\") == \"Bob\"\nassert solution(\"4\") == \"Alice\"\nassert solution(\"5\") == \"Bob\"\nassert solution(\"6\") == \"Alice\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4908,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5+3=8\"\nassert solution(stdin) == \"5+3=8\"\nassert solution(stdin) == \"5+3=8\"\nassert solution(stdin) == \"5+3=8\"\nassert solution(stdin) == \"5+3=8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4909,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ghost\"\nassert solution(stdin) == \"mummy\"\nassert solution(stdin) == \"witch\"\nassert solution(stdin) == \"demon\"\nassert solution(stdin) == \"demon\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4911,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Artist Album Song_Title Length_seconds\"\nassert solution(stdin) == \"George_Winston Summer Lullaby 215\"\nassert solution(stdin) == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\"\nassert solution(stdin) == \"James_Taylor Dad_Loves_His_Work London_Town 236\"\nassert solution(stdin) == \"James_Taylor Dad_Loves_His_Work Summers_Here 163\"\n",
        "num_ids_2": 37,
        "num_ids_4": 87
    },
    {
        "number": 4912,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4913,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"66.666667\"\nassert solution(stdin) == \"50.000000\"\nassert solution(stdin) == \"Not Effective\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4914,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Bruno\"\nassert solution(stdin) == \"Goran\"\nassert solution(stdin) == \"Adrian\"\nassert solution(stdin) == \"Goran\"\nassert solution(stdin) == \"Adrian\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4915,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 543\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4916,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4917,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"gunilla has a point\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4918,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4919,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2015\"\nassert solution(stdin) == \"1982\"\nassert solution(stdin) == \"1996\"\nassert solution(stdin) == \"1999\"\nassert solution(stdin) == \"1996\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4920,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4921,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering will save the world from inefficiency\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency is a blight on the world and its humanity\"\nassert solution(\"Book\") == \"Book\"\nassert solution(\"Book\") == \"Book\"\nassert solution(\"Book\") == \"Book\"\n",
        "num_ids_2": 58,
        "num_ids_4": 78
    },
    {
        "number": 4922,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"unsatisfactory\"\nassert solution(stdin) == \"satisfactory\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4923,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4924,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"08:00:00\"\nassert solution(stdin) == \"08:00:00\"\nassert solution(stdin) == \"08:00:00\"\nassert solution(stdin) == \"08:00:00\"\nassert solution(stdin) == \"08:00:00\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4925,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n2\nSample Output:\n2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4926,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.6666666666666665'\n\nSample Input:\n3\nSample Output:\n1.0\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"paul\"\nassert solution(stdin) == \"opponent\"\nassert solution(stdin) == \"paul\"\nassert solution(stdin) == \"opponent\"\nassert solution(stdin) == \"paul\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nSample Input:\n1\nSample Output:\n1\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4929,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4930,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4931,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4932,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"both\"\nassert solution(stdin) == \"one\"\nassert solution(stdin) == \"none\"\nassert solution(stdin) == \"both\"\nassert solution(stdin) == \"one\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4933,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"4\", \"6\", \"8\"]) == \"10\"\nassert solution([\"4\", \"6\", \"8\", \"10\"]) == \"10\"\nassert solution([\"4\", \"6\", \"8\", \"10\", \"12\"]) == \"10\"\nassert solution([\"4\", \"6\", \"8\", \"10\", \"12\", \"14\"]) == \"10\"\nassert solution([\"4\", \"6\", \"8\", \"10\", \"12\", \"14\", \"16\"]) == \"10\"\n",
        "num_ids_2": 39,
        "num_ids_4": 90
    },
    {
        "number": 4934,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"500 100\") == \"533\"\nassert solution(\"500 1000\") == \"533\"\nassert solution(\"500 10000\") == \"533\"\nassert solution(\"500 100000\") == \"533\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4935,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"39.0\"\nassert solution(stdin) == \"30.0\"\nassert solution(stdin) == \"39.0\"\nassert solution(stdin) == \"30.0\"\nassert solution(stdin) == \"39.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4936,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"28\"\nassert solution(stdin) == \"28\"\nassert solution(stdin) == \"28\"\nassert solution(stdin) == \"28\"\nassert solution(stdin) == \"28\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4937,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4938,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4939,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4940,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6 7\"\n\nSample Input:\n2 3\n1 2 3\n3 2 1\nSample Output:\n6 7\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"correct\"\nassert solution(stdin) == \"incorrect\"\nassert solution(stdin) == \"correct\"\nassert solution(stdin) == \"incorrect\"\nassert solution(stdin) == \"correct\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4942,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4943,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4944,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4945,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"34\"\n\nSample Input:\n3 1\n12 16\nSample Output:\n34\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4946,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4947,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1088'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4948,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"25.000000000\"\nassert solution(stdin) == \"25.000000000\"\nassert solution(stdin) == \"25.000000000\"\nassert solution(stdin) == \"25.000000000\"\nassert solution(stdin) == \"25.000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4949,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"DA\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"DA\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"DA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4950,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4951,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"correct\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4952,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Connie Froggatt\"\nassert solution(stdin) == \"Bruce Stanger\"\nassert solution(stdin) == \"Barbara Skinner\"\nassert solution(stdin) == \"Penny Franklin\"\nassert solution(stdin) == \"Penny Franklin\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4953,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4954,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4955,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
        "num_ids_2": 1430,
        "num_ids_4": 1430
    },
    {
        "number": 4956,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"dae ae ju traeligt va\"\nassert solution(stdin) == \"haer talar vi rikssvenska\"\nassert solution(stdin) == \"dae ae ju traeligt va\"\nassert solution(stdin) == \"haer talar vi rikssvenska\"\nassert solution(stdin) == \"dae ae ju traeligt va\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4957,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"E..E#.\\n..E.#E\\n#..E..\\n#..E..\\nE..E#\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..E..\\nE..",
        "num_ids_2": 1590,
        "num_ids_4": 1590
    },
    {
        "number": 4958,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12 10 3 8 4 2\"\nassert solution(stdin) == \"12 10 3 8 4 2\"\nassert solution(stdin) == \"12 10 3 8 4 2\"\nassert solution(stdin) == \"12 10 3 8 4 2\"\nassert solution(stdin) == \"12 10 3 8 4 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4959,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '12'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4961,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4962,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SMECE\"\nassert solution(stdin) == \"SMECE\"\nassert solution(stdin) == \"SMECE\"\nassert solution(stdin) == \"SMECE\"\nassert solution(stdin) == \"SMECE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4963,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245",
        "num_ids_2": 27,
        "num_ids_4": 1768
    },
    {
        "number": 4964,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4965,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 3 1\"\nassert solution(stdin) == \"4 3 1\"\nassert solution(stdin) == \"4 3 1\"\nassert solution(stdin) == \"4 3 1\"\nassert solution(stdin) == \"4 3 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4966,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '18.400'\nassert solution(stdin) == '18.400'\nassert solution(stdin) == '18.400'\nassert solution(stdin) == '18.400'\nassert solution(stdin) == '18.400'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4967,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4968,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4969,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.000000000'\nassert solution(stdin) == '0.000000000'\nassert solution(stdin) == '0.000000000'\nassert solution(stdin) == '0.000000000'\nassert solution(stdin) == '0.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4970,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4971,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1729\"\nassert solution(stdin) == \"1729\"\nassert solution(stdin) == \"1729\"\nassert solution(stdin) == \"1729\"\nassert solution(stdin) == \"1729\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4972,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4973,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4974,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"too late\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4975,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"\") == \"\"\nassert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 60,
        "num_ids_4": 95
    },
    {
        "number": 4976,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"The gopher cannot escape.\"\nassert solution(stdin) == \"The gopher cannot escape.\"\nassert solution(stdin) == \"The gopher cannot escape.\"\nassert solution(stdin) == \"The gopher cannot escape.\"\nassert solution(stdin) == \"The gopher cannot escape.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4977,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4\"\n) == \"Y\"\nassert solution(\n    \"3 3\"\n) == \"N\"\nassert solution(\n    \"3\"\n) == \"N\"\nassert solution(\n    \"3\"\n) == \"N\"\nassert solution(\n    \"3\"\n) == \"N\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4978,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..#..",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4979,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1011'\nassert solution(stdin) == '1011'\nassert solution(stdin) == '1011'\nassert solution(stdin) == '1011'\nassert solution(stdin) == '1011'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4980,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4981,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ABC\"\nassert solution(stdin) == \"BAC\"\nassert solution(stdin) == \"CBA\"\nassert solution(stdin) == \"ABC\"\nassert solution(stdin) == \"BAC\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4982,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8.00000000\"\nassert solution(stdin) == \"8.00000000\"\nassert solution(stdin) == \"8.00000000\"\nassert solution(stdin) == \"8.00000000\"\nassert solution(stdin) == \"8.00000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4983,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4984,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"CCCCC\"\n) == \"0\"\nassert solution(\n    \"CCCCC\"\n) == \"1\"\nassert solution(\n    \"CCCCC\"\n) == \"2\"\nassert solution(\n    \"CCCCC\"\n) == \"3\"\nassert solution(\n    \"CCCCC\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4985,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"60\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4986,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"thiss is very annoying\") == \"se\"\nassert solution(\"this is very annoying\") == \"se\"\nassert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss is very annoying\") == \"se\"\nassert solution(\"this is very annoying\") == \"se\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4987,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4988,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4989,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 2\"\nassert solution(stdin) == \"4 2\"\nassert solution(stdin) == \"4 2\"\nassert solution(stdin) == \"4 2\"\nassert solution(stdin) == \"4 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == 36\nassert solution(7) == 288\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4992,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"2 3 4 2\"\nassert solution(stdin) == \"2 3 4 3\"\nassert solution(stdin) == \"2 3 4 4\"\nassert solution(stdin) == \"2 3 4 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4993,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4994,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7 7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4995,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"measurement error\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4996,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"CALGARY\"\nassert solution(stdin) == \"CALGARY\"\nassert solution(stdin) == \"CALGARY\"\nassert solution(stdin) == \"CALGARY\"\nassert solution(stdin) == \"CALGARY\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4997,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"AB\") == \"2\"\nassert solution(\"AB\") == \"1\"\nassert solution(\"AB\") == \"0\"\nassert solution(\"AB\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4998,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nSample Input:\n1 2 3 4\nSample Output:\n3\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4999,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    }
]