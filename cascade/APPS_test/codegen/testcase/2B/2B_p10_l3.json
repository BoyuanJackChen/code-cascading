[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"5\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n4 6 7\\n5 6 8\\n5 7 8\") == \"2\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5'\nassert solution('7') == '1 3'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"1 2\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"1 8 6\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n3 4\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''16\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n364 366\n365 367\n366 368\n367 369\n368 370\n369 371\n370 372\n371 373\n372 374\n373 375\n374 376\n375 377\n376 378\n377 379\n378 380\n379 381\n380 382\n381 383\n382 384\n383 385\n384 386\n385 387\n386 388\n387 389\n388 390\n389 391\n390 392\n391 393\n392 394\n394 395\n395 396\n395 397\n396 398\n397 399\n398 400\n399 401\n400 402\n401 403\n402 404\n403 405\n404 406\n405 407\n406 408\n407 409\n408 410\n409 411\n410 412\n411 413\n412 414\n413 415\n414 416\n415 417\n416 418\n417 419\n418 420\n419 421\n420 422\n421 423\n422 424\n423 425\n424 426\n425 427\n426 428\n427 429\n428 430\n429 431\n430 432\n431 433\n432 434\n433 435\n434 436\n435 437\n436 438\n437 439\n438 440\n439 441\n440 442\n441 443\n442 444\n443 445\n444 446\n445 447\n446 448\n447 449\n448 450\n449 451\n450 452\n451 453\n452 454\n453 455\n454 456"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '1 5 6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3') == '5'\nassert solution('1 2\\n2 3\\n3 4') == '1 8 6'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10 2\\n1\\n10 20\\n1\\n2 4\\n1 20\\n1\\n20 4\\n1 2') == '2 20\\n20 4\\n20 4\\n20 4\\n2 4\\n2 4\\n2 4\\n4'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"10 2 8 1 2 4 1 20 4 5\"\n) == \"20 8\", \"Wrong\"\nassert solution(\n    \"10 3 5 1 2 4 6 8 10 2\"\n) == \"10 3 5 1 2\", \"Wrong\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"20 8\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('2 2 5') == '5'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"20 8\""
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"20 8\"\nassert solution(input) == \"20 8\""
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INP) == OUT\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '20 8'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 3\n3 2\n2 3\n''') == '1 3'\nprint('\"Run\" is good. How is \"Test\"?')\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24', solution.__doc__\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56', solution.__doc__\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\") == '24', \"First\"\nassert solution(\"5 5 4\") == '56', \"Second\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\""
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\""
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nRRRLLRR'\nassert solution('3\\n2 2 2') == '1\\nRR'\n\n\n'''\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2 4 3 2\") == \"RRLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRR\"\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"4\"\n\n>>> solution('1 2 4 3 2')\n'4'\n>>> solution('1 3 5 6 5 4 2')\n'6'\n>>> solution('2 2 2')\n'1'\n>>> solution('1 1 2')\n'2'\n>>> solution('1 2 3')\n'LRRR'\n>>> solution('3 2 4')\n'R'\n>>> solution('2 2 2')\n'LRRR'\n>>> solution('1 2 4 3')\n'LRRR'\n>>> solution('4 2 2 3')\n'LLRR'\n>>> solution('3 1 2')\n'R'\n>>> solution('1 1 2')\n'2'\n>>> solution('1 1 1')\n'1'\n>>> solution('4 2')\n'1'\n>>> solution('2 2')\n'1'\n>>> solution('1 1 1 1')\n'1'\n>>> solution('2 2 2 2')\n'1'\n>>> solution('1 1 1 1 1 1')\n'1'\n>>> solution('1 2 2 2 2')\n'2'\n>>> solution('1 2 1 2 2 1')\n'LRRR'\n>>> solution('1 2 1 2')\n'R'\n>>> solution('1 1 2')\n'2'\n>>> solution('2 2 2 2 2')\n'2'\n>>> solution('1 2 1 2')\n'R'\n>>> solution('2 2 2 2 2')\n'2'\n>>> solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_str) == '4', \"First example\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == 'LLRR'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('3 2') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 4 4 7 4 1\n\n''') == '3'\n\nassert solution('''\n5 2 2 5 2 5\n\n''') == '3'\n\nassert solution('''\n4\n1 3 3 7\n\n''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 2 2 2\n''') == '3'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''2\n4 8\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"6\") == \"3\""
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n1 4 4 7 4 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n2 2 5 2 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 3 3 7\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n1 2 3') == '3'\nassert solution('1 2 3\\n1 2 3') == '-1'\nassert solution('5 4 3\\n1 2 3\\n5 1 7') == '5'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == -1"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('1 3 3 7') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2 4 4\n1 1 3 5\n3 1 5 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3 7 5\n0 0 4 6\n0 0 7 4\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n\n\"\"\") == \"YES\""
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == \"NO\"\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == \"YES\"\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == \"YES\"\n''')\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_01) == 'YES'\nassert solution(example_input_02) == 'NO'\nassert solution(example_input_03) == 'YES'\n\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4') == 'YES'\nassert solution('3 3 7 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\n\nassert solution(\"5 2 10 5\") == \"YES\"\n\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"3 1 7 6\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution('1 2 4 4') == 'NO'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 4 6') == 'YES'"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES', 'First example'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES', 'Second example'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1098\n''') == '20'\n\nassert solution('''\n10\n''') == '19'\n\nassert solution('''\n100000\n''') == '20'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\""
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1098\") == \"20\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3 1 2 4 5\"\nassert solution(\"7\") == \"2 3 4 5 6 7\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"2 1 4 5 3\"\nassert solution([input_ for input_ in stdin.split(\"\\n\") if input_!= \"\"]) == \"2 1 4 5 3\""
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == \"5 3 1 2 4\"\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == \"7 4 2 3 6 5 1\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4 3 2 1'\nassert solution(stdin='7 4 0 3 0 5 1') == '7 3 2 1 4 5 6'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 1 4 5 3\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"7\\n\"\n    \"7 4 0 3 0 5 1\"\n) == \"7 4 2 3 6 5 1\"\nassert solution(\n    \"5\\n\"\n    \"2 1 0 0 0\"\n) == \"2 1 4 5 3\"\nassert solution(\n    \"5\\n\"\n    \"2 2 0 0 0\"\n) == \"2 2 4 5 3\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\""
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1', solution('5 2\\n3 2 1 2 3')\n\nassert solution('5 2\\n2 1 1 2 1') == 'NO', solution('5 2\\n2 1 1 2 1')"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'YES', \"TEST 1\"\nassert solution('5 2') == 'NO', \"TEST 2\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 2 3') == 'YES'\n\nassert solution('5 2\\n3 2 1 2 3') == 'YES'\n\nassert solution('5 2\\n2 1 1 2 1') == 'NO'"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == \"YES\"\nassert solution('4 2') == \"YES\"\nassert solution('5 2') == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2\\n11010100101') == '3'\nassert solution('1 5 1\\n11010100101') == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 2\") == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n\n'''\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''11 5 2''') == '1'\nassert solution('''11 5 1''') == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n1\n''') == '1'\nassert solution('''5\n0\n1\n''') == '1'\nassert solution('''15\n1\n0\n''') == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11 5 2\n11010100101''') == '1'\nassert solution('''11 5 1\n11010100101''') == '3'\nassert solution('''100000\n11010100101''') == '1'\nassert solution('''1000000\n11010100101''') == '3'\nassert solution('''12\n11010100101''') == '2'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 3\") == \"4\"\nassert solution(\"11 5 4\") == \"5\"\nassert solution(\"11 5 5\") == \"0\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n11010100101\") == \"1\"\nassert solution(\"3\\n11010100010\") == \"3\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nYES\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n2\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'NO'\nassert solution('4') == 'NO'\nassert solution('10') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\nYES\\nNO\\nYES\\nNO', solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''')\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n2\n1\n1\n2\n1\n2\n3\n3\n3\n4\n3\n4\n4\n5\n5\n5\n5\n4\n4\n4\n4\n3\n3\n3\n4\n3\n4\n4\n3\n4\n5\n5\n5\n5\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n5\n5\n5\n5\n4\n4\n4\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'''\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''2\n2\n1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"YES\\nYES\\nNO\\nNO\\nNO\"\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"NO\\nNO\\nYES\\nYES\\nNO\"\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"NO\\nNO\\nNO\\nYES\\nYES\"\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"YES\\nYES\\nYES\\nNO\\nYES\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''4\n1337\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1557\"\nassert solution(\"5\") == \"99999\"\nassert solution(\"2\") == \"99999\"\nassert solution(\"1\") == \"33\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1553\"\nassert solution(\"5\") == \"99999\"\nassert solution(\"2\") == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1557\"\nassert solution(input()) == \"99999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '99999'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1557'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9') == '99999'\nassert solution('1337\\n1 2 5 4 6 6 3 1 9\\n9 8 7 6 5 4 3 2 1') == '1557'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n1 4 7\n2 3 4\n6 5 10\n16 18 19\n13 17 19\n13 17 14\n\"\"\") == \"1 1 2\"\nassert solution(\"\"\"\n5 10 15\n12 13 14\n11 12 14\n12 14 20\n12 14 21\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\n\nprint(solution(input()))"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == \"1 1 3\"\nassert solution('''\n1\n1\n1\n''') == \"0\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\", \"Error\"\nassert solution(\"123 321 456\") == \"102\", \"Error\"\nassert solution(\"5 10 15\") == \"4\", \"Error\"\nassert solution(\"15 18 21\") == \"1 1 3\", \"Error\"\nassert solution(\"100 100 101\") == \"7\", \"Error\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '1 1 1 3'\nassert solution('5 10 15') == '5 1 9'\nassert solution('15 18 21') == '1 1 1 1'\nassert solution('100 100 101') == '2'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3', 'incorrect'\nassert solution('''\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4 4 8 16', 'incorrect'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4 4 8 16', 'incorrect'\n\n'''"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3'\nassert solution('''2\n1 2\n3 4\n5''') == '2'\nprint(solution('''2\n1 2\n3 4\n5'''))\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"1\") == \"1 1 1\"\nassert solution(\"2\") == \"1 1 1\"\nassert solution(\"5\") == \"4 4 4\"\nassert solution(\"4\") == \"4 4 4\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    4\n    1 2 3\n    123 321 456\n    5 10 15\n    15 18 21\n    100 100 101\n    1 22 29\n    3 19 38\n    6 30 46\n    \"\"\") == \"1 1 3\"\n\nassert solution(\"\"\"\n    3\n    1 2 3\n    123 321 456\n    5 10 15\n    15 18 21\n    100 100 101\n    1 22 29\n    3 19 38\n    6 30 46\n    \"\"\") == \"102\"\n\nassert solution(\"\"\"\n    10\n    1 2 3\n    123 321 456\n    5 10 15\n    15 18 21\n    100 100 101\n    1 22 29\n    3 19 38\n    6 30 46\n    \"\"\") == \"7\"\n\nassert solution(\"\"\"\n    8\n    1 2 3\n    123 321 456\n    5 10 15\n    15 18 21\n    100 100 101\n    1 22 29\n    3 19 38\n    6 30 46\n    \"\"\") == \"11\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1'\nassert solution('''6\n4 8 16\n1 19 38\n3 19 38\n6\n6 24 48\n1''') == '12'\nassert solution('''7\n3 19 38\n2\n7\n3 19 38\n4\n7 8 16\n8\n1 22 22\n2\n1 19 38\n3\n3 19 38\n6\n1''') == '2'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 1 100000\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 5 4 10\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1''') == '2'\nassert solution('''2\n1''') == '1'\nassert solution('''5\n1\n3\n2\n4\n5''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n7') == '2'\nassert solution('2\\n1 100000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 1\\n1 2 1\\n\") == \"1 2 3 0 3\"\nassert solution(\"5 2\\n1 3 1\\n1 2 1\\n\") == \"1 2 3 0 3\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '-1'\n\nassert solution('''\n10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(test_case_0) == test_case_0_answer\n\nassert solution(test_case_1) == test_case_1_answer\n\nassert solution(test_case_2) == test_case_2_answer\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n\n3 2\n1 3 1\n1 2 1\n\n4 5 2\n1 5 3\n1 5 1\n\n3 4\n1 5 2\n1 5 1\n\n5 6 2\n1 6 3\n1 6 1\n\n4 7 2\n1 7 3\n1 7 1\n\n2 8 2\n1 8 3\n1 8 1\n\n7 9 2\n1 9 3\n1 9 1''') == '2 2 2 1 1 0 4 3 4 4 "
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'\n\n'''\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 2 3 0 3\"\nassert solution() == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution() == \"-1\"\nassert solution() == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution() == \"2 2 2 1 1 0 4 3 4 4\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == \"1 2 3 0 3\"\nassert solution('3 2') == \"2 2 2 1 1 0 4 3 4 4\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1 2 3 0 3 \nassert solution('5 2') == '1 2 3 0 3 \nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4 \n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''120 51840\n\n42 42\n\n48 72\n\n''') == '7'\nassert solution('''48 72\n\n42 42\n\n120 51840\n\n''') == '-1'\n\nassert solution('''24 56\n\n-24 -56\n\n''') == '-1'\n\nassert solution('''48 72\n\n42 42\n\n120 51840\n\n''') == '7'\n\nassert solution('''48 72\n\n42 42\n\n120 51840\n\n''') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\n\"\"\"\n\nn, m = map(int, input().split())"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''120 51840\n142 51840\n242 51840''') == '7'\nassert solution('''42 42\n42 42''') == '0'\nassert solution('''48 72\n48 72''') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\""
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"42 42\")) == \"0\"\nassert solution(input(\"48 72\")) == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == \"123\"\nassert solution('1 5 3') == \"123456\"\nassert solution('1 5 2') == \"1234\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\n\nassert solution('''3 2\naaa\n''') == 'aaa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abcabcabcabc'\nassert solution('abacaba') == 'abacaba'\nassert solution('abacabaca') == 'abacabaca'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\""
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 3') == '2 3'\nassert solution('3 4') == '3 4'\nassert solution('1 1') == '1 1'\nassert solution('2 2') == '2 2'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 4\naba\n\"\"\") == \"ababababa\"\nassert solution(\"\"\"3 2\ncat\n\"\"\") == \"catcat\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'ababababa'\nassert solution('4 4') == 'ababababa'\nassert solution('3 4') == 'ababababa'\nassert solution('6 1') == 'ababababa'\nassert solution('6 1') == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'ababababa'\nprint('All test cases passed.')"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 1 2 2') == '3'\nassert solution('4 8 3 5 2') == '2 1 4'\nassert solution('5 2 1 2 4 3') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'\nassert solution('''5\n2 1 2 4 3''') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 1 2 4 3''') == '3'\nassert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''8\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '3\\n4 1 5'\nassert solution('''\n4\n8 3 5 2\n''') == '2\\n1 4 \n''')\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n5\n2 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n\na = []\nfor i in range(int(input())):\n    a.append(int(input()))\nprint(sum(a) - sum(set(a)))"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '3'\nprint(solution(input))"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"\""
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3'\nassert solution('4\\n8 3 5 2') == '2'\nassert solution('5\\n2 1 2 4 3') == '0'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\naaaaa\n''') == '15'\nassert solution('''\n5 7\naaaaa\n''') == '-1'\nassert solution('''\n10 100\najihiushda\n''') == '233'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\nabaca\") == \"4\"\nassert solution(\"10 10\\najihiushda\") == \"233\"\nassert solution(\"5 6\\naaaaa\") == \"4\"\nassert solution(\"4 5\\naaaaa\") == -1\nassert solution(\"5 7\\naaaaa\") == -1"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == (solution_part_1)\n\n-----Hints-----\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n\n'''\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 4\nassert solution('5 6') == 15\nassert solution('5 7') == -1\nassert solution('10 100') == 233"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n\n---"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == \"NO\"\nassert solution('''4 5 2\n1 2\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 5 5\n1 2\n1 4\n2 3\n3 4\n4 5''') == \"YES\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\n\n'''"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 1') == 'YES'\nassert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n\n'''"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'\nassert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\nassert solution('4 5 2') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''3 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''3 3 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\"\nassert solution('''4 4 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'First'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'Second'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO', 'Third'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\n\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 2 2 3') == 'NO'\nassert solution('4 5 1') == 'YES'\nassert solution('4 4 3') == 'YES'\nassert solution('4 5 3') == 'YES'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\""
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1:00\n2:00\n''') == '0:00'\nassert solution('''\n13:30\n16:35\n''') == '15:35'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"10:00\\n11:00\"\n    ) == \"10:30\"\nassert solution(\n    \"11:10\\n11:12\"\n    ) == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"10:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '01:02'\nassert solution(input_) == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n\n\"\"\""
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == \"1\"\nassert solution('''27\n5\n5\n6\n8\n9''') == \"2\"\nassert solution('''42\n6\n6\n8\n10\n12''') == \"3\""
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1\"\n\nInput\n2\n\nOutput\n1\n\nInput\n4\n\nOutput\n2\n\nInput\n27\n\nOutput\n5\n\nInput\n42\n\nOutput\n6\n\nInput\n5\n\nOutput\n1\n\nInput\n27\n\nOutput\n5\n\nInput\n49\n\nOutput\n2\n\nInput\n1\n\nOutput\n1\n\nInput\n3\n\nOutput\n1\n\nInput\n5\n\nOutput\n1\n\nInput\n5\n\nOutput\n1\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\n\n'''"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('1000000000000000') == '10'\n\"\"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '1'"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open('test.in').read()) in ('1', '2', '0')\nprint(solution(open('input.in')))\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20''') == '0'\n\nassert solution('''2\n3 10\n1 5\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"7\""
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n\n''') == '1'\n\nassert solution('''\n4\n2 6\n1 3\n0 4\n3 3\n\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n\n''') == '0'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n\n''') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n''') == '7'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n5\n2 5\n''') == \"NO\"\nassert solution('''2\n10 10\n''') == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('''\n4\n10 10\n''') == 'YES'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n\") == \"1\"\nassert solution(\"5 6\\n\") == \"15\"\nassert solution(\"10 100\\n\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4\""
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\nassert solution(input) == \"15\"\nassert solution(input) == \"-1\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\naaaaa''') == '4'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == 4\nassert solution('10 5') == 233\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"10 10\") == \"1\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == 4\nassert solution(\"10 100\") == 233\nassert solution(\"3 6\") == -1"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 5 1\") == \"2\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1 1\n\n''') == '4'\n\nassert solution('''3 2 2\n\n''') == '7'\n\nassert solution('''30 20 10\n\n''') == '39'\n\nassert solution('''1 100 1\n\n''') == '3'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n1 100 1\n''') == '3'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2 1 1\n''') == '4'\n\nassert solution('''\n    3 2 2\n''') == '7'\n\nassert solution('''\n    1 100 1\n''') == '3'\n\nassert solution('''\n    30 20 10\n''') == '39'\n\nassert solution('''\n    30 1 1\n''') == '30'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n1 100 1\n''') == '3'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nprint('All tests passed!')\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n\n\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n\") == \"YES\"\n\nimport sys\nimport io\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"YES\"\nassert solution([1, 2]) == \"NO\"\nassert solution([4, 4]) == \"YES\"\nassert solution([4, 4, 4, 4]) == \"NO\"\nassert solution([3, 3, 3, 3]) == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == 'YES', solution('5 4')\nassert solution('3 4') == 'YES', solution('3 4')\nassert solution('4 5') == 'NO', solution('4 5')\nassert solution('10 10') == 'YES', solution('10 10')"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''3 3\n1 2\n3 4\n5 4\n''') == 'NO'\nassert solution('''2 2\n2 2\n2 2\n''') == 'NO'\nassert solution('''3 3\n1 2\n3 4\n5 4\n''') == 'YES'\nassert solution('''3 3\n1 2\n3 4\n5 4\n''') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n''') == 'YES', 'First'\nassert solution('''5 5\n1 1\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == 'YES', 'Second'\nassert solution('''4 4\n1 2\n2 1\n1 1\n1 1\n''') == 'YES', 'Third'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n''') == 'NO', 'Fourth'\nassert solution('''1 4\n1 1\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO', 'Fifth'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\nassert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\nassert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''2 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '0'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n6\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"4\\n\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\"\n) == \"0\"\n\nassert solution(\n    \"5\"\n) == \"1\"\n\nassert solution(\n    \"6\"\n) == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n\n''') == '0'\nassert solution('''5\n\n''') == '1'\nassert solution('''6\n\n''') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    ) == \"1\"\n\nassert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    ) == \"1\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1\\n(()\\n\") == \"1\"\nassert solution(\n    \"3\\n((((\\n\") == \"3\"\nassert solution(\n    \"2\\n((((\\n\") == \"0\"\nassert solution(\n    \"5\\n(((((()))()\\n\") == \"5\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == '0'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\nassert solution(\"5\") == '5'\nassert solution(\"3\") == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n(()))()\n\n''') == \"5\"\n\nassert solution('''\n3\n(()\n\n''') == \"4\"\n\nassert solution('''\n2\n(((\n\n''') == \"0\""
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n()))()\n\n''') == '4'\n\nassert solution('''4\n(()\n\n''') == '0'\n\nassert solution('''5\n()))()\n\n''') == '5'\n\nassert solution('''2\n(((\n\n''') == '0'\n\nassert solution('''5\n()))()\n\n''') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n(((()))())\n\n3\n(((()))())\n\n2\n(((()))()))\n\n0\n''') == \"5\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n()))()\n\n2\n(((\n\n5\n''') == 5)\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n()))()\n\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"123456789\") == \"29\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == -1"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5071''') == '4'\nassert solution('''705''') == '1'\nassert solution('''1241367''') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == 4\nassert solution('705') == 1\nassert solution('1241367') == -1\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nabacbecfd\n''') == '2'\nassert solution('''\n8\naaabbcbb\n''') == '2'\nassert solution('''\n7\nabcdedc\n''') == '3'\nassert solution('''\n5\nabcde\n''') == '1'"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8\\n') == '2'\nassert solution('9\\n') == '1'\nassert solution('7\\n') == '1'\nassert solution('5\\n') == '1'\nassert solution('3\\n') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\nabcdef') == '2'\nassert solution('7\\nabcd') == '3'\nassert solution('5\\nabcd') == '1'\nassert solution('4\\nab') == '1'\nassert solution('3\\nab') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"1\", f\"first\"\nassert solution(\"\"\"\n2\n\"\"\") == \"2\", f\"second\"\nassert solution(\"\"\"\n7\n\"\"\") == \"3\", f\"third\"\nassert solution(\"\"\"\n8\n\"\"\") == \"1\", f\"fourth\"\nassert solution(\"\"\"\n10\n\"\"\") == \"1\", f\"fifth\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"2\"\nassert solution(\"aabbccddefghij\") == \"3\"\nassert solution(\"aaabbccddefghij\") == \"2\"\nassert solution(\"aaabbccddeefghij\") == \"2\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"1 1 1 1 1 1 1 1\"\nassert solution(\"8\") == \"1 2 1 2 1 2 1 2\"\nassert solution(\"9\") == \"1 1 1 1 1 1 1 1 1\"\nassert solution(\"10\") == \"1 1 1 1 1 1 1 1 1\"\nassert solution(\"11\") == \"1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n9\nabacbecfd\"\"\") == \"2\"\nassert solution(\"\"\"\n8\naaabbcbb\"\"\") == \"2\"\nassert solution(\"\"\"\n7\nabcdedc\"\"\") == \"3\"\nassert solution(\"\"\"\n5\nabcde\"\"\") == \"1\""
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\na\n''') == '3'\nassert solution('''\n7\nc\n''') == '1'\nassert solution('''\n6\nc\n''') == '2'\nassert solution('''\n5\nc\n''') == '1'\nassert solution('''\n4\nb\n''') == '3'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''2\na\na\n''') == 'NO'\nassert solution('''1\na\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n\n\n\n\n---\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n\n''') == 'YES'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == \"YES\"\n\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n\n''') == \"NO\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([8, 4], '12 34 55 43 21') == '5'\nassert solution([5, 2], '3 1 2 1 3') == '0'"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"5\"\n\nassert solution(input_, 6) == \"0\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n3 1 2 1 3\n''') == '5'\nassert solution('''5 100\n12 34 55 43 21\n''') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"3 1 2 1 3\"\n) == \"5\"\n\nassert solution(\n    \"5 100\\n\"\n    \"12 34 55 43 21\"\n) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"8 4\") == \"5\"\nassert solution(\"5 100\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n3 1 2 1 3\n''') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_stdin) == output_stdin\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"8 4\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([[4, 4], [3, 9], [3, 9], [3, 9], [3, 9]]) == \"12\"\nassert solution([[3, 6], [6, 3], [6, 3], [6, 3]]) == \"14\"\nassert solution
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"12\"\nassert solution(input_2) == \"14\"\nassert solution(input_3) == \"14\"\nassert solution(input_4) == \"12\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"5 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3 5\n    ''') == '9', 'First example'\n\nassert solution('''\n    4 4\n    ''') == '12', 'Second example'\n\nassert solution('''\n    3 9\n    ''') == '14', 'Third example'\n\nassert solution('''\n    3 6\n    ''') == '12', 'Fourth example'\n\nassert solution('''\n    506 2708\n    ''') == '3218', 'Fifth example'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n3 9\n9 3\n3 6\n506 2708''') == '3218'\nassert solution('''2 5\n2 3\n1 4\n4 2\n1 5\n''') == '14'\nassert solution('''1 9\n1 2\n3 4\n4 1\n1 5\n''') == '9'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 4]) == \"12\"\nassert solution([3, 9]) == \"14\"\nassert solution([3, 6]) == \"12\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6\\naabccd\\n') == 'NO'\nassert solution(\n    '5\\nabcd\\n') == 'YES'\nassert solution(\n    '4\\nabd\\n') == 'NO'\nassert solution(\n    '3\\nabc\\n') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"abac\") == \"YES\"\nassert solution(\"aacbc\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abc\") == \"YES\"\nassert solution(\"abcd\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'NO'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES'\nassert solution('1') == 'YES'\nassert solution('0') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'NO', \"You failed the 1st test\"\nassert solution('6') == 'YES', \"You failed the 2nd test\"\nprint(solution(input()))\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"25\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\\n\")) == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '-1'\nassert solution('1 2') == '25'"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"25\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    2 2\n    ''') == '25'\nassert solution('''\n    1 1\n    ''') == '-1'\nassert solution('''\n    4 3\n    ''') == '4'\nassert solution('''\n    5 5\n    ''') == '-1'"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n''') == '25'\nassert solution('''\n2 2\n''') == '25'\nassert solution('''\n3 3\n''') == '-1'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 2\n''') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 5') == '2.5'\n\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '25'"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'YES', '1 2 3'\nassert solution('1 1') == 'NO', '1 1'\nassert solution('9 4') == 'NO', '9 4'\nassert solution('8 3') == 'YES', '8 3'\nassert solution('100000 1000') == 'YES', '100000 1000'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3') == 'YES\\n1 2 3 4 5 6 8\\n'\nassert solution('1 1') == 'NO\\n'\nassert solution('9 4') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('26 6') == \"YES\"\nassert solution('8 3') == \"NO\"\nassert solution('1 1') == \"YES\"\nassert solution('9 4') == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"NO\"\nassert solution(\"12 2\") == \"NO\"\nassert solution(\"13 2\") == \"YES\"\nassert solution(\"14 2\") == \"NO\"\nassert solution(\"15 2\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10\n''') == \"NO\"\n\nassert solution('''\n15 5\n''') == \"YES\"\n\nassert solution('''\n23 10\n''') == \"NO\"\n\nassert solution('''\n9 12\n''') == \"YES\"\n\nassert solution('''\n12 16\n''') == \"YES\""
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''9 4\n5\n1 2 3 4 5 6''') == 'YES'\nassert solution('''26 6\n1 2 4 5 6 8''') == 'YES'\nassert solution('''26 5\n1 2 3 4 5''') == 'NO'\nassert solution('''8 3\n5\n1 2 3 4 5''') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 6\n''') == 'NO'\nassert solution('''\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1\") == \"NO\""
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6') == 'YES'\nassert solution('8 3') == 'NO'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n\nprint('All test cases passed!')\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 4\"\n    \"4 6\"\n    \"10 -2\"\n    ) == \"3\"\nassert solution(\n    \"5 20\"\n    \"45 -6\"\n    \"34 -15\"\n    \"10 34\"\n    \"1 27\"\n    \"40 -45\"\n    ) == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 6\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"10 11\\n-1\\n-2\\n1\\n0\") == \"3\"\nassert solution(\"7 1\\n-10\\n10 -10\\n-2\\n-2\\n-3\\n-1\\n2\\n3\\n3\\n\") == \"2\"\nassert solution(\"2 3\\n2 -2\\n1 -1\\n1 -1\") == \"0\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('3 4') == '2'\nassert solution('5 20') == '5'"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\\\n3 4\n4 6\n10 -2\n8 -1\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\\\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\\\n3 2\n300 -300\n1 299\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '1', \"Wrong answer\"\nassert solution('3') == '1', \"Wrong answer\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\nassert solution('''\n1\n10\n''') == 'YES'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\nassert solution(input_copy) == 'YES'\nassert solution(input_copy2) == 'NO'\nassert solution(input_copy3) == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\nassert solution('''\n1\n10\n''') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 1\n3 2 2\n1 2 1''') == 'YES'\n\nassert solution('''4\n1 1 1 1 1 3 3 3 3\n2 2 2 8\n2 2 2 8\n1 2 2 1\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n1 2 2 1\n3 2 2 8\n2 2 2 8''') == 'YES'\n\nassert solution('''5\n1 1 1 1 1 1 3 3 3 3\n2 2 2 8\n2 2 2 8\n1 2 2 1\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n1 2 2 1\n3 2 2 8\n2 2 2 8''') == 'YES'\n\nassert solution('''10\n1 1 1 1 1 1 3 3 3 3\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n1 2 2 1\n3 2 2 8\n2 2 2 8''') == 'YES'\n\nassert solution('''6\n1 1 1 1 1 1 3 3 3 3\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n1 2 2 1\n3 2 2 8\n2 2 2 8\n1 2 2 1\n3 2 2 8\n3 2 2 8\n1 2 2 1\n3 2 2 8\n1 2 2 1\n3 2 2 8''') == 'NO'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    4\n    1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n    '''\n) == 'YES', 'First example'\nassert solution(\n    '''\n    3\n    1 1 1 1 1 3 3 3 3\n    '''\n) == 'YES', 'Second example'\nassert solution(\n    '''\n    4\n    1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n    '''\n) == 'NO', 'Third example'\nassert solution(\n    '''\n    5\n    1 1 1 1 1 3 3 3 3 3 3 3 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n8 8 1 2 2 2 2 2 2 2 2 2 1 8 8 1\\n') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('3\\n1 1 1 1 1 3 3 3 3\\n') == 'NO\\n'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('10\\n') == 'YES\\n10 "
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"4 10\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n\"\"\""
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n\n''') == 'YES', 'Test #1'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n\n''') == 'YES', 'Test #2'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == 'YES', 'Test #3'\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n\n''') == 'NO', 'Test #4'\n\nprint(solution('''\n5 5\n4 -5\n4 -2\n1 3\n\n'''))\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"5 6\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == \"YES\", \"easy\"\nassert solution('''\n\n3 5\n4 -5\n4 -2\n1 3\n\n''') == \"YES\", \"hard\"\nassert solution('''\n\n3 10\n10 0\n10 -10\n30 0\n\n''') == \"NO\", \"hard\""
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"4 10\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''4 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 7') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('100 1 5') == 'NO'\nassert solution('100 1 2') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n7 3 2\n1 2 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 11\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 5\n2\n\"\"\") == \"YES\""
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\nassert solution('''\n7 10 3\n1 2 2 1 3 4 1 2 5\n''') == 'YES'\nassert solution('''\n5 10 4\n1 4 2 3\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\n    \"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\n    \"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0 1\""
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 0') == 'YES'\nassert solution('2 2 1') == 'YES'\nassert solution('10 1 5') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\n    \"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\n    \"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == \"YES\"\nassert solution('''\n10 1 11\n1\n''') == \"YES\"\nassert solution('''\n10 1 5\n2\n''') == \"YES\"\nassert solution('''\n10 1 4\n1\n''') == \"YES\"\nassert solution('''\n10 1 2\n1\n''') == \"YES\"\n\nprint(solution('''\n7 3 2\n1 2 1\n'''))\nprint(solution('''\n10 1 11\n1\n'''))\nprint(solution('''\n10 1 5\n2\n'''))\nprint(solution('''\n10 1 4\n1\n'''))\nprint(solution('''\n10 1 2\n1\n'''))"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 "
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3 2\n1 2 1''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"abcde\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ab') == 1\nassert solution('abcde') == 0\nassert solution('fasd') == 3"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == '3'\nassert solution('baaba') == '2'\nassert solution('abcde') == '0'\nassert solution('asdfasdf') == '3'\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == 3, \"YOUR CODE IS WRONG\""
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n\nprint(solution(input))\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''bbaba\nbb''') == '3'\nassert solution('''baaba\nab''') == '2'\nassert solution('''abcde\nabcde\n''') == '0'\nassert solution('''asdfasdf\nfasd\n''') == '3'\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"\"\nassert solution(\"bb\") == \"3\"\nassert solution(\"ccc\") == \"2\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\nassert solution('''\nbaaba\nab\n''') == 2\nassert solution('''\nabcde\nabcde\n''') == 0\nassert solution('''\nasdfasdf\nfasd\n''') == 3\nassert solution('''\na\n''') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"\") == 0\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n\n'''\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0.5050''') == '4 3'\nassert solution('''0.250000''') == '1 1'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('1.099999') == '4 4'\nprint('All test cases passed...')\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.2\") == \"2 3\"\nassert solution(\"2.2\") == \"3 3\"\nassert solution(\"3.2\") == \"3 3\"\nassert solution(\"4.2\") == \"9 9\"\nassert solution(\"5.2\") == \"10 10\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3 2\"\nprint(solution(input))\n\n##Write the same code in Python 2 and Python 3:\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"3.14159\") == \"10 2\"\nassert solution(\"3.14159\") == \"10 2\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint('Congratulations! All test cases passed!')\n'''"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 3') == 'YES', 'Case 1'\nassert solution('6 2 3') == 'NO', 'Case 2'\nassert solution('10 4 3') == 'YES', 'Case 3'\nassert solution('8 5 3') == 'YES', 'Case 4'\nassert solution('10 5 3') == 'YES', 'Case 5'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 3\n''') == 'YES'\nassert solution('''\n10 4 3\n''') == 'NO'\nassert solution('''\n6 2 3\n''') == 'YES'\nassert solution('''\n10 4 3\n''') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('10 8 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"10 4 5\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES', solution('6 3 3')\nassert solution('6 2 3') == 'NO', solution('6 2 3')\nassert solution('10 4 3') == 'YES', solution('10 4 3')\nassert solution('8 5 3') == 'YES', solution('8 5 3')\nassert solution('10 5 2') == 'YES', solution('10 5 2')\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 3') == 'YES', \"Test\"\nassert solution('6 2 3') == 'NO', \"Test\"\nassert solution('10 4 3') == 'YES', \"Test\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"11\"\nassert solution(\"2 2 2\") == \"00\"\nassert solution(\"3 3 3\") == \"11100\"\nassert solution(\"4 4 4\") == \"111011\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3 6''') == '01010100'\nassert solution('''2 2 1''') == '1100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"1100\", solution(\"2 2 1\")\nassert solution(\"3 3 3\") == \"101100\", solution(\"3 3 3\")\nassert solution(\"5 3 6\") == \"01010100\", solution(\"5 3 6\")\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1100\"\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == \"1100\"\nassert solution(samples[1]) == \"110100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nab\\nbc') == 'acbbac'\nassert solution('3\\naa\\nbc') == 'cacbacbab'\nassert solution('1\\ncb\\nac') == 'abc'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == \"YES\"\n\nassert solution('''3\naa\nbc\n''') == \"YES\"\n\nassert solution('''1\ncb\nac\n''') == \"YES\"\n\nassert solution('''1\nab\nbc''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\nab\\nbc\",\n    \"bc\",\n    \"ab\",\n) == \"YES\"\nassert solution(\n    \"3\\naa\\nbc\",\n    \"acbbac\",\n    \"cb\",\n) == \"YES\"\nassert solution(\n    \"1\\ncb\\nac\",\n    \"acbbac\",\n    \"cb\",\n) == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"acbabacbacbacb\"\nassert solution(\"4\") == \"acbbac\"\nassert solution(\"0\") == \"NO\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n5\n1 1 1 1\n\"\"\") == \"1 2 3 4 5\"\nassert solution(\"\"\"\n7\n-1 -1 1 -1 -1 1 1\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3\\n') == '1 2 3'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('5\\n-1 2 2\\n') == '-1'"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('2\\n-1 2') == '-1'\nassert solution('3\\n1 1 1') == '1 2 3'\nassert solution('4\\n-1 2 3') == '-1'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2 -1 -3 -1'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 -1'\nassert solution('7') == '1 2 3 4 5 -1 -2'\nassert solution('8') == '1 2 3 4 5 -1 -2 -3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '3 1 2'\nassert solution('4\\n-1 2 2') == '-1'\nassert solution('10\\n-1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7 8 9'"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n-1 1 1 1\n\n''') == '3 1 2 4 5'\nassert solution('''2\n-1 1''') == '1'"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 1'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '1 2 3'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1 2'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n2 2 2 3 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n\") == \"1\"\nassert solution(\"5 2 2 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(2)) == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\n\nassert solution('''5\n2 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 5 5 6\") == \"3\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"3 3 3 3 3 3\") == \"4\"\n\n'''\n\n'''\n\nA positive integer n is said to be a special square number if it has the form, a**2+b**2 = c**2, where a,b,c are positive integers.\n\nGiven a positive integer n, you need to determine the number of positive special square numbers less than or equal to n (inclusive).\n\nExample:\nInput: 10\nOutput: 5\nExplanation:\nThe positive special square numbers are: 1, 4, 9, 16, 25\nThere are 5 valid special squares less than or equal to 10.\n\n'''"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"1\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('11') == '3'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100000000000\") == \"100000000000\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '5\\n'\nassert solution('3\\n') == '4\\n'\nassert solution('10\\n') == '4\\n'\nassert solution('11\\n') == '4\\n'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('10') == '5'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\n\n''') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('1') == '0'\nassert solution('3') == '0'\nassert solution('20') == '5'\nassert solution('1000000000') == '99999999999'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n\n''') == '119 226'\nassert solution('''\n686\n479 178 29\n11 145 530\n\n''') == '22 334'\n\nassert solution('''\n3\n0 0 3\n3 0 0\n\n''') == '3 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('3') == '3 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"319\") == \"119 226\""
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\nassert solution('519') == '319'"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 5 5\n0 1 1\n''') == '0 1'\nassert solution('''\n10 5 5\n1 1 0\n''') == '0 1'\nassert solution('''\n15 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''\n686\n479 178 29\n11 145 530\n''') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == '0 1'\nassert solution(\"15\") == '0 15'\nassert solution(\"3\") == '3 3'\nassert solution(\"319\") == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\nassert solution('''\n686\n479 178 29\n11 145 530\n''') == '22 334'"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"1\", \"1\", \"2\"]) == \"0 1\"\nassert solution([\"1\", \"1\", \"1\"]) == \"0 1\"\nassert solution([\"1\", \"1\", \"1\"]) == \"0 1\"\nassert solution([\"1\", \"1\", \"1\"]) == \"0 1\"\nassert solution([\"1\", \"1\", \"1\"]) == \"0 1\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"319\") == \"119 226\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 4 4 4'"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\""
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('11') == '3 4 4 4 4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '3'\nassert solution('4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3'"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution() == '3 4'\nassert solution() == '2 3'\nassert solution() == '1 1'\nassert solution() == '4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n4 1 2 2 1 5 3') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4 4 4 1 1'"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n'\n    '1 1 1 1'\n) == '4 4 4 4'\n\nassert solution(\n    '7\\n'\n    '4 1 2 2 1 5 3'\n) == '3 7 7 7 7 7'\n\nassert solution(\n    '11\\n'\n    '-5 -4 -3 -2 -1 0 1 2 3 4 5'\n) == '2 3 4 5 5 5 4 5 4 5 3 4'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'\nassert solution('1 2 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == 'YES', solution('1 2 3')\nassert solution('3 1 2') == 'NO'\nassert solution('3 1 2 3') == 'NO'"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3\n''') == 'YES'\nassert solution('''4\n1 2 3 2\n''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\n\n1st try\nclass Solution:\n    def solve(self, A):\n        lst = []\n        for i in range(len(A)):\n            s = []\n            for j in range(i, len(A)):\n                s.append(A[j])\n            lst.append(s)\n        for i in range(len(lst)):\n            for j in range(len(lst)):\n                if len(lst[i]) > len(lst[j]):\n                    lst[i], lst[j] = lst[j], lst[i]\n        print(lst)\n        for i in range(len(lst)):\n            for j in range(len(lst)):\n                if len(lst[i]) < len(lst[j]):\n                    lst[i], lst[j] = lst[j], lst[i]\n        print(lst)\n        for i in range(len(lst)):\n            for j in range(len(lst)):\n                if lst[i][0] < lst[j][0]:\n                    lst[i], lst[j] = lst[j], lst[i]\n        print(lst)\n        for i in range(len(lst)):\n            for j in range(len(lst)):\n                if len(lst[i]) > len(lst[j]):\n                    lst[i], lst[j] = lst[j], lst[i]\n        print(lst)\n        return 'YES' if A == lst else 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nabcd\\naccd\\n') == '-1', 'First example'\nassert solution('4\\nabcd\\naccd\\n') == '4', 'Second example'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n3 5 4 5\"\nassert solution(\"3\\nba\") == \"3\""
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nabcd\\naccd\\n') == '-1'\nassert solution('6\\nabcdef\\nabdfec\\n') == '4 3 5 4 5'\nassert solution('2\\nabcd\\naccd\\n') == '0'\nassert solution('8\\nabcd\\naccd\\n') == '5 0 5 1 4 2 3'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == solution_ref(stdin)"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nabcd\\naccd\\n\") == \"-1\"\nassert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5 \n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution(\"3\") == \"3 5 4 5\"\n\nprint(solution())\nprint(solution(\"1\"))\nprint(solution(\"4\"))\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n'\n    'ba\\n'\n    'a\\n'\n    'abab\\n'\n    'a\\n'\n    'aba\\n'\n    'baba\\n'\n    'ab\\n'\n    'aba\\n'\n) == 'SPPSPSPS'\nassert solution(\n    '2\\n'\n    'a\\n'\n    'c\\n'\n) == 'PS'\nassert solution(\n    '3\\n'\n    'a\\n'\n    'c\\n'\n) == 'SP'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"PSPSPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\""
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"PPSS\"\nassert solution() == \"SPSP\"\nassert solution() == \"PSPS\"\nassert solution() == \"SP\"\n\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\", \"First example\"\nassert solution(\"3\") == \"PS\", \"Second example\"\nassert solution(\"2\") == \"PS\", \"Third example\""
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nba\\n') == 'SPPSPSPS'\nassert solution('2\\naa\\n') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\naba\\nab\\nba\\nba\") == \"SP\"\nassert solution(\"4\\nba\\nab\\nab\\nba\") == \"PS\"\nassert solution(\"2\\nba\\n\") == \"SP\"\nassert solution(\"3\\nba\\n\") == \"PS\"\nassert solution(\"4\\nba\\n\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nb\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'PSPS'\nassert solution('''\n2\na\nc\n\n2\na\nc\n''') == 'PS'\nassert solution('''\n2\na\nc\n\n2\na\nc\n''') == 'SPS'\nassert solution('''\n2\na\nc\n\n2\na\nc\n''') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\""
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 6 8 10') == \"1\"\n\nassert solution('2 2 2 2 2') == \"0\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n5''') == '1'\nassert solution('''\n10\n1''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\n\nassert solution('0 1 2 3 4 5') == '5'\n\nassert solution('1 1 1 1 1 1') == '1'\n\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\n\n\n------Resources------\n\nhttps://www.hackerrank.com/challenges/test-case-10-fraction-numbers/problem\nhttps://www.codewars.com/kata/5aa4cb7f3f32d07a49000f1a"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 4 3 2 2 2 2 2 2\n''') == '1'\n\nassert solution('''\n2\n1 1\n''') == '1'\n\nassert solution('''\n5\n1 1 2 2 2\n''') == '1'\n\nassert solution('''\n5\n2 4 2 3 2\n''') == '2'\n\nassert solution('''\n7\n1 1 1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 4, 6, 8, 10]) == \"1\"\nassert solution([3, 5, 4, 5, 6, 7]) == \"3\"\nprint(\"Test passed\")\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('3 4 6 8 10') == '2'\nassert solution('3 4 6 8 1') == '3'\nassert solution('3 4 6 8 -1') == '3'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('10 5 2 0 3 10 8 1 1 1 1') == '1'\nassert solution('5 6 8 10 0 2 1') == '0'\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 6 8 10\n\n''') == '1'\nassert solution('''\n2 2\n\n''') == '2'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 0 1 1 0 1 0 1 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"3\\n1 1 1\") == \"2\"\nassert solution(\"10\\n0 1 0 1 0 0 0 0 0 1\") == \"2\"\nassert solution(\"11\\n0 1 1 0 0 0 0 0 0 0 1\") == \"1\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == \"2\"\nassert solution('5') == \"0\"\nassert solution('4') == \"0\""
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 1 1') == '0'\nassert solution('4\\n1 1 1') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"2\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 1 1\\n') == '0'\nassert solution('4\\n1 1 1\\n') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 1 0 1 1 0 1 0 1\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n3\n1 1 0 0\n''') == '0'\nassert solution('''\n2\n1 1 0 0\n''') == '0'"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"4\""
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == \"1\"\nassert solution('6 90 12 18 30 18') == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"2\\n1 2 3\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n\") == \"1\"\nassert solution(\"4\\n1 2 3\\n\") == \"3\"\nassert solution(\"8\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n1 2 3 4 5\\n'\n) == '1'\nassert solution(\n    '6\\n6 90 12 18 30 18\\n'\n) == '4'\nprint('All tests passed!')"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 3 4 5\\n') == '1'\nassert solution('1\\n1 2 3 4 5\\n') == '1'\nassert solution('1\\n1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '1', f\"solution('5') == '1'\"\nassert solution('''\n6\n6 90 12 18 30 18\n''') == '4', f\"solution('6') == '4'\""
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('6') == '4'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 3 3 2') == '2'\nassert solution('6\\n1 2 4 3 3 2') == '1'\nassert solution('1\\n100') == '1'\nassert solution('4\\n2 2 2 2 2') == '1'\nassert solution('5\\n1 2 3 4 3 2') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n100\n\n1\n50\n\n2\n100\n\n1\n50\n\n2\n100\n\n1\n50\n\n''') == \"2\"\nassert solution('''\n1\n100\n\n2\n100\n\n1\n50\n\n2\n100\n\n1\n50\n\n''') == \"2\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('3\\n1 2 2 2') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '1'\nassert solution('''\n1\n2\n''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution([1, 2, 4, 3, 3, 2]) == '2'\nassert solution([10, 10, 10, 10]) == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 4 3 3 2') == '2'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('8\\n1 2 4 3 3 2') == '3'\nassert solution('9\\n1 2 4 3 3 2') == '4'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 4 3 3 2\n''') == '2'\nassert solution('''\n6\n1 2 4 3 3 2\n''') == '1'\nassert solution('''\n10\n3 5 4 3 3 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n100\n1 2 4 3 3 2''') == '2', 'Basic Tests'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('10 1') == '-1'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"5 10\") == \"3\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 2\\n\"\n    \"0 1 1 0 0 1\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"5 3\\n\"\n    \"0 0 1 1 0 1 0 0 0 1\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"10 3\\n\"\n    \"0 0 1 1 0 1 0 0 0 1\\n\"\n) == \"3\\n\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n0 0 0 0 0') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 0') == '-1'\nassert solution('5 10\\n0 0 1 0 0 1 0 0 0 1') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '3'\nassert solution('5 10') == '3'\nassert solution('6 3') == '2'\nassert solution('6 10') == '-1'\nassert solution('10 3') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"3\"\nprint(solution(input_data))\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data='''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution(input_data='''5 3\n1 0 0 0 1\n''') == '2'\nassert solution(input_data='''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution(input_data='''10 10\n0 0 1 1 0 1 0 0 0 1\n''') == '-1'"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3''') == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\n\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3'\nassert solution('1') == '0'\nassert solution('3') == '3'\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"3\"\n\n-------\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"7\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == \"3\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"2\\n\") == \"1\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n''') == '3'\nassert solution('''\n5\n''') == '0'\n'''\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"1\\n\"\nassert solution(\"5\") == \"2\\n\"\nassert solution(\"8\") == \"3\\n\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '6'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"()()\") == \"0\"\nassert solution(\"((()))\") == \"1\"\nassert solution(\")(\") == \"0\"\nassert solution(\"(())\") == \"1\"\nassert solution(\"(()))\") == \"1\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''(\n((((\n    )\n    )\n''') == '0')\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n(((())\n''') == \"3\""
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"(((())\") == \"3\"\nassert solution(\"()\") == \"0\"\nassert solution(\"(((())))\") == \"2\"\nassert solution(\"()\") == \"0\"\nassert solution(\"()()\") == \"1\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"12\") == \"4\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''(((()))''') == '1'\nassert solution('''((()))''') == '0'\nassert solution('''(((()))''') == '1'\nassert solution('''((()))''') == '0'\nassert solution('''(((()))''') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n(((())\n''') == '')\nassert solution('''\n((()()()\n''') == '')\nassert solution('''\n)(((((()))\n''') == '')\nassert solution('''\n()()()()\n''') == ''\nassert solution('''\n)()()()\n''') == ''\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nprint(solution(input()))"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''(((())\n''') == '3'\nassert solution('''(()(\n''') == '0'\nassert solution('''(((((((\n''') == '3'\n\nassert solution('''(()\n''') == '0'\nassert solution('''((((((((((((\n''') == '4'"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n        \"()()()\"\n    ) == \"3\"\n\nassert solution(\n        \"(()())\"\n    ) == \"0\"\n\nassert solution(\n        \")()(())\"\n    ) == \"3\"\n\nassert solution(\n        \")(\"\n    ) == \"0\"\n\nassert solution(\n
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbaba') == '3'\nassert solution('bb') == '2'\nassert solution('ab') == '0'\nassert solution('asdfasdf') == '3'\nassert solution('abcde') == '2'\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 0\nassert solution('asdfasdf') == 3"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ba') == 2\nassert solution('asdfasdf') == 0\nassert solution('a') == 1\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('ba') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\n\nassert solution('''\nbaaba\nab\n''') == 2\n\nassert solution('''\nabcde\nabcde\n''') == 0\n\nassert solution('''\nasdfasdf\nfasd\n''') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"abcde\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 0\nassert solution('ab') == 2\nassert solution('asdfasdf') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ba') == 1\nassert solution('asdfasdf') == 0\nassert solution('abcde') == 0\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 2 3\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('5 6 4 7') == '21'\nassert solution('5 8 2 2') == '12'\nassert solution('5 7 3 2') == '9'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 2, 1, 1]) == '2'\nassert solution([1, 2, 3, 4]) == '6'\nassert solution([10, 20, 30, 40]) == '50'\nassert solution([100, 200, 300, 400]) == '200'\nassert solution([1000, 2000, 3000, 4000]) == '4000'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"3 1 2 3\") == \"6\""
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 2 3 2') == '6'\n\n----------------------------------------------------------------------\n13 - Write a program which can compute the factorial of a given numbers.\nThe results should be printed in a comma-separated sequence on a single line.\nSuppose the following input is supplied to the program:\n8\nThen, the output should be:\n40320\n\n----------------------------------------------------------------------\n14 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n15 - Write a program which can compute the factorial of a given numbers.\nThe results should be printed in a comma-separated sequence on a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n120\n\n----------------------------------------------------------------------\n16 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n17 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n18 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n19 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n20 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n21 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n22 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n23 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n24 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n25 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n26 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n27 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n28 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n29 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n30 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n31 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n32 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n33 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n34 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n35 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n36 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n37 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n38 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n10\nThen, the output should be:\n55\n\n----------------------------------------------------------------------\n39 - Write a program which can compute the sum of the first n natural\nnumbers. The results should be printed in a comma-separated sequence\non a single line.\nSuppose the following input is supplied to the program:\n5\nThen, the output should be:\n15\n\n----------------------------------------------------------------------\n40 - Write a program which can compute the"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '2'\nassert solution('2 2 2 2') == '4'"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 2 1') == '3'\nassert solution('1 3 5 1') == '6'\nassert solution('8 9 7 8') == '14'\nassert solution('3 9 5 4') == '22'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n\"\"\"\n\na, b, c, d = map(int, input().split())"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n\"\"\""
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n9 1 4 4 6 7\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 5\n''') == '2'\nassert solution('''\n2\n1 5\n''') == '2'\nassert solution('''\n3\n6 8 7\n''') == '2'\nassert solution('''\n3\n2 5 7\n''') == '2'\nassert solution('''\n3\n1 5 4\n''') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"7\") == \"3\"\nassert solution(\"5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('3\\n5 3 2 5 3') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22') == '3'"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == 3\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('100 100 100 100\\n100 100 100 100') == '5'\nassert solution('1 10 1 10 1\\n10 1 1 1') == '0'\nassert solution('5 2 1 2 1\\n1 2 1 2 1') == '3'\nassert solution('2 4 5 1 2 3\\n1 3 2 1 3') == '4'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 24 21 23\"\n) == \"3\"\n\nassert solution(\n    \"1 5 3 3\"\n) == \"2\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23') == \"3\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == \"3\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '3'\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint(solution(input))\nprint"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"10 20 4 6 2 3 7 8 8 8 9 9 9 9 9\") == \"7\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == \"3\"\nassert solution('''7 1 2\n1 1''') == \"1\"\nassert solution('''1 1\n1 1''') == \"1\"\nassert solution('''6 3\n2 1\n3 4\n5 1\n1 3\n3 4\n5 6''') == \"4\"\nassert solution('''7 24 21 23\n16 17 14 20 20 11 22\n7 1 2\n1 1''') == \"2\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 2 5 6 7 10 21 23 24 49\n''') == \"4\"\nassert solution('''\n5\n2 10 50 110 250\n''') == \"1\"\nassert solution('''\n6\n4 7 12 100 150 199\n''') == \"3\"\n\n'''"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '2'\nprint('\"Run\" is good. Your \"solution\" is awesome!')\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 0\nassert solution('10') == 4\nassert solution('5') == 1\nassert solution('6') == 3\n\n\"\"\"\nfrom itertools import combinations"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5 6 7 10 21 23 24 49\\n\") == \"4\"\nassert solution(\"5 2 10 50 110 250\\n\") == \"1\"\nassert solution(\"6 4 7 12 100 150 199\\n\") == \"3\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n5\n2 10 50 110 250\n\n6\n4 7 12 100 150 199\n\n4\n2 10 50 110 250\n\n3\n2 10 50 110 250\n\n2\n1 2 5 6 7 10 21 23 24 49\n\n1\n5\n''') == \"4\"\nassert solution('''\n5\n2 10 50 110 250\n\n4\n2 10 50 110 250\n\n3\n2 10 50 110 250\n\n2\n1 2 5 6 7 10 21 23 24 49\n\n1\n5\n''') == \"3\"\nassert solution('''\n5\n2 10 50 110 250\n\n4\n2 10 50 110 250\n\n3\n2 10 50 110 250\n\n2\n1 2 5 6 7 10 21 23 24 49\n\n1\n5\n''') == \"4\"\nassert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n5\n2 10 50 110 250\n\n6\n4 7 12 100 150 199\n\n4\n2 10 50 110 250\n\n3\n2 10 50 110 250\n\n2\n1 2 5 6 7 10 21 23 24 49\n\n1\n5\n''') == \"4\"\nassert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n5\n2 10 50 110 250\n\n6\n4 7 12 100 150 199\n\n4\n2 10 50 110 250\n\n3\n2 10 50 110 250\n\n2\n1 2 5 6 7 10 21 23 24 49\n\n1\n5\n''') == \"3\""
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"4 5\""
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"2 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2'"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\"\nprint(solution())"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4''')\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(input) == output\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '0'\nassert solution(\"2\") == '0'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '1'\nassert solution(\"5\") == '1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '021'"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('121') == '021'\nassert solution('120110') == '120120'\nassert solution('121') == '021'\nassert solution('120110') == '120120'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '021'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3\\n121'\n) == '021'\nassert solution(\n    '6\\n000000'\n) == '001122'\nassert solution(\n    '6\\n211200'\n) == '211200'\nassert solution(\n    '6\\n120110'\n) == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211200'\nassert solution('''6\n120110''') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '10'\nassert solution('100') == '10'\nassert solution('101') == '11'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\\\n3\n121\n\nOutput\n021\\\n''') == '021', 'Simple'\nassert solution('''\\\n6\n000000\n\nOutput\n001122\n\nInput\n6\n211200\n\nOutput\n211200\n\nInput\n6\n120110\n\nOutput\n120120\n''') == '120120', 'Longest'"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n120110\n''') == '120120'\nassert solution('''\n2\n211200\n''') == '211200'\nassert solution('''\n3\n120110\n''') == '1201020'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1\n3\n\n>>> solution(''') == '4'\nTrue\n\nassert solution('''10 1\n2\n\n>>> solution(''') == '16'\nTrue\n\nassert solution('''20 1\n2\n\n>>> solution(''') == '36'\nTrue\n\nassert solution('''30 1\n2\n\n>>> solution(''') == '108'\nTrue\n\nassert solution('''40 1\n2\n\n>>> solution(''') == '276'\nTrue"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '4','sample test 1'\nassert solution('6 1') == '5','sample test 2'\nassert solution('6 2') == '2','sample test 3'\nassert solution('7 1') == '3','sample test 4'\nassert solution('7 2') == '3','sample test 5'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '4'\nassert solution('5 2') == '4'\nassert solution('6 5') == '7'\nassert solution('4 5') == '7'\nassert solution('2 4') == '7'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '5'\nassert solution('6 3') == '3'\nassert solution('6 4') == '0'\nassert solution('6 5') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '4'\nassert solution('10 10') == '26'\nassert solution('100 10') == '204'\nassert solution('1000 10') == '1024'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6 1\") == \"5\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 1\n3\n''') == '4'\nassert solution('''5 2\n2\n''') == '3'\nassert solution('''10 1\n1\n''') == '10'\nassert solution('''5 2\n3\n''') == '9'\nassert solution('''2 2\n1\n''') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4', 'Wrong answer'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 2 4') == '2'\n\"\"\"\nfrom math import floor\n\nx, k, d = list(map(int, stdin.split()))\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([6, 2, 4]) == '2'\nassert solution([4, -2, 5]) == '-2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"-10 2 4\") == \"0\"\nassert solution(\"-6 2 4\") == \"2\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 2 -4') == '2'\nassert solution('3 4 2') == '2'\nassert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"6 2 1\") == \"1\"\nassert solution(\"6 2 5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 2 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"7 8 9\") == \"9\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 10 5\") == \"1\"\nassert solution(\"4 10 5\") == \"0\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\nassert solution('2128506') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('100') == '1'\nassert solution('964') == '3'\nassert solution('987654321') == '4'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('3') == '3'\nprint(solution(input()))"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('100000000') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\n\n---\n\nsolution = lambda n:\n    return\n\n\n\n----\n\n=====\n\nCodeWars - Testing\nhttps://www.codewars.com/kata/52593b736e0e33b8d400001e\n\n(c) 2020 Codewars\n\nA string is a valid parentheses string (denoted VPS) if and only if it consists of \"(\" characters, followed by a \")\",\nand it has no other characters (including \" \").\n\nGiven a VPS represented as a string, return true if the string is a valid VPS, or false otherwise.\n\nExamples\n\"()\"   =>   true\n\"(()())()\"   =>   true\n\"(\"   =>   false\n\"(()(()))\"   =>   false\n\"\"\""
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('15') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['11', '2', '0', '0', '0']) == '2'\nassert solution(['14', '0', '0', '0', '0']) == '0'\nassert solution(['61441', '2', '0', '0', '0']) == '2'\nassert solution(['571576', '0', '0', '0', '0']) == '10'"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"27\"\nassert solution(\"8\") == \"27\"\nassert solution(\"10\") == \"26\"\nassert solution(\"30\") == \"27\"\n\n\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '27'\n\n\n\"\"\""
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\".1\") == \"1\", \"Error\"\nassert solution(\"1\") == \"1\", \"Error\"\nassert solution(\"11\") == \"11\", \"Error\"\nassert solution(\"1.1\") == \"1.1\", \"Error\"\nassert solution(\"1.11\") == \"1.11\", \"Error\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"27\"\n\n\"\"\"\n\na = int(input())\nfor x in range(1, a + 1):\n    print(x * x)\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '9'\nassert solution('7') == '21'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\""
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '27'\nassert solution('5') == '20'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '24', 'Should be 24'\nassert solution('5') == '30', 'Should be 30'\nassert solution('6') == '36', 'Should be 36'\nassert solution('7') == '42', 'Should be 42'\nassert solution('8') == '48', 'Should be 48'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\"\"\""
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1', solution('13')\nassert solution('927') == '1', solution('927')\nassert solution('48') == '0', solution('48')\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(0) == '0'\nassert solution(1) == '1'\nassert solution(2) == '0'\nassert solution(3) == '0'\nassert solution(4) == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('123') == '1'\nassert solution('48') == '0'\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['2', '5', '3', '1']) == '4'\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        ans = max(ans, a[j] - a[i])\n\nprint(ans)\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '31', \"3\"\nassert solution('2 2 1') == '9', \"2, 2, 1\"\nassert solution('2 3') == '3', \"2, 3\"\nassert solution('3 2 1') == '13', \"3, 2, 1\"\nassert solution('12') == '12', \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\"\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '1 2 3 1 1 2'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n'''"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5 3 1') == '4'\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(4) == \"4\"\n\n'''\n\n\nclass Solution:\n    def solve(self, n: int, a: list) -> int:\n        return '4'"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n3\n1\n''') == '4'\n\nassert solution('''\n8\n4 5 2 3 1 9 8\n''') == '7'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n7 8\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\") == \"999999733\"\n\nassert solution(\"\"\"\n5\n999999999 1\n999999999 1\n999999998 1\n999999998 1\n999999998 1\n\"\"\") == \"999999998\"\n\nassert solution(\"\"\"\n3\n999999999999999999 1\n99999999999999999999999 1\n999999999999999999999999999 1\n\"\"\") == \"999999999999999999999999999\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 7\n8 1\n6 10''') == '2'\nassert solution('''5\n10 10\n999999999 10\n999999999 999999998\n999999999 999999999''') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 1\n''') == '1'\n\nassert solution('''\n1\n10 10\n''') == '1'\n\nassert solution('''\n2\n8 1\n''') == '2'\n\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733\n''') == '8'\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 7\") == \"1\"\nassert solution(\"3\\n9 9\") == \"2\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 3\\n') == '1'\nassert solution('2\\n3 4\\n') == '2'\nassert solution('3\\n6 6\\n') == '4'\nassert solution('5\\n99999999999999999999999999999 9999999999999999999999999999999\\n') == '999999999999999999999999999999'\nassert solution('5\\n99999999999999999999999999999999999999999999999999999 9999999999999999999999999999999\\n') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732') == '2'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999733') == '1'"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733\n''') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n''')"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n0 1\") == \"0\"\nassert solution(\"5 5\\n1 1 1 1 1\\n0 1 0 1\") == \"0\"\nassert solution(\"5 5\\n1 1 1 1 1\\n0 1 0 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('2 1 2\\n1 2') == '2'\nassert solution('2 1\\n1 2') == '1'\nassert solution('4 3\\n1 2 1 2\\n1 2') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n2 3 1 5 4\n1 2\n0 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1 2\n0 1\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\""
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 2]) == '1'\nassert solution([1, 2]) == '2'\nassert solution([1, 1]) == '0'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"2\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 9 0''') == '5.0000000000'\nassert solution('''3 4 9 0''') == '5.0000000000'\nassert solution('''1 2 5 4 3''') == '7.0000000000'\nassert solution('''1 2 5 4 3''') == '7.0000000000'\nassert solution('''2 3 7 1 5''') == '11.0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 3 4 5') == '0.5'\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('5 3 1 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 5 8') == '3.82842'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1 1 1 1\") == \"1.00000000000000000\"\nassert solution(\"10 10 10 10\") == \"10.00000000000000000\"\nassert solution(\"10 10 10 10\") == \"1.00000000000000000\"\nassert solution(\"10 10 10 10\") == \"1.00000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3 9 0') == '5.00000000000000000000'\nassert solution('4 4 4 1') == '2.299999999999999'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 9 0\") == \"5.0\"\nassert solution(\"6 2 8 0\") == \"3.9999999999999994\"\nassert solution(\"2 3 0\") == \"3.0\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 9 0''') == '5.0000000000'\nassert solution('''10 7 2 8''') == '18.0000000000'''\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.0000000000\"\nassert solution(input(\"\")) == \"5.0000000000\"\nassert solution(input(\"1234\")) == \"5.0000000000\"\nassert solution(input(\"123\")) == \"5.0000000000\"\nassert solution(input(\"12\")) == \"5.0000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == '8'\nassert solution(\"3 1\\n1 1 1\\n\") == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '8'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n\nprint(solution(input()))"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\"\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"1 4 5 60 4\\n\"\n    \"5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5 4\n1 4 5 60 4\n\n''') == '8'\nassert solution(\n'''\n3 1\n1 1 1\n\n''') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_str) == \"8\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\nassert solution('5 3\\n1 2 3 1 2\\n1 2 3 1 2') == '3 2'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n2 -2 3 1\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(test_input_1) == \"6\"\nassert solution(test_input_2) == \"7\""
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\"\"\"\n) == \"7\"\nassert solution(\n\"\"\"\n1 0\n1000000\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n0 0\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n1 0\n2 0\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 0\n2 5\n3 4\n4 5''') == '6'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == print_(*output_)\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n1 0\n1000000\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\n\"\"\") == \"No\"\nassert solution(\"\"\"\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == \"Yes\"\nassert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('3\\ncd\\nab\\n') == 'No\\nNo\\nNo'\nassert solution('1\\n') == 'Yes\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(io.StringIO('''\\\n3\nabc\nxyz\nx\n''')) == 'Yes\\nYes\\nYes'\nassert solution(io.StringIO('''\\\n1\nfced\n''')) == 'Yes\\n'\nassert solution(io.StringIO('''\\\n2\nabc\nxyz\nx\n''')) == 'No\\nNo'\nassert solution(io.StringIO('''\\\n3\nabc\nxyz\nx\n''')) == 'No\\nNo\\nYes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nfced\\nxyz\\nr\\n') == 'Yes'\nassert solution('5\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'No'\n\nsolution('7\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n')\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n2 5\n1 3''') == '6\nassert solution('''1 0\n1000000''') == '0'''"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '6'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 -2 3 1 2') == '6'\nassert solution('5 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000') == '0'"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6\\n2\\n4 1 \n\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7\\n2\\n3 2 \n\nassert solution('''\n1 0\n1000000\n''') == '0\\n0\n\nassert solution('''\n1\n10\n''') == '0\\n0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"7\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0'\nassert solution('1000000') == '0'\nassert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '7'\nassert solution('3 5') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 3') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"4\"\nassert solution(input_) == \"LLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LL'\nassert solution('4') == 'LLL'\nassert solution('1 2 3') == 'LLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''5\n2 1 5 4 3\n\n''') == '4'\n\nassert solution(\n    '''7\n1 3 5 6 7 4 2\n\n''') == '7'\n\nassert solution(\n    '''3\n1 2 3\n\n''') == '3'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'LLR'\nassert solution('2 3 1') == 'RLL'\nassert solution('3 4 1') == 'LRL'\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n3\n1 2 3\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\\\n5\n2 1 5 4 3\n\"\"\") == \"RLLR\"\nassert solution(\"\"\"\\\n7\n1 3 5 6 7 4 2\n\"\"\") == \"RLRLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"LLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRL\"\nassert solution(input()) == \"7\"\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '2'\nassert solution('10') == '4'\nassert solution('3') == '3'\nassert solution('20') == '4'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '4'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '1'\nassert solution('5 4') == '0'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\""
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 3\\n'\n    '1 2 2 4 5\\n'\n    ) == '1'\nassert solution(\n    '5 3\\n'\n    '1 2 3 4 5\\n'\n    ) == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 3\\n'\n    '1 2 2 4 5\\n'\n) == '1'\nassert solution(\n    '5 3\\n'\n    '1 2 3 4 5\\n'\n) == '2'\nassert solution(\n    '5 3\\n'\n    '1 2 3 3 3\\n'\n) == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 2 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '0'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n1\n''') == '1', 'easy'\nassert solution('''\n5 3\n1 2 2 4 5\n''') == '1', 'easy'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2', 'easy'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0', 'easy'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0', 'easy'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 3 3\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"3 5 1 5 4\") == \"2\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 10 1\") == \"8\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\") == \"4\"\nassert solution(\"8 3 4\") == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5\n5\n''') == '4'\nassert solution('''3\n5\n4\n''') == '0'\nassert solution('''5\n5\n5\n''') == '4'\nassert solution('''5\n5\n4\n''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4\\n') == '4'\n\n--------------------------------------------------------------"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"10 2 4\") == \"3\"\n\n'''\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 3 4\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n8 3 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"12345678\") == \"10\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 2 7\") == \"5\"\nassert solution(\"6 2 4\") == \"6\"\n\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n=========================================\n================================"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\nassert solution('''\n2\n8\n2 6\n1\n1\n''') == '1'\nassert solution('''\n5\n8 2 12 6 4 24 16 3\n1\n2\n''') == '1'\nassert solution('''\n3\n8 2 12 6 4 24 16 3\n1\n2\n''') == '1'\nassert solution('''\n4\n8 2 12 6 4 24 16 3\n1\n2\n3\n''') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n8\\n2 2 12 6 4 24 16 3\") == \"4\"\nassert solution(\"2\\n8\\n1 2 3 4 5\") == \"-1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n7\n1 2 3 4 5 6 7\n''') == '-1'\nassert solution('''\n5\n8\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5\n2\n1 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '4'\nassert solution('3') == '-1'\nassert solution('4') == '4'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"8\") == '48'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '4'"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n''') == '48'\nassert solution('''\n1\n1\n\n''') == '1'\nassert solution('''\n4\n1\n2\n3\n4\n\n''') == '-1'\nassert solution('''\n4\n8\n2\n6\n3\n\n''') == '3'\nassert solution('''\n4\n10\n7\n9\n2\n5\n3\n6\n4\n1\n\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4 2 8 16\n''') == '8', \"First\"\n\nassert solution('''\n2\n1 2\n''') == '-1', \"Second\"\n\nassert solution('''\n20\n
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '1\\n'\nassert solution('2\\n8\\n') == '8\\n'\nassert solution('3\\n10\\n8 2 6 4') == '10\\n'\nassert solution('4\\n40\\n16 3 8 5 2') == '16\\n'\nassert solution('5\\n500\\n14 29 47 13 37 2') == '14\\n'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n\n\n\"\"\"\n\n\nimport math\n\nt = int(input())\n\n\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    count = 0\n    \n    for i in a:\n        count = 0\n        for j in range(2, int(math.sqrt(i)) + 1):\n            if i % j == 0:\n                count += 1\n        if count == 0 and i!= 1:\n            count += 1\n        \n        if count > n / 2:\n            print(i)\n            break\n    else:\n        print(-1)\n\n\"\"\"\n1\n5\n1 2 3 5\n4\n1 2 3 5\n2\n1 2\n5\n1 2 3 4\n\"\"\""
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n8\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n7\n0 1 2 3 4 5 6\n1\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 2 2 \n''') == '2 2 2'\nassert solution('''\n3\n6 6 6 6 \n''') == '1 6'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2 1'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 5 5 1 6 1\n\n''') == '3'\nassert solution('''5\n2 4 2 4 4\n\n''') == '2'\nassert solution('''5\n6 6 6 6 6\n\n''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('5') == '2'\nassert solution('6 6 6 6 6') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n2 4 1\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 2 4 4') == '2 4'\nassert solution('6 6 6 6 6') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3'\nassert solution('5') == '6'\nassert solution('6') == '1'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '1\\n6 6\\n'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2\\n4\\n'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1\\n6 6\\n'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n4 4 4 4 4\n''') == '1'"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"11\"\nassert solution(\"123\") == \"125\"\nassert solution(\"233\") == \"235\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n42\n''') == '44'\n\nassert solution('''\n99\n''') == '103'\n\nassert solution('''\n237\n''') == '237'\n\nassert solution('''\n432\n''') == '435'\n\nassert solution('''\n1\n''') == '1'"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"12\") == \"13\"\nassert solution(\"123\") == \"125\"\nassert solution(\"9\") == \"10\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '1'\nassert solution('42') == '44'\nassert solution('42a') == '44'\nassert solution('42A') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\nassert solution('6') == '7'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'aba'\nassert solution('abbb') == 'abbb'\nassert solution('abba') == 'aba'\nassert solution('abbbb') == 'abbbb'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'a'\nassert solution('abba') == 'abba'\nassert solution('ecoosdcefr') == 'ecoosdcefr'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aab\"\nassert solution(\"aba\") == \"aba\"\nassert solution(\"acd\") == \"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"input_test_1.txt\") == \"aba\"\nassert solution(\"input_test_2.txt\") == \"ba\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nabc\n1\n0\n\"\"\") == \"aac\"\nassert solution(\"\"\"\naba\n1\n0\n\"\"\") == \"a\"\nassert solution(\"\"\"\nabc\n3\n1 0 1\n\"\"\") == \"b\"\nassert solution(\"\"\"\naba\n3\n1 0 1\n\"\"\") == \"a\"\nassert solution(\"\"\"\naaaa\n1\n0\n\"\"\") == \"a\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nabac\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"5\\naba\\n1\\n0\\nabba\\n3\\n1 0 1\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aab\"\nassert solution(\"5\\naba\\n1\\n0\\nabba\\n3\\n1 0 1\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aba\""
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n6\\nabzb\\n\") == \"abzb\"\nassert solution(\"1\\n10\\nabzac\\n\") == \"abzc\"\nassert solution(\"1\\n10\\nacbca\\n\") == \"abacd\"\nassert solution(\"1\\n11\\nabacd\\n\") == \"abcb\""
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"aba\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"b\"\nassert solution(\"4\") == \"aac\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"aac\""
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aab\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"ecosdcefr\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"38 13 24 14 11 5 3 24 17 0\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'b'"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep.''') == 'ba'\nassert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep.''') == 'aa'\nassert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep.''') == 'aaaa'\nassert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep.''') == 'aab'\nassert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep.''') == 'aab'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == 'a'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ab'\nassert solution('3') == 'aab'\nassert solution('4') == 'aaab'\nassert solution('5') == 'aaaab'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n\n\"\"\") == \"a\", \"Should be: a\"\nassert solution(\"\"\"\n9\n\n\"\"\") == \"aa\", \"Should be: aa\"\nassert solution(\"\"\"\n1000000000000001\n\n\"\"\") == \"aaa\", \"Should be: aaa\"\nassert solution(\"\"\"\n1000000000000001\n\n\"\"\") == \"aaaa\", \"Should be: aaa\"\nassert solution(\"\"\"\n1000000000000001\n\n\"\"\") == \"aaaaa\", \"Should be: aaa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1\n2\n''') == 'b'\nassert solution('''1\n1\n1\n''') == 'a'\nassert solution('''5\n27\n28\n29\n701\n702\n703\n''') == 'aaaabzzzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\nassert solution('5') == 'e'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n' +\n                'a a a a a a b\\n' +\n                'b b b b b a\\n' +\n                'c c c c c c\\n' +\n                'd d d d d d d') == \"12\"\n\nassert solution('5\\n' +\n                'a a a a a a b\\n' +\n                'b b b b b a\\n' +\n                'c c c c c c\\n' +\n                'd d d d d d d') == \"11\"\n\nassert solution('5\\n' +\n                'a a a a a a b\\n' +\n                'b b b b b a\\n' +\n                'c c c c c c\\n' +\n                'd d d d d d d') == \"10\"\n\nassert solution('1\\n' +\n                'a\\n' +\n                'b\\n' +\n                'c\\n' +\n                'd') == \"0\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == str(output)\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\nto be or not to be\n''') == '12'\nassert solution('''\n2\naa bb aa aa bb bb\n''') == '11'\nassert solution('''\n2\nAB aa AB bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nto be or not to be\n''') == '12'\nassert solution('''\n3\naa bb aa aa bb bb\n''') == '11'\nassert solution('''\n5\nTB or not TB\nAB aa AB bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n\"\n    \"to be or not to be\\n\"\n) == \"12\"\nassert solution(\n    \"10\\n\"\n    \"a ab a a b ab a a b c\\n\"\n) == \"13\"\nassert solution(\n    \"6\\n\"\n    \"aa bb aa aa bb bb\\n\"\n) == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    to be or not to be\n    ''') == '12'\nassert solution('''\n    aa bb aa aa bb bb\n    ''') == '13'\nassert solution('''\n    AB aa AB bb\n    ''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_stdin) == example_output_stdout\nassert solution(input_stdin) == output_stdout\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"13\"\nassert solution(input()) == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nto be or not to be') == '12'\nassert solution('10\\na ab a a b ab a a b c') == '13'\nassert solution('6\\naa bb aa aa bb bb') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nto be or not to be\n''') == '12'\nassert solution('''\na ab a a b ab a a b c\n''') == '13'\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '5'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"8 3\") == \"20\"\nassert solution(\"8 3\") == \"3 2 3\""
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '1'\nassert solution('4 2') == '2'\nassert solution('5 2') == '3'\n\nstdin = \"\"\"7 1\n5 4 2 6 5 1 9 2\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n\n''') == '4000'\nassert solution('''8 3\n5 4 2 6 5 1 9 2\n\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n\n''') == '2000 2000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"20 2 3\"\nprint(solution(input_data))"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"20 2 3\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\nassert solution('''10 3\n2 4 5 2 8 9 6 8\n''') == '26'\nassert solution('''12 3\n1 2 3 2 3 2 3\n''') == '6'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 1') == '5'\nassert solution('5 1') == '2000'\nassert solution('5 1') == '4000'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_case_1) == \"1\"\nassert solution(test_case_2) == \"0\"\nassert solution(test_case_3) == \"6\""
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('8') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == \"1\"\n\nassert solution('''\n1\n1 2 3 4 5 6 7 8 9 10\n''') == \"0\"\n\nassert solution('''\n5\n4 -2 3 -9 2\n''') == \"1\"\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == \"6\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 -5 3 2\n''') == '1'\nassert solution('''\n5 -2 3 -9 2\n''') == '0'\nassert solution('''\n9 -1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n-5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\""
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\n'''\n\nimport re"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 -5 3 2\n''') == '1'\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\n\n'''"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n10\n3\n''') == '2'\nassert solution('''5\n1\n100\n2\n2\n5\n5\n1000000000\n2000000000\n''') == '10'\nprint('Tests passed!')"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5\n2 1\n4 3\n6 5\n5 8\n3 7''') == '2'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n\"\"\") == \"0\\n2\\n10\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"0\\n0\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n5\n0 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\nassert solution('''\n10\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n10\n0 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('5') == '10'\nassert solution('10') == '1000000000'\nassert solution('100') == '0'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1 10\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\nassert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''6\n3\n1 5\n4 8\n7 10\n10 20\n''') == '1000000000'\nassert solution('''7\n6\n4 5\n1 2\n3 4\n5 6\n''') == '4000000000'\nassert solution('''8\n5\n4 3\n1 3\n2 4\n1 2\n''') == '5000000000'\nassert solution('''9\n2\n3\n1\n''') == '4000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution() == '2'\nassert solution() == '10'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\nassert solution('''\n1 5\n2 0\n1 6\n2 0\n''') == '2\n''')\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '4'\nassert solution('1011') == '-1'\nassert solution('11') == '-1'"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '4'\nassert solution('10') == 'None'\nassert solution('1010') == 'None'\nassert solution('1') == 'None'\nassert solution('1111') == 'None'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"101\") == \"11\"\nassert solution(\"2\") == \"1\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '4'\nassert solution('1000000') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\nassert solution('1') == '-1'\nassert solution('11') == '-1'\nassert solution('1000000000') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"10\") == \"None\"\nassert solution(\"1\") == \"None\""
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"100\") == \"None\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join([\n    'K',\n    '\\n',\n    '7',\n    '77',\n    '777',\n    '\\n',\n    '101',\n    '\\n',\n    '17',\n    '22',\n    '3333',\n    '\\n',\n    '1234',\n    '\\n',\n    '12',\n    '123',\n    '1234',\n    '\\n',\n    '4567',\n    '\\n',\n    '9',\n    '12345',\n    '\\n',\n    '1111',\n    '\\n',\n    '3',\n    '1',\n    '2',\n    '\\n',\n    '8',\n    '\\n',\n    '5',\n    '\\n',\n    'K',\n    '\\n',\n    '\\n',\n    '1',\n    '\\n',\n    '2',\n    '\\n',\n    '3',\n    '\\n',\n    '4',\n    '\\n',\n    '5',\n    '\\n',\n    '6',\n    '\\n',\n    '7',\n    '\\n',\n    '8',\n    '\\n',\n    '9',\n    '\\n',\n    '10',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n    '\\n',\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '4'"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('101') == '4'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2 3 4 5''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 4 5 3 1\") == \"4\"\nassert solution(\"4 5\\n2 3 1 4 2\") == \"1\"\nassert solution(\"3 3\\n2 3 1 4 1\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"1\"\nassert solution(\"5 26\") == \"-1\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '4'\nassert solution(input_1) == '2'\nassert solution(input_2) == '1'\nassert solution(input_3) == '2'\nassert solution(input_4) == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('5 16\\n5 5 5 5 5') == '2'\nassert solution('5 26\\n5 5 5 5 5') == '1'\nassert solution('5 31\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\nassert solution('5 1 1 1 1 2') == '1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"4\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 8\n2 3 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"7 10\n1 3 4 2 1 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"5 16\n5 5 5 5 5\n\"\"\") == \"2\"\nassert solution(\"\"\"5 26\n5 5 5 5 5\n\"\"\") == \"1\"\nassert solution(\"\"\"5 27\n5 5 5 5 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"2\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '1'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''\n2\n500 500\n\n''') == '0'\n\nassert solution('''\n3\n14 5 1\n\n''') == '1'\n\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('5\\n1 3 6 9 12') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'\n\nassert solution('''\n3\n14 5 1\n\n''') == '-1'\n\nassert solution('''\n2\n500 500\n\n''') == '0'"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 3 6 9 12''') == '1'\nassert solution('''2\n500 500''') == '0'\nassert solution('''3\n14 5 1''') == '1'\nassert solution('''4\n24 21 14 10''') == '3'\nassert solution('''5\n1 3 6 9 12''') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 1\n''') == '1'\nassert solution('''4\n12 14 15 16\n''') == '-1'\nassert solution('''5\n9 5 1\n''') == '1'\nassert solution('''4\n1 2 3 4\n''') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('2') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == '3'\n\nassert solution(t) == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n1 2\n\"\"\") == \"3\", \"Max possible total students\"\nassert solution(\"\"\"\n4 2\n1 2 15 15 15\n\"\"\") == \"3\", \"Max possible total students\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution() == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '6'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n\n''') == '5'\nassert solution('''\n6 1\n36 4 1 25 9 16\n\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"5 1\\n\"\n    \"1 2 3 4 5\"\n) == \"3\"\n\nassert solution(\n    \"6 1\\n\"\n    \"36 4 1 25 9 16\"\n) == \"2\"\n\nassert solution(\n    \"10 1\\n\"\n    \"1 10 100 1000\"\n) == \"9\""
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n1 2\n1 2 15 15 15\n    \"\"\") == \"5\"\nassert solution(\n    \"\"\"\n4 4\n1 10 100 1000\n    \"\"\") == \"4\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n1 2\n1 2\n1 2''') == '2'\nassert solution('''5 2\n1 2 15 15 15\n\nOutput\n5''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n\nOutput\n2\n''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16') == '2'\nassert solution('4 4\\n1 10 100 1000') == '4'"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"10 10 7\") == \"8\"\nassert solution(\"10 10 7\") == \"8\"\nassert solution(\"1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 10 7\n8 10 3 6\n''') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('3 10 5 6') == '-1'"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"7\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('4 1 2 1') == '-1'"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"-1\"\nassert solution(\"5 10 7\") == \"-1\"\nassert solution(\"5 10 7\") == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"10 10 10 10\\n8 8 8 8 8\") == \"8\"\nassert solution(\"3 3 3\\n8 8 8 8\") == \"0\""
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"2 10 7\\n8 10 3 6\\n\") == \"10\"\nassert solution(\"3 10 7\\n8 10 3 6\\n\") == \"9\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\""
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == stdout\n\"\"\"\n\nn, k, q = list(map(int, input().split()))\n\nscores = []\nfor i in range(n):\n    scores.append(int(input()))\n    \nscores_sorted = sorted(scores)"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n2\\n2\\n\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n\"\"\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 4') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2 3 1') == 'Yes'\nassert solution('3 4 2') == 'No'\nassert solution('4 5 3') == 'No'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'''\n\nassert solution('''\n3 4\n1\n3\n2\n\n''') == 'Yes\\nYes\\nYes\\n'''\n\nassert solution('''\n10 10 5\n3\n4\n2\n4\n5\n4\n3\n3\n5\n4\n3\n2\n2\n''') == 'No\\nYes\\nNo\\nYes\\nNo\\nYes\\nNo\\nYes\\n'''\n\nassert solution('''\n4 5\n4\n2\n5\n4\n''') == 'Yes\\nYes\\nYes\\nYes\\n'''\n\nassert solution('''\n6 10 4\n5\n5\n4\n4\n3\n3\n2\n2\n''') == 'No\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n'''"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 3 4\n1\n3\n2\n\n''') == 'No\\nNo\\nYes'\n\nassert solution('''6 3 4\n1\n2\n3\n\n''') == 'No\\nNo\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution) == 'No'\nassert solution(solution) == 'Yes'"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4\\n3') == 'No\\nNo\\nYes'\nassert solution('6 3 4\\n3') == 'Yes\\nNo\\nYes'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES'\nassert solution('3 3\\n0 0 0 1\\n1 1 1 1\\n1 1 1 1') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 0\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('3 3') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n1 1\\n0 1\\n\") == \"YES\"\n\nassert solution(\n    \"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == \"YES\"\nassert solution('''\n2 2\n1 1\n0 1\n\n''') == \"YES\"\nassert solution('''\n1 1\n0 1\n\n''') == \"NO\"\nassert solution('''\n2 2\n1 1\n0 0\n\n''') == \"NO\"\nassert solution('''\n2 2\n1 1\n0 0\n\n''') == \"NO\"\n\n'''\nBinary matrix, 2D\n\nBinary matrix is a matrix where each element is either 0 or 1. For example, in the matrix\n$[1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n4 4\n0 0 0 0\n1 1 1 1\n0 0 0 1\n1 0 1 0\n''') == 'NO'\n\nassert solution('''\n5 5\n1 1 1 1 1\n0 0 0 1 1\n0 0 0 0 1\n0 0 0 1 1\n1 0 0 0 1\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'NO'\nassert solution('2 2\\n1 1\\n0 1') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES'\nassert solution('1 3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"YES\", \"Wrong answer for input: '2 2'\"\nassert solution(\"3 3\") == \"YES\", \"Wrong answer for input: '3 3'\""
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n1 1 1 1\\n1 1 1 1\\n0 0 0 0\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'YES'"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\"\nassert solution(input) == \"No\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Yes\", \"Base case\"\nassert solution(\"12\") == \"Yes\", \"One digit\"\nassert solution(\"123\") == \"Yes\", \"Three digits\"\nassert solution(\"1234\") == \"Yes\", \"Four digits\"\nassert solution(\"12345\") == \"Yes\", \"Five digits\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"153\") == \"Yes\"\nassert solution(\"456\") == \"No\"\nassert solution(\"537\") == \"Yes\"\nassert solution(\"957\") == \"No\"\nassert solution(\"857\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0\n1\n''') == 'No'\nassert solution('''\n2\n0\n2\n''') == 'No'\nassert solution('''\n5\n5\n5\n''') == 'Yes'\nassert solution('''\n5\n0\n0\n''') == 'No'\nassert solution('''\n5\n0\n1\n''') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"Yes\"\n\nassert solution(\"1223\") == \"No\"\n\nassert solution(\"721\") == \"Yes\"\n\nassert solution(\"921\") == \"Yes\"\n\nassert solution(\"1211\") == \"Yes\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"371\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n\"\"\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"433\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\n\"\"\""
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''\n7 3 1\n0 1 0 0 1 0 1\n''') == '3'\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == \"5\"\nassert solution('6 2 1\\n1 0 0 1 0 1') == \"3\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 1\n1 0 0 1 0 1''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1 1''') == '3'\nassert solution('''7 2 1\n1 0 0 1 0 1 0''') == '6'\nassert solution('''13 2 1\n1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''\n6 2 1\n0 0 0 1 0 1\n''') == '6'\nassert solution('''\n6 2 1\n1 0 0 0 1 0\n''') == '6'\nassert solution('''\n6 2 1\n0 0 0 1 0 1\n''') == '6'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 2 1\n0 1 0 1 0\n\"\"\") == \"5\"\nassert solution(\"\"\"6 2 1\n1 0 0 1 0 1\n\"\"\") == \"3\""
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''7 2 1\n0 0 0 1 0 1 1\n''') == '4'\nassert solution('''8 2 1\n0 0 0 1 1 0 0 1\n''') == '2'\nassert solution('''9 2 1\n0 0 0 1 0 1 1 0\n''') == '2'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '4'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\\n1 0 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nassert solution(\"-7+6+5+4+3+2-1-0\") == \"4\"\nassert solution(\"-7+6+5+4+3+2+1-0\") == \"40\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5+2*3+4\n7-8/2\n-1-2*1+3\n-3-3*-2\n''') == \"-7\"\nassert solution('''\n6+2\n6*-4\n+7\n-5+3\n-3+3+4\n-4*2\n-5-4-6\n''') == \"8\"\nassert solution('''\n7+8*4-3\n1+7-7\n8+8*4\n7+6\n8*7\n-1+8\n-1-1\n-4+1\n''') == \"-7\"\nassert solution('''\n7+8*4-3\n1+7-7\n8+8*4\n7+6\n8*7\n-1+8\n-1-1\n-4+1\n''') == \"8\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8-7+6-5+4-3+2-1-0\n''') == '4'\nassert solution('''\n2+2\n''') == '-46'\nassert solution('''\n112-37\n''') == '375'\n\n'''\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"112-37\") == \"375\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\nassert solution('10 4\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\") == \"NO\\n\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 5\") == \"NO\"\nassert solution(\"5 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('13 4') == 'NO'\nassert solution('100 50') == 'NO'\nassert solution('2 1') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n3 2\n1 3\n''') == 'YES'\nassert solution('''\n10 4\n1 2\n2 3\n3 4\n4 2\n4 3\n4 1\n3 1\n2 4\n4 1\n3 1\n''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == 'YES'"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n1 3\n3 2\n2 3\n''') == 'YES'\nassert solution('''\n10 4\n''') == 'YES'\nassert solution('''\n13 4\n''') == 'NO'\nassert solution('''\n19 4\n''') == 'NO'\nassert solution('''\n5 4\n''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == \"YES\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n') == 'YES\\n1 1\\n1 1\\n2 1\\n2 2\\nNO'\nassert solution('10 4\\n') == 'YES\\n1 1\\n2 3\\n3 2\\n4 3\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('12 3\\n') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"10 1\") == \"NO\"\nassert solution(\"10 4\") == \"YES\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 1 5'\n) == '100', 'easy'\n\nassert solution(\n    '5 1 3'\n) == '18', 'easy'\n\nassert solution(\n    '6 1 5'\n) == '-1', 'easy'\n\nassert solution(\n    '1 2 3'\n) == '3', 'easy'\n\nassert solution(\n    '10 10 10 10 10'\n) == '50', 'easy'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('4 3 1') == '100'\n\n'''\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 2') == '2'\nassert solution('3 1 2') == '-1'\nassert solution('6 2 3') == '-1'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 2 3\n5 1 3 10 1\n''') == \"18\"\nassert solution(\n'''\n6 1 5\n10 30 30 70 10 10\n''') == \"100\"\nassert solution(\n'''\n4 3 1\n1 100 1 1\n''') == \"100\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18', f'First assert is wrong: {solution('')}'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100', f'First assert is wrong: {solution('')}'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100', f'First assert is wrong: {solution('')}'\nassert solution('''\n5 1 2\n3 100 100 200\n''') == '200', f'First assert is wrong: {solution('')}'\n\nprint('Done')"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 1 5\\n10 30 30 70 10 10\"\n    ) == \"100\"\nassert solution(\n    \"5 2 3\\n5 1 3 10 1\"\n    ) == \"18\"\nassert solution(\n    \"5 2 3\\n5 1 3 10 1\"\n    ) == \"100\""
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3 2 3\") == 18\nassert solution(\"3 2 1\") == -1\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\n    \"6 1 5\\n10 30 30 70 10 10\\n\") == \"100\""
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'\nassert solution('12 1') == '12'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == '3'\nassert solution(\"6 1\") == '4'\nassert solution(\"12 6\") == '15'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n5 2\n00100\n\"\"\") == \"3\"\nassert solution(r\"\"\"\n6 1\n000000\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n12 6\n000010000100\n\"\"\") == \"15\"\nassert solution(r\"\"\"\n4 1\n0011\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n3\n\"\"\") == \"1\""
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 2'\n) == '3'\nassert solution(\n    '6 1'\n) == '4'\nassert solution(\n    '12 6'\n) == '15'\nassert solution(\n    '12 2'\n) == '2'\nassert solution(\n    '4 1'\n) == '1'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n00100\n\n''') == '3'\nassert solution('''6 1\n000000\n\n''') == '21'\nassert solution('''4 1\n0011\n\n''') == '4'\nassert solution('''12 6\n000010000100\n\n''') == '15'\nassert solution('''2 4\n0011\n\n''') == '5'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n00100\n''') == '3'\n\nassert solution('''\n6 1\n000000\n''') == '1'\n\nassert solution('''\n12 6\n000010000100\n''') == '15'\n\nassert solution('''\n4 1\n0011\n''') == '4'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 1\n0011''') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''13 4\n001000010101''') == '3'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"azzel\") == \"apple\"\nassert solution(\"apple\") == \"apple\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"azzel\") == \"apple\"\n\nassert solution(\"abce\") == \"abc\"\n\nassert solution(\"abc\") == \"abc\""
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('az') == 'Yes'\nassert solution('azz') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"azzel\"\n) == \"Yes\"\n\nassert solution(\n    \"apple\"\n) == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'apple'\nassert solution('aazel') == 'apple'\nassert solution('aazp') == 'aap'"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'apple'\n\"\"\"\n\nn = int(input())\ns = input()\nt = input()\n\nfor i in range(n):\n    if s.count(s[i])!= t.count(t[i]):\n        print('No')\n        break\nelse:\n    print('Yes')\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\n'''"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n\"\"\""
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5\n6\n1\n1\n1\n2\n3\n'''\n) == '6'\nassert solution(\n'''\n5\n1\n1\n2\n3\n3\n'''\n) == '10'\nassert solution(\n'''\n5\n1\n2\n1\n4\n5\n'''\n) == '10'\n\nimport sys\nfrom io import StringIO\nimport unittest\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 1\") == \"6\"\nassert solution(\"2 5 2\") == \"9\"\nassert solution(\"1 10 1\") == \"11\"\nassert solution(\"2 1 10\") == \"11\"\nassert solution(\"2 100\") == \"110\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"6 8\") == \"3\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n1') == '2'\nassert solution('3\\n1\\n3\\n1\\n2\\n1') == '1'\nassert solution('4\\n1\\n3\\n1\\n2\\n1\\n2\\n1') == '2'\nassert solution('5\\n1\\n3\\n1\\n2\\n1\\n2\\n1') == '1'\nassert solution('6\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '4'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 5 6') == 'YES'\nassert solution('4 7 5 6') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4 3') == '9'\nassert solution('6 4 4') == '12'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n5 5 1\\n5\\n6 2 3\") == \"5\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"2 700\\n4 500\\n5 800\") == \"3\"\nassert solution(\"2 700\\n3 600\\n5 800\") == \"2\"\nassert solution(\"2 700\\n3 500\\n4 600\") == \"2\"\nassert solution(\"2 700\\n3 500\\n5 800\") == \"2\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 10\") == \"1\"\nassert solution(\"6 50\") == \"5\"\nassert solution(\"1 7\") == \"2\"\n\n'''\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '3'\nassert solution('''2 100\n3 100\n5 800\n''') == '3'\nassert solution('''3 700\n3 500\n5 800\n''') == '3'\nassert solution('''5 700\n5 200\n5 100\n''') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 5 3 2') == '4'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 1000\\n2 1000\\n4 1000\\n5 1000\") == \"2\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"2 500\") == \"2\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"5 800\") == \"3\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 700') == '3'\nassert solution('5 800') == '5'\nassert solution('15 200') == '5'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n5 5 4 5 5 6\n''') == '2'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\nassert solution('''10\n2 3 4 2 2 3 2 2 4\n''') == '4'\nassert solution('''11\n2 3 4 2 2 3 2 2 4\n''') == '2'\nassert solution('''18\n3 2 3 2 4 2 5 5 2 2 6 2 8 2 6 3 3 3 3 2 6 7 5 2 5 5 5 6 6 4 7 5 3 6 5 3 5 2 6\n''') == '7'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n5 4 5 5 5 6\n''') == '2'\n\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\n\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n5 5 4 5 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8\n4 8 8 7 8 4 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution() == '3'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 3\") == \"3\"\nassert solution(\"2 1 3\") == \"3\"\nassert solution(\"6 1 5\") == \"-1\"\nassert solution(\"10 30 30 70 10 10\") == \"100\"\nassert solution(\"4 3 1\") == \"100\""
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''\n5 2 3\n5 1 3 10 1\n''') == '-1'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 3') == '18'\nassert solution('6 1 5') == '100'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2 3\\n\"\n    \"5 1 3 10 1\"\n) == \"18\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\n    \"6 1 5\\n10 30 30 70 10 10\\n\") == \"100\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1 5\") == \"100\"\nassert solution(\"5 2 3\") == \"18\"\nassert solution(\"4 3 1\") == \"100\"\n\nstdin = \"\"\"\n10 10 1\n1 2 3 1 1 2 3 1 1 2 3\n\"\"\"\n\nassert solution(stdin) == \"13\""
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2 3\\n\"\n    \"5 1 3 10 1\\n\"\n) == \"18\"\n\nassert solution(\n    \"6 1 5\\n\"\n    \"10 30 30 70 10 10\\n\"\n) == \"100\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"Yes\", \"First\"\nassert solution(\"3\") == \"Yes\", \"Second\"\nassert solution(\"7\") == \"No\", \"Third\""
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'No'\nassert solution('10') == 'Yes'\nassert solution('111') == 'Yes'\nassert solution('10101011') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"1112\") == \"Yes\"\nassert solution(\"111213\") == \"No\"\nassert solution(\"11121314\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\", \"Invalid input\"\nassert solution(\"4\") == \"Yes\", \"Invalid input\"\nassert solution(\"7\") == \"Yes\", \"Invalid input\"\nassert solution(\"1\") == \"No\", \"Invalid input\"\nassert solution(\"11\") == \"Yes\", \"Invalid input\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Yes\", \"2\"\nassert solution(\"5\") == \"No\", \"5\"\nassert solution(\"10\") == \"Yes\", \"10\"\nassert solution(\"12\") == \"No\", \"12\""
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'No'\nassert solution('11') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('1') == 'No'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == 'Yes'\nassert solution('0') == 'No'"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2 2 6\"\nassert solution(\"2 3 5\") == \"2 1 5\"\nassert solution(\"1 2 5\") == \"1 2 5\"\nassert solution(\"3 2 5\") == \"3 2 5\"\nassert solution(\"4\") == \"2 2 6\""
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n1\n''') == '2 2 1'\n\n'''\n\nimport math"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5\n5 4\n2 4\n4 4\n2 2''') == '2 2 6'\n\n'''"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('1') == '1 1 3'\n\n'''"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('5') == '2 2 3'\nassert solution('1') == '1 1 1'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"1\\n2 2\\n5 2\\n2 1\\n6 2\\n3 2\\n1 2\\n4 1\\n5 2\\n4 1\\n5 2\\n4 1\\n2 2\\n6 1\\n5 2\\n5 2\") == \"2 2 6\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nprint(solution('''2\n1 2 3\n1 2 5\n1 5 3\n5 5 5'''))\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''5\n3 8 9\n9 4 3\n4 2 5\n5 1 4\n4 3 1\n''') == '3 3 7'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4 4 4'\nassert solution('2') == '2 2 2'\nassert solution('3') == '3 3 4'\nassert solution('4') == '5 5 4'\n\nfrom math import sqrt\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcode') == '2'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"redcoder\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"redooder\"\n\ninput: input comes from STDIN (standard input)\noutput: output goes to STDOUT (standard output)\n\nSTDERR =\n> /home/student/fzdo/input.txt\n> /home/student/fzdo/output.txt\n'''\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('redcoder') == '1'\n\nassert solution('abcde') == '1'\nassert solution('abcddcba') == '2'\nassert solution('koko') == '2'\nassert solution('tacocat') == '3'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aac') == 'aa'\nassert solution('redcoder') =='redcoder'\nassert solution('redcoder') =='redcoder'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('redcoder') == '1'\nassert solution('aaa') == '1'\nassert solution('aab') == '1'\nassert solution('abcd') == '1'\nassert solution('acb') == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('redcoder') =='redcoder'\nprint(solution('redcoder'))\nprint(solution('abc'))\nprint(solution('asdas'))\nprint(solution('asdasd'))\nprint(solution('asdasdasd'))\nprint(solution('asdasdasds'))\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('redcoder') == 'coder'\nassert solution('racecar') == 'racecar'\nassert solution('sccd') == 'cac'\nassert solution('eocce') == 'ceo'\nassert solution('racecar') == 'racer'\n\n\"\"\"\n\nstdin = input()\n\nprint(len(stdin) - len(stdin.replace('a', 'o').replace('c', 'o').replace('e', 'e').replace('o', 'e').replace('s','s').replace('r', 'r')))\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\""
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yes\", \"expected a Yes response\"\nassert solution(\"10\") == \"No\"\nassert solution(\"4\") == \"No\""
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('12') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"7\") == \"No\"\nassert solution(\"19\") == \"No\""
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"8\") == \"No\"\nassert solution(\"99\") == \"Yes\"\nassert solution(\"11\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'Yes'\nassert solution('5') == 'No'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n\n''') == 'Yes'\n\nassert solution('''\n100\n\n''') == 'No'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == 'Yes'"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('5\\n2 2 2 2 2') == '0'\nassert solution('5\\n3 3 2 1 1') == '5'\nassert solution('5\\n1 1 1 1 1') == '0'\nassert solution('5\\n1 1 1 1 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"4 5\") == \"5\""
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n6\n7\n''') == '1', 'Expected 1. Got {}'.format(solution('''\n3\n6\n7\n'''))\n\nassert solution('''\n4\n4 4 9 7\n''') == '2', 'Expected 2. Got {}'.format(solution('''\n4\n4 4 9 7\n'''))\n\nassert solution('''\n5\n6\n7\n8\n9\n''') == '3', 'Expected 3. Got {}'.format(solution('''\n5\n6\n7\n8\n9\n'''))\n\nassert solution('''\n6\n6\n7\n8\n9\n10\n''') == '4', 'Expected 4. Got {}'.format(solution('''\n6\n6\n7\n8\n9\n10\n'''))\n\nassert solution('''\n7\n6\n7\n8\n9\n10\n11\n''') == '5', 'Expected 5. Got {}'.format(solution('''\n7\n6\n7\n8\n9\n10\n11\n'''))"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 9 7 5') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5'\n\nassert solution('6\\n4 4 9 7 5\\n') == '0'\n\nassert solution('7\\n4 4 9 7 5\\n') == '0'\n\nassert solution('8\\n4 4 9 7 5\\n') == '0'\n\nassert solution('1\\n2 2 2 2 2\\n') == '6'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 4 9 7 5\n''') == '5'\nassert solution('''5\n4 4 9 7 5\n''') == '5'\nassert solution('''5\n1 1 1 1 1\n''') == '5'\nassert solution('''5\n1 1 1 1 1\n''') == '5'\nassert solution('''5\n1 2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 9 7 5') == '5'\nassert solution('2 3 5 7') == '0'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 4 9 7 5\n''') == \"5\"\nassert solution('''\n10\n4 4 9 7 5 1 5 1\n''') == \"40\""
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '10'"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '0', \"x\"\nprint(solution('''5\n4 4 9 7 5\n'''))\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 4\") == \"2\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"2 8\") == \"-1\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 10') == '-1'"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10', \"Should be 10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 3\") == \"6\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\", \"1,2 case\"\nassert solution(\"2 4\") == \"0\", \"2,4 case\"\nassert solution(\"8 5\") == \"10\", \"8,5 case\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n10 12 1 2 14\\n') == '5'\nassert solution('1 10\\n5 8\\n') == '1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 5\n1 2 3 4\n''') == '1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 5\") == \"5\""
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '5'\nassert solution('12 7') == '10'\n\n\"\"\""
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"5\"\n\"\"\""
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('2 5') == '1'\nassert solution('2') == '1'\n'''\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == \"5\"\nassert solution('2 3\\n1 3 1 2') == \"2\"\nassert solution('2 2\\n1 2 3 2') == \"0\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./inputs/input_05_test.txt\") == \"5\"\nassert solution(\"./inputs/input_05_test2.txt\") == \"5\"\nassert solution(\"./inputs/input_05_test3.txt\") == \"4\"\nassert solution(\"./inputs/input_05_test4.txt\") == \"3\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 7\\n4 1 2 5 3 6 7\") == \"3\"\nassert solution(\"2 20\\n20 1 2 5 3 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"14\"\nassert solution(\"2 5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"2 5\\n1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution() == '111100'\nassert solution() == '110110'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('''\n10 8 4\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1110111'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nprint(solution())\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\"\nassert solution(\"4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\""
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\nassert solution('1 2') == '1110'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3') == '1110'\nassert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '101001'\nprint(solution(*[*[int(i) for i in input().split()] for _ in range(int(input()))]))\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\nassert solution('4 6 3') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '1'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''\n3\n4 5 3\n''') == 'YES'\nassert solution('''\n2\n10 10\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\nassert solution('''\n1\n4 4\n''') == 'NO'\n\n'''\nvova's family is building the Great Vova Wall (named by Vova himself). Vova's parents, grandparents, grand-grandparents contributed to it. Now it's totally up to Vova to put the finishing touches.\n\nThe current state of the wall can be respresented by a sequence $a$ of $n$ integers, with $a_i$ being the height of the $i$-th part of the wall.\n\nVova can only use $2 \\times 1$ bricks to put in the wall (he has infinite supply of them, however).\n\nVova can put bricks horizontally on the neighboring parts of the wall of equal height. It means that if for some $i$ the current height of part $i$ is the same as for part $i + 1$, then Vova can put a brick there and thus increase both heights by 1. Obviously, Vova can't put bricks in such a way that its parts turn out to be off the borders (to the left of part $1$ of the wall or to the right of part $n$ of it).\n\nThe next paragraph is specific to the version 1 of the problem.\n\nVova can also put bricks vertically. That means increasing height of any part of the wall by 2.\n\nVova is a perfectionist, so he considers the wall completed when:\n\n  all parts of the wall has the same height;  the wall has no empty spaces inside it. \n\nCan Vova complete the wall using any amount of bricks (possibly zero)?\n'''"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n5\\n4 1 3\\n') == 'YES'\nassert solution('5\\n2 2 2 3 5\\n') == 'YES'\nassert solution('5\\n4 5 3\\n') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == 'YES'\nassert solution(input_) == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2 1 1 2 5') == \"YES\"\nassert solution('3\\n4 5 3') == \"YES\"\nassert solution('2\\n10 10') == \"YES\"\nassert solution('3\\n1 2 3') == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n\n''') == 'YES'\n\nassert solution('''\n2\n10 10\n\n''') == 'YES'\n\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n\nprint(solution())\nprint(solution())"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5], [2, 1, 1, 2, 5]) == 'YES'\nassert solution([3], [1, 2, 3]) == 'NO'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 4\n-3 -6 5 4''') == '4999999999996'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\nprint('Test passed')"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\") == '9'\nassert solution(\"1000000000000 5\") == '4999999999996'\nassert solution(\"10 4\") == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1000 6\",\n    \"-100 -200 -300 125 77 -4\"\n) == \"9\"\nassert solution(\n    \"1000000000000 5\",\n    \"-1 0 0 0 0\"\n) == \"4999999999996\"\nassert solution(\n    \"10 4\",\n    \"-3 -6 5 4\"\n) == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_01) == \"9\"\nassert solution(example_input_02) == \"4999999999996\"\nprint(solution(stdin))\n\n\n\"\"\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"1000000000000 4\") == \"999999999996\"\nassert solution(\"-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"-1 0 0 0 0 0 0\") == \"999999999996\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000000000000 5') == '4999999999996'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nABA') == 'A'\nassert solution('2\\nABACABA') == 'AB'\nassert solution('3\\nABAABA') == 'AB'\nassert solution('4\\nAAABAAA') == 'AB'\nassert solution('4\\nAAABAAB') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"ABACABA\") == \"AB\"\nassert solution(\n    \"ZZZAA\") == \"ZZ\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nZ\nZ\nA\nZ\nA''') == 'Z'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"AB\"\nassert solution(\"1\") == \"AB\"\nassert solution(\"3\") == \"AB\"\nassert solution(\"4\") == \"AB\"\nassert solution(\"5\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'A'\nassert solution('2') == 'AB'\nassert solution('3') == 'ABC'\nassert solution('4') == 'ABBA'\nassert solution('5') == 'AZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\""
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"west\") == \"test\"\nassert solution(\"codeforces\") == \"yes\"\nassert solution(\"test\") == \"test\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"west\") == 9\nassert solution(\"codeforces\") == 7\nassert solution(\"b\") == 1\n\nprint(solution(input()))\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"b\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"b\") == \"b\"\nassert solution(\"b\") == \"b\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('a') == 1\nassert solution('a') == 1\nassert solution('a') == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"here\"\nassert solution(\"west\") == \"here\"\nassert solution(\"test\") == \"here\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"yes\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\") == \"est\"\nassert solution(\"test\") == \"west\"\nassert solution(\"b\") == \"\"\nassert solution(\"yes\") == \"yes\"\n\nsolution(\"a\")\n\nsolution(\"aab\")\n\nsolution(\"aba\")\n\nsolution(\"ab\")\n\nsolution(\"c\")\n\nsolution(\"c\")\n\nsolution(\"\")\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('west') == 2\nassert solution('codeforces') == 9\nassert solution('test') == 7\nassert solution('yes') == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('west') == 2\nassert solution('codeforces') == 9\nassert solution('test') == 7\nassert solution('yes') == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"west\") == \"east\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"est\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"20 3\") == \"8\"\nassert solution(\"2 8\") == \"10\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 3') == '3'\nassert solution('4 4') == '3'\nassert solution('10 10') == '7'\nassert solution('15 10') == '12'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 4') == '2'\nassert solution('1 2') == '1'\nassert solution('3 3') == '2'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '3'\nassert solution('4 5') == '3'\nassert solution('4 6') == '3'\nassert solution('4 7') == '3'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasakasaka') == 'Yes'\nassert solution('akasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasaka"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('akasaka') == 'Yes'\nassert solution('abcd') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasakakakak') == 'No'\nassert solution('abcdefgh') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hannah\") == \"No\""
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"godzilla\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 1.2\") == \"0\"\nassert solution(\"198 1.10\") == \"217\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('123 1.2') == '123'\nassert solution('-1.3') == '-1'\nassert solution('0.00') == '0'\nassert solution('123.1') == '123'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('199 1.10') == '217'\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"6\", \"Sample case 1\"\nassert solution(\"10 3\") == \"11\", \"Sample case 2\"\nassert solution(\"10 1\") == \"11\", \"Sample case 3\"\nassert solution(\"10.01\") == \"11\", \"Sample case 4\"\nassert solution(\"2.1\") == \"2\", \"Sample case 5\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1.10\") == \"1\"\nassert solution(\"198 1.10\") == \"217.8\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"1.1 0.9\") == \"1\"\nassert solution(\"1.1 0.1\") == \"1\"\nassert solution(\"1.1 0.0\") == \"1\"\nassert solution(\"1.0 1.0\") == \"1\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('198 1.10') == '217'\n\nprint(solution(input()))\n\n\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('198 1.1') == '217'\nassert solution('198.01') == '217'\nassert solution('198.01') == '217'\nassert solution('198.011') == '217'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1\n2\n3\n2000000000\n763243547''') == \"3\"\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8''') == \"0\"\n\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == \"1\"\n\nassert solution('''100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n100''') == \"999999999999\"\n\nassert solution('''1\n1''') == \"0\""
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t = 2) == \"3\"\nassert solution(t = 5) == \"1\"\nassert solution(t = 1) == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '2'\nassert solution('''5\n3\n4\n5\n6''') == '0'\nassert solution('''10\n2\n4\n5\n6''') == '4'\nassert solution('''8\n3\n4\n5\n6''') == '0'\nassert solution('''20\n3\n4\n5\n6''') == '5'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution('5\\n3\\n1\\n2\\n4\\n2000000000\\n763243547') == \"0\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution('4\\n3\\n1\\n2\\n4\\n2000000000\\n763243547') == \"1\\n0\\n0\\n1\\n999999999\\n381621773\""
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n10\n10\n1\n2\n3\n1000\n763243547\n''') == '0'\nassert solution('''\n15\n1000\n500\n300\n200\n100\n1000\n763243547\n''') == '999999999'"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7\n1\n2\n3\n2000000000\n763243547''') == '3'\nassert solution('''4\n10\n2\n3\n5\n6\n7\n8\n9\n100''') == '1'\nassert solution('''6\n10\n1\n2\n3\n4\n5\n6''') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n4\n3\n2\n1\n1000000000\n''') == '0'\nassert solution('''\n4\n2\n3\n1\n1000000000\n''') == '99999999'\nassert solution('''\n1\n1000000000\n''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1''') == '1'\nassert solution('''5 5 5\n1 2\n2 3\n3 4\n4 1''') == '3'\nassert solution('''5 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 5\") == \"1\"\nassert solution(\"9 9 1\") == \"3\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '3'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\n\n\n\n'''"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 5\") == \"1\"\nassert solution(\"9 9 1\") == \"3\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\n    \"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([9, 9, 1]) == 3\nassert solution([5, 4, 5]) == 1"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 4 1') == '4'\nassert solution('4\\n3 2 4 1') == '5'"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 4 1\n''') == \"4\"\nassert solution('''6\n1 1 1 4 4 4\n''') == \"5\"\nassert solution('''5\n1 2 3 4\n''') == \"5\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\n\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n3 2 4 1\n\n\"\"\"\n    ) == \"4\"\n\nassert solution(\n\"\"\"\n6\n1 1 1 4 4 4\n\n\"\"\"\n    ) == \"5\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\""
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000002000001\"\nassert solution(\"2 63\") == \"000001000001\""
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000002000001'\nassert solution('2 63') == '000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 5\") == \"00100100000\"\n\n'''\n\nimport sys\nfrom collections import defaultdict\nfrom collections import deque\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '000001000002'\nassert solution('2 3') == '000002000001'\nassert solution('1 12') == '000001000001'"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\") == \"000001000002\\n000002000001\\n000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"1 32\\n\"\n    \"2 63\\n\"\n    \"1 12\"\n) == \"000001000002\\n000002000001\\n000001000001\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 10 8 40\n''') == '2'\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"2\\n3\\n5\\n6\") == \"3\"\nassert solution(\"2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"2\\n3\\n4\\n5\\n6\") == \"2\"\nassert solution(\"2\\n4\\n3\\n5\\n6\") == \"3\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['5', '1 1 1 1 1']) == '1'\nassert solution(['3', '10 5 6 5']) == '2'\nassert solution(['1', '1']) == '1'\nassert solution(['3', '1 1 1']) == '2'\nassert solution(['4', '1 1 1 1']) == '3'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 10 8 40\n5\n1 2 3 4 5''') == '2'\nassert solution('''5\n2 10 8 40\n6\n1 2 3 4 5''') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 10 8 40\\n') == '2'\nassert solution('5\\n3 10 8 40\\n') == '3'\nassert solution('5\\n4 10 8 40\\n') == '4'\nassert solution('5\\n5 10 8 40\\n') == '1'\nassert solution('5\\n1 10 8 40\\n') == '1'"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"5\\n2 1 10 8 3\") == \"3\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 10 8 40\\n\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\"\nassert solution(\"8\\n3 2 1 1 2 3 3 4\\n\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8\\n\") == \"7\"\nassert solution(\"20\\n2 6 2 2 1 1 1 2 2 3 2 1 2 4 4 5\\n\") == \"3\""
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0101\"\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''?(_-_/___*__):-___>__.\n\nOutput\n0010\n\nInput\n?(__-_+_/_____):-__>__,_____<__.\n\nOutput\nfalse\n\nInput\n?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n\nOutput\n0250341''') == '010'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"?(___+___+___)/____*___-___>:-____>.____:____.____:____.____,____:____:____.____,____:____:____.____,____:____:____.____:____:____.____\") == \"0101\"\nassert solution(\"?(__+___+__)/____*___-___>:-____>.____:____.____:____.____,____:____:____.____,____:____:____.____,____:____:____.____:____:____.____\") == \"0010\"\nassert solution(\"?(___+___+___)/____*___-___>:-____>.____:____.____:____.____,____:____:____.____,____:____:____.____,____:____:____.____:____:____.____\") == \"000\"\nassert solution(\"?(__+___+__)/____*___-___>:-____>.____:____.____:____.____,____:____:____.____,____:____:____.____,____:____:____.____:____:____.____\") == \"000\"\nassert solution(\"?(______+___+___)/____*___-___>:-____>.____:____.____:____.____,____:____:____.____,____:____:____.____,____:____:____.____:____:____.____\") == \"010\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    ?(_-_/___*__):-___>__.\n''') == '0010'\nassert solution('''\n    ?(__-_+_/_____):-__>__,_____<__.\n''') == 'false'\nassert solution('''\n    ?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341'\nassert solution('''\n    ?(__+___+__-___):-___>__.\n''') == '0101'\n\n### Read Input\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\""
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"false\"\nassert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == \"3\"\n\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\n\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\"\n\nprint(solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n'''))"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == \"3\"\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nprint(solution(input()))"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n\") == \"3\"\nassert solution(\n    \"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"5\"\nassert solution(\n    \"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\n\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\n\nassert solution(\"z\") == \"z\"\n\nInput\n20\nababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15') == 'codeforces'\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"10\") == \"rocesfedoc\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"20\") == \"thisisexamplonetwo\"\n\n----SOLUTION----"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"10\") == \"codeforces\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"codeforces\") == \"codeforces\"\n\nassert solution(\n    \"plmaetwoxesisiht\") == \"thisisexampletwo\"\n\nassert solution(\n    \"1\") == \"1\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"123\"\nassert solution(\"4\") == \"1234\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"codeforces\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'z'\nassert solution('16') == 'thisisexampletwo'\nassert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'z'\nassert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('20') == 'thisisexampletwox'\nassert solution('21') == 'thisisexampltheter'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 14\n''') == \"19\", \"Should be 19\"\nassert solution('''\n381 492\n''') == \"873\", \"Should be 873\"\n'''\ninput\n1\n2\n\noutput\n1\n\n'''\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 14\n    5 15\n    5 16\n    5 17\n    5 18''') == '19'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 14\\n') == '19'\nassert solution('381 492\\n') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19', solution('5 14')\nassert solution('381 492') == '873', solution('381 492')\nassert solution('4 5') == '9', solution('4 5')"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5 14\n    ''') == '19', \"Test 1 failed\"\nassert solution('''\n    5 14\n    ''') == '19', \"Test 1 failed\"\nassert solution('''\n    381 492\n    ''') == '873', \"Test 2 failed\"\nassert solution('''\n    361 898\n    ''') == '3695', \"Test 3 failed\"\nassert solution('''\n    29 8\n    ''') == '33', \"Test 4 failed\"\n''') == '33', \"Test 4 failed\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"5 5 6\") == \"8\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\n---\n\n50000 memory cells.\n\nmemory cells store integers from 0 to 255 with unsigned 8-bit wraparound.\n\nconsole input (, command) is not supported, but it's not needed for this problem.\n\n-----Notes-----\n\nInput and output strings may contain leading and trailing spaces, but such spaces are removed.\n\nThe input string is always valid.\n\nIn the case of the program to be printed to console, it should not contain any newlines.\n\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2+3') == '++>', solution('2+3')\nassert solution('9-7') == '+++++++++>', solution('9-7')\n\"\"\"\n\nfrom collections import deque\n\ncode = deque(input())"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2+3') == '++>', \"First\"\nassert solution('9-7') == '+++++++++>', \"Second\"\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('3') == '<[<->-]<'\n\n\"\"\"\nimport sys\nimport collections\nimport re\n\nclass BrainFuck:\n    def __init__(self):\n        self.memory = collections.deque()\n        self.command_set = {'+', '-', '>', '<', '['}\n        self.postfix_op = {'+': lambda x, y: x + y, '-': lambda x, y: x - y, '>': lambda x, y: x > y, '<': lambda x, y: x < y, ']': lambda x, y: x == y}\n        self.out = []\n        self.code = []\n        self.stack = []\n\n    def _print_memory(self):\n        for i in range(len(self.memory)):\n            if i in (0, 1, 2):\n                print(i, end=' ')\n            else:\n                print(i, end=',')\n        print()\n\n    def run(self, stdin: str):\n        self.memory.append(ord(stdin))\n        while self.memory:\n            if len(self.memory) > 1:\n                x = self.memory.popleft()\n                if x < 256:\n                    self.stack.append(x)\n                else:\n                    raise Exception(\"Got an integer outside of range of 0 <= i <= 256\")\n            else:\n                if len(self.stack) == 0:\n                    self.memory.append(self.stack.pop())\n                    break\n                x = self.stack.pop()\n                if x < 256:\n                    self.memory.append(x)\n                else:\n                    raise Exception(\"Got an integer outside of range of 0 <= i <= 256\")\n        self._print_memory()\n        self.code = []\n        self._run_code()\n\n    def _run_code(self):\n        while self.code:\n            if self.code[0] == '>':\n                self.code = self.code[1:]\n            elif self.code[0] == '<':\n                self.code = self.code[1:]\n            elif self.code[0] == '+':\n                self.code = self.code[1:]\n            elif self.code[0] == '-':\n                self.code = self.code[1:]\n            elif self.code[0] == '[':\n                self.code = self.code[1:]\n            elif self.code[0] == ']':\n                self.code = self.code[1:]\n            else:\n                self._handle_command()\n\n    def _handle_command(self):\n        cmd = self.code.pop(0)\n        if cmd not in self.command_set:\n            raise Exception(\"Unknown command: {}\".format(cmd))\n        else:\n            self._handle_command_from_set(cmd)\n\n    def _handle_command_from_set(self, cmd):\n        if cmd == '+':\n            self.out.append(self.postfix_op['+'](self.stack[-1], self.stack[-2]))\n            self.stack = self.stack[:-2]\n        elif cmd == '-':\n            self.out.append(self.postfix_op['-'](self.stack[-1], self.stack[-2]))\n            self.stack = self.stack[:-2]\n        elif cmd == '>':\n            self.out.append(self.postfix_op['>'](self.stack[-1], self.stack[-2]))\n            self.stack = self.stack[:-2]\n        elif cmd == '<':\n            self.out.append(self.postfix_op['<'](self.stack[-1], self.stack[-2]))\n            self.stack = self.stack[:-2]\n        elif cmd == '[':\n            self.stack.append(self.out.pop())\n        elif cmd == ']':\n            self.out.append(self.stack.pop())\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2+3') == '++>', 'Sample 1'\nassert solution('9-7') == '+++++++++>', 'Sample 2'\n\n\nsolution(\"2+3\\n4-5\\n6+7\\n8*9\\n10/11\\n12/13\\n14/15\\n16/17\\n18/19\\n20/21\\n22/23\\n24/25\\n26/27\\n28/29\\n30/31\\n\")\n\n-------------------------------------------------------------------------------------------------------------------\n\nclass Brainfuck(object):\n\n    def __init__(self):\n        self.op = {'+': lambda x, y: x + y,\n                   '-': lambda x, y: x - y,\n                   '<': lambda x, y: x < y,\n                   '<-': lambda x, y: x < y,\n                   '>': lambda x, y: x > y,\n                   '>-': lambda x, y: x > y,\n                   '[': lambda x, y: x,\n                   '<[': lambda x, y: x,\n                   '[<': lambda x, y: x,\n                   '[>]': lambda x, y: x,\n                   '[>-]': lambda x, y: x,\n                   '[>+]': lambda x, y: x,\n                   '[<-]': lambda x, y: x,\n                   '[<+]': lambda x, y: x,\n                   '[=<]': lambda x, y: x,\n                   '[=<+]': lambda x, y: x,\n                   '[=+<]': lambda x, y: x,\n                   '[=+<+]': lambda x, y: x,\n                   '[=+<-]': lambda x, y: x,\n                   '[=+>-]': lambda x, y: x,\n                   '[=+>+]': lambda x, y: x,\n                   '[=+>-]': lambda x, y: x,\n                   '[=+>+<]': lambda x, y: x,\n                   '[=+>+<+]': lambda x, y: x,\n                   '[=+>+<-]': lambda x, y: x,\n                   '[=+>+<-]': lambda x, y: x,\n                   '[=+>+<+<]': lambda x, y: x,\n                   '[=+>+<+<+]': lambda x, y: x,\n                   '[=+>+<+<-]': lambda x, y: x,\n                   '[=+>+<+<-]': lambda x, y: x,\n                   '[=+>+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<-]': lambda x, y: x,\n                   '[=+>+<+<+<-]': lambda x, y: x,\n                   '[=+>+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<]': lambda x, y: x,\n                   '[=+>+<+<+<+<+<+<"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Solution failed\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"Solution failed\"\n\n'''"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\n'''\n\nclass Solution:\n    def solver(self, input):\n        if not input:\n            return \"\"\n        stack = []\n        output = \"\"\n        state = 'I'\n        for ch in input:\n            if state == 'I':\n                if ch == '+':\n                    state = '>'\n                elif ch == '-':\n                    state = '<'\n                elif ch.isdigit():\n                    stack.append(ch)\n            elif state == '>':\n                if ch == '+':\n                    state = '.'\n                elif ch.isdigit():\n                    output += ch\n            elif state == '<':\n                if ch.isdigit():\n                    output += ch\n                elif ch == '-':\n                    output += '-'\n            elif state == '.':\n                if ch.isdigit():\n                    output += ch\n                elif ch == '.':\n                    output += '.'\n        return output\n\ns = Solution()\nprint(s.solver('2+3'))"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"++>+++><[<->-]<\""
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2+3\") == \"++>\", \"Wrong result for expression 2+3!\"\nassert solution(\n    \"9-7\") == \"++++>\", \"Wrong result for expression 9-7!\""
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == '1'\nassert solution(example_input_2) == '2'\nassert solution(example_input_3) == '4'\nassert solution(input_data) == '8'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n3\n20\n38\n56''') == '2'\nassert solution('''2\n5\n2\n4\n1''') == '8'\nassert solution('''1\n3\n20\n38\n56''') == '2'\nassert solution('''2\n5\n2\n4\n1''') == '8'\nassert solution('''1\n3\n20\n38\n56''') == '2'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"20\") == \"0\"\nassert solution(\"1000000000000000000\") == \"8\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"8\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\nassert solution('''\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '5'\nassert solution('''\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n''') == '100'\nassert solution('''\n1\n11\n111\n1111\n111111\n11111111\n1111111111\n11111111111\n111111111111\n11111111111111\n111111111111111\n1111111111111111\n111111111111111111\n11111111111111111111\n11111111111111111111111\n11111111111111111111111111\n111111111111111111111111111111\n1111111111111111111111111111111111\n11111111111111111111111111111111111111\n111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n11111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2132\") == \"2\"\nassert solution(\"506\") == \"5\"\nassert solution(\"999999999999999999\") == \"4\"\nassert solution(\"1000000000000000000\") == \"1\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == '4'\nassert solution('375') == '1'\nassert solution('537') == '1'\nassert solution('573') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"4\""
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"4\"\n\nassert solution(\"123\") == \"1\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == '4'"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('575') == '4'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('7') == '5'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"2\"\nassert solution(\"111\") == \"2\"\nassert solution(\"101\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"010111\") == \"2\"\nassert solution(\"001011\") == \"4\"\nassert solution(\"1111\") == \"2\"\nassert solution(\"10101\") == \"4\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('00') == '0'\nassert solution('01') == '0'\nassert solution('10') == '1'\nassert solution('11') == '0'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1110') == '10'\nassert solution('0101') == '4'"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0000\") == \"1\"\nassert solution(\"111\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"110\") == \"0\"\nassert solution(\"0101\") == \"0\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"110\") == \"1\"\nassert solution(\"00101\") == \"3\"\nassert solution(\"1101\") == \"3\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('000') == '1'\nassert solution('101') == '2'\nassert solution('011') == '2'\nassert solution('111') == '4'\nassert solution('100') == '4'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"101\") == \"1\"\nassert solution(\"0101\") == \"2\"\nassert solution(\"00111\") == \"2\"\nassert solution(\"11001\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"01\") == \"1\"\nassert solution(\"110\") == \"3\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"3\\n4 5 7 9\\n\") == \"DENIED\"\nassert solution(\"10\\n0 10 0 1 10 1\\n\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'APPROVED'\nassert solution('5\\n6\\n7\\n8\\n9\\n10') == 'APPROVED'\nassert solution('10\\n13\\n16\\n18\\n20\\n21\\n22\\n23\\n24\\n25') == 'DENIED'\nassert solution('100\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'APPROVED'\nassert solution(input()) == 'DENIED'"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"5\\n2 4 8 16\\n\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"APPROVED\"\nassert solution(\"2\") == \"DENIED\"\nassert solution(\"3\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"1\\n2 3\\n\") == \"DENIED\"\nassert solution(\"3\\n4 5\\n\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"APPROVED\"\nassert solution(\"5\") == \"DENIED\"\nassert solution(\"5\") == \"DENIED\""
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"10\") == \"DENIED\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in a:\n    if i%2==0:\n        if i%3==0 or i%5==0:\n            print(\"APPROVED\")\n        else:\n            print(\"DENIED\")\n    else:\n        print(\"DENIED\")"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('10\\n12 18 32 9') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"4\") == \"DENIED\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RLLUDR\") == \"No\"\nassert solution(\"RUDDUDR\") == \"Yes\"\nassert solution(\"LLRRDD\") == \"No\"\nassert solution(\"LLRRD\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LUDDR\") == \"No\"\nassert solution(\"RURDD\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"RUDLUDR\"\n) == \"Yes\"\n\"\"\"\n\ns = stdin.strip()\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LLRUDD') == 'Yes'\nassert solution('RUUDDDRLL') == 'Yes'\nassert solution('UUDDDRL') == 'No'\nassert solution('UUDDDRLL') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\""
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"R\nU\nR\nD\nU\nR\nU\"\"\") == \"Yes\"\nassert solution(r\"\"\"R\nD\nR\nU\nR\nU\nR\"\"\") == \"No\"\nassert solution(r\"\"\"R\nU\nR\nD\nU\nR\nU\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDLU\") == \"No\"\nassert solution(\"RUDR\") == \"Yes\"\nassert solution(\"R\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"6\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"6\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"6\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"6\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"4\\n2\\n4\\n2\\n3\") == \"10\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''4\n2\n3\n4\n3''') == '3'\nassert solution('''3\n1\n2\n3''') == '0'\n\nassert solution('''2\n2\n2\n2''') == '0'\n\nassert solution('''1\n3\n3\n4''') == '0'"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3') == '7'\nassert solution('5\\n3\\n2\\n4\\n3') == '7'\nassert solution('5\\n3\\n2\\n4\\n3') == '7'\nassert solution('5\\n3\\n2\\n4\\n3') == '7'\nassert solution('5\\n3\\n2\\n4\\n3') == '7'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 3, 2, 4, 3, 5]) == 7\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n3\n2\n4\n3\n\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5\n3\n2\n4\n3\n5\n\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5\n1\n2\n4\n3\n5\n\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10\n1\n2\n4\n3\n5\n6\n8\n9\n10\n\n\"\"\") == \"43\"\nassert solution(\"\"\"\n5\n1\n2\n4\n3\n5\n6\n8\n9\n10\n\n\"\"\") == \"54\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n3\\n2\\n4\\n3\\n5') == '14'\nassert solution('100\\n3\\n2\\n4\\n3\\n5') == '95'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\n    \"5\",\n    \"3\",\n    \"2\",\n    \"4\",\n    \"3\",\n    \"5\"\n]) == \"7\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n4\\n2\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"10\\n3\\n2\\n4\\n3\\n5\\n\") == \"10\"\nassert solution(\"50\\n3\\n2\\n4\\n3\\n5\\n\") == \"50\"\n\n\"\"\""
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '2'\nassert solution(\"5\") == '2'\nassert solution(\"6\") == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '11'\nassert solution('15') == '17'\n\nassert solution('100') == '101'\nassert solution('1000') == '1001'"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2147483647\") == \"2147483647\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"23\"\nassert solution(\"3\") == \"23\"\nassert solution(\"4\") == \"23\"\nassert solution(\"5\") == \"23\"\nassert solution(\"6\") == \"23\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('20') == '23'\nassert solution('100') == '103'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('200') == '201'\nassert solution('1000') == '1001'\nassert solution('10000') == '10001'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('10') == '7'\n\n'''\nimport math\nimport sys"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"11\"\nassert solution(\"17\") == \"19\"\nassert solution(\"20\") == \"23\""
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 5\nassert solution('20') == 23\nassert solution('10') == 11\nassert solution('2') == 2\nassert solution('5.7') == 5\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '11'\nassert solution('1000') == '1003'\nassert solution('10000') == '10001'\nassert solution('100000') == '100011'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"7\""
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('4\\n1 2 3 2\\n') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"3\\n2 1 2\") == \"1\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3 1 3 2\n''') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n3 1 3 2\") == \"2\"\nassert solution(\"9\\n3 1 3 2\") == \"3\"\nassert solution(\"10\\n3 1 3 2\") == \"4\"\nassert solution(\"1\\n10 10 10 10 10 10 10 10 10 10\") == \"5\""
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 10 90 80\") == \"23\"\nassert solution(\"10 10 90 80\") == \"23\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"2 2 2 1\") == \"1\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"6 100 60 50 80\") == \"23\"\nassert solution(\"6 100 60 50 80 15\") == \"27\"\nassert solution(\"4 4 7 6 9\") == \"27\"\nassert solution(\"4 4 7 6 9 11\") == \"29\"\n\n\"\"\""
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 90\") == \"25\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 90 90\") == \"26\""
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 100 90 80\\n98\\n40\\n30\\n21\\n80\"\n    ) == \"23\"\n\"\"\"\n\nfrom copy import deepcopy"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n\"\"\"\n\nfrom math import ceil\n\nn, a, b, c = map(int, stdin.split())\n\nm = ceil(a / 10)\nn = ceil(b / 10)\nk = ceil(c / 10)\n\nprint(m + n + k)\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(['5 100 90 80', '98', '40', '30', '21', '80']) == '23'"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ZYXWVUTSRQPONMLKJIHGFEDCBA\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"CDEZAB\"\n\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'CDEZAB'\nassert solution('-2') == 'ZABBC'\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"CDEZAB\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"A\"\nassert solution(\"2\") == \"B\"\nassert solution(\"3\") == \"C\"\nassert solution(\"4\") == \"D\"\nassert solution(\"5\") == \"E\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"C\", \"test 1 failed\"\nassert solution(\"B\") == \"D\", \"test 2 failed\"\nassert solution(\"Z\") == \"A\", \"test 3 failed\"\nassert solution(\"ZY\") == \"AB\", \"test 4 failed\"\nassert solution(\"\") == \"\", \"test 5 failed\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'CEZAB'\nassert solution('10') == 'CEZAB'"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(solution(\"2\\nABCXYZ\"))\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1', solution('3')\nassert solution('5') == 'BCDE', solution('5')\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"CDEZAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'CDEZAB'\nassert solution('1') == 'A'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 1 2 3\n\"\"\") == \"1 3 2\"\n\nassert solution(\"\"\"\n3\n2 1 2 3\n\"\"\") == \"1 3 2\"\n\nassert solution(\"\"\"\n1\n2 1 2 3\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n1\n3 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n4 3 2\n\"\"\") == \"3 2\""
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3 4 2\"\nassert solution(\"5\") == \"4 3 2\"\nassert solution(\"1\") == \"199999\""
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3 4 2'\nassert solution('3') == '3 4 2'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n3 5 2 3 2 4\n\"\"\") == \"3 4 2\"\nassert solution(\"\"\"\n1\n3 5 2 3 2\n\"\"\") == \"3 5 2 3 2 4\"\nassert solution(\"\"\"\n1\n3 6\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('2') == '2'\nassert solution('5 5 4 2 2 1 4') == '2 1 4'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('3') == '3 4 2'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('3 5 2 3 2 4') == '3 4 2'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\nassert solution('1\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\nassert solution('1\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\nassert solution('1\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Input') == 'Output'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4 2 6\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '22111'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n2 4 5 3 1\n''') == '11111'\nassert solution('''5 1\n2 1 3 5 4\n''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6\n''') == '1121122'\nassert solution('''7 1\n7 2 1 3 5 4 6\n''') == '1121122'\nassert solution('''5 1\n2 4 5 3 1\n''') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"111111\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == \"11111\"\nassert solution('5 2') == \"22111\"\nassert solution('7 1') == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"11111\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == \"11111\"\nassert solution('''5 1\n2 1 3 5 4''') == \"22111\"\nassert solution('''7 1\n7 2 1 3 5 4 6''') == \"1121122\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\n    \"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\n    \"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1 2 1 2 3\") == \"2\"\nassert solution(\"2 100 1\") == \"4\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == '2'\nassert solution(\"1 2 1 2 3\") == '2'\nassert solution(\"3 3 3 7\") == '4'\nassert solution(\"7 4\") == '1'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 2 3') == 2\nassert solution('4 2 3 2 2') == 4\nassert solution('5 0 0 0 1') == 5"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 2 3\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"100 1\") == \"2\""
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n100 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 3 1 2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('1 2 2 3 3') == '1'\nassert solution('1 1 1 2 1') == '2'\nassert solution('1 1 1 2 2') == '1'\nassert solution('1 2 3 4 1') == '5'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 2 1 2 3\"\n) == \"2\"\nassert solution(\n    \"1 1 2 2 3\"\n) == \"2\"\nassert solution(\n    \"2\"\n) == \"0\"\nassert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"2\"\n) == \"1\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('16') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '0'\nassert solution('''\n1\n16\n''') == '1'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"1\\n16\\n\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\\n\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '0'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''4\n2 3 5''') == '1'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0000\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0011') == '4'\nassert solution('001100') == '3'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('0001') == '2'\nassert solution('0111') == '1'"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0011') == '4'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0011') == '4'\nassert solution('101') == '0'\nassert solution('1010') == '1'\nassert solution('111') == '0'\nassert solution('101011') == '1'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(input()) == \"4\"\nprint(solution(input()))"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"01\") == \"0\"\nassert solution(\"0101\") == \"0\"\nassert solution(\"111\") == \"4\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('6 8') == '4'\nassert solution('3 9') == '3'\nassert solution('8 9') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('12') == '1'\n'''"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 1') == '1'\nassert solution('5 1') == '1'\nassert solution('6 1') == '1'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 3\n2 4''') == '2'\nassert solution('''5 3\n1 3\n2 4\n3 5\n4 6\n5 7''') == '5'\nassert solution('''10 10\n3 1\n7 9\n7 3\n5 8\n7 4\n2 2\n5 5\n1 6\n3 7\n8 8\n2 9\n9 1''') == '10'"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('1 3\\n2 4') == '1'\n\"\"\"\nimport sys"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 3') == '2'\nassert solution('2 2') == '1'\n\"\"\""
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n1 3\n2 4\n''') == \"2\"\n\"\"\"\nThe first ID card does not allow us to pass the second gate.\nThe second ID card allows us to pass all the gates.\nThe third ID card allows us to pass all the gates.\nThe fourth ID card does not allow us to pass the first gate.\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 2 1\\n') == '2'\nassert solution('8\\n1 2 2 1 1 3 2\\n') == '2'\nassert solution('9\\n1 2 3 4\\n') == '3'\n\n-----Hint:-----\nYou can just use the range function for this.\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 2 1\\n') == '2'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('5\\n1 2 1 1 2\\n') == '3'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"4\"\nassert solution(\"3\\n0 0 0 1\\n\") == \"0\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"10000\") == \"0\"\nassert solution(\"11\") == \"1\"\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 5\n    2 1 -3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n    2 4\n    -1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n    4 10\n    2 4 1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n    \"\"\") == \"0\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\nassert solution('''4 7\n1 1 2 2 3 1\n''') == '1'\nprint('Everything passed')"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 5\n2 1 -3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2 4\n-1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4 10\n2 4 1 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '3'\nassert solution('3 5') == '4'\nassert solution('4 10') == '2'\n\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \n\nassert solution(\n'''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n'''\nInput\n6\n4 8 6 3 12 9\n\nOutput\n9 3 6 12 4 8 \n\nInput\n4\n42 28 84 126\n\nOutput\n126 42 84 28 \n\nInput\n2\n1000000000000000000 3000000000000000000\n\nOutput\n3000000000000000000 1000000000000000000 \n\n\n\n-----Idea------\n\nWe start with finding the maximum value of the input sequence. Then we search for the value that is less than or equal to that value in the input sequence. The problem is that this value is not necessarily the one that will be the first in the output sequence. So we need to search for the closest value that is greater than the first value in the input sequence.\n\nWe can assume that the maximum value of the input sequence is at least as large as the third largest value in the input sequence. So we can assume that the minimum value of the input sequence is at least as large as the first value in the input sequence. \n\nWe search for a value that is large enough to the right of the maximum value in the input sequence that is smaller than this value. If we do not find a value that is large enough to the right of the maximum value, then we search for a value that is as small as the maximum value in the input sequence that is larger than this value. \n\nThis process continues until we find a value that is larger than the maximum value in the input sequence.\n\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '9 3 6 12 4 8'\nassert solution('4') == '9 3 6 12 4 8'\nassert solution('2') == '3000000000000000000 1000000000000000000'\nassert solution('6') == '126 42 84 28'"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n42 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n84 126 28 84 126') == '126 84 28 84 126'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9 3 6 12 4 8\"\nassert solution(input()) == \"126 42 84 28\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\nassert solution('''\n20\n10000000000000000000000000000000000000000000000000000000000000000000000000000000\n''') == '000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000000000000000 2') == '20 1000000000 20'\nassert solution('1000000000 30 10000000') == '1000000000 20 10000000'\nassert solution('1000000000 2') == '20000000000 1000000000000000'\nassert solution('1000000000000000 2') == '1000000000000000 2'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '9 3 6 12 4 8'\n\nassert solution(input) == '126 42 84 28'"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3000000000000000000 1000000000000000000\"\nassert solution() == \"126 42 84 28\"\nassert solution() == \"9 3 6 12 4 8\"\nassert solution() == \"4 8 6 3 12 9\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('6') == '5'\nassert solution('10') == '10'\nassert solution('12') == '12'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4 7 10 12\") == \"3\"\nassert solution(\"5\") == \"8\"\nassert solution(\"-1 2 5 8 11\") == \"8\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '8'\nassert solution('6') == '3'"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3 5 4 7 10 12'\nassert solution('5') == '-1 2 5 8 11'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 5 4 7 10 12\n\n''') == '1'\n\nassert solution('''\n5\n-1 2 5 8 11\n\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n3\n-1 2 5 8 11\n''') == '2'\n'''"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"4\"\nassert solution(input_) == \"8\""
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n-1 2 5 8 11\n''') == '1 8'\n\nassert solution('''\n6\n3 5 4 7 10 12\n''') == '3 5'\n\nassert solution('''\n7\n-1 2 5 8 11\n''') == '7 3 5'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '8'\nassert solution('6') == '3'"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '8'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 3\") == \"0 1\"\nassert solution(\"2 1 4\") == \"0 2\"\nassert solution(\"2 1 4\") == \"1 2\"\nassert solution(\"2 1 4\") == \"1 2\"\nassert solution(\"3 3 3\") == \"1 1\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"3 5 3\") == \"0 1\"\nassert solution(\"1 2 3\") == \"1 2\"\nassert solution(\"10 10 10\") == \"10 10\"\nassert solution(\"0 0 0\") == \"0 0\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 2 3') == '1 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 1 3\") == \"1 1\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1 2\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"2 3 1\") == \"0 2\"\nassert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"1 2 2\") == \"0 1\"\nassert solution(\"1 3 1\") == \"1 1\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n\"\"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 3 3\"\n) == \"0 2\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('103') == '3'"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('103') == '3'\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('103') == '3'\nassert solution('1') == '0'\nassert solution('101') == '1'\nassert solution('100') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('103') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('103') == '3'\nassert solution('100') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"30\") == \"10\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"103\") == \"3\""
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''103''') == '3'\nassert solution('''101''') == '1'\nassert solution('''1''') == '0'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('103') == '3'\nassert solution('101') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100') == '3'\nassert solution('101') == '1'\nassert solution('1010') == '2'\nassert solution('10011') == '3'\nassert solution('101001') == '3'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '9'\n\n-------------------------------------------------------\n--------------------------------------------------------------\n\nimport re\n\nn = int(input())\npattern = r'\\d+'\nsum_ = 0\nfor _ in range(n):\n    sum_ += int(re.search(pattern, input()).group())\nprint(sum_)\n\n--------------------------------------------------------\n\nimport re"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"9\""
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"15\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n''') == '9'\nassert solution('''\n3\n''') == '6'\nassert solution('''\n4\n''') == '4'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '1+1+1+1+1+1+1+2=9'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n''') == '6'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"9\""
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"10\""
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 6') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 4 6') == '10'"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 4, 6]) == \"10\", 'Sample Test 1'\nassert solution([3, 4, 6]) == \"10\", 'Sample Test 2'\nassert solution([3, 4, 6]) == \"10\", 'Sample Test 3'\nassert solution([3, 4, 6]) == \"10\", 'Sample Test 4'\nassert solution([3, 4, 6]) == \"10\", 'Sample Test 5'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '10'\nassert solution('10') == '10'\nassert solution('100') == '100'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"10\", \"Test 1\"\nassert solution(\"6\") == \"10\", \"Test 2\"\nassert solution(\"12\") == \"10\", \"Test 3\"\nassert solution(\"16\") == \"10\", \"Test 4\"\nassert solution(\"20\") == \"10\", \"Test 5\"\n\n\"\"\""
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n5 6\n''') == '10'\nassert solution('''\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('3\\n1 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\nassert solution('20') == 'No'\nassert solution('50') == 'Yes'\nassert solution('100') == 'Yes'"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\nassert solution('2') == 'No'\n\n---Output---\nExpected:\n\nYes\n\nActual:\n\nNo\n\n\n\n\nfrom collections import defaultdict\nimport itertools\nimport sys"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\") == \"Yes\"\nassert solution(\"5\\n6 6\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'No'"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '8'\nassert solution('1') == '1'\n\n\"\"\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\n\n\"\"\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"100\") == \"5050\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('1') == '0'"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0', 'Should be 0'\nassert solution('5') == '4', 'Should be 4'\nassert solution('1') == '1', 'Should be 1'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2''') == '4'\nassert solution('''0''') == '0'\nassert solution('''-1''') == '1'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 5 7 1\\n') == 'Yes\\n', \"First\"\nassert solution('4\\n5 5 1 5\\n') == 'No\\n', \"Second\"\nassert solution('2\\n3 4 5\\n') == 'Yes\\n', \"Third\"\n\"\"\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('10\\n3 4 4 5 6 7 8 8') == 'Yes'\nassert solution('12\\n12 12 12') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('5\\n6 3 2 2 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"2\\n1 2\") == \"No\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 8 5 1\n''') == 'Yes'\nassert solution('''\n10\n1 2 1 3 4 5 6 8 9\n''') == 'Yes'\n''')\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('10\\n3 9 6 7 5 4 2 1') == 'No'"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('10\\n4 5 7 8 1') == 'No'"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n1 5 1 2 2 2\") == \"Yes\"\nassert solution(\"7\\n1 2 2 2 2 1\") == \"No\"\n\n'''\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\nassert solution('5\\n2 4 5 2 2\\n') == 'No'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"4 0\") == \"1\"\nassert solution(\"3 3\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '-1'\nassert solution('3 2') == '702'"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 3\n1 7\n3 2\n1 7\"\"\") == \"702\"\nassert solution(\"\"\"5 5\n1 7\n3 2\n1 7\n1 4\n1 4\"\"\") == \"-1\"\nassert solution(\"\"\"5 5\n1 4\n3 2\n1 7\n1 4\n1 4\"\"\") == \"-1\"\nassert solution(\"\"\"3 3\n0 2\n1 7\n1 4\n1 4\"\"\") == \"702\"\nassert solution(\"\"\"3 3\n1 7\n3 2\n1 7\"\"\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"2 3\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '702'\nassert solution('2 2') == '-1'\nassert solution('4 3') == '-1'\n\"\"\"\n\nfrom itertools import permutations"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '702'\nassert solution('2 2') == '-1'\n\"\"\""
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '702'\nassert solution('4 5') == '-1'\nassert solution('7 1') == '702'\nassert solution('3 1') == '-1'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 7\n3 2''') == '702'\nassert solution('''1 0\n1 7\n2 9''') == '-1'\nassert solution('''5 5\n1 7\n2 9\n1 2\n1 7\n1 9\n1 3\n1 4\n3 2\n2 4\n2 3''') == '914'\nassert solution('''7 5\n1 2\n1 3\n1 5\n1 6\n1 7\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16''') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('1 0\\n0 1\\n0 0\\n1 0') == '-1'\nassert solution('3 3\\n1 7\\n3 2\\n1 7\\n9 0\\n2 8\\n3 1\\n0 2') == '702'"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"4 4\") == \"172\"\n\"\"\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"9\"\nassert solution(\"5 6\") == \"15\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"8 2\") == \"7\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 2\") == \"7\"\nassert solution(\"1 100\") == \"1\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '9'"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"9\"\nassert solution(\"3 2\") == \"9\"\nassert solution(\"4 3\") == \"54\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '9'\nassert solution('1 2') == '6'\nassert solution('3 3') == '18'\n\"\"\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2\\n\"\n    ) == \"9\"\nassert solution(\n    \"10 20 30\\n\"\n    ) == \"108\"\nassert solution(\n    \"100000000 1000000000\\n\"\n    ) == \"189309184588830000\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '9'\nassert solution('100 10') == '181'\nassert solution('1000 100') == '99986789'"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"5 3\") == \"42\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3,2]) == 9"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"10 5\") == \"12\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-9\") == \"1011\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1011\"\nprint(solution(input()))\n\"\"\"\nimport os\nimport sys\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == '0'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-19\") == \"110111\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"-1\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-100\") == \"1010\"\nassert solution(\"-9\") == \"1011\"\nassert solution(\"-1000\") == \"1010\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-7\") == \"0111\"\nassert solution(\"-2\") == \"0\"\nassert solution(\"-2147483647\") == \"10000100001\""
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-9') == '1011'\nassert solution('-27') == '-11'\nassert solution('-23') == '-6'\nassert solution('-13') == '-11'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"101\"\nassert solution(\"9\") == \"1111\"\nassert solution(\"-9\") == \"1101\"\nassert solution(\"-11\") == \"11001\"\nassert solution(\"-99\") == \"111001\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-8\") == \"-9\"\nassert solution(\"-7\") == \"7\"\nassert solution(\"-6\") == \"6\"\nassert solution(\"-5\") == \"5\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''2 5\n4 9\n2 4\n''') == '12'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"2 5\\n3 2\\n3 2\") == \"6\"\nassert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 5\n4 9\n2 4\n''') == '12'\nassert solution('''\n2 5\n4 9\n2 3\n''') == '12'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"3 3\") == \"15\"\nassert solution(\"4 2\") == \"20\"\nassert solution(\"10 10\") == \"20\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 5]) == \"12\"\nassert solution([3, 2]) == \"5\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\nassert solution('''1 2\n3 4\n''') == '5'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 5]) == \"12\"\nassert solution([4, 9]) == \"12\"\nassert solution([2, 4]) == \"10\"\nassert solution([4, 8]) == \"10\"\nassert solution([2, 8]) == \"10\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"12\""
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 5\n4 9\"\"\") == \"12\"\nassert solution(\"\"\"3 3\n2 5\n3 6\n4 7\"\"\") == \"8\"\nassert solution(\"\"\"2 1\n2 5\"\"\") == \"5\""
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '4'\nassert solution('5 4') == '4'\nassert solution('4 3') == '3'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n5 6 7 8\") == \"4\"\nassert solution(\"1\\n5\") == \"0\"\nassert solution(\"4\\n1 2\") == \"0\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\nassert solution(input(\"\")) == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\n\"\"\"\n\nN = int(input())\nH = list(map(int, input().split()))\nmax_steps = 0\ncur_steps = 0\ncur_h = H[0]\nfor i in range(1, N):\n    cur_h = max(cur_h, H[i])\n    max_steps = max(max_steps, cur_h)\n    if max_steps < cur_h:\n        cur_h = max_steps\n        cur_steps = 0\n    if cur_h == cur_steps:\n        cur_steps += 1\n        if cur_steps == i:\n            cur_steps = 0\nprint(cur_steps)"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"15\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\nassert solution('''5\n10 4 8 7 3\n5 4 8 7 3''') == '4'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 2\\n3 4\\n') == '2'\nassert solution('5\\n10 4 8 7 3\\n') == '2'"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n'''\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('10') == '4'\nassert solution('15') == '5'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('10') == '2'\nassert solution('100') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('3\\n1 2 3') == '1'\nassert solution('6\\n12 13 4 5 14 7') == '3'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '1'\nassert solution('5 3') == '0'"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 3\n''') == '1'\nassert solution('''\n4 3\n1 2 2 2\n''') == '1'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 2 4 5\n''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3') == '3'\nassert solution('6 5\\n3 3 2 1 1 1 3') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input_1) == str(3)\nassert solution(example_input_2) == str(4)\nassert solution(input) == str(3)\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6 5\n1 2 2 4 2 3\n'''\n) == \"3\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''\n8 7\n1 1 2 3 3 3 1\n''') == '0'\nassert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('6 5') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n3 3 2 1 1 1 3\") == \"4\"\nassert solution(\"1 2 2 4 2 3\") == \"3\""
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10 1 3\") == \"10\"\nassert solution(\"10 1 3\") == \"10\"\nassert solution(\"1 1000 1\") == \"9\"\nassert solution(\"1000000000000 42 88\") == \"42000000000000\""
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10 9 42000000000000\"\nassert solution(\"\"\"\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10 9 42000000000000\"\nassert solution(\"\"\"\n1\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10 9 42000000000000\"\nassert solution(\"\"\"\n2\n1 1 1\n1 1 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n100\n100 1 3\n1 1 2\n1 100 1\n1 100 1\n\"\"\") == \"100 1\""
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1 3') == '9'\nassert solution('7 3 2') == '1000'\nassert solution('1 1000 1') == '42000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10'\n\nassert solution('''5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n2\n1 1''') == '9'\n\nassert solution('''8\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n2\n1 1\n1 2''') == '42000000000000'\n\nassert solution('''5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n2\n1 1\n2 3''') == '10'"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\nassert solution('''\n2\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '1000'\nassert solution('''\n5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 1 3\") == \"9\"\nassert solution(\"7 3 2\") == \"1000\"\nassert solution(\"1 1000 1\") == \"42000000000000\"\nassert solution(\"1000000000000 42 88\") == \"42000000000000\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 3\\n7 3 2\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"1\\n1 1\\n1\") == \"1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10 9 1000 42000000000000\"\nassert solution(\"\"\"\n3\n1 2 3\n2 1 3\n1 2 3\n\"\"\") == \"2 2 2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4 5\") == \"2\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"3 2 2 3\") == \"2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"4 6\") == \"2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == '2'\nassert solution(\"3 4 5\") == '3'\nassert solution(\"3 6\") == '2'\nassert solution(\"20 10\") == '1'\nassert solution(\"13 22\") == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n\"\"\"\nfrom math import floor, sqrt"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4\\n') == '2'\nassert solution('3 3\\n4 4\\n') == '1'\nassert solution('7 3\\n4 4\\n') == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 6\") == \"1\"\nassert solution(\"3 4 5\") == \"2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == '2'\nassert solution('5 2') == '4'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"10 4\") == \"3\""
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 5\") == \"2\"\nassert solution(\"6 3 6\") == \"2\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('6') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"8\\neagle\\neagle\\nabcdef\\nghijkl\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\neng\\n') == 'Yes'\nassert solution('4\\nenigma\\ne\\n') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nhungry\nhungry\nhungry\nhungry\nhungry''') == \"No\"\nassert solution('''1\nhungry\nhungry\nhungry\nhungry\nhungry''') == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nhoge\\ne\\ng\\n\") == \"No\"\nassert solution(\"3\\nhoge\\ne\\ne\\n\") == \"Yes\"\nassert solution(\"5\\ne\\ne\\n\") == \"Yes\"\nassert solution(\"4\\nhoge\\ne\\ne\\n\") == \"Yes\"\nassert solution(\"10\\nhogehoge\\ne\\ne\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nhoge\\nhoge\\neven\\nfuga\\n') == 'Yes'\nassert solution('6\\nhoge\\neven\\nfuga\\nhoge\\n') == 'No'\nassert solution('5\\nhoge\\neven\\nfuga\\n') == 'No'\nassert solution('4\\nhoge\\neven\\nfuga\\n') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes', '\uccab \ubc88\uc9f8 \uc904\uc740 \uc2e4\ud589\uc744 \uc548\ud558\uace0 \uc2f6\ub2e4'\nassert solution('2') == 'Yes', '\ub450 \ubc88\uc9f8 \uc904\uc740 \uc2e4\ud589\uc744 \uc548\ud558\uace0 \uc2f6\ub2e4'\nassert solution('3') == 'No', '\uc138 \ubc88\uc9f8 \uc904\uc740 \uc2e4\ud589\uc744 \uc548\ud558\uace0 \uc2f6\ub2e4'\nassert solution('4') == 'Yes', '\ub124 \ubc88\uc9f8 \uc904\uc740 \uc2e4\ud589\uc744 \uc548\ud558\uace0 \uc2f6\ub2e4'\nassert solution('5') == 'Yes', '\ub2e4\uc12f \ubc88\uc9f8 \uc904\uc740 \uc2e4\ud589\uc744 \uc548\ud558\uace0 \uc2f6\ub2e4'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"8\"\n\n\"\"\"\n\nimport math\nfrom itertools import combinations"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input := '2 3') == '6'\n\"\"\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '6'\nassert solution('1 1 1 1') == '3'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"5 6\") == \"7\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"10 2\") == \"10\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '6'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"4 5\") == \"7\"\nassert solution(\"5 6\") == \"7\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 5') == '5'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"\") == \"\"\nassert solution(\"ad\") == \"xaxxaxaxax\"\n\n------------------------------------------------------------------------------------------------------------------------"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'Sardine'\n    ) == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('maggie') == 'xxxxxxx'\n\"\"\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('hello world') == 'xxxxxhelolxxord'\nassert solution('a b') == 'x a x'\nassert solution('') == ''\nassert solution('s') =='s'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardinebacon') == 'xxxxxxx'\nassert solution('sardinebacon1') == 'xxxxxxx'\nassert solution('sardinebacon2') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 1, 2, 1, 3]) == 'Yes'\nassert solution([2, 3, 1, 2, 1]) == 'No'\nassert solution([1, 2, 3, 4, 5]) == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"10\\n1 2 3 4 5 2 3 2 2 5\\n\") == \"No\"\nassert solution(\"10\\n5 1 2 3 4 2 5 1 2 3 4\\n\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('5\\n1 2 1 1 3\\n') == 'Yes'\nassert solution('4\\n3 4 2 4\\n') == 'No'\nassert solution('2\\n1 2\\n') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"4\\n1 2 3 2\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('6\\n1 2 2 3 3 3') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('20') == 'No'"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 3 1') == '1'\nassert solution('5 2 -1') == '4'\nassert solution('5 2 -2') == '3'\nassert solution('5 2 1') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 -10') == '1'\nassert solution('2 4 -20') == '0'\nassert solution('2 3 -10') == '0'\nassert solution('5 5 -10') == '1'\n\"\"\"\nimport sys"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\nassert solution('''4 4 -20\n1 2 3\n3 2 1\n1 2 2\n2 3 4''') == '2'\n\n'''\n\nimport math\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"2 3 -10\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\nassert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '2'\nassert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '0'"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"2 1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2 3\n1 2 3\n1 2 2\n''') == '1'\nassert solution('''\n2\n3 2\n2 3 1\n1 2 2\n''') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n\"\"\"\n\nn, m, c = list(map(int, input().split()))\n\ncodes = []\nfor i in range(n):\n    codes.append(list(map(int, input().split())))\n\ncodes.sort(key=lambda x: (x[0], x[1]))\n\nresult = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if (codes[i][0] * codes[j][1] + codes[i][1] * codes[j][0] + c) > 0:\n            result += 1\n\nprint(result)\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('4 3 -10') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '2'\nassert solution('15') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1900\") == \"100\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1900') == '100'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('101') == '10'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"100\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"100\"\nassert solution(\"10\") == \"100\"\nassert solution(\"1\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100\""
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('10000') == '1'\nassert solution('1111') == '3'\nassert solution('4999') == '7'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '2'\n\"\"\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2\") == \"9\"\nassert solution(\"4 5\") == \"12\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n5 2\n4 5\"\"\") == \"9\"\nassert solution(\"\"\"5\n10 7\n4 5\n7 6\n9 8\n3 6\"\"\") == \"23\"\nassert solution(\"\"\"2\n3 1\n2 1\"\"\") == \"4\""
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 2\\n4 5\") == \"9\""
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 5 2\n4 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 3 2\n1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3 5 2\") == \"9\"\nassert solution(\"4 5\") == \"10\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2\\n3 5 2\\n4 5') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '10'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n3 5 2\n4 5\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20') == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\""
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20') == 'No War', \"Wrong answer\"\nassert solution('2 2 10 20') == 'War', \"Wrong answer\""
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"No War\""
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 10 20\") == \"War\"\nassert solution(\"4 2 20 10\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"4 2 6 30\") == \"No War\"\nassert solution(\"3 2 2 2\") == \"War\"\n\nThe answer should be given using print function so that it can be read by the console.\nNote: If your code is not given enough time to run, there is no guarantee that the input is read.\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"No War\"\nassert solution(\"2 3 4\") == \"No War\"\nassert solution(\"3 4 5\") == \"War\"\nassert solution(\"10 20 30 40 50 60\") == \"War\""
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('4 5 3 10 15') == 'War'"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 3 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('2 3 10 20') == 'No War'\nassert solution('3 1 1 1') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 11 20\") == \"War\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n') == '6'\nassert solution('4\\n3\\n') == '6'\nassert solution('6\\n3\\n') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('2') == '6'\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '6'\n\n---\n\nIt's a simple logic question.\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\n''') == '6'\n\nassert solution('''\n2\n4\n''') == '4'\n\nassert solution('''\n10\n14\n''') == '30'\n\nassert solution('''\n2\n1\n''') == '0'\n\nassert solution('''\n2\n3\n''') == '9'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"10\") == \"7\"\nassert solution(\"2\") == \"9\"\nassert solution(\"10\") == \"10\"\nprint('\"Run\" is good. Great Job!')"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n4') == '6'\nassert solution('2\\n4\\n5') == '7'\nassert solution('3\\n4\\n6') == '9'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('2') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '9'\n\n----------------------------------------\nYou want to print the number of seconds after which the hand of each clock points upward again. \n\nYou need to write a program that reads from standard input two integers, N and T_1. \nThen prints the number of seconds after which the hand of every clock points \ndirectly upward again. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\nN\n2\nT_1\n3\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n3\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n3\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n-1\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n2\n3\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n2\n3\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n3\n2\nThen the output should be:\n\n-1\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n3\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n5\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain N. \nThe second line should contain T_1. \nThen it should write a line of output containing the number of seconds after which the clock points directly upward. \nIf the clock does not rotate by exactly 180 degrees, \nyou need to print -1. \nFor example, if the input is:\n\n3\n2\nThen the output should be:\n\n6\n\n-------------------------------------------------\nWrite a program that reads from standard input two integers, N and T_1. \nThe first line should contain"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10\n''') == '10', solution('''\n1\n10\n''')\nassert solution('''\n2\n2\n''') == '6', solution('''\n2\n2\n''')\nassert solution('''\n4\n4\n''') == '3', solution('''\n4\n4\n''')\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n') == '6'\n\"\"\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"0\"\nassert solution(\"1\\n2 3\\n\") == \"0\"\nassert solution(\"2\\n1\\n\") == \"0\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"0\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"7\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\n\"\"\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '0'"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 4 5 2\") == \"0\"\nassert solution(\"4\\n3 4 5 2\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 1, 4, 3, 2]) == '0'\nassert solution([8, 6, 5, 4, 2]) == '3'\nassert solution([9, 8, 6, 5, 4, 3, 2]) == '1'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('4\\n10 20 30 40') == '9'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(\"4 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"2\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test) == '6'\nassert solution(input) == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution(\n'''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 4\") == \"0\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5 10 2 3 14 5\n''') == '5'\n\nassert solution('''2\n1 100\n''') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"99\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"5\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\") == \"99\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\nassert solution('1 100') == '100'\nassert solution('2') == '99'\nassert solution('2') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n\nassert solution('3') == '0'\n\nassert solution('7') == '3'\n\nassert solution('3') == '0'\n\nassert solution('5') == '2'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\"\n) == \"2\"\nassert solution(\n    \"6\"\n) == \"3\"\nassert solution(\n    \"7\"\n) == \"0\"\nassert solution(\n    \"3\"\n) == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n1 0 1 0 1\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"6\\n0 1 0 1 1 0 1\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"7\\n1 0 1 1 1 0 1\\n\"\n) == \"0\\n\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('9') == '3'\nassert solution('15') == '10'\nassert solution('16') == '11'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('99') == '98'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n\n''') == '1'\nassert solution('''7\n\n''') == '0'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"\"\nassert solution('1') == \"1\"\nassert solution('7') == \"0\"\nassert solution('0') == \"1\"\nassert solution('1') == \"1\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '1'\nassert solution(input) == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n\n\n'''\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('7') == '0'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n\n''') == '1'\nassert solution('''\n7\n\n''') == '0'\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\n\n'''\n\n'''"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join(['brie soft', 'camembert soft', 'feta soft', 'goat soft','muenster soft', 'asiago hard', 'cheddar hard', 'gouda hard','swiss hard'])) == '3'\nassert solution('\\n'.join(['parmesan hard', 'emmental hard', 'edam hard', 'colby hard', 'gruyere hard', 'asiago hard', 'cheddar hard', 'gouda hard','swiss hard'])) == '4'\n\n\"\"\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3', f'Expected {3} but got {solution('')}'\nassert solution('''\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4', f'Expected {4} but got {solution('')}'\n\n\n'''\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nbrie soft\ncamembert soft\nfeta soft''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == '4'\n''')\nprint('Test passed')"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'\nassert solution('0') == '0'"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    7\n    brie soft\n    camembert soft\n    feta soft\n    goat soft\n    muenster soft\n    asiago hard\n    \"\"\") == \"7\"\n\nassert solution(\"\"\"\n    3\n    parmesan hard\n    emmental hard\n    edam hard\n    colby hard\n    gruyere hard\n    asiago hard\n    \"\"\") == \"4\"\n\nassert solution(\"\"\"\n    1\n    brie hard\n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    5\n    parmesan hard\n    emmental hard\n    edam hard\n    colby hard\n    gruyere hard\n    asiago hard\n    \"\"\") == \"5\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'\n'''"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '3'\n\"\"\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\n\n\"\"\"\n\nN=int(input())\ncheese_list=[]\nfor i in range(0,N):\n    cheese_list.append(input().split())\ncheese_list.sort()\ncount=0\nfor i in range(0,N):\n    if(cheese_list[i][1]==\"soft\"):\n        count=count+1\nprint(count)"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 1 2 1') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1 0 0 2\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n3\n''') == '0 0 0 1 0 2 4', 'Test #1 failed.'\nassert solution('''\n6\n2 1 3 4 5 1\n5 2 1 3 4 2\n''') == '0 0 1 0 1 2 4', 'Test #2 failed.'\nassert solution('''\n5\n7 5 1 4 5 2\n7 5 1 5 4 2\n''') == '0 0 0 1 1 0 2', 'Test #3 failed.'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0 1 2 1'\nassert solution('7') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"\nassert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"0 0 0 1 0 2 4\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2\n3 4''') == \"1 0 0 2\"\nassert solution('''4\n0 1 2 1\n3 2 1 1\n4 5 6 5 1\n7 8 9 8 1''') == \"0 0 0 1 0 2 4 7 8 9 8\"\nprint('all tests passed')"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 0 0 2 0 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"5\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 0 0', solution('3')\nassert solution('4') == '0 0 0 1', solution('4')\nassert solution('10') == '9 8 7 6 5 4 3 2 1 0', solution('10')\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n\nInput\n1\n1\n1\n1\n\nOutput\n1\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"0\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00') == '0'\nassert solution('01') == '1'\nassert solution('11') == '1'\nassert solution('10') == '0'\nassert solution('00') == '0'\n\n\n'''\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\n\n\n'''\n\n\nfrom collections import deque\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == 'Yes'\nassert solution('10000 1000 80') == 'Yes'\nassert solution('100 100 80') == 'No'\nassert solution('1000 1000 1') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\\n\") == \"Yes\"\nassert solution(\"10 1 2\\n\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\\n\") == \"Yes\", \"Wrong result for input '1000 15 80'\"\nassert solution(\"1\\n\") == \"No\", \"Wrong result for input '1'\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"100 50 50\") == \"No\"\nassert solution(\"100 1 0\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 -15 80') == 'No'\nassert solution('100 15 80') == 'Yes'\nassert solution('100 -15 80') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 85') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('3 4 5') == 'Yes'\nassert solution('100 10 90') == 'No'"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 15 80\\n') == 'Yes\\n'\nassert solution('1000 15 50\\n') == 'No\\n'"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 15 80\\n') == 'Yes\\n'\nassert solution('1000 20 80\\n') == 'No\\n'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n84\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n84\\n25\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n84\\n32\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('89') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'\nassert solution('21 30 21\\n19 40 19\\n21 20 21\\n') == 'No'\n\n[23]\n\n------BONUS------\nUsing 3 or more methods of the Python Built-In Functions, write a Python program that implements a simple calculator.\nThe program should accept a sequence of lines, each containing an arithmetic expression in infix notation.\nYou can assume the expression on each separate line is valid (i.e. that the expression is well-formed according to the language specification).\nThe program should evaluate the infix expression and return the result in infix notation.\n\n-----Input-----\n2\n1\n+\n2\n*\n\n3\n1 +\n2 *\n3\n4\n\n4\n1 + 2 * 3\n3 + 4 * 5\n6 + 7 * 8 + 9\n\n5\n1 + 2 * (3 + 4)\n2 + 3 + 4 + 5 + 6\n\n6\n1 + 2 * (3 + 4) * (5 + 6) * 7\n2 + 3 + 4 + 5 + 6 + 7\n\n7\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\n\n8\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10\n\n9\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11\n\n10\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12\n\n11\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13\n\n12\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14\n\n13\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15\n\n14\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16\n\n15\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17\n\n16\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18\n\n17\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19\n\n18\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20\n\n19\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21\n\n20\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22\n\n21\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23\n\n22\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24\n\n23\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 25\n2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 25\n\n24\n1 + 2 * (3 + 4) * (5 + 6) * 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 +"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"No\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('86 71 10\\n83 43 20\\n83 27 30\\n71 13 19\\n43 28 21\\n10 43 12\\n10 20 23\\n12 43 12\\n31 20 27\\n28 28 20\\n43 17 16\\n10 12 27\\n31 12 21\\n28 20 23\\n20 21 28\\n32 24 16\\n33 20 12\\n26 23 17\\n12 20 26\\n31 27 29\\n20 12 26\\n32 25 21\\n10 20 27\\n29 23 28\\n25 26 21\\n34 12 23\\n12 23 29\\n31 20 27\\n20 27 29\\n32 25 21\\n20 21 29\\n30 28 27\\n27 29 26\\n32 12 24\\n10 26 27\\n31 23 12\\n20 25 29\\n20 25 28\\n32 24 21\\n32 24 20\\n32 25 21\\n10 20 21\\n33 24 21\\n31 23 28\\n10 21 29\\n29 24 26\\n30 26 27\\n26 25 27\\n32 23 28\\n23 28 29\\n31 23 21\\n12 26 28\\n32 17 21\\n31 20 12\\n33 25 22\\n27 29 20\\n28 23 21\\n12 20 21\\n31 21 29\\n27 29 26\\n28 23 27\\n32 18 29\\n23 29 30\\n21 30 12\\n26 25 29\\n29 23 21\\n21 23 29\\n25 20 28\\n30 26 21\\n29 22 23\\n27 25 28\\n23 28 29\\n20 26 29\\n31 26 21\\n20 21 29\\n25 20 28\\n29 20 29\\n32 17 28\\n17 29 30\\n21 20 30\\n27 25 23\\n27 28 29\\n17 27 29\\n30 25 21\\n20 20 30\\n30 23 22\\n25 20 21\\n20 25 21\\n29 17 21\\n31 23 22\\n21 20 30\\n25 20 21\\n29 21 20\\n30 23 23\\n27 20 27\\n29 17 22\\n29 17 29\\n30 26 21\\n26 17 30\\n21 20 23\\n26 18 29\\n26 17 30\\n30 25 21\\n30 20 21\\n25 20 21\\n27 20 23\\n27 17 30\\n21 23 30\\n31 26 21\\n31 20 24\\n20 25 29\\n30 26 21\\n20 21 29\\n25 20 28\\n27 20 23\\n32 26 29\\n30 20 30\\n25 20 21\\n27 17 30\\n29 17 25\\n29 17 30\\n29 16 21\\n31 25 24\\n31 25 23\\n27 20 24\\n20 26 28\\n20 21 30\\n27 26 29\\n20 17 30\\n27 23 29\\n30 20 24\\n26 20 29\\n27 17 31\\n26 22 29\\n27 20 30\\n20 20 30\\n26 24 27\\n26 20 25\\n27 20 28\\n20 21 30\\n27 21 29\\n26 20 30\\n27 23 29\\n31 27 24\\n31 20 29\\n20 21 30\\n30 20 30\\n21 20 21\\n25 20 29\\n26 21 30\\n30 21 30\\n32 20 27\\n32 20 26\\n32 20 25\\n32 20 24\\n32 20 23\\n31 25 26\\n31 20 28\\n27 25 29\\n27 20 29\\n27 20 30\\n27 20 24\\n27 20 23\\n27 20 23\\n31 26 26\\n31 20 28\\n31 20 29\\n31 20 30\\n31 20 24\\n31 20 23\\n31 20 22\\n31 20 21\\n30 20 28\\n30 20 30\\n30 20 24\\n30 20 23\\n27 20 28\\n27 20 29\\n27 20 30\\n27 20 24\\n27 20 23\\n27 20 22\\n27 20 21\\n27 20 20\\n27 20 19\\n27 20 18\\n30 20 21\\n30 20 30\\n30 20 24\\n30 20 23\\n30 20 22\\n30 20 21\\n30 20 20\\n31 20 28\\n31 20 29\\n31 20 30\\n31 20 24\\n31 20 23\\n31 20 22\\n31 20 21\\n31 20 20\\n31 20 19\\n31 20 18\\n30 20 26\\n30 20 30\\n30 20 24\\n30 20 23\\n30 20 22\\n30 20 21\\n30 20 20\\n30 20 19\\n30 20 18\\n31 20 29\\n31 20 30\\n31 20 24\\n31 20 23\\n31 20 22\\n31 20 21\\n31 20 20\\n31 20 19\\n31 20 18\\n31 20 17\\n31 20 16\\n31 20 15\\n30 26 27\\n31 26 24\\n31 26 23\\n30 26 22\\n30 26 21\\n30 26 20\\n31 26 21\\n31 26 20\\n30 26 20\\n31 26 23\\n31 26 22\\n30 26 21\\n31 26 21\\n30 26 20\\n31 26 24\\n31 26 23\\n31 26 22\\n31 26 21\\n31 26 20\\n30 26 27\\n30 26 20\\n30 26 23\\n31 26 24\\n31 26 22\\n30 26 21\\n30 26 21\\n30 26 20\\n30 26 19\\n31 26 21\\n31 26 20\\n31 26 19\\n31 26 18\\n31 26 17\\n31 26 16\\n31 26 15\\n31 26 14\\n31 26 13\\n31 26 12\\n31 26 11\\n31 26 10\\n30 26 28\\n30 26 27\\n30 26 26\\n30 26 25\\n31 26 25\\n31 26 24\\n31 26 23\\n31 26 22\\n31 26 21\\n31 26 20\\n31 26 19\\n31 26 18\\n31 26 17\\n31 26 16\\n31 26 15\\n31 26 14\\n31 26 13\\n31 26 12\\n31 26 11\\n31 26 10\\n31 26 9\\n31 26 8\\n31 26 7\\n31 26 6\\n31 26 5\\n31 26 4\\n31 26 3\\n30 26 27\\n31 26 27\\n31 26 26\\n31 26 25\\n31 26 24\\n31 26 23\\n31 26 22\\n31 26 21\\n31 26 20\\n31 26 19\\n31 26 18\\n31 26 17\\n31 26 16\\n31 26 15\\n31 26 14\\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\") == \"Yes\"\nassert solution(\"1\\n1\\n1\\n1\") == \"No\""
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n87\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\") == \"Yes\", \"Should be Yes\"\nassert solution(\"79 89 11\") == \"Yes\", \"Should be Yes\"\nassert solution(\"61 59 7\") == \"Yes\", \"Should be Yes\"\nassert solution(\"7\") == \"No\", \"Should be No\"\nassert solution(\"89\") == \"Yes\", \"Should be Yes\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('41 2\\n5 6\\n') == '30'\nassert solution('10\\n20\\n') == '-1'\n\n\"\"\")\n\nimport math\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('16 3\\n2 7 8\\n10 4 9\\n3 5 6\\n12 1 2 3\\n12 4 5 6\\n11 12 13 14 15\\n5 3 2 6\\n8 7 6 5\\n11 12 13 14 15\\n3 7 2 5\\n4 6 2 5\\n1 1 2 3') == '-1'\nassert solution('1 2\\n2 3\\n') == '-1'\nassert solution('1\\n2\\n') == '0'"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"30\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"20 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"30\""
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('10 4\\n10 10 5 6 7 7 9 8 8 2 2\\n1 2\\n7 7 6 7 1\\n7 9\\n5 9 7 1\\n8 9\\n1 9 5 6 8 7 8\\n1 4\\n5 6\\n2 3\\n9 8\\n2 1\\n4 5\\n5 6\\n6 6\\n6 6\\n6 6\\n5 5\\n2 1\\n7 3\\n3 3\\n1 4\\n4 3\\n4 2\\n5 3\\n5 2\\n2 3\\n2 3\\n2 3\\n6 6\\n3 4\\n4 2\\n4 4\\n2 5\\n5 1\\n3 1\\n2 2\\n5 1\\n2 1\\n5 1\\n2 1\\n1 1\\n2 1\\n2 1\\n1 3\\n1 2\\n2 1\\n2 1\\n4 5\\n2 3\\n2 4\\n4 2\\n4 2\\n2 3\\n2 3\\n4 3\\n1 4\\n2 3\\n1 4\\n3 4\\n3 4\\n3 4\\n3 4\\n1 3\\n5 1\\n2 4\\n1 2\\n2 1\\n3 3\\n2 4\\n4 4\\n3 4\\n4 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n4 4\\n2 4\\n1 4\\n5 1\\n3 4\\n2 4\\n2 5\\n4 2\\n4 2\\n4 2\\n4 2\\n4 2\\n2 5\\n2 3\\n2 4\\n4 2\\n4 2\\n4 2\\n2 3\\n2 3\\n1 4\\n5 1\\n4 3\\n2 4\\n2 5\\n2 5\\n3 4\\n2 3\\n4 4\\n3 4\\n4 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n4 4\\n2 4\\n2 5\\n2 5\\n1 3\\n2 3\\n1 4\\n2 3\\n1 4\\n3 4\\n3 4\\n3 4\\n4 4\\n3 4\\n2 4\\n2 4\\n2 4\\n2 5\\n3 4\\n1 3\\n2 4\\n2 4\\n1 4\\n4 2\\n4 2\\n2 4\\n4 4\\n1 4\\n3 4\\n1 4\\n3 4\\n2 4\\n1 4\\n3 4\\n2 4\\n2 5\\n2 4\\n2 5\\n2 5\\n1 5\\n2 4\\n2 5\\n2 5\\n1 5\\n2 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n1 5\\n2 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n2 5\\n1 5\\n2 5\\n2 5\\n1 5\\n2 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n2 5\\n1 5\\n2 5\\n1 5\\n1 5\\n2 5\\n2 5\\n2 5\\n2 5\\n1 5\\n1 5\\n1 5\\n2 5\\n2 5\\n2 5\\n1 5\\n1 5\\n1 5\\n1 5\\n2 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '30'\nassert solution('41 2') == '30'\nassert solution('41 1') == '-1'\nassert solution('41 2') == '30'"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('1 2') == '30'\nassert solution('10 10') == '30'\nassert solution('1 2') == '30'\nassert solution('1 2') == '30'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nassert solution('''41 2\n6 5\n''') == '31'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('41 2\\n5 7') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('41 2') == '30'\nassert solution('101 2') == '-1'"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 1') == '1'\nassert solution('2 3') == '6'\nassert solution('2 1') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 3\") == \"3\"\nassert solution(\"1 4\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"1 3\") == \"3\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 5\\n') == '5'\nassert solution('1 5\\n') == '1'\nassert solution('2 5\\n') == '2'\nassert solution('3 5\\n') == '3'\nassert solution('4 5\\n') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 10') == '9'\nassert solution('2 10') == '8'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7 6 8\n''') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('8') == '2'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n7 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n4 2 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n7 5 1 8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7\n7 6 3 5 7 8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n8\n7 8 6 5 2 5 6 7\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('2\\n3 5 8') == '1'\nassert solution('1\\n2 3 4') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n7 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n7 6 8\n10 8 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2', \"Wrong!\"\nassert solution('5\\n3 2 2 5 1') == '3 2 5 1 5 2', \"Wrong!\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('5') == '2 3 1 4 5'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 1 2'\nprint('Solution:', solution(input()))\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\", \"Wrong answer\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '1 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('7') == '3 1 2 4 5 6 7'\nassert solution('3') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 1 2', 'Wrong result'\nassert solution('1') == '1', 'Wrong result'\nassert solution('3') == '3 1 2', 'Wrong result'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 8 500\") == \"10\"\nassert solution(\"10 7 100 10\") == \"10\"\nassert solution(\"10 7 100 12345\") == \"10\""
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    int(x) for x in input().split()\n]) == '9'"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10\") == \"0\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10\") == \"0\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10\") == \"0\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '0'\nassert solution('10 5 12345') == '12345'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 1') == '0'\nassert solution('1 100') == '0'\nassert solution('1 12345') == '0'\nassert solution('1 1234567') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''10 2 1''') == '0'\nassert solution('''10 2 5''') == '0'\nassert solution('''10 7 100''') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\""
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\n\n'''\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]) == \"9999999999999\"\nassert solution([10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"10 7 100\n\"\"\") == \"9\"\nassert solution(\n\"\"\"11 7 100\n\"\"\") == \"0\"\nassert solution(\n\"\"\"5 6 100\n\"\"\") == \"0\"\nassert solution(\n\"\"\"1 2 100\n\"\"\") == \"0\""
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"10 0\") == \"10\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 150\\n150 140 100 200\\n') == '2'\nassert solution('10 10\\n1 1 1 1 1 1 1 1 1\\n') == '0'\n\"\"\""
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '1'\nassert solution(3) == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '3'\nassert solution('5 5') == '4'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4 150\") == \"2\"\nassert solution(\"4 150 160\") == \"3\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1') == '2'\nassert solution('10 10') == '1'\nassert solution('20 20') == '2'\nassert solution('40 40') == '2'\nassert solution('150 140 100 200') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10') == '2', \"Wrong!\"\nassert solution('3 3') == '3', \"Wrong!\"\nassert solution('7 3') == '4', \"Wrong!\"\nassert solution('3 2') == '1', \"Wrong!\"\nassert solution('5 5') == '1', \"Wrong!\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 1\n5 4 2 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 2\n5 5 3 1\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"6 3\") == \"No\"\nassert solution(\"10 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\n5 4 2 1') == 'Yes'\nassert solution('4 1\\n5 4 2 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'No'\nassert solution('4 2') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 1\\n5 4 2 1\") == \"No\"\nassert solution(\"4 2\\n5 4 2 1\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == 'Yes','sample test'\nassert solution('3 1') == 'No','sample test'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('2 1') == 'No'\n\"\"\""
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 1\n4 2 3 4''') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"8 4\") == \"Yes\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"3 3 2\\n..#\\n###\") == \"10\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"10 10 2\") == \"15\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n.#.\\n#.#\") == \"5\"\nassert solution(\"4 4 3\\n.###\\n#.##\\n#.#.\") == \"4\"\nassert solution(\"5 5 2\\n.#.#\\n#.#.#\\n####\\n####\") == \"7\"\nassert solution(\"6 6 2\\n.#.#\\n#.#.#\\n#.##\\n####\\n####\") == \"7\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('4 4 5') == '5'"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"5\"\nassert solution(sample_input_2) == \"5\"\nassert solution(input) == \"5\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2') == '5'"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 3 2\\n#.##\"\n) == \"5\"\nassert solution(\n    \"6 3 2\\n#.##\"\n) == \"5\"\nassert solution(\n    \"2 6 3 2\\n.##.##\"\n) == \"5\"\nassert solution(\n    \"6 6 3 2\\n#.##\"\n) == \"0\"\nassert solution(\n    \"3 3 2\\n##.##\"\n) == \"0\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\nprint(solution('''\n2 3 2\n..#\n###\n'''))\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"2 2\") == \"5\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 2\n..#\n###\n''') == '5'\nprint(solution('''\n2 2 2\n..#\n###\n''')) == '1'\nprint(solution('''\n1 1 2\n..#\n###\n''')) == '1'\nprint(solution('''\n1 3 2\n..#\n###\n''')) == '1'\nprint(solution('''\n5 5 2\n..#\n###\n''')) == '5'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 2021\") == \"3\"\nassert solution(\"2020 2022\") == \"1\"\nassert solution(\"2020 2043\") == \"4\"\n\n'''\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('1118 2730') == '3'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('99') == '0'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 2041\") == \"1\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2020 2040\n2020 2040''') == '2'\nassert solution('''2020 2040\n2020 2040''') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2012 2020\") == \"5\"\nassert solution(\"2030 2020\") == \"9\"\nassert solution(\"2020 2020\") == \"0\"\nassert solution(\"2040 2040\") == \"1\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"AtCoder\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('ABCDE') == 'WA'\nassert solution('AaBb') == 'WA'\nassert solution('abcdef') == 'WA'\nassert solution('ABCABC') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"ATCODE\") == \"WA\"\nassert solution(\"ATCOD\") == \"WA\"\nassert solution(\"ATCOD\") == \"WA\"\nassert solution(\"ATCOD\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin := input()) == \"AC\", \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AC\"\nassert solution(input()) == \"WA\"\n'''"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"cat\") == \"WA\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"AC\", \"WA\"\nassert solution(\"ATCODER\") == \"AC\", \"WA\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"TEST\") == \"WA\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'WA'\nassert solution('ABC') == 'AC'\nassert solution('ATC') == 'WA'\nassert solution('Atc') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"AC\"\nassert solution(\"AbC\") == \"WA\"\nassert solution(\"abcCBA\") == \"WA\"\nassert solution(\"ABCCCBA\") == \"WA\"\nassert solution(\"CBA\") == \"AC\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"132\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1324') == '33322'\nassert solution('124') == '222'"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1214') == '2'\nassert solution('2214') == '2'\nassert solution('2222') == '2'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1324') == '1'\nassert solution('1323') == '3'\nassert solution('123456789') == '9'\nassert solution('1224') == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1214') == '2'\nassert solution('1424') == '2'\nassert solution('1324') == '3'\nassert solution('2444') == '4'\nassert solution('24344') == '4'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1324') == '13333'\nassert solution('1324') == '13333'\nassert solution('1324') == '13333'\nassert solution('1324') == '13333'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1324') == '2'\nassert solution('1214') == '2'\nassert solution('1222') == '3'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1214') == '2'"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1214\") == \"2\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5\n5 2 3 4 1\n''') == 'YES'\n'''"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"YES\""
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n2 3 4 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n9\n5 7 3 1 4 2 8 6 9\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n5 2 4 3 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n5 3 2 4 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"NO\"\n\n'''\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 3 4 1\n''') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\nassert solution('''2\n1 2''') == 'NO'\nassert solution('''3\n1 3 2''') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 3 4 1\n''') == \"YES\"\nassert solution('''3\n1 2 3\n''') == \"NO\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n3121\n    '''\n) == '2', 'example test 1 failed'\n\nassert solution(\n    '''\n6\n    '''\n) == '1', 'example test 2 failed'\n\nassert solution(\n    '''\n1000000000000000000000000000000000\n    '''\n) == '33', 'example test 3 failed'\n\nassert solution(\n    '''\n201920181\n    '''\n) == '4', 'example test 4 failed'\n\nassert solution(\n    '''\n    '''\n) == '', 'example test 5 failed'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nprint('all test cases passed')\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3121'\n) == '2'\n\nassert solution(\n    '6'\n) == '1'\n\nassert solution(\n    '201920181'\n) == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3121\n''') == '2'\n\nassert solution('''\n6\n''') == '1'\n\nassert solution('''\n1000000000000000000000000000000000\n''') == '33'\n\nassert solution('''\n201920181\n''') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"12345\") == \"5\"\nassert solution(\"123456789\") == \"8\"\nassert solution(\"1000000000\") == \"33\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nassert solution('''10000000000000000000000000000000000000000000000000''') == '33'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(['3121']) == '2'\nassert solution(['6']) == '1'\nassert solution(['1000000000000000000000000000000000']) == '33'\nassert solution(['201920181']) == '4'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 -1\") == \"1\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 3 4 5\\n'\n    '2 4 7 11 3\\n'\n) == '2'\n\nassert solution(\n    '3\\n'\n    '13 37 39\\n'\n    '1 2 3\\n'\n) == '0'\n\nassert solution(\n    '4\\n'\n    '0 0 0 0\\n'\n    '1 2 3\\n'\n) == '3'\n\nassert solution(\n    '3\\n'\n    '1 2 -1\\n'\n    '-6 -12 6\\n'\n) == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n2 4 7\n''') == '2'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n1 2 3\\n2 4 7\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3\\n2 4 7\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n13 37 39\n1 2 3\n''') == '0'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\nassert solution('''\n4\n0 0 0 0\n1 2 3 4\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\nprint('\"Run\" is good. Coder is not very smart.')\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"3\"\nassert solution(\"2\\n-1 -2 -3\\n-6 -12 6\\n\") == \"3\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"0\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n13 37 39\n1 2 3\n''') == '0'\n\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '3'"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"1 2\"\nassert solution('7') == \"6 5\"\nassert solution('9') == \"8 10\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\ncodeforces\ndodivthree\n''') == \"5\"\nassert solution('''\n7\nabaca?b\nzabbbcc\n''') == \"6 5\"\nassert solution('''\n9\nbambarbia\nhellocode\n''') == \"0\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\ncodeforces\ndodivthree\n''') == '5'\n\nassert solution(\n'''\n7\nabaca?b\nzabbbcc\n''') == '6 5'\n\nassert solution(\n'''\n9\nbambarbia\nhellocode\n''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"6 2\"\nassert solution(input()) == \"1 6\"\nassert solution(input()) == \"7 3\"\nassert solution(input()) == \"3 5\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n7\\n6\\n\") == \"5\\n6 3\\n\"\nassert solution(\"2\\n7\\n6\\n\") == \"6\\n6 6\\n\"\nassert solution(\"3\\n7\\n6\\n\") == \"7\\n6 6\\n\"\nassert solution(\"4\\n7\\n6\\n\") == \"7\\n6 6\\n\"\nassert solution(\"5\\n7\\n6\\n\") == \"7\\n6 6\\n\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\nabaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n\"\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n\"\nassert solution(\"9\\nbambarbia\\nhellocode\\n\") == \"0\\n\""
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"6 2\"\nassert solution(input()) == \"1 6\"\nassert solution(input()) == \"7 3\"\nassert solution(input()) == \"3 5\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\nabaca?b') == '5\\n6 2'\nassert solution('7\\nabaca?b') == '5\\n6 2'\nassert solution('9\\nabaca?b') == '0'"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 1 1'\nassert solution('''8\n0 0 0 0 0 0 0 0\n''') == '1 1'\nassert solution('''6\n1 1 2 2 1 1\n''') == '3 3'\nassert solution('''5\n1 1 1 1 1\n''') == '2 3'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4 4 4 4 4 4 4 4'\nassert solution('1 1 1 1') == '4 4 4 4 4 4 4 4'\nprint('all tests passed')"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"4 4\"\n\nassert solution(\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"2 3 4 5\"\n\nassert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n-6 -1 -2 -3 -4 -5\n\"\"\") == \"1 2 3 4 5\""
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3 4 4 4 4 4 4 4\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"3\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4 4 4 4 4 4 4\"\nassert solution(\"1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution(\n'''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 4 4 4'\nassert solution(\n'''\n4\n1 1 1 1\n''') == '4'\nassert solution(\n'''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4 1 2 3 4 5\n\n3\n3 2 5\n\n4\n3 5 2 4 1\n\n2\n1 3\n2 3\n''') == '4'\nassert solution('''\n7\n-4 -3 -2 -1 0 1 2 3 4 5\n\n6\n3 1 3 2 1 2\n\n4\n4 2 1 2\n\n5\n3 1 3 4 5\n\n2\n3 3\n1 1\n\n2\n1 1\n\n1\n1\n\n''') == '5'\nassert solution('''\n11\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n1 2 3\"\n) == \"2 3\"\nassert solution(\n    \"5\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\n) == \"4 4\"\nassert solution(\n    \"7\\n4 1 2 2 1 5 3\"\n) == \"3 7\"\nassert solution(\n    \"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\n) == \"4 4\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7\\n4 1 2 2 1 5 3\\n\"\n    ) == \"3\\n7 7\\n2 3\"\nassert solution(\n    \"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\"\n    ) == \"2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\"\nassert solution(\n    \"4\\n1 1 1 1\\n\"\n    ) == \"4\\n4 4\\n1 1\"\nassert solution(\n    \"4\\n1 1 1 1\\n\"\n    ) == \"3\\n4 4\\n1 1\"\nassert solution(\n    \"4\\n1 1 1 1\\n\"\n    ) == \"4\\n4 4\\n1 1\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '0'\nassert solution('6 11') == '7'\nassert solution('5 2') == '0'"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([10, 20]) == \"7\"\nassert solution([6, 11]) == \"7\"\nassert solution([5, 2]) == \"0\""
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '0'\nassert solution('5 3') == '12'\n\nassert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"5 2\") == \"7\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '7'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '0'"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == str(7)"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'\nprint(solution(*(input().split())))\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('10\\n0 0\\n') == '10'"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"4\n2 3 6\n\"\"\") == \"9\"\nassert solution(\"\"\"5\n2 3 6 7\n\"\"\") == \"21\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '15'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('2 3') == '7'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"\nassert solution(\"6\") == \"15\"\nassert solution(\"10\") == \"35\"\nassert solution(\"20\") == \"75\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"9\"\n\"\"\""
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('4\\n3 5 7 9\\n') == '17'\nassert solution('3\\n2 3 2\\n') == '2'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5\\n') == '9'\n\"\"\""
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n1 2 2 10') == '110'\nassert solution('5 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n3 4 2 10') == '110'\nassert solution('10 20 20\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n3 4 2 10\\n4 5 2 10') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '0'\nassert solution('3 3 3') == '110'\nassert solution('5 5 5') == '12'\nassert solution('5 5 5') == '12'\nassert solution('5 5 5') == '12'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n3 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''\n3 1\n3 1\n3 1\n''') == '1'\nassert solution('''\n2 1\n2 1\n''') == '0'\nassert solution('''\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 10\") == \"110\""
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 3 3 100\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\nassert solution(\"2 3 2 10\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n4 4 1\n1 2 2 100\n1 2 1 10\n1 1 1 10\n2 1 1 100\n2 2 1 10\n1 2 3 10\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '0'\nassert solution('2 3 2 10') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-1 -2 4\") == \"4\\n-2 -1 2\"\nprint(solution(\"4\\n1 2 3 4\"))\n\nhttps://www.hackerrank.com/challenges/max-absolute-difference-in-a-array/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=greedy-algorithms\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\"\nassert solution(\"4\\n1 1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 1 2\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 4 6 3\n''') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"2 4 5 8\") == \"8\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('5\\n0 0 0 0 0') == '0'"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4 6 3') == \"5\"\nassert solution('3 2 1') == \"1\"\nassert solution('7 5 4 3') == \"10\""
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('3 6 9 4') == '1'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\"\nassert solution(\"10\\n1 4 6 3 9 8 10\\n\") == \"4\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\n\n=====\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2.2761423'"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.276142...'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.276142373'\nassert solution('3') == '2.276142373'\nassert solution('4') == '2.276142373'\nassert solution('5') == '2.276142373'\nassert solution('6') == '2.276142373'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == \"2.276142374\"\n\"\"\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"2.276142...\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2.2761423\"\n\"\"\"\n\nimport math\n\nN = int(input())\npoints = [[int(i) for i in input().split()] for _ in range(N)]"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2.2761423\"\nassert solution(\"4\") == \"2.2761423\"\nassert solution(\"5\") == \"2.2761423\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 0\n1 0\n0 1\n1 1\n0 1''') == '2.276142'\nprint(solution('''3\n0 0\n1 0\n0 1'''))\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 12') == '12'\nassert solution('4 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4') == 4\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\""
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 2\") == \"6\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('12') == '4'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''12 4\n''') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 4') == '4'\nassert solution('20 10') == '20'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 4') == '4'"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"3\"\nprint(solution(\"10000\"))"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10000') == '3'\nassert solution('5') == '1'"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    1\n    ''') == '3'\nassert solution('''\n    2\n    ''') == '5'\nassert solution('''\n    3\n    ''') == '5'\nassert solution('''\n    4\n    ''') == '2'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10000\") == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10000') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"200\") == \"4\"\nassert solution(\"9\") == \"2\"\nassert solution(\"0\") == \"2\""
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10000') == '3'"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n\n'''\n\nimport sys\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"5 3\\n1 1 2 3 3\\n2 2 2 2\\n3 2 1 3 3\\n4 4 4\") == \"4\"\nassert solution(\"5 3\\n2 3 2 2 1\\n1 1 2 3 3\\n4 4 4\") == \"3\"\nassert solution(\"5 3\\n2 3 2 2 1\\n1 1 2 3 3\\n4 4 4\") == \"2\"\nassert solution(\"5 3\\n2 3 2 2 1\\n1 1 2 3 3\\n4 4 4\") == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 1\\n3 1 2 3\\n2 3 2\\n2 3 2') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('4 2\\n1 2 3\\n2 3 2\\n3 1 2\\n3 2 4') == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 4\n1 2 3\n3 1 2 3\n2 3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\") == \"3\""
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '1'\nassert solution('1 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n3 1 2 3\\n2 3 2\\n2 3 2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\") == \"1\"\nassert solution(\"3 4\\n3 1 2 3\\n2 3 2\\n2 2 3\") == \"2\"\nassert solution(\"5 5\\n5 5 5 5 5\\n2 2 2 2 3\\n2 3 2 2 2\\n1 1 1 2 2\\n1 2 1 2 1\") == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n2 1 2\n3 1 2''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\n'''"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.5000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('8') == '0.2857142857142857'"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"0.5\"\nassert solution(\"1\") == \"1.0\"\nassert solution(\"3\") == \"0.3333333333\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.5000000000'\nassert solution('4') == '0.25'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.5'\nassert solution('4') == '0.5'\nassert solution('8') == '0.5'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.5000000000'\n\"\"\"\nimport math\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0.5000000000\"\nassert solution(\"4\") == \"0.5000000000\"\nassert solution(\"8\") == \"0.25000000000\"\nassert solution(\"12\") == \"0.083333333333333333\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n''') == '0.49999999999999996'\nassert solution('''12\n''') == '0.5000000000000002'\nassert solution('''4\n''') == '0.5000000000000002'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.5'\nassert solution('4') == '0.25'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '3'\nassert solution('15') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"5\"\nassert solution(\"10\") == \"7\""
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"5\"\n\"\"\""
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"12\") == \"4\"\nassert solution(\"15\") == \"5\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1') == '2'\nassert solution('3\\n1\\n2 0\\n1\\n1 1\\n1') == '1'\nassert solution('3\\n2\\n1 1\\n1\\n1 1\\n1') == '1'\nassert solution('3\\n2\\n1 1\\n1\\n1 1\\n1') == '1'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\n\n'''\n\n'''\nN = int(input())\n\nunhonest_people = []\nfor i in range(N):\n    person_id, honest_or_not, *test_indices = input().split()\n    honest_or_not = int(honest_or_not)\n    test_indices = list(map(int, test_indices))\n    if honest_or_not:\n        unhonest_people.append(person_id)\n\nprint(len(unhonest_people))\n'''\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n2 1\\n1') == '2'\nassert solution('3\\n1\\n2 1\\n1 1') == '1'\nassert solution('3\\n1\\n2 1\\n1\\n1') == '0'\nassert solution('3\\n1\\n2 1\\n1\\n1 1') == '0'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1') == '0'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n1 1\n1\n1 1\n1\n1 1\n1''') == '2'\nassert solution('''3\n1\n2 1\n1\n1 1\n1\n1 1\n1''') == '1'\nassert solution('''2\n2\n1 1\n1\n1 1\n1\n1 1\n1''') == '2'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n\n''') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\""
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"nikoandsolstice\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"nikoandsolstice\") == \"nikoand...\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nSOLI') == 'SOLI'\nassert solution('7\\nSOLI') == 'SOLI'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"nikoand\"\nassert solution(input()) == \"nikoandsolstice\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'nikoandsolstice'"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'nikoand'\nassert solution('1') == 'nikoand'\nassert solution('5') == 'nikoand'\nassert solution('8') == 'nikoand'\nassert solution('1000') == 'nikoand'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == 'nikoand', \"Wrong answer\"\nassert solution('nikoandsolstice') == 'nikoandsol', \"Wrong answer\"\nassert solution('8') == 'nikoand', \"Wrong answer\"\n\"\"\"\n\ns = stdin.split()\nK = int(s[0])\nS = s[1]"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"nikoand\"\n\n\"\"\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"nikoand...\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"nikoandsolstice\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apricot') == 'apricots'\nassert solution('berry') == 'berries'\nassert solution('cucumber') == 'cucumbers'\nassert solution('dog') == 'dogs'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples'"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('pomegranate') == 'pomegranates'\nassert solution('carrot') == 'carrots'\nassert solution('shamrock') =='shamrockes'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('woman') == 'women'\nassert solution('wine') == 'wines'\nassert solution('bless') == 'blessed'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\nprint(solution(input()))\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('watermelon') == 'watermelons'\nassert solution('cherry') == 'cherries'\nassert solution('citrus') == 'citrus'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"grape\") == \"graps\"\nassert solution(\"drum\") == \"drums\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'banaanas'\nassert solution('aardvark') == 'aardvarks'\n\"\"\""
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '2'"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n2\n1 3\n1\n3\n\n''') == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '2'\n\"\"\"\n\nN, K = list(map(int, input().split()))\nSnukes_with_Snacks = []\nfor i in range(1, N + 1):\n    Snukes_with_Snacks.append(i)\n\nfor i in range(1, K + 1):\n    Snukes_with_Snacks.sort()\n    temp = Snukes_with_Snacks.pop(0)\n    Snukes_with_Snacks.append(temp)\n\nfor i in range(N - K + 1, N):\n    Snukes_with_Snacks.remove(i)\n\nprint(len(Snukes_with_Snacks))\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n2\n3\n4\n5\n1\n5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 2\n2\n3\n4\n5\n1\n5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1 2\n1\n2\n3\n4\n5\n1\n3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n1\n2\n3\n4\n5\n1\n4\n5\n1\n3\n4\n\"\"\") == \"1\""
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 4') == '0'\nassert solution('5 5') == '2'\nassert solution('6 6') == '2'\nassert solution('7 7') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"1\"\nassert solution(sample_input_3) == \"1\"\nassert solution(input) == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\", \"Should return 1\"\nassert solution(\"10 6\") == \"0\", \"Should return 0\"\nassert solution(\"10 2\") == \"1\", \"Should return 1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''\n3 2\n2\n1 3\n1\n3\n''') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"1\"\nassert solution(\"11\") == \"3\"\nassert solution(\"12345678\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('4') == '4'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n' + 'aabbbbaaca') == '5'\nassert solution('10\\n' + 'aabbbbaaaa') == '1'\nassert solution('10\\n' + 'aabbbbbbbb') == '3'\nassert solution('10\\n' + 'aabbbbbbbb') == '0'"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\nababbbbaaca') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\naabbbbaaca\\n\") == \"5\"\nassert solution(\"5\\nabcd\\n\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '101'\nassert solution('1000') == '1001'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\naabbbbaaca\n''') == '5'\nassert solution('''\n10\naabbaaaaa\n''') == '7'\nassert solution('''\n7\naabbaaaaa\n''') == '7'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"6\\n4 2 5 3 4\") == \"4\"\nassert solution(\"10\\n12 16 25 35 43 55 63 72 83 91 100\") == \"5\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n5 2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n10 10 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n5 2 4\n\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"4\"\n\n## Exercise 2\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 2 4\") == \"3\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('5 2 1 3') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 5 2 1') == '4'\nassert solution('5 5 5 5') == '6'\nassert solution('5 5 5 5') == '6'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 2 2 3') == '1'\nassert solution('4 2 4 3') == '2'\nassert solution('3 1 2 4') == '1'\nassert solution('2 4 -1 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 2 3') == '4'\nassert solution('2 3 2 1') == '4'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\""
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('3 1 2 3') == '2'\nassert solution('4 1 -1 3') == '3'\nassert solution('4 1 0 3') == '4'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 2 2 1') == '2'\nassert solution('1 1 2 3') == '3'\nassert solution('1 2 1 3') == '3'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('10 1 -5 2 3') == '9'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 7') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('1 2') == 'No'\n\n------------------------------------------------------------"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 9\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8') == 'Yes', \"3 8\"\nassert solution('3 2') == 'No', \"3 2\"\nassert solution('1 1') == 'Yes', \"1 1\"\nassert solution('1 3') == 'No', \"1 3\"\nassert solution('1 10') == 'Yes', \"1 10\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Yes\", \"Your function has not passed the assertion test\"\nassert solution(\"5 5\") == \"No\", \"Your function has not passed the assertion test\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 4') == 'No'\nassert solution('2 3') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('10 20') == 'No'\n\n## Sample Solution\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n\"\"\"\nimport itertools\n\nX, Y = map(int, input().split())\nans = list(itertools.combinations_with_replacement(range(X + 1), Y))\nprint(\"Yes\" if len(ans) > 0 else \"No\")"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"100 100\") == \"Yes\"\nassert solution(\"1 1\") == \"No\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2\n1 3\n2 3\n3 1''') == '2', 'Should return 2'\n'''\n'''\nfrom collections import deque"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 4\") == \"3\"\nassert solution(\"6 2\") == \"6\"\n\"\"\"\n\nfrom itertools import combinations\nfrom collections import defaultdict\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 3\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '2 3'\n    ) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n1 2\\n1 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 3\\n2 3\") == \"2\"\n\nassert solution(\"2 3\\n1 3\\n2 3\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2\\n1 3\") == \"2\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"10 10\") == \"2\"\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '1'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n4 5\n5 5\n''') == '1'\n\n'''\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\n\nassert solution('1 2') == '1'\n\nassert solution('1 3') == '1'\n\nassert solution('2 3') == '0'\n\nassert solution('3 3') == '1'"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 7') == '16'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\nassert solution('3 4 5 1') == '15'\nassert solution('4 2 1') == '2'\nassert solution('4 3 2 1') == '2'\nassert solution('5 2 3 1') == '3'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\""
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"4 4\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 3') == '18'\nassert solution('6 3') == '12'\nassert solution('7 4') == '12'\nassert solution('8 5') == '12'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '10'\nassert solution('2 3') == '10'\nassert solution('1 2') == '2'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '3'\nassert solution('4 4') == '0'\nassert solution('5 3') == '6'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2 3 4\") == \"23\"\nassert solution(\"5 2 3 4 5\") == \"30\"\nassert solution(\"5 2 3 4 5 6\") == \"30\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15') == '60'\nassert solution('8') == '8'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('5') == 'Buzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15') == '60'"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15') == '60'"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15\\n') == '60'\nprint(solution('15\\n'))\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"15\\n\") == \"60\"\nassert solution(\"20\\n\") == \"30\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"60\"\nassert solution('15') == \"60\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"15\") == \"60\""
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == '60', \"test 1 failed\"\nassert solution('1') == '1', \"test 2 failed\"\nassert solution('3') == '2', \"test 3 failed\"\nassert solution('4') == '3', \"test 4 failed\"\nassert solution('5') == '5', \"test 5 failed\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\""
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '1\\n2\\n','sample'\nassert solution('15\\n') == '60\\n','sample'\nassert solution('4\\n') == '1\\n2\\n4\\n','sample'\nassert solution('10\\n') == '55\\n','sample'\nassert solution('100\\n') == '2550\\n','sample'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\n5 6 2 4 1 8 3\n''') == '8'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '3'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n4 7 10 6 5\\n') == '8'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n') == '7'\nassert solution('50 100\\n10 20 30 40 50 60 70 80 90 100\\n') == '70'\nassert solution('1 10\\n5 10 20 30 40 50 60 70 80 90 100\\n') == '9'"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5\\n4 7 10 6 5\\n') == '8'\nassert solution('6 5\\n1 4 1 5 1\\n') == '1'\nassert solution('6 5\\n7 1 5 8 2\\n') == '8'"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n\") == \"8\"\nassert solution(\"12 5\\n\") == \"11\"\nassert solution(\"4 5\\n\") == \"11\"\nassert solution(\"4 2\\n\") == \"4\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"7\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"100 5\") == \"108\"\nassert solution(\"5 10\") == \"8\"\nassert solution(\"5 20\") == \"5\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nX N\n4 7 10 6 5\n''') == '8'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"7 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"8\"\nassert solution(\"6 5\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"3\"\n\n'''\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 10\n4 7 10 6 5\n''') == '8'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 1''') == '1'\nassert solution('''5 4\n5 5 4''') == '1'\n\n'''\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('1 1') == '1\\n'\nassert solution('2 2') == '3\\n'\nassert solution('2 1') == '1\\n'\nassert solution('3 2') == '1\\n'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('10 10') == '0'\nassert solution('20 10') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 2') == '2'\nassert solution('10 20') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"1\", \"First test\"\nassert solution(\"2 2\") == \"1\", \"Second test\"\nassert solution(\"2 3\") == \"1\", \"Third test\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"20 20\") == \"16\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nprint(solution(input()))\n\n\n\n'''\n\n\n\n'''\n        \n        \n\n\n'''"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '-1', \"First\"\nassert solution('7 4') == '6', \"Second\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 4\n    3 7 5 1 10 3 20\n    ''') == '6'\n\nassert solution('''7 2\n    3 7 5 1 10 3 20\n    ''') == '-1'\n\nassert solution('''10 2\n    6 5 7 1 10 3 4 2\n    ''') == '-1'\n\nassert solution('''10 1\n    4 3 6 8 9\n    ''') == '4'\n\nassert solution('''10 1\n    1 2 3 4 5 6 7 8 9\n    ''') == '1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-\"\nassert solution(\"7 3\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 5\\n3 7 5 1 10 3 20\") == \"6\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\nassert solution(sys.stdin.read()) == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\nassert solution(\"10 2\\n3 7 5 1 10 3 20\") == \"-1\"\nassert solution(\"10 0\\n3 7 5 1 10 3 20\") == \"-1\""
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20\n''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 4\n3 7 5 1 10 3 20\n\"\"\") == \"6\"\nassert solution(\"\"\"\n7 2\n3 7 5 1 10 3 20\n\"\"\") == \"-1\""
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n\n\n\"\"\"\n\nn, k = map(int, input().split())\nsequence = list(map(int, input().split()))\n\ncount = 0\nfor i in sequence:\n    if i < sequence[int(k / 2)]:\n        count += 1"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\n3 3\n*.*\n***\n*.*\n''') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\n\"\"\"\n5 5\n.*...\n****.\n.*...\n.*...\n.....\n\"\"\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\n\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"5 5\") == \"3\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"3 4 1\\n3 5 2\"\nassert solution(\"10 10\") == \"4 2 1\\n3 3 1\\n4 4 1\\n5 5 2\\n6 6 1\\n7 7 1\\n8 8 1\\n9 9 1\\n10 10 2\\n11 11 1\\n12 12 1\\n13 13 1\\n14 14 1\\n15 15 1\\n16 16 1\\n17 17 1\\n18 18 1\\n19 19 1\\n20 20 1\\n21 21 1\\n22 22 1\\n23 23 1\\n24 24 1\\n25 25 1\\n26 26 1\\n27 27 1\\n28 28 1\\n29 29 1\\n30 30 2\\n31 31 1\\n32 32 1\\n33 33 1\\n34 34 1\\n35 35 1\\n36 36 1\\n37 37 1\\n38 38 1\\n39 39 1\\n40 40 1\\n41 41 1\\n42 42 1\\n43 43 1\\n44 44 1\\n45 45 1\\n46 46 1\\n47 47 1\\n48 48 1\\n49 49 1\\n50 50 1\\n51 51 1\\n52 52 1\\n53 53 1\\n54 54 1\\n55 55 1\\n56 56 1\\n57 57 1\\n58 58 1\\n59 59 1\\n60 60 2\\n61 61 1\\n62 62 1\\n63 63 1\\n64 64 1\\n65 65 1\\n66 66 1\\n67 67 1\\n68 68 1\\n69 69 1\\n70 70 1\\n71 71 1\\n72 72 1\\n73 73 1\\n74 74 1\\n75 75 1\\n76 76 1\\n77 77 1\\n78 78 1\\n79 79 1\\n80 80 1\\n81 81 1\\n82 82 1\\n83 83 1\\n84 84 1\\n85 85 1\\n86 86 1\\n87 87 1\\n88 88 1\\n89 89 1\\n90 90 2\\n91 91 1\\n92 92 1\\n93 93 1\\n94 94 1\\n95 95 1\\n96 96 1\\n97 97 1\\n98 98 1\\n99 99 1\\n100 100 1\\n101 101 1\\n102 102 1\\n103 103 1\\n104 104 1\\n105 105 1\\n106 106 1\\n107 107 1\\n108 108 1\\n109 109 1\\n110 110 1\\n111 111 1\\n112 112 1\\n113 113 1\\n114 114 1\\n115 115 1\\n116 116 1\\n117 117 1\\n118 118 1\\n119 119 1\\n120 120 1\\n121 121 1\\n122 122 1\\n123 123 1\\n124 124 1\\n125 125 1\\n126 126 1\\n127 127 1\\n128 128 1\\n129 129 1\\n130 130 2\\n131 131 1\\n132 132 1\\n133 133 1\\n134 134 1\\n135 135 1\\n136 136 1\\n137 137 1\\n138 138 1\\n139 139 1\\n140 140 1\\n141 141 1\\n142 142 1\\n143 143 1\\n144 144 1\\n145 145 1\\n146 146 1\\n147 147 1\\n148 148 1\\n149 149 1\\n150 150 1\\n151 151 1\\n152 152 1\\n153 153 1\\n154 154 1\\n155 155 1\\n156 156 1\\n157 157 1\\n158 158 1\\n159 159 1\\n160 160 1\\n161 161 1\\n162 162 1\\n163 163 1\\n164 164 1\\n165 165 1\\n166 166 1\\n167 167 1\\n168 168 1\\n169 169 1\\n170 170 2\\n171 171 1\\n172 172 1\\n173 173 1\\n174 174 1\\n175 175 1\\n176 176 1\\n177 177 1\\n178 178 1\\n179 179 1\\n180 180 1\\n181 181 1\\n182 182 1\\n183 183 1\\n184 184 1\\n185 185 1\\n186 186 1\\n187 187 1\\n188 188 1\\n189 189 1\\n190 190 1\\n191 191 1\\n192 192 1\\n193 193 1\\n194 194 1\\n195 195 1\\n196 196 1\\n197 197 1\\n198 198 1\\n199 199 1\\n200 200 1\\n201 201 1\\n202 202 1\\n203 203 1\\n204 204 1\\n205 205 1\\n206 206 1\\n207 207 1\\n208 208 1\\n209 209 1\\n210 210 1\\n211 211 1\\n212 212 1\\n213 213 1\\n214 214 1\\n215 215 1\\n216 216 1\\n217 217 1\\n218 218 1\\n219 219 1\\n220 220 2\\n221 221 1\\n222 222 1\\n223 223 1\\n224 224 1\\n225 225 1\\n226 226 1\\n227 227 1\\n228 228 1\\n229 229 1\\n230 230 1\\n231 231 1\\n232 232 1\\n233 233 1\\n234 234 1\\n235 235 1\\n236 236 1\\n237 237 1\\n238 238 1\\n239 239 1\\n240 240 1\\n241 241 1\\n242 242 1\\n243 243 1\\n244 244 1\\n245 245 1\\n246 246 1\\n247 247 1\\n248 248 1\\n249 249 1\\n250 250 1\\n251 251 1\\n252 252 1\\n253 253 1\\n254 254 1\\n255 255 1\\n256 256 1\\n257 257 1\\n258 258 1\\n259"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"3 4 1\"\n\n\"\"\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8\\n.***.\\n..*****\\n.**.*..\\n....*..\\n........') == '3 4 1'\nassert solution('5 5\\n.**.*\\n*.*.\\n*.*.\\n*.*.\\n***.') == '3 3 1'\n\ninput_string = \"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n\"\n                \"...*...\\n\"\n                \"...**...\\n\"\n                \"..*****.\\n\"\n                \"...**...\\n\"\n                \"....*...\\n\"\n                \"........\") == \"3\\n3 4 1\\n3 5 2\"\n\nassert solution(\"5 5\\n\"\n                \"*.*\\n\"\n                \"**.*\\n\"\n                \".*.*\\n\"\n                \"*.*\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"3 3\") == \"-1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n''') == ''\nassert solution('''\n\n''') == ''\nassert solution('''\n\n''') == ''\nassert solution('''\n\n''') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nbad\\n1') == '0'\nassert solution('2\\nabc\\n') == '2'\nassert solution('3\\naaa\\n') == '3'"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"good\") == \"g\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"aaaabbbb\") == \"aab\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '6'\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('12') == '12'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('good') == '0'\nassert solution('aaaa') == '3'\nassert solution('aaaaa') == '2'\nassert solution('aaa') == '1'\nassert solution('aaab') == '2'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(stdin='''good\n\ninput''') == \"0\"\nassert solution(stdin='''aabc\n\ninput''') == \"2\"\nassert solution(stdin='''aaa\n\ninput''') == \"3\""
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(''.join(sorted(stdin))) == ''.join(sorted(stdin))\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == (0, 'good')\nassert solution(input()) == (1, 'good')\nassert solution(input()) == (2, 'ab')\nassert solution(input()) == (2, 'ab')\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == 'abc'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'abc'\nassert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('aa') == 'aa'\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"1 5\\n\"\n    \"2 1\\n\"\n    \"1 4\\n\"\n    \"3 1\\n\"\n    \"6 1\"\n) == \"YES\\n10100\"\n\n'''\n\n\nclass Graph:\n\n    def __init__(self, num_vertices):\n        self.num_vertices = num_vertices\n        self.graph = [[] for i in range(num_vertices)]\n\n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n        self.graph[v].append(u)\n\n    def bfs(self, root):\n        visited = []\n        parent = {}\n        for i in range(self.num_vertices):\n            parent[i] = None\n\n        visited.append(root)\n        parent[root] = None\n        queue = []\n        queue.append(root)\n\n        while queue:\n            s = queue.pop(0)\n            for i in self.graph[s]:\n                if i not in visited:\n                    visited.append(i)\n                    parent[i] = s\n                    queue.append(i)\n\n        for i in range(self.num_vertices):\n            print(i, parent[i])\n\n    def dfs(self, root):\n        visited = []\n        parent = {}\n        for i in range(self.num_vertices):\n            parent[i] = None\n\n        visited.append(root)\n        parent[root] = None\n        stack = []\n        stack.append(root)\n\n        while stack:\n            s = stack.pop()\n            for i in self.graph[s]:\n                if i not in visited:\n                    visited.append(i)\n                    parent[i] = s\n                    stack.append(i)\n\n        for i in range(self.num_vertices):\n            print(i, parent[i])\n\n    def isCyclic(self):\n        visited = []\n        for i in range(self.num_vertices):\n            if i not in visited:\n                if self.dfs(i) == False:\n                    return False\n        return True"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution('6 5') == 'NO'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES'"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == 'NO'\nassert solution(r) == 'YES'"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"YES\"\n\n\"\"\"\n\n\nimport math\n\nn, m = list(map(int, input().split()))\n\nadj = [[] for _ in range(n)]\n\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    adj[u].append(v)\n    adj[v].append(u)\n\ncycle_edges = set()\n\nfor i in range(n):\n    if len(adj[i]) == 1:\n        continue\n    visited = [0]*n\n    cycle_stack = []\n    cycle_stack.append(i)\n    visited[i] = 1\n    while len(cycle_stack)!= 0:\n        i = cycle_stack.pop()\n        for j in adj[i]:\n            if visited[j] == 1:\n                continue\n            visited[j] = 1\n            cycle_stack.append(j)\n    if sum(visited) == 1:\n        continue\n    cycle_edges.add(i)"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\", solution\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"2\"\nassert solution(\"1 7\") == \"0\"\nassert solution(\"3 4\") == \"3 4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 7\n1 7\n\n''') == '2'\n\nassert solution('''\n1 2\n1 2\n\n''') == '0'\n\nassert solution('''\n3 5\n2 2\n1 2\n5 5\n\n''') == '2'\n\nassert solution('''\n1 7\n1 7\n\n''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\nassert solution('5 1') == '3 4'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4'\nassert solution('1 7\\n1 7\\n') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 7') == '2 4'\nassert solution('3 5') == '3 4'"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n2 2\\n1 2\\n5 5\\n\") == \"2 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"4 2\\n\"\nassert solution(\"9 9\\n1 1\\n1 9\\n9 9\\n\") == \"0\"\nassert solution(\"9 9\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"4 2\\n\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 5\n2 2\n1 2\n5 5''') == '2'\n\nassert solution('''1 7\n1 7''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 7\") == \"3 4\"\nassert solution(\"1 7\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(input) == output\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'''\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''5 6 7 8''') == '5'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 4 3') == '3'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2 3 4') == '7'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '2', 'Sample test case'\nassert solution('') == '', 'Empty string test case'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == None\nassert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"2 9 2 3\") == \"5\"\nassert solution(\"6 7 9 2 3\") == \"7\"\nassert solution(\"3 2 7 3\") == \"4\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('4 9 2 3') == '2'\nassert solution('6 1 6') == '0'\nassert solution('9 5 7') == '1'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''4 9 3 5''') == '5'\nassert solution('''4 9 1 2''') == '4'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('''\n    4 9 2 3\n''') == '2'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 9 2 3\n''') == '2'\nassert solution('''1 10 2 3\n''') == '5'\nassert solution('''1 2 4 2\n''') == '2'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('4 9 2 0') == '4'\nassert solution('4 9 2 -3') == '2'\nassert solution('4 9 2 -1') == '4'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('8 19 4 5') == '2'\nassert solution('8 19 9 4') == '4'"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''123456789''') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == 'Yes'\nassert solution('123456789') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789') == 'No'"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"No\", \"Dont forget to pass the string!\"\nprint(solution('123456789'))\n\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('987654321') == 'No'\nassert solution('1234') == 'Yes'"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"121212\") == \"No\"\nassert solution(\"12345678\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('88888888') == 'No'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1233456789\") == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"873487\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456788') == 'No'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '3'\nassert solution('7') == '3'\nassert solution('1') == '0'\nassert solution('111') == '0'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('127') == '4'\n\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\n''') == '1'\nassert solution('''5\n''') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('127') == '4'\nassert solution('25') == '5'\nassert solution('100') == '5'\nassert solution('11') == '6'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '4'\nassert solution('4') == '4'\nassert solution('6') == '3'\nassert solution('27') == '4'"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '0'\nassert solution(\"\") == '0'\nassert solution(\"10\") == '1'\nassert solution(\"7\") == '1'\nassert solution(\"123\") == '2'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '4'\nassert solution('9\\n') == '7'\nassert solution('127\\n') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''127\n''') == '4'\nassert solution('''1001\n''') == '4'\nassert solution('''9999\n''') == '7'\nassert solution('''1022\n''') == '8'\nassert solution('''9666\n''') == '10'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('127') == '4'\nassert solution('3') == '1'\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('hello') == 'olleh'\nassert solution('hello world') == 'olleh wrold'\nassert solution('hello world!') == 'olleh wrold!'\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"Test 1 Failed\"\nassert solution(\"tokyo\") == \"Yes\", \"Test 2 Failed\"\nassert solution(\"\") == \"No\", \"Test 3 Failed\"\n\"\"\"\n\nstring = input()\nrotated = input()"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto kyoto') == 'Yes'\nassert solution('kyoto kyotokyo') == 'No'\nassert solution('kyoto kyotokyoto') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"kyo\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"farm\") == \"No\"\nassert solution(\"romana\") == \"Yes\"\nassert solution(\"raiders\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"2\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"\") == \"0\"\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n\"\"\"\n\nstdin = input().split()\n\nfirst = stdin[0]\nsecond = stdin[1]\n\ncommon = 0\n\nfor i in range(len(second)-1):\n    if second[i] in first[i+1:]:\n        common += 1\n        first = first[:i] + second[i] + first[i+1:]\n\nprint(common)"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''cabacc\nabc''') == '1'\nassert solution('''xabcdef''') == '1'\nassert solution('''xabcef''') == '1'\nassert solution('''xabcde''') == '0'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cabacc') == 'cabac'\nassert solution('abc') == 'abc'\nassert solution('at') == 't'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('cabacc') == '1'"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcd\") == \"1\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"1 9 5 3\") == \"1\"\nassert solution(\"5 6 6 4 3 3\") == \"3\"\nassert solution(\"9 9 9 9 9 9 9\") == \"9\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 1\") == \"1\"\nassert solution(\"3 3 2\") == \"2\"\nassert solution(\"4 2 0\") == \"2\"\nassert solution(\"1 2 5\") == \"3\"\nassert solution(\"5 5 5\") == \"5\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('6 5 2') == '2'\nassert solution('6 6 3') == '3'\nassert solution('10 10 10') == '10'\nassert solution('10 20 3') == '4'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 7 8') == '8'\nassert solution('1 3 5 2') == '3'\nassert solution('3 4 9 2') == '3'\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 2 3') == '1'\n\nprint(solution(\"3 4 5\"))\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 12 2''') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([8, 12, 2]) == \"2\"\nassert solution([1, 2, 3]) == \"3\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([8, 12, 2]) == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''5 7 7''') == '7'\nassert solution('''10 15 2''') == '2'\nassert solution('''100 200 100''') == '100'\nassert solution('''12 34 5''') == '5'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"5 6 7\") == \"6\"\nassert solution(\"6 8 10\") == \"8\"\nassert solution(\"8 1 2\") == \"8\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '2020'\nassert solution('1024') == '2020'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1024') == '2020'\nassert solution('10') == '10'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''X\n''') == '2020'\nassert solution('''X\nY\n''') == '2020'\nassert solution('''X\nY\nX\n''') == '2080'\nassert solution('''X\nY\nX\n''') == '2080'\nassert solution('''X\nY\nX\n''') == '2080'"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"128\") == \"128\"\nassert solution(\"25\") == \"25\"\nassert solution(\"750\") == \"750\""
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2020\"\nassert solution(\"2\") == \"5000\"\nassert solution(\"3\") == \"5600\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1024') == '2020'\nassert solution('10000') == '20500'\nassert solution('500') == '500'\nassert solution('0') == '0'\nassert solution('5') == '100'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2020\""
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\nassert solution('10') == '25'\nassert solution('100') == '10000'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"6\"\nassert solution(\"9\") == \"18\"\nassert solution(\"100\") == \"2770\""
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 4\n''') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '4'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n4 5 6\") == \"11\"\nassert solution(\"3\\n1 1 3\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3\"\n\"\"\"\n\n\nA = int(input())\nB = int(input())\n\n\nprint(A//B)\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 20') == '3'\nassert solution('4 10') == '3'\nassert solution('20 10') == '2'\nassert solution('10 10') == '1'\n\n\"\"\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n\") == \"3\"\nassert solution(\"10 10\\n\") == \"2\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n\") == \"3\"\nassert solution(\"5 5\\n\") == \"4\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '4'\nassert solution('3 10') == '5'\nassert solution('4 5') == '2'\nassert solution('10 9') == '6'\nassert solution('20 9') == '3'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10') == '3'\nassert solution('10 20') == '5'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"2 5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2\", \"Should return the number of power strips needed\"\nassert solution(\"4 10\") == \"3\", \"Should return the number of power strips needed\"\nassert solution(\"6 4\") == \"4\", \"Should return the number of power strips needed\"\nassert solution(\"2 2\") == \"2\", \"Should return the number of power strips needed\"\nassert solution(\"6 3\") == \"4\", \"Should return the number of power strips needed\"\n\n\"\"\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    4 10\n''') == '3', 'Check Test 1'\nassert solution('''\n    5 10\n''') == '4', 'Check Test 2'\nassert solution('''\n    20 10\n''') == '9', 'Check Test 3'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('SS') == '0'\nassert solution('SR') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CSS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\""
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\""
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CCR') == '2'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\n'''\n\nimport itertools\nimport functools"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\"\"\"\nimport math"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('4\\n1 3 5 2 4') == '1'\nassert solution('3\\n2 3 3 3 3') == '2'"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"3\\n1 3 5 4 2\") == \"2\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"19\"\nassert solution(\"3\\n1 2 3 4\") == \"0\"\nassert solution(\"0\\n1\") == \"0\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"10\\n1 2 5 7 8 9 4 3 6 10\") == \"7\"\nassert solution(\"10\\n1 2 5 7 8 9 4 3 6 10\") == \"7\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n3 1 5 4 2') == '2'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('5\\n3 3 3 3 3') == '0'\nassert solution('5\\n1 2 3 4 5') == '0'\n\"\"\"\n\nn = int(stdin.readline())\np = list(map(int, stdin.readline().split()))\n\np_2 = p[2]\np_1 = p[1]\np_3 = p[3]\np_4 = p[4]\np_5 = p[5]\n\nfor i in range(n):\n    if i == 0:\n        if p_2 == p[i+1]:\n            print(1)\n    elif i == 1:\n        if p_2 == p_1:\n            print(1)\n        elif p_3 == p[i-1]:\n            print(1)\n    elif i == 2:\n        if p_2 == p_1:\n            print(1)\n        elif p_2 == p_3:\n            print(1)\n        elif p_4 == p[i-1]:\n            print(1)\n    elif i == 3:\n        if p_2 == p_1:\n            print(1)\n        elif p_2 == p_3:\n            print(1)\n        elif p_4 == p[i-1]:\n            print(1)\n    elif i == 4:\n        if p_2 == p_1:\n            print(1)\n        elif p_2 == p_3:\n            print(1)\n        elif p_4 == p[i-1]:\n            print(1)\n    else:\n        if p_5 == p[i-1]:\n            print(1)\n\n\"\"\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\\n\") == \"2\"\nassert solution(\"5\\n1 3 5 2 4\\n\") == \"3\"\nassert solution(\"5\\n1 3 5 2 4\\n\") == \"2\"\nassert solution(\"5\\n1 3 5 2 4\\n\") == \"2\"\nassert solution(\"5\\n1 3 5 2 4\\n\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 2 3 5 4\") == \"4\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\""
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\""
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 2 5 1\") == \"2\"\nassert solution(\"4 1 2 3\") == \"3\"\nassert solution(\"6 2 5 3 7 1\") == \"3\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5.480'\nassert solution(\"5\\n\") == '5.480'\nassert solution(\"8\\n\") == '5.480'\nassert solution(\"10.44\\n\") == '5.480'\nassert solution(\"11.28\\n\") == '5.480'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('10') == '6.040'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.720\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"6.720\"\nprint(solution(sys.stdin.read()))\n\"\"\"\n\nfrom math import sqrt\n\nn = int(input())\npoints = []\nfor i in range(n):\n    points.append(list(map(float, input().split())))\n\npoints.sort(key=lambda x: (x[1], x[0]))"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92''') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5.480\"\nassert solution() == \"5.600\"\nassert solution() == \"5.420\"\n\n\"\"\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5.480\"\nassert solution(\"5\") == \"5.480\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\"\nassert solution(\"5\") == \"6.040\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == '5.814'\nassert solution(\"7\") == '6.320'\nassert solution(\"8\") == '5.814'\nassert solution(\"5\") == '6.000'\nassert solution(\"10\") == '5.980'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('8') == '6.040'\nassert solution('7') == '6.720'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"2 3 1 1 2\"\n    ) == \"4\"\nassert solution(\n    \"5 16\\n\"\n    \"5 5 5 5 5\"\n    ) == \"2\"\nassert solution(\n    \"5 26\\n\"\n    \"5 5 5 5 5\"\n    ) == \"1\"\nassert solution(\n    \"5 36\\n\"\n    \"5 5 5 5 5\"\n    ) == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == \"4\"\nassert solution('''5 10\n1 3 4 2 1 4 2\n''') == \"2\"\nassert solution('''5 16\n5 5 5 5 5\n''') == \"1\"\nassert solution('''5 26\n5 5 5 5 5\n''') == \"-1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 10') == '2'\nassert solution('5 15') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 30\\n5 5 5 5 5\\n\") == \"2\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 8\n2 3 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 10\n1 3 4 2 1 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 16\n5 5 5 5 5\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4\\n'\nassert solution('5 10\\n1 3 1 1 2\\n') == '2\\n'\nassert solution('5 16\\n5 5 5 5 5\\n') == '1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '2\\n'\nassert solution('5 30\\n5 5 5 5 5\\n') == '-1\\n'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"-1\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2 3'\nassert solution() == '1 1 2 2 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n\n''') == '7 3 1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '1 3 1 3'\nassert solution('15 2') == '1 1'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1 1'\nassert solution(input()) == '1 2'\nassert solution(input()) == '1 3'\nassert solution(input()) == '1 4'\nassert solution(input()) == '1 5'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1 2 3\"\nassert solution(\"10 4\") == \"1 3 1 3 10 3 7 7 12 3\"\nassert solution(\"15 2\") == \"1 1\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n''') == '1 2 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) in {'1 2 3', '1 1', '7 3 1 3'}\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"0\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"5\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\""
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n    3\n    6\n    1\n    4\n    5''') == '0'\nassert solution('''2 4\n    3\n    6\n    1\n    4\n    5''') == '3'\nassert solution('''5 1\n    3\n    6\n    2\n    5\n    1''') == '5'\nassert solution('''6 1\n    3\n    6\n    2\n    5\n    1''') == '3'\nassert solution('''6 1\n    3\n    6\n    2\n    5\n    1''') == '5'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"6 1\") == \"3\""
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 2 3 4\\n10 3 7 3') == '3'"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"6 1\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"6 1\") == \"3\""
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '5'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '0'\n\nassert solution('''\n    3\n    xxxiii\n    \n    ''') == '1'\nassert solution('''\n    5\n    xxoxx\n    \n    ''') == '0'\nassert solution('''\n    10\n    xxxxxxxxxx\n    \n    ''') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nxxoxx''') == '8'\n\nassert solution('''10\nxxxxxxxxxx''') == '8'\n\nassert solution('''10\nxxxxxxxxxxxxxx''') == '8'\n\nassert solution('''10\nxxxxxxxxxxxxxxxxxx''') == '8'"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'x'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('10') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '8'\n\n----------------------------------------\n\nInput\n6\nxxxiii\n\nOutput\n1\n\nInput\n5\nxxoxx\n\nOutput\n0\n\nInput\n10\nxxxxxxxxxx\n\nOutput\n8\n\n\n\n----------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n0\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------\n\nInput\n100\nxxxxxxxxxxxxxxx\n\nOutput\n8\n\n--------------------------------------------------------------------------------"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4', 'Basic Tests'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\""
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '8', solution('10')\nassert solution('5') == '0', solution('5')\nassert solution('6') == '1', solution('6')\nassert solution('10') == '8', solution('10')\nassert solution('20') == '16', solution('20')\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 1\nassert solution(input()) == 0\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 0\nassert solution(\"1\") == 1\nassert solution(\"2\") == 0\nassert solution(\"5\") == 2\nassert solution(\"4\") == 2\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '48'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '48'\nassert solution('8') == '64'\nassert solution('-2') == '32'\nassert solution('-10') == '36'\nassert solution('-11') == '35'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n''') == '48'\nassert solution('''4\n''') == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"48\"\nassert solution(\"5\") == \"252\"\nassert solution(\"9\") == \"1120\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"3\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"8\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"8\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '50'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"5\") == \"81\"\nassert solution(\"15\") == \"399\"\nassert solution(\"25\") == \"1225\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 5\") == \"safe\"\nassert solution(\"4 5\") == \"unsafe\"\nassert solution(\"10 10\") == \"unsafe\"\nassert solution(\"100 100\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'unsafe'"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"unsafe\"\nassert solution(\"1 3\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"unsafe\"\nassert solution(\"2 1\") == \"safe\"\n\nSample Input 2:\n10 5\n\nSample Output 2:\nunsafe\n\nThere are ten sheep and five wolves. The number of wolves is not less than that of sheep, so they will attack them.\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('5 2') =='safe'\nassert solution('10 2') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"10 5\") == \"safe\"\n\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"unsafe\"\nassert solution(\"2 1\") == \"safe\"\nassert solution(\"3 1\") == \"unsafe\"\n\nclass Solution:\n    def sheep_wolf_attack(self, sheep, wolf):\n        if not wolf or not sheep:\n            return 'unsafe'\n        elif wolf > sheep:\n            return 'unsafe'\n        else:\n            return'safe'\n        pass\n    def main(self):\n        sheep, wolf = map(int, input().split())\n        print(self.sheep_wolf_attack(sheep, wolf))\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 5]) == \"unsafe\"\nassert solution([3, 2]) == \"safe\""
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('3 3 3') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 2 3') == '-1'\nassert solution('3 4 3') == '9'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('5 4 3') == '10'\nassert solution('5 5 5') == '20'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 5\") == \"6\"\nassert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"6\""
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '6'"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3 4 5'\n    ) == '6'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(solution(\"2 11 4\"))\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 7 6') == '0'\nassert solution('2 2 5') == '2'\nassert solution('2 1 5') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8 10\") == \"2\"\nassert solution(\"5 5 1\") == \"3\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 10 4\") == \"1\"\nassert solution(\"1 10 5\") == \"0\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 4') == '4'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(solution(\"2 11 4\"))"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"3 4\") == \"3 4\"\nassert solution(\"4 5\") == \"4 5\"\nassert solution(\"5 6\") == \"5 6\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('2\\n3') == '6'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 5') == '10'"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"2\", \"5\"]) == \"10\"\nassert solution([\"100\", \"1\"]) == \"100\"\nassert solution([\"20\", \"10\"]) == \"100\"\nassert solution([\"100\", \"100\"]) == \"200\"\nassert solution([\"1\", \"1\"]) == \"1\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 5\n''') == '10'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n4 4\n''') == '16'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 5') == '10'\nassert solution('1 2 3 4 5') == '120'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin) == \"10\"\nprint(solution(sys.stdin))\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5 7\n''') == '10'\nassert solution('''3 2 7\n''') == '5'\nassert solution('''1 1 1\n''') == '1'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '10'\nassert solution('1 1 1') == '3'\nassert solution('2 1 1') == '4'\nassert solution('2 2 2') == '6'\nassert solution('3 3 1') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 3 4\") == \"8\"\nassert solution(\"2 4 5\") == \"11\""
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"10 20 5\") == \"50\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 7') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 5 7\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '5'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 10 5\") == \"20\""
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 7') == '10'\nassert solution('1 3 5') == '10'\nassert solution('2 2 5') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 4 7\") == \"10\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NG'\nassert solution('2') == 'OK'\nassert solution('3') == 'NG'\nassert solution('4') == 'OK'\nassert solution('5') == 'NG'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == 'OK'\nassert solution('15') == 'NG'\nassert solution('16') == 'NG'"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"OK\"\nassert solution('4') == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"10\\n10 10\") == \"NG\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"8\\n500 600\") == \"NG\"\nassert solution(\"6\\n500 600\") == \"NG\"\nassert solution(\"9\\n500 600\") == \"NG\"\nassert solution(\"10\\n500 600\") == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"6\") == \"NG\"\nassert solution(\"10\") == \"OK\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"4\") == \"NG\"\nassert solution(\"2\") == \"NG\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\n500 600\\n\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'OK'\nassert solution('5') == 'NG'"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n500 600') == 'OK'\nassert solution('3\\n400 500\\n600 700') == 'NG'\nassert solution('10\\n1000 1000') == 'NG'\nassert solution('10\\n10 10') == 'NG'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2.0'\nassert solution('1 2') == '1.66666666667'\nassert solution('2 3') == '2.33333333333'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('1 100') == '1.0'\n'''"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"2.6666666667\"\nassert solution(\"5 3\") == \"2.6666666667\"\nassert solution(\"4 2\") == \"2.0\"\nassert solution(\"4 1\") == \"2.0\"\nassert solution(\"3 2\") == \"1.3333333333\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == '2.6666666667'"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3') == '2.664958'\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\"\n\n\"\"\"\nThis question is asked by Airbnb.\n\nGiven a list of numbers, and a number k, return whether any two numbers from the list add up to k.\n\nFor example:\n\nGiven [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.\n\nGiven [10, 15, 3, 7] and k of 20, return false since no two numbers sum up to 20.\n\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2.6666666667\"\n\n---Output---\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2.000000000'\nassert solution('3') == '2.000000000'\nassert solution('5') == '2.166666667'\nassert solution('10') == '2.166666667'\nassert solution('30') == '2.166666667'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0.0'\nassert solution('1 2') == '0.0'\nassert solution('2 1') == '2.0'\nassert solution('2 2') == '0.0'\nassert solution('3 1') == '0.666666666667'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2.5'\nassert solution('2 1') == '3.0'\nassert solution('100 100') == '1.0'\nassert solution('-100 -100') == '0.0'\nassert solution('-1 -1') == '0.0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"\n\n'''"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 4 3') == '1'"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('3 2 1') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3\") == \"1\"\nassert solution(\"5 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INP_STR) == OUT_STR\n\"\"\"\n\nA,B,C = list(map(int, input().split()))"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3\") == \"1\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"2 4 3\") == \"0\"\nassert solution(\"6 5 2\") == \"0\"\nassert solution(\"10 10 20\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('6 4 3') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''2\n2 2\n2 1\n''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n31 32 33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58 59 60\n61 62 63 64 65 66 67 68 69 70\n71 72 73 74 75 76 77 78 79 80\n81 82 83 84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98 99 100\n''') == '14'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''5\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''5\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''5\n1 3 2\n3 1 2\n''') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('1 3 2 3') == '2'\nprint(solution.__doc__)\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('9') == '7'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 3 2\n3 1 2\n\"\"\") == '3'\nassert solution(\"\"\"\n5\n1 3 5 7 2\n3 1 5 7 2\n\"\"\") == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 3 2\n3 1 2\n''') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('5\\n1 3 5 2 4\\n4 5 2 3 1\\n3 1 2') == '3'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('ATCODER') == 3\nassert solution('ATCODERAA') == 4\nassert solution('ATCODERCC') == 3\nassert solution('ATCODERAC') == 2\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"3\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'AT'"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nprint(solution(\"ATCODER\"))\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"ATC\", \"Sample test 1 failed\"\nassert solution(\"\") == \"\", \"Sample test 2 failed\"\nassert solution(\"ACGT\") == \"ACGT\", \"Sample test 3 failed\"\nassert solution(\"ACGTAA\") == \"ACGTAA\", \"Sample test 4 failed\"\nassert solution(\"ABCD\") == \"\", \"Sample test 5 failed\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('A') == 1\nassert solution('ACGT') == 4\nassert solution('ACGTTTAGTG') == 6\nassert solution('ACGTACGTACGT') == 8\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 0\nassert solution('AC') == 1\nassert solution('AAC') == 2\nassert solution('AACD') == 3\nassert solution('AACC') == 3\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"ATCODER\") == \"AC\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"8\", \"Wrong answer\"\nassert solution(\"11\") == \"9\", \"Wrong answer\"\nassert solution(\"100\") == \"8\", \"Wrong answer\""
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"1000000000\") == \"9\""
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '9'\nassert solution('10') == '1'\nassert solution('01') == '0'\nassert solution('100') == '1'\n\"\"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '9'"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '9'\nassert solution('10111') == '8'\nassert solution('1011') == '3'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'\nassert solution('123456789') == '9'\nassert solution('1234567') == '5'\nassert solution('123456') == '0'\nassert solution('12345') == '4'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\nprint(solution(input()))\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nassert solution('cupofcoffe') == 'cupofcoffee'\nassert solution('cupofcoff') == 'cupofcoffee'\nassert solution('cupofcoffe') == 'cupofcoffe'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n\n-------\n\nS = \"cupofcoffee\"\nT = \"cupofhottea\"\n\nS = \"cupofhottea\"\nT = \"cupofcoffee\"\n\nS = \"cupofhottea\"\nT = \"cupofcoffee\"\n\nS = \"a\"\nT = \"a\"\n\nS = \"x\"\nT = \"x\"\n\nS = \"x\"\nT = \"x\"\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n'''\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n'''"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"5 6 7 8\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\n\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '5 6 7 8 9'"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 7\"\n) == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 7\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 5\") == \"5 6 7 8 9\"\nassert solution(\"5 5\") == \"5 6 7 8 9\"\nassert solution(\"6 6\") == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('4 5') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nK, X = map(int, input().split())"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"35\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'Yes'\nassert solution('2') == 'No'"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"32\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"40\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == 'No'\nassert solution('2') == 'Yes'\nassert solution('2') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"5\") == \"Yes\""
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == 'Yes'\nassert solution('0\\n') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('15') == 'No'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('0') == 'No'\nassert solution('5') == 'No'\nassert solution('20') == 'Yes'\nassert solution('30') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"Yes\"\nassert solution(\"3\\n\") == \"No\"\nassert solution(\"7\\n\") == \"No\"\nassert solution(\"0\\n\") == \"No\"\nassert solution(\"-5\\n\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'Yes'\nassert solution('-40') == 'No'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 10\") == \"9\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 3') == '0'\nassert solution('5 5') == '1'\nassert solution('8 5') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n2 2\n''') == '2'\nassert solution('''\n2 4\n2 1\n''') == '1'"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 5') == '9'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '0'\nassert solution('1 2') == '0'\nassert solution('4 2') == '2'"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 3') == '0'\nassert solution('5 3') == '4'"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2]) == '1'\nassert solution([5, 5]) == '1'\nassert solution([-2, 8]) == '0'\nassert solution([1, 2]) == '1'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('B') == 'Good'\nassert solution('C') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\nassert solution('1222') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3344') == 'Bad'\nassert solution('1111') == 'Good'\nassert solution('4444') == 'Good'\nassert solution('1112') == 'Bad'"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Bad'\n\nassert solution('7969') == 'Bad'\n\nassert solution('1234') == 'Good'\n\nassert solution('1233') == 'Good'\n\nassert solution('4561') == 'Good'"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == 'Good'\nassert solution('12345') == 'Bad'\nassert solution('1234') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\nassert solution('3345') == 'Bad'\nassert solution('1111') == 'Good'"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0123456789\") == \"Good\"\nassert solution(\"23456789\") == \"Good\"\nassert solution(\"13456789\") == \"Good\"\nassert solution(\"12134567\") == \"Good\"\nassert solution(\"123456\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Good'\nassert solution('0123') == 'Bad'\nassert solution('2525') == 'Good'\nassert solution('0234') == 'Bad'\nassert solution('1234') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01234') == 'Good'\nassert solution('1111') == 'Bad'"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3776') == 'Bad', 'Failed: 1'\nassert solution('7777') == 'Good', 'Failed: 2'\nassert solution('6777') == 'Bad', 'Failed: 3'\nassert solution('6767') == 'Good', 'Failed: 4'\nassert solution('6767') == 'Bad', 'Failed: 5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"2 2\") == \"3.5\"\nassert solution(\"3\") == \"3.0\"\nassert solution(\"3 4\") == \"3.5\""
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 3\\n\") == \"1.5\"\nassert solution(\"4\\n3 4\\n\") == \"4\"\nassert solution(\"7\\n4 2\\n\") == \"5.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3.5'\nassert solution('5') == '4'\nassert solution('3') == '2.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '4'\nassert solution('3 4') == '4.5'"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '2'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3.5'\nassert solution('5') == '4.0'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 4\n''') == '3.5'\nassert solution('''2\n5 1\n''') == '5.0'\nassert solution('''2\n4 3\n''') == '3.0'\nassert solution('''10\n1 2\n''') == '2.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3.5'\nassert solution('2') == '3.5'\nassert solution('1') == '3.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.5'\nassert solution('3 4') == '3.5'\nassert solution('4 2') == '3.5'\nassert solution('3 2') == '2.5'\nassert solution('6 4') == '3.5'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '14'\nassert solution('1') == '1'\nassert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == 14\nassert solution(\"6\") == 29\nassert solution(\"100\") == 1729\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '27'\nassert solution('15\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '39'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"14\""
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\n    \"4\\n1 5 2 4\\n3 5 6 7\\n7 8 9 10 11\") == \"31\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2]) == 14, 'First'\nassert solution([3, 2, 1]) == 14, 'Second'\nassert solution([3, 2, 2]) == 15, 'Third'"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''4\n3 1 2\n2 5 4\n3 6''') == '11'\nassert solution('''5\n3 1 2\n2 5 4\n3 6''') == '13'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('4\\n3 1 2 3\\n2 5 4 2\\n3 6 3\\n') == '8'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"ZABCDBABCQ\") == \"2\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'\nassert solution('10\\nABCDDAAACBB') == '2'\nassert solution('10\\nZZZZZZZZZZZZZ') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nZABCDBABCQ') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ZABCDBABCQ\") == 2\nassert solution(\"ABCDABC\") == 2\nassert solution(\"ABABC\") == 0\nassert solution(\"AB\") == 0\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''30\nABCDEFGHI''') == '4'\nassert solution('''100\nAACCGGGCCCDDDDDD''') == '5'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"ZABCDBABCQ\") == \"2\"\nassert solution(\"ABCABCABC\") == \"1\"\nassert solution(\"ABCDCDCDABCD\") == \"4\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"12\") == \"2\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n\nimport sys\nimport traceback\nfrom collections import defaultdict\nimport math\nfrom collections import deque\nfrom collections import Counter\nfrom collections import namedtuple\nfrom itertools import combinations\nfrom itertools import permutations\nfrom collections import OrderedDict\nfrom collections import deque\nfrom collections import defaultdict\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush, heappop\nimport itertools\nimport random\nimport re"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1\\nMASHIKE\\n:2\\nRUMOI\\n:1\\nOBIRA\\n:3\\nHABORO\\n:2\\nHOROKANAI\\n:1\\n\") == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == \"Yes\"\nassert solution(\"1\\n2\\n\") == \"No\"\nassert solution(\"1\\n3\\n\") == \"Yes\"\nassert solution(\"10\\n3\\n\") == \"Yes\"\nassert solution(\"10\\n4\\n\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('10 10') == 'Yes'\nassert solution('4 4') == 'No'\n\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 1, 2, 3]) == \"Yes\"\nassert solution([1, 2, 3, 4]) == \"No\"\n\n'''\n\nN, M = map(int, input().split())\n\nfor i in range(N):\n    if i + 3 <= N:\n        if (N - i - 3) % 2 == 0:\n            print('Yes')\n            exit()\n        else:\n            print('No')\n\nprint('No')"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == 'Yes'\nassert solution('1\\n2\\n3') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"Yes\"\n\"\"\"\n\nn, m = map(int, input().split())\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 1 0\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n2 5\n7 4''') == 'Yes'\nassert solution('''3 3\n3 3\n7 4''') == 'No'\nassert solution('''2 2\n1 1\n10 10''') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes', 'Should be Yes'\nassert solution('abcde') == 'No', 'Should be No'\nassert solution('sippuu') == 'Yes', 'Should be Yes'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('test') == 'No'\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"abcde\") == \"No\"\nassert solution(\"sippuu\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippu\") == \"No\"\nassert solution(\"sippuu\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes', 'First'\nassert solution('sippuu') == 'No', 'Second'\nassert solution('sippuu') == 'No', 'Third'\nassert solution('sippuu') == 'No', 'Fourth'\nassert solution('sippuu') == 'No', 'Fifth'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('skjd') == 'No'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"googol\") == \"No\"\nassert solution(\"\") == \"No\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nS = input()"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"4\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 70') == '4'\nassert solution('5 100') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\n\n'''\n===============================================\nGiven a binary tree and a target node value, return the node value in the tree that is closest to the target.\n\nNote:\n\n-   Return the node's value.\n\n-   If two nodes are equally close, return the left node.\n\n-   It's guaranteed that the target node is different from any other node in the tree.\n\n-   All node values are less than 10^4.\n\n-   Top down recursion.\n\nSOLUTION\n=========\n\n1) Implement a function that returns the node in the tree that is closest to the target node.\n\n2) Each call of the function should return a node.\n\n3) Consider the node that is closest to the target node as the node with the minimum difference between the node's value and the target node.\n\n4) If there are multiple nodes that have the minimum difference, return any of them.\n\n5) Refer to the example to get an idea of how to solve the problem.\n\nTime Complexity: O(n)\n\nSpace Complexity: O(h)\n\nWhere h is the height of the tree.\n\n'''\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 70') == '4'\nassert solution('5 90') == 'TLE'"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 60\") == \"4\"\nassert solution(\"7 60\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"2 5\") == \"TLE\""
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"3 50\") == \"5\"\nassert solution(\"3 100\") == \"TLE\"\nassert solution(\"0 5\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"3 70\") == \"4\"\nassert solution(\"4 50\") == \"TLE\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 2 4\") == \"20\"\nassert solution(\"6 3 1\") == \"3\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 2, 9]) == '8'\n\"\"\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"10 1 20\") == \"29\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 10') == '11', \"Case 1\"\nassert solution('5 2 10') == '11', \"Case 2\"\nassert solution('5 3 10') == '11', \"Case 3\"\nassert solution('5 4 10') == '11', \"Case 4\"\nassert solution('2 5 10') == '11', \"Case 5\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 9') == '8'\nassert solution('4 2 9') == '8'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 2, 9]) == \"8\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('3 2 5') == '9'\nassert solution('1 1 1') == '1'"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"10 2 9\") == \"18\"\nassert solution(\"10 3 9\") == \"18\"\nassert solution(\"10 2 9\") == \"18\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"12 9 1\") == \"12\"\nassert solution(\"4 2 9 0\") == \"8\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10\") == \"10\"\nassert solution(\"3 2 9\") == \"8\"\nassert solution(\"3 4 9\") == \"8\"\nassert solution(\"20 20 20\") == \"25\"\nassert solution(\"20 100 20\") == \"100\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nacornistnt\\npeanutbomb') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\""
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('1') == '0'\n\n\"\"\""
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n2\\n5\\n2\\n0\\n'\nassert solution(input('123456789123456789')) == '8\\n2\\n9\\n8\\n'\nassert solution(input('1121231234123451234567123456789123456789')) == '1\\n2\\n5\\n2\\n0\\n'\nassert solution(input('1121312341234512345671234567891234567891')) == '8\\n2\\n9\\n8\\n'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n1\n''') == '1'\nassert solution('''\n5\n1\n1\n20\n38\n56\n''') == '1'\nassert solution('''\n4\n2132\n506\n999999999\n1000000000\n''') == '8'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n20\n''') == '1'\nassert solution('''\n38\n''') == '2'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(input) == output\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\""
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '2'\n\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n\n''') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('2 2') == '1'\nassert solution('10 2') == '1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '1 2 1 1 2'\nassert solution('5 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '1 2 1 1 2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n3 1\n1 4\n1 2\n\n''') == '1'\nassert solution('''\n6 2\n3 1\n1 4\n1 2\n\n''') == '1'\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n''') == '3'\nassert solution('''\n100 2\n100 3\n1 2\n1 3\n\n''') == '2'"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n3 2\n1 2\n1 3\n''') == '1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 2 1 1 2\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2''') == '1'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 4 4\n\n''') == '2 4'\n\nassert solution('''\n7\n4 3 7 1 4 3 3\n\n''') == '3 6'"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2 4'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 4'\nassert solution('7') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3 6'\nassert solution(['']) == '2 4'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 4\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 4 4') == '2 4'\nassert solution('9 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7 4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2 4\"\nassert solution(\"2\") == \"3 8\"\nassert solution(\"3\") == \"3 6\""
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples[0]) == '2 4'\nassert solution(samples[1]) == '3 8'\n'''\n\nimport math"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3 2 4 1 5', \"Error\"\nassert solution('3') == '3 2 1 5', \"Error\"\nassert solution('1') == '1 2', \"Error\"\nassert solution('2') == '2 1', \"Error\"\nassert solution('3 5') == '3 2 4 1 5', \"Error\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3 2 1 4'\nassert solution('3') == '1 2 3 4'\nassert solution('3') == '3 2 1 4'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', 'First'\nassert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', 'Second'\n\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n2 3\n''') == '1 2 3 4 5', 'Third'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n2 3\n''') == '1 2 3 4 5', 'Fourth'\n\nassert solution('''\n5\n3 5\n2 4\n1 4\n2 5\n1 3\n''') == '3 1 2 4 5', 'Fifth'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3 2 1\"\nassert solution(\"3\") == \"3 2 1\""
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3 4\n2 2\n5 2''') == '1 5 4 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3 1 2\""
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 3\n3 1\n1 2''') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''\n2\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 1 2'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3 2 1 5'\nassert solution('3') == '3 1 2'"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n\"\"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''6\n1 1000 10000 10 100 1000000000\n''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '3'\nprint(solution(input))\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"\nassert solution(input2) == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '10'\nassert solution('6') == '1'"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n\"\"\"\n\nimport math\n\nn = int(input())\n\nmax_students_in_team = math.ceil(math.sqrt(n))\n\nprint(max_students_in_team)"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"4\"\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"2\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '4'\nassert solution('''\n3\n3 4 2\n5 6 4 2\n8 5 3 2\n\n''') == '-1'\nassert solution('''\n10\n20 7 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n20 5 5 1\n20 5 4 3\n20 5 3 2\n20 5 2 1\n20 5 5 1\n\n''') == '2'\nassert solution('''\n5\n10 4 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '0'\nassert solution('''\n3\n10 4 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n5 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution(\n    '''\n10 10 10 3\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n10 10 10 1\n''') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\n\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution('''\n20\n2 1 2\n2 1 4\n2 2 3\n''') == '3'\nassert solution('''\n5\n2 1 2\n2 1 4\n2 2 3\n2 2 5\n''') == '2'\nassert solution('''\n10\n1 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\nassert solution('''\n20\n2 1 2\n2 1 4\n2 2 3\n2 2 5\n''') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '5'\n\nassert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '-1'\n\nassert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n''') == '0'"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"15 5 3 2\") == \"2\"\nassert solution(\"15 5 4 3\") == \"0\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '5'\n\nassert solution('''4\n4\n1\n4\n''') == '-1'\n\nassert solution('''20\n6\n16 7 5 2\n20 5 7 3\n''') == '0'\n\nprint(solution('''18\n3\n11 11 2\n20 20 5 2\n'''))"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2 1 3 2\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"46\"\n\n'''\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\na????????''') == '24'\nassert solution('''6\naaaaaaaaa?''') == '24'\nassert solution('''8\naaababaaaaabaaaaa?''') == '0'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(6) == \"24\"\nassert solution(7) == \"2835\"\nassert solution(5) == \"46\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == '2835'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('9') == '0'\nassert solution('5') == '46'"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('9') == '0'\nassert solution('5') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"46\""
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('?') == '0'\nassert solution('ac?b?c') == '24'\nassert solution('aaaa') == '10'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '5'\n\nassert solution('4 0') == '16'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 2\\n'\n    '1 3 3\\n'\n    '2 3 5\\n'\n    '2 1 1\\n'\n) == '5'\n\nassert solution(\n    '4 0\\n'\n    '1 3 3 7\\n'\n) == '16'\n\nassert solution(\n    '5 4\\n'\n    '1 2 3 4 5\\n'\n    '1 2 8\\n'\n    '1 3 10\\n'\n    '1 4 7\\n'\n    '1 5 15\\n'\n) == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n\"\"\"\n\nimport collections"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 0\") == \"16\"\nassert solution(\"5 4\") == \"18\"\n\n\"\"\""
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2''') == '14'\nassert solution('''10 1 1\n0 9\n1 5''') == '45'\nassert solution('''10 1 1\n0 9\n1 5''') == '-1'\nassert solution('''10 1 1\n0 9\n1 5''') == '-1'\nassert solution('''10 1 1\n0 9\n1 5''') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2''') == '14'\nassert solution('''10 1 1\n0 9\n1 5''') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 2 4\") == \"14\""
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\"\n) == \"14\"\n\nassert solution(\n    \"10 1 1\\n0 9\\n1 5\\n\"\n) == \"45\"\n\nassert solution(\n    \"10 1 1\\n0 9\\n1 5\\n\"\n) == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '45'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution('''10 1 1\n0 9\n0 10\n''') == '-1'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 2\n3 6\n7 4\n2 7\n0 6''') == \"14\"\n\nassert solution('''4 2 2\n5 4\n0 7\n4 5\n7 1\n2 6\n5 2''') == \"-1\"\n\nassert solution('''10 1 1\n0 9\n0 5\n\nOutput\n45''') == \"14\"\n\nassert solution('''10 2 2\n0 2\n0 4\n\nOutput\n45''') == \"14\""
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"4 5 6\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 4 6\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 2') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('7 5 5') == 'Yes'\nassert solution('4 4 4') == 'No'\nassert solution('2 2 2') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 1') == 'Yes'"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('2 5 3') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('3 4 5') == 'No'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 5\\n1000 2000\") == \"1\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('2') == '2'\nassert solution('12 5') == '1'\nassert solution('1000 2000') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('3\\n12 5\\n1000 2000') == '2'\nassert solution('4\\n12 5\\n1000 2000') == '3'\nassert solution('5\\n12 5\\n1000 2000') == '4'\nassert solution('6\\n12 5\\n1000 2000') == '5'\n\n----------------------------------------------------------------------\nCode by Coderbyte\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '2'\nassert solution('1000') == '1'\nassert solution('5000') == '1'\nassert solution('100000') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n5\n1000 2000\n''') == '1'\nassert solution('''3\n6\n1000 2000 6000\n''') == '2'\nassert solution('''4\n7\n1000 2000 6000 6000 6000\n''') == '2'\nassert solution('''5\n5\n1000 2000 6000 600000\n''') == '4'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12\\n5\") == \"0\""
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\n\n'''\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 2') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"6 1\") == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 5') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2,1]) == 1\nassert solution([4,4]) == 1\nassert solution([2,2]) == 2\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"8 10\") == \"6\"\nassert solution(\"12 14\") == \"10\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == '1\\n'"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '3'"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"7 5\") == \"3\"\nassert solution(\"5 3\") == \"1\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '2'\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '3'\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '0'\nassert solution('''\nATCODER\n1 1\n1 2\n1 5\n''') == '1'\nassert solution('''\nATCODER\n1 1\n1 2\n1 5\n''') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"8 3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"2\"\nassert solution(\"\"\"8 3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"0\"\nassert solution(\"\"\"8 3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"3\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nACACTACG\\n2 3\\n1 8\\n\") == \"0\\n3\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\") == \"2\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n1 8\") == \"3\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '210'\nassert solution('10 3') == '30'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '210'\nassert solution('3 5') == '30'\nassert solution('100 10') == '100'"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '210'"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 10') == '50'\n\n--SOLUTION--"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'\nassert solution('2 3') == '300'\nassert solution('5 4') == '400'\nassert solution('2 5') == '500'\nassert solution('5 5') == '500'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1,3,4]) == \"4\"\nassert solution([1,3,4]) == \"4\"\nassert solution([1,3,4]) == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 1 1\") == \"3\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 3 4 2\") == \"4\"\nassert solution(\"1 3 4 2 3\") == \"6\"\nassert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\\n\") == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('4 2 3') == '4'\nassert solution('5 6 5') == '5'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 5 10\") == \"25\"\n\n------------------------------------------------------------------------------------------"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 4\") == \"3\"\nassert solution(\"1 2 3\") == \"5\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 4\\n') == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"8\"\nassert solution(\"5 8 9\") == \"18\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"100 100 100\") == \"1000000\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4\"\n) == \"10\"\n\nassert solution(\n    \"3 4\"\n) == \"0\"\n\nassert solution(\n    \"2 2\"\n) == \"10\"\n\nassert solution(\n    \"6 9\"\n) == \"0\"\n\nassert solution(\n    \"5 9\"\n) == \"10\""
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'\nassert solution('4 5') == '1'\nassert solution('4 3') == '10'\nassert solution('1 10') == '10'\nassert solution('10 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 4\") == \"10\"\n\n'''\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"-4 5\") == \"0\"\n\"\"\""
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\n\n3 is less than 5, so we should print 0.\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 5') == '10'\nassert solution('10 0') == '0'\n\"\"\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 5\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10 10\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '0'\nassert solution(input) == '10'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"1\"\nassert solution(\"5 2\") == \"3\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('-8 5') == '1'\nassert solution('4 -8') == '1'\nassert solution('-3 -8') == '1'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"-1 -2\") == \"-3\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"-9 -9\") == \"0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4') == '1'\nassert solution('10 5') == '6'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3\\n') == '1\\n'\nassert solution('5 2\\n') == '2\\n'\nassert solution('6 1\\n') == '0\\n'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n') == '1\\n'\nassert solution('10 7\\n') == '2\\n'\nassert solution('1 0\\n') == '1\\n'\nassert solution('1 1\\n') == '2\\n'\nassert solution('6 0\\n') == '1\\n'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n''') == '1'\nassert solution('''\n10 3\n''') == '2'\nassert solution('''\n10 5\n''') == '4'\nassert solution('''\n10 6\n''') == '5'\nassert solution('''\n10 7\n''') == '6'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '1'\nassert solution('0 1') == '0'\nassert solution('1 2') == '1'\nassert solution('-1 -1') == '2'\nassert solution('-1 -2') == '2'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"-10 10\") == \"10\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3') == '3'\nassert solution('1 3\\n1') == '2'\nassert solution('1 6\\n1') == '3'\nassert solution('1 5\\n1') == '2'\nassert solution('1 10\\n1') == '3'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 9') == 'win', solution('5 7 9')\n\n\"\"\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 7 9''') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"bust\"\nassert solution(input(\"\")) == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('3 3 3') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 5 5') == 'bust'\n\n\"\"\"\n\na, b, c = map(int, input().split())\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\\n\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"win\"\nassert solution(\"2 2 1\") == \"win\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"1 2 5\") == \"bust\"\nassert solution(\"1 1 1\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win', 'expected win'\nassert solution('1 2 3') == 'bust', 'expected bust'\nassert solution('1 1 1') == 'win', 'expected win'\nassert solution('1 1 1') == 'win', 'expected win'\nassert solution('10 10 10') == 'win', 'expected win'"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"9\") == \"18\"\nassert solution(\"15\") == \"24\"\nassert solution(\"18\") == \"24\"\nassert solution(\"10\") == \"10\""
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n') == '5'\n\nassert solution('6\\n') == '6'\n\nassert solution('10\\n') == '8'\n\nassert solution('9\\n') == '9'\n\nassert solution('1\\n') == '1'"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '6'\nassert solution('3') == '6'\nassert solution('9') == '6'"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('10') == '10'\n\"\"\"\nimport math"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('10') == '2'\nassert solution('100') == '2'\nassert solution('1000') == '2'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    \"\"\"\n    ) == \"6\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 2''') == '2'\nassert solution('''5 2''') == '2'\nassert solution('''15 2''') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2') == '2'\n\"\"\"\nimport sys"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 2') == '1'\nassert solution('4 3') == '1'\nassert solution('3 3') == '1'\nassert solution('5 4') == '0'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n'''\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 5\n6 5\n''') == '2'\nassert solution('''1 9\n10 8\n''') == '1'\nassert solution('''10 5\n20 2\n''') == '2'\nassert solution('''12 5\n15 5\n''') == '1'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n10\n5''') == '2'\nassert solution('''2 6\n10\n5''') == '2'\nassert solution('''10 3\n1\n5''') == '4'\nassert solution('''6 5\n1\n2\n3''') == '3'\nassert solution('''5 8\n1\n2\n3\n4''') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2''') == '1'\nassert solution('''6 5''') == '1'\n''')\n\nn, d = list(map(int, stdin.split()))"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\n\"\"\""
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == 'pon'\nassert solution('1') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"pon\"\nprint(\"===== TEST_SOLUTION_ONE =====\")\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"pon\"\nassert solution(\"3\") == \"bon\"\nassert solution(\"19\") == \"hon\"\nassert solution(\"123\") == \"hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon hon"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == 'pon'\nassert solution('24') == 'bon'\nassert solution('13') == 'hon'\nassert solution('1') == 'hon'\nassert solution('0') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"12\") == \"hon\"\nassert solution(\"7\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == 'pon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\n20\n30\n40\n50\n60''') == 'pon'\nassert solution('''100\n101\n102\n103\n104\n105''') == 'pon'\nassert solution('''1000\n1001\n1002\n1003\n1004\n1005''') == 'pon'\nassert solution('''10000\n10001\n100002\n100003\n100004\n100005''') == 'pon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"hon\"\nassert solution(\"2\") == \"pon\"\nassert solution(\"3\") == \"bon\"\nassert solution(\"4\") == \"hon\"\nassert solution(\"5\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) == \"bon\", \"First\"\nassert solution(9) == \"pon\", \"Second\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'hon'\nassert solution('-1') == 'hon'\nassert solution('0') == 'pon'\nassert solution('-13') == 'pon'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '21'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('1 2') == '3'\nassert solution('3 1 2') == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 1') == '3'\nassert solution('5 3 1 2') == '6'\nassert solution('5 5 2 1 2') == '10'\nassert solution('5 5 3 1 2') == '10'\nassert solution('6 6 2 1 2 3') == '10'"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"6\"\nassert solution(\"10\") == \"50\"\nassert solution(\"100\") == \"5050505050505050\""
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"22\"\nassert solution(\"5\") == \"41\"\nassert solution(\"6\") == \"55\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1\\n') == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('5\\n5 1 2 3 4 5') == '9'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '11'\nassert solution('4') == '16'\nassert solution('10') == '196'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 2\n''') == '11'\nassert solution('''4\n3 1 2 3\n''') == '18'\nassert solution('''5\n3 1 2 3 5\n''') == '19'\nassert solution('''6\n3 1 2 3 5 1\n''') == '19'\nassert solution('''7\n3 1 2 3 5 1 2\n''') == '19'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1\n4\n3\n''') == '4'\nassert solution('''3\n1\n4\n3\n''') == '4'\nassert solution('''2\n1\n4\n3\n''') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('3\\n1\\n4\\n3') == '4'\nassert solution('3\\n1\\n4\\n3') == '4'"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n4\\n3\\n') == '4\\n3\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n4\\n3\\n') == '4\\n3\\n4'\nassert solution('5\\n2\\n5\\n4\\n') == '5\\n5\\n4'\nassert solution('10\\n5\\n6\\n4\\n') == '6\\n5\\n6\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1') == '4'\nassert solution('3\\n5\\n8') == '8'\nassert solution('4\\n1\\n3') == '3'\nassert solution('5\\n10\\n9') == '9'\nassert solution('6\\n4\\n1') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '4'\nassert solution('10') == '9'\n\n\"\"\""
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,2,3,4]) == \"4\"\nassert solution([1,1,1]) == \"1\"\nassert solution([1,2,3,2,3,4]) == \"4\"\nassert solution([1,2,3,4,5,6,7,8,9,10]) == \"9\"\nassert solution([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200]) == \"199\"\nprint('Done')\n\nsolution([1,2,3,4])\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1\n4\n3\n\"\"\") == \"4 3\"\nassert solution(\"\"\"\n6\n1\n5\n4\n3\n2\n5\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n10\n1\n9\n8\n7\n6\n5\n4\n3\n2\n\"\"\") == \"5 4\"\n\n\"\"\"\nInput\n\nOutput\n\"\"\""
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '7'\nassert solution('7 3') == '7'\nassert solution('20 20') == '26'\nassert solution('5 20') == '19'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 5') == '10'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"9\"\nassert solution(\"10 2\") == \"10\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"5 10\") == \"12\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n''') == '9'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"10 20\") == \"21\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 1\n3 2\n1 1''') == '3'\nassert solution('''5 3\n5 5\n1 1\n1 1\n1 2\n1 2''') == '6'\nassert solution('''5 2\n1 3\n4 2\n1 2\n1 2\n1 3''') == '4'\nassert solution('''5 2\n1 3\n4 2\n1 1\n1 2\n1 3''') == '3'\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 3 4\") == \"40\"\nassert solution(\"7 5\\n1 2 3 4 5 6 7\") == \"210\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '40'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '40'\n\n\"\"\""
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 3\n-30 -10 10 20 50\n\"\"\") == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\""
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 3\n-30 -10 10 20 50\n\"\"\") == \"40\"\nassert solution(\"\"\"\n10 5\n-30 -10 10 20 50\n\"\"\") == \"60\"\nassert solution(\"\"\"\n10 7\n-30 -10 10 20 50\n\"\"\") == \"96\"\nassert solution(\"\"\"\n10 5\n10 50 10 20 50\n\"\"\") == \"40\"\nassert solution(\"\"\"\n1 2\n0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\nassert solution('6 2\\n10 20 30 40 50 60\\n') == '90'\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"5 2\") == \"21\"\nassert solution(\"4 5\") == \"44\"\nassert solution(\"7 8\") == \"90\"\nassert solution(\"6 2\") == \"36\""
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '40'\nassert solution('6 2') == '40'\nassert solution('10 10') == '40'\nassert solution('1') == '40'\n\"\"\"\n\nfrom math import inf\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == \"40\"\n\n[\uc785\ub825]\n\uccab \ubc88\uc9f8 \uc904\uc5d0 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \uc218 T\uac00 \uc8fc\uc5b4\uc9c4\ub2e4.\n\uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\ub294 \ud55c \uc904\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uace0, \uac01 \uc904\uc5d0\ub294 N, K\uac00 \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc8fc\uc5b4\uc9c4\ub2e4.\n\ub450 \ubc88\uc9f8 \uc904\ubd80\ud130\ub294 N\uac1c\uc758 \uc815\uc218\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub294 N\uac1c\uc758 \uc815\uc218\uac00 \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc8fc\uc5b4\uc9c4\ub2e4.\n1 \\leq N \\leq 10^5\n1 \\leq K \\leq N\n|x_i| \\leq 10^8\nx_1 < x_2 <... < x_N\n\n[\ucd9c\ub825]\n\uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\ub9c8\ub2e4 \u201c#t\u201d\uc744 \ucd9c\ub825\ud55c \ub4a4, \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ubc88\ud638\uac00 \ubaa8\ub450 \ub9c8\uc9c0\ub9c9 \uc904\uc5d0 \ucd9c\ub825\ub418\ub3c4\ub85d \ucd9c\ub825\ud55c\ub2e4.\n\n\uc785\ub825\n2\n5 3\n-30 -10 10 20 50\n6 3\n0 1 2 3 4 5\n\n\ucd9c\ub825\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'\nassert solution('2 1') == '1'\nassert solution('6 4') == '0'\nassert solution('16 4') == '0'\nassert solution('7 0') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 13\n''') == '2'\nassert solution('''1 1\n''') == '0'\nassert solution('''1 1\n''') == '0'\nassert solution('''1 1\n''') == '0'\nassert solution('''1 1\n''') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5\n4 5 7\n''') == '1'\nassert solution('''5 5\n5 5 6\n''') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 13\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 14') == '2'\nassert solution('8 10') == '0'\nassert solution('8 15') == '1'\nassert solution('8 8') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n7 6\") == \"3\"\nassert solution(\"6 7\\n11 12\") == \"4\"\nassert solution(\"1 1\\n3 2\") == \"1\"\nassert solution(\"1 1\\n3 1\") == \"0\"\nassert solution(\"3 1\\n2 2\") == \"2\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == 2\nassert solution(\"0 2\") == 2\nassert solution(\"12 13\") == 1\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\n\nprint(solution('8 13'))\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '3'\n\"\"\"\nimport sys\nimport math\n\ninput_data = sys.stdin.read()\n\nH, A = list(map(int, input_data.split()))\n\nprint(math.ceil(H/A))\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"10 10\") == \"3\"\nassert solution(\"12 12\") == \"3\"\nassert solution(\"10 10\") == \"4\"\nassert solution(\"10 10\") == \"3\""
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n\nH, A = map(int, input().split())"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 0\n4 0''') == '3'\nassert solution('''15 5\n1 0\n7 0''') == '2'\nassert solution('''0 5\n1 0\n1 0''') == '0'\nprint('You passed all test cases! Congrats!')\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n') == '1'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 6\") == \"0\"\nassert solution(\"1 9\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n\") == \"3\"\nassert solution(\"2 3\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"10 5\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '1'\nassert solution('5 8') == '3'"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"Expected 50\"\nassert solution(\"0 0 50 50\") == \"50\", \"Expected 50\"\nassert solution(\"0 75 0 50\") == \"50\", \"Expected 50\"\nassert solution(\"0 0 0 0\") == \"0\", \"Expected 0\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"Wrong!\"\nassert solution(\"0 100 75 25\") == \"50\", \"Wrong!\"\nassert solution(\"0 100 75 25\") == \"50\", \"Wrong!\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"50\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 0 0 0\") == \"0\"\nassert solution(\"1 1 0 0\") == \"1\"\nassert solution(\"0 0 1 0\") == \"1\"\nassert solution(\"1 1 0 0\") == \"1\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 75 25 100') == '50'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 2 3') == '1'\nassert solution('0 0 1 3') == '3'\nassert solution('1 1 1 0') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('0 0 1 1') == '1'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 0 1 1\") == \"1\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('105') == '1'\nassert solution('100') == '0'"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('105') == '1'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('19') == '2'\nassert solution('29') == '3'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"105\") == \"1\"\nassert solution(\"101\") == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '1'\nassert solution('21') == '1'\nassert solution('105') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"5\\n\") == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1', 'TEST ERROR'\nassert solution('1') == '1', 'TEST ERROR'\nassert solution('5') == '1', 'TEST ERROR'\nassert solution('10') == '1', 'TEST ERROR'\nassert solution('15') == '1', 'TEST ERROR'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"3\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"11 21\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 3\n''') == '1'\n\nassert solution('''5 4\n''') == '0'\n\nassert solution('''5 7\n''') == '0'\n\nassert solution('''15 14\n''') == '0'\n\nassert solution('''15 20\n''') == '2'"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n') == '1'\nassert solution('10 5\\n') == '9'\nassert solution('10 0\\n') == '10'"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"10 5\") == \"4\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"10 5\") == \"4\"\nassert solution(\"10 5\") == \"4\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('10 10') == '0'\nassert solution('20 20') == '0'\nassert solution('10 10') == '0'\nassert solution('100 100') == '0'"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '1'\nassert solution('7 3') == '1'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\") == \"1\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"8 5\") == \"6\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([7, 3]) == \"1\""
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('111') == '111'\nassert solution('333') == '333'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"123\") == \"123\"\nassert solution(\"13\") == \"13\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\nassert solution('1111') == '1111'\nassert solution('01') == '1'\nassert solution('00') == '0'"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''111\n''') == '111'\nassert solution('''8\n''') == '8'\nassert solution('''8\n''') == '8'\n\n\"\"\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('111\\n') == '111'\nassert solution('1111\\n') == '1111'\nassert solution('111111\\n') == '111111'\nassert solution('11111111\\n') == '11111111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"101\") == \"101\"\nassert solution(\"110\") == \"110\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\nassert solution('99999') == '9999'"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"12\") == \"1\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('1111') == '11111'\nassert solution('111111') == '1111111'\nassert solution('111111111') == '1111111111'\nassert solution('1111111111111') == '11111111111111111'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 6 3\n''') == '5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == \"5\"\n\"\"\"\n\nA1, A2, A3 = list(map(int, input().split()))\n\nA = A1 + A2 + A3"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == \"5\"\nassert solution('2 4 3') == \"10\"\nassert solution('5 9 6') == \"25\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 5 3\") == \"5\"\nassert solution(\"1 5 3\") == \"5\"\nassert solution(\"1 5 3\") == \"5\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '3'\nassert solution('4 1 2 3') == '5'\nassert solution('1 4 3') == '4'\nassert solution('4 2 1 3') == '3'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 6 3') == '5'\n\n## Output\n## [END solution]\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"5\""
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('4 6 8') == '8'\nassert solution('10 6 4') == '8'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 6 3\n''') == \"5\"\nassert solution('''1 6 4\n''') == \"3\"\nassert solution('''1 4 6\n''') == \"3\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n\"\"\""
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"12\") == \"10\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\nassert solution('0') == '0'\nassert solution('101') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('10') == '3'\nassert solution('8') == '5'"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('10') == '7'\nassert solution('4') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('6') == '4'\nassert solution('5') == '4'\nassert solution('4') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('20 19 20 19') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"100 200 100 200\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n\"\"\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"No\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 5 5\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 5 5\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == 'No'\nassert solution('5 3 2 1') == 'Yes'"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('15 4 3 2') == 'Yes'\nassert solution('10 1 3 1') == 'No'\nassert solution('10 2 5 3') == 'No'\n\n\"\"\""
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == '5'"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '15'\nassert solution('6 3 4') == '10'\nassert solution('100') == '100'"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"15\"\nassert solution(\"6\") == \"10\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10 2 5\") == \"10\"\nassert solution(\"6 3 4\") == \"10\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"7\"\nassert solution(\"10\") == \"15\"\nassert solution(\"20\") == \"25\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n10 2 5\n6 3 4\n''') == '5'\nassert solution('''4\n9 8 4 8\n3 2 5 6\n''') == '10'\nassert solution('''5\n10 2 5\n6 3 4\n''') == '7'\nassert solution('''6\n10 2 5\n6 3 4\n5 6 7\n''') == '8'\nassert solution('''7\n10 2 5\n6 3 4\n5 6 7\n6 8 9\n''') == '6'\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n\"\"\""
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == '5'\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution(\n'''\n4\n##.#\n.##.\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n##.#\\n###\\n.##') == '###\\n###'\nassert solution('2 4\\n#.#.#\\n#.#.#\\n##.#\\n#.#.') == '###\\n###\\n##.##\\n###'\nassert solution('10 20\\n##.##.##.##\\n#.##.##.##\\n##.##.##.##\\n#.##.##.##\\n##.##.##.##\\n##.##.##.##\\n#.##.##.##\\n##.##.##.##\\n#.##.##.##\\n##.##.##.##\\n#.##.##.##\\n##.##.##.##\\n##.##.##.##') == '##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##\\n##.##.##.##'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '###\\n###\\n.##\\n'\nassert solution('5 5') == '###\\n###\\n.##\\n##.'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n#..') == '###'\nassert solution('4\\n#.##') == '###'\nassert solution('2\\n##.') == '#.##'\n\n'''\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"1\\n#\\n##\\n###\\n##\\n##\\n#\\n#\\n#\\n#\\n#\\n#\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n##\\n##\\n##\\n##\\n##\\n##\\n##\\n##\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n'"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"###\"\nassert solution(\"1 1\") == \"###\"\nassert solution(\"1 1\") == \"###\"\nassert solution(\"1 1\") == \"###\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '###'\nassert solution('4 5') == '#####'\nassert solution('3 4') == '######'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"##.##\"\nassert solution(\"5 5\") == \"####\"\nassert solution(\"8 8\") == \"#####\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"12.16216216216216216\"\n\"\"\""
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '22.3890566037735824'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6.283185307179586'\nassert solution('2') == '12.566370614359172'\nassert solution('1') == '3.14159265358979'"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '12.566370614359172'\nassert solution('4') == '9.9999999999999996'\n\"\"\""
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"12.16216216216216216\"\nassert solution(\"3\") == \"8.0746183389983564\"\nassert solution(\"4\") == \"9.899106099073243\"\nassert solution(\"5\") == \"17.63636363636363635\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '1.5707963267948966'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.14159265358979323846\"\nassert solution(\"-2\") == \"1.57079632679489661923\"\nassert solution(\"0\") == \"2.0\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6.28318530717958623200', 'Wrong answer'\nprint('Correct')"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('10') == '18.8266601853710136'\nassert solution('0.1') == '6.28318530717958623200'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"A\") == \"Yes\"\nassert solution(\"B\") == \"No\"\nassert solution(\"Z\") == \"No\"\nassert solution(\"ABCABC\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDE\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ATTA\") == \"No\"\nassert solution(\"ABCB\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\n\n-----------------------------------------------------"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('BBBB') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ABCBA') == 'No'\nassert solution('AB') == 'No'"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AABA\") == \"No\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ASSA') == 'Yes', 'check failed'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('HTSGC') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n-13 3\n''') == '-10'\nassert solution('''\n3\n''') == '-3'\nassert solution('''\n-100\n100\n''') == '-100'\nassert solution('''\n5\n9\n''') == '-33'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7') == '6', 'Wrong answer for: 5 7'\nassert solution('7 -5') == '6', 'Wrong answer for: 7 -5'\n\n\"\"\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"5 -4\") == \"5\"\nassert solution(\"7 7\") == \"14\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 9\") == \"19\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"-1 -1\") == \"-10\"\nassert solution(\"1 5\") == \"15\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"-1 -1\") == \"-1\"\nassert solution(\"-1 -1\") == \"1\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '-2'\nassert solution('1 2') == '-1'\nassert solution('-5 -3') == '3'\nassert solution('-1 2') == '-1'\nassert solution('-1 0') == '0'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '-5'\nassert solution('13 3') == '-10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"5 -3\") == \"2\"\nassert solution(\"7 4\") == \"14\"\nassert solution(\"2 3 -4\") == \"8\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"-1\\n2\") == \"-1\"\nassert solution(\"1\\n-2\") == \"-1\"\nassert solution(\"-1\\n-2\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('11 14') == '-18'\nassert solution('-100 -3') == '-103'\nassert solution('100 -3') == '103'\nassert solution('-100 -3') == '103'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('4') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n6 5 6 8\n''') == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\\n\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"4\"\nassert solution(\"6\\n5 6 5 6 6 5\\n\") == \"4\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"5\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\""
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n5 6 8\n''') == '3'\nassert solution('''4\n6 5 6 8\n''') == '2'\nassert solution('''8\n5 5 5 5 5 5 5 5\n''') == '1'"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('3\\n1 2 3') == '2'\nassert solution('2\\n6 5') == '1'\nassert solution('1\\n6') == '0'"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"4\\n6 5 6 8\") == r\"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"1\", \"5\", \"6\", \"8\"]) == \"3\""
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 1 2 1\n''') == '1'\nassert solution('''\n5\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n7\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"3 4\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4'\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n5'\nassert solution('5\\n1 1 1 1\\n') == '3\\n2 2 1'"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\"\nassert solution(\n    \"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\n    \"5\\n1 2 1 2 1\\n\") == \"3\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1\\n5\\n'\nassert solution('4\\n1 1 1 1\\n') == '1\\n4\\n'\nassert solution('6\\n1 2 1 2 1 2\\n') == '1\\n2\\n2\\n4\\n'\nassert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4\\n'\nassert solution('7\\n1 2 1 2 1 2 1 2\\n') == '2\\n5\\n'"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\n\nstdin = \"\"\"\n3\n1 2 3 1 2 3 4\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n''') == '1 2'\nassert solution('''4\n1 1 1 1''') == '1 1 1 1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1\\n2\\n3\\n2\\n1'\nassert solution() == '2\\n3\\n4\\n4\\n1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n3\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5\n1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n10\\n20\\n100\\n1000000000\"\n) == \"1000000007\"\n\nassert solution(\n    \"3\\n3\\n3\\n3\"\n) == \"1\"\n\nassert solution(\n    \"3\\n3\\n3\\n3\"\n) == \"2\"\n\nassert solution(\n    \"3\\n3\\n3\\n3\"\n) == \"1\"\n\nassert solution(\n    \"1\\n10\\n20\\n100\\n1000000000\"\n) == \"2\""
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n7\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n7\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3\n6\n7\n21\n28\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"1\""
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n4') == '2'\nassert solution('3\\n7') == '1'\nassert solution('4\\n8') == '7'\nassert solution('5\\n9') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n12\n9\n13\n1000000000000000\n''') == '2'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n3\n13\n7\n1000000000000000\n''') == '7'\nassert solution('''\n3\n2\n4\n1000000000000000\n''') == '4'\nassert solution('''\n4\n1\n1\n1000000000000000\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"512 4\\n\") == \"50\"\nassert solution(\"1000000000 9\\n\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\""
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\"\"\""
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n\n'''"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"512 4\\n\") == \"50\"\nassert solution(\"1000000000 9\\n\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''512 4\n\nOutput\n50\n\nInput\n1000000000 9\n\nOutput\n1''') == '1', 'First example'\nassert solution('''512 4\n\nOutput\n50\n\nInput\n1000000000 9\n\nOutput\n1''') == '1', 'Second example'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7\\n\"\n    \"4 3 5 1 2 2 1\\n\"\n    ) == \"5\\n\"\nassert solution(\n    \"5\\n\"\n    \"3 7 5 1 5\\n\"\n    ) == \"2\\n\"\nassert solution(\n    \"3\\n\"\n    \"5 1 4\\n\"\n    ) == \"2\\n\"\nassert solution(\n    \"7\\n\"\n    \"2 2 3 2 1 2 2\\n\"\n    ) == \"7\\n\"\nassert solution(\n    \"7\\n\"\n    \"3 7 5 1 5\\n\"\n    ) == \"4\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"7\") == \"1 2 2 2 2 2 2\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"2\\n4 5\\n\"\nassert solution('7') == \"7\\n1 2 2 2 2 3 2\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '5'\nassert solution('5 1 4') == '2'\nassert solution('3 7 5 1 5') == '2'\nassert solution('5 5 5 5 5 5') == '1'"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n3 4 5 1 2 3 1 2 3\n\n12\n3 7 5 1 5 5 3 2 3\n\n''') == '4 5 1 5 2 3 1 2 3'\nassert solution('''\n10\n1 2 3 4 5 1 2 3 1 2 3\n\n10\n1 2 3 4 5 1 2 3 1 2 3\n\n''') == '4 5 1 5 2 3 1 2 3'\nassert solution('''\n10\n2 3 5 1 2 3 1 2 3 1 2 3\n\n10\n1 2 3 4 5 1 2 3 1 2 3\n\n''') == '4 5 1 5 2 3 1 2 3'\nassert solution('''\n10\n3 2 5 1 5 1 1 4 3 2 2\n\n10\n1 2 3 4 5 1 2 3 1 2 3\n\n''') == '2 2 5 1 2 3 1 2 3'\nassert solution('''\n10\n3 2 4 1 2 3 1 2 3 1 2 3\n\n10\n1 2 3 4 5 1 2 3 1 2 3\n\n''') == '4 5 1 5 2 3 1 2 3'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"5 2 1 1 2 3\"\nassert solution(\"\"\"\n7\n2 2 3 2 1 2 2\n\"\"\") == \"7 1 2 2 2 2 3\"\nassert solution(\"\"\"\n\"\"\") == \"1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2 2 2 2 2 3 2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n3\n5 1 4\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\nassert solution('''\n5\n7 5 1 5\n''') == '4'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 20\n10 8\n7 4\n3 1\n5 4\n''') == '2'\nassert solution('''\n4 20\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == \"2\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"4 10\") == \"1\"\nassert solution(\"5 10\") == \"2\"\n\nstdin = \"\"\"\n8 15\n2 5\n5 5\n2 7\n3 5\n1 9\n1 5\n2 6\n5 5\n4 9\n4 5\n1 2\n5 5\n6 6\n1 7\n1 9\n4 3\n2 4\n1 2\n4 4\n3 3\n2 3\n5 6\n1 6\n3 6\n\"\"\"\n\nfor i in range(len(stdin)):\n    print(solution(stdin[i]))\n\n\n\"\"\"\nSample test set\n\n8 15\n2 5\n5 5\n2 7\n3 5\n1 9\n1 5\n2 6\n5 5\n4 9\n4 5\n1 2\n5 5\n6 6\n1 7\n1 9\n4 3\n2 4\n1 2\n4 4\n3 3\n2 3\n5 6\n1 6\n3 6\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('4 17') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n\n2''') == '2', \"Simple\"\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n\n-1''') == '-1', \"Subset\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"t\"\nassert solution(\"5 1 1\") == \"tleel\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\nassert solution(\"8 10 7\") == \"tleelte\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'qwerty'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'vvvvvv'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'abcde'"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"5 2 2\") == \"vvvvv\"\nassert solution(\"3 2 1\") == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 5 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"qwerty\"\nassert solution('''\n4\n4 4 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"abcde\"\n\nprint(solution('''\n'''))"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''\n4\n5 5 6\n5 2 1\n6 5 1\n5 3\n''') == \"abcde\"\nassert solution('''\n1\n6 6 1\n''') == \"abcde\"\n'''\n\nclass Solution:\n    def __init__(self):\n        self.c = collections.Counter()\n\n    def solution(self, stdin):\n        n, a, b = list(map(int, stdin.split()))\n        for i in range(1, n+1):\n            for j in range(1, n-i+2):\n                s = ''.join(sorted(stdin[j:j+i]))\n                if s in self.c:\n                    if self.c[s] >= a:\n                        self.c[s] -= a\n                    else:\n                        return ''\n                else:\n                    self.c[s] = b\n        return ''.join(sorted(stdin))\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5 3\n6 1 1''') == \"tleelte\"\n\nassert solution('''6 6 1\n5 2 2''') == \"qwerty\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n7 5 3\\n6 1 1') == \"tleelte\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('10 8 20') == '20'\nassert solution('20 12 12') == '12'\nassert solution('20 8 2') == '2'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 12 6\n''') == '12'\nassert solution('''20 12 6\n''') == '12'\nassert solution('''20 12 6\n''') == '12'\nassert solution('''10 10 10\n''') == '0'\nassert solution('''20 12 6\n''') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 1') == '6'\nassert solution('10 10 1') == '16'\nassert solution('10 12 1') == '11'\nassert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('10 12 6') == '12'\nassert solution('10 12 9') == '15'\nassert solution('10 12 9') == '15'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('30 100 10') == '20'\nassert solution('1 100 200') == '200'\nassert solution('200 800 200') == '200'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 20 6\") == \"12\"\nassert solution(\"5 12 6\") == \"12\"\nassert solution(\"3 1 6\") == \"6\"\nassert solution(\"20 12 6\") == \"12\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '12'"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(Takahashi_test) == '12'\nassert solution(Kuchinashi_test) == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('25') == '4'\n\"\"\"\n\nfrom sys import stdin\nn = int(stdin.readline())\n\ngroups = []\ngroups.append([])\n\nfor i in range(n):\n    groups[0].append(i+1)\n\ncount = 0\nfor j in range(1, n):\n    if len(groups[j-1]) >= 3:\n        count += 1\n        continue\n    groups.append([])\n    for k in range(n):\n        if len(groups[j]) >= 3:\n            count += 1\n            break\n        groups[j].append(k+1)\n    \nprint(count)"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '2'"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\nassert solution('20') == '3'\nassert solution('33') == '4'\n\"\"\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '3'\nassert solution('9') == '4'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"9\") == \"3\"\nassert solution(\"18\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n''') == '2'\n\nassert solution('''\n10\n''') == '3'\n\nassert solution('''\n12\n''') == '4'\n\n'''\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '2'\nassert solution('10') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n\") == \"3\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"3\"\nassert solution(\"100 100\\n\") == \"99\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 4\") == \"4\"\n\n---------------------------------------------------------------------------------------------------\nSuppose we have N pieces of apple, and we want to make a certain number of apple pies. We can cut each apple into 3 pieces.\nIf we do so, then the remaining apple pieces will be 1 piece, the remaining pieces will be 2 pieces, and the remaining pieces will be 3 pieces. We can make any number of apple pies.\n\nWhat is the maximum number of apple pies we can make with what we have?\n\n-----Constraints-----\n - All values in input are integers.\n - 0 \\leq N \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the maximum number of apple pies we can make with what we have.\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\n4\n\nWe can first make one apple pie by simmering two pieces of apple. Then, we can make two more by simmering the remaining pieces.\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 2') == '2'\nassert solution('10 5') == '10'"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"4 3\") == \"2\"\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\""
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\""
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"100 1\") == \"1\"\nassert solution(\"1 0\") == \"1\""
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 1') == '2'\n\n---"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 12') == '16'\nassert solution('1 10') == '19'\nassert solution('4 4') == '8'\nassert solution('7 7') == '0'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"3 7\") == \"10\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"5 10\") == \"15\"\nassert solution(\"3 10\") == \"11\""
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 5\") == \"7\""
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"6 5\") == \"5\""
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"6\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '5'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 12') == '16'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"7 4\") == \"5\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"6 5\") == \"4\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 9\") == \"10\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n'''\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n\"\"\"\n\nS = input()\nT = input()"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudai\") == \"No\"\nassert solution(\"chokudai\") == \"No\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\nprint(solution())\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\n\nassert solution('chokudaiz') == 'Yes'\n\nprint(solution())\n\n\n\n\n\n\"\"\"\nimport re\nimport sys"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\"\"\""
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\n\"\"\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9'\nassert solution('5 13') == '10'\nassert solution('0 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('2 5') == '7'\nassert solution('2 5') == '9'\nassert solution('3 4') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 16') == '9'\nassert solution('0 0') == 'IMPOSSIBLE'\nassert solution('1 9') == '9'\nassert solution('2 4') == 'IMPOSSIBLE'\nassert solution('2 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 5') == '9'\nassert solution('8 5') == '9'\nassert solution('7 7') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE', '1st Test'\nassert solution('3 4') == '9', '2nd Test'\nassert solution('5 7') == '9', '3rd Test'\nassert solution('2 7') == 'IMPOSSIBLE', '4th Test'\nassert solution('10 5') == '10', '5th Test'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\nassert solution('101') == 'No'\nassert solution('8') == 'No'\nassert solution('1') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('117') == 'Yes'\nassert solution('12') == 'No'\nassert solution('125') == 'Yes'\nassert solution('13') == 'No'\nassert solution('123') == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('25') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"17\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"-10\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('123') == \"No\"\nassert solution('7') == \"Yes\"\nassert solution('abc') == \"No\"\nassert solution('7777') == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('10') == 'No'\nassert solution('123') == 'No'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'No'\nassert solution('11') == 'Yes'\nassert solution('01') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'\nassert solution('14') == 'No'"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"13\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('1000') == \"No\"\nassert solution('13') == \"No\"\nassert solution('1234') == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1234') == 'No'\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"101\") == \"No\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('1000000000') == 'Yes'\nassert solution('123') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('23') == 'No'\nassert solution('9') == 'Yes'\nassert solution('999999') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\nimport math"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Test 1 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 -1') == '-1 -1 0 -1'\nassert solution('0 0 1 1') == '-1 -1 1 -1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 1 1\") == \"0 0 -1 1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 0 1 1') == '1 1 1 0'\nassert solution('-1 0 -1 0') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n\n\"\"\""
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([0, 0, 0, 1]) == \"-1 1 -1 0\"\nassert solution([0, 0, 1, 1]) == \"0 0 1 1\"\nassert solution([-1, -1, 0, 1]) == \"-1 1 -1 0\"\nassert solution([0, 1, 0, 1]) == \"-1 0 -1 0\"\nassert solution([-1, 0, 1, 1]) == \"0 -1 0 1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 -1\") == \"0 0 0 0\"\nassert solution(\"0 0 0 1 2\") == \"2 -1 2 1 0\"\nassert solution(\"0 0 0 1 2 3\") == \"1 -2 3 1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 2 0 0\") == \"0 0 -1 2\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"-1 1 -1 0\"\n\"\"\""
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 0\") == \"-1 -1 1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('red blue\\n') == '2 4'\nassert solution('red blue\\n') == '1 2'\n'''"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"blue red\") == \"1 2\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('3 4') == '2 4'\nassert solution('A B') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"\nassert solution(\"4 4\") == \"4 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\""
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"red blue\") == \"2 4\""
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nabc\") == 'Yes'\n\"\"\""
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"abcabcabcabc\") == \"Yes\"\nassert solution(\"abcabcabcabcabc\") == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == 'No'\nassert solution('5') == 'No'\nassert solution('10') == 'Yes'\nassert solution('11') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nAbc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"3\\nabcd\") == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nabc') == 'Yes'\nassert solution('5\\nabc') == 'No'\nassert solution('10\\nabc') == 'No'\nassert solution('16\\nabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('6\\nababc') == 'No'"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 3 1 2\") == \"2.000000 0\"\n\n\"\"\""
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 3, 1, 2]) == '3.000000 0'\nassert solution([10, 10, 10, 10]) == '10.000000 0'"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('1\\n') == '0'\nassert solution('3\\n1 2\\n') == '3.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1000000000\") == \"1\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '1.000000 0'\nassert solution('3 3 1 2') == '0.000000 0'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'Four'\nassert solution('3') == 'Three'"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Four'\nassert solution('4') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"10\\nP P G G G G G P\") == \"Three\""
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nG W Y P Y W\n''') == 'Four'\nassert solution('''\n1\nP\n''') == 'Three'\nassert solution('''\n4\nG Y\n''') == 'Four'\nassert solution('''\n4\nY\n''') == 'Four'\nassert solution('''\n5\nY\n''') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == 'Four'\nassert solution('6') == 'Four'\nassert solution('3') == 'Three'\nassert solution('2') == 'Two'\nassert solution('1') == 'One'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6\nG W Y P Y W\"\"\") == \"Four\"\nassert solution(\"\"\"3\nP W Y\"\"\") == \"Three\"\nassert solution(\"\"\"1\nP\"\"\") == \"One\""
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nG G G\n''') == 'Four'\nassert solution('''\n4\nG G Y G\n''') == 'Four'\nassert solution('''\n4\nG G Y Y\n''') == 'Three'\nassert solution('''\n5\nG G G Y Y\n''') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nP W Y P Y W\") == \"Three\"\nassert solution(\"6\\nY P Y P Y W\") == \"Three\"\nassert solution(\"6\\nY P Y P Y W\") == \"Three\"\nassert solution(\"6\\nG Y P Y P Y W\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"Three\"\nassert solution(\"1\") == \"Three\"\nassert solution(\"2\") == \"Three\"\nassert solution(\"3\") == \"Three\"\nassert solution(\"4\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nP Y P Y P\\n\") == \"Four\"\nassert solution(\"4\\nG G G G\\n\") == \"Four\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 2\n2 3 1 3 4 2\n''') == 6\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == 2\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == 2"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == \"6\"\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == \"2\"\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('10 10 10') == '4'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2 4 2 3\n''') == '1'\nassert solution('''\n1 1 1\n''') == '1'"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"2\"\n\n\"\"\"\n\nimport math\n\nn, x, y = [int(i) for i in input().split()]"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6 3 2\\n\"\n    \"2 3 1 3 4 2\\n\"\n) == \"6\"\n\nassert solution(\n    \"5 3 3\\n\"\n    \"1 2 4 2 3\\n\"\n) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 1 5\n1 2 5 3 4\n''') == '5'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\n\nassert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 3 2\n1 2 1 3 4 2\n''') == '6'\nassert solution(\n'''\n5 3 3\n1 2 3 1 3\n''') == '5'\nassert solution(\n'''\n5 5 6\n1 2 6 10 3\n''') == '2'\n'''\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 8 2 6 2\\n\"\n    \"4 5 4 1 3\\n\"\n) == \"7\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n4 8 2 6 2\n4 5 4 1 3\n\"\"\") == \"7\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n\nassert solution('3') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 8 2 6 2\\n') == '7'\nassert solution('3\\n2 1 3\\n') == '1'\nassert solution('5\\n4 8 2 6 2\\n') == '7'\nassert solution('5\\n4 8 2 6 2\\n') == '7'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n4 8 2 6 2\\n4 5 4 1 3') == '7'\nassert solution('2\\n8 5 4 1 3\\n4 5 4 1 3') == '1'\nassert solution('1\\n10 5 4 1 3\\n4 5 4 1 3') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\nassert solution('12') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"7\\n\"\nassert solution(\"4\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1 1 2\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506056 1000000000\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 1 3 5 9\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n'''\n\nn = int(input())\narr = list(map(int, input().split()))\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1 if arr[i] == 10**9 - 1 else arr[i]\n\nfor i in range(1, len(arr)):\n    arr[i] = arr[i-1] + 1 if arr[i] == arr[i-1] else arr[i]\n\nfor i in range(len(arr)):\n    arr[i] = 1"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\""
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 3 5 9\"\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INP_1) == OUT_1\nassert solution(INP_2) == OUT_2"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\"\nassert solution(\"5\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\n\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 1 3 5 9\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t1) == \"1\", \"Wrong answer\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\nassert solution(open('input.txt')) == \"2\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''10 10\n1 2\n3 4\n5 6\n7 8\n9 10\n10 7\n8 11\n9 12\n12 11\n11 13\n13 15\n15 13\n14 14\n14 15\n15 14\n''') == '3'\n'''\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''3 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\n'''\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\""
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"1\""
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '3'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''1 0 0 0 2\n1 2\n2 3\n3 4\n4 5''') == '4'\nassert solution('''3\n1 2\n2 3\n3 4''') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 0 0 1 2') == '1'\nassert solution('5\\n1 0 0 0 2') == '4'\nassert solution('3\\n1 1 2') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n\") == \"1\"\nassert solution(\"5\\n1 2\\n\") == \"1\"\nassert solution(\"5\\n1 0 0 1 2\\n\") == \"4\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n\n\n'''"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'def'\nassert solution('6') == 'qoztvz'\n\n\n\n'''\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\naz\nbf\n\n''') == 'bc'\nassert solution(\n'''\n5\nafogk\nasdji\n\n''') == 'alvuw'\nassert solution(\n'''\n6\nnijfvj\ntvqhwp\n\n''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"empty\"\nassert solution(\"z\") == \"z\", \"one\"\nassert solution(\"az\") == \"az\", \"a-b\"\nassert solution(\"bb\") == \"bb\", \"b-b\"\nassert solution(\"cc\") == \"cc\", \"c-c\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"bc\"\nassert solution(\"5\") == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'alvuw'"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"bc\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\naz\\nbf') == 'bc', solution('2\\naz\\nbf')\nassert solution('5\\naofgk\\nasdji') == 'alvuw', solution('5\\naofgk\\nasdji')\nassert solution('6\\nafogk\\ntvqhwp') == 'qoztvz', solution('6\\nafogk\\ntvqhwp')\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n\n''') == 'bc', f\"Got: {solution('''\n\n''')}\"\nassert solution('''\n\n''') == 'qoztvz', f\"Got: {solution('''\n\n''')}\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n') == 'YES\\n1 2 5\\n'\nassert solution('5 4\\n') == 'NO\\n'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\""
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('4 4') == 'NO'\nassert solution('5 5') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES'\nassert solution('5 4\\n15 13 15 15 12') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'YES'"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == \"YES\"\n\nassert solution('''\n5 4\n20 10 40 30\n''') == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'NO'\nassert solution('''\n4 4\n20 10 40 30\n''') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == 'NO'\nassert solution('5 4') == 'YES'\nassert solution('4 5') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\"\n\n\n'''"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"15 13 15 15 12\"\n    ) == \"YES\"\n\nassert solution(\n    \"5 4\\n\"\n    \"20 10 40 30\"\n    ) == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('8') == 'YES'\nassert solution('1') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n4\n1 2 4\n''') == 'YES'\nassert solution('''\n4\n1 2 4 0 2\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 1 4 0 2') == 'NO'\n\nassert solution('5\\n1 2 3 4 5') == 'YES'\n\nprint(solution(input()))\n\n\"\"\"\n\na = int(input())\na_list = list(map(int, input().split()))"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 4 0 2') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5 1 2 3 4\") == \"YES\"\nassert solution(\"5 1 2 3 4 5\") == \"NO\"\nassert solution(\"5 2 5 7 4 1\") == \"YES\"\nassert solution(\"5 1 2 3 4 5 6 7 8 9 10\") == \"YES\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 4 0 2\") == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"1 0 0 0 0 1 0 1 0 \n\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 4 0 2\n''') == 'NO'\nassert solution('''\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 3 6 8 2 9 0 10') == 'YES'\nassert solution('1 2 3 4 0 2') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'YES'\nassert solution('4') == 'NO'\nassert solution('8') == 'NO'\nassert solution('4 1 1 2') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"NO\""
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n2000000000 1 1 1000000000\") == \"1134\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n2000000000 1 1 1000000000\\n10000000 2 1 1000000000\") == \"0\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n2000000000 1 1 1000000000\\n10000000 2 1 1000000000\\n2000000000 2 1 1000000000\") == \"1134\""
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\") == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1134\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\\n0\\n1134\\n0\\n\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution(\n'''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n10000000000 1 1 10000000000\n''') == '1134'\nassert solution(\n'''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n10000000000 1 1 10000000000\n''') == '0'\nassert solution(\n'''\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"3\\n\"\nassert solution(input_) == \"0\\n\"\nassert solution(input_) == \"1134\\n\"\nassert solution(input_) == \"0\\n\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 100 100 100\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n4\n10 2 3 7\n100 100 100 100\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\n\nimport sys\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n'''\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n''') == '1'\nassert solution('''4\n''') == '3'\nassert solution('''8\n''') == '1260'\nassert solution('''20\n''') == '12164510040883200'\nassert solution('''2\n4\n8\n16\n''') == '1260'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\", \"3\"\nassert solution(\"4\") == \"3\", \"4\"\nassert solution(\"10\") == \"3628800\", \"10\"\nassert solution(\"20\") == \"121645100408832000\", \"20\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\""
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n''') == '1'\nassert solution('''4\n''') == '3'\nassert solution('''8\n''') == '1260'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\ncccaabababaccbc') == 'cccccc'\n\nassert solution('2 3\\ncccaabababaccbc') == 'cccaabababaccbc'\n\nassert solution('3 3\\ncccaabababaccbc') == ''\n\nassert solution('4 3\\ncccaabababaccbc') == 'cccaabababaccbc'\n\nassert solution('15 3\\ncccaabababaccbc') == 'cccaabababaccbc'"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15 3') == 'cccbbabaccbc', 'First'\nassert solution('15 9') == 'cccccc', 'Second'\nassert solution('1 1') == '', 'Third'\nassert solution('13 17') == '', 'Fourth'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n') == ''\nassert solution('3 3\\nabcd\\n') == 'abcd'\nassert solution('8 8\\nabcd\\nefgh\\n') == ''"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == ''\n\nassert solution('2') == ''\n\nassert solution('3') == 'bc'\n\nassert solution('4') == 'bc'\n\nassert solution('5') == 'bc'"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\na\n\nb\n\nc\n\nd\n\ne''') == 'abcd'\nassert solution('''2\na\n\nb\n\nc\n\nd''') == 'cb'\nassert solution('''15\na\n\nb\n\nc\n\nd\n\ne\n\nf\n\ng\n\nh\n\ni\n\nj\n\nk''') == 'eihgk'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\nassert solution('15 9') == 'cccccc'"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"15 3\") == \"cccbbabaccbc\"\nassert solution(\"1 1\") == \"def\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"def\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\nc\nn\na\nb\na\nb\na\nb\na\na\na\nb\nb\nb\na\nb\na\nb\na\na\na\nb\na\na\na\na\na\nb\na\na\na\na\nb\nb\na\na\na\nb\na\na\nb\na\nb\nb\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\nb\na\nb\na\na\na\nb\nb\nb\na\na\na\na\na\na\na\na\nb\na\na\na\na\na\na\nb\na\nb\na\nb\na\na\na\na\na\nb\na\nb\nb\na\na\na\na\nb\nb\nb\nb\nb\na\na\na\na\nb\na\na\na\na\na\nb\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\nb\na\na\na\nb\na\nb\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\nb\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '','result'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5 1 0 2 0\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3') == '8'\nassert solution('5 3\\n4 2\\n3 5\\n4 2') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == \"8\"\nassert solution('''5 3\n4 2\n3 5\n4 2\n2 5''') == \"20\"\nassert solution('''5 2\n3 5\n4 2\n2 5''') == \"10\"\nassert solution('''4 3\n3 2\n2 5\n1 2''') == \"15\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\nassert solution('6 4') == '21'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''\n5 3\n4 2\n2 5\n''') == '20'\n\nassert solution('''\n5 1\n5\n''') == '0'\n\nassert solution('''\n5 2\n1 2\n''') == '0'\n\nassert solution('''\n5 3\n1 2\n2 5\n3 3\n''') == '3'"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n3 3\n3 5\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n4 5\n4 4\n2 3\n4 4\n2 3\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n6 5\n1 1 1 1 2\n1 1 2\n1 2\n1 1\n1 1\n1 2\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n4 5\n3 1 1 1 3\n3 1 2\n3 1\n1 2\n2 4\n3 5\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n2 2\n1 1\n2 2\n\"\"\") == \"1\""
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3\n    '''\n    ) == '8'\n\nassert solution(\n    '''\n    5 3\n    4 2\n    2 5\n    \n    '''\n    ) == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n.*.*\\n*.*.\\n.*.*\\n*.*.\\n.*.*\\n') == \"3 4 1\"\nassert solution('5 5\\n.*.*\\n*.*.\\n*.*.*\\n*.*.*\\n*.*.*\\n') == \"3 3 1\"\nassert solution('3 3\\n.*.*\\n*.*.\\n*.*.*\\n*.*.*\\n*.*.*\\n') == \"3 4 1\""
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n.*\\n**') == \"3 3 1\"\nassert solution('6 8\\n.***\\n..*.*\\n***.\\n....*\\n........\\n') == \"3 3 1\"\nassert solution('6 8\\n*.*\\n***\\n***\\n***\\n***\\n**\\n') == \"3 4 1\""
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\".**..\") == \"2 2 1\"\nassert solution(\"*.*\") == \"3 3 1\""
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3\\n3 4 1'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3\\n2 2 1'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '6 8\\n'\n    '....*...\\n'\n    '...**...\\n'\n    '..*****.\\n'\n    '...**...\\n'\n    '....*...\\n'\n    '........\\n'\n) == '3'\n\nassert solution(\n    '5 5\\n'\n    '.*...\\n'\n    '***..\\n'\n    '*.*..\\n'\n    '*.*..\\n'\n    '*.*..\\n'\n) == '3'\n\nassert solution(\n    '5 5\\n'\n    '.*...\\n'\n    '***..\\n'\n    '*.*..\\n'\n    '*.*..\\n'\n    '*.*..\\n'\n) == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8') == \"3 4 1\"\nassert solution('5 5') == \"3 3 1\"\nassert solution('5 5') == \"3 4 1\"\n\n\"\"\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n\") == \"3\\n2 2 1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n.*.*\\n\") == \"3\\n3 3 1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3 4 1'"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution('575') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"928\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\nassert solution('3245') == 'Yes'"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('-1') == 'No'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == 'Yes'\n\"\"\""
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1\n''') == 'Yes'\nassert solution('''\n    1\n''') == 'No'\nassert solution('''\n    3\n''') == 'Yes'\nassert solution('''\n    55\n''') == 'Yes'\nassert solution('''\n    575\n''') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Bob'\n\"\"\""
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\""
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\") == \"Bob\"\nassert solution(\"4 4\") == \"Draw\"\nassert solution(\"1 1\") == \"Alice\"\nassert solution(\"6 3\") == \"Alice\"\nassert solution(\"3 5\") == \"Bob\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 2') == 'Bob'\nassert solution('8 6') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 3\"\n    ) == \"Alice\"\nassert solution(\n    \"8 9\"\n    ) == \"Bob\"\nassert solution(\n    \"4 6\"\n    ) == \"Draw\"\nassert solution(\n    \"5 6\"\n    ) == \"Alice\"\nassert solution(\n    \"12 9\"\n    ) == \"Bob\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Alice\"\nassert solution(\"1 2\") == \"Alice\"\nassert solution(\"2 1\") == \"Alice\"\nassert solution(\"2 2\") == \"Alice\"\nassert solution(\"3 3\") == \"Alice\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"Alice\"\n\"\"\"\n\n\nclass Card:\n    def __init__(self, n):\n        self.n = n\n        self.str = str(n)\n\n    def __lt__(self, other):\n        return self.str < other.str\n\n    def __str__(self):\n        return self.str\n\n    def __repr__(self):\n        return self.str\n\nprint(Card(8) < Card(4))\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 7') == 'Draw'"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"3\") == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n9 1\\n\") == \"Bob\"\nassert solution(\"3 4\\n4 1\\n\") == \"Alice\"\nassert solution(\"1 1\\n2 2\\n\") == \"Draw\"\nassert solution(\"1 1\\n2 2\\n\") == \"Alice\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nprint('Solution is correct.')\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy', 'Solutions not working'\nassert solution('hello,world,my') == 'hello world my', 'Solutions not working'\nassert solution('nothing,do,not,for,me') == 'nothing do not for me', 'Solutions not working'\nassert solution('hollywood,bollywood,gollywood') == 'hollywood bollywood gollywood', 'Solutions not working'\nassert solution('swimming,canoeing,kayaking') =='swimming canoeing kayaking', 'Solutions not working'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy,doll') == 'happy newyear enjoy doll'\nassert solution('happy,newyear,enjoy,doll,Dolphin') == 'happy newyear enjoy doll Dolphin'\n\nprint(solution(input()))\n\ns = input()\ns = s.replace(\",\",\" \")\nprint(s)"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n\"\"\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\\n2\\n1\"\nassert solution(\"5 2\") == \"1\\n2\\n2\\n2\\n2\"\n\"\"\""
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 0') == '1'\nassert solution('0 0') == '1'\nassert solution('-1 0') == '2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 0\\n0 0\") == \"2\\n1\\n\""
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1\") == \"1 2\""
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"2\\n1\"\nassert solution(\"2 2\") == \"1\\n1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n2 0\\n0 0') == '2\\n1'\nassert solution('2 2\\n0 0\\n-1 0\\n1 0') == '2\\n1'"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('3 2') == '2 2 1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"2 1\"\nassert solution(\"5 5\") == \"2 1\"\nassert solution(\"4 8\") == \"3 2\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"5 2\") == \"2 1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2\\n1'\nassert solution('2 6') == '2\\n1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2 1'\n\nfrom typing import List\nfrom collections import namedtuple\nPoint = namedtuple(\"Point\", \"x y\")"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '8'\nassert solution('10') == '68'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '14'\n\"\"\""
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1', solution('1')\nassert solution('2') == '3', solution('2')\nassert solution('3') == '6', solution('3')\nassert solution('4') == '10', solution('4')\nassert solution('5') == '15', solution('5')\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '14'\nassert solution('5') == '25'\nassert solution('8') == '40'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"5\") == \"55\"\n\"\"\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '14'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('10') == '100'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '16'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'Yes'"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"2 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"No\"\nassert solution(\"5 5\\n#...#\\n...##\\n..##.#\\n.#.#.#\\n####.#\\n\") == \"No\"\nassert solution(\"6 6\\n#####\\n#.#.#\\n#####\\n#.##\\n#.##\\n#####\\n\") == \"No\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\", \"example 1\"\nassert solution(\"4 6\") == \"No\", \"example 2\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"No\"\nassert solution(\"3 2\\n##.#\\n##.\\n##.\\n##.\\n\") == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('10 20') == 'No'\nassert solution('50 50') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'No'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n#.#\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n#.#\\n\") == \"No\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 3 2') == '9'\nassert solution('1 7 3') == '16'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 4\") == \"6\"\nassert solution(\"1 3 4\") == \"8\"\nassert solution(\"1 2 3\") == \"7\"\nassert solution(\"1 2 3 4\") == \"8\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('4 4 5') == '44'\nassert solution('1 1 1') == '3'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\\n\") == \"53\"\nassert solution(\"1 2 4\\n\") == \"8\"\nassert solution(\"4 5 1\\n\") == \"9\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('4 5 2') == '26'\nassert solution('5 6 2') == '21'"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"5 1 3\") == \"17\"\nassert solution(\"1 3 2\") == \"11\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"2 7 2\") == \"4\"\nassert solution(\"4 2 2\") == \"4\"\nassert solution(\"9 1 2\") == \"4\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == \"53\"\nassert solution('1 0 1') == \"0\"\nassert solution('1 0 2') == \"1\"\nassert solution('0 1 3') == \"1\"\nassert solution('0 1 2') == \"1\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"1\") == \"5950\"\nassert solution(\"2\") == \"15950\"\n\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1.5'\nassert solution('4') == '1.75'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '0'\nassert solution('3') == '0'"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950'\nassert solution('''\n4\n4980\n7980\n6980\n''') == '15950'\n'''\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '15950'\nassert solution('4') == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '15950'\nassert solution('4') == '15950'\nassert solution('5') == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"15950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"5950\"\nassert solution(\"2\") == \"10050\"\nassert solution(\"3\") == \"15625\"\nassert solution(\"4\") == \"15390\"\nassert solution(\"5\") == \"16415\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '15950'\nassert solution('4') == '15950'\nassert solution('5') == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n4980\n7980\n\"\"\") == \"15950\"\nassert solution(\"\"\"\n10\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000\n\"\"\") == \"10000000000\"\nassert solution(\"\"\"\n1\n11\n\"\"\") == \"11\"\nassert solution(\"\"\"\n3\n10000000\n109999\n100000\n\"\"\") == \"110\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '180'\n\"\"\""
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n10\\n2\\n7\\n5\\n\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n19\n20\n7\n35\n120\n''') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '0'\nassert solution('7') == '0'\nassert solution('35') == '0'\nassert solution('120') == '0'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '57'\nassert solution('120') == '180'"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\""
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"215\"\nassert solution(\"30\") == \"50\"\nassert solution(\"120\") == \"57\"\nassert solution(\"60\") == \"180\"\nassert solution(\"120\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"60\"\nassert solution(\"35\") == \"57\"\nassert solution(\"120\") == \"180\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == '215'"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"29\"\nassert solution(\"7\") == \"29\"\nassert solution(\"35\") == \"50\"\nassert solution(\"120\") == \"50\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"0.2\"\nassert solution(\"10\") == \"0.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('6\\n100 100 100 100 100 100') == '6.6'\nprint(solution(input()))\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.1'\nassert solution('2') == '0.3'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4\\n') == '7.5'\n\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10\") == \"7.5\"\nassert solution(\"30\") == \"7.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '7.5'\nassert solution('1') == '1.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '7.5'\nassert solution('1') == '7.5'\nassert solution('3') == '7.50001'\nassert solution('10') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '7.5'\nassert solution('2') == '7.50001'\nassert solution('3') == '7.49999'\nassert solution('4') == '7.5'\nassert solution('10') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) in range(1, 1e8), solution(sys.stdin.read())\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('10') == '0'\nassert solution('12') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12\n\n''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12\n\n''') == '4'"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '2'\nassert solution('6 2') == '3'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"z\") == \"z\"\nassert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('B') == 'a'\n\n----\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('B') == 'A', \"Wrong!\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"B\") == \"A\"\n\n\"\"\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"A\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('B') == 'A'\n\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"B\") == \"A\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 2') == '3'\nassert solution('2 0') == '1'\nassert solution('0 2') == '1'\nassert solution('0 1') == '2'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n''') == '6'\nassert solution('''2 1\n''') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '6'\n\"\"\"\n\nfrom typing import Dict\n\nclass Solution:\n    def solve(self, k: int, s: int) -> int:\n        count = 0\n\n        for x in range(k):\n            for y in range(k):\n                for z in range(k):\n                    if (x + y + z) == s:\n                        count += 1\n        \n        return count\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'NA'\nassert solution('05') == 'NA'\nassert solution('0513') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1906') == 'NA'\nassert solution('1') == 'NA'\nassert solution('12') == 'NA'\nassert solution('123') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"01\") == \"YYMM\"\nassert solution(\"11\") == \"MMYY\"\nassert solution(\"01\") == \"YYMM\"\nassert solution(\"01\") == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('012345') == 'MMYY'\nassert solution('01') == 'AMBIGUOUS'\nassert solution('02') == 'AMBIGUOUS'\nassert solution('9') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1905\nMay XX19 is a valid date, but 19 is not valid as a month. Thus, this string is only valid in YYMM format.''') == 'YYMM'\nassert solution('''0101\n01 is a valid month. However, 01 is not a valid year. Thus, this string is only valid in MMYY format.''') == 'MMYY'\nassert solution('''01XX19 is a valid date, but 19 is not valid as a month. Thus, this string is only valid in YYMM format.''') == 'AMBIGUOUS'\nassert solution('''1905\nMay XX19 is a valid date, but 19 is not valid as a month. Thus, this string is only valid in YYMM format.''') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YYMM'\nassert solution(input()) == 'MMYY'\nassert solution(input()) == 'AMBIGUOUS'\nassert solution(input()) == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0105\") == \"YYMM\"\nassert solution(\"0301\") == \"YYMM\"\nassert solution(\"0502\") == \"YYMM\"\nassert solution(\"0912\") == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"YYMM\"\nassert solution(\"\") == \"NA\"\nassert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1905') == \"YYMM\"\nassert solution('01') == \"YYMM\"\nassert solution('0102') == \"YYMM\"\nassert solution('0105') == \"YYMM\"\nassert solution('1') == \"YYMM\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n''') == '2'\n\nassert solution('''\n    7\n''') == '1'\n\nassert solution('''\n    15\n''') == '4'\n\nassert solution('''\n    100\n''') == '50'\n\nassert solution('''\n    200\n''') == '42'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 2\nassert solution(\"4\") == 2\nassert solution(\"5\") == 3\n\n\"\"\"\n\nk = int(input())\nprint(k // 2)\n\n\"\"\"\n\n<==>\n\nfrom math import factorial\n\nk = int(input())\nprint(factorial(k) // (factorial(k - 2) * factorial(k - 4)))\n\n\"\"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\n'''"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n''') == '2'\nassert solution('''10\n''') == '4'\nassert solution('''100\n''') == '100'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 0') == '9'\nassert solution('12 0') == '21'\nassert solution('3 4') == '13'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"4\"\nassert solution(\"3 2\") == \"7\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"20 0\") == \"0\"\nassert solution(\"7 20\") == \"20\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0 12\n0 1''') == '21'\nassert solution('''0 1\n1 2''') == '11'\nassert solution('''0 1\n0 2''') == '11'\nassert solution('''0 1\n1 3''') == '10'\nassert solution('''0 1\n1 5''') == '1'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 12') == '21'\nassert solution('0 0') == '00'\nassert solution('0 1') == '01'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 7\") == \"21\"\nassert solution(\"24 7\") == \"21\"\nassert solution(\"8 14\") == \"21\"\nassert solution(\"3 24\") == \"21\"\nassert solution(\"8 12\") == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''9 12\n''') == '21'\nassert solution('''5 8\n''') == '5'\nassert solution('''3 8\n''') == '7'\nassert solution('''7 8\n''') == '7'\nassert solution('''13 13\n''') == '13'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"07:00:00\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '21'\nassert solution('7 8') == '21'\nassert solution('1 8') == '21'\nassert solution('10 2') == '21'\nassert solution('1 0') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 9') == '21'\nassert solution('10 10') == '20'\n\"\"\"\n\nimport itertools\nfrom datetime import datetime"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"19\"\n\nInput\n\nA B\n\nOutput\n\n19\n\"\"\"\n\na, b = list(map(int, input().split()))\n\nprint((a - 1) % 24 + b)\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 4\") == \"6\"\nassert solution(\"2 1\\n3 1\") == \"3\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1\\n\") == \"12\"\nassert solution(\"15 10 1\\n\") == \"11\"\nassert solution(\"3 10 1\\n\") == \"1\"\nassert solution(\"7 10 2\\n\") == \"7\"\nassert solution(\"3 10 1\\n\") == \"1\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 20') == '20'\nassert solution('1 1') == '1'\nassert solution('2 100') == '100'\nassert solution('1 100') == '100'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '3719'\nprint(solution(input()))\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2919\\n') == '3719'"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2919') == '3719'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 5') == '7'\nassert solution('4 1') == '1'\nassert solution('10 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\n1 2 3 4 5') == '7 5'\nassert solution('3 5\\n1 2 3 4') == '7 5'\nassert solution('2 3\\n1 2 3 4') == '4 7'\nassert solution('2 2\\n1 2 3 4') == '4 4'\nassert solution('2 2\\n1 2 3 4') == '4 4'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3719'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3 5\\n'\n    '6 7 8\\n'\n    '7 9 10\\n'\n    '8 9 11\\n'\n    '9 10 11\\n'\n    '10 11 12\\n'\n    '11 12 13\\n'\n    '12 13 14\\n'\n    '13 14 15\\n'\n    '14 15 16\\n'\n    '15 16 17\\n'\n    '16 17 18\\n'\n    '17 18 19\\n'\n    '18 19 20\\n'\n    '19 20 21\\n'\n    '20 21 22\\n'\n    '21 22 23\\n'\n    '22 23 24\\n'\n    '23 24 25\\n'\n    '24 25 26\\n'\n    '25 26 27\\n'\n    '26 27 28\\n'\n    '27 28 29\\n'\n    '28 29 30\\n'\n    '29 30 31\\n'\n    '30 31 32\\n'\n    '31 32 33\\n'\n    '32 33 34\\n'\n    '33 34 35\\n'\n    '34 35 36\\n'\n    '35 36 37\\n'\n    '36 37 38\\n'\n    '37 38 39\\n'\n    '38 39 40\\n'\n    '39 40 41\\n'\n    '40 41 42\\n'\n    '41 42 43\\n'\n    '42 43 44\\n'\n    '43 44 45\\n'\n    '44 45 46\\n'\n    '45 46 47\\n'\n    '46 47 48\\n'\n    '47 48 49\\n'\n    '48 49 50\\n'\n    '49 50 51\\n'\n    '50 51 52\\n'\n    '51 52 53\\n'\n    '52 53 54\\n'\n    '53 54 55\\n'\n    '54 55 56\\n'\n    '55 56 57\\n'\n    '56 57 58\\n'\n    '57 58 59\\n'\n    '58 59 60\\n'\n    '59 60 61\\n'\n    '60 61 62\\n'\n    '61 62 63\\n'\n    '62 63 64\\n'\n    '63 64 65\\n'\n    '64 65 66\\n'\n    '65 66 67\\n'\n    '66 67 68\\n'\n    '67 68 69\\n'\n    '68 69 70\\n'\n    '69 70 71\\n'\n    '70 71 72\\n'\n    '71 72 73\\n'\n    '72 73 74\\n'\n    '73 74 75\\n'\n    '74 75 76\\n'\n    '75 76 77\\n'\n    '76 77 78\\n'\n    '77 78 79\\n'\n    '78 79 80\\n'\n    '79 80 81\\n'\n    '80 81 82\\n'\n    '81 82 83\\n'\n    '82 83 84\\n'\n    '83 84 85\\n'\n    '84 85 86\\n'\n    '85 86 87\\n'\n    '86 87 88\\n'\n    '87 88 89\\n'\n    '88 89 90\\n'\n    '89 90 91\\n'\n    '90 91 92\\n'\n    '91 92 93\\n'\n    '92 93 94\\n'\n    '93 94 95\\n'\n    '94 95 96\\n'\n    '95 96 97\\n'\n    '96 97 98\\n'\n    '97 98 99\\n'\n    '98 99 100\\n'\n)\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 2') == '4'\nassert solution('10 2') == '2'"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '1'\nassert solution('10') == '2'\nassert solution('11') == '1'\nassert solution('101') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 2') == \"4\"\n\"\"\""
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./input.txt\") == \"5\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '4'"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''2 2''') == '2'\nassert solution('''10 8''') == '6'\nassert solution('''20 4''') == '5'\nassert solution('''1 4''') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''11 2\n''') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n\") == \"3\""
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\""
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"6\"\nassert solution(\"100\") == \"99\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\n\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 5\") == \"Yay!\"\nassert solution(\"3 3\") == \"Yay!\"\nassert solution(\"5 1\") == \"Yay!\"\nassert solution(\"10 2\") == \"Yay!\"\n\"\"\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n\") == \"Yay!\"\nassert solution(\"4 1\\n\") == \":(\\n\"\n\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n') == 'Yay!'\nassert solution('3 2\\n') == ':(\n\n'''"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n''') == \"Yay!\"\nassert solution('''\n5 7\n''') == \"Yay!\"\nassert solution('''\n5 2\n''') == \"Yay!\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"2 3\") == \"Yay!\"\nassert solution(\"4 5\") == \"Yay!\"\nassert solution(\"5 6\") == \"Yay!\"\n\n'''\n\na, b = map(int, input().split())\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"1 4\") == \"Yay!\"\nassert solution(\"1 5\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nE869120:5 4\nsquare1001:4 3\n''') == 'Yay!'\n\n''')\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 2\\n\"\n    \"3 4\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"2 3\\n\"\n    \"4 5\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"5 5\\n\"\n    \"2 2\\n\"\n) == \"Yay!\"\n\nassert solution(\n    \"3 4\\n\"\n    \"6 6\\n\"\n) == \"Yay!\"\n\"\"\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 4\") == \"Yay!\"\nassert solution(\"2 4\") == \"Yay!\"\nassert solution(\"5 1\") == \"Yay!\"\nassert solution(\"3 4\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('10 10') == 'Yay!'\nassert solution('3 2') == ':( '\n\n\"\"\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '23'\nassert solution('1234567890') == '77'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"0\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == \"34\"\nassert solution('1234') == \"0\"\nassert solution('12345678') == \"10\"\nassert solution('1234567876') == \"34\"\nassert solution('9') == \"0\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567897\") == \"27\"\nassert solution(\"1212121414\") == \"1\""
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"79876543210\") == \"20\"\nassert solution(\"1234567876\") == \"34\"\nassert solution(\"0123456789\") == \"0\"\nassert solution(\"012345678\") == \"1\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('0123456789') == '13'"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678901') == '0'\n\"\"\"\n\ns = input()\n\nx = int(s[0])*1+int(s[1])*2+int(s[2])*4+int(s[3])*8+int(s[4])*16+int(s[5])*32+int(s[6])*64+int(s[7])*128\nprint(abs(x-753))\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\n\nassert solution('''\n2\n2 9\n''') == '1 7'\n\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\n\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 12 6\n\n2\n2 9\n\n7\n2 1000000000 4 6 8 4 2\n\n6\n13 52 0 13 26 52\n\n''') == '5 3\\n1 7'\n\nassert solution('''4\n3\n3 2 1\n2 3 2\n1 3\n\n4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n''') == '7 4\\n7 5'\n\nassert solution('''5\n3\n3 2 1\n2 3 2\n1 3\n\n4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n''') == '6 4\\n5 4'\n\nassert solution('''10\n3\n1 2 3 4 5 6 7 8 9 10\n3 2 1 2 4\n1 2 3 4\n2 3 2 1\n2 2 3 4\n3 2 1 2\n1 3 2 4\n2 4 2 1\n3 4 1 2\n4 1 2 3\n1 2 1 3\n1 3 2 4\n2 4 2 2\n1 1 3 2\n2 1 3 4\n3 1 4 2\n1 2 1 3\n2 4 1 3\n''') == '8 5\\n5 6'\n\nassert solution('''5\n3\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n''') == '4 3'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n3 12 6\n''') == '5 3'\nassert solution(\n'''2\n2 9\n''') == '1 7'\nassert solution(\n'''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution(\n'''6\n13 52 0 13 26 52\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n3 12 6\\n\"\n) == \"5 3\\n\"\n\nassert solution(\n    \"2\\n2 9\\n\"\n) == \"1 7\\n\"\n\nassert solution(\n    \"7\\n13 52 0 13 26 52\\n\"\n) == \"12 13\\n\"\n\nassert solution(\n    \"6\\n13 52 0 13 26 52\\n\"\n) == \"12 13\\n\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 3, 4]) == \"7 1\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7]) == \"1 7\"\nassert solution([6]) == \"12 13\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''2\n2 9\n''') == '1 7'\nassert solution('''7\n13 52 0 13 26 52\n''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''2\n2 9\n''') == '1 7'\nassert solution('''7\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''7\n2 9\n''') == '1 7'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7, 13, 52, 0, 13, 26, 52]) == \"12 13\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5 3\""
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3 1 4 1\n''') == '3'\n\nassert solution('''\n3\n1 1 1\n''') == '2'\n\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 2 2') == '2'\nassert solution('1 1 1 2 2 3') == '3'\nassert solution('3 1 4 1 2 1 3') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2 2') == '2'\nassert solution('5 1 1 1 2 2') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '3'\nassert solution('4') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 4 1\n''') == '3'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution([3, 1, 4, 1]) == \"3\"\nassert solution([3, 1, 4, 1, 1]) == \"2\"\nassert solution([1, 1, 1]) == \"1\"\nassert solution([1, 1, 1, 1]) == \"0\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n1 1 1 2 2\n\"\"\") == \"4\"\n\nprint('AoC 2020 Day 16, part 1:')\nprint(solution(open(\"day16.in\").read()))\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 4 1\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n2 3''') == '2'\nassert solution('''3 2\n1 3\n2 3''') == '1'\nassert solution('''4 0\n1 2\n2 3''') == '1'\nassert solution('''5 1\n1 2\n2 3\n3 4\n4 5''') == '3'\nassert solution('''5 2\n1 3\n2 4\n3 5''') == '2'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\nassert solution('3 0\\n') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n\nassert solution(\"2 0\") == \"1\"\n\nassert solution(\"3 2\") == \"2\"\n\nassert solution(\"1 2\") == \"1\"\n\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n4 2\n1 2\n2 3\n''') == '4'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n2 0\n''') == '1'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '3'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 2') == '1'\nassert solution('2 0') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 0\n''') == '1'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n5 1\n1 2\n2 3\n3 4\n1 3\n2 4\n3 4\n''') == '3'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '4'\nassert solution('''\n2 0\n''') == '1'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2 1 2 1 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''\n3 1\n2 3\n7 5\n7 4\n''') == '11'\nassert solution('''\n7 3\n1 6\n3 4\n5 6\n6 7\n7 2\n4 1\n4 2\n''') == '5'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n''') == '11', \"First example\"\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\n''') == '4', \"Second example\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"11\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"2\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n''') == '0'\nassert solution('''\n10 10\n0 0\n0 2\n0 3\n3 0\n1 0\n2 3\n2 2\n5 4\n4 2\n4 3\n''') == '3'"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n''') == \"11\"\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\n''') == \"4\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"\n\n\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 5\"\nassert solution(\"3 6\") == \"1 1\"\nassert solution(\"10 15 12\") == \"1 9 12 23 26 37\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 5\\n2 1\\n2 9999999994\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\n\nassert solution('''2 2\n1 2\n2 3\n1 4\n''') == '1 2\\n1 4'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2 3') == '1 2 3'\nassert solution('3 4 5 6') == '3 5 6'\nassert solution('1 1 1 1 1') == '1 1 1 1'\nassert solution('8 8 8 8 8') == '8 8 8 8'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''40 40 40 60''') == '20 20 20'\nassert solution('''201 101 101 200''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\nprint('All test cases passed!')"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 9 2') == '9 1 5'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3\""
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 2') == '1 1 1 2'\nassert solution('4 3 2') == '3 3 3 2'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nRRR\n''') == '2'\nassert solution('''4\nRRBB\n''') == '2'\nassert solution('''5\nRRBB\n''') == '1'\nassert solution('''2\nRRBB\n''') == '1'\nassert solution('''4\nBBBB\n''') == '1'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nRGGGGG\n''') == '2'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\nBBBGBRRR\n''') == 'BRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == 'BGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_test_case) == output_test_case, (solution(input_test_case), output_test_case)\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nBBBGBRRR\n''') == 'BGRBGBGR'\n\nassert solution('''6\nBBBGBRRR\n''') == 'BGRBGBGR'\n\nassert solution('''8\nBBBGBRRR\n''') == 'BGRBGBGR'\n\nassert solution('''13\nBBRRRRGGGGGRR\n''') == 'BGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nRGB\n''') == '2'\nassert solution('''\n20\nRGBBBBGBRRR\n''') == '2'\nassert solution('''\n40\nRGBBBBBBBBBBGB\n''') == '2'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == 'BGRBGBRGR'\nassert solution('13') == 'BGRBRBGBGBGRG'\nassert solution('16') == 'BGRBRBGBGBGRG'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().replace('\\n', '')"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('6') == '2'\nassert solution('4') == '1'\nassert solution('9') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '1'\nassert solution('9') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 3 4 7 5 6 8\") == \"4\"\nassert solution(\"6\\n6 7 8 3 4 5 9 10 11\") == \"6\"\nassert solution(\"4\\n10 9 8 7\") == \"1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\"\nassert solution(\"1\\n1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"9\") == \"6\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 5 2 4 6') == '4'\nassert solution('6 7 8 3 4 5 9 10 11') == '6'\nassert solution('10 9 8 7') == '1'"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == \"1\"\nassert solution('6') == \"2\"\nassert solution('7') == \"4\"\nassert solution('8') == \"1\"\n\nassert solution('9') == \"1\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''10\n10 9 8 7\n''') == '6'\nassert solution('''12\n3 2 1 4 5 6 8 7 9 10 11 12 13 14 15\n''') == '1'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n''') == 'Yes', '3 1'\nassert solution('''3 2\n''') == 'No', '3 2'"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 1\n\n\"\"\") == \"Yes\"\nassert solution(\"\"\"1 1\n\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 5') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3\n''') == 'No'\nassert solution('''\n3 1\n''') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 4\") == \"No\"\n\"\"\""
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n4 5\n7 8''') == 'Yes'\nassert solution('''1 1\n2 3''') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n\"\"\""
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '5'\nassert solution('10 20') == '25'\nassert solution('100 50') == '75'\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 1') == '8'\nassert solution('81 58') == '110'"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"X Y\") == \"110\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''81 58''') == '110'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '5'\nassert solution('1 0') == '1'\nassert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 0''') == '0'\nassert solution('''1 2''') == '1'\nassert solution('''1 2''') == '2'\nassert solution('''100 200''') == '350'\nassert solution('''10 20''') == '50'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('81 58') == '110'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('81 58') == '110'\nassert solution('X Y') == 'X'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 5') == '5'\nassert solution('7 10') == '5.5'"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == \"8\"\nassert solution('''4\n''') == \"15\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '15'\nassert solution('3') == '15'\nassert solution('4') == '16'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"16\"\n\n\"\"\""
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '8'\nassert solution('3') == '24'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '8'\nassert solution('2') == '8'\n\n'''\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"36\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == \"8\"\nassert solution('10') == \"180\"\nassert solution('5') == \"13\"\nassert solution('100') == \"2355\"\nassert solution('200') == \"20300\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\">5\") == \"1\"\nassert solution(\">6\") == \"1\"\nassert solution(\">8\") == \"1\"\nassert solution(\">9\") == \"1\"\nassert solution(\">10\") == \"2\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"9\") == \"YES\"\n\n'''\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\n\"\"\"\n\nx = int(input())"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n\n---Time Complexity---\nThe time complexity of this solution is O(1)\n\n---Space Complexity---\nThe space complexity of this solution is O(1)\n\"\"\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\nassert solution('0') == '0'\nassert solution('999') == 'ABC'\nassert solution('123') == '123'\nassert solution('123') == '123'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'\nassert solution('0') == 'ABCD'\nassert solution('1') == 'ABCD'\nassert solution('2') == 'ABCD'\nassert solution('3') == 'ABCD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''999''') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC\""
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''999''') == 'ABC'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Nay!\"\nassert solution(\"3\") == \"Nay!\"\nassert solution(\"4\") == \"Nay!\"\nassert solution(\"5\") == \"Nay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n4\n8\n9\n15\n''') == 'Yay!'\n\nassert solution('''\n1\n2\n3\n6\n9\n15\n''') == 'Yay!'\n\nassert solution('''\n1\n2\n3\n5\n9\n15\n''') == 'Yay!'\n\nassert solution('''\n1\n2\n3\n5\n9\n15\n''') == 'Yay!'\n\nassert solution('''\n1\n2\n3\n4\n9\n15\n''') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n3\") == \"Yay!\""
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Yay!'\n\n\"\"\""
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"4200\") == \"red\""
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"4200\") == \"red\""
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"1\") == \"black\"\nassert solution(\"13\") == \"red\"\nassert solution(\"45\") == \"red\"\nassert solution(\"1234\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"1000\") == \"red\"\nassert solution(\"1000\") == \"red\"\nassert solution(\"1200\") == \"red\"\nassert solution(\"12000\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3200\") == \"pink\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('b') =='red'\nassert solution('c') =='red'\nassert solution('d') =='red'\nassert solution('e') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3200\") == \"pink\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\n\n\"\"\"\n\na = int(input())\ns = input()"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234\") == \"1234\", \"Should be 1234\"\nassert solution(\"3218\") == \"red\", \"Should be red\"\nassert solution(\"12345\") == \"red\", \"Should be red\"\nassert solution(\"3200\") == \"1234\", \"Should be 1234\"\nassert solution(\"1234\") == \"1234\", \"Should be 1234\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3200') == 'pink'\nassert solution('22') =='red'\nassert solution('a') =='red'\nassert solution('b') =='red'\nassert solution('12') =='red'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'ABC'\nassert solution('4') == 'ARC'\nassert solution('9') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1199') == 'ABC'\nassert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''R\n1199\n''') == 'ABC'\nassert solution('''R\n1199\nR\n''') == 'ARC'\nassert solution('''R\n1199\nR\nR\n''') == 'AGC'\nassert solution('''R\n1199\nR\nR\nR\n''') == 'AGC'\nassert solution('''R\n1199\nR\nR\nR\nR\n''') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1197') == 'ARC'\nassert solution('1198') == 'AGC'\nassert solution('1196') == 'ARC'\nassert solution('1194') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1199') == 'ARC'\nassert solution('1099') == 'AGC'\nassert solution('1259') == 'ARC'\nassert solution('1299') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('R') == 'ARC'\nassert solution('R1199') == 'AGC'\nassert solution('R1199') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1198\") == \"ARC\"\nassert solution(\"1197\") == \"AGC\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"991\"\nprint(solution(input()))\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('119') == '991'\nassert solution('1111') == '10001'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    119\n''') == \"991\"\nassert solution('''\n    119\n''') == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"99\") == \"99\"\nassert solution(\"999\") == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"112\") == \"111\"\nassert solution(\"121\") == \"121\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"991\"\nassert solution(\"991\") == \"991\"\nassert solution(\"1\") == \"9\"\nassert solution(\"11\") == \"9\"\nassert solution(\"111\") == \"9\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('119') == '991'\nassert solution('119') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('119') == '991'\nassert solution('109') == '901'"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '91'\nassert solution('99') == '91'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'bcdaf'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t) == a\n\nfrom collections import deque"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\naba\nabac\nac\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n1\naba\naba\nac\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n3\naba\nabac\nac\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n2\naba\nabac\nac\nzzzzzzzzzz\n''') == 'abac'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n4\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'bccddaaf'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nabac') == 'abac'\nassert solution('2\\nabac') == 'ac'\nassert solution('3\\nabac') == 'bcdaf'\nassert solution('4\\nabac') == 'zzzzzz'\n\n\n\n'''\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n1\naaaa\n''') == 'aaaa'\nassert solution('''\n2\nba\n''') == 'ba'\nassert solution('''\n3\nba\n''') == 'ba'\nassert solution('''\n4\nac\n''') == 'ac'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\""
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\nab\\"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"abac\"\nassert solution(\"4\") == \"abac\"\nassert solution(\"5\") == \"abac\"\nassert solution(\"6\") == \"abac\"\nassert solution(\"10\") == \"abac\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n5\\n4\"\n\n\"\"\"\nimport math\nfrom collections import Counter\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"333\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '333'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '5'\nassert solution('''\n1 1\n5 1\n1 3\n''') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4') == '2'\nassert solution('13 9') == '5'\nassert solution('100 13') == '333'\nassert solution('123 456') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4'\nassert solution('1\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '0\\n10\\n10'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('10 4') == '2'\nassert solution('13 9') == '5'\nassert solution('100 13') == '4'\nassert solution('123 456') == '333'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '5'\nassert solution('''\n2\n3\n3\n2\n''') == '0'\nassert solution('''\n6\n4\n''') == '333'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == \"2\"\nassert solution('''\n1\n3\n1\n''') == \"1\"\nassert solution('''\n2\n2\n1\n''') == \"2\"\nassert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == \"5\"\nassert solution('''\n3\n2\n1\n''') == \"0\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 4\n100 13\n123 456\n92 46\n''') == '333'\nassert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '0'\nassert solution('''\n5 1\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n5 2\n100 13\n123 456\n92 46\n''') == '5'\nassert solution('''\n5 3\n100 13\n123 456\n92 46\n''') == '5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4\n3 4 1 2\n\"\"\") == \"2.666666666666667\"\nassert solution(\"\"\"\n4 3\n3 4 1 2\n\"\"\") == \"2.666666666666667\"\n\nassert solution(\"\"\"\n4 1\n3 4 1 2\n\"\"\") == \"2.666666666666667\"\nassert solution(\"\"\"\n5 1\n2 2 2 1 1\n\"\"\") == \"4.4\""
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n5\\n4') == '2.666666666666667'\nassert solution('2\\n3\\n5\\n4') == '3.0'"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n3 3\n4 1 2 3\n''') == '2.666666666666667'\nassert solution('''\n4 2\n1 2 3 4\n''') == '2.500000000000002'\nassert solution('''\n4 1\n1 2 3 4\n''') == '2.500000000000002'\nassert solution('''\n10 10\n3 2 5 4 8 9 5 5 7 3 8 3\n''') == '0.7777877777777778'"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2.0'\nassert solution('2 4') == '2.666666666666667'\nassert solution('3 3') == '3.0'\nassert solution('3 4') == '2.0'\nassert solution('1 1') == '0.5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3\n4\n1\n2\n''') == '2.666666666666667'\nassert solution('''\n10\n4\n7\n8\n9\n4\n1\n2\n3\n5\n''') == '10.000000'\nprint('You are all set!')\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\"\nassert solution(\"5 1\\n3 3 1 2 3\\n2 2 1\\n\") == \"1.333333333333333\"\nassert solution(\"5 1\\n3 3 1 2 3\\n2 2 1\\n\") == \"1.333333333333333\"\nassert solution(\"5 1\\n3 3 1 2 3\\n2 2 1\\n\") == \"1.333333333333333\"\n\n\"\"\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '2.5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('10 10\\n10 10 10 10 10 10 10 10 10 10 10') == '9.000000000000099'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n3 4 1 2''') == '2.666666666666667'\nassert solution('''4 5\n3 4 1 2\n4 4 1 2''') == '2.666666666666667'\nassert solution('''10 20\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1''') == '12.8'\nassert solution('''30 20\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n3 4 1 2''') == '2.666666666666667'\nassert solution('''5 5\n5 5 5 5 5''') == '5.0'\nassert solution('''2 2\n1 1''') == '2.0'\nassert solution('''2 5\n1 1 2 3 4''') == '2.5'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n''') == 'YES'\nassert solution('''\n5 1\n1 2 3 4 5\n1 3\n4 1 2 3\n2 1 3 4\n3 1 4 2\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n''') == 'NO'\nassert solution('''\n4 2\n4 1 2 3\n3 2\n1 2 3 4\n5 2\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES'"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2''') == 'YES', '3'\nassert solution('''4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'NO', '2'\nassert solution('''4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'YES', '3'\nassert solution('''1 2\n3 2\n1 2 1 3\n3 2\n2 1\n1 3\n3 2\n1 2 3 2\n3 2\n2 1\n1 3\n1 3\n1 3\n2 1\n1 3\n1 3\n3 2\n1 3\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2 1\n1 3\n2"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''4 2\n4 2 1 2\n1 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2''') == 'YES'\nassert solution('''5 1\n1 2 3 4 5\n1 3\n4 1 2 3 5\n1 4''') == 'YES'\nassert solution('''4 2\n1 2 3 4\n1 3\n3 2 4 1\n2 1''') == 'NO'\nassert solution('''5 1\n1 2 3 4 5\n2 3\n1 4\n4 1 2 3\n3 2\n1 3''') == 'YES'\nassert solution('''5 1\n1 2 3 4 5\n4 3\n2 1\n1 3\n1 4''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n4 2\n4 2 1 2\n1 2 3\n1 3\n2 2 3 4\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 4\n''') == 'NO'\nassert solution('''\n5 2\n5 2 1 2\n1 2 3\n1 3\n2 2 3 4\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 4\n''') == 'NO'\nassert solution('''\n4 2\n4 2 1 2\n1 2 3\n1 3\n2 2 3 4\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 4\n''') == 'YES'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"baabbb\"\nassert solution(\"10\") == \"ooopppssss\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nbab\n''') == 'bab'\nassert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n7\noooooooooo\n''') == 'ooo'\nassert solution('''\n2\nz\n''') == 'z'"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"1\\n\") == \"z\"\nassert solution(\"1\\n2\") == \"z\"\nassert solution(\"1\\n2\\n3\") == \"z\"\nassert solution(\"1\\n2\\n3\\n4\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'z'\nassert solution('10') == 'oops'\nassert solution('6') == 'bab'\nassert solution('11') == 'ooo'\nassert solution('12') == 'ooooo'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"-1\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\na\n\n''') == \"a\"\nassert solution('''\n\n2\n\na\n\n''') == \"a\"\nassert solution('''\n3\naaa\n\n''') == \"aaa\"\nassert solution('''\n\n3\naaa\n\n''') == \"aaa\"\nassert solution('''\n5\na\nb\nc\nd\ne\n\n''') == \"a\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''bab''') == 'bab'\nassert solution('''baabbb''') == 'bab'\nassert solution('''ooopppssss''') == 'oops'\nassert solution('''z''') == 'z'\nprint('Yay! Nice puzzle, I solved it')"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'bab'\nassert solution('10') == 'oops'\nassert solution('1') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"a\"\nassert solution(\"1\") == \"a\"\nassert solution(\"0\") == \"a\"\nassert solution(\"-1\") == \"a\"\nassert solution(\"-2\") == \"a\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"6 3\") == \"0\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"7 6\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n\n\n\"\"\""
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 10') == '1'\nassert solution('1 0') == '0'\nassert solution('3 3') == '1'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution([8, 10,\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n2 3\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 2 1\n2 3 2\n1 3 3\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 3\n2 1 3\n4 3 4\n2 4 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1', 'wrong test 1'\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0', 'wrong test 2'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1', 'wrong test 3'"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\""
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('8') == '6'\nassert solution('9') == '4'\nassert solution('10') == '5'\nassert solution('11') == '6'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nBRB''') == 'GRB'\nassert solution('''2\nGB''') == 'R'\nassert solution('''3\nRGBGRBB''') == 'RGBR'\nassert solution('''5\nBGGGBR''') == 'GBR'\nassert solution('''7\nBGGGBR''') == 'GB'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution(\"BB\") == '3'\nassert solution(\"GB\") == '2'\nassert solution(\"BR\") == '1'\nassert solution(\"RR\") == '1'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"12\") == \"4\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\nRRG\\n\"\n    ) == \"3\\nRRGBG\\n\"\n    assert solution(\n    \"5\\nBRRGRBB\\n\"\n    ) == \"6\\nRRGBGBG\\n\"\n    assert solution(\n    \"15\\n
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nRG\\n') == '1\\nRGR\\n', solution('1\\nRG\\n')\nassert solution('2\\nRB\\n') == '1\\nRBR\\n', solution('2\\nRB\\n')\nassert solution('3\\nRGB\\n') == '1\\nRGBR\\n', solution('3\\nRGB\\n')\nassert solution('4\\nRRR\\n') == '1\\nRRRR\\n', solution('4\\nRRR\\n')\nassert solution('5\\nRBGB\\n') == '1\\nRBGBR\\n', solution('5\\nRBGB\\n')\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"RGB\") == \"R\"\nassert solution(\"R\") == \"R\"\nassert solution(\"RRRRRRR\") == \"R\"\nassert solution(\"RGRGRB\") == \"R\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"10\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"5\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"8\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"2 10 3 100\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1\\n0.10000000 BTC\\n') == '0.10000000'\nassert solution('1\\n10000 JPY\\n') == '10000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"3\\n0.69999982 BTC\\n1.2800014 JPY\\n\") == \"1.2395763\"\nprint(solution(input()))\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''2\n10001 JPY\n0.10000000 BTC\n''') == '48001.0'\nassert solution('''3\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''3\n10001 JPY\n0.10000000 BTC\n''') == '48001.0'\nassert solution('''4\n10000 JPY\n0.10000000 BTC\n''') == '47996.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\n\"\"\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"5\") == \"879.3904808221865\"\nassert solution(\"12\") == \"874.542177429559\"\nassert solution(\"15\") == \"1031.738191537685\"\nassert solution(\"19\") == \"1020.716650661938\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '3'"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 1') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\n\n\"\"\"\n\nN, i = stdin.split()\nN = int(N)\ni = int(i)"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3 1\") == \"4\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 7') == '2'\nassert solution('7 8') == '1'\n\"\"\"\n\nN, i = map(int, input().split())"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 2') == '5'\nassert solution('2 4') == '4'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '3'\nassert solution('7 6') == '6'\nassert solution('5 5') == '1'\nassert solution('10 20') == '9'\nassert solution('12 30') == '11'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nip cc\n''') == 'icpc'\nassert solution('''\n4\nip c\n''') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\nip cc\n\n''') == 'icpc'\n\nassert solution('''\n3\npqr xyz\n\n''') == 'pqrxz'\n\nassert solution('''\n6\nqzs dva gh n h o p\n\n''') == 'qzs dvap'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nabc\\n') == 'abc'\nassert solution('2\\nabc\\n') == 'bc'\nassert solution('3\\nabc\\n') == 'bac'\nassert solution('4\\nabc\\n') == 'abcd'\nassert solution('5\\nabc\\n') == 'bacd'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"123\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"ABCDE\") == \"ABCDE\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == ''\nassert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    1\n    ip c\n    ''') == 'icpc'\nassert solution('''\n    2\n    ip cb\n    ''') == 'icpcb'\nassert solution('''\n    3\n    ip ccb\n    ''') == 'ipcbcb'\nassert solution('''\n    4\n    ip ccb\n    ''') == 'ipcbcb'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\nip cc\n\n4\nac\"\"\") == \"icpc\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\""
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AB') == 'Yes'\nassert solution('AB') == 'Yes'\nassert solution('AB') == 'Yes'\nassert solution('AB') == 'Yes'\nassert solution('AB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABBA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('CAB') == 'No'\n\"\"\"\n\nS = stdin.readline()"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"Yes\"\nassert solution(\"BA\") == \"Yes\"\nassert solution(\"AB\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAAB\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABD') == 'No'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRS\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSRSR') == '2'\nassert solution('RRS') == '1'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('RRS') == '2'\nassert solution('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == '2'\nassert solution(\"RRR\") == '2'\nassert solution(\"R\") == '1'\nassert solution(\"RRS\") == '2'\nassert solution(\"RRSRRRRRSRRSRRS\") == '4'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == '2'\nassert solution(\"RRR\") == '0'\nassert solution(\"RRRS\") == '2'\n\n----------------------------------------"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRR') == \"2\"\nassert solution('RSS') == \"1\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRS') == \"2\"\nassert solution('RRRS') == \"1\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRRRRRR\") == \"4\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRRRRRR\") == \"3\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRRRRR\") == \"1\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRRRRRR\") == \"0\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"R\") == \"2\"\nassert solution(\"R\") == \"2\"\nassert solution(\"RR\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('R') == '1'\nassert solution('RR') == '2'\nassert solution('RRR') == '0'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nprint(\"You're all set!\")"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 1 5 2\") == \"2 1 4 5\"\nassert solution(\"10 1 2 3\") == \"2 1 3 1\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 3') == '3 1 2'\nassert solution('5 1 2 3 4') == '1 2 3 4 5'\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('10 20 30') == '30 20 10'\nassert solution('1 2 3 4') == '3 1 2 4'\nassert solution('1 2 3 4 5') == '3 1 2 4 5'\nassert solution('1 2 3 4 5 6') == '3 1 2 4 5 6'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n1 2 3''') == '3 1 2'\nassert solution('''1 2 3\n2 1 3''') == '3 1 2'\nassert solution('''1 2 3\n3 1 2''') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['1 2 3', '2 1 3', '3 1 2']) == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"4 3 2\") == \"2 3 4\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"9 9\") == \"0\"\nassert solution(\"5 6\") == \"11\"\nassert solution(\"3 0\") == \"0\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10') == '10'\nassert solution('30 20') == '50'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n30 100\n\"\"\"\n) == \"100\"\n\"\"\"\n(Takahashi, who is A years old, is riding a Ferris wheel.)\n\n\"\"\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('20 1') == '20'\nassert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./test_input.txt\") == \"100\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n100') == '100'\nassert solution('4\\n100') == '50'\nassert solution('6\\n100') == '100'\nassert solution('8\\n100') == '25'\nassert solution('10\\n100') == '0'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Takahashi, who is A years old, is riding a Ferris wheel.\\nIt costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)\\n\\nTakahashi, who is A years old, is riding a Ferris wheel.\\nIt costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)\\n\\n') == '100'\n\n\"\"\""
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-++') == '2'\nassert solution('+-+++') == '1'\nassert solution('+-++-++-++') == '1'\nassert solution('+-+++-++') == '0'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-+') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"--++\") == \"1\"\nassert solution(\"++-\") == \"0\""
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution(input())) == stdin\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2'\nassert solution('+--') == '1'\nassert solution('-++') == '0'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"+-++\"\"\",\n\"\"\"+-++\"\"\") == \"2\""
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\nassert solution('-++') == '1'\nassert solution('+++++') == '2'\nassert solution('++++++') == '2'\nassert solution('+++++++') == '2'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/02/29\") == \"TBD\"\nassert solution(\"2019/02/28\") == \"TBD\"\nassert solution(\"2019/02/27\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('20/04/30') == 'TBD'\nassert solution('20/4/30') == 'TBD'\nassert solution('20/04/38') == 'TBD'\nassert solution('20/04/20') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\""
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Should be Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\", \"Should be TBD\"\nassert solution(\"2019/04/30\") == \"Heisei\", \"Should be Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\", \"Should be TBD\"\nassert solution(\"2019/04/30\") == \"Heisei\", \"Should be Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Should be Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\", \"Should be TBD\"\nassert solution(\"2019/04/28\") == \"TBD\", \"Should be TBD\"\nassert solution(\"2019/04/27\") == \"TBD\", \"Should be TBD\"\nassert solution(\"2019/04/26\") == \"TBD\", \"Should be TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/12') == 'TBD'"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/28\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/29/\") == \"TBD\"\nassert solution(\"2019/04/29/1\") == \"TBD\"\nassert solution(\"2019/04/29/2\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\""
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 1 2 2\n\n4\n1 1 1 2\n''') == '2'\nassert solution('''\n3\n1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n1 1 1 2 2\n''') == '1'"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'\n\nstdin = \"\"\"\n3\n6 6 6 3 6 1000000000 3 3 6 6\n\"\"\"\nassert solution(stdin) == '9'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"18\") == \"14\"\nassert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"3\""
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('18\\n
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\""
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t) == \"3\""
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution(\n    '10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution(\n    '3\\n1337 1337 1337') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '14'\nprint('solution() finished successfully!')\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input_1) == '2'\nassert solution(example_input_2) == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n10 4\n5 2 1 2 3 2 1 1 2 3\n''') == '1 2 3 2 1 3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4') == '3'\nassert solution('3 4 5 6 7') == '4 5 6 7'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('7 2') == '2'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '2\\n2 1'\nassert solution('10 4') == '3\\n1 3 2'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '2 3 2 1 3 2 1 2 3 3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n2 3 1 2\n''') == '2 1'\nassert solution('''\n10 4\n1 2 3 1 1 2 1 2 3 3\n''') == '3 1 2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 4\n1 2 3 2 1 3 2 1 2 3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n1 2 3 2 1 2 3 2 1 2 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('''\n20\n1\n10\n''') == '2'\nassert solution('''\n20\n1\n4\n''') == '-1'\nassert solution('''\n20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '3'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n5\") == \"3\\n-1\"\nassert solution(\"1\\n8\\n10\\n14\\n\") == \"2\\n3\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"3\n2\n-1\n3\n2\"\"\"\n\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"1\n3\n1\n3\n2\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3 2\""
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3\\n3\\n-1\\n3\\n-1\\n-1\\n1\\n1\\n-1\\n'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 4 8 2 4') == '1'\nassert solution('8\\n5\\n14\\n10') == '3'\nassert solution('7\\n17') == '-1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '3 2'\nassert solution('10\\n10\\n10\\n10\\n10\\n') == '2'\nassert solution('5\\n10\\n10\\n10\\n10\\n') == '-1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n''') == '1\\n3\\n2\\n-1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '3 2'"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '21'"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"21\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == \"21\"\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == \"0\"\nassert solution('''\n3 4\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n''') == \"10\"\nassert solution('''\n2 2\n1 1\n''') == \"2\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '21'\nassert solution('3 3') == '0'"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '21'\nassert solution('3 3') == '0'\nassert solution('0 3') == '0'"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '21'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 4 6 6 6\n\n2\n2 2 3 \n1 1 2 \n\n3\n2 8 10\n\n3\n2 4 6 6 6\n\n4\n1 1 1 1\n\n4\n1 1 1 1\n\n5\n1 1 1 1\n\n6\n1 1 1 1\n''') == '2'"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n2 4 6 6 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n2 8 10\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n2 3 3 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n2 2 2 2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"0\\n\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('2 8 10') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4 6 6 6\n''') == '2'\nassert solution('''\n3\n2 8 10\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"6\") == \"2 2 2 2 2 2\"\nassert solution(\"5\") == \"2 2 2 2 2\"\nassert solution(\"4\") == \"2 2 2 2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('4') == '0'"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n7 1\n10001100\n7 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n7 1\n10001100\n7 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n7 1\n10001100\n7 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n0\n''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 1\n100010''') == '1'\nassert solution('''6 2\n000000''') == '1'\nassert solution('''5 1\n10101''') == '1'\nassert solution('''3 1\n001''') == '1'\nassert solution('''2 2\n00''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n100010\") == \"1\"\nassert solution(\"6 2\\n000000\") == \"0\"\nassert solution(\"5 1\\n10101\") == \"1\"\nassert solution(\"3 1\\n001\") == \"1\"\nassert solution(\"2 2\\n00\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1\\n100010') == '1'\nassert solution('6 2\\n000000') == '0'\nassert solution('5 1\\n10101') == '1'\nassert solution('3 1\\n001') == '1'\nassert solution('2 2\\n00') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''1\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''1\n2\n1 1\n1 1\n1 1\n0\n1 1\n0\n0\n''') == '1'\nassert solution('''2\n3\n1 1\n1 1\n1 1\n0\n1 1\n0\n0\n''') == '1'\nassert solution('''3\n4\n1 1\n1 1\n1 1\n0\n1 1\n0\n0\n''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n10101\n3 1\n001\n2 2\n00\n1 1''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1''') == '2'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n1 1\") == \"2\""
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 2') == '0'\nassert solution('5 1') == '1'\nassert solution('5 2') == '0'\nassert solution('100000') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('7 2') == '3'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution('4\\n7\\n') == '6'\nassert solution('2\\n4\\n5\\n') == '1 3 4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_0) == example_output_0\nassert solution(example_input_1) == example_output_1\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 4 5\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"1 3 5 6\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n2 3\n3 3\n''') == '4'\nassert solution('''\n5 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '1 3 5 6'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '4'\n\nprint(solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n'''))\n\nprint(solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n'''))\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == \"30\"\nassert solution(\n'''\n2\n3\n5\n''') == \"20\"\nassert solution(\n'''\n2\n1\n2\n''') == \"1\"\nassert solution(\n'''\n1\n2\n''') == \"1\"\nassert solution(\n'''\n2\n1\n1\n''') == \"1\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nassert solution('''3\n4 5 15 30\n3\n4 5 6\n''') == '10'\nassert solution('''2\n7 8 9\n1\n2 3\n''') == '7'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"12\"\nassert solution(\"2\\n4\\n6\") == \"11\"\nassert solution(\"3\\n5\\n15\") == \"10\"\nassert solution(\"4\\n6\\n30\") == \"10\"\nassert solution(\"5\\n10\\n15\") == \"11\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n4\") == \"3\"\nassert solution(\"1\\n3\\n4\") == \"5\"\nassert solution(\"1\\n3\\n5\") == \"7\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n1\n''') == '0', 'First example'\nassert solution('''\n2\n3\n5\n''') == '5', 'Second example'\nassert solution('''\n3\n2\n1\n''') == '2', 'Third example'\nassert solution('''\n3\n10\n30\n''') == '30', 'Fourth example'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n2\n3\n''') == '3'\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5') == '2\\n1\\n2'\nassert solution('3\\n4\\n2 3 4\\n99\\n100') == '1\\n2\\n1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\nassert solution('4\\n4\\n3 6') == '1\\n1\\n1'\n\n'''"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"1\""
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\") == \"2\\n1\\n2\"\nassert solution(\"5\\n10\\n3 4\\n99 100\\n1\\n42\") == \"2\\n1\\n2\"\nassert solution(\"5\\n10\\n3 4\\n99 100\\n1\\n12\") == \"3\\n1\\n2\"\nassert solution(\"5\\n10\\n3 4\\n99 100\\n1\\n16\") == \"4\\n1\\n2\\n3\"\nassert solution(\"5\\n10\\n3 4\\n99 100\\n1\\n17\") == \"3\\n1\\n2\\n3\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8''') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''4\n4\n1\n1\n1\n1\n''') == '1'\nassert solution('''2\n4\n1\n1\n1\n1\n''') == '2'\nassert solution('''5\n5\n1\n1\n1\n1\n''') == '1'\nassert solution('''12\n12\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\\nYES\\nNO\\nYES\"\nassert solution('''\n1 1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"NO\\nNO\\nNO\\nYES\"\n'''"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'YES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO'\n\n'''\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\n\nassert solution('''\n4 1 3 2\n5 1 3 4\n5 2 3 4\n4 1 2 3\n''') == 'NO'\n\nassert solution('''\n3 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\n'''\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'YES', \"First\"\nassert solution('1 2 3 6') == 'NO', \"Second\"\nassert solution('5 2 6 27') == 'YES', \"Third\"\nassert solution('3 3 5 18') == 'YES', \"Fourth\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n\") == \"YES\"\nassert solution(\"2\\n1\\n0\\n\") == \"NO\"\nassert solution(\"1\\n0\\n0\\n\") == \"YES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''10 10 10 10\n1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == 'YES'\nassert solution('''2 4 7\n1 2\n1 2\n1 3\n1 4\n2 4\n1 5''') == 'NO'\nassert solution('''1 1 1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES', 'Sample Test 1'\nassert solution('''1 5 3 2\n5 3 7 8\n7 3 8 9\n8 3 9 10\n5 3 7 8\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO', 'Sample Test 2'\nprint('Tests passed!')\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\n'\nassert solution('''\n1 2\n1 2\n''') == 'NO\\n'\nassert solution('''\n2 1\n1 2\n''') == 'YES\\n'\nassert solution('''\n1 2\n3 2\n''') == 'NO\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n4\n5\n6''') == 'YES'\nassert solution('''4\n2\n3\n2\n5\n3\n3\n2\n1''') == 'YES'\nassert solution('''5\n3\n3\n3\n1\n2''') == 'NO'\nassert solution('''5\n0\n0\n3\n2\n4''') == 'YES'\nassert solution('''1\n0\n2\n4\n2\n1\n3''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n3 \n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n3 \n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n7 1 2 3 4 5\n\nOutput\nYES\n0\n3\n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n7 2 7 3 3 1 4\n\nOutput\nNO\n\n7 2 7 3 3 1 4\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 3 1 7 4 3 1') == 'YES'\nassert solution('7') == 'NO'\nassert solution('5 4 3 2 1 0') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n0 1 2 3 4\n''') == 'NO'\nassert solution('''\n7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nNO\n\n5\n4 3 2 1 0\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('5 0 1 2 3 4') == 'NO'\nassert solution('5 3 3 2 1 0') == 'YES'\nassert solution('5 4 3 2 1 0') == 'YES'\nassert solution('5 5 4 3 2 1') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('4 3 1 5 3') == 'YES'\nassert solution('0 1 2 3 4') == 'YES'\nassert solution('1 1 2 2 3') == 'NO'"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '8'\nassert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\""
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"7 1 1\\n\"\n    \"2 1 1\\n\"\n    \"4 0 1\\n\"\n    \"8 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 1 1\\n\"\n    \"1 0 1\\n\"\n    \"3 0 0\"\n) == \"18\"\nassert solution(\n    \"5 3\\n\"\n    \"3 0 0\\n\"\n    \"2 1 0\\n\"\n    \"3 1 0\\n\"\n    \"5 0 1\\n\"\n    \"3 0 1\\n\"\n) == \"8\"\nassert solution(\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\"\n) == \"-1\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '8'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\""
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '18'\nassert solution('5 2\\n6 0 0') == '8'\nassert solution('5 3\\n3 0 0') == '-1'"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 2\\n5 6') == '7'\nassert solution('2\\n6 2\\n8 6') == '7'\nassert solution('4\\n1 5\\n3 2\\n6 8') == '7'\nassert solution('6\\n7 8\\n7 9') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n'''\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\nassert solution(\"4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"6\"\nassert solution(\"2 1\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"6\"\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"-1\"\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\""
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"3\\n1 1 2 3 1\") == \"6\"\nassert solution(\"4\\n1 1 2 3 1\\n4 2\") == \"7\"\nassert solution(\"4\\n6 4 8 5\\n2 2\") == \"-1\"\nassert solution(\"5\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\") == \"7\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n3 2\n1 6\n3 5\n5 2 5\n''') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 1\n3 1\n4 1\n1 1\n2 2\n4 2\n3 3\n5 2\n2 1\n1 1\n3 1\n''') == '7'\nassert solution('''\n3\n3 1\n3 1\n2 2\n2 2\n1 2\n1 1\n''') == '2'\nassert solution('''\n3\n4 2\n4 1\n1 1\n3 1\n2 2\n''') == '-1'\nassert solution('''\n3\n2 1\n3 1\n4 1\n1 1\n2 2\n''') == '4'\nassert solution('''\n4\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '2'\nassert solution('4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5') == '7'"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n6 4 8 5\\n2 2\\n1 6') == '7'\nassert solution('6 4 8 5\\n2 2\\n1 6') == '-1'\nassert solution('5 1\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '7'"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '6'\nassert solution('3') == '-1'\nassert solution('4') == '7'\n\n\n\n\n\n'''\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '0'\nassert solution(solution.__name__) == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"15\") == \"0\"\nassert solution(\"15 16\") == \"3\"\nassert solution(\"4 8 4 8 15 16 8 16 23 15 16 42 23 42\") == \"0\"\nassert solution(\"12 4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    4 8 15 16 23\n    '''\n    ) == '5'\n    assert solution(\n    '''\n    12\n    4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n    '''\n    ) == '0'\n    assert solution(\n    '''\n    5\n    4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n    '''\n    ) == '4'\n    assert solution(\n    '''\n    15\n    4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n    '''\n    ) == '3'\n    assert solution(\n    '''\n    30\n    1234\n    2345\n    3456\n    7890\n    5678\n    6789\n    4567\n    7896\n    5678\n    3456\n    4567\n    7890\n    '''\n    ) == '0'\n    "
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\n\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '92'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"6 6\") == \"0\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution() == '1'\nassert solution() == '3'\nassert solution() == '2'\nassert solution() == '92'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"0\"\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"3\"\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"2\"\n\nassert solution('''\n3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"92\"\nassert solution('''\n3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"87654322\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5 5') == '0'\nassert solution('4\\n5 5') == '1'\nassert solution('3\\n1337 420') == '92'\nassert solution('3\\n123456789 1000000000') == '9150'\nassert solution('5\\n5 5') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n5 5') == '0'\nassert solution('6\\n13 42') == '92'\nassert solution('6\\n18 4') == '87654322'\nassert solution('6\\n123456789 1000000000') == '9150'"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n4\n5 5\n7 8\n12 2\n1 1\n''') == '1'\nassert solution('''\n6\n5 5\n4 4\n1 4\n2 4\n2 2\n''') == '2'\n\n'''\n3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n\n0\n3\n2\n92\n87654322\n9150\n'''"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\nassert solution('''\n6\n5 5\n13 37 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92'\nassert solution('''\n6\n5 5\n13 37 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '87654322'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"1\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\")) == \"3\"\nassert solution(input(\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\")) == \"2\"\nassert solution(input(\"7\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\")) == \"92\"\nassert solution(input(\"8\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\")) == \"87654322\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4 5\") == \"0\\n3\"\nassert solution(\"2\\n5 6\") == \"2\\n2\"\nassert solution(\"3\\n6 7\") == \"1\\n2\"\nassert solution(\"4\\n7 8\") == \"2\\n1\"\nassert solution(\"5\\n8 9\") == \"2\\n1\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n1\n0\n100\n''') == '0'\nassert solution('''\n3\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339'\nassert solution('6\\n0 1\\n4\\n2\\n4\\n5\\n6\\n7\\n') == '5'\nassert solution('6\\n0 5\\n4\\n2\\n4\\n5\\n6\\n7\\n') == '4'\nassert solution('6\\n0 2\\n4\\n2\\n4\\n5\\n6\\n7\\n') == '7'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n5 0 4\\n10 5 15\") == \"0\"\nassert solution(\"7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"12339\"\nassert solution(\"6\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"185\""
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\nassert solution('2\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '0'\nassert solution('3\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '3'\nassert solution('4\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '0'\nassert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\"\nassert solution(\"2\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"0\"\nassert solution(\"3\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"15\"\nassert solution(\"4\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"54306\"\nassert solution(\"5\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"999999995\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 6 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n1 1 4\n0 0 2\n0 0 1\n''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '12339'\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '7 2\\n'\n    '1 2 2 3 2 4 10\\n'\n) == '6'\nassert solution(\n    '8 2\\n'\n    '1 2 2 3 2 4 6 10\\n'\n) == '8'\nassert solution(\n    '7 3\\n'\n    '1 2 2 3 2 4 5\\n'\n) == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\\n\") == \"6\"\nassert solution(\"7 3\\n1 2 2 3 2 4 6 10\\n\") == \"8\"\nassert solution(\"7 4\\n1 2 2 3 2 4 5\\n\") == \"4\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"6\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10\n''') == '6'\n\nassert solution('''8 2\n1 2 2 3 2 4 6 10\n''') == '8'\n\nassert solution('''7 3\n1 2 2 3 2 4 5\n''') == '4'\n\nassert solution('''7 4\n1 2 2 3 2 4 5\n''') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('7 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('3 3\\n1 2 2 3 2 4 5') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2\\n') == '6'\nassert solution('8 2\\n') == '8'\nassert solution('7 3\\n') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1\\nABC'\n) == 'aBC'"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('A') == 'a'\nassert solution('ABC') == 'abc'\nassert solution('ABAB') == 'abc'\nassert solution('ABB') == 'ab'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'aBC', 'Should return aBC'\nassert solution('3 2') == 'CAB', 'Should return CAB'\nassert solution('3 3') == 'ABC', 'Should return ABC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"c\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'aBC'\nassert solution(input(\"\")) == ''\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\nABC''') == 'aBC', \"First\"\nassert solution('''3 2\n
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"a2b3c\"\nprint(solution(\"1 2 3\"))\nprint(solution(\"aBC\"))\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == 'aBC', solution\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('4\\nchicken 10\\ncold 10\\n2\\n') == '1\\n2'\n\nThe lexicographical order of the names of the three cities is chicken < cold < 2. For each of these cities, the restaurants in it are introduced in descending order of score. Thus, the restaurants are introduced in the order 1,2.\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3'\n\n------\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n\nstdin = input()\na = stdin.split()\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('3\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkhabarovsk 40') == '1\\n2\\n3\\n4\\n5\\n6'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2 3 4 5 1\"\nassert solution(\"6\") == \"5 4 3 2 1\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3,4,6,1,5,2'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 900') == 'Yes', 'TEST CASE ERROR'\nassert solution('500 900') == 'Yes', 'TEST CASE ERROR'\nassert solution('1000 900') == 'No', 'TEST CASE ERROR'\nassert solution('1 0') == 'Yes', 'TEST CASE ERROR'\nassert solution('5 0') == 'Yes', 'TEST CASE ERROR'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"100 10\") == \"Yes\"\nassert solution(\"100 500\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('5 3') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1000') == 'Yes'\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('10 1000') == 'No'\n\"\"\""
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 500') == 'No'\nassert solution('5 200') == 'Yes'\nassert solution('7 5') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"10 400\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 100') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 10000') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 1000') == 'No'\nassert solution('3 300') == 'No'\n\n\"\"\"\n\nimport math\n\nK, X = map(int, input().split())\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n\") == \"0.145833333333\"\nassert solution(\"4 5\\n\") == \"0.16666666666666\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 4\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\nassert solution(\"10 5\") == \"0.145833333333\"\nassert solution(\"10 7\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 10\n\"\"\") == \"0.1458333333\"\n\n\"\"\"\n\nThe following test cases are used to test your solution.\n\n--END_DESC--\n\nYou may add New Test Cases for this question in the Submissions box.\nYou can also add your own test cases in functions.py.\n\nNote: This is an extension of Problem 18.\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"0.1458333333\"\nassert solution(\"1 2\") == \"0.1458333333\"\nassert solution(\"6 4\") == \"0.1458333333\"\nassert solution(\"3 5\") == \"0.1458333333\"\nassert solution(\"6 8\") == \"0.1458333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '0.145833333333'"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10\n3 1 2 1''') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"1 1\") == \"0.5\"\nassert solution(\"2 1\") == \"0.5\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10') == '0.1458333333'\nassert solution('4 10') == '0.1458333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 10\n''') == '0.1458333333'\nassert solution('''2 10\n''') == '0.1458333333'\nassert solution('''3 10\n''') == '0.1458333333'\nassert solution('''4 10\n''') == '0.1458333333'\nassert solution('''5 10\n''') == '0.1458333333'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '2'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('SAT') == '1'\n\"\"\""
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"1\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '2'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"1\"\nprint(solution(\"\"))"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"TUE\") == \"0\"\nassert solution(\"WED\") == \"0\"\nassert solution(\"THU\") == \"0\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 10 20''') == '30 50 90 170 330 650 1290 2570 5130 10250'''"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30'\nassert solution('2 10 30') == '50'\nassert solution('4 2 100') == '330'"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10 20\") == \"30 50 90\""
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 10 20''') == '30 50 90 170 330 650 1290 2570 5130 10250'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\"\nassert solution(\"1 2 1\") == \"1\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 1 1 4') == '5'\nassert solution('5\\n1 3 2 1 4') == '4'\nassert solution('3\\n4 1 2') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == \"5\"\n\nassert solution('''\n5\n1 3 2 1 4\n''') == \"4\"\n\nassert solution('''\n3\n4 1 2\n''') == \"0\""
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4 1 2\n''') == '3'\nassert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''3\n4 1 2\n''') == '0'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4 1 2\") == \"4\"\nassert solution(\"3 1 2\") == \"2\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''\n3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('1 3 1 1 4') == '5'\nassert solution('3 1 2') == '0'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nNO'\nassert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO'\n\nassert solution('''\n5\n3 2 3\n10 20 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO'\n\nassert solution('''\n4\n10 20 30 10\n50 90 50 10\n10 30 90 10\n5 100 100 100\n''') == 'YES\\n1 1 1000000000\\nYES\\n10 10 10\\nNO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES\\nYES\\nYES\\nNO\\nNO'"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 3 4\n5 5\n6 7 8\n1 2 3 4 5 6 7 8 10 11\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'test_solution.txt'\n    ) == 'YES\\n1 1 1000000000\\nYES\\nNO\\nNO\\nYES\\n1 1 1000000000\\nYES\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '5'\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\nassert solution('1 2 3 1 1') == '2'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\nassert solution('1 2 3 1 1') == '1'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"1\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"2\"\nassert solution(input_) == \"2\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == \"4\"\nassert solution('''5 1 4\n4 2 3 4 1\n''') == \"1\"\nassert solution('''5 3 3\n1 2 3 1 1\n''') == \"5\"\n\n'''"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == '4'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2 6\n5 2 1 4 2\n''') == \"4\"\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == \"1\"\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == \"5\"\n\n\n'''\nYou are given a collection of distinct integers, no repeated integers, and an integer n. There are n boxes full of integers. You can pick up any integers of the collection from the boxes, and you want to put them in order from smallest to largest.\n\nYou can pick up any integer from the collection of integers, but you can't pick up a smaller integer than the number before it in the box, if there are multiple such integers.\n\nSpecifically, if you have integers in the box you are looking for, you can pick up any of those integers and drop them in the order of their original place in the box.\n\nWrite a function:"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '12'\nassert solution(input2) == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == '12'\n\nassert solution(stdin) == '0'\n\nstdin = input()\nn, k = stdin.split(\" \")\nn, k = int(n), int(k)"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"5 7\") == \"6 4\""
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"12\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\nassert solution('''10 1\naaaaaaa\nb''') == '0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n-1 -2 -1 -3') == '6'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n1\n2\n-1\n-2\n''') == '-1'\nassert solution('''\n1\n-2\n1\n-2\n''') == '-2'\nassert solution('''\n1\n-1\n1\n-1\n''') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 -1 -2''') == '2'\nassert solution('''4\n-1 -2 -1 -3''') == '6'\nassert solution('''10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''2\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''1\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '10'\nassert solution('''0\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n11''') == '0'\nprint(solution('''1\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000'''))\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2', \"example\"\nassert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6', \"example\"\nassert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997', \"example\"\nassert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997', \"example\"\nprint('\"Run\" is good. Great job!')"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n3\n-1\n1\n-1\n''') == '0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"1\n1\"\"\") == \"-1\"\nassert solution(\"\"\"4\n1\n2\n3\n-1\n-2\"\"\") == \"6\"\nassert solution(\"\"\"10\n-2\n8\n3\n8\n-4\n15\n5\n-2\n-3\n1\"\"\") == \"-2999999997\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 -1 -2''') == '2'\nassert solution('''4\n-1 -2 -1 -3''') == '6'\nassert solution('''10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 3 3\\n-1') == '1'\nassert solution('4\\n4 4 4 -1 -2\\n-1') == '3'\nassert solution('6\\n10 10 10 10 10 10\\n1 -1000000000 1 -1000000000 1 -1000000000') == '4'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\") == \"4 1\\n1 2\\n1 3\\n\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\nassert solution('8 9') == '3 2'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"\"\"3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4\"\"\"[1:-1]\n\nassert solution(\"\"\"\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n\"\"\") == \"\"\"3 5\n2 1\n3 2\n3 4\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n\"\"\") == \"\"\"3 4\n2 5\n6 5\n6 1\n2 7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n\"\"\") == \"\"\"4 3\n2 5\n3 5\n3 4\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n3 4\n2 1\n1 2\n1 3\n2 4\n\"\"\") == \"\"\"2 4\n1 2\n1 3\n\"\"\"[1:-1]\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'\nassert solution('''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n499993\\n\") == \"0\"\nassert solution(\"2\\n3\\n1000000000\\n\") == \"40\"\nassert solution(\"3\\n5\\n3000000000\\n\") == \"41664916690999888\"\nassert solution(\"4\\n5\\n1000000000\\n\") == \"40\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"40\"\nassert solution(\"3\") == \"41664916690999888\""
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('499993') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1') == '0'\nassert solution('4\\n4') == '40'\nassert solution('5\\n5') == '41664916690999888'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n') == '0'\nassert solution('2\\n5\\n') == '40'\nassert solution('3\\n5\\n') == '41664916690999888'\n\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2\n3\n5\n''') == '0'\nassert solution('''\n5\n5\n4\n7\n''') == '40'\nassert solution('''\n8\n4\n4\n4\n4\n4\n4\n''') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n5\n499993''') == '0'\nassert solution('''10\n10\n0\n3\n5\n0\n3\n4\n6\n4\n7''') == '16'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('99993') == '41664916690999888'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n5\n499993\n''') == '40'\nassert solution('''\n4\n7\n599996\n''') == '41664984652299984'\nassert solution('''\n4\n7\n599996\n''') == '41664984652299984'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '0'\nassert solution('''\n2\n3\n499993\n''') == '40'\nassert solution('''\n3\n1\n5\n''') == '40'\nassert solution('''\n4\n5\n7\n''') == '60'\n\nassert solution('''\n2\n3\n499993\n''') == '41664916690999888'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"6\\n5 5 9 1 8 9 5 7\") == \"1 1 1 1 2 -1 1 1 3 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INP) == OUT\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n10 20 30 40\\n') == '1 1 1 1 1 1 1 1 1\\n'\nprint(solution('''3\n5 7 6 7 5 4 4 6 4\n'''))\nprint(solution('3\\n7 4 1 2\\n'))"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 1 1\"\nassert solution(\"4\") == \"1 1 1 1\"\nassert solution(\"5\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\nprint('Congratulations!')\n'''\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n64\n32\n97\n2\n12345\n\"\"\") == \"\"\"YES\"\"\"\"\n\nassert solution(\"\"\"\n5\n12\n5\n12\n5\n\"\"\") == \"\"\"NO\"\"\"\"\n\nassert solution(\"\"\"\n5\n32\n3\n12\n5\n\"\"\") == \"\"\"YES\"\"\"\"\n\nassert solution(\"\"\"\n10\n50\n10\n10\n10\n\"\"\") == \"\"\"NO\"\"\"\"\n\nassert solution(\"\"\"\n3\n5\n3\n5\n\"\"\") == \"\"\"YES\"\"\"\"\n\n\"\"\"\"\"\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES'\nassert solution(\"1\\n2\\n3\") == 'YES'\nassert solution(\"1\\n2\\n3\") == 'NO'\nassert solution(\"1\\n2\\n3\") == 'YES'\nassert solution(\"1\\n2\\n3\") == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'NO'\nassert solution('64') == '2 4 8'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n64\n32\n97\n2\n12345\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n5\n2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10\n3\n2\n4\n5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n1\n1\n\"\"\") == \"NO\""
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    2\n    12345\n    ''') == \"YES\"\nassert solution('''\n    2\n    12345\n    ''') == \"NO\"\n'''\n    )\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1\n10\n2\n9\n3\n''') == 'YES'\nassert solution('''3\n2\n7\n2\n''') == 'NO'\nassert solution('''4\n3\n2\n4\n1\n''') == 'NO'\nassert solution('''5\n10\n10\n10\n10\n10\n''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES 2 4 8\"\nassert solution(\"64\") == \"YES 2 4 8\"\nassert solution(\"32\") == \"YES 2 4 8\"\nassert solution(\"97\") == \"YES 2 4 8\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n12\n7\n8\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n10\n11\n7\n8\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n9\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == 'abba'\nassert solution(input()) == '2'\nassert solution(input()) == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'baab'\nassert solution('8') == 'abbbaaba'\nassert solution('4') == 'abba'\nassert solution('6') == 'ababab'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'ba'\nassert solution('2') == 'ba'\nassert solution('4') == 'abba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ababab\"\nassert solution(\"2\\naa\") == \"ba\""
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n'\n    'bbbb') == 'abba'\nassert solution(\n    '6\\n'\n    'ababab') == 'ababab'\nassert solution(\n    '2\\n'\n    'aa') == 'ba'"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"aa\") == \"1\"\nassert solution(\"bbb\") == \"abba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nbbbb') == 'abba'\nassert solution('6\\nababab') == 'ababab'"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nbbbb') == 'abba'\nassert solution('6\\nababab') == 'ababab'\nassert solution('2\\naa') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '0'\nassert solution('2') == '1'\nassert solution('aa') == '1'\nassert solution('ababab') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''\n10\n3 1\n0 1\n3 4\n1 2\n4 1\n1 3\n3 2\n2 1\n''') == '37'\n\nprint(solution(open(0)))\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n6\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '8'\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"\n\nimport sys\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '15'\nassert solution('5 2') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\nassert solution(\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\") == \"15\"\nassert solution(\"5 2\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"5 3\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"4\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n3\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15', solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''')\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9', solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''')"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"15\"\nassert solution_pypy3() == \"9\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\") == \"2\"\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '2'\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1'\n) == '1'\nassert solution(\n    '2'\n) == '2'\nassert solution(\n    '3'\n) == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '2'\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n\"\"\") == \"1.000000000000\"\nassert solution(\"\"\"15\n\"\"\") == \"1.000000000000\"\nassert solution(\"\"\"100\n\"\"\") == \"1.000000000000\"\nassert solution(\"\"\"10\n\"\"\") == \"0.96\"\nassert solution(\"\"\"50\n\"\"\") == \"1.0\"\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('10') == '10.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"0.05\\n\"\nassert solution(\"3\\n\") == \"1.000000000000\\n\"\nassert solution(\"4\\n\") == \"1.000000000000\\n\"\nassert solution(\"5\\n\") == \"0.99500000\\n\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1.0'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('10') == '1.000000000000'\nassert solution('8') == '1.000000000000'\nassert solution('1.1') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.000000000000'\n\"\"\"\nimport math"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1.000000000000\"\nassert solution(\"4\") == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.8, 1, 1.2') == '1.000000000000'\nassert solution('1, 1, 1') == '1.000000000000'\nassert solution('1, 1, 1.2') == '1.000000000000'\nassert solution('1, 1, 1.8') == '1.000000000000'\nassert solution('1, 1, 1.8') == '1.000000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\nprint(solution())"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Hello World\"\nassert solution(input(\"> \")) == \"A+B\"\n\n\"\"\"\nimport sys\n\nN = int(sys.stdin.readline().strip())"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'Hello World\\n'\nassert solution('2\\n') == 'Hello World\\n'\nassert solution('2\\n1\\n') == 'Hello World\\n'\nassert solution('2\\n2\\n1\\n') == 'Hello World\\n'\n\"\"\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Hello World\"\nassert solution(input(2)) == \"Hello World\"\nassert solution(input(1)) == \"Hello World\""
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"11\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"21\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'\nassert solution('2') == 'A+B'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '4'\nassert solution('3') == '5'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3333'\nassert solution('4 4') == '4444'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2 2'\nassert solution('3 4') == '333'\nassert solution('5 4') == '5555'\nassert solution('10 10') == '1010'\nassert solution('4 4') == '4 4'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3333\""
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('4 5') == '4 5'\nassert solution('6 4') == '4 6'\nassert solution('8 8') == '8 8'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '3444', 'Should be 3444'\nassert solution('4 3') == '3333', 'Should be 3333'\nassert solution('1 1') == '1111', 'Should be 1111'\nassert solution('4 4') == '4444', 'Should be 4444'\nassert solution('2 3') == '2333', 'Should be 2333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3333', 'Should be '3333'!'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"33333\""
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333'\nprint('You passed the test!')"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\n'''\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"b\"\n\n\"\"\"\n\nimport sys\nimport string\n\nfrom itertools import chain\n\nstdin = sys.stdin.readline().strip()\n\nalphabet = string.ascii_lowercase\nl = alphabet.index(stdin)\n\nfirst = alphabet[l+1]\n\nprint(first)"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('B') == 'Z'\n\"\"\""
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == 'bc', \"Sample check\"\nreal_input = input()\nprint(solution(real_input))\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('z') == 'a'\nassert solution('a') == 'b'\nassert solution('b') == 'c'\n\"\"\"\n\na = input()"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"b\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\""
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\nprint(solution())\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('c') == 'b', 'Should be \"c\" followed by \"b\"'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"\n\nfrom collections import defaultdict\n\nclass Solution:\n    def letter_lst(self, stdin: str) -> str:\n        #Using Dict\n        dic = defaultdict(int)\n        for i in stdin:\n            dic[i] += 1\n\n        arr = sorted(dic.keys())\n        return arr[1]\n\nassert Solution().letter_lst(\"a\") == \"b\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"oder\", \"atc\"]) == \"atcoder\", 'Too hard!'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input().split()) == 'atcoder'\nprint(solution(input().split()))\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", f\"Got {solution('oder atc')} instead.\"\n\"\"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('oder atc') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('oder atc') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('ordertatc') == 'tatcoder'"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('soder') =='soder'\nassert solution('atcs') == 'atcs'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n1 5 7 8 2\"\n) == \"0\"\nassert solution(\n    \"6\\n5 1 2 4 6 3\"\n) == \"1000000\"\nprint(solution(\n    \"2\\n1000000 1000000\"\n))\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"100000000 1000000\") == \"100000000\"\nassert solution(\"2\") == \"100000000\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3\n2\n4\n''') == '1'\nassert solution('''\n4\n1\n2\n3\n''') == '1'\nassert solution('''\n4\n1\n2\n3\n''') == '2'\nassert solution('''\n4\n1\n2\n3\n''') == '3'\nassert solution('''\n5\n1\n2\n3\n4\n''') == '4'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n1\n''') == '0'\nassert solution('''\n2\n1000000 1000000\n''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(in1) == out1"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nassert solution(stdin='6 2 3 3') == '5'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n1 1 100 99\n100\n''') == '1'\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution('''\n5 8 9 0 0\n''') == '10'\nassert solution('''\n5 5\n''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 3\n5 6\n7''') == \"6\"\nassert solution('''4 2 2\n2 3 5 4 1\n5''') == \"7\"\nassert solution('''6 2 3\n5 6\n4 1\n2 7\n9 8\n1\n2''') == \"7\"\nassert solution('''4 2 1\n1 2\n3\n1\n7''') == \"7\"\nassert solution('''5 2 3\n3 4\n1 6\n5 2\n2 1\n9''') == \"9\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2 3 3\n7 10 50 12 1 8\n''') == '5'\n\nassert solution('''\n1 1 100 99\n100\n''') == '1'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    6 2 3 3\n    7 10 50 12 1 8\n    '''\n) == '5'\n\nassert solution(\n    '''\n    1 1 100 99\n    100\n    '''\n) == '1'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"1 1 100 99\") == \"1\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8') == '5'\nassert solution('6 2 3 3\\n1 3 5 4 2 7 6') == '6'\nassert solution('6 2 3 3\\n1 3 5 4 2 7 6\\n3 3 2 5 4 4 3') == '6'\n\nprint(solution(input))\n\n\"\"\""
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '3 2 0 7 10 14'"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('3 2') == '3 2'\nassert solution('6 3') == '3 2'\nassert solution('4 2') == '0 1 2 3'\nassert solution('0 1 2 3') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 3\\n3 2 0 6 10 12\"\n) == \"3\"\n\nassert solution(\n    \"4 2\\n0 1 2 3\"\n) == \"0 1 2 3\"\n\nassert solution(\n    \"1000000000 6 3\\n3 2 0 6 10 12\"\n) == \"0\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0 1 2 3'"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3 2 0 7 10 14\""
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n\") == \"3 2 0 6 10 12\", solution(\"6 3\\n\")\nassert solution(\"4 2\\n\") == \"0 1 2 3\", solution(\"4 2\\n\")\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    6 3\n    3 2 0 6 10 12\n    ''') == '3'\nassert solution('''\n    4 2\n    0 1 2 3\n    ''') == '0 1 2 3'\nassert solution('''\n    1\n    1\n    ''') == '2'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '17'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4') == '8'\nassert solution('5 3\\n4 2\\n3 3') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2 0 2 0\\n'\n    '2 4\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n    ) == '8'\nassert solution(\n    '5 3\\n'\n    '4 2\\n'\n    '2 5\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n    ) == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"5 3\") == \"20\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 0 2 0') == '8'\nassert solution('5 6') == '20'\nassert solution('5 3') == '17'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '8'\nassert solution('1 2 0 2 0') == '20'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '8', 'Easy'\nassert solution('3 3') == '20', 'Easy'\nassert solution('5 3') == '20', 'Easy'\nassert solution('6 3') == '19', 'Easy'\nassert solution('10 10') == '20', 'Easy'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2\\n3 5') == '21'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"3 3\") == \"20\"\nassert solution(\"4 2\") == \"10\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\nassert solution('2 6') == '1'"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"NO\"\n\n\"\"\"\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\""
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''10\n1 1 1 1 1 1 1 1 1\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''1\n1 1 1 1 1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 1 10 10\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"2\\n10 5 1 10 5 1 1 1\") == \"NO\"\nassert solution(\"2\\n1 1 1 1 1 1 1 1\") == \"YES\""
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5') == 'YES'\nassert solution('5\\n1\\n1 1 1 1 1 1 1 1') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"YES\"\nassert solution(\"2\\n4\") == \"YES\"\nassert solution(\"3\\n3\") == \"NO\"\nassert solution(\"5\\n4\") == \"YES\"\nassert solution(\"6\\n4\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'YES\\nYES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'NO\\nNO\\nYES\\nYES\\nYES\\nYES'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2\") == \"3\"\nassert solution(\"4 4 1\") == \"4\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('6 10 5') == '3'\n\nimport heapq\nfrom collections import defaultdict\nimport sys\nfrom sys import stdin"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 5\\n2 5 1\\n5 3 9') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\nassert solution('8 10 8\\n1 2 8\\n3 4 8\\n3 5 2\\n3 6 2\\n2 4 4\\n6 4 1\\n6 3 4\\n4 7 4\\n5 3 4\\n5 4 5\\n4 5 2\\n4 1 4\\n5 6 6\\n6 7 6\\n6 8 6\\n7 2 5\\n7 4 6\\n8 2 7\\n4 5 7\\n5 1 8\\n7 5 2\\n8 7 1\\n6 8 6\\n1 3 3\\n2 4 5\\n4 6 4\\n2 3 6\\n5 4 5\\n3 7 2\\n1 8 2\\n7 1 3\\n3 2 6\\n3 2 7\\n2 4 8\\n6 5 8\\n1 4 6\\n3 5 6\\n1 6 1\\n3 2 4\\n2 4 5\\n5 3 7\\n8 5 3\\n2 2 5\\n7 1 8\\n3 4 3\\n8 2 2\\n1 6 5\\n6 6 6\\n4 7 5\\n3 4 8\\n5 5 6\\n2 1 6\\n6 6 4\\n5 2 3\\n1 6 8\\n3 6 7\\n1 8 5\\n2 7 5\\n3 6 2\\n5 3 4\\n6 1 4\\n3 6 4\\n4 6 7\\n6 5 5\\n4 5 4\\n2 4 8\\n4 3 4\\n6 4 6\\n5 6 3\\n2 6 2\\n7 4 1\\n1 3 7\\n2 2 5\\n8 4 5\\n1 1 5\\n8 6 2\\n5 6 1\\n3 7 1\\n3 2 2\\n2 4 4\\n5 5 3\\n3 1 2\\n4 3 7\\n8 6 1\\n4 6 1\\n6 3 6\\n1 1 1\\n5 2 8\\n3 7 8\\n6 3 4\\n6 4 6\\n4 1 3\\n1 4 3\\n8 7 6\\n3 5 4\\n1 3 4\\n5 6 4\\n5 7 1\\n4 2 5\\n8 1 5\\n2 2 7\\n5 2 4\\n7 3 3\\n4 8 7\\n2 3 6\\n5 4 6\\n1 3 3\\n6 7 4\\n5 4 3\\n8 1 2\\n7 5 5\\n2 7 4\\n4 2 8\\n6 5 3\\n8 2 8\\n6 6 3\\n2 1 1\\n3 4 4\\n6 4 5\\n2 6 4\\n4 6 2\\n3 1 6\\n1 7 4\\n2 1 8\\n3 2 2\\n1 4 5\\n7 5 6\\n3 5 1\\n4 5 6\\n3 6 7\\n8 4 5\\n4 6 6\\n1 1 2\\n6 5 8\\n3 6 6\\n1 7 3\\n4 3 4\\n3 6 2\\n8 4 2\\n7 3 4\\n2 5 4\\n3 3 7\\n2 6 5\\n8 3 4\\n4 1 3\\n8 5 5\\n2 6 5\\n1 4 5\\n2 5 2\\n3 4 4\\n7 3 5\\n2 7 3\\n1 7 6\\n5 7 2\\n6 5 1\\n4 3 5\\n4 6 4\\n7 6 4\\n3 4 6\\n1 5 7\\n3 3 1\\n6 4 1\\n3 4 2\\n2 4 5\\n5 4 1\\n3 5 5\\n4 5 1\\n4 1 4\\n5 7 4\\n2 5 2\\n4 4 4\\n7 5 1\\n4 4 1\\n7 1 6\\n2 4 1\\n6 1 5\\n7 5 4\\n1 4 7\\n1 4 5\\n2 5 1\\n3 7 6\\n1 2 1\\n4 3 1\\n8 4 1\\n1 1 1\\n2 2 5\\n4 7 6\\n1 1 6\\n3 4 5\\n1 5 1\\n6 5 4\\n2 6 5\\n5 6 2\\n3 3 3\\n4 7 3\\n1 4 1\\n6 5 4\\n4 4 6\\n2 7 5\\n3 5 8\\n2 5 6\\n2 5 5\\n3 6 6\\n2 6 4\\n6 5 5\\n3 1 6\\n4 7 2\\n5 6 4\\n6 7 2\\n3 2 5\\n1 6 6\\n3 6 1\\n1 6 1\\n5 4 4\\n6 6 5\\n4 3 6\\n1 4 6\\n1 3 5\\n1 6 4\\n8 3 6\\n5 6 4\\n1 2 4\\n3 7 3\\n6 6 4\\n6 6 5\\n5 4 6\\n1 5 3\\n3 3 5\\n2 3 4\\n1 4 4\\n3 3 4\\n8 5 5\\n1 4 5\\n3 4 4\\n6 4 1\\n8 4 6\\n6 2 2\\n8 1 2\\n4 6 2\\n7 7 3\\n3 2 4\\n8 3 4\\n5 7 4\\n1 4 3\\n2 5 4\\n4 5 3\\n2 1 4\\n7 5 3\\n6 1 3\\n5 1 3\\n1 1 3\\n3 5 3\\n8 5 4\\n6"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == \"9\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 15 18\") == \"9\"\nassert solution(\"7 13 12\") == \"13\""
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5'\n) == '3 1'\nassert solution(\n    '6'\n) == '7 2'\nassert solution(\n    '10'\n) == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 3 4 2\n\n''') == '3 1'\n\nassert solution('''6\n1 5 12 13 2 15\n\n''') == '7 2'\n\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\nprint(solution(*('10 5 12 13 2 15 8150'.split())))\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n5\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3 4 2\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\""
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1 1 3 4 2\n\"\"\"\n) == \"3 1\"\n\nassert solution(\n\"\"\"\n6\n1 5 12 13 2 15\n\"\"\"\n) == \"7 2\"\n\nassert solution(\n\"\"\"\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\"\"\"\n) == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 5 12 13 2 15\\n') == '7486 3'\n\nassert solution('5\\n1 1 3 4 2\\n') == '3 1'\n\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '4'\nassert solution('7') == '1'\nassert solution('8') == '3'\nassert solution('10') == '1'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == '2 5000 9 10000 1 7'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\\n\") == \"3\"\nassert solution(\"100000\\n\") == \"4\"\nassert solution(\"10\\n\") == \"2\"\nassert solution(\"10000\\n\") == \"1\"\n\nstdin = \"\"\"10\n\"\"\"\n\nassert solution(stdin) == \"3\""
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '4'\nassert solution('100') == '2'\nassert solution('1000') == '2'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n0\") == \"1\"\nassert solution(\"2\\n7\\n8\") == \"2\"\nassert solution(\"3\\n8\\n1\") == \"4\"\nassert solution(\"5\\n9\\n9\") == \"4\"\nassert solution(\"6\\n3\\n7\") == \"6\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n1\n5009\n7\n9876\n10000\n10\n''') == '1'\nassert solution('''\n1\n5009\n7\n9876\n10000\n10\n''') == '1'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution('5\\n1\\n10') == '1\\n100'\nassert solution('3\\n900\\n500\\n100') == '1\\n500\\n500\\n1000'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == \"1 1 1 1 1 3 3\\n2 3 3 2 3 1 2\\n1 1 1 1 1 3 3\\n1 1 1 1 1 2 2\\n2 3 3 3 2 1 2\\n1 1 1 1 1 4 4\\n4 4 4 4 4 4 4\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2 1 1\"\nassert solution(\"5\") == \"4 2 2 2 1\"\nassert solution(\"6\") == \"4 3 3 4 4 3\"\nassert solution(\"1\") == \"0 0 0 0\"\n\nstdin = \"\"\nfor _ in range(int(input())):\n    stdin += str(input())\n\nprint(*solution(stdin))\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 5\\n3 3 3\\n2 3 3 2 1 3\\n1 1 1 1 1\\n2 2 2 2 2\\n4 4 4 1 4\\n5 5 5 1 2 4 3'\n\nassert solution('''8\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2 2 2 2 2'\nassert solution('2') == '3 3 3 3 3'\nassert solution('3') == '4 4 4 3 2 2'\nassert solution('4') == '5 5 5 1 2 1 2'\nassert solution('5') == '6 6 6 1 1 1 1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3\\n2 3 3 2 3 2 1 3\\n1\\n2 2 2 2 2 1 2\\n4 4 4 4 1 4\\n5 5 5 5 5 5\\n4 4 4 4 4 4\""
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 3 3 3'\n\nassert solution('''\n10\n3\n1 2 3 4 5 6 7 8 9 10\n1 2\n8\n4 9 2\n1 7 8 9 1\n2 8\n5 1 9 2\n7 8\n8 4 6\n5 9 8 3 2\n2 7\n4 8 9 5 6 7\n3 1 7 8 9 2\n8\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '8 5 6 7 8 9 10'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"4\") == \"3 3 3 3\"\nassert solution(\"6\") == \"3 3 3 3 4 4\"\nassert solution(\"7\") == \"4 4 4 4 4 4 4 4\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '6'\nassert solution(solution.__doc__) == '3'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 1 2 3 3 1 4 3 3 2 1 2 4 4 4 2 1 2 1 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4 1 4 4 2 1 3 2 4 4 2 1 2 1 2 1 3 3 1 2 4"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n\"\n    \"2\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 2 2\\n\"\n    \"1\"\n    ) == \"2\"\nassert solution(\n    \"3\\n\"\n    \"1 2 3\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1\\n\"\n    \"2\"\n    ) == \"3\"\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"2\"\n    ) == \"4\""
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '1'\nassert solution('''3\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '2'\nassert solution('''3\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '2'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1 2 3\\n4') == '2\\n2\\n1\\n'\nassert solution('2\\n3\\n1 2 3\\n4') == '1\\n1\\n1\\n'\nassert solution('3\\n3\\n1 2 3\\n4') == '1\\n1\\n1\\n'"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 3 1\"\nassert solution(input) == \"2 3 1\""
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == \"3\"\nassert solution('''3\n1 2 3\n3\n1 2\n''') == \"2\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n3\n4\n''') == '2'\nassert solution('''3\n1 2 3\n2\n1\n''') == '2'\nassert solution('''4\n1 2 3 4\n3\n2\n1\n''') == '4'\nassert solution('''5\n1 2 3 4\n5\n6\n7\n8\n9\n10\n''') == '5'\nassert solution('''9\n1 2 3 4 5 6 7 8\n8\n9\n10\n''') == '4'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == \"2\"\nassert solution('3') == \"2\"\nassert solution('4') == \"1\"\nassert solution('5') == \"3\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"\n\n\n\n\"\"\""
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2 \nassert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('5 4\\n10 4 10 15\\n1 2\\n4 3\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '5 4 0 5 3 3 9 0 2 5 '\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 '"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == '0 0 1 2'\nassert solution(\"10 4\") == '5 4 0 5 3 3 9 0 2 5'"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\"\nassert solution(\"3 3\\n1 3 2\\n1 2 3\") == \"NO\"\nassert solution(\"5 1\\n5 1 2\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"5 2\\n5 1 2\\n5 1 3 4\") == \"NO\"\nassert solution(\"5 1\\n5 1 2\\n5 1 3 4\\n5 1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 2') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 3 2') == 'YES'\nassert solution('2 3 1') == 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 2\\n1 2 3\\n1 3 2\"\n) == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 2\\n1 2 3\\n1 3 2\\n\") == \"YES\\nabb\\n\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"a\"\nassert solution(\"1 2 3 4\") == \"a\"\nassert solution(\"1 2 3 4 5\") == \"a\"\nassert solution(\"1 2 3 4 5 6\") == \"a\"\nassert solution(\"1 2 3 4 5 6 7\") == \"a\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1 2 3\\n\"\n) == \"YES\"\nassert solution(\n    \"3 1\\n\"\n    \"1 2 3\\n\"\n) == \"NO\"\nassert solution(\n    \"3 1\\n\"\n    \"1 3 2\\n\"\n) == \"NO\""
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 3 2\\n') == 'YES'"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('YES') == 'abb'\nassert solution('NO') == 'NO'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('4 3') == 'NO'\nassert solution('5 1') == 'YES'\nassert solution('1 3') == 'YES'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '64'\nassert solution('2') == '2'\nassert solution('10 10 10 10 10') == '64'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6'\nassert solution('2') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 3 2'\nassert solution('4') == '1 3 5 4'\nassert solution('6') == '1 3 5 2 4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\nassert solution('2') == '3'\nassert solution('10 10 10 10') == '1 3 2 1'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n20 10 20\n''') == '43\nassert solution('''4\n10 10 10 10\n''') == '69\nassert solution('''6\n5 4 5 4 4 5\n''') == '69\nassert solution('''2\n1 4\n''') == '3\n'''\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"43\"\nassert solution(\"2\") == \"2 1\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n5 4 5 4 4 5\n''') == '69'\nassert solution('''6\n5 4 5 4 4 5\n''') == '6 1 3 5 2 4'\nassert solution('''3\n5 4 5 4 4 5\n''') == '43'\nassert solution('''2\n1 4\n''') == '2 1'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''3\n3 6 5''') == '2'\nassert solution('''4\n7 5 8 6''') == '2'\n\"\"\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"0\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"7\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('8\\n1 1 2 2 2 3 3 3') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '4'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"4\\n2 5 1 3\") == \"1\"\nassert solution(\"3\\n2 5 1 3\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 3, 3, 3]) == '1'\nassert solution([4, 2, 4, 1, 4, 2, 4]) == '3'\nassert solution([1, 1, 1]) == '0'\nassert solution([1, 1, 1, 2]) == '1'\nassert solution([1, 2, 3, 4, 5, 6, 7]) == '1'"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"3\\n3 3 3 3\") == \"3\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('7') == '2'\nassert solution('12') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 3 3 3\\n') == '1'\nassert solution('1\\n3 2\\n') == '0'\nassert solution('1\\n3 4\\n') == '1'\nassert solution('2\\n1 2\\n') == '0'"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1\n2\n3\n''') == '1'\n\nassert solution('''10\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\n\nassert solution('''1\n1\n''') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"2\\n2 2\\n\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"5\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4 3 2 1''') == '1'\nassert solution('''3\n5 3 2 1''') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 3 5\") == \"1\"\nassert solution(\"4 4 4 4 5\") == \"0\""
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 4 5 3 1\") == \"2\"\nassert solution(\"5 5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 2 3 4 5\") == \"1\"\nassert solution(\"2 2 2 3 4 5\") == \"2\"\nassert solution(\"0 0 0 0 0 0\") == \"5\"\nassert solution(\"0 1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('5 0 2 3 4') == '5'\nassert solution('2 2 2 2 2') == '2'\nassert solution('5 5 5 5 5') == '5'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1'"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 -3 2 3 -4 5') == '2'\nassert solution('0 -3 -4 2 3 -5') == '3'\nassert solution('-1 -2 -3 -4 -5') == '-5'\nassert solution('-1 -3 -4 -2 -5') == '-2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('3 3 1 2 1') == '2'\nassert solution('1 1 1 2 2') == '3'\nassert solution('1 1 1 1 2') == '1'\n\n\"\"\"\n\nx_1, x_2, x_3, x_4, x_5 = map(int, input().split())"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 2 3 4\") == \"2\"\nassert solution(\"0 1 2 3 4 5\") == \"2\"\nassert solution(\"2 2 2 2 2\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'\n\n------\"\"\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 1 1 1 1') == '2'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == '3'\n\n'''\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"10 10\") == \"20\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '0'\nassert solution('2 5') == '1'\nassert solution('3 5') == '1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"10 10\") == \"9\""
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 20\") == \"20\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 5]) == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 5') == '0'\nassert solution('12 5') == '0'\nassert solution('50 5') == '0'\nassert solution('3 6') == '0'\n\n'''\n\nH, W = map(int, input().split())\n\nw = W // 3\nh = H // 3"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 5\") == \"1\"\nassert solution(\"15 7\") == \"4\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 10 100\\n') == 'Yes'"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 10 100\\n') == 'Yes'\nassert solution('2\\n2 2 2\\n') == 'No'\nassert solution('5\\n1 2 3 4 5\\n') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Yes\""
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 10 100\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n10\n1 2 4 8 16 32 64 128 256 512 1000\"\"\") == \"Yes\"\nassert solution(\"\"\"\n10\n2 3 8 9 1\"\"\") == \"No\"\n\"\"\"\n        \n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'\nassert solution('5\\n1 2 3 4 5') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 10 100\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 10 100\n''') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 10, 100]) == 'Yes'\nassert solution([1, 10, 100, 200]) == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n    \"3\",\n    \"1 10 100\",\n]) == \"Yes\"\n\nprint(solution([\n    \"4\",\n    \"2 3 4\",\n]))"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n\nsolution()"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\""
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"zzz\") == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\""
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('3 3 2') == 'NO'\n\"\"\"\nimport math\nA,B,C = map(int,input().split())\n\ns=0\nl=[]\nfor i in range(1,C+1):\n    if math.gcd(A,i)==1 and i>=A:\n        s+=i\n        l.append(i)\n        if len(l)==B:\n            break\n    if len(l)>=B:\n        break\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 5 3') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('5 4') == 'NO'\nassert solution('7 2') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == 'YES'\nassert solution(2) == 'YES'\nassert solution(3) == 'YES'\nassert solution(4) == 'YES'\nassert solution(5) == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 5 1\\n') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 7 1') == 'NO'\nassert solution('5 5 1') == 'YES'\n\"\"\""
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 5 1\n''') == 'YES'\nassert solution('''7 5 2\n''') == 'NO'\n'''\n\n\na, b, c = map(int, input().split())\na, b, c = int(a), int(b), int(c)\nn = 1\nwhile (1):\n    if n * b == (a * n) + (c * n):\n        print(\"YES\")\n        break\n    elif n * b > (a * n) + (c * n):\n        print(\"NO\")\n        break\n    else:\n        n += 1"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('9 12 3') == 'NO'\nassert solution('1 3 8') == 'YES'"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('6 5 1') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 2') == 'NO'\nassert solution('7 5 3') == 'YES'\nassert solution('7 5 4') == 'NO'\nassert solution('7 5 5') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"5 1\") == \"NO\""
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"4 4\") == \"9\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\", \"Should be 1\"\nassert solution(\"4 5\") == \"2\", \"Should be 2\"\n\n\"\"\"\nA, B = map(int, input().split())\nprint(A*B - A + 1)\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nprint(solution('2 2'))\nassert solution('5 5') == '25'\nprint(solution('5 5'))\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"4 4\") == \"16\"\n\"\"\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\""
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('2 1') == '1'\n\n'''"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\n\n\"\"\""
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution(\"1 2\") == '3'\nassert solution(\"3 4\") == '6'\n\n\"\"\"\n\nA, B = input().split()\nA = int(A)\nB = int(B)\n\narea = (A * B) * 0.5\nprint(area)\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 4 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"1\", \"4\", \"1\"]) == \"3\"\nassert solution([\"9\", \"4\", \"1\"]) == \"0\"\nassert solution([\"3\", \"3\", \"1\"]) == \"2\"\nassert solution([\"3\", \"1\", \"1\"]) == \"1\"\nassert solution([\"4\", \"1\", \"1\"]) == \"0\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13 3 1') == '3', solution('13 3 1')\nassert solution('12 3 1') == '2', solution('12 3 1')\nassert solution('13 9 1') == '1', solution('13 9 1')\nassert solution('12 9 1') == '0', solution('12 9 1')\nassert solution('13 5 1') == '2', solution('13 5 1')\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('1 2 5') == '4'\nassert solution('2 4 5') == '5'\n'''\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([13, 3, 1]) == \"3\"\nassert solution([10, 5, 10]) == \"2\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"22 3 2\") == \"2\"\nassert solution(\"19 4 3\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 5 1\"\n    ) == \"3\"\n\nassert solution(\n    \"5 1 1\"\n    ) == \"1\"\n\nassert solution(\n    \"1 1 1\"\n    ) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\") == \"3\"\nassert solution(\"15 14 4\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('6\\n5 5\\n5 2\\n1 3\\n4 2\\n0 4\\n5 6\\n') == '1'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3\\n'\n    '2 0\\n'\n    '3 1\\n'\n    '1 3\\n'\n    '4 2\\n'\n    '0 4\\n'\n    '5 5\\n'\n) == '2'\nassert solution(\n    '4\\n'\n    '1 2\\n'\n    '3 4\\n'\n    '0 5\\n'\n    '2 6\\n'\n) == '1'\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    2\n    0 0\n    3 1\n    1 3\n    4 2\n    0 4\n    5 5\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    3\n    2 0\n    3 1\n    1 3\n    4 2\n    0 4\n    5 5\n    \"\"\") == \"0\"\nassert solution(\"\"\"\n    3\n    2 0\n    3 1\n    1 3\n    4 2\n    0 4\n    5 5\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    4\n    2 0\n    3 1\n    1 3\n    4 2\n    0 4\n    5 5\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    5\n    2 0\n    3 1\n    1 3\n    4 2\n    0 4\n    5 5\n    \"\"\") == \"3\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2, 3, 1, 4, 2, 5, 5]) == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '2'\nassert solution('5\\n2 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"4\\n0 1\\n1 4\\n2 2\\n3 3\") == \"1\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '7'\nassert solution('5 1') == '9'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 4\n0 3''') == '7'\nassert solution('''5 1\n1 1 2 1 1''') == '1'\n'''\n\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 4\n0 3\n\"\"\") == \"7\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"7\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\n0 3\n\n''') == '7'\nassert solution('''1 5\n0 4\n\n''') == '5'\nassert solution('''3 10\n0 4\n4 5\n\n''') == '10'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 10\n4\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n2 5\n0 5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n4 5\n0 5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n4 2\n1 2\n\"\"\") == \"10\""
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '6'\n\"\"\"\nfrom itertools import accumulate\n\nN, T = map(int, input().split())\ntimers = list(map(int, input().split()))"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 5\") == \"7\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"4 5\") == \"8\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '7'\nassert solution('1 2 3 4') == '14'"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4') == '7'\nassert solution('2 4') == '7'\n\"\"\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\n\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\nprint(solution('''\n100\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n'''))\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0'\nassert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0'\nassert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '2'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '1'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\nL 100\nR 100000\nR 123\n? 123\nL 101\n? 100\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"1\""
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\n\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0'\n\nassert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\n\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n8\n16\n32\n64''') == '4'\nassert solution('''6\n10\n20\n40\n80\n160\n320''') == '6'\nassert solution('''4\n12\n24\n36\n72''') == '-1'\nassert solution('''1000000000000000000\n''') == '-1'"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '2'\nassert solution('7\\n') == '4'\nassert solution('11\\n') == '-1'\nassert solution('13\\n') == '6'\nassert solution('42\\n') == '-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\\n') == '4'"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == \"6\"\nassert solution('''\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == \"6\"\nassert solution('''\n8\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == \"8\"\n''')\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1\") == \"3\"\nassert solution(\"1\") == \"4\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n1\n2\n4\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n2\n3\n1\n2\n4\n1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1\n2\n3\n1\n2\n4\n1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1\n2\n3\n1\n2\n4\n1\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n1\n2\n3\n1\n2\n4\n1\n\"\"\") == \"72\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000''') == '6'\n\nassert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000''') == '-1'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '8'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"4\"\nassert solution(\"1\") == \"6\"\nassert solution(\"1\") == \"72\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\") == \"6\\n72\""
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\\nNO\\nYES\\nYES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''\n3\n2\n1 1 2\n1\n100\n''') == 'NO'\n\nassert solution('''\n4\n1\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''\n4\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"YES\"\nassert solution('''\n3\n0 0 0\n4\n0 2 0\n2\n1 0 0\n1\n100\n\n''') == \"NO\"\nassert solution('''\n3\n2 0 2\n4\n2 2 2\n2\n3 2 2\n3\n100\n\n''') == \"NO\""
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('100') == 'YES'\nassert solution('100') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"10\\nzcabd\\dbacz\") == \"0\""
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == 4\nassert solution('5\\nzcabd\\dbacz\\n') == 0"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\dbacz') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"7\\n\"\n    \"abacaba\\n\"\n    \"bacabaa\\n\"\n    ) == \"4\"\n\nassert solution(\n    \"5\\n\"\n    \"zcabd\\n\"\n    \"dbacz\\n\"\n    ) == \"0\""
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nzcabd\ndbacz\n\n5\nzcabd\ndbacz''') == \"4\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nabacaba\nbacabaa\n''') == '4'\nassert solution('''\n10\nzcabd\ndbacz\n''') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nabacaba\\nbacabaa\\n\") == \"4\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '7\\nabacaba\\nbacabaa\\n'\n) == '4\\n'\n\nassert solution(\n    '5\\nzcabd\\dbacz\\n'\n) == '0\\n'\n\nassert solution(\n    '5\\nabacaba\\n'\n) == '3\\n'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\nabacaba\nbacabaa\n''') == '4'\nassert solution('''\n5\nzcabd\ndbacz\n''') == '0'\nassert solution('''\n4\nzcabd\ndbacz\n''') == '4'\n\n\n'''"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1 1 1000000000\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\""
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n\") == \"198\\n-17\\n2999999997\\n0\\n1\\n\"\nassert solution(\"2\\n1 1\\n1 1\\n\") == \"0\\n1\\n\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 1000000000 1 6\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n\nsolution(input())\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"8\"\nassert solution(\"1000000000 1 6\") == \"2999999997\"\nassert solution(\"1 1 1000000000\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 1 1000000000') == '1000000000'\nassert solution('1 1 999999999') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n100 1 4''') == '8'\nassert solution('''5 2 3\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999''') == '198'\nassert solution('''5 2 3\n1 10 5\n1 1 1000000000\n1 1 999999999\n1 1 999999999''') == '-17'\nassert solution('''5 2 3\n100 1 4\n1 1000000000\n1 1 999999999\n1 1 999999999''') == '2999999997'\nassert solution('''5 2 3\n1 10 5\n1 1 1000000000\n1 1 999999999\n1 1 999999999''') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '8'\nassert solution() == '198'\nassert solution() == '-17'\nassert solution() == '2999999997'\nassert solution() == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"198\"\nassert solution(\"\"\"\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"2999999997\"\nassert solution(\"\"\"\n4\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"1\"\n\nprint(solution(input()))"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n1\\n3\\n6\\n7\\n9\\n13') == '1'\nassert solution('3\\n4\\n1\\n3\\n6\\n7\\n9\\n13') == '3'\nassert solution('4\\n6\\n1\\n3\\n6\\n7\\n9\\n13') == '3'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1\\n'\n    '2\\n'\n    '6\\n'\n    '13\\n'\n    '14\\n'\n    '3620\\n'\n    '10000\\n'\n    '1000000000000000000\\n'\n) == '3'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2') == '1'\nassert solution('6\\n1') == '3'\nassert solution('12\\n100') == '13'\nassert solution('34000\\n27') == '2649'\nassert solution('20\\n1000000000000000') == '19'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '69'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nassert solution('''\n5\n10\n5\n4\n15\n6\n15\n16\n''') == '4'\nassert solution('''\n2\n1\n1\n''') == '2'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n9') == '13'\n\n'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n20\n''') == '3'\n\nassert solution('''\n2\n15\n16\n''') == '16'\n\nassert solution('''\n2\n19\n20\n''') == '19'\n\nassert solution('''\n2\n4\n2\n''') == '2'\n\nassert solution('''\n2\n6\n8\n''') == '6'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('15') == '3'\nassert solution('18') == '3'\nassert solution('20') == '3'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '39'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '9'\nassert solution(input()) == '13'\nassert solution(input()) == '27'\nassert solution(input()) == '6561'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n''') == '77'\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == '55'\nassert solution('''\n10 11 2 1 5\n10 11 9 1 1000000000\n''') == '999999999000000000'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\n\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\n\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '177177'\n\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\n\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999'"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"77\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"177177\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"999999999000000000\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"999999999\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"77\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"177177\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999000000000\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '177177'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''10 11 2 1 5\n10 11 9 1 10\n''') == '10'\nassert solution('''10 1 1 1\n10 11 2 1 5\n''') == '77'\nassert solution('''10 1 1 1\n10 11 2 1 5\n10 11 2 1 5\n''') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"77\"\nassert solution(\"3\") == \"177177\"\nassert solution(\"4\") == \"999999999000000000\"\nassert solution(\"5\") == \"999999999\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '70'\nassert solution('1\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '77'\nassert solution('1\\n5 1\\n10 11\\n1\\n1\\n') == '55'\nassert solution('1\\n10 1\\n1000000000 1 1 1\\n1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '10'\nassert solution('4\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '77'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"70\"\nassert solution() == \"77\"\nassert solution() == \"177177\"\nassert solution() == \"999999999000000000\"\nassert solution() == \"999999999\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"0\\n\"\nassert solution(\"2 4\\n\") == \"2\\n\"\nassert solution(\"7 4\\n\") == \"1\\n\"\nassert solution(\"9 3\\n\") == \"2\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '0'\nassert solution('10 10') == '1'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5\n1 1\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n1 1\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n10 10\n2 4\n7 4\n9 3\n''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n10 10\n2 4\n7 4\n9 3''') == '0'\nassert solution('''5 2\n10 10\n2 4\n7 4\n9 3\n\n''') == '2'\nassert solution('''5 7\n1 1\n1 1\n2 2\n3 2\n2 1\n\n''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5 2\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5 1\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5 3\n10 10\n2 4\n7 4\n9 3\n''') == '2'\n'''"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"1\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n22\n777\n9999\n1\n77\n11\n22\n7777\n22\n7777\n2222\n
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n22') == '13'\nassert solution('2\\n77') == '90'\nassert solution('3\\n888') == '1'\nassert solution('4\\n9999') == '66'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"13\"\nassert solution(\"10\") == \"90\"\nassert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"90\"\nassert solution(\"22222\") == \"1\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '13'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n11\n22\n1111\n111111\n222222\n22222\n''') == '13'\n\nassert solution('''\n1\n111\n1111\n111111\n11111111\n222222\n22222222\n''') == '13'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n22\n1111\n''') == '13'\nassert solution('''\n1\n1111\n2222\n''') == '13'\n\n''')\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1123\") == \"3\"\nassert solution(\"22\") == \"2\"\nassert solution(\"111\") == \"1\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n22\\n9999\\n1\\n777') == '13'\nassert solution('2\\n22\\n11111\\n1\\n222') == '14'\nassert solution('2\\n22\\n11111\\n1\\n222') == '14'\nassert solution('2\\n22\\n11111\\n1\\n222') == '14'\nassert solution('2\\n22\\n11111\\n1\\n222') == '14'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n22\n9999\n1\n777\n\n''') == \"13\""
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"YES\"\nassert solution('3') == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\nassert solution('''\n2\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''\n2\n3\n3\n2\n2 2\n''') == 'NO'\nassert solution('''\n2\n4\n4\n3\n2 2\n''') == 'YES'\nassert solution('''\n2\n5\n5\n2\n2 2\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1\") == \"NO\"\nassert solution(\"2\\n1\") == \"YES\"\nassert solution(\"2\\n3\") == \"YES\"\nassert solution(\"2\\n6\") == \"NO\"\nassert solution(\"3\\n1\") == \"YES\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"5\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\nassert solution('''2\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5\n\nassert solution('''\n3 -1 0 2\n3\n''') == '6\n\nassert solution('''\n2 -3 -1 0 2\n2\n''') == '6\n\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '5\n\nassert solution('''\n2 -3 -1 0 2\n3\n''') == '13"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5'\nassert solution('''\n-1 0 -2\n2\n''') == '3'\nassert solution('''\n5 -1 0 2 3\n1\n''') == '6'\nassert solution('''\n2 -3 0 2\n1\n''') == '5'\nassert solution('''\n2 2 2\n1\n''') == '4'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1\n-1\n3\n''') == '10'\nassert solution('''\n-5\n-1\n-3\n''') == '0'\nassert solution('''\n-1\n-3\n3\n''') == '0'\nassert solution('''\n2\n-1\n-2\n''') == '2'\n''')"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4,2,3') == 5\nassert solution('3,-1,0,2') == 6\nassert solution('2,-3,-1,5,-4') == 13\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('[4,2,3]') == '5'\nassert solution('[3,-1,0,2]') == '6'\nassert solution('[2,-3,-1,5,-4]') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 3\n1\n3\n4\n6\n''') == '13'\nassert solution('''\n-1\n2 3\n1\n3\n4\n6\n''') == '13'\nassert solution('''\n3\n-1 2\n1\n3\n''') == '6'\nassert solution('''\n2\n-1 2\n1\n3\n''') == '6'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5\nassert solution('''\n3 -1 0 2\n1\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '13\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '13\n'''"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '11'"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[4,2,3]\\n1\") == \"5\"\nassert solution(\"[3,-1,0,2]\\n3\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\\n2\") == \"13\""
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"false\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nA = [0,2,1,-6,6,-7,9,1,2,0,1]\nOutput: true\nExplanation: 0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\n\nA = [0,2,1,-6,6,7,9,-1,2,0,1]\nOutput: false\n\nA = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\nExplanation: 3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\n\"\"\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'true'\nassert solution(\"\"\"\n0 2 1 -6 6 -7 9 1 2 0 1\n\"\"\") == 'false'\nassert solution(\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n3\n2\n3\n5\n\"\"\") == \"true\"\nassert solution(\"\"\"\n1\n3\n2\n3\n5\n\"\"\") == \"false\"\nassert solution(\"\"\"\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A = [0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"A = [0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"A = [3,3,6,5,-2,2,5,1,-9,4]\") == \"true\""
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\")\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\")\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\")\n\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total = sum(A)\n        if total % 3!= 0:\n            return False\n        avg = total / 3\n        cnt = 0\n        for a in A:\n            cnt += a\n            if cnt == avg:\n                cnt = 0\n                if cnt == 0:\n                    return True\n        return False\n\nassert Solution().canThreePartsEqualSum([0,2,1,-6,6,-7,9,1,2,0,1])\nassert Solution().canThreePartsEqualSum([3,3,6,5,-2,2,5,1,-9,4])"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 -5 -6 5 -8 -7 3\") == \"true\"\nassert solution(\"1 1 2 -1 -2 0 -1 -3 -4 -1 1 1 2\") == \"false\"\nassert solution(\"3 3 0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10\") == \"true\"\nassert solution(\"1 0 -2 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15\") == \"false\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n[0,2,1,-6,6,-7,9,1,2,0,1]\n''') == \"true\"\nassert solution('''\n[0,2,1,-6,6,7,9,-1,2,0,1]\n''') == \"false\"\nassert solution('''\n[3,3,6,5,-2,2,5,1,-9,4]\n''') == \"true\""
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input().strip()) == 'true'\nassert solution(input().strip()) == 'false'"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'true'\nassert solution(input(stdin=True)) == 'true'\nassert solution(input(stdin=True)) == 'true'"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beat, vet, beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"5\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet'\n\n\"\"\""
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\""
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == 'beat and vet'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\nprint(solution('7\\nbeat\\nvet\\nbeet'))"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\nbeet\nvet\nbeet\n\n4\nbet\nbet\nbet\n\n5\nbeet\nbeet\nbet\nbeet\n\n6\nbet\nbet\nbet\nbeet\nbet\n\"\"\") == \"bet and beet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\nassert solution('5\\nAa\\nBB\\nCC\\nDD\\nEE\\n') == 'Aa Ee BB CC DD EE'\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"bet\"\nassert solution(\"6\") == \"bet\"\nassert solution(\"4\") == \"bet\"\nassert solution(\"8\") == \"bet\"\nassert solution(\"10\") == \"bet\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '17'"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\"\n\"\"\""
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '13'\nassert solution('4') == '18'\nassert solution('5') == '25'\nassert solution('6') == '32'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"4 8\") == \"8\""
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"5\") == \"7\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"5\") == \"17\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '8'\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '6'\nassert solution('4') == '6'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '84'\n\"\"\"\n\nX, A, B = map(int, input().split())\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234') == '84'\nassert solution('15') == '84'\nassert solution('13') == '84'\nassert solution('1') == '84'\nassert solution('100') == '84'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '8'"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '8'\nassert solution('2 2') == '8'\nassert solution('3 4') == '5'"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 1\n3 2 2\n1 3 1''') == '8'\nassert solution('''3 3\n2 2 2\n3 2 1\n1 3 2''') == '10'\nassert solution('''5 7\n2 3 1 1 2 3\n1 3 3\n3 1 2\n1 2 3\n3 2 1\n2 4 1''') == '15'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '8'\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\"\n) == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '16'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"8\"\nassert solution(\"2 2\") == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '8'\nassert solution('4 4') == '12'\n'''"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '8'\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'POSSIBLE'\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == 'POSSIBLE'\n\"\"\"\n\nn, m = map(int, input().split())\n\nislands = []\nfor _ in range(n):\n    islands.append(list(map(int, input().split())))"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\n\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''3 1\n1 3\n2 1\n''') == 'IMPOSSIBLE'\nassert solution('''3 2\n1 2\n2 3\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3') == 'POSSIBLE'\nassert solution('1 2\\n2 3') == 'IMPOSSIBLE'\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('1 2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'atcoder', 'Should be atcoder'\nprint(solution(input()))\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\n\nprint(solution(\"atcoder\"))\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\""
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"aaaaaa\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\") == \"\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('cac') == 'cac'\nassert solution('x') == 'x'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"abcde\") == \"abcd\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"abc\") == \"ac\"\nassert solution(\"abcde\") == \"ace\"\nassert solution(\"abcdef\") == \"ace\"\nassert solution(\"abcdefgh\") == \"ace\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('apple banana orange') == 'NO'\nassert solution('banana banana orange') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n\"\"\"\nimport sys\nsys.stdin = open(r'C:\\Users\\ehan\\Desktop\\Dieter - Python\\File\\Software\\CI-Coding-Challenge\\test.txt')\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A B C\") == \"YES\"\nassert solution(\"A B C D\") == \"NO\"\nassert solution(\"rng wkz zz\") == \"YES\"\nassert solution(\"aa bb zz\") == \"NO\"\nassert solution(\"aa bbb\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng agor') == 'NO'\nassert solution('cat banana dog') == 'NO'\nassert solution('cat banana dog ') == 'NO'\nassert solution('cat banana dog ') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"hi\") == \"YES\"\nassert solution(\"qwe\") == \"NO\"\nassert solution(\"abc\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('geek') == 'NO'\nassert solution('rng') == 'NO'\nassert solution('dog') == 'NO'\nassert solution('rng geek') == 'NO'\n\n\"\"\"\n\nfrom itertools import permutations\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple banana grape\") == \"NO\"\nassert solution(\"apple banana grape banana\") == \"YES\"\nassert solution(\"apple banana grape banana apple\") == \"YES\"\nassert solution(\"apple banana grape banana apple grape\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1''') == \"LESS\"\nassert solution('''3\n4''') == \"EQUAL\"\nassert solution('''5\n6''') == \"GREATER\""
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"GREATER\"\nassert solution(\"3\\n\") == \"LESS\"\nassert solution(\"123\\n\") == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == 'GREATER'\nassert solution('5') == 'EQUAL'\nassert solution('16') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"GREATER\"\nassert solution(\"2\") == \"LESS\"\nassert solution(\"6\") == \"EQUAL\"\nassert solution(\"6\\n3\") == \"GREATER\"\nassert solution(\"10\\n8\") == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'LESS'\nassert solution('2') == 'EQUAL'\nassert solution('3') == 'GREATER'\nassert solution('4') == 'EQUAL'\nassert solution('5') == 'LESS'"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3') == 'GREATER'\nassert solution('3\\n4') == 'LESS'\nassert solution('0\\n1') == 'EQUAL'\nassert solution('0\\n-1') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"LESS\"\nassert solution(\"9\") == \"EQUAL\"\nassert solution(\"3\") == \"GREATER\"\nassert solution(\"1\") == \"LESS\"\nassert solution(\"1000000001\") == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"36\") == \"GREATER\"\nassert solution(\"24\") == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == 'GREATER'\nassert solution('3\\n4') == 'LESS'\nassert solution('1\\n1') == 'EQUAL'\nassert solution('2\\n3') == 'LESS'\nassert solution('1\\n-2') == 'GREATER'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2 3\") == \"2\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nabcd\\nbcdf\\n123456789\\nqwertyuiop\\n') == '2'\nassert solution('5\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('5\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('5\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('5\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''\n2\napl\napl\napl\n1\ngrap\n''') == '3'\nassert solution('''\n2\npap\npan\npap\n1\ngra\n''') == '1'\nassert solution('''\n3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''\n1\napple\norange\napple\n1\ngrape\n''') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('1') == '0'\n\"\"\"\n\nfrom itertools import combinations_with_replacement\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '2'"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape') == '0'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'T'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'A'\nassert solution('A') == 'A'\nassert solution('T') == 'T'\nassert solution('C') == 'C'\nassert solution('G') == 'G'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 'T', \"Wrong\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n') == 14\n\n\nInput:\n2\n4\n2 2 2 4 1\n1 2 2 2 1\n\nOutput:\n7\n10\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 2 4 1\") == '14'\nassert solution(\"10 2 2 4 1\") == '10'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"6\") == \"12\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 2 4 1') == '14'\nassert solution('4\\n1 2 1 2') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"5 2 2 4 1\") == \"14\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"1 2 2 4 1\") == \"14\"\nassert solution(\"1 2 2 2 1\") == \"14\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"14\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 14"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\nassert solution('5\\n1 2 2 2 1\\n3 2 2 2 4\\n5 5') == '9'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '1'\n\nassert solution('''\n4\n2 2 4 2\n''') == '1'\n\nassert solution('''\n5\n4 4 4 4 4\n''') == '2'\n\nassert solution('''\n6\n4 4 4 4 4 4\n''') == '1'\n\n'''\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 3') == '2'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 3\\n2 2 2\\n\") == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"10 1\") == \"10\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 3') == '2'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 1') == 'Yes', \"First\"\nassert solution('2 1 2') == 'Yes', \"Second\"\nassert solution('1 0 1') == 'Yes', \"Third\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"c_{1,1} c_{1,2} c_{1,3}\nc_{2,1} c_{2,2} c_{2,3}\nc_{3,1} c_{3,2} c_{3,3}\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"c_{1,1} c_{1,2} c_{1,3}\nc_{2,1} c_{2,2} c_{2,3}\nc_{3,1} c_{3,2} c_{3,3}\n\"\"\") == \"No\"\n\nassert solution(\"\"\"c_{1,1} c_{1,2} c_{1,3}\nc_{2,1} c_{2,2} c_{2,3}\nc_{3,1} c_{3,2} c_{3,3}\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"1 0 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 1 1\\n1 1 1\\n1 1 1\\n3 1 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 1 1\\n1 1 1\\n3 1 1\\n4 2 0') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 1 1\\n1 1 1\\n3 1 1\\n4 2 0\\n4 2 0') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 1 1\\n1 1 1\\n3 1 1\\n4 2 0\\n4 2 0\\n4 2 0') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 0 1') == 'Yes'\nassert solution('0 1 1\\n2 1 2\\n1 0 1\\n1 0 1') == 'No'\nassert solution('0 1 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1') == 'No'\nassert solution('0 1 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 1 2') == 'Yes'\nassert solution('0 1 1\\n2 1 2\\n1 1 2') == 'No'"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\""
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC', 'Should be ARC'\nassert solution('ARC') == 'ABC', 'Should be ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'ARC'\nassert solution('ABCABC') == 'ARC'\nassert solution
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC', \"test 1 failed\"\nassert solution('ARC') == 'ABC', \"test 2 failed\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 2') == '3'\nassert solution('4 8 2') == '3'\nassert solution('1 9 2') == '4'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('5 12 5') == '1'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('0 1 2') == '0'\nassert solution('3 4 5 6 7') == '5'\nassert solution('5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5') == '10'\nassert solution('5 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == '4'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4,8,2]) == \"3\", \"Wrong solution!\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 5') == '2'\nassert solution('2 2 5') == '3'\nassert solution('4 8 2') == '3'\nassert solution('3 4 1') == '2'\nassert solution('5 4 2') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"4 2 2\") == \"0\"\nassert solution(\"3 2 2\") == \"2\""
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4 8 2\") == \"3\"\nassert solution(\"10 10 0\") == \"0\"\nassert solution(\"8 8 2\") == \"3\"\nassert solution(\"10 8 2\") == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6 3\") == \"3\"\nassert solution(\"4 8 2\") == \"3\""
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('22') == 'Christmas Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve'\nassert solution('26') == 'Christmas Eve Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Christmas Eve'\nassert solution('12') == 'Christmas Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'\nassert solution('25') == 'Christmas Eve Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'Dec'\nassert solution('22') == 'Nov'\nassert solution('23') == 'Dec'\nassert solution('24') == 'Nov'\nassert solution('25') == 'Dec'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('19') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('25') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"Christmas\""
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('8') == '4'\nassert solution('2') == '0'\nassert solution('10') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('15') == '6'\nassert solution('19') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\", \"Your solution needs to return the number that can be divided by 2 the most times.\"\nassert solution(\"5\") == \"1\", \"Your solution needs to return the number that can be divided by 2 the most times.\"\nassert solution(\"10\") == \"3\", \"Your solution needs to return the number that can be divided by 2 the most times.\"\nassert solution(\"20\") == \"4\", \"Your solution needs to return the number that can be divided by 2 the most times.\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '4'\nassert solution('99') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n4\n5\n8\n11\n14''') == '4'\nassert solution('''1\n4\n9\n16\n25''') == '5'\nassert solution('''1\n3\n4\n5\n6\n7''') == '3'\nassert solution('''7\n8\n10\n12\n15\n18''') == '1'\nassert solution('''20\n22\n23\n24\n25''') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"8\") == \"4\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('5 2 5 6') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 7 9 3') == 'Yes', 'Sample Test Failed'\nassert solution('10 20 30 40') == 'No', 'Sample Test Failed'"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 5 2 4') == 'No'"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('3 5 7 4') == 'No'\nassert solution('1 2 3 4') == 'No'\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 7 9 3\n''') == 'Yes'\nassert solution('''\n1 1 1 1\n''') == 'No'\n'''\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"3 4 1 5\") == \"No\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 7, 9, 3]) == \"Yes\"\nassert solution([1, 1, 1, 1]) == \"Yes\"\nassert solution([1, 1, 1, 1, 1]) == \"Yes\"\nassert solution([1, 1, 1, 1, 1, 1]) == \"Yes\"\nassert solution([1, 1, 1, 1, 1, 1, 1]) == \"Yes\""
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''atcoder\nbeginner\ncontest''') == 'ABC'\nassert solution('''atcoder\nbeginner\ncontest''') == 'ABC'\nassert solution('''a\nc\nc''') == 'AC'\nassert solution('''a\na\nc''') == 'AC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', solution('atcoder beginner contest')\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder') == 'ATC'\nassert solution('atcoder is learning') == 'ATCI'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('academy classroom') == 'ACADEMY'\nassert solution('some words') == 'SOMEWORDS'\n\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'ABC'\n\n\"\"\",\n}\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('80 30 10') == 'No'\nassert solution('101 10 100') == 'No'\nassert solution('0 50 0') == 'Yes'\nassert solution('50 10 0') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('10 1 10') == 'No'\nassert solution('-50 -100 100 -120') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''50 100 120''') == 'Yes'\nassert solution('''5 5 10''') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([50, 100, 120]) == 'Yes'\nassert solution([50, 100, 150]) == 'No'\nassert solution([50, 100, 200]) == 'Yes'\nassert solution([50, 100, 300]) == 'No'\nassert solution([50, 100, 400]) == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('60 100 120') == 'No'\n\"\"\"\na, b, c = map(int, input().split())"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\", \"Sample Test 1 Failed\"\nassert solution(\"15 10 30\") == \"No\", \"Sample Test 2 Failed\"\nassert solution(\"1 1 1\") == \"Yes\", \"Sample Test 3 Failed\"\nassert solution(\"1 10 10\") == \"No\", \"Sample Test 4 Failed\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('500 100 120') == 'No'\nassert solution('500 100 120') == 'Yes'"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"30 50 30\") == \"Yes\"\nassert solution(\"25 50 25\") == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''50 100 120\n''') == 'Yes'\nassert solution('''5 3 2\n''') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"2 4\") == \"0\""
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 8') == '5'\nassert solution('4 8') == '5'\nassert solution('6 9') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\n\"\"\""
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"16 8\") == \"15\"\nassert solution(\"12 13\") == \"24\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 8') == '5'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n7 9 8 9') == '5'\n\"\"\"\nfrom itertools import combinations\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"5\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 8\") == \"5\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"3 7\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 2\"\nassert solution(\"4\") == \"4 2 1 3\"\nassert solution(\"5\") == \"5 2 1 3 2\"\nassert solution(\"6\") == \"6 2 1 3 2 4\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2 2'\nassert solution('4') == '2 2 1 3'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '4 2 1 3'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n\n\"\"\"\n\nn = int(input())\nsequence = list(map(int, input().split()))\nsequence.reverse()\nsequence = sequence + sequence[:n]\nfor i in sequence:\n    print(i)\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"4 2 1 3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"4\") == \"4 2 1 3\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 5\") == \"No\"\nassert solution(\"5 4\") == \"Yes\"\nassert solution(\"5 6\") == \"No\"\nassert solution(\"5 7\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('30 1') == 'No'\nassert solution('1 1') == 'Yes'\n'''\n\nimport math"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"100 5\\n1 1 1 1 1\") == \"Yes\"\nassert solution(\"8 3\\n2 4 1\") == \"No\"\nassert solution(\"1 1 1 1 1\\n2 3 2 2\") == \"Yes\"\nassert solution(\"1 1 1 1 1\\n2 3 2 2\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 3\n5 4 6''') == 'Yes'\nassert solution('''10 1\n4 5 6''') == 'No'\n\n\"\"\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n4 6''') == 'Yes'\nassert solution('''4\n3\n5 9''') == 'No'\n'''\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 3\n4 5 6\n''') == 'Yes'\nassert solution('''50 10\n50 50 50 50 50\n''') == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 4') == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes', \"Wrong answer\"\nassert solution('20 1\\n1 3\\n4 3\\n5 3') == 'No', \"Wrong answer\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 0\\n4 5 6\") == \"No\""
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '3'\nassert solution('abaababa') == '2'\nassert solution('abaaba') == '1'\nassert solution('aba') == '1'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 6"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '4'\nassert solution('abaababa') == '2'\nassert solution('abaabab') == '1'\nassert solution('abaaba') == '3'"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaababaab') == '6'"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '2'\nassert solution('abaabab') == '1'\nassert solution('abaab') == '1'\nassert solution('aba') == '1'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == 'abababaa'\nassert solution('abaabab') == 'ababab'\nassert solution('abaaba') == 'ababa'\nassert solution('ababa') == 'ababa'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\n\"\"\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 2\nassert solution('abaababa') == 4\nassert solution('abaabab') == 3\nassert solution('abaaba') == 2\n\n'''"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 7\nassert solution('abaabab') == 5\nassert solution('abaab') == 4\nassert solution('abc') == 3\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaabab') == '4'\nassert solution('abaabab') == '3'\nassert solution('abaaba') == '2'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"Yes\", \"Sample Case 1\"\nassert solution(\"abcba\") == \"Yes\", \"Sample Case 2\"\nassert solution(\"abcabc\") == \"Yes\", \"Sample Case 3\"\nassert solution(\"abab\") == \"No\", \"Sample Case 4\"\nassert solution(\"aaabc\") == \"Yes\", \"Sample Case 5\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bca\") == \"No\"\nassert solution(\"abc\") == \"Yes\""
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\n\nassert solution('abcd') == 'No'\n\nassert solution('aac') == 'Yes'\n\nassert solution('a') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abcd') == 'Yes'\nassert solution('bac') == 'No'\nassert solution('cba') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"b\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == None, 'Do not use main'\nassert (solution(\"1 3\") == \"20\"), \"Wrong\"\nassert (solution(\"1000000\") == \"757402647\"), \"Wrong\"\nassert (solution(\"1000000\") == \"757402647\"), \"Wrong\"\nassert (solution(\"1000000\") == \"757402647\"), \"Wrong\""
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == \"646\"\nassert solution('1000000') == \"757402647\""
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '646'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(t) == \"646\"\nassert solution(nt) == \"757402647\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '646'\nassert solution('1') == '757402647'\nassert solution('2') == '20'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '646'\nassert solution('1') == '757402647'\nassert solution('1') == '757402647'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5\\n'\n    '1 8 7 2 4\\n'\n    '9 7 2 9 3\\n'\n    ) == '646'\nassert solution(\n    '2\\n'\n    '1000000\\n'\n    '1000000\\n'\n    ) == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '646'\nassert solution('1000000') == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('5 1') == '1'\nassert solution('5 2') == '2'\nassert solution('5 4') == '4'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '20'\nassert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('5') == '646'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '7'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"17\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 4') == '7'\nassert solution('10 10 5') == '17'\nassert solution('10 1 4') == '14'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution() == '0'\nassert solution() == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '1'\nassert solution('7') == '0'\n\"\"\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n1\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"7\") == \"1\"\n\n\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '5'\nassert solution('5 7') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('2 1') == '1'\nassert solution('1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n1999999999\\n113\\n1000000001\\n1\""
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\nassert solution('''\n5\n3 5\n2 10\n1 12\n5 15\n1 100\n''') == '1000000001'\nassert solution('''\n5\n3 5\n1 100\n2 1000000000\n4 1000000000\n1 1\n''') == '1000000001'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\n\nassert solution('''\n4 8\n2 1000000000\n3 12\n1 1000000000\n1 1000000000\n2 1\n''') == '1000000001'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '113'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 7') == '1'\nassert solution('4 12') == '11'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1999999999'\nassert solution('1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == \"10\"\nassert solution('''4 3\n5 6\n1 7\n3 6\n4 5\n2 1''') == \"1999999999\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1'"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1999999999\"\nassert solution('3') == \"113\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == \"11\"\n\nassert solution('''3\n4\n5\n6\n7\n8\n''') == \"13\"\n\nassert solution('''3\n4\n5\n6\n7\n8\n9''') == \"1999999999\"\n\nassert solution('''3\n4\n5\n6\n7\n8\n9\n10''') == \"113\"\n\nassert solution('''1\n2\n3\n4\n5\n6''') == \"1\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''20 4\n1 2 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 4\n1 2 3 2 1 3 2\n''') == '2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3\n''') == '3 1 2'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3 1 2'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2 1'\nassert solution('10 4') == '3 2'\nassert solution('7 2') == '2 1'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2 1 2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3 1 2 3'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3 1 2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '263'"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"263\"\nassert solution(\"10\") == \"254\"\n\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 263\n\nassert solution(\n\"\"\"\n3\n2 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 188\n\nassert solution(\n\"\"\"\n2\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 188\n\nassert solution(\n\"\"\"\n3\n2 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 188\n\nassert solution(\n\"\"\"\n3\n2 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 188"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"263\"\nassert solution() == \"369\""
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example) == 263\nassert solution(stdin) == 1433\n\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nprint(solution(input()))"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n''') == \"3\"\nassert solution('''\ndfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n\n\n'''"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457992\\n998236471\\n247789563'"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n', 'Fail at test case #1'\nprint('Success!')\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n14342856\\n3\\n9457896\\n8591728\\n7274726\\n5\\n725469\\n9\\n574671\") == \"14567856\\n3\\n9457896\\n8591728\\n7274726\\n5\\n725469\\n9\\n574671\"\nassert solution(\"3\\n53487\\n746532\\n85375\\n862671\\n93832\\n64\\n942358\\n3\\n76\\n6\\n5\") == \"53487\\n746532\\n85375\\n862671\\n93832\\n64\\n942358\\n3\\n76\\n6\\n5\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873296\\n386592714\\n729641835\\n863725149\\n979314628\\n412968357\\n631457992\\n998236471\\n247789563\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nprint(solution(stdin))\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 3 6\\n5 8 9\\n3 6 9\\n7 2 1\\n4 8 5\\n6 9 4\\n5 3 7\\n\") == \"3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 3 6\\n5 8 9\\n3 6 9\\n7 2 1\\n4 8 5\\n6 9 4\\n5 3 7\"\nassert solution(\"10\\n1421134355\\n774524637\\n786736964\\n966529146\\n567745789\\n651367662\\n1324594652\\n567697312\\n867452932\\n3459067873\\n\") == \"1421134355\\n774524637\\n786736964\\n966529146\\n567745789\\n651367662\\n1324594652\\n567697312\\n867452932\\n3459067873\\n\"\nassert solution(\"1\\n22222222\\n33333333\\n44444444\\n55555555\\n66666667\\n77777777\\n88888888\\n99999999\\n\") == \"22222222\\n33333333\\n44444444\\n55555555\\n66666667\\n77777777\\n88888888\\n99999999\\n\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"979314628\"\nassert solution(\"975314628\") == \"412958357\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873296\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"1\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n\") == \"11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\\n11111111\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2 2\"\nassert solution(\"5 3\") == \"2 2 3 4 5\"\nassert solution(\"15 5\") == \"2 5 6 7 8 9 10 11 12 13 14 15\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '1 3 5'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 6') == '4'\nassert solution('6 2') == '3'\nassert solution('5 4') == '8'"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n5 3 1 2\n3 5\n1 7\n6 6\n1 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6\n5 3 1 2 4 5\n3 5\n1 7\n6 6\n1 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n5 3 1 2\n3 5\n1 7\n6 6\n1 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n5 3 1 2\n3 5\n1 7\n6 6\n1 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n5 3 1 2\n3 5\n1 7\n6 6\n1 2\n\"\"\") == \"4\""
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution('2 5 3 1 1 6') == '7'\nassert solution('6 4') == '4'\nassert solution('5 4') == '-1'\nassert solution('8 3') == '8'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 6') == '3'\nassert solution('1 1 1 3 5 3 5 7') == '6'\nassert solution('1 5') == '-1'\nassert solution('3 1') == '4'\nassert solution('7 3') == '8'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '8'\nassert solution() == '-1'\nassert solution() == '9'\nassert solution() == '4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('3 3') == '3'\nassert solution('10 5') == '-1'\nassert solution('10 2') == '-1'\nassert solution('2 3') == '-1'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 4') == '4'\nassert solution('6 0') == '-1'\nassert solution('5 1') == '-1'\nassert solution('10 1') == '-1'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3 2 8\\n\"\n    \"100 101 102 105\\n\"\n    \"3 2 1 100000000\\n\"\n    \"10 20 15 14\\n\"\n    \"101 101 101 3\\n\"\n) == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"NO\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 3\n1 2 5\n1 2 6\n1 5 1\n''') == \"NO\"\nassert solution('''\n10 2 4\n4 5 2\n1 6 1\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3 3 3\n3 3 2\n''') == 'NO'\nassert solution('''\n1\n1 2 3\n1 3 3\n''') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES', 'YES'\nassert solution('''3 3\n100 101 100\n101 102 102\n102 102 102''') == 'YES', 'YES'\nassert solution('''3 3\n100 101 100\n101 102 102\n102 102 102''') == 'NO', 'NO'\nassert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n10 20 15 14\n101 101 101 3\n101 101 101 3\n101 101 101 3''') == 'YES', 'YES'\nassert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n10 20 15 14\n101 101 101 3\n101 101 101 3\n101 101 101 3''') == 'NO', 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"NO\""
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"100 101 102 105\") == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5 3 2 8\n1 1 1 1\n3 2 1 3\n1 1 1 1\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 "
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test) == '3 4 6 5 '\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == \"3 4 6 5\"\nassert solution('2 10') == \"3 3\"\nassert solution('1 2 1 1 2 2 2 2 2 2') == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '3 4 6 5 '\nassert solution('2 10') == '3 3 '\nassert solution('3 5') == '9 8 12 6 8 '\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"3 3\"\nassert solution(\"5 5\") == \"3 3\""
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4\\n1 2 3 4') == '3 4 6 5 \nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2 2') == '3 3 \n\n\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"3 3\", \"First\"\nassert solution(\"4 4\") == \"3 4 6 5\", \"Second\"\nassert solution(\"5 5\") == \"9 8 12 6 8\", \"Third\"\nassert solution(\"2 10\") == \"3 3\", \"Fourth\"\nprint(solution(input()))"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5?\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8?\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2 2\\n\") == \"3 3?\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"1\\n2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"1\\n2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"1\\n2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\""
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example) == 'YES YES YES YES NO NO'\nassert solution(input) == 'YES YES YES YES YES NO'\n\n\n\"\"\""
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 6\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\""
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"NO\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\n\n'''\n2.13.  Winning tickets\nThere are $n$ tickets on a ticket train, the train goes from $1$ to $n$. Your task is to determine if there is a route that you can take so that you can get to every other ticket, starting from the ticket $1$ and finishing with the last ticket.\n\nThere are a total of $m$ valid routes. You need to find the shortest such route, if such a route exists.\n\nIf such a route exists, your program should return the length of such a route. Otherwise, your program should return -1.\n\nNote that you can take multiple routes and pick the shortest route.\n\n-----Input-----\n\nThe first line of the input contains a single integer $n$ \u2014 the number of tickets.\n\nThe second line of the input contains a single integer $m$ \u2014 the number of valid routes.\n\nThe next $m$ lines contain integers $1$ to $n$. Each integer $i$ denotes the number of tickets which you can get from $i$ to the last ticket.\n\nExamples\nSample input\n2\n7\n5\n1 2 3 4 5 6 7\n\nSample output\n4\n\nSample input\n4\n8\n8\n1 2 3 4 5 6 7 8\n\nSample output\n3\n\nSample input\n4\n8\n8\n1 2 3 4 5 6 7 8\n\nSample output\n-1\n'''\nimport sys\n\nn = int(input())\nm = int(input())\nticket = sorted(list(map(int, input().split())))"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\nassert solution(\"4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 2\") == \"YES\\n1 2\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 2\\n5\\n2\") == \"NO\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 2\\n5\\n2\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 2\\n5\\n2\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n1 2\\n3\\n1 1\\n1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\"\n\nassert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\"\n\nassert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\"\n\nassert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\"\n\nassert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\""
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\nassert solution('''\n1\n3\n1 1 1\n4\n1 2 3 4\n''') == 'YES\\n1 2\\n2 3\\n3 4\\n1 3\\nNO'\n\n\"\"\""
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n2 3\\n3 4\\n1 2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'NO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\nassert solution('''\n4\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5\") == \"01011110\", \"First example\"\nassert solution(\"8 5\") == \"0101111\", \"Second example\"\nassert solution(\"7 9\") == \"0011111\", \"Third example\""
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100''') == '011101110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"11100\") == \"0111\"\nassert solution(\"100000\") == \"0011111\"\nassert solution(\"1010\") == \"01001\"\n\"\"\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '01011110'\nassert solution('4') == '01011110'\nassert solution('5') == '01011110'"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100''') == '01011110'\nassert solution('''2\n3\n1 2\n1 3\n2 4\n3 5\n5 6\n4 7''') == '0110'\nassert solution('''7\n7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7''') == '020210'\nassert solution('''4\n4\n1 2\n1 3\n1 4\n1 5\n1 6''') == '000111'\nassert solution('''2\n2\n1 2\n1 3''') == '0111'\n'''\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"01011110\"\n\nassert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"01011110\"\n\nassert solution('''\n2\n3\n11010\n''') == \"0111010\"\n\nassert solution('''\n3\n8 2\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"11011010\"\n\nassert solution('''\n3\n8 3\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"11011010\""
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '01110110'\n\n-----Hints-----\n\n1) n = int(input())\n2) k = int(input())\n3) s = input()\n4) n = len(s)\n5) m = 0\n6) ans = \"\"\n7) while k >= 0 and m < n:\n8)    if s[m] == s[m+1]:\n9)    m += 1\n10)    k -= 1\n11)    ans += s[m]\n12) return ans\n13) if m == n:\n14)    return ans\n\n\n'''"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110', \"The first example\"\nassert solution('''\n7 9\n1111100\n7 11\n1111100\n''') == '0111111', \"The second example\"\nassert solution('''\n7 11\n1111100\n7 11\n1111100\n''') == '0101110', \"The third example\"\nassert solution('''\n9 7\n111110000\n7 11\n1111100\n''') == '01011101', \"The fourth example\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"1111100\") == \"0011111\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n8 5\\n11011010\\n7 9\\n1111100') == '01011110'\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('5 1') == '4'\nassert solution('8 1') == '7'\nassert solution('11 11') == '7'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '4'"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30''') == '4'"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"7 2\") == \"3\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '3'\nassert solution('7 2') == '1 4 7 \n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '4'\nprint(solution(input()))"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"7 2\") == \"3\"\nassert solution(\"7 1\") == \"3\"\nassert solution(\"8 1\") == \"4\""
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5 2\n    2 3\n    3 3\n    2 3\n    2 2\n    2 3\n    ''') == \"4\"\n\nassert solution('''\n    5 1\n    2 3\n    3 3\n    2 2\n    2 3\n    2 3\n    ''') == \"3\"\n''')\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3', \"The first example\"\nassert solution('''5 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4', \"The second example\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"19\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2\n-3 0\n''') == '0'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''6\n2 1 4 3 2 5\n2 2 2 3 4 1\n''') == '14'\nassert solution('''1\n2 2\n0\n''') == '2'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"3\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"5\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n\n''') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\n'\n    '1 3 2\\n'\n    '-100 2 3\\n'\n) == '3'\n\nassert solution(\n    '5\\n'\n    '2 1\\n'\n    '-3 0\\n'\n) == '19'\n\nassert solution(\n    '10\\n'\n    '1 1 1 1 1\\n'\n    '1 1 1 1 1\\n'\n) == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\"\nassert solution(\"7\\n0 0 0\\n-1 1 1\") == \"0\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '19'\nassert solution('2') == '0'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '18'\nassert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\"\nassert solution(\"2\\n3 3\\n\") == \"0 0\"\nassert solution(\"4\\n7 2\\n5 2\\n\") == \"1 3 3\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1 3 3\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"3 3\") == \"1 3 3\"\nassert solution(\"1 2\") == \"0 0\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\n\n\nimport heapq\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    1 2 1\n    3 2 3\n    2 4 1\n    4 5 2\n    5 7 4\n    3 6 2\n    5 2 3 4 1\n''') == '21 7 15 21 3 '\n\"\"\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n\nassert solution('''2\n1\n1\n''') == '0 0'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2''') == '1 3 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\"\"\") == \"21 7 15 21 3\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1\") == \"21 7 15 21 3 \"\nassert solution(\"1 2\") == \"1 3 3 \"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 '\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example) == '1 3 3'\nassert solution(input) == '1 3 3'"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''4\n5\n3 6\n1 2\n4\n7\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''3\n5\n3 6\n1 2\n4\n7\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'NO'\nassert solution('''1\n100\n1\n''') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n1 2 2') == 'YES'\nassert solution('4\\n5 5 5 5') == 'NO'\nassert solution('3\\n1 2 4') == 'YES'\nassert solution('4\\n1 3 4 4') == 'NO'\nassert solution('1\\n100') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES', \"First example\"\nassert solution('''4\n5\n1 2 5\n1\n1 1\n2\n2 2''') == 'YES', \"Second example\"\nassert solution('''4\n3\n1 2 5\n1\n1 1''') == 'NO', \"Third example\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\nassert solution('5') == 'YES'\nassert solution('4') == 'NO'\nassert solution('3') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == \"YES\"\nassert solution('''5\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == \"YES\"\nassert solution('''5\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == \"YES\"\nassert solution('''5\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == \"YES\"\nassert solution('''5\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'NO', \"First\"\nassert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES', \"Second\"\nassert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES', \"Third\"\n\n'''\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1010\\n1101') == '12'\nassert solution('4 5\\n1001\\n10101') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '12'\nassert solution('4 5') == '11'"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '11'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == '1010101'\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == '1010101'\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n\"\"\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_simple()) == \"12\"\nassert solution(input_large()) == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''4 4\n    1010\n    1101\n    '''\n    ) == '12'\nassert solution(\n    '''4 5\n    1001\n    10101\n    '''\n    ) == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1010\\n1 1') == '11'\nassert solution('1 1\\n1010\\n1010') == '10'\nassert solution('1 1\\n1010\\n1001') == '1'\nassert solution('1 1\\n1010\\n1001\\n1 1') == '1'\nassert solution('1 1\\n1010\\n1001\\n1001') == '0'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\nprint(solution(input()))\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n4\\n6\\n8\\n') == \"YES\\n2 4 1 5\"\nassert solution('5\\n2\\n4\\n6\\n8\\n') == \"NO\\n1 4 2 5\"\n\n\"\"\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n''') == \"NO\"\nassert solution('''\n1\n2\n3\n''') == \"YES\"\nassert solution('''\n1\n2\n4\n''') == \"YES\"\nassert solution('''\n1\n2\n2\n''') == \"YES\"\nassert solution('''\n1\n2\n6\n''') == \"YES\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4\n6\n8\n10\n''') == \"YES\\n2 4 1 5\\nNO\\n2 4 6 8 1 3 5 11\"\nassert solution('''\n5\n7\n11\n18\n20\n23\n''') == \"NO\\n\"\nassert solution('''\n7\n9\n11\n18\n19\n20\n23\n''') == \"YES\\n1 2 3 4 5 6 7\\nNO\\n1 2 3 4 5 6 7\\nNO\\n\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3\n7\n9\n2\n''') == 'YES'\nassert solution('''\n2\n5\n2\n''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''\n10\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n5\n2\n6\n8\n10\n''') == 'YES'\nassert solution('''\n5\n2\n3\n4\n6\n''') == 'YES'\nassert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3\n''') == 'NO'\nassert solution('''1\n5\n''') == 'YES'\nassert solution('''5\n8\n''') == 'YES'\nassert solution('''3\n7\n''') == 'NO'\nassert solution('''10\n18\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4\n6\n8\n10''') == 'NO', 'First'\nassert solution('''5\n2\n4\n6\n8\n10''') == 'YES', 'Second'\nassert solution('''5\n1\n2\n4\n6\n8''') == 'YES', 'Third'\nassert solution('''5\n1\n2\n3\n4\n5''') == 'NO', 'Fourth'\n\n'''\n\nfrom math import sqrt\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == \"NO\"\nassert solution('6') == \"YES\"\nassert solution('10') == \"YES\"\n\n\"\"\"\n\nimport math\nfrom itertools import combinations_with_replacement\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n\nassert solution('''\n5\n7\n4 3 1 7 3 6 7\n1 2 3 4 5 6\n1\n1\n2\n5\n''') == '3'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n8\\n8 7 6 5 4 3 2 1') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '4'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n8\\n8 7 6 5 4 3 2 1') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5') == '1\\n0\\n1\\n4\\n0\\n'\nassert solution('5\\n8\\n7 6 5 4 3 2 1') == '4\\n0\\n0\\n0\\n1\\n'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution() == \"0\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n9\\n3 1 4 1 5 9 2 6 5') == '4\\n1'\nassert solution('2\\n10\\n3 1 4 1 5 9 2 6 5') == '3\\n0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2\n6\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n3\n4\n1 2 1\n1\n3\n8\n4\n8 5 6\n4\n1\n\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '4'\nassert solution('5\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n') == '0'"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n\"\n    \"4\\n\"\n    \"1 5\\n\"\n    \"2 4\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"5\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    \"2 5\\n\"\n    \"3 5\\n\"\n    \"2 2\\n\"\n    \"3\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    \"2 3\\n\"\n    \"7\\n\"\n) == \"3\\n\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"2\"\nassert solution(\"4\\n5\\n1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"4\"\nassert solution(\"4\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"7\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\"\n) == \"3\"\nassert solution(\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\"\n) == \"2\"\nassert solution(\"\"\"\n2\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\"\n) == \"4\"\nassert solution(\"\"\"\n5\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2\\n4'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n') == '4'\nprint('All tests passed!')"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '60'\nassert solution('''\n1\n12 10\n''') == '12'\n''')\n\nimport math\n\nt = int(input())\n\nfor i in range(t):\n    h, m = map(int, input().split())\n    \n    if h == 0 and m == 0:\n        print(0)\n    else:\n        h = 24 * h\n        m = 60 * m\n        print(math.ceil(h / 24) * 60 + m)"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    1\n    3 2\n    5 3\n    3 1\n    3 3\n    ''') == '59'\nassert solution('''\n    1\n    3 3\n    3 1\n    3 3\n    ''') == '1439'\nassert solution('''\n    1\n    3 3\n    3 1\n    3 3\n    ''') == '1180'\nassert solution('''\n    1\n    3 3\n    3 1\n    3 3\n    ''') == '60'\nassert solution('''\n    1\n    2 2\n    3 4\n    5 5\n    ''') == '60'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"60\"\nassert solution(\"1\") == \"1439\"\nassert solution(\"4 20\") == \"1180\"\nassert solution(\"23 55\") == \"60\"\nassert solution(\"23 0\") == \"1439\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '60'\nassert solution('1') == '1439'\nassert solution('10') == '1180'\nassert solution('50') == '1'\n\nimport math"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution(\"13 0\") == '1'\nassert solution(\"1 2\") == '6'\nassert solution(\"13 2\") == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(\n    \"5\\n\"\n    \"23 55\\n\"\n    \"23 0\\n\"\n    \"0 1\\n\"\n    \"4 20\\n\"\n    \"23 59\\n\"\n) == \"60\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5'\nassert solution('''\n2\n0 0\n0 0\n0 0\n0 0\n''') == '1'\n''')\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1\n11 80\n11 0\n4 20\n23 59\n\"\"\") == \"1439\"\n\nassert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"1180\"\n\nassert solution(\"\"\"\n1\n11 80\n11 0\n4 20\n23 59\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n23 55\n23 0\n0 1\n4 20\n23 59\"\"\") == \"60\"\nassert solution(\"\"\"7\n0 0\"\"\") == \"7\"\nassert solution(\"\"\"3\n0 0\"\"\") == \"3\"\nassert solution(\"\"\"11\n0 0\"\"\") == \"11\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 4'\nassert solution(input()) == '-1'\nassert solution(input()) == '3 4'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2'\nassert solution('2 3') == '1 2'\nassert solution('3 3') == '2 3'\nassert solution('4 4') == '2 2'\nassert solution('5 5') == '2 2'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nRURD\") == \"1 2\"\nassert solution(\"5\\nRRUDU\") == \"3 4\"\nassert solution(\"4\\nRRDU\") == \"1 4\"\nassert solution(\"5\\nLDDR\") == \"-1\"\nassert solution(\"4\\nRUD\") == \"1 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n2\n3''') == '2 1'\nassert solution('''1\n1\n2\n3''') == '1 2'\nassert solution('''1\n3\n1\n2''') == '3 1'\nassert solution('''1\n3\n2\n1''') == '3 1'\nassert solution('''1\n1\n3\n2''') == '1 3'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\nassert solution() == '1 4'\nassert solution() == '3 4'\nassert solution() == '-1'"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\nRLDRDRDRDRDR''') == '-1'\nassert solution('''5\nRRDDDRDRDDD''') == '2'\nassert solution('''8\nRRDDDRDRDDDDRD''') == '2'\nassert solution('''13\nLULRDRDDRDRDDDDRRDRDD''') == '0'\nassert solution('''7\nLLDDRRDDRDDDD''') == '3'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 2'\nassert solution('''4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''5\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '3 4'\nassert solution('''5\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nR\nD\nR\nL\nU\nR\nU\nU\nR\nR\nU\nR\nU\nR\nL\nR\nU\nR\nU\nR\nR\nU\nR\nR\nU\nR\nU\nR\nU\nR\nR\nU\nR\nR\nU\nR\nR\nU\nR\nU\nR\nR\nU\nR\nL\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\nU\nR\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\nassert solution('''\n1\nRRU\n1\n''') == '1 2'\nassert solution('''\n2\nRRUD\n2\n''') == '1'\nassert solution('''\n6\nRRUDD\n6\n''') == '1'\nassert solution('''\n7\nRRUDD\n7\n''') == '1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 2\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"5\") == \"3 4\""
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\") == \"1\\n0\\n1\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"2\"\n\n\"\"\"\nimport math\nfrom collections import Counter"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n7 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3'\nassert solution('10\\n14 9 8 7 6 5 4 3 2 1\\n20\\n10 9 8 7 6 5 4 3 2 1\\n1\\n1\\n4\\n1 1 1 3\\n') == '3'\nassert solution('6\\n7\\n2 1 2 1 1\\n5\\n1\\n') == '1'\nassert solution('9\\n8\\n2 1 2 1 1\\n5\\n1\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\") == \"3\"\nassert solution(\"4\\n5\\n1 1 1 3\") == \"0\"\nassert solution(\"4\\n2 1 5 4 3\") == \"2\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n2 1 5 4 3\\n1\\n2\\n3\\n4\\n5') == '1'\nassert solution('6\\n7 7 6 7 3 3 2 3 4 4 5 2\\n2\\n3\\n4\\n5\\n6\\n7') == '3'\nassert solution('6\\n1 1 1 1 1 2 2\\n2\\n3\\n4\\n5\\n6\\n7') == '2'\n\n\"\"\""
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n10\n3 3 4 1 4 2 2 1 1 3\n5\n3 1 3 2 2 1\n1\n1\n3\n2\n1\n''') == '2'\nassert solution('''\n10\n1 1 1 3\n5\n3 1 3 2 2\n1\n1\n3\n2\n1\n''') == '1'\nassert solution('''\n10\n3 3 4 1 4 2 2 1 1 3\n5\n3 1 3 2 2 1\n1\n1\n3\n2\n1\n''') == '2'"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n4\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\nassert solution('''\n3\n4\n2\n1\n''') == '2'\nassert solution('''\n1\n4\n1\n1\n''') == '1'"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"4 2 4 1 4 3 4\") == \"3\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"3\\n1\\n1\\n1\") == \"2\""
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8''') == \"121\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '121'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n4\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '0'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8''') == '121'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('4') == '7'\nassert solution('5') == '7'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"121\"\nassert solution(\"1\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"121\"\nassert solution(\"1\") == \"0\"\n\n\nimport os\nimport sys\n\nfrom io import StringIO\n\n\nclass Capturing(list):\n    def __enter__(self):\n        self._stdout = sys.stdout\n        sys.stdout = self._stringio = StringIO()\n        return self\n\n    def __exit__(self, *args):\n        self.extend(self._stringio.getvalue().splitlines())\n        del self._stringio    # free up some memory\n        sys.stdout = self._stdout\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 1 3''') == '6'\nassert solution('''5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9''') == '14'\nassert solution('''5 10\n1 2 3 4 5 6 7 8''') == '0'\nassert solution('''5 10\n20 100 50 20 100500''') == '227'\nassert solution('''5 10\n1 2 3 4 5 6 7 8''') == '8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5 10\n1 2 3 4 5 6 7 8\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '6'\n\"\"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '0'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '8'"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"6\"\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"18\""
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4 3\\n1 2 1 3') == '6'\nassert solution('10\\n6 8') == '0'\nassert solution('5\\n10 5') == '227'\nassert solution('5 10') == '8'\nassert solution('5 10\\n8 7') == '0'"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '18'\nassert solution(input(False)) == '227'\nassert solution(input(False)) == '8'\nassert solution(input(False)) == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9''') == \"6\"\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"227\"\nassert solution('''5 6\n3 1 2 1 3\n4 3\n2 3\n1 2\n3 1\n4 3''') == \"0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n2 3\n5 8 6\n10 11 13 15\n3 4\n12 14 24\n5 6\n8 9\n''') == '0'\nassert solution('''\n1 2\n3\n5\n10\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n''') == '1'\nassert solution('''\n1\n1\n2\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n''') == '1'\nassert solution('''\n1\n1\n1\n2\n''') == '2'\nassert solution('''\n1\n1\n1\n2\n''') == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n2\n''') == '1'\nassert solution('''\n2\n1\n''') == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n2 1\n1 2\n3 4\n4 5\n''') == '2'\nassert solution('''\n10 10\n1 1\n1 3\n2 2\n2 2\n2 5\n3 4\n4 6\n5 8\n6 7\n7 9\n8 8\n''') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"1\"\nassert solution(s) == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[1, 2]\\n[1, 1]\") == '1'\nassert solution(\"[1, 2, 3]\\n[1, 1]\") == '2'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,2') == '2'"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1,3,3,1'\nassert solution('5') == '1,3,3,1,2,5'\nassert solution('1') == '1'\nassert solution('10') == '1,2,4,6,10,16,22,28,36,44,52,56,64,72,80,86,92,98,104,112,120,126,142,150,156,162,168,174,180,196,202,208,214,220,226,232,238,244,250,256,262,268,274,280,286,292,298,304,320,326,332,338,344,350,356,362,368,374,380,386,392,398,404,410,416,422,428,434,440,446,452,458,464,470,476,492,498,504,510,516,522,528,534,540,546,552,558,564,570,576,582,588,594,600,616,622,628,634,640,646,652,658,664,670,676,682,688,694,700,706,712,718,724,730,736,742,748,754,760,766,772,778,784,790,796,802,808,814,820,826,832,838,844,850,856,862,868,884,890,896,902,908,914,920,926,932,938,944,950,956,962,968,974,980,986,992,998,1004,1010,1016,1022,1028,1034,1040,1046,1052,1058,1064,1070,1076,1082,1088,1094,1100,1106,1122,1128,1134,1140,1146,1152,1158,1164,1170,1176,1182,1188,1194,1210,1216,1222,1228,1234,1240,1246,1252,1258,1264,1270,1276,1282,1288,1294,1300,1306,1312,1318,1324,1330,1336,1342,1348,1354,1360,1366,1372,1378,1384,1390,1396,1402,1408,1414,1420,1426,1432,1438,1444,1450,1456,1462,1468,1474,1480,1486,1492,1498,1504,1510,1516,1522,1528,1534,1540,1546,1552,1558,1564,1570,1576,1582,1588,1594,1600,1606,1612,1618,1624,1630,1636,1642,1648,1654,1660,1666,1672,1678,1684,1690,1696,1702,1708,1714,1720,1726,1732,1738,1744,1750,1756,1762,1768,1774,1780,1786,1792,1798,1804,1810,1816,1822,1828,1834,1840,1846,1852,1858,1864,1870,1876,1882,1888,1894,1900,1906,1912,1918,1924,1930,1936,1942,1948,1954,1960,1962,1968,1974,1980,1986,1992,1998,2004,2010,2016,2022,2028,2034,2040,2046,2052,2058,2064,2070,2076,2082,2088,2094,2100,2106,2122,2128,2142,2148,2154,2161,2177,2184,2190,2196,2202,2218,2224,2230,2236,2242,2258,2264,2270,2276,2282,2288,2294,2300,2306,2312,2318,2324,2330,2336,2342,2348,2354,2360,2366,2372,2378,2384,2390,2396,2402,2408,2414,2420,2426,2432,2438,2444,2450,2456,2462,2468,2474,2480,2486,2492,2498,2504,2510,2516,2522,2528,2534,2540,2546,2552,2558,2564,2570,2576,2582,2588,2594,2590,2596,2601,2608,2614,2620,2626,2632,2638,2644,2650,2656,2662,2668,2674,2680,2686,2692,2698,2704,2710,2716,2722,2728,2734,2740,2746,2752,2758,2764,2770,2776,2782,2788,2794,2800,2806,2812,2818,2824,2830,2836,2842,2848,2854,2860,2866,2872,2878,2884,2890,2896,2902,2908,2914,2920,2926,2932,2938,2944,2950,2956,2962,2968,2974,2980,2986,2992,2998,3004,3010,3016,3022,3028,3034,3040,3046,3052,3058,3064,3070,3076,3082,3088,3094,3101,3108,3114,3120,3126,3132,3138,3144,3150,3156,3162,3168,3174,3180,3186,3192,3198,3204,3208,3214,3220,3226,3232,3238,3244,3240,3246,3260,3266,3272,3278,3284,3290,3296,3300,3306,3312,3318,3324,3330,3336,3342,3348,3354,3360,3366,3372,3378,3384,3390,3396,3402,3408,3414,3420,3426,3432,3448,3454,3460,3456,3462,3468,3474,3480,3486,3492,3498,3504,3510,3516,3522,3528,3534,3540,3546,3552,3558,3564,3570,3576,3582,3588,3594,3590,3596,3602,3608,3614,3620,3626,3632,3638,3644,3650,3656,3662,3668,3674,3680,3686,3692,3698,3704,3710,3716,3722,3728,3734,3740,3746,3750,3756,3762,3768,3774,3780,3786,3792,3798,3804,3810,3816,3822,3828,3834,3840,3846,3852,3858,3864,3870,3876,3882,3888,3894,3900,3906,3912,3918,3924,3930,3936,3942,3948,3954,3960,3966,3972,3978,3984,3990,3996,4012,4018,4024,4030,4036,4042,4048,4054,4060,4066,4072,4078,4084,4090,4096,4102,4108,4114,4120,"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610\n987\n1597\n2584\n4181\n6765\n10946\n17711\n28657\n46368\n''') == '''1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610\n987\n1597\n2584\n4181\n6765\n10946\n17711\n28657\n46368\n'''"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"5\") == [1,3,3,1,1]\nassert solution(\"8\") == [1,4,6,4,1]\nassert solution(\"10\") == [1,5,10,10,5,1]\nassert solution(\"15\") == [1,6,15,20,15,6,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == [1, 3, 3, 1]\n\"\"\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '[1,3,3,1]'\nassert solution('2') == '[1,2,3,1]'\nassert solution('1') == '[1]'\nassert solution('0') == '[]'\nassert solution('-1') == '[]'\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3\n3\n1\n''') == '''1\n3\n3\n1\n'''\n\n\nclass Solution:\n    def solution(self, stdin):\n        k = int(stdin)\n        a = [[1]]\n        for _ in range(k):\n            a.append([1]+[a[-1][i]+a[-1][i+1] for i in range(len(a[-1])-1)])\n        return '\\n'.join(map(str, a[-1]))\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == output\nassert stdout.getvalue().strip() == output.strip()"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == [1], solution(\"1\")\nassert solution(\"2\") == [1,2], solution(\"2\")\nassert solution(\"3\") == [1,3,3,1], solution(\"3\")\nassert solution(\"4\") == [1,4,6,4,1], solution(\"4\")\nassert solution(\"5\") == [1,5,10,10,5,1], solution(\"5\")\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]')\nassert solution('0') == '[]'\nassert solution('4') == '[1,4,6,4,1]'\n\n'''\nfrom math import factorial\n\nclass Solution:\n    def generate(self, numRows: int) -> list:\n        if numRows == 0:\n            return []\n\n        triangle = []\n\n        for i in range(numRows):\n            row = [None for _ in range(i+1)]\n\n            for j in range(i + 1):\n                if j == 0 or j == i:\n                    row[j] = 1\n                else:\n                    row[j] = triangle[i-1][j-1] + triangle[i-1][j]\n\n            triangle.append(row)\n\n        return triangle\n\n\nnumRows = int(input())\nnumRows = 1\nprint(Solution().generate(numRows))\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().rstrip()\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0000000000001011\") == \"3\"\nassert solution(\"0000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(('00000000000000000000000000001011', '00000000000000000000000010000000', '111111111111111111111111111111101')) == 3\nassert solution(('00000000000000000000000000001011', '00000000000000000000000010000000', '111001011111111111111111111111101')) == 1\nassert solution(('00000000000000000000000000001011', '00000000000000000000000010000000', '111')) == 1\nassert solution(('00000000000000000000000000001011', '00000000000000000000000010000000', '1110')) == 0\nassert solution(('00000000000000000000000000001011', '00000000000000000000000010000000', '11100001011111111111111111111111101')) == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0000000000001011') == '3'\nassert solution('0000000010000000') == '1'\nassert solution('111111111111111111111111111101') == '31'"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n\nimport math\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while n:\n            n = n & (n - 1)\n            count += 1\n        return count\n\nassert Solution().hammingWeight(0x00000000000000000000000000001011) == 3\nassert Solution().hammingWeight(0x00000000000000000000000010000000) == 1\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0000000000001011\") == \"3\"\nassert solution(\"0000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\""
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]', solution('[1,2,3]')\nassert solution('[4,3,2,1]') == '[4,3,2,2]', solution('[4,3,2,1]')\n\n'\n'''\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\""
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[5,6,3,4]\") == \"[5,6,4,8]\"\nassert solution(\"[5,6,3,4]\") == \"[5,6,4,8]\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"21\"\nassert solution(\"123\") == \"124\"\nassert solution(\"4193 with words\") == \"41931994\"\nassert solution(\"words and 987\") == \"words and 987\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[1,2,3]\") == \"1,2,4\"\nassert solution(\"[4,3,2,1]\") == \"4,3,2,2\"\nprint(solution(input()))\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nInput: \n[1,2,3]\nOutput: \n[1,2,4]\n\nInput: \n[4,3,2,1]\nOutput: \n[4,3,2,2]\n''') == '''\n\nInput: \n[1,2,3]\nOutput: \n[1,2,4]\n\nInput: \n[4,3,2,1]\nOutput: \n[4,3,2,2]\n'''\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('4,3,2,1') == '4,3,2,2'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3]) == '1 2 4'\nassert solution([4, 3, 2, 1]) == '4 3 2 1'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,2,3]) == \"123\"\nassert solution([4,3,2,1]) == \"4321\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4'\nassert solution('2 -5') == '-3'\nassert solution('1 0') == '1'\nassert solution('-2 2') == '4'\nassert solution('3 -6') == '-5'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('5 6') == '10'"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '4', \"Wrong result\"\nassert solution('3 2') == '5', \"Wrong result\"\nassert solution('3 3') == '6', \"Wrong result\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"3 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '4'\nassert solution('4 3') == '4'"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3 1'\n) == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"-5 1\") == \"-5\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3'\nassert solution('100 200') == '300'\nassert solution('123 21') == '366'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '3', 'Wrong answer'\nassert solution('4 5') == '3', 'Wrong answer'\nassert solution('10 10') == '1', 'Wrong answer'\nassert solution('50 50') == '4', 'Wrong answer'\nassert solution('50 50 50') == '3', 'Wrong answer'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"3\"\n\"\"\""
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"4 6\") == \"0\"\n\n-------------------------------\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"20 10\") == \"8\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3\\n'\nassert solution('1 2 3') == '3\\n'\nassert solution('2 3') == '3\\n'\nassert solution('2 1') == '1\\n'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '3'\nassert solution('5 10') == '3'\nassert solution('5 7') == '4'\nassert solution('5 5') == '3'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"test 1\"\nassert solution(\"4 4\") == \"3\\n\", \"test 2\"\nassert solution(\"10 10\") == \"9\\n\", \"test 3\"\nassert solution(\"5 0\") == \"1\\n\", \"test 4\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == 'Yes'\nassert solution('200') == 'Yes'\nassert solution('20') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('15') == 'No'\n\"\"\""
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\n\"\"\""
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('12') == 'No'\nassert solution('12') == 'Yes'\nassert solution('12') == 'No'\n\"\"\""
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1234') == 'No'"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"6\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5''') == 'No'\nassert solution('''12\n3''') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5 -1') == '12'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '12'\nassert solution('10') == '8'\nassert solution('3') == '10'\nassert solution('4') == '6'\nassert solution('2') == '3'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\n    3,\n    3,\n    5,\n    -1,\n]) == '12\\n8\\n10\\n'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"1\",\"2\",\"3\",\"4\",\"5\"]) == \"12\\n8\\n10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3 5 -1''') == '12'\nassert solution('''4\n-1 4 5 3''') == '4'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5 -1''') == '12'\nassert solution('''3\n10 3 -1''') == '8'\nassert solution('''3\n6 1 -1''') == '7'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5 -1\n''') == '12\\n8\\n10\\n'\nassert solution('''6\n4 5 -1\n''') == '14\\n12\\n8\\n10\\n12\\n10\\n'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 2 2''') == '12'\nassert solution('''5\n1 3 4 1\n''') == '8'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n3 5 -1\"\"\") == \"12\"\nassert solution(\"\"\"2\n2 4 1\"\"\") == \"8\"\nassert solution(\"\"\"3\n3 5 -1\"\"\") == \"10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '12\\n8\\n10'\nassert solution('10') == '59\\n59\\n59'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n'''\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\""
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n\n'''\n\nimport os"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n\n'''"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWBBBWW\") == \"4\""
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BBBWW') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == '1'"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"BWW\") == \"1\"\nassert solution(\"WWW\") == \"2\"\nassert solution(\"BBBB\") == \"2\"\nassert solution(\"BBBBBBBBBBBB\") == \"3\"\nassert solution(\"BBBBBBBBBBBBBBBB\") == \"4\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWBWB\") == \"2\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWBWB\") == \"2\"\nassert solution(\"BBW\") == \"1\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == '1'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '3'\nassert solution(input()) == '5'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('9 9') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\n'''\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n2 2\") == \"Yes\"\nassert solution(\"5 6\\n5 6\") == \"No\"\nassert solution(\"1 1\\n2 2\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 21\\n\") == \"Yes\"\nassert solution(\"5 4\\n\") == \"No\"\nassert solution(\"3 2\\n\") == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"12 50\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\n\"\"\""
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 21\n''') == 'Yes'\nassert solution('''1 21\n''') == 'No'\nassert solution('''3 12\n''') == 'No'"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 22') == 'No'\n\"\"\"\na,b = map(int,input().split())"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'\n\n'''\n\nnumbers = input().split()"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"\nassert solution(\"7\\n7 7 9 9 9\\n\") == \"5\\n\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\nassert solution('2') == '0'\nassert solution('5') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n3 1 4 1 5 9 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 2 4 5 2 5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n10\n10 1 9 9 9 9 9 9 9 9\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 3\\n\") == \"4\"\nassert solution(\"10\\n10 20 30 40 50 60 70 80 90 100\\n\") == \"40\"\nassert solution(\"10\\n10 20 30 40 50 60 70 80 90 100\\n\") == \"40\"\nassert solution(\"10\\n10 20 30 40 50 60 70 80 90 100\\n\") == \"40\""
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n3 1 4 1 5 9 2') == '4'\nassert solution('9\\n2 3 4 2 5 8 6 1') == '2'\nassert solution('1\\n2 1') == '0'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3 1 4 1 5 9 2''') == '4'\nassert solution('''4\n3 1 4 1 5 9 2''') == '3'\nassert solution('''10\n3 1 4 1 5 9 2''') == '3'\nassert solution('''5\n3 1 4 1 5 9 2''') == '2'\nassert solution('''13\n3 1 4 1 5 9 2''') == '1'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('8') == '5'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3\\n') == '2'\nassert solution('5\\n3 1 2 5\\n') == '4'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\nassert solution(\"20\") == \"17\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"11\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '11'\nassert solution('3') == '13'\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '5'\n\"\"\"\n\nn = int(input())\na = int(input())"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('3\\n1') == '1'"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"15\") == \"12\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"10\") == \"11\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4\n''') == '5'\nassert solution('''\n5\n5\n''') == '12'\nassert solution('''\n6\n4\n''') == '13'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n3\n6\n''') == '9'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 3') == 'YES'\nassert solution('2 2 6') == 'YES'\nassert solution('3 3 3') == 'NO'\nassert solution('4 4 4') == 'YES'\nassert solution('5 5 5') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 3') == 'NO'"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 3 1\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 1 2\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('3 3 4') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 7') == 'NO'\nassert solution('2 4 6') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"5 7 9\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"3 2 4\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 3 4\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 5 6\") == \"NO\""
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == 'Yes'\nassert solution('3') == 'No'\nassert solution('8') == 'No'\nassert solution('29') == 'Yes'\nassert solution('30') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'No'\nassert solution('10') == 'No'\nassert solution('90') == 'Yes'\nassert solution('92') == 'No'\n\n---Output---\nYes\nNo\nNo\n\n\n\"\"\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == 'No'\nassert solution('7') == 'Yes'\nassert solution('18') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('29') == 'Yes'\nassert solution('101') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'No'\nassert solution('89') == 'Yes'\nassert solution('80') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"2900\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12\") == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"39\") == \"No\"\nassert solution(\"88\") == \"Yes\"\n\n'''\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\""
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 1 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"./input.txt\") == \"1\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 2 3\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 3, 2]) == \"1\"\nassert solution([5, 3, 4]) == \"1\"\nassert solution([4, 3, 2]) == \"1\"\nassert solution([5, 4, 2]) == \"2\"\nassert solution([3, 4, 2]) == \"2\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 3, 3]) == \"1\"\nassert solution([5, 3, 4]) == \"2\"\nassert solution([5, 3, 5]) == \"0\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3 3\n1 2 4\n''') == '1'\nassert solution('''\n5 3 1\n0 1\n''') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n1 2 4') == '1'\nassert solution('6 5 2\\n5 6 1 3 4 2\\n1 2 3 4 5 6') == '1'\nassert solution('10 10 5\\n6 5 3 9 8 5 3 8 2\\n1 2 3 4 5 6 7 8 9 10\\n') == '5'\nassert solution('100 100 5\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == '50'"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 5 5\") == \"2\""
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"4 5 2\") == \"4\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"10 10 1\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n\n''') == 'Yes'\nassert solution('''3 2\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n#.\\n#.\\n#.\\n\") == \"Yes\"\nassert solution(\"1 3\\n..#\\n#..\\n#..\\n\") == \"No\"\nassert solution(\"3 3\\n.#.\\n#.#\\n#.#\\n\") == \"No\"\nassert solution(\"2 2\\n.##\\n.##\\n.##\\n\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 3\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('4 3') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 2') == 'No'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n.#.\n###\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('2 1') == 'Yes'\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n\n'''\n\nfrom collections import deque"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 3') == 'No'\n'''"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        \n        # Reading input\n        lines = stdin.split(\"\\n\")\n        H = int(lines[0])\n        W = int(lines[1])\n        \n        # Check if it is a valid matrix\n        if H < 1 or W < 1 or (H > 50) or (W > 50):\n            return \"No\"\n        \n        # Matrix\n        matrix = []\n        for i in range(H):\n            matrix.append(list(stdin[i+1].strip()))\n        \n        # Counting how many black and white squares\n        black_count = 0\n        white_count = 0\n        for i in range(H):\n            for j in range(W):\n                if matrix[i][j] == \"#\":\n                    black_count += 1\n                elif matrix[i][j] == \".\":\n                    white_count += 1\n        \n        # We only need to check if the color is present in the matrix\n        # and not in the adjacent squares\n        # In that case, we need to paint it white, as it is safe\n        if black_count > 0 and black_count!= white_count*2:\n            return \"No\"\n        \n        # If all is well, we return Yes\n        return \"Yes\""
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 8') == 'Yes'\nassert solution('3 3 7') == 'No'"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 6 7\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('100 50 50') == 'Yes'\nassert solution('5 50 10') == 'No'\n\n'''\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 2 3') == 'No'"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('20 30 10') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('3 10 20') == 'No'"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 50 20\") == \"No\"\nassert solution(\"10 30 10\") == \"Yes\"\nassert solution(\"20 30 20\") == \"No\"\nassert solution(\"20 30 10\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 30 20''') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"10 20 30\") == \"Yes\"\nassert solution(\"100 60 40\") == \"No\""
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"6 5 7 1\") == \"Left\"\nassert solution(\"10 5 7 1\") == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 2 5 1\") == \"Right\"\nassert solution(\"3 3 5 1\") == \"Left\"\nassert solution(\"3 1 2 3\") == \"Balanced\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('4 5 2 1') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 5 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\nassert solution('3 8 7 1') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('6 1 2 1') == 'Left'\nassert solution('5 1 2 1') == 'Left'\nassert solution('4 2 2 2') == 'Right'\nassert solution('5 2 2 2') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 8 3\") == \"Balanced\"\nassert solution(\"1 2 3 4\") == \"Right\"\nassert solution(\"1 2 1 2\") == \"Left\""
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 1 1 1\") == \"Left\"\nassert solution(\"5 5 5 5\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Right'\nassert solution('1 1 1 1') == 'Balanced'\nassert solution('1 1 2 3 4') == 'Left'\nassert solution('1 1 3 2 4') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 5\n7 1\n''') == 'Left'\nassert solution('''\n5\n3 5\n7 8\n''') == 'Left'\nassert solution('''\n5\n3 5\n7 7\n''') == 'Right'\nassert solution('''\n5\n3 5\n7 7\n''') == 'Right'\nassert solution('''\n5\n3 5\n7 7\n''') == 'Left'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '10'\nassert solution('3\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '9'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '8'\nprint(solution(input()))\nprint(solution(input()))\n\n------------------------------------\nDICTIONARY ANALYSIS\n---------------\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '10'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 1 0 1 0 0 0 1 0 1') == '8'\nassert solution('2\\n0 0 1 0 0 0 0 1 0 1') == '1'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('6\\n0 0 0 0 0 1 1 1 1 1\\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10') == '-1'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == '8'\nassert solution(\"2\") == '0'\nassert solution(\"3\") == '0'\nassert solution(\"4\") == '0'\nassert solution(\"5\") == '0'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n2\n1 1 0 1 0 0 0 1 0 1\n1 1 0 1 0 0 0 0 1 0 1\n\"\"\") == \"8\""
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Yes\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1 2\") == \"No\", \"Should be No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n\") == \"Yes\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('12') == 'No'\nassert solution('12 4') == 'No'\nassert solution('12 4 2') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\n\n----------------------------------------------------\n\n'''\nimport math"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n269-6650''') == 'Yes'\nassert solution('''8 9\n67-7788''') == 'No'"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('3 3') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"4 4\") == \"Yes\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n269-6650\\n') == 'Yes'\nassert solution('10 8\\n936-8276\\n') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 3 6') == '0'\nassert solution('1 2 6') == '2'\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\\n\") == \"1\"\nassert solution(\"4 2 3\\n\") == \"3\"\nassert solution(\"7 4 2\\n\") == \"5\"\nassert solution(\"5 2 4\\n\") == \"2\"\nassert solution(\"7 4 2\\n\") == \"5\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('4 3 9') == '3'\nassert solution('6 1 9') == '6'\nassert solution('9 6 9') == '0'\nassert solution('5 9 9') == '2'"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 6\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 6') == '1'\nassert solution('3 2 6') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"0 1 2\") == \"0\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 2 2') == '0'\nassert solution('3 3 4') == '3'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"2 5 4\") == \"2\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 1') == '0'\nassert solution('3 3') == '0'\nassert solution('2 5') == '2'\nassert solution('3 2 3') == '0'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('1 2 5 3') == '5'\nassert solution('4 3 7 4') == '3 4 5 7'\n\"\"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"1 5 2\") == \"1\"\nassert solution(\"1 5 3\") == \"1\"\nassert solution(\"4 8 2\") == \"4\"\nassert solution(\"2 1 2\") == \"2\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"4 5 7 3\") == \"4\"\nassert solution(\"7 5 3\") == \"7\"\nassert solution(\"8 7 3\") == \"8\""
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('4 8 3') == '4'\nassert solution('5 7 2') == '5'\nassert solution('6 4 3') == '6'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3,4,7,8\"\nassert solution(\"2 5 8\") == \"2,3,4,5,7,8\"\nassert solution(\"8 3 1\") == \"8,7,6,5,4,3,2\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == '3 4 7 8'"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('5 2 3 1') == '5\\n1\\n3\\n4\\n2'\n\"\"\""
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\") == \"1\"\nassert solution(\"3 5 3\") == \"1 3\"\nassert solution(\"5 3 2\") == \"1 3\"\nassert solution(\"3 5 5 5\") == \"1 3 5\""
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([int(x) for x in stdin.split()]) == '3 4 7 8'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\", \"All integers should be within the range and have the correct answers.\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC\"\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"ACB\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AtCoder s Contest') == 'ABC', 'Wrong answer'\nassert solution('AtCoder Beginner Contest') == 'ABC', 'Wrong answer'\nassert solution('AtCoder Beginner') == 'ABC', 'Wrong answer'\nassert solution('AtCoder Beginner Contest') == 'ABC', 'Wrong answer'\n\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder s Contest') == 'AxC'\nassert solution('AtCoder Beginner Contest') == 'ABC'"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\""
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('AtCoder') == 'AOC'\nassert solution('AtCoder s Contest') == 'AOCS'\nassert solution('AtCoder Beginner Contest') == 'AOCB'\nassert solution('AtCoder Beginner Contest II') == 'AOCB'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\""
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"YES\"\nassert solution(\"2 1 2\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    4\n    3 5 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n    2\n    5 4 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 1 2') == 'NO'\nassert solution('1 1 3') == 'YES'\nassert solution('1 1 4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 3 3\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 4\") == \"YES\"\n\nassert solution(\"1 1 4\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 2 2') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 3 4') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 5 4\") == \"NO\""
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nX t\n''') == '83'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 3\") == \"5\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"10 10\") == \"25\""
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 20') == '82'\nassert solution('10 50') == '62'\nassert solution('1000 10000') == '8226'"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6') == '2'\nassert solution('100 10') == '82'\nassert solution('10 5') == '9'\n\"\"\""
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"0\"\nassert solution(\"2 2\\n\") == \"0\"\nassert solution(\"5 5\\n\") == \"10\"\nassert solution(\"10 10\\n\") == \"31\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"12\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 5') == '8'\nassert solution('1 1') == '1'\nassert solution('2 5') == '7'\nassert solution('5 3') == '6'\n\"\"\""
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"83\""
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n6''') == '4'\nassert solution('''5 1\n6''') == '4'\nassert solution('''5 1\n6''') == '4'\nassert solution('''5 1\n6''') == '4'\nassert solution('''5 1\n6''') == '4'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n100000000000000000\\n100000000000000000\\n100000000000000000') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nprint(solution(\"2\"))\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1000000000000000000\"\n\"\"\""
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1', \"Wrong result\"\nassert solution('2') == '-1', \"Wrong result\""
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"3\") == -1\nassert solution(\"4\") == \"1000000000000000000\"\nassert solution(\"5\") == -1\nassert solution(\"6\") == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1000000000') == '1000000000000000000'\nassert solution('1000000000') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1000000000 1000000000\\n') == '1000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2018\") == \"Yes\"\nassert solution(\"2000\") == \"Yes\"\nassert solution(\"9999\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('15') == 'No'\nassert solution('0') == 'Yes'\nassert solution('3') == 'No'\nassert solution('1000000') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'No'\nassert solution('8') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('24') == 'Yes'\nassert solution('1') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1\\n') == 'Yes'\nassert solution('10\\n100\\n') == 'No'\nassert solution('7\\n1\\n') == 'Yes'\nassert solution('7\\n10\\n') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('200') == 'No'\nassert solution('1') == 'Yes'\n'''\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"25\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n10\\n') == 'Yes'\nassert solution('2\\n2\\n') == 'No'\nassert solution('3\\n11\\n') == 'Yes'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 5\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('1 1 3') == 'dangerous'\nassert solution('2 3 1') == 'dangerous'\nassert solution('2 2 2') == 'dangerous'\nassert solution('2 3 2') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 6\") == \"safe\"\nassert solution(\"2 3 6\") == \"dangerous\"\nassert solution(\"4 3 6\") == \"dangerous\"\nassert solution(\"3 3 6\") == \"safe\"\nassert solution(\"5 3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 5\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"safe\"\nassert solution(\"4 3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == 'dangerous'\nassert solution('3 5 3') == 'dangerous'\nassert solution('5 6 5') =='safe'\nassert solution('2 1 3') == 'dangerous'\nassert solution('3 2 3') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 4') == 'dangerous'\nassert solution('4 3 5') == 'dangerous'\nassert solution('5 5 5') =='safe'\nassert solution('4 5 5') == 'dangerous'\nassert solution('7 7 7') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 3, 6]) =='safe'\nassert solution([1, 4, 6]) == 'dangerous'\nassert solution([1, 2, 5]) == 'dangerous'\nassert solution([1, 1, 1]) =='safe'\nassert solution([1, 1, 1]) =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 6') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"10 2 5\") == \"dangerous\"\nassert solution(\"8 3 5\") == \"dangerous\"\nassert solution(\"1 3 5\") == \"dangerous\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '9'\nassert solution('15') == '27'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"9\", \"Test 1 Failed\"\nassert solution(\"10\") == \"9\", \"Test 2 Failed\"\n\n'''\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(6) == 6\nassert solution(12) == 9\nassert solution(2) == 1\nassert solution(5) == 1"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\n''') == '9'\nassert solution('''9\n''') == '9'\nassert solution('''25\n''') == '25'\nassert solution('''16\n''') == '16'\nassert solution('''10\n''') == '9'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"9\") == \"9\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(10) == \"9\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\"\n    ) == \"9\"\nassert solution(\n    \"3\"\n    ) == \"9\"\nassert solution(\n    \"3\"\n    ) == \"9\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('7\\n') == '6'\nassert solution('10\\n') == '9'\n\n\"\"\"\nimport math"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '100'\nassert solution('1000') == '999'\nassert solution('10000') == '10000'\nassert solution('100000') == '100000'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2\\n1 1\") == \"10\"\nassert solution(\"10\\n1 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\") == \"100\""
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"10\""
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2\n''') == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('6') == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '17'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1\\n3 2') == '10'\nassert solution('3 4\\n2 3\\n1 2\\n3 4') == '15'\nassert solution('9 5\\n6 1\\n5 4\\n6 2\\n6 1\\n6 4\\n6 2\\n5 4\\n6 3\\n6 5\\n5 4\\n6 3\\n6 2\\n6 4\\n6 2\\n5 4\\n6 2\\n6 5\\n6 1\\n5 4\\n6 1\\n6 4\\n6 2\\n6 4\\n5 4\\n5 4\\n6 2\\n5 4\\n6 2\\n6 1\\n6 4\\n5 4\\n6 3\\n5 4\\n6 2\\n6 1\\n6 3\\n5 4\\n6 2\\n6 1\\n6 2\\n6 4\\n6 1\\n6 3\\n6 4\\n6 1\\n5 4\\n6 4\\n6 2\\n5 4\\n5 4\\n6 4\\n6 3\\n5 4\\n6 3\\n5 4\\n5 4\\n6 4\\n6 2\\n6 3\\n6 2\\n6 1\\n5 4\\n6 1\\n6 4\\n6 3\\n6 2\\n6 1\\n5 4\\n6 1\\n6 2\\n6 4\\n6 1\\n5 4\\n6 4\\n5 4\\n6 2\\n6 4\\n6 3\\n5 4\\n6 2\\n6 1\\n6 4\\n6 3\\n6 2\\n6 4\\n6 1\\n6 4\\n6 3\\n6 2\\n6 1\\n6 2\\n6 4\\n6 1\\n6 4\\n6 1\\n6 2\\n6 4\\n6 1\\n6 2\\n6 2\\n5 4\\n6 4\\n6 3\\n6 2\\n6 1\\n6 4\\n6 3\\n5 4\\n6 3\\n6 4\\n6 4\\n6 3\\n6 4\\n6 2\\n5 4\\n6 2\\n6 3\\n6 4\\n6 3\\n6 5\\n6 2\\n6 2\\n6 3\\n5 4\\n6 1\\n6 4\\n6 3\\n6 2\\n6 1\\n6 2\\n6 2\\n6 3\\n6 2\\n6 3\\n6 1\\n6 3\\n6 2\\n6 1\\n6 1\\n6 2\\n6 2\\n6 2\\n6 4\\n6 2\\n6 1\\n6 4\\n6 4\\n6 3\\n6 2\\n6 1\\n6 2\\n6 3\\n6 2\\n6 1\\n6 1\\n6 2\\n6 2\\n6 2\\n6 2\\n6 1\\n6 1\\n6 4\\n6 1\\n6 2\\n6 2\\n6 2\\n6 2\\n6 1\\n6 1\\n6 1\\n6 2\\n6 2\\n6 1\\n6 1\\n6 1\\n6 2\\n6 2\\n6 1\\n6 1\\n6 2\\n6 1\\n6 2\\n6 1\\n6 2\\n6 1\\n6 1\\n6 1\\n6 1\\n6 2\\n6 1\\n6 2\\n6 1\\n6 1\\n6 1\\n6 2\\n6 1\\n6 2\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 2\\n6 2\\n6 1\\n6 1\\n6 2\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6 1\\n6"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n2 3\n1 1\n3 2\n\"\"\") == \"10\"\nassert solution(\"\"\"\n4\n4 6\n3 3\n1 1\n2 1\n\"\"\") == \"20\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('4\\n1 2\\n3 2\\n4 2\\n') == '9'\nassert solution('8\\n3 4\\n1 3\\n5 4\\n7 3\\n') == '11'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"yes\"\nprint(solution(input()))"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('accessibility') == 'no'\nassert solution('accessible') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"hello\") == \"yes\", \"Wrong!\"\nassert solution(\"\") == \"yes\", \"Wrong!\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('uncopyrightable') == 'yes', 'test 1 fail'\nassert solution('conception') == 'no', 'test 2 fail'\nassert solution('example') == 'no', 'test 3 fail'\nassert solution('hello world') == 'yes', 'test 4 fail'\nassert solution('hejhej') == 'yes', 'test 5 fail'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'yes'\nassert solution('copyrightable') == 'no'\nassert solution('---') == 'no'\nassert solution('abcdefgh') == 'yes'\nassert solution('abcabc') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('This is a sentence.') == 'no'\nassert solution('This Is a Sentence.') == 'yes'\nassert solution('This is a sentence!') == 'no'\nassert solution('ThisIsASentence!') == 'yes'"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"mocktest\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('!@#$%^&*()_+') == 'no'\nassert solution('itsthebestofall') == 'yes'\nassert solution('it is the best of all') == 'no'"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('5\\nWEEWE') == '1'\nassert solution('4\\nWEEWEW') == '1'\nassert solution('4\\nWEWEW') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nWEEWW\\n') == '1'\nassert solution('6\\nEEWEEEW\\n') == '2'\nassert solution('3\\nWEEW\\n') == '1'\nassert solution('6\\nWEWEW\\n') == '2'\nassert solution('3\\nWE\\n') == '0'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nWEEWW') == '1'\n\n'''"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('5\\nWEEE') == '1'\nassert solution('5\\nWEEW') == '2'\nassert solution('5\\nWEEEEW') == '2'\nassert solution('5\\nWEEWE') == '3'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('3\\nWEEWW') == '2'\nassert solution('4\\nWEEWW') == '3'"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '4'\nassert solution('10 10') == '3'\nassert solution('13 13') == '6'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n1\\n2\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n1\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n1\\n1\\n1\""
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 2\n2 3\n1 4''') == '2\\n2\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\\n2\\n1\\n1\""
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '2\\n2\\n1\\n1'\nassert solution('4 3') == '2\\n2\\n1\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\nassert solution('4 3') == '2\\n2\\n1\\n1'\n\nprint(solution(input()))"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2\""
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 3'\n    '1 2'\n    '2 3'\n    '1 4'\n    ) == '2\\n2\\n1\\n1'\n\nassert solution(\n    '4 5'\n    '1 3'\n    '1 4'\n    '2 4'\n    '4 5'\n    ) == '2\\n2\\n2\\n2\\n1'\n\nassert solution(\n    '10 20'\n    '1 3'\n    '1 4'\n    '2 4'\n    '4 6'\n    '6 7'\n    '7 8'\n    '8 9'\n    '9 10'\n    '10 11'\n    ) == '2\\n3\\n2\\n3\\n1'\n\nassert solution(\n    '20 10'\n    '1 6'\n    '2 5'\n    '1 4'\n    '2 4'\n    '1 7'\n    '4 8'\n    '3 8'\n    '6 8'\n    '5 8'\n    '4 9'\n    '6 9'\n    '9 10'\n    '10 11'\n    '11 12'\n    '3 12'\n    '4 12'\n    '6 11'\n    '5 12'\n    '7 12'\n    '8 11'\n    ) == '2\\n3\\n2\\n3\\n1\\n4'\n\nassert solution(\n    '1 3'\n    '4 3'\n    '1 4'\n    '2 4'\n    '4 5'\n    '2 5'\n    '4 6'\n    '2 6'\n    '3 6'\n    '2 6'\n    '3 7'\n    '1 7'\n    ) == '1\\n2\\n3\\n2\\n1'"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"5 4\") == \"1\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '25'\n\"\"\"\nn = int(input())"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '30'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n10\\n15') == '25'\nassert solution('2\\n10\\n5\\n15') == '30'\nassert solution('3\\n10\\n15\\n10') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n3\\n5\\n9\\n\") == \"30\\n\"\n\n\"\"\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '50'\nassert solution('6') == '60'"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"25\"\nassert solution(\"2\") == \"30\"\nassert solution(\"3\") == \"25\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '25'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nabc\") == \"abc\"\nassert solution(\"2\\nabcc\") == \"ac\"\nassert solution(\"3\\nbc\") == \"bc\"\nassert solution(\"4\\nac\") == \"ac\"\nassert solution(\"5\\nabc\") == \"abc\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n\") == \"2\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"10\\n\") == \"4\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nabca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aabbca') == '2'\n\n----Hints----\nWrite down what Python has in mind when you are coding.\nGiven a string, you may split it into 2 parts.\n1) we have a middle string consisting of n-1 characters\n2) we have a second middle string consisting of n characters\n3) we have a left and a right side string\n4) we have a left and a right side string\n\nWe can perform this splitting of the string S using the following algorithm:\n\n1) We create a helper function called helper(). This function takes in the two strings, x and y and splits the string into x and y by creating a list of the two pieces, namely x and y.\n2) Then, the function will check if x is shorter than y. If it is, it will first split the left side of x and then cut the left side of x and y.\nThis is done by calling the helper() function. Then, the helper function calls itself to cut the right side of x and y, and then it returns a tuple of the two lists x and y.\n\nThis process is repeated till x and y are of the same length. If x is shorter than y, x is replaced with helper(x, y), otherwise it is replaced with helper(y, x).\n\nTo find the length of x, we can create a variable count and set count to the length of x. Then, we multiply count by 2, then add 1, and this is the number of different letters in x.\n\nTo find the length of y, we can create a variable count and set count to the length of y. Then, we multiply count by 2, then add 1, and this is the number of different letters in y.\n\nWe can see the explanation of this problem in the below code."
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '1'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nababbca') == '2'\nassert solution('2\\nababbca') == '1'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('aabbca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nabcd') == '2'\nassert solution('2\\nabcd') == '1'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Sunny\nCloudy\nRainy''') == 'Cloudy'\nprint(solution(input()))"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Cloudy'"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Cloudy\"\n\n\"\"\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\\n\") == \"Cloudy\\n\"\nassert solution(\"Cloudy\\n\") == \"Sunny\\n\"\nassert solution(\"Rainy\\n\") == \"Sunny\\n\"\nassert solution(\"Sunny\\n\") == \"Sunny\\n\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7 17 120\n\"\"\") == \"119\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119', 'error'\nassert solution('7 1 120') == '119', 'error'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('5 10 120') == '10'\n\nprint(solution(input()))"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\"\n\n\"\"\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 100\") == \"100\"\nassert solution(\"2 2 200\") == \"200\"\nassert solution(\"3 3 100\") == \"120\"\nassert solution(\"3 5 200\") == \"160\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"3 1 10\") == \"10\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 5') == '5'\nassert solution('6 7') == '7'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 10 120') == '120'\nassert solution('7 100 120') == '100'\nassert solution('7 101 100') == '100'\nassert solution('7 102 100') == '100'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''7 17 120\n''') == '119'\nassert solution(\n'''7 17 120\n''') == '119'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 5\") == \"9500\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"3700\"\nassert solution(\"2 2\") == \"8200\"\nassert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"7200\"\nassert solution(\"0 1\") == \"3700\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\"\"\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3800\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '40180'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 0') == '0'\n'''"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3800'\n\"\"\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"atcoderregularcontestregularcontest\") == \"None\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('jxpgvysyoylgjcvzc'\n) == 'y'\nassert solution('aabcbaca') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('a') == 'b'\nassert solution('ab') == None\nassert solution('aab') == 'c'\nassert solution('aaba') == 'c'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abc') == 'b'\nassert solution('abcabc') == 'c'\nassert solution('abcabcc') == 'b'\nassert solution('aaabbbcc') == 'c'\n\nassert solution('') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('a'*100+'atcoderregularcontest') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"b\"\n\"\"\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''atcoderregularcontest''') == 'b'\nprint(solution('''atcoderregularcontest'''))\n'''\n\nn = int(input())\n\nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\n\nfor i in range(n):\n    letter = input()\n    if letter not in alphabets:\n        print(letter)\n        break\nelse:\n    print(None)"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nprint('all test cases passed')"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n4 4 4 3') == '4\\n3\\n3\\n4\\n'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"4 3 3 4\"\n'''"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 2, 4, 3]) == \"4 3 4\"\nassert solution([3, 2, 4, 3]) == \"3 3 3\"\nassert solution([2, 4, 4, 3]) == \"3 3 3\"\nassert solution([1, 2, 3, 4]) == \"4\"\nassert solution([1, 2, 3, 5]) == \"2 2\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 3\") == \"4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2 4 4 3') == '4'\nassert solution('4') == '3'\nassert solution('3') == '3'\nassert solution('4 1') == '1'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2 4 4 3\") == \"3\"\nassert solution(\"2 3 4 5\") == \"4\"\nassert solution(\"1 3 2 5\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '4 3 3 4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 4 4 3') == '4'\nassert solution('5\\n2 4 4 3 5') == '3'\nassert solution('6\\n2 4 4 3 5 6') == '4'\nassert solution('7\\n2 4 4 3 5 6 7') == '4'\nassert solution('8\\n2 4 4 3 5 6 7 8') == '3'"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 3\") == \"4 3 4\"\nassert solution(\"4\") == \"3 4 4\"\nassert solution(\"2 4 4 3 4\") == \"4 3 4\""
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n3 1''') == '1'\nassert solution('''4\n1 2 2 4''') == '2'\nassert solution('''6\n4 1 2 3 4 2''') == '3'\nassert solution('''9\n1 2 3 4 5 6 8 7''') == '10'\nassert solution('''10\n1 2 3 4 5 6 8 7 8 9''') == '9'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 4 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 2 4 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 1 1 2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 4 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution([1, 2, 3, 4, 5, 6]) == \"2\"\nassert solution([1, 2, 3, 4, 5, 10, 11, 12, 13, 14]) == \"10\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"2\", \"simple case\"\nassert solution(\"1\") == \"0\", \"simple case\"\nassert solution(\"2\") == \"0\", \"simple case\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\n\nThe logic behind this exercise is quite simple:\nWe need to find four sticks that can form a rectangle. We can start with any of the sticks.\nFor each of the sticks we'll find the maximal rectangle (including a square) that can be formed with this stick.\nNow we need to choose four sticks that maximize these rectangles.\nFor each of the foursticks we'll find the maximal rectangle (including a square) that can be formed with them.\nNow we can see that if we choose these four sticks the rectangle with the biggest area (including a square) will be the optimal one.\n\n------Complexity------\nThe time complexity will be O(4^{N}) because, every time we choose four sticks, we have to calculate four rectangles.\nAnd each of these rectangles can be given as a rectangle including a square.\nThe space complexity will be O(1) because we only used constant space.\n\nhttps://www.geeksforgeeks.org/find-maximum-rectangle-area-containing-given-set-of-points/\nhttps://www.geeksforgeeks.org/maximum-square-subarray-with-given-sum/\n\"\"\"\nimport math\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"6\") == \"0\"\n\"\"\""
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n10') == '8'\nassert solution('2\\n4\\n3') == '2'\nassert solution('3\\n7\\n1') == '4'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '8'\nassert solution('7 1') == '8'\nassert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('10') == '1'"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n7 1\n2\n5\n10\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3\n7 1\n2\n5\n10\n3\n4\n2\n\"\"\") == \"8\""
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"99\"\nassert solution(\"1000000\") == \"99999\"\nassert solution(\"11\") == \"10\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n7 1\\n2\\n5') == '8'\nassert solution('3\\n7 2\\n5') == '1'\nassert solution('3\\n7 3\\n5') == '0'\nassert solution('3\\n7 4\\n5') == '0'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '8'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '4'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"13\"\nassert solution(\"10\") == \"44\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"11\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']\n           ) == '2'\n\nimport math"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n50') == '2'\nassert solution('2\\n2\\n2\\n100') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2\\n2\\n100') == '2'\nassert solution('3\\n2\\n2\\n20') == '2'\nassert solution('0\\n0\\n0\\n5') == '1'\nassert solution('3\\n2\\n1\\n20') == '2'\nassert solution('3\\n2\\n1\\n500') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n2\\n100\") == \"2\"\nassert solution(\"4\\n3\\n2\\n100\") == \"0\"\nassert solution(\"8\\n4\\n3\\n100\") == \"3\""
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('100') == '2'\nassert solution('100') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 10 2\") == \"No\"\nassert solution(\"-1003 2 1\") == \"No\"\n\n\"\"\"\n\nA,B,C = map(int, input().split())\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"4 5 2\") == \"No\"\nassert solution(\"2 3 3\") == \"Yes\""
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"5 1 7\") == \"No\"\nassert solution(\"1 9 9\") == \"No\"\nassert solution(\"-1 -1 -1\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"4 5 6\") == \"Yes\"\nassert solution(\"4 5 7\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes', \"example\"\nassert solution('1 2 3') == 'No', \"another example\"\n\n'''\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3 2\n1 3 3\n3 1 2''') == 'No'\nassert solution('''1 2 3\n1 3 2\n3 1 2''') == 'Yes'\nassert solution('''1 3 1\n1 3 2\n1 3 1''') == 'Yes'\nassert solution('''1 3 3\n1 3 1\n1 3 3''') == 'Yes'\nassert solution('''1 3 3\n1 2 2\n1 3 3''') == 'No'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,3,2]) == 'Yes'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 3 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 10 1\") == \"No\"\nassert solution(\"-5 -5 5\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n\nfrom collections import deque"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\\n4\\n5\\n6\\n7\\n8\\n9\") == \"3\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 1000\\n120\\n100\\n140\\n\"\n) == \"9\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"9\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"10 5\") == \"7\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"6 0\") == \"1\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 120 100 140\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n120''') == '2'\nassert solution('''3 2\n100\n140''') == '2'\nassert solution('''4 2\n120\n100\n140''') == '2'\nassert solution('''5 2\n120\n100\n140''') == '3'\nassert solution('''6 2\n120\n100\n140''') == '3'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1000') == '9'\nassert solution('3 1000') == '9'\nassert solution('3 100') == '2'\n\n---"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1000\n120\n100\n140\n\n''') == '9'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nassert solution(\"1 1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('7') == '3'\nassert solution('7') == '2'"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"13\") == \"4\"\nassert solution(\"23\") == \"5\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"\nprint(solution(input()))\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2700\\n2800 3200\\n2800 3200\\n2800 3200\") == \"2 2 3 2\"\nassert solution(\"4\\n2100 2500 2700 2700\\n2800 3200\\n2800 3200\\n2800 3200\\n2800 3200\\n2800 3200\\n2800 3200\\n2800 3200\") == \"2 2 3 2 3 2 3 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '2 2'\nassert solution('1\\n3\\n') == '1 1'"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '7 7'\nassert solution('5\\n1 1 1 1 1\\n') == '3 3'\nassert solution('7\\n1 1 2 3 4 5 6\\n') == '6 6'\nassert solution('20\\n
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2 2\"\nassert solution(\"4\") == \"2 2 2 2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 2\"\nassert solution([\"10\", \"11\", \"12\", \"13\"]) == \"1 1\"\nassert solution([\"6\", \"8\", \"20\", \"50\"]) == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n0\\n') == '2 1'\nassert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\nassert solution('4\\n0\\n') == '0 0'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n25 20 20 18\\n') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('1\\n1') == '1'\nassert solution('3\\n20 100 20') == '2 1'"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2100\\n2500\\n2700\\n2700\") == \"2 2\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"900\"\nassert solution(\"xx\") == \"900\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ooxx') == '900'\nassert solution('xoox') == '700'\nassert solution('ooox') == '700'\nassert solution('ooo') == '700'\nassert solution('o') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('xo') == '900'\nassert solution('oox') == '500'\nassert solution('ooox') == '700'\nassert solution('ooxo') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '700'\nassert solution('oox') == '900'\n\nstdin = 'oox'\nstdin = 'o'\nstdin = 'xxx'\nprint(solution(stdin))\n\nstdin = 'xoxo'\nprint(solution(stdin))\n\nstdin = 'xoxoxo'\nprint(solution(stdin))\n\nstdin = 'oxo'\nprint(solution(stdin))\n\nstdin = 'oox'\nprint(solution(stdin))\n\nstdin = 'ooxxo'\nprint(solution(stdin))\n\nstdin = 'ooxoxoxo'\nprint(solution(stdin))\n\nstdin = 'oxoxoxoxoxo'\nprint(solution(stdin))\n\nstdin = 'ooxoxoxoxoxoxo'\nprint(solution(stdin))\n\nstdin = 'ooxxxo'\nprint(solution(stdin))\n\nstdin = 'ooxoxoxo'\nprint(solution(stdin))"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '900'\nassert solution('x') == '900'\nassert solution('o') == '700'\nassert solution('ooo') == '900'\nassert solution('oxx') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('ooxx') == '2600'\nassert solution('xo') == '2600'"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '700'\nassert solution('oox') == '700'\nassert solution('xx') == '700'\nassert solution('ox') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"700\"\nassert solution(\"xoxo\") == \"900\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('oxo') == '900'\nassert solution('xox') == '800'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"900\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nH H\n''') == 'H'\nassert solution('''\nD H\n''') == 'D'\nassert solution('''\nD D\n''') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H H\\n\") == \"H\"\nassert solution(\"D D\\n\") == \"D\"\nassert solution(\"H H\\n\") == \"H\"\nassert solution(\"D D\\n\") == \"D\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H H\\n\") == \"H\"\nassert solution(\"D H\\n\") == \"D\"\nassert solution(\"H D\\n\") == \"D\"\nassert solution(\"D D\\n\") == \"H\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"H H\n    D H\n    D H\n    D H\n    D H\n    H H\n    D H\n    H H\n    D H\n    H H\n    \"\"\"\n) == \"H\"\nassert solution(\n    \"\"\"D H\n    D H\n    H H\n    H H\n    D H\n    H H\n    D H\n    D H\n    H H\n    H H\n    \"\"\"\n) == \"D\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"ABCD\") == \"1+2+2+2=7\"\nassert solution(\"B12D\") == \"1+2+2=7\"\nassert solution(\"1A2D\") == \"1+2=7\"\nassert solution(\"1A2DCCCCCCDD\") == \"1+2+2+2+2+2=7\"\n\"\"\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nprint(solution(input()))\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1\n10\n11\n12\n13\n''') == '1+2+3=7'\n\nassert solution(\n'''\n2\n5\n4\n3\n''') == '2-1+2=5'\n\nassert solution(\n'''\n10\n5\n2\n4\n3\n''') == '10-5+2=7'\n\nassert solution(\n'''\n13\n7\n5\n2\n4\n''') == '13-7+5=12'\n\nassert solution(\n'''\n7\n1\n2\n3\n''') == '7+1+2+3=7'"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nprint(solution('1222'))"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == \"1+2+2+2=7\"\nprint(solution('1222'))"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1223') == '1+2+3=7'\nassert solution('1234') == '1+2+4=7'\nassert solution('1244') == '1+2+4=7'\nassert solution('1255') == '1+2+5=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''ABCD''') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1+2+2+2=7\") == \"1+2+2+2=7\"\nassert solution(\"5+3+4+6=6\") == \"5+3+4+6=6\"\nassert solution(\"7+9+7=14\") == \"7+9+7=14\"\nassert solution(\"100+200+300+400=800\") == \"100+200+300+400=800\"\nassert solution(\"100+200+300+400=800\") == \"100+200+300+400=800\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1+1+1+1+1=7\") == \"1+1+1+1+1=7\"\nassert solution(\"9+9+9+9+9=15\") == \"9+9+9+9+9=15\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n1 1 2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '2 0 2 0 0'\nassert solution('6\\n1 3 2 4 5 1\\n') == '2 1 3 2 0 1'\nassert solution('6\\n1 5 2 3 4 1\\n') == '2 1 1 2 0 2'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2 2'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\""
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n1 1 2 2\n\"\"\") == \"\"\"2\n2\n0\n0\n0\n\"\"\".strip()\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('1') == '0'\nassert solution('4') == '0'\n\"\"\"\n\n\"\"\"\nfrom math import gcd\n\nx = int(input())"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"11\") == \"1\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\n\nassert solution(\"1\") == \"0\"\n\nassert solution(\"7\") == \"4\"\n\nassert solution(\"12\") == \"8\"\n\nassert solution(\"27\") == \"50\""
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3'\nassert solution('1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n        \"\"\"X\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('12') == '6'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"12\") == \"8\"\n\n\"\"\"\n\nx = int(input())"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"3\""
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '2'\nassert solution('12') == '7'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1112') == 'No'\nassert solution('1000') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('1111') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('3321') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1234\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1115') == 'No'\nassert solution('1111') == 'No'\nassert solution('1114') == 'No'\n\"\"\"\n\nfrom itertools import product\n\nn = int(input())"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('33') == 'No'\nassert solution('123') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1114\") == \"No\"\nassert solution(\"1113\") == \"Yes\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1234') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\\\n2\n1 5\n2 4\n3 6\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '2'\nassert solution('3') == '2'\n'''\n'''\nn = int(stdin)\nupper = list(map(int, stdin.split()))\nupper = sorted(upper)\nmiddle = list(map(int, stdin.split()))\nmiddle = sorted(middle)\nlower = list(map(int, stdin.split()))\nlower = sorted(lower)\n\nupper2 = list(filter(lambda x: x!= upper[0], upper))\nmiddle2 = list(filter(lambda x: x!= middle[0], middle))\nlower2 = list(filter(lambda x: x!= lower[0], lower))\n\nlen_a = len(upper2)\nlen_b = len(middle2)\nlen_c = len(lower2)\n\nfor i in range(len_a):\n    for j in range(len_b):\n        for k in range(len_c):\n            if upper2[i] < middle2[j] and middle2[j] < lower2[k]:\n                print(1)\n                exit()\n\nprint(2)\n'''\n\nn = int(input())\nupper = list(map(int, input().split()))\nmiddle = list(map(int, input().split()))\nlower = list(map(int, input().split()))\n\nupper.sort()\nmiddle.sort()\nlower.sort()\n\nlen_a = len(upper)\nlen_b = len(middle)\nlen_c = len(lower)\n\nfor i in range(len_a):\n    for j in range(len_b):\n        for k in range(len_c):\n            if upper[i] < middle[j] and middle[j] < lower[k]:\n                print(1)\n                exit()\n\nprint(2)"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\""
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n''') == '3'\nassert solution('''\n4\n10 5\n1 1\n2 2\n5 4\n''') == '3'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C D\") == \">\"\nassert solution(\"D E\") == \"=\"\nassert solution(\"E F\") == \"=\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '<'\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"<\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '<'\nassert solution('A A') == '<'\nassert solution('A D') == '<'\nassert solution('B C') == '>'\nassert solution('A D') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A B') == '<'\nassert solution('X Y') == '>'\nassert solution('C D') == '='\n\"\"\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"B A\") == \">\"\nassert solution(\"A A\") == \"=\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('A C') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A B') == '<'\nassert solution('A F') == '>'\nassert solution('F A') == '='"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('X A') == 'X'\nassert solution('A X') == 'X'\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n\n''') == '11211'\nassert solution('''4 5\n....\n....\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1#\"\nassert solution(\"2\") == \"11\"\n\n\"\"\""
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"11211\", solution(\"3 5\")\nassert solution(\"10 10\") == \"10100100100\", solution(\"10 10\")\nassert solution(\"2 1\") == \"21\", solution(\"2 1\")\nassert solution(\"1\") == \"\", solution(\"1\")\nassert solution(\"1 1\") == \"1111\", solution(\"1 1\")\n\n-------SAMPLE INPUTS-------\n5 5\n...\n...\n...\n...\n...\n\n2 5\n.\n.\n.#\n..\n.#\n\n6 5\n.\n.\n..\n.\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5\\n.....\\n.##..\\n.....') == '11211'\n\nNote that the input specifies the square size, and does not specify the locations of the squares.\n\"\"\"\nimport sys\n\nfrom typing import Any\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\n\n'''\nSample Input 2\n3 5\n.....\n.#.\n..#\n...\n\nSample Output 2\n1234\n1#2#3#1\n1234\n\n'''\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2\\n') == '11'\nassert solution('3\\n') == '112'\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3 5'\n    '.....'\n    '#.#.#'\n) == '11211'\n\n---\n\nSolution by CodeWithHarry"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 5\\n\"\n    \".....\\n\"\n    \"#.#.#\\n\"\n    \".....\\n\"\n) == \"11211\"\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"4 5\") == \"111211\"\nassert solution(\"3 3\") == \"11\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n'\n                '.#.\\n'\n                '.#.\\n') == '11211'\n'''\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 4, 240]) == \"3\"\nassert solution([3, 4, 40]) == \"4\"\nassert solution([3, 4, 340]) == \"3\"\nassert solution([3, 4, 360]) == \"3\"\nassert solution([3, 4, 361]) == \"4\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('2 2 2') == '2'"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 4 240') == '3'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n') == '3'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n') == '3'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n') == '3'\n\n'''\n\nfrom math import floor\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 5 4 100\") == \"3\"\nassert solution(\"100 50 50 10\") == \"1\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\""
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('5 5 5 5 5') == '0'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 240''') == '3'\nassert solution('''60 90 120''') == '3'\nassert solution('''80 150 80 150''') == '4'\n\n---Time---\nThe input is given from Standard Input in the following format:\nN M K\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_M\n\nwhere N and M are non-negative integers, K is an integer greater than 1 and 10^9, and the following conditions must be fulfilled:\n    1 \\leq A_i, B_i \\leq 10^9\n    1 \\leq i \\leq N\n    1 \\leq j \\leq M\n    If A_i, B_i is not an empty desk, the topmost book must be on that desk, and it must be a book that has not been read.\n\nthe maximum number of books that can be read within 240 minutes, as shown below, and this is the maximum number of books we can read within 240 minutes.\n - Read the topmost book on Desk A in 60 minutes, and remove that book from the desk.\n - Read the topmost book on Desk B in 80 minutes, and remove that book from the desk.\n - Read the topmost book on Desk A in 90 minutes, and remove that book from the desk.\n''') == '4'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1700 3 2\") == \"9072\"\nassert solution(\"1500 2000 1600 5 3 2\") == \"9514\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3\\n5 6 7\") == \"3\"\nassert solution(\"1 1 2 2\\n5 6 7\") == \"5\"\nassert solution(\"1 1 2 3\\n5 6 7\") == \"5\"\nassert solution(\"1 1 2 3\\n5 6 7\") == \"4\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"0 0 0 0 0\") == \"0\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\\n\") == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2 1\") == \"10000\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2000 1500 1600 3 2\") == \"7900\"\nassert solution(\"1500 1500 1600 3 2\") == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\n########################################################################################\n\n###  (3)  write a program to print the  pattern\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('9') == '4'\n\"\"\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\n\"\"\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('10') == '10'\nassert solution('100') == '30'\nassert solution('1000') == '87'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '4'"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '4\\n', \"Wrong result\"\nassert solution('10\\n') == '12\\n', \"Wrong result\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '6'\nassert solution('7') == '8'\nassert solution('10') == '2'\nassert solution('25') == '8'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('10') == '10'\nassert solution('123') == '24'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('10') == '9'\nassert solution('100') == '90'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"9\"\nassert solution(\"7\") == \"27\"\nassert solution(\"16\") == \"64\"\n\n---"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '9'\nassert solution('10') == '1'\n\"\"\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('100') == '100'\nassert solution('1000') == '999'\nassert solution('10000') == '999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10''') == '9'\nassert solution('''12''') == '11'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('3') == '3'\nassert solution('6') == '6'\n\"\"\"\nimport math"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('1\\n1') == '1'"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"8\") == \"3\"\nassert solution(\"8\") == \"3\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('4\\n10\\n8\\n8\\n6') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n0\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('7') == '5'\nassert solution('8') == '6'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0', 'Wrong answer'\nassert solution('3') == '1', 'Wrong answer'\nassert solution('4') == '2', 'Wrong answer'\nassert solution('5') == '3', 'Wrong answer'"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n') == '3'\nassert solution('2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n') == '1'\nassert solution('5\\n4\\n8\\n16\\n16\\n16\\n') == '0'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '0'\nassert solution(sample_input_3) == '1'\nassert solution(sample_input_4) == '2'\nassert solution(input_1) == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '3'\nassert solution('ZXCVBNMMMSSVWYA') == '5'\nassert solution('IHGFDSAJBQTCKM') == '6'\nassert solution('QWERTYASDFZXCV') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('QWERTYASDFZXCV') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == 5"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('QWERTYASDFZXCV') == \"5\"\nassert solution('RTRTVYUJQKXBADBCAA') == \"5\"\nassert solution('AQRSTUVWXYZ') == \"4\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTY\") == \"1\"\nassert solution(\"\") == \"1\"\nassert solution(\"QWERTY\") == \"1\"\nassert solution(\"QWERTYZ\") == \"2\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\n\"\"\"\n\ns = input()\nprint(len(s) - len(s.replace(\"Q\", \"\").replace(\"W\", \"\").replace(\"E\", \"\").replace(\"R\", \"\").replace(\"T\", \"\").replace(\"Y\", \"\").replace(\"U\", \"\").replace(\"I\", \"\").replace(\"O\", \"\").replace(\"P\", \"\")))\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == 'QWERTYASDFZXCV'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\""
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(solution(\"QWERTYASDFZXCV\"))"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QAZWSXEDCRFVGBYHUIMOPQ') == '10'\nassert solution('QAZWSXEDCRFVGBYHUIMOPQZ') == '20'\nassert solution('QAZWSXEDCRFVGBYHUIMOPQZU') == '20'"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40''') == '2'\nassert solution('''3\n16 32 64''') == '1'\nassert solution('''4\n8 12 40''') == '2'\nassert solution('''5\n5 3 5''') == '2'\nassert solution('''6\n5 3 5''') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"3\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n8 12 40\n''') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(stdin='3\\n8 12 40') == '2'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\n\nwhile a!= []:\n    for i in range(len(a)):\n        if a[i] % 2!= 0:\n            a[i] = a[i] // 2\n            cnt += 1\n        else:\n            a.pop(i)\n            break\nprint(cnt)"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '21'\nassert solution('5') == '33'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '6'\nassert solution('3') == '6'"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"12\") == \"210\"\nassert solution(\"123\") == \"210\"\nassert solution(\"1234\") == \"210\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '24'\nassert solution('5') == '120'\n\"\"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\n\"\"\""
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"24\"\nassert solution(\"5\") == \"120\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"10\") == \"27\"\nassert solution(\"15\") == \"111\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('7') == '13'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"5\") == '3'\nassert solution(\"10\") == '7'\nassert solution(\"15\") == '10'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    ''') == '6'\nassert solution('''\n    4\n    ''') == '8'\nassert solution('''\n    5\n    ''') == '7'\n\nfrom typing import List\nimport sys\nimport numpy\n\nN = int(input())\nprint(numpy.prod(range(1, N + 1)))"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n3 1\"\"\") == \"2\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"9\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"14\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"99\"\nassert solution(\"1000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"99\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"3\\n1 2\") == \"1\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\n\"\"\"\n) == \"2 2\"\nassert solution(\n\"\"\"\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\n\"\"\"\n) == \"2 2\"\nassert solution(\n\"\"\"\n2 3\n1 WA\n1 WA\n2 WA\n2 AC\n2 WA\n\n\"\"\"\n) == \"1 2\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('10 5') == '10 10'\nassert solution('7 1') == '7 7'\nassert solution('10 10') == '10 10'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"3 2\\n1 WA\\n1 AC\\n2 WA\\n2 AC\") == \"3 2\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"2 5\") == \"2 2\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('3 3') == '1 1'\nassert solution('100 100') == '1 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == \"2 2\"\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 10\\n10 WA\\n10 WA\\n11 WA\\n11 WA\\n11 WA') == '2 5'\nassert solution('1 2\\n1 WA\\n1 WA') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"2 2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n4 1 5''') == '5'"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"4 1\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n4 1 5''') == \"5\"\nassert solution('''3 2\n1 1 2''') == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"5 7\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 5\") == \"4\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"6 3\") == \"5\"\nassert solution(\"20 3\") == \"19\"\nassert solution(\"6 3\") == \"6\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 1') == '5'\nassert solution('3 2') == '5'\nassert solution('3 3') == '5'\nassert solution('3 4') == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"5 1\") == \"5\""
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"16\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n3\n''') == '10'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"5\") == \"12\""
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n10\\n2 4\\n') == '4'\nassert solution('1\\n10\\n1 1\\n') == '10'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n\"\"\""
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n10\n2\n\n''') == '4'\nassert solution('''2\n10\n1\n\n''') == '10'"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n10\\n3\\n') == '16'\nassert solution('3\\n10\\n4\\n') == '4'\nassert solution('5\\n10\\n6\\n') == '16'\nassert solution('6\\n10\\n7\\n') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''\n1\n10\n2\n''') == '16'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"-1\\n-1\\n-1\\n-1\") == \"0\"\nassert solution(\"-4\\n-4\\n-4\\n-4\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('5\\n4\\n3\\n2') == '4'\nassert solution('5\\n4\\n3\\n2') == '5'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('1\\n1\\n1\\n1') == '1'\n\n---\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('6\\n3\\n2\\n1') == '10'\nassert solution('0\\n0\\n0\\n0') == '0'"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"300\"\nassert solution(\"420\") == \"380\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\nassert solution('1\\n2\\n3\\n4\\n') == '6'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1000\\n2000\\n3000\\n4000') == '17000'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\""
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == ''\nassert solution('2') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"100\") == \"0\"\nassert solution(\"10\") == \"0\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 4 4 0 2\n''') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('4\\n2 4 4 0 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\n\"\"\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''5\n1 1 1 1 1''') == '1'\nassert solution('''5\n1 0 1 1 0''') == '1'\nassert solution('''5\n1 0 1 0 1''') == '1'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n2 4 4 0 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6\n2 4 4 0 2 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n8\n2 4 4 0 2 4 2 5\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"43\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"3 1 7\") == \"28\"\nassert solution(\"1 10 5\") == \"5\""
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == 84\nprint(solution(\"20 2 5\"))\n\n------\n\n\"\"\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 2 5\n''') == '84'\nassert solution('''20 3 5\n''') == '44'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 5') == 84\nassert solution('10 10 7') == '65'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == 6\nassert solution('20 2 5') == 84\nassert solution('20 20 20') == 0\nassert solution('2 100') == 0\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 2 5') == 84\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == 84\nprint(solution(\"20 2 5\"))"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 2 5') == 84\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,2,3,4,5,6,7,8,9,10]) == \"84\"\nassert solution([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) == \"84\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == 'ABC100'\n\"\"\"\nimport sys\n\nN: int = int(sys.stdin.readline())\nfor _ in range(N):\n    print(\"ABC{}\".format(str(_+1).zfill(3)))"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == 'ABC100'"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ABC200'\nassert solution('3') == 'ABC300'\nassert solution('4') == 'ABC400'\nassert solution('5') == 'ABC500'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == \"ABC100\"\nassert solution('200') == \"ABC200\"\nassert solution('2000') == \"ABC2000\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"3\") == \"ABC3\"\nassert solution(\"4\") == \"ABC4\"\nassert solution(\"5\") == \"ABC5\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ABC200\"\nassert solution(\"10\") == \"ABC1010\"\nassert solution(\"101\") == \"ABC1011\"\nassert solution(\"1000\") == \"ABC10\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'ABC3'\nassert solution('7') == 'ABC7'\nassert solution('12') == 'ABC12'"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"999\") == \"ABC999\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n\"\"\""
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '5'\n\nprint(solution('''3 1\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4'''))"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n') == '2'\nassert solution('1 4\\n') == '4'\nassert solution('3 6\\n') == '4'\nassert solution('1 1\\n') == '1'\nassert solution('1 2\\n') == '2'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 4') == '5'\nassert solution('2 2') == '2'\nassert solution('3 9') == '6'"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '1'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"2 9\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '5'"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '-1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '-1'\nassert solution('5') == '2'\nassert solution('10') == '1'\n\n------------------------------------------------------------------------\nSolutions:\n\n----SOLUTION 1----"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3\n1\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n3\n2\n5\n1\n7\n1\n2\n4\n8\n5\n9\n3\n1\n7\n6\n2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3\n3\n3\n4\n\"\"\") == -1\nassert solution(\"\"\"\n10\n3\n2\n5\n1\n7\n1\n2\n4\n8\n5\n9\n3\n1\n7\n6\n2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"3\\n2\\n\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '-1'\nassert solution('3\\n1\\n2') == '2'\n\n---"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '-1'"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n1\\n2\") == \"2\"\nassert solution(\"3\\n1\\n2\\n\") == \"-1\"\n\nprint(solution(stdin))\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('2') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n1 1 2 2 5') == '1'"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('3 2\\n1 1 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 4\") == \"2\"\nassert solution
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('10 2\\n5 6 8 9 10 4 7 3 2 1') == '10'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"6 1 1\") == \"No\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"Yes\"\nassert solution('3') == \"Yes\"\nassert solution('4') == \"No\"\nassert solution('5') == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"6 1 1\") == \"No\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"Yes\"\nassert solution('3 1 2') == \"Yes\"\nassert solution('6 1 1') == \"No\"\nassert solution('7 1 1') == \"No\"\nassert solution('8 1 1') == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 1 2\") == \"Yes\"\nassert solution(\"2\\n3 1 2\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1 2\n2 3\n3 4\n5 6\n1 2\n3 4\n3 5\n3 2\n3 3\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n2\n2 1 2\n6 1 1\n2 2 2\n4 6 4\n5 5 5\n5 6 5\n5 5 5\n5 5 5\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n\"\"\") == \"No\"\nassert solution(\"\"\"5\n2 3 2 2 1\n4 4 4 4 4\n5 5 5 5 5\n6 6 6 6 6\n\"\"\") == \"Yes\"\nassert solution(\"\"\"0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'Yes'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('5 7') == '4'"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 5\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n\") == \"2\"\nassert solution(\"1 4\\n\") == \"2\"\nassert solution(\"1 2\\n\") == \"2\"\nassert solution(\"1 1\\n\") == \"1\""
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '3'\nassert solution('5 4') == '4'\nassert solution('5 8') == '7'\nassert solution('8 5') == '7'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1.3\") == \"2\"\nassert solution(\"2.1\") == \"2\"\nassert solution(\"2.3\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('4 1') == '4'\nassert solution('2 1') == '2'\nassert solution('10 10') == '10'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 7') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 7\") == \"4\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '4'\nassert solution(\"8 9\\n3 4\\n6 9\\n7 8\\n5 8\\n5 6\\n7 6\\n9 5\\n7 4\\n\") == '0'\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 7') == '4'\nassert solution('8 8') == '0'\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'\n\"\"\"\nclass Graph:\n    def __init__(self, vertices):\n        self.graph = defaultdict(list)\n        self.V = vertices\n\n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n\n    def find(self, parent, i):\n        if parent[i] == i:\n            return i\n        return self.find(parent, parent[i])\n\n    def union(self, parent, rank, x, y):\n        xroot = self.find(parent, x)\n        yroot = self.find(parent, y)\n\n        if rank[xroot] < rank[yroot]:\n            parent[xroot] = yroot\n        elif rank[xroot] > rank[yroot]:\n            parent[yroot] = xroot\n\n        else:\n            parent[yroot] = xroot\n            rank[xroot] += 1\n\n    def KruskalMST(self):\n        result = []\n        i = 0\n        e = 0\n\n        self.graph = sorted(self.graph.items(), key=lambda item: item[1])\n\n        parent = []\n        rank = []\n\n        for node in range(self.V):\n            parent.append(node)\n            rank.append(0)\n\n        while e < self.V - 1:\n            u, v = self.graph[i]\n            i = i + 1\n            x = self.find(parent, u)\n            y = self.find(parent, v)\n\n            if x!= y:\n                e = e + 1\n                result.append([u, v])\n                self.union(parent, rank, x, y)\n        return result"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"10 7\") == \"6\"\n'''"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 3\\n2 3\\n3 4') == '4'\n\n\"\"\"\nfrom collections import deque\n\nN, M = map(int, input().split())\nlst = []\nfor i in range(M):\n    lst.append(tuple(map(int, input().split())))\nlst.sort()\n\ndegrees = {i: 0 for i in range(N)}\nfor u, v in lst:\n    degrees[u-1] += 1\n    degrees[v-1] += 1\n\nbridge = 0\ndegree = 0\nq = deque()\nfor k, v in degrees.items():\n    if v == 1:\n        degree += 1\n        q.append(k)\n        while len(q) > 0:\n            cur = q.popleft()\n            for i in range(N):\n                if degrees[i] == 0:\n                    degrees[i] += 1\n                    q.append(i)\n                    bridge += 1\n\nprint(bridge)\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 7') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\n\"\"\""
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == '7'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 7 5''') == '7'\nassert solution('''10 11 10''') == '10'\nassert solution('''1 1 2''') == '2'\nassert solution('''0 0 0''') == '0'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"-1 -1 1\") == \"-1\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == '7'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1'\nassert solution('5 7 5') == '7'\nassert solution('1 2 3') == '1'\nassert solution('5 7 5') == '5'\n\n##\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 2\") == \"2\"\nassert solution(\"5 7 3\") == \"5\"\nprint(\"All the tests are passed!\")"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 2 3') == '1'\nassert solution('4 6 8') == '8'\nassert solution('8 9 10') == '10'\nassert solution('7 8 5') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"7\""
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('9 9 9') == '9'\nassert solution('3 4 5') == '3'"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 2, 10, 20, 15, 200]) == \"110 10\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 1 3 2 3') == '-1 -1'\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n\"\"\"\n\nfrom collections import deque\n\nA, B, C, D, E, F = map(int, stdin.split())"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 100 0 100 15 100 200') == '120 0'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 10 20 15 200\n''') == \"110 10\"\nassert solution('''\n2 2 10 20 15 200\n''') == \"110 10\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 2, 10, 20, 15, 200]) == \"110 10\"\nassert solution([1, 2, 20, 20, 20, 200]) == \"110 10\"\nassert solution([1, 2, 20, 20, 20, 300]) == \"110 10\"\nassert solution([1, 2, 20, 20, 20, 200, 200]) == \"110 10\"\nassert solution([1, 2, 20, 20, 20, 200, 200, 200]) == \"110 10\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"internationalization\") == \"i18n\"\nassert solution(\"I18n\") == \"i18n\"\nassert solution(\"Internationalization\") == \"i18n\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('instances') == 'is'\n\nfrom typing import Dict, List"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefg'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCD'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'i18n'\nassert solution(input()) == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abbreviate') == 'abbr'"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"norwegian\") == \"nrw\"\nassert solution(\"fridge\") == \"frg\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('abbreviation') == 'abbr'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"abbreviation\") == \"abbr\"\nassert solution(\"abcd\") == \"abcd\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('shdy') == 'NO'"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('rabc') == 'NO'\nassert solution('aab') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\nassert solution('ac') == 'c'\nassert solution('acb') == 'c'\nassert solution('abbc') == 'b'\nassert solution('bc') == 'c'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"\n\"\"\"\n\nimport sys\nimport itertools\nimport time\n\nstart = time.time()"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aba') == 'b'\nassert solution('abac') == 'c'\nassert solution('abcabcabc') == 'c'\nassert solution('ab') == 'a'\nassert solution('ababc') == 'c'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"b\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abc\") == \"c\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"acd\") == \"acd\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'b'\nassert solution('aba') == 'b'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"acb\") == \"c\"\nassert solution(\"abca\") == \"a\"\nassert solution(\"aaabbbcccccc\") == \"c\"\nassert solution(\"aaab\") == \"a\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aba') == 'b'\nassert solution('sadasd') == 'a'\nassert solution('aaaaa') == 'a'\nassert solution('abab') == 'b'\nassert solution('ababc') == 'c'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\") == \"9\"\nassert solution(\"\"\"5 4 2\n2 1 3\n3 3 4\"\"\") == \"12\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\nprint(solution(input()))\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n5 6 8''') == '10'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 5 7''') == '21'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 5 7\n6 8 9''') == '28'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 5 7\n6 8 9\n10 11 12''') == '41'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 5 3') == '35'\nassert solution('10 10 10') == '50'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"1 1 1\") == \"10\"\nassert solution(\"2 3 4\") == \"5\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 4 2\n2 1 1\n3 3 4\n\"\"\") == \"9\"\nassert solution(\"\"\"\n1 3 7\n7 3 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 4 2\n3 2 1\n4 4 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n7 8 3\n8 7 2\n9 9 6\n\"\"\") == \"18\"\nassert solution(\"\"\"\n5 4 2\n3 2 1\n4 4 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('5 5 4 3') == '25'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"10 10 1\") == \"50\"\nassert solution(\"5 5 5\") == \"50\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"9\"\nassert solution(\"5 4 2\") == \"9\"\nassert solution(\"15 15 2\") == \"31\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n4 4 5\\n5 5 5\") == \"25\"\nassert solution(\"5 4 1\\n1 1 1\\n3 3 4\\n4 4 5\\n5 5 5\") == \"19\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n4 4 5\\n5 5 5\") == \"25\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '12\\n11\\n0\\n'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"3\\n1 10 1\\n\") == \"10\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '12'\nassert solution('2') == '11'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"12 11 0\"\nassert solution(\"\"\"\n5\n4 3 5 1\n2 6 7 1\n\"\"\") == \"18 15 15 0\"\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"10\") == \"11\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '11'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '12'\nassert solution('4') == '11'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"12\\n11\\n0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n6 5 1\n1 10 1\n''') == '12\\n11\\n0\\n'\nassert solution('''3\n6 5 1\n1 10 1\n''') == '12\\n11\\n0\\n'\nassert solution('''\n6\n1 2 5 1\n0 1 2 2\n0 3 4 3\n0 1 6 5\n0 3 2 1\n1 6 5\n''') == '14\\n13\\n12\\n11\\n0\\n'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3]) == \"12\"\nassert solution([6, 5, 1]) == \"11\"\nassert solution([10, 9, 8, 7]) == \"0\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '*' * 2\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n.\\n.') == '*\\n*\\n*\\n*\\n*\\n'\nassert solution('1 2\\n.\\n*') == '*\\n*\\n*\\n*\\n*\\n'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == '*\\n*'"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == \"1 1\"\nassert solution('2 2') == \"1 1\"\nassert solution('3 3') == \"1 1\"\nassert solution('4 4') == \"1 1\"\nassert solution('5 5') == \"1 1\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n.\\n.\\n*\\n*') == '.\\n*\\n*\\n*\\n*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n*.\\n') == '*.\\n*.'\nassert solution('3 3\\n*.\\n**\\n') == '*.\\n**\\n**.'\nassert solution('5 5\\n*.\\n.**\\n**.\\n**.\\n**.\\n**.\\n**.\\n**.\\n**.\\n**.\\n**.') == '*..*\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**'\nprint('All test cases are correct. You may proceed.')\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"**\", \"Your solution does not work!\"\nassert solution(\"2 2\") == \"**.\", \"Your solution does not work!\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n*.\\n\") == \".*\\n.*\\n.*\\n.*\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"*\n.\n*\"\n\nprint(solution(input()))"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\"\nassert solution(\"5\\n2 2 2 2 2\\n\") == \"NO\"\nassert solution(\"5\\n4 4 4 4 4\\n\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 6 1 4 5\n''') == 'YES'\nassert solution('''7\n1 1 2 3 4 4 5\n''') == 'NO'\nassert solution('''5\n1 1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"2\\n6\\n1 4 5\") == \"NO\"\nassert solution(\"2\\n3\\n4\\n5\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 6 1 4 5\\n') == 'YES'\nassert solution('5\\n2 2 1 4 4\\n') == 'NO'\nassert solution('5\\n2 2 1 4 4\\n') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('10') == 'YES'\n\n'''"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 6 1 4 5\\n') == 'YES'\nassert solution('5\\n4 5 1 4 5\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n6\\n1 1 3 4 2 2') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == '3'\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n1\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n2\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''\n2\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '0'\nassert solution('''\n2\n1\n1 2\n3\n''') == '0'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"1\""
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"2\"\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"4\"\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"1\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n4\n1 2 3\n4\n1 1 2\n1 3\n3 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10 1\n11 1\n1 2\n''') == '1'\nassert solution('''5\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''4\n7 5\n1 6\n22 5\n987 13\n''') == '1'\nassert solution('''2\n5 1\n1 2\n''') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '1'\nassert solution('''\n1\n7 3\n1 5\n22 5\n987 13\n''') == '2'\n\n'''"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('10\\n4 3\\n1 2\\n7 2\\n22 2\\n24 3\\n7 3\\n4 3\\n4 3\\n7 2\\n24 3\\n987 2') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"5\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''10 3\n1 5\n22 5\n987 13\n99 9\n12 3\n''') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13''') == \"3\"\nassert solution('''1\n1\n1''') == \"1\"\n'''\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\n\nassert solution('''\n4\n3 1\n1 5\n22 5\n987 13\n''') == '1'\n\nassert solution('''\n4\n2 2\n1 1\n22 5\n987 13\n''') == '3'\n\nassert solution('''\n4\n3 1\n1 5\n22 5\n987 13\n''') == '2'"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"9 8\") == \"3\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n4 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''4\n5 3\n1 5\n22 5\n987 13\n''') == '1'\nassert solution('''2\n4 3\n1 5\n22 5\n987 13\n''') == '1'\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \nassert solution('''3\ncbd''') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \nassert solution('''3\nqwer''') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \nassert solution('''3\nqwer''') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \nassert solution('''3\nqwer''') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"1 1\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"10 2\") == \"26 10\"\nassert solution(\"20 10 1 2 3 5 10 5 9 4\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nabca\\n20 10 1 2 3 5 10 5 9 4') == '0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('5\\nqwertyuioplkjhgfdsazxcvbnm\\n1 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n') == '1 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces\\n2 8 3 2 9\\n10 5\\ncodeforces') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabca\\n1 3\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 2 1 5 4 11 8 2 7 5 1 10 1 5 2\")\nassert solution(\"20 10 1 2 3 5 10 5 9 4\\nqwertyuioplkjhgfdsazxcvbnm\\n2 8 3 2 9\\ncodeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 2 1 5 4 11 8 2 7 5 1 10 1 5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\nabca\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\")\nassert solution(\"3 4\\nabca\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\"\nassert solution(\"3 4\\nabca\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\"\nassert solution(\"3 4\\nabc\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\"\nassert solution(\"3 4\\nabc\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(input()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n''')\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 4''') == '0'\nassert solution('''10 20 30''') == '36'\nassert solution('''5 5 5''') == '4'\nassert solution('''2 4 3''') == '2'\nassert solution('''1 1000000000 1000000000''') == '1999999994'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\"\nassert solution(\"4 1 2\\n4 2 1\\n1 3 2\\n1 4 2\\n2 3 1\\n2 4 1\\n2 3 2\\n2 4 2\\n3 1 1\\n3 2 1\\n3 3 2\\n3 4 2\\n4 1 1\\n4 2 1\\n4 3 1\\n4 4 1\\n\") == \"2\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == \"0\"\nassert solution('''\n5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == \"0\"\nassert solution('''\n3\n1 2 5\n2 5 4\n4 5 3\n''') == \"0\"\nassert solution('''\n2\n1 2\n2 1\n''') == \"0\"\nassert solution('''\n4\n3 2 5\n2 5 4\n4 5 3\n''') == \"0\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n1 3 5\n2 6 8\n''') == '4'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n4 4 3\n12 10 11\n11 9 8\n7 10 7\n7 7 7\n''') == '4'\nassert solution('''\n10 10 10\n10 10 10\n10 10 10\n''') == '10'\nassert solution('''\n4 4 3\n12 10 11\n11 9 8\n7 10 7\n7 7 7\n''') == '0'\nassert solution('''\n4 4 2\n10 10 10\n10 10 10\n''') == '10'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '0'\nassert solution('3 3 4') == '36'\nassert solution('10 20 30') == '0'\nassert solution('5 5 5') == '1999999994'\nassert solution('2 4 3') == '4'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 5 5\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution(\n    '10 10 10\\n20 20 20\\n10 10 10\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '1999999994'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1') == 'YES'\nassert solution('4\\n5 10 11 15\\n2\\n4 5 6 7 8\\n3\\n4 1 2 3') == 'YES'\nassert solution('4\\n5 10 11 15\\n2\\n4 5 6 7 8\\n3\\n4 1 2 3') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n5\n1 2 3\n3\n4\n5\n6\n1 2 3\n3\n4\n''') == 'YES'\nassert solution('''\n5\n1 2 3\n4\n5\n6\n1 2 3\n3\n4\n''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\n\nassert solution('''4\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3\n3\n3\n''') == 'YES'\nassert solution('''4\n5\n6\n7\n''') == 'NO'\nassert solution('''2\n4\n3\n2\n''') == 'NO'\nassert solution('''5\n2\n3\n4\n5\n''') == 'YES'\nassert solution('''4\n3\n3\n3\n3\n''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES', 'First test case is wrong.'\nassert solution('''\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO', 'Second test case is wrong.'\nassert solution('''\n5\n2 6 8 6 4\n1 1 1 1 1\n1 2 5 6\n2\n1 12 3 10 5 8\n6\n1 2 5 6\n''') == 'YES', 'Third test case is wrong.'\nassert solution('''\n4\n1 1 1 1\n4\n1 2 5 6\n2\n1 12 3 10 5 8\n6\n1 6 3 10 5 8\n''') == 'NO', 'Fourth test case is wrong.'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2') == 'YES'\nassert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2') == 'YES'\nassert solution('7\\n4\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2') == 'NO'\nassert solution('7\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2') == 'YES'\nassert solution('7\\n4\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_input_1) == \"22\"\nassert solution(test_input_2) == \"13\""
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"13\"\n\n(Note: this kata is inspired by a similar kata \"Minimum Cost Path\".)"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 2') == '22'\nassert solution('6 5 2') == '13'\nassert solution('5 5 4') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 5\") == \"22\"\nassert solution(\"6 5 2\") == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\") == \"22\"\nassert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n5 3') == '13'\nassert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6') == '13'"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n10\n10\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n1\n3\n''') == '3'\nassert solution('''\n15\n9\n''') == '27'\nassert solution('''\n16\n11\n''') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '6'\nassert solution('1\\n2\\n6\\n13\\n14\\n30') == '12'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '27'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10001') == '19683'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n1001') == '19683'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('5\\n9') == '5\\n7\\n13\\n19\\n27'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '3'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n') == '1\\n3\\n9\\n13\\n27\\n6561'"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '3'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '7'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '9'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '3'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('6') == '5'\nassert solution('13') == '10'\nassert solution('15') == '9'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"9\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n5\n5 1 2 3 4\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\"\n) == \"1 1 1 1 1\"\nassert solution(\n    \"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\"\n) == \"1 1 1 1 1\""
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 2 3 2 1 2 3'\nassert solution('''8\n3\n3 1 2\n4 4 2 3\n4 3 1 2\n5 5 2 3 1\n5 3 2 1 4\n5 2 2 1 4\n5 1 3 2 4\n''') == '2 2 2 2 1 3 3 2 2 2 2 2'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5\\n5 1 2 4 3'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2 2 2 1\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == \"2 2 3 3 1 1\"\nprint(solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3'''))"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3'\n\n'''\nimport math"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 1 1 1 1'\nassert solution('5') == '3 3 3'\nassert solution('10') == '1 1 1 1 1 1 1 1 1 1 1'\nassert solution('10') == '3 3 3'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n    \"\"\"\n) == \"1 1 1 1 1 3 2 3 2 4 4\"\nassert solution(\n    \"\"\"\n10\n7\n1 2 3 4 5 6 7\n3\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3 4 5 6 7\n5\n1 2 3 4 5 6 7\n4\n1 2 3 4 5 6 7\n6\n1 2 3"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3\\n3 3 3 2 1 3\\n1 2 3 4 5\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n4 4 4 1 4\\n5 5 1 2 4 3\\n'''\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n1 2 3 4 5\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n4 4 4 1 4\\n5 5 1 2 4 3\\n'''\nassert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1 1\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n1 2 3 4 5\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n4 4 4 1 4\\n5 5 1 2 4 3\\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == \"3 3 3 2 1 3\""
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\nassert solution([10, 10, 10, 10, 10]) == '5 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8\nassert solution('''\n3 5\n0 3 1\n''') == '7\nassert solution('''\n4 6\n1 5 2 4\n''') == '4\nassert solution('''\n2 5\n0 3\n''') == '-1 -2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1 2 3 4\n''') == '7 4 -1 2'\nassert solution('''\n5 2\n1 2 3 4\n''') == '7 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7 5 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    1 2 3\n''') == '7 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"7 5 -2 4 -1 2\"\nassert solution(\"\"\"\n3 2\n0 1\n\"\"\") == \"1 0 3\"\nassert solution(\"\"\"\n3 4\n1 2 3\n\"\"\") == \"2 1 3 1\"\nassert solution(\"\"\"\n5 2\n2 5\n\"\"\") == \"3 2 -1 3 3\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8 -1 2 6 4 0 3\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0 1\"\nassert solution(\"3 5\") == \"5 -2 4 -1 2\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\nassert solution('''\n5\n1 2\n3 2\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\nassert solution('''\n5\n1 2\n3 2\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''4\n3\n4 0\n1 2\n1 3\n1 4\n''') == 'NO'\n\nassert solution('''5\n5\n0 0\n1 2\n1 3\n1 4\n''') == 'YES'\n\nassert solution('''1\n1\n0 0\n''') == 'YES'\n\nassert solution('''2\n2\n0 0\n1 1\n''') == 'YES'"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'RUUURRRRUU'\n\n\"\"\"\n    def solution(stdin: str) -> str:\n        pass\n\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n\nassert solution('''\n5\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"\n\n\n'''"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n2\n''') == 'R'\n\nassert solution('''3\n3\n1 2\n1 2\n3 3\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\n\nassert solution('''2\n1\n1\n2\n\n''') == 'NO'"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n5\n0 0\n1 0\n3 0\n5 0\n4 0\n2''') == 'YES'\nassert solution('''3\n5\n0 0\n1 0\n3 0\n5 0\n4 0\n2''') == 'YES'\nassert solution('''3\n5\n0 0\n1 0\n3 0\n5 0\n4 0\n2''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n1 2''') == 'NO'\n\nassert solution('''2\n1 2\n1 2''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''5\n5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"500 4\") == \"2\"\nassert solution(\"217871987498122 10\") == \"899999999999999999\"\nassert solution(\"100000000000000001 1\") == \"899999999999999999\""
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 1') == '8'\nassert solution('5\\n1 1\\n500 4') == '0'\nassert solution('5\\n217871987498122 10\\n100000000000000001 1') == '899999999999999999'\nassert solution('10\\n10 11\\n5 6\\n100 101') == '0'"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n\"\"\") == \"8\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"8\"\nprint(solution(input()))\n\"\"\"\n\nt = int(input())\n\nfor i in range(t):\n    n, s = map(int, input().split())\n    res = 0\n    while n > 0:\n        res += n % 10\n        n = n // 10\n    while res > s:\n        res -= 10\n        n -= 1\n    if res >= 0:\n        print(n, res)\n    else:\n        print(n, res + 1)"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"1\"\nassert solution('5') == \"5\"\nassert solution('100') == \"500\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '8'\nassert solution('4') == '0'\nassert solution('11') == '2'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\n\nassert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '3'\n\nassert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '1'\n\nassert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\nassert solution('8') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''6\n6\n0 0 1 1 0 0\n5\n1 0 0\n3\n1 1 0 0\n2\n1 1 0\n''') == '4'\nassert solution('''8\n6\n0 0 1 1 1 0\n5\n1 0 0 0 0 1\n3\n1 1 0 1 1\n2\n1 1 0 1\n''') == '2'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"8\") == \"3\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('5\\n7\\n1 0 0') == '4'\nassert solution('5\\n7\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1') == '1'"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\"\n) == \"2\"\nassert solution(\n    \"3\\n1 0 0\\n5\\n1 1 0 0 1\"\n) == \"4\"\nassert solution(\n    \"3\\n1 0 0\\n5\\n1 1 0 0 1\"\n) == \"1\""
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 0 0\n2\n1 1 0\n2\n''') == '0'\nassert solution('''\n5\n1 0 1 0 1\n2\n1 0 0\n2\n1 1 0\n1\n''') == '4'\nassert solution('''\n5\n1 0 1 0 1\n2\n1 0 0\n2\n1 1 0\n2\n''') == '3'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\") == \"cbcacab\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == \"abcd\"\nassert solution('''3\n5\n7''') == \"abc\"\nassert solution('''1\n2\n8''') == \"bbaaab\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"acb\"\nassert solution(\"5\") == \"abbbba\"\n\"\"\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\", \"Empty string\"\nassert solution(\"a\") == \"a\", \"Single letter\"\nassert solution(\"ab\") == \"\", \"Empty string\"\nassert solution(\"abbc\") == \"ab\", \"Single letter\"\nassert solution(\"abca\") == \"bc\", \"Single letter\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'cbcaca'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'ccbbaaa'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'ccbbaaa'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"cbcacab\"\nassert solution(\"5\") == \"abcd\"\nassert solution(\"3\") == \"baabab\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"baab\"\nassert solution(\"4\") == \"cbcac\"\nassert solution(\"5\") == \"bacdc\"\n\nstdin = '3\\n7 3\\n4 4\\n6 2\\n'\n\nprint(solution(stdin))"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'abcabc'\nassert solution('9 3') == 'abababab'\nassert solution('10 2') == 'ababababab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"7 3\") == \"abcd\"\nassert solution(\"6 2\") == \"baabab\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2') == 'cbcaca'\nassert solution('5\\n7 2\\n2 4') == 'acbaca'\nassert solution('4\\n6 1\\n2 4') == 'ababb'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n8\n1 2 3 4 5\n2\n2 2\n3\n5 6\n4\n4 4\n5 5\n''') == '''1 2'''"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n2\n4\n1 1 2 3\n2\n3 2\n''') == '1 4'"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3'\nassert solution('''\n5\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6 23 21\"\nassert solution(\"\") == \"1 1000 0\"\nassert solution(\"11\") == \"1 1000 0\"\nassert solution(\"3 1 4 1 5 9 2 6 5 3 5\") == \"2 4 3\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10\n100\n1\n\"\"\") == \"\"\"4 8\"\"\"\nassert solution(\"\"\"\n9\n100\n1\n\"\"\") == \"\"\"7 3\"\"\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('3 1 4 1 5 9 2 6 5 3 5') == '1 2 3'\nassert solution('1') == '1 0'\nassert solution('2') == '2 1'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3') == '6 23 21'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3') == '6 23 21'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n2\\n2 1\\n6\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1\\n7\\n1 1 1') == '1 1000 0'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n2\\n2 1\\n6\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1\\n7\\n1 1 1') == '1 1000 0'"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2\n3\n3\n''') == '2 2 1'\nassert solution('''\n3\n6\n1 1 1 1 1 1\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '1 1000 0'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\nassert solution() == '27'\nassert solution() == '39'\nassert solution() == '11'\nassert solution() == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '39'\nassert solution() == '17'"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n1 2\n2 3\n2 4''') == '6'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '27'\nassert solution('''5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '39'\nassert solution('''5 3\n1 2 3 4 5''') == '11'\nassert solution('''4 4\n1 2 2 1\n4 4 5 4\n1 2 3 4 5''') == '17'\nassert solution('''10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"27\"\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"39\"\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"11\"\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"17\"\nassert solution('''\n5 4\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"39\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n10 8\n4 8 4 1 2 1 3 3 1 4\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n2 3\n3 3 2 2 1 1 3 3 1 4\n1 1 3 4 4 2 3 4 2 4\n''') == '0 3 3 4 5 8 11 13 14 16 17'\nassert solution('''\n1 3\n2 3 3 1 1 1 2 2 1 2\n''') == '0 4 8 12 16 18 20 24 28 32 36 40 44 48 52 56 60 64 68 72 72 68 72 64 48 52 56 60 64 68 72 64 68 72 60 68 68 72 60 68 68 72 60 68 72 68 72 68 72 68 72 68 68 72 64 68 68 72 64 68 68 72 68 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64 68 68 72 64"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"3 2\\n3 2 3 1 3 3 1 4 1\\n\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n\") == \"0 2 4 7 8 11 13 14 16 17\""
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0 7 13 18 24 35 36 37 40 45'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '7 13 18 24 35 36 37 40 45'\nassert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''3\n2\n1\n1''') == '0 2'\nassert solution('''3\n2\n1\n1''') == '2'\nassert solution('''5\n2\n1\n3\n1\n1''') == '1'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45 \n\nassert solution('''\n3\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n\nassert solution('''\n7\n3 4 4 1 5 5 1 1 5\n5 2 4 3 4 2 1 1\n1 1 1 2 1 1 2 1\n''') == '0 2 4 7 8 11 13 14 16 17'\n\nassert solution('''\n4\n1 2 3 1\n2 1 3 1\n1 1 1 1\n''') == '0 1 2 3 1 2 3 1 2 2 1'\n\nassert solution('''\n4\n1 1 1 1\n1 2 1 1\n1 3 1 1\n''') == '0 1 2 1 2 1 1 2 1 3 1'"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 4') == '16'\nassert solution('8 6') == '19'\nassert solution('5 1') == '0'\nassert solution('9 3') == '7'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 2\n3 2 3 1 3\n1 2 3 4 4 1 2 1 3\n\"\"\") == \"0 2 4 7 8 11 13 14 16 17\""
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 1\n3 2\n3 8\n''') == 'aaaab'\nassert solution('''\n5\n1 5\n2 3\n3 5\n2 4\n1 3\n1 4\n''') == 'aaab'"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"aab\"\nassert solution(\"4 2\") == \"abaa\"\nassert solution(\"4 3\") == \"aabaa\"\nassert solution(\"4 4\") == \"bababab\"\nassert solution(\"4 5\") == \"baabaabaabbaababababababababaababababababababababaabababababababababababaabaababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nprint(solution(input()))\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n5 1\n5 2\n5 8\n5 10\n''') == 'aaabb'\nassert solution('''\n1 1\n1 1\n1 2\n''') == 'aaabb'\nassert solution('''\n3 1\n5 1\n5 2\n5 8\n5 10\n''') == 'aaabb'\nassert solution('''\n20 100\n1 1\n1 1\n1 2\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n''') == 'aabab'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n3\n3 1\n3 2\n20 100\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n4\n4 3\n4 2\n1 4\n\"\"\") == \"aaaaabaaaaabaaaaaaaa\"\n\nassert solution(\"\"\"\n5\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n\"\"\") == \"aabba\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aaabb\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'aaabb'\nassert solution(input) == 'aabab'\nassert solution(input) == 'baaba'\nassert solution(input) == 'bbaaa'\nassert solution(input) == 'abb'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n'''"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5 1 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '6'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '1'\nassert solution('4\\n10 7\\n1 5\\n1 3\\n1 1\\n1000000000\\n1000000000\\n5 10') == '5'"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '6'\nassert solution('7 1') == '1'\nassert solution('1000000000') == '1000000000'\nassert solution('1000000000') == '1000000000'\nassert solution('1000000000') == '1000000000'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''2\n5 5\n1 1\n1 2\n1 4\n2 2\n''') == '1'\nassert solution('''3\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '2'\nassert solution('''4\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '3'\nassert solution('''5\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '3'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '7'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('''\n3\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n3\n6 4\n3 1 5 6 2 1 2\n2 3\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n5\n4\n2 3\n1 3\n1 2\n1 4\n''') == '4'\nassert solution('''\n5\n2\n2 5\n3 1\n3 1\n3 2\n''') == '1'"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('3 3') == '3'\nassert solution('1 2') == '2'\nassert solution('0') == '0'"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"7 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"7 3\\n0\\n0\\n0\\n0\\n\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"7 3\\n0\\n0\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\""
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0\\n1\\n2\\n\") == \"1\\n2\\n3\\n3\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('10') == '7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"1\"\n\nprint(solution(input()))"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n0\") == \"1\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"2\""
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n\") == \"1\\n2\\n3\\n3\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"\") == \"0\\n\"\nassert solution(\"1\\n2\") == \"0\\n1\\n\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n0\") == \"1\"\nassert solution(\"4 3\\n1\\n2\\n1\") == \"2\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 1\n2 1\n1 2\n\"\"\"\n) == \"1 1\"\nassert solution(\n\"\"\"\n1 2\n2 2\n2 3\n\"\"\"\n) == \"2 2\"\nassert solution(\n\"\"\"\n2 2\n1 2\n2 2\n\"\"\"\n) == \"2 1\"\n\nassert solution(\n\"\"\"\n10 2\n2 2\n1 5\n1 5\n1 2\n\"\"\"\n) == \"1 2 1 2 1 2 1 2 1 2\"\nassert solution(\n\"\"\"\n1 2\n1 2\n1 3\n\"\"\"\n) == \"1 2 1 2 1 2 1 2 1 2\"\n\nprint(\"You're done!\")\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 1\n5 20\n''') == '1 49 20'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"26 32 20 38 44 50\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10 26 32 20 38 44 50 8 23 18 13 3 1 10 13 4 19 22 25 16 7'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 49\n5 20 50\n''') == '1 49'''\nassert solution('''\n5\n20 50\n5 20 50\n''') == '20 50'''\nassert solution('''\n6\n20 50\n20 50\n5 20 50\n''') == '20 50'''\nassert solution('''\n5\n3 8\n9 13 22\n''') == '8 13 22'''\nassert solution('''\n5\n1 10 13 4 19 22 25 16 7\n''') == '''1 10 13 4 19 22 25 16 7'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '6 20 50 10'\nassert solution('''5 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '26 32 20 38 44 50 10'\nassert solution('''5 6 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 10 13 4 19 22 25 16 7'\nassert solution('''5 5 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 10 13 4 19 22 25 16 7'"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '26 32 20 38 44 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '1 10 13 4 19 22 25 16 7'\nprint('Tests finished')"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 40 30 50 10'\nassert solution('''\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 10 13 4 19 22 25 16 7'\nassert solution('''\n5 3 8\n9 13 22\n''') == '1 10 13 4 19 22 25 16 7'\nassert solution('''\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 40 30 50 10'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('4 4 5 5 1 2 5 2 5 1') == '1 2 3 4 5'\n\n\nhttps://www.codewars.com/kata/57b392637d7e9c5e8f0000c9/train/python\n\nfrom itertools import chain"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '3 1 2'\nassert solution('3 3 1 2') == '3 1 2'\nassert solution('3 2 1 3') == '1 3 2 3'\n\n'''"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\nimport re\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '1 2 3'"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2 4 1') == '1 4 2'\nassert solution('3 2 1') == '1 2 3'\nassert solution('3 2') == '2 3'\nassert solution('3 1 2') == '2 3 1'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('2 3 1') == '1 2'\n\n'''\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == '123'"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2]) == '1 2 3'\nassert solution([3, 5, 2, 1]) == '1 2 3 5'\nassert solution([3, 2, 3, 1, 2, 1]) == '1 2 3 1 2 3'\nassert solution([3, 2, 3, 1, 2, 1, 1]) == '1 2 3 1 2 3 1'\nassert solution([3, 2, 3, 1, 2, 1, 1, 1, 2, 3, 5]) == '1 2 3 1 2 3 1 2 3 1 2 3 5'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"3\", \"1\", \"2\"]) == \"1 2 3\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1 2 3\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2\n3\n4\n5\n3\n4\n5''') == 'YES', \"Just checking\"\nassert solution('''5\n2\n4\n4\n3\n5\n3\n4\n5''') == 'NO', \"Just checking\""
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n4\\n2 2 8 8\") == \"YES\"\nassert solution(\"5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\") == \"YES\"\nassert solution(\"5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\") == \"NO\""
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n2 1\n1\n2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n1\n10\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n2 1\n1\n2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\"\nassert solution(\"2\\n\") == \"YES\"\nassert solution(\"3\\n\") == \"NO\"\nassert solution(\"4\\n\") == \"YES\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n2\n5\n4\n1 2 3\n5\n1 2 3\n''') == 'NO'\n\n'''\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u2014 \u0432\u044b\u044f\u0441\u043d\u0438\u0442\u044c, \u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432 $a$ \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 2 \u0431\u0435\u0437 \u043e\u0441\u0442\u0430\u0442\u043a\u0430.\n\n\u0412\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \"YES\" \u0438\u043b\u0438 \"NO\" \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e. \u0412\u0430\u0448\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432\u0430\u0448\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f, \u0430 \u043e\u0441\u0442\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u044b \u0432\u044b\u0437\u0432\u0430\u0432\u0448\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f:"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n3\\n4\\n2 2 8 8\") == \"YES\"\nassert solution(\"5\\n2\\n3\\n4\\n5 5 5 5\") == \"NO\"\nassert solution(\"5\\n2\\n3\\n4\\n5 5 5 5\\n6\\n3 3 3\") == \"YES\"\nassert solution(\"5\\n2\\n3\\n4\\n5 5 5 5\\n6\\n3 3 3\\n3 3 3\\n3 3 3\") == \"NO\"\nassert solution(\"5\\n2\\n3\\n4\\n5 5 5 5\\n6\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\") == \"YES\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\n\n\"\"\"\nhttps://www.hackerrank.com/challenges/ctci-array-left-rotation/problem\n\"\"\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2', 'Checking first case (number of tests)'\nassert solution('''\n7\n1\n7\n2\n5\n3\n6\n4\n''') == '13 9 7 11 8 4 1 3 5 2 6 10 12', 'Checking second case (number of tests)'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n10\\n2\\n4\\n6\\n7\\n') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('5\\n13\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1 1 1 1 1 1 1'\nassert solution('3\\n2\\n2\\n1\\n1\\n1\\n') == '3 1 1 1 1 1'\nassert solution('3\\n5\\n1\\n1\\n1\\n1\\n') == '3 1 1 1 1 1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n10\\n2\\n4\\n6\\n7') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('3\\n1\\n4\\n2') == '5 3 6 2 4 1'\nassert solution('5\\n13\\n9 7 11 8 4 1 3 5 2 6 10 12') == '5 1 3 6 2 4 7 3 1 5 2 6 10 11 12 13'\nassert solution('6\\n6') == '-1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '9 6 10 8 4 7 3 1 5 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"9 6 10 8 4 7 3 1 5 2\"\n\nassert solution() == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\n\nassert solution() == \"-1\"\n\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('''\n1\n2\n''') == '-1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2\n4\n6\n7\n13''') == '9 6 10 8 4 7 3 1 5 2', 'Expected: 9 6 10 8 4 7 3 1 5 2'\nassert solution('''10\n2\n4\n6\n7\n13''') == '-1', 'Expected: -1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n3\n5\n4\n7\n''') == \"5 3 4 7 6 2 1\"\nassert solution('''\n4\n6\n2\n5\n''') == \"-1\"\nassert solution('''\n10\n2\n3\n5\n4\n6\n7\n13\n''') == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution('''\n4\n5\n6\n7\n13\n''') == \"5 3 6 2 4 1 7 3 1 5\"\nassert solution('''\n2\n1\n4\n''') == \"2 1 4\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '1 2 3'\nassert solution('3\\n1\\n4') == '4 1 3'\nassert solution('1\\n2\\n3') == '1 2 3'"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3 1 4 2 \nassert solution('2') == '1 2'\nassert solution('4') == '3 1 4 2'\nassert solution('6') == '3 1 4 2 5 6'\nassert solution('7') == '5 1 3 6 2 4 7 3 8'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\nassert solution('''5\n4\n0 4 8 3 2\n0\n4\n3 2 6 1\n0\n4\n3 2 6 1\n0\n3\n''') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 7 6\\n3\\n3 2 6') == '1'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '2'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '-1'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '0'\nassert solution('5\\n5\\n6 7 8 9 10\\n4\\n7 6 2 1 18 3 0') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\n\nassert solution('''\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n\nassert solution('''\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\n\nassert solution('''\n5\n4 5 2 6\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\n'''\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution([\n        '4',\n        '3 2 7 6',\n        '3',\n        '3 2 6',\n        '1',\n        '7',\n        '7',\n        '4 9 2 1 18 3 0'\n    ]) == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 2 2 2 2 1 1 0 2'\nassert solution() == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '2 2 2 2 1 1 0 2'\nassert solution('7\\n0 0 1 1 1 0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n2 6\\n3 7\\n4 8\\n5 9\\n4 8') == '2 2 2 2 1 1 0 2'\nassert solution('6\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n2 9\\n3 10\\n4 11\\n2 12\\n3 13\\n4 14\\n5 15\\n3 16\\n4 17\\n2 18\\n3 19\\n4 20\\n5 21\\n3 22\\n4 23\\n2 24\\n3 25\\n4 26\\n5 27\\n3 28\\n4 29\\n2 30\\n3 31\\n4 32\\n5 33\\n3 34\\n4 35\\n2 36\\n3 37\\n4 38\\n5 39\\n4 40\\n5 41\\n3 42\\n4 43\\n2 44\\n3 45\\n4 46\\n5 47\\n3 48\\n4 49\\n2 50\\n3 51\\n4 52\\n5 53\\n3 54\\n4 55\\n2 56\\n3 57\\n4 58\\n5 59\\n3 60\\n4 61\\n2 62\\n3 63\\n4 64\\n5 65\\n3 66\\n4 67\\n2 68\\n3 69\\n4 70\\n5 71\\n3 72\\n4 73\\n2 74\\n3 75\\n4 76\\n5 77\\n3 78\\n4 79\\n2 80\\n3 81\\n4 82\\n5 83\\n3 84\\n4 85\\n2 86\\n3 87\\n4 88\\n5 89\\n3 90\\n4 91\\n2 92\\n3 93\\n4 94\\n5 95\\n3 96\\n4 97\\n2 98\\n3 99\\n4 100\\n5 101\\n3 102\\n4 103\\n2 104\\n3 105\\n4 106\\n5 107\\n3 108\\n4 109\\n2 110\\n3 111\\n4 112\\n5 113\\n3 114\\n4 115\\n2 116\\n3 117\\n4 118\\n5 119\\n3 120\\n4 121\\n2 122\\n3 123\\n4 124\\n5 125\\n3 126\\n4 127\\n2 128\\n3 129\\n4 130\\n5 131\\n3 132\\n4 133\\n2 134\\n3 135\\n4 136\\n5 137\\n3 138\\n4 139\\n2 140\\n3 141\\n4 142\\n5 143\\n3 144\\n4 145\\n2 146\\n3 147\\n4 148\\n5 149\\n3 150\\n4 151\\n2 152\\n3 153\\n4 154\\n5 155\\n3 156\\n4 157\\n2 158\\n3 159\\n4 160\\n5 161\\n3 162\\n4 163\\n2 164\\n3 165\\n4 166\\n5 167\\n3 168\\n4 169\\n2 170\\n3 171\\n4 172\\n5 173\\n3 174\\n4 175\\n2 176\\n3 177\\n4 178\\n5 179\\n3 180\\n4 181\\n2 182\\n3 183\\n4 184\\n5 185\\n3 186\\n4 187\\n2 188\\n3 189\\n4 190\\n5 191\\n3 192\\n4 193\\n2 194\\n3 195\\n4 196\\n5 197\\n3 198\\n4 199\\n2 200\\n3 201\\n4 202\\n5 203\\n3 204\\n4 205\\n2 206\\n3 207\\n4 208\\n5 209\\n3 210\\n4 211\\n2 212\\n3 213\\n4 214\\n5 215\\n3 216\\n4 217\\n2 218\\n3 219\\n4 220\\n5 221\\n3 222\\n4 223\\n2 224\\n3 225\\n4 226\\n5 227\\n3 228\\n4 229\\n2 230\\n3 231\\n4 232\\n5 233\\n3 234\\n4 235\\n2 236\\n3 237\\n4 238\\n5 239\\n3 240\\n4 241\\n2 242\\n3 243\\n4 244\\n5 245\\n3 246\\n4 247\\n2 248\\n3 249\\n4 250\\n5 251\\n3 252\\n4 253\\n2 254\\n3 255\\n4 256\\n5 257\\n3 258\\n4 259\\n2 260\\n3 261\\n4 262\\n5 263\\n3 264\\n4 265\\n2 266\\n3 267\\n4 268\\n5 269\\n3 270\\n4 271\\n2 272\\n3 273\\n4 274\\n5 275\\n3 276\\n4 277\\n2 278\\n3 279\\n4 280\\n5 281\\n3 282\\n4 283\\n2 284\\n3 285\\n4 286\\n5 287\\n3 288\\n4 289\\n2 290\\n3 291\\n4 292\\n5 293\\n3 294\\n4 295\\n2 296\\n3 297\\n4 298\\n5 299\\n3 300\\n4 301\\n2 302\\n3 303\\n4 304\\n5 305\\n3 306\\n4 307\\n2 308\\n3 309\\n4 310\\n5 311\\n3 312\\n4 313\\n2 314\\n3 315\\n4 316\\n5 317\\n3 318\\n4 319\\n2 320\\n3 321\\n4 322\\n5 323\\n3 324"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n8\n0 0 1 0 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n1\n0 0\n\n''') == '0 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"2 2 2 2 1 1 0 2\"\nassert solution(\"8\\n0 0 0 1 1 1 1 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\") == \"0 -1 1 -1 1 2 2 2 1 0 1 2\"\nassert solution(\"5\\n0 0 1 1 0\\n1 2\\n1 3\\n1 4\") == \"1 -1 1 0 1 2 2\"\nassert solution(\"5\\n0 0 1 1 0\\n1 2\\n1 3\\n1 4\") == \"1 -1 1 0 1 2 2\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0 -1 1 -1\"\nassert solution(\"7\") == \"0 1 1 0 0 0 0 1\""
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '1'\nassert solution('12345') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '-1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == \"0\"\nprint(solution('''1\n2\n3\n12\n12345\n15116544\n387420489'''))"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '-1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"-\"\nassert solution(\"-1\") == \"-\"\nassert solution(\"15116544\") == \"36\"\nassert solution(\"1234\") == \"12\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n8\n354321\n\"\"\") == \"36\"\nassert solution(\"\"\"\n20\n1000000000000\n\"\"\") == \"36\"\nassert solution(\"\"\"\n10\n1000000000000\n\"\"\") == \"36\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '12'\nassert solution('12345') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1\") == \"0\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"3\\n3\") == \"1\"\nassert solution(\"12\\n12345\") == \"36\"\nassert solution(\"15116544\\n387420489\") == \"120\""
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '0'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '-1'\nassert solution('12') == '2'\nassert solution('12345') == '-1'\nassert solution('15116544') == '36'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0'\nassert solution('5 2') == '1'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"0\"\nassert solution(\"5 3\\nRBRGR\") == \"3\"\nassert solution(\"5 5\\nBBBRR\") == \"1\"\n\n\"\"\"\n\n\"\"\"\n1. counter of R,G,B\n2. for i in range(len(string)):\n3. if string[i] == 'R'\n4. if string[i] == 'G'\n5. if string[i] == 'B'\n6. if i - 1 - max(i - k) >= 0\n7. else:\n8.         #        if string[i] == 'R' or string[i] == 'G' or string[i] == 'B':\n9.         if string[i] == 'R':\n10.             #             if string[i + k] == 'R':\n11.             if string[i + k] == 'R':\n12.                 #                 if string[i + 2*k] == 'R':\n13.                 if string[i + 2*k] == 'R':\n14.                     counter += 1\n15.                 else:\n16.                     counter += 1\n17.             else:\n18.                 counter += 1\n19.         else:\n20.             if string[i + k] == 'G':\n21.                 if string[i + 2*k] == 'G':\n22.                     counter += 1\n23.                 else:\n24.                     counter += 1\n25.             else:\n26.                 counter += 1\n27.     return counter\n\"\"\"\n\n\"\"\"\n---------------Solution---------------\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\") == \"1\"\n\"\"\"\n\n\"\"\"\nstdin = input()\nn, k = map(int, stdin.split())"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '3'\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\") == \"3\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nBGGGG\\n\") == \"0\"\nassert solution(\"5 3\\nRBRGR\\n\") == \"3\"\nassert solution(\"5 5\\nBBBRR\\n\") == \"3\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == '0'\nassert solution('''3\n1 2\n3 2\n2 4\n''') == '1'\nassert solution('''3\n2 1\n3 2\n2 4\n''') == '1'\nassert solution('''3\n2 1\n3 2\n2 4\n''') == '1'\nassert solution('''5 3\nRBRGR\n5 5\nBBBRR\n''') == '1'\n\n'''\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n\nq = int(input())\nfor _ in range(q):\n    n, k = list(map(int, input().split()))\n    s = input()\n    if n == k:\n        print(0)\n        continue\n    def check(sub):\n        for i in range(n):\n            if s[i]!= sub[i]:\n                return False\n        return True\n\n    print(n-k) if check(s[0:n-k]) else print(-1)\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\nBBBRR\") == \"3\"\nassert solution(\"5 2\\nBGGGG\\n5 3\\nRBRGR\") == \"0\"\nassert solution(\"5 5\\nBBBRR\\n5 5\\nRBRGR\") == \"3\"\nassert solution(\"5 5\\nBBBRR\\n5 5\\nRBRGR\\nBBBRR\") == \"0\"\nassert solution(\"5 5\\nBBBRR\\n5 5\\nRBRGR\\nBBBRR\\nBBBRR\") == \"3\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\\n\") == \"3\"\nassert solution(\"3\\n3 1 2 3 1\\n\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"2\"\n\n'''"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"100\") == \"100\""
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n1\n5\n3 1 2 3 1\n''') == '3'\nassert solution('''\n1\n5\n5\n2 5 2 1\n''') == '2'\nassert solution('''\n1\n5\n3 1 2 3 1\n''') == '3'\nassert solution('''\n1\n5\n5\n2 5 3 1\n''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''10\n5\n3 1 5 1 6 2 4 2''') == '1'\nassert solution('''10\n3\n1 2 3 1''') == '3'"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\n    \"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 1 2 2\") == \"3\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'\nassert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 3 5 2 4'\nprint(solution())"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\nassert solution('7') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5', \"First\"\nassert solution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5', \"Second\"\nassert solution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5', \"Third\"\n'''\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 1 3 2\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4\"\n\n\"\"\"\n\n\nimport bisect"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 1 3 2') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n1 2 3 4\\n\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4 5'\nassert solution('''4\n1 2 3 4 5\n1 5 2 4 3\n4\n1 5 2 4 3''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\", \"Test 1\"\nassert solution(\"4\") == \"YES\", \"Test 2\"\nassert solution(\"3\") == \"NO\", \"Test 3\"\nassert solution(\"5\") == \"YES\", \"Test 4\"\nassert solution(\"3\") == \"NO\", \"Test 5\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES\\nYES\\nYES\\nYES\\nYES', solution('5')\nassert solution('4') == 'YES\\nYES\\nYES\\nYES', solution('4')\nassert solution('3') == 'YES\\nYES\\nYES', solution('3')\nassert solution('2') == 'YES\\nYES', solution('2')\nassert solution('1') == 'YES\\nYES\\nYES\\nYES\\nYES', solution('1')\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n2 3 1 5 4\\n5\\n1 2 3 4 5\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n1 2 3 1 5\\n5\\n1 2 3 4 5\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'YES'\nassert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n1 2 3 4') == 'YES'\nassert solution('4\\n5\\n1 3 2 4') == 'NO'\nassert solution('4\\n5\\n1 3 2 5 4') == 'YES'\nassert solution('4\\n5\\n1 2 3 4 5') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5 2') == '5'\nassert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\"\n    ) == \"5\"\nassert solution(\n\"\"\"\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\"\n    ) == \"18\"\nassert solution(\n\"\"\"\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\"\n    ) == \"10\"\nassert solution(\n\"\"\"\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\"\n    ) == \"75015\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"18\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"75015\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"5\"\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"18\"\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"10\"\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"75015\"\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"5\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\nassert solution('100000 50010') == '75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 2\\n1\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('2\\n1 3\\n5\\n5 3\\n') == '5\\n4\\n3\\n5\\n'"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n4 2\n3 4\n10 5\n6 2\n100000 50010\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5\n5 2\n4 4\n3 3\n2 2\n10 5\n6 2\n100000 50010\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n5\n5 2\n3 4\n3 3\n2 2\n10 5\n6 2\n100000 50010\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5\n5 2\n4 4\n3 3\n2 2\n10 5\n6 2\n100000 50010\n\"\"\") == \"75015\"\n\nassert solution(\"\"\"\n5\n5 2\n4 4\n3 3\n2 2\n10 5\n6 2\n100000 50010\n\"\"\") == \"5\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\n\n'''\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nprint(solution())\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n4 3\n1000000000 9\n\n''') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nprint(solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n'''))"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\"\nassert solution(\"5\\n2 3\\n3 4\\n4 5\\n5 1\\n1 1\\n1 1000000000\") == \"YES\\n1 1 1 1 1 1 1 1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4'\nassert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nYES\\n55 5 5 35'"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\""
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\n'\nassert solution('8\\n3 10') == 'YES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n') == '55'\nprint('\u2705 Test passed!')"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n') == '55\\n15000000000000000\\n'"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"55000000000000000\"\nassert solution(\"4\\n5 2 2 3\\n1 5 2 3\\n1 5 2 3\\n3 6 2 1\\n2 7 2 1\\n5 8 2 1\\n3 8 2 1\\n4 9 2 1\\n\") == \"6\"\nassert solution(\"100000000000000000\\n100000000000000000\\n000000000000\\n\") == \"1000000000000000\"\nassert solution(\"5\\n9 1 1\\n4 9 1\\n3 8 2 1\\n4 8 2 1\\n5 7 2 1\\n5 7 2 1\\n\") == \"8\"\nassert solution(\"12345\\n12345\\n12345\\n\") == \"12345\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '55'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n5 4\n7 8\n''') == '4'\nassert solution('''1 1\n1\n''') == '1'\nassert solution('''1\n3\n''') == '1'\nassert solution('''1\n1000000000000000\n11000000000\n''') == '1'\nassert solution('''1\n1000000000000000\n10000000000000000000000000000000\n''') == '0'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n\") == \"4\\n55\\n15000000000000000\\n51\"\nprint(solution(*[*[int(x) for x in stdin.split()] for _ in range(int(input()))]))"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '55'\nassert solution('''23 34 45\n1 2 3\n1 4 5\n2 3 4\n3 4 5''') == '15000000000000000'"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"55\\n15000000000000000\\n51\\n\"\nassert solution(\n    \"3\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"55\\n15000000000000000\\n51\\n\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3 1\n1 2\n3\n1 2\n''') == '4'\nassert solution('''\n2\n10 9\n5 7\n1\n8\n''') == '11'\nassert solution('''\n2\n3 1\n1 2\n3\n1 2\n''') == '2'\nassert solution('''\n3\n1 5\n4 6\n2\n1\n''') == '2'\nassert solution('''\n3\n3 3\n1 2\n2 1\n''') == '3'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 3 4') == '1\\n4'\nassert solution('2\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '2\\n55\\n15000000000000000\\n51'\nassert solution('3\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '3\\n3\\n800000000000000\\n800000000000000'"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3') == \"3\"\nassert solution('6 3') == \"3\"\nassert solution('1000000') == \"1000001\"\nassert solution('10 10') == \"10\"\nassert solution('20 50') == \"20\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n3 6\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\n\n'''"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 3\\naaa\\n10 10\") == \"3\"\nassert solution(\"2\\n3 3\\nabc\\n10 10\") == \"5\"\nassert solution(\"2\\n5 4\\nabcb\\n20 20\") == \"5\"\nassert solution(\"2\\n6 3\\nabc\\ndabc\\necbac\\nabcde\\na\\nb\\n\") == \"3\"\nassert solution(\"3\\n6 3\\nabc\\ndabc\\necbac\\nabcde\\na\\n\") == \"3\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '6'\n\n'''\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3\\nabcbac\\n') == '3'\nassert solution('6 3\\naaa\\n') == '1'\nassert solution('6 3\\nababa\\n') == '5'\nassert solution('6 3\\necbedececacbcbccbdec\\n') == '10'\nassert solution('6 3\\n20 10\\n') == '11'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"15\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(6, 3, \"abcbac\") == 3\nassert solution(6, 6, \"aaa\") == 1\nassert solution(7, 1000, \"ecbedececacbcbccbdec\") == 10\nassert solution(20, 5, \"ababa\") == 15\nassert solution(20, 4, \"ecbedececacbcbccbdec\") == 10\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 2\nabc\n3 2\nabca\n4 4\naabc\n5 5\n''') == '3'\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 1\n8 7\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n1 1\n2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 4\n1 5 2 3 1\n4 1 2 2 2\n5 4 5 4 5\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4 2\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('3\\n5 2\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('3\\n1 2\\n3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('3\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('3\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''3\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''3\n5 2\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\nassert solution('''3\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n2 5''') == 'YES'\n\nassert solution('''2 1\n4 3''') == 'NO'\n\nassert solution('''5 3\n1 2 3 4 5\n5 4\n1 2 8 4 10 2\n\n4 2\n1 2 3 4 5\n3 2 3\n2 2 5\n''') == 'YES'\n\nassert solution('''1 2\n2 5\n1 2 3 4 5\n5 4\n1 2 8 4 10 2\n\n4 2\n1 2 3 4 5\n3 2 3\n2 2 5\n''') == 'NO'\n\nassert solution('''5 3\n1 2 3 4 5\n5 4\n1 2 8 4 10 2\n\n6 2\n1 2 3 4 5\n3 2 3\n2 2 5\n''') == 'NO'"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example) == \"YES\\n1 2 3 5\"\nassert solution(long_input) == \"NO\""
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"\"\"\n6\n3 3\n5 2 2 2 2 2\n1 2 3 4 5\n1 4 5\n1 5\n2 4 3\n3 1\n4 1\n4 2\n\"\"\") == \"YES\\n1 2 3 4 5\\nNO\\nNO\\nNO\\nNO\""
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('1\\n2\\n') == 'NO'"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\"\n) == \"YES\\n1 3 5\\nNO\\nNO\\n\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 3 5\") == \"YES\"\nassert solution(\"5 4\") == \"NO\""
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''00000010100101000001111010011100''') == '964176192'\nassert solution('''111111111111111111111111111111101''') == '3221225471'\n'''\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"111111111111111111111111111111111\") == \"10111111111111111111111111111111\"\nassert solution(\"00111001011110000010100101000000\") == \"964176192\"\nassert solution(\"1010101\") == \"1010101\""
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"110101010101010101\") == \"1001110011100\"\nassert solution(\"1010101010101010101\") == \"1001110011101\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"11111000011111111111111111111110111111111111111111111111111111111111111111111111111111111111111111\"\n) == \"964176192\"\nassert solution(\"111010101100110111011011101110110011100101111111011101111000000000000\") == \"3221225471\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('111111111111111111111111111111101') == 3221225471"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\n\"\"\"\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        binary = format(n, '032b')\n        return int(binary[::-1], 2)\n        "
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"00000010100101000001111010011100\"\n) == \"964176192\"\nassert solution(\n    \"111111111111111111111111111111111\"\n) == \"3221225471\"\n\"\"\"\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        res = 0\n        for i in range(32):\n            res = (res << 1) | (n >> i) & 1\n        return res"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"964176192\"\n\n'''"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"001101111101010101010111001010101010010111111\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"[]\",\"Wrong solution\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3]) == [[1], [1, 1], [1, 2, 1]], \"First\"\nassert solution([4]) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]], \"Second\"\nassert solution([5]) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]], \"Third\"\nassert solution([6]) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]], \"Fourth\"\nassert solution([1]) == [[1]], \"Fifth\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == \"[1, 4, 9, 16]\""
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1\n1 1 1\n1 2 3 1\n1 3 6 4 1''') == '''[\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1]\n]'''\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n''') == '''[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]'''"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"[\\n    [1],\\n    [1,1],\\n    [1,2,1],\\n    [1,3,3,1],\\n    [1,4,6,4,1]\\n]\""
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '\\n'.join(['\\n'.join([str(i) for i in range(1,n+1)]) for n in range(1, 5)])"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n'.join([\n    '1',\n    '1 1',\n    '1 2 1',\n    '1 3 3 1',\n    '1 4 6 4 1'\n])\n\nassert solution('100') == '\\n'.join([\n    '1',\n    '1 1',\n    '1 2 1',\n    '1 3 3 1',\n    '1 4 6 4 1',\n    '1 5 10 10 5 1',\n    '1 6 15 20 15 6 1',\n    '1 7 21 35 35 21 7 1',\n    '1 8 28 56 70 56 28 8 1',\n    '1 9 36 84 126 126 84 36 9 1',\n    '1 10 46 120 160 160 120 46 10 1',\n    '1 11 62 176 176 62 176 62 11 1',\n    '1 12 78 240 240 78 240 78 12 1',\n    '1 13 96 192 192 96 192 96 13 1',\n    '1 14 144 144 144 144 144 14 14 1',\n    '1 15 144 144 144 144 144 144 15 1',\n    '1 16 144 144 144 144 144 144 16 1',\n    '1 17 144 144 144 144 144 144 17 1',\n    '1 18 144 144 144 144 144 144 18 1',\n    '1 19 144 144 144 144 144 144 19 1',\n    '1 20 144 144 144 144 144 144 20 1',\n    '1 21 144 144 144 144 144 144 21 1',\n    '1 22 144 144 144 144 144 144 22 1',\n    '1 23 144 144 144 144 144 144 23 1',\n    '1 24 144 144 144 144 144 144 24 1',\n    '1 25 144 144 144 144 144 144 25 1',\n    '1 26 144 144 144 144 144 144 26 1',\n    '1 27 144 144 144 144 144 144 27 1',\n    '1 28 144 144 144 144 144 144 28 1',\n    '1 29 144 144 144 144 144 144 29 1',\n    '1 30 144 144 144 144 144 144 30 1',\n    '1 31 144 144 144 144 144 144 31 1',\n    '1 32 144 144 144 144 144 144 32 1',\n    '1 33 144 144 144 144 144 144 33 1',\n    '1 34 144 144 144 144 144 144 34 1',\n    '1 35 144 144 144 144 144 144 35 1',\n    '1 36 144 144 144 144 144 144 36 1',\n    '1 37 144 144 144 144 144 144 37 1',\n    '1 38 144 144 144 144 144 144 38 1',\n    '1 39 144 144 144 144 144 144 39 1',\n    '1 40 144 144 144 144 144 144 40 1',\n    '1 41 144 144 144 144 144 144 41 1',\n    '1 42 144 144 144 144 144 144 42 1',\n    '1 43 144 144 144 144 144 144 43 1',\n    '1 44 144 144 144 144 144 144 44 1',\n    '1 45 144 144 144 144 144 144 45 1',\n    '1 46 144 144 144 144 144 144 46 1',\n    '1 47 144 144 144 144 144 144 47 1',\n    '1 48 144 144 144 144 144 144 48 1',\n    '1 49 144 144 144 144 144 144 49 1',\n    '1 50 144 144 144 144 144 144 50 1',\n    '1 51 144 144 144 144 144 144 51 1',\n    '1 52 144 144 144 144 144 144 52 1',\n    '1 53 144 144 144 144 144 144 53 1',\n    '1 54 144 144 144 144 144 144 54 1',\n    '1 55 144 144 144 144 144 144 55 1',\n    '1 56 144 144 144 144 144 144 56 1',\n    '1 57 144 144 144 144 144 144 57 1',\n    '1 58 144 144 144 144 144 144 58 1',\n    '1 59 144 144 144 144 144 144 59 1',\n    '1 60 144 144 144 144 144 144 60 1',\n    '1 61 144 144 144 144 144 144 61 1',\n    '1 62 144 144 144 144 144 144 62 1',\n    '1 63 144 144 144 144 144 144 63 1',\n    '1 64 144 144 144 144 144 144 64 1',\n    '1 65 144 144 144 144 144 144 65 1',\n    '1 66 144 144 144 144 144 144 66 1',\n    '1 67 144 144 144 144 144 144 67 1',\n    '1 68 144 144 144 144 144 144 68 1',\n    '1 69 144 144 144 144 144 144 69 1',\n    '1 70 144 144 144 144 144 144 70 1',\n    '1 71 144 144 144 144 144 144 71 1',\n    '1 72 144 144 144 144 144 144 72 1',\n    '1 73 144 144 144 144 144 144 73 1',\n    '1 74 144 144 144 144 144 144 74 1',\n    '1 75 144 144 144 144 144 144 75 1',\n    '1 76 144 144 144 144 144 144 76 1',\n    '1 77 144 144 144 144 144 144 77 1',\n    '1 78 144 144 144 144 144 144 78 1',\n    '1 79 144 144 144 144 144 144 79 1',\n    '1 80 144 144 144 144 144 144 80 1',\n    '1 81 144 144 144 144 144 144 81 1',\n    '1 82 144 144 144 144 144 144 82 1',\n    '1 83 144 144 144 144 144 144 83 1',\n    '1 84 144 144 144 144 144 144 84 1',\n    '1 85 144 144 144 144 144 144 85 1',\n    '1 86 144 144 144 144 144 144 86 1',\n    '1 87 144 144 144 144 144 144 87 1',\n    '1 88 144 144 144 144 144 144 88 1',\n    '1 89 144 144 144 144 144 144 89 1',\n    '1 90 144 144 144 144 144 144 90 1',\n    '1 91 144 144 144 144 144 144 91 1',\n    '1 92 144 144 144 144 144 144 92 1',\n    '1 93 144 144 144 144 144 144 93 1',\n    '1 94 144 144 144 144 144 144 94 1',\n    '1 95 144 144 144 144 144 144 95 1',\n    '1 96 144 144 144 144 144 144 96 1',\n    '1 97 144 144 144 144 144 144 97 1',\n    '1 98 144 144 144 144 144 144 98 1',\n    '1 99 144 144 144 144 144 144 99 1',\n    '1 100 144 144 144 144 144 144 100 1',\n    '1 101 144 144 144 144 144 144 101 1',\n    '1 102 144 144 144 144 144 144 102 1',\n    '1 103 144 144 144 144 144 144 103 1',\n    '1 104 144 144 144 144 144 144 104 1',\n    '1 105 144 144 144 144 144 144 105 1',\n    '1 106 144 144 144 144 144 144 106 1',\n    '1 107 144 144 144 144 144 144 107 1',\n    '1 108 144 144 144 144 144 144 108 1',\n    '1 109 144 144 144 144 144 144 109 1',\n    '1 110 144 144 144 144 144 144 110 1',\n    '1 111 144 144 144 144 144 144 111 1',\n    '1 112 144 144 144 144 144 144 112 1',\n    '1 113 144 144 144 144 144 144 113 1',\n    '1 114 144 144 144 144 144 144 114 1',\n    '1 115 144 144 144 144 144 144 115 1',\n    '1 116 144 144 144 144 144 144 116 1',\n    '1 117 144 144 144 144 144 144 117 1',\n    '1 118 144 144 144 144 144 144 118 1',\n    '1 119 144 144 144 144 144 144 119 1',\n    '1 120 144 144 144 144 144 144 120 1',\n    '1 121 144 144 144 144 144 144 121 1',\n    '1 122 144 144 144 144 144 144 122 1',\n    '1 123 144 144 144 144 144 144 123 1',\n    '1 124 144 144 144 144 144 144 124 1',\n    '1 125 144 144 144 144 144 144 125 1',\n    '1 126 144 144 144 144 144 144 126 1',\n    '1 127 144 144 144 144 144 144 127 1',\n    '1 128 144 144 144 144 144 144 128 1',\n    '1 129 144 144 144 144 144 144 129 1',\n    '1 130 144 144 144 144 144 144 130 1',\n    '1 131 144 144 144 144 144 144 131 1',\n    '1 132 144 144 144 144 144 144 132 1',\n    '1 133 144 144 144 144 144 144 133 1',\n    '1 134 144 144 144 144 144 144 134 1',\n    '1 135 144 144 144"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '\\n'.join(['1'] + [str(i) + str(i) for i in range(1, 6)] + ['1'])\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"[1,1]\\n[1,2,1]\\n[1,3,3,1]\\n[1,4,6,4,1]\\n[1,5,10,10,5,1]\\n\"\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '[]'\nassert solution('1\\n1@example.com') == '1@example.com'\nassert solution('2\\n1@example.com\\n1@example.com') == '1@example.com'\nassert solution('3\\n1@example.com\\n2@example.com\\n3@example.com') == '1@example.com'\nassert solution('10\\n1@example.com\\n2@example.com\\n3@example.com\\n4@example.com\\n5@example.com\\n6@example.com\\n7@example.com\\n8@example.com\\n9@example.com') == '1@example.com'\n\nThe code below will only work for the example given. The code should run with all the possible inputs.\n\nstdin = sys.stdin\nN = int(stdin.readline())\nresult = list()\n\nfor _ in range(N):\n    line = stdin.readline().strip()\n    if line == '':\n        break\n    result.append(line)\n\nprint(result)"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([]) == [\"\"]\nassert solution([\"test@email.com\"]) == [\"test@email.com\"]\nassert solution([\"test@email.com\", \"test@email2.com\"]) == [\"test@email.com\", \"test@email2.com\"]\nassert solution([\"test@email.com\", \"test@email2.com\", \"test@email3.com\"]) == [\"test@email.com\", \"test@email2.com\", \"test@email3.com\"]\nassert solution([\"test@email.com\", \"test@email2.com\", \"test@email3.com\", \"test@email4.com\"]) == [\"test@email.com\", \"test@email2.com\", \"test@email3.com\", \"test@email4.com\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == []\nassert solution('1\\n') == ['1']\nassert solution('2\\n1\\n') == ['1']\nassert solution('2\\n1\\n2') == ['1', '2']\nassert solution('2\\n1\\n2\\n3') == ['1', '2', '3']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\njoe@hackerrank.com\") == \"joe@hackerrank.com\"\nassert solution(\"2\\nhackerrank@hackerrank.com\\njoe@hackerrank.com\") == \"hackerrank.com,joe@hackerrank.com\"\n\"\"\""
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\na@b.com\\n1@.com\\n2@0.2.2') == ['1@0.2.2','2@0.2.2']\n\nassert solution('4\\n1@0.1.1\\n1@0.1.1\\n1@0.1.1\\n1@0.1.1') == ['1@0.1.1','1@0.1.1','1@0.1.1','1@0.1.1']\n\nassert solution('5\\n1@1.1.1\\n2@2.2.2\\n3@3.3.3\\n4@4.4.4\\n5@5.5.5') == ['1@1.1.1','2@2.2.2','3@3.3.3','4@4.4.4','5@5.5.5']"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\\njohn@example.com\") == [\"john@example.com\", \"john@example.com\", \"john@example.com\"]\nassert solution(\"1\\nabcd@xyz.com\\npqr@xyz.com\\nuvw@xyz.com\\n\") == [\"abcd@xyz.com\", \"pqr@xyz.com\", \"uvw@xyz.com\"]\nassert solution(\"5\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\njohndoe@example.com\\n\") == [\"johndoe@example.com\"]\n\n===========Sample Input/Output 1==========\nSample Input 1\n5\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\n\nSample Output 1\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\njohn@example.com\n\n=============\nSample Input 2\n2\njohn@example.com\njohn@example.com\n\nSample Output 2\njohn@example.com\njohn@example.com\n\n\n=============\nSample Input 3\n10\nkarthik.13@abc.com\nsakthi.12@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\n\nSample Output 3\nabc123@xyz.com\nkarthik.13@abc.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\nabc123@xyz.com\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == [\"lisa@hackerrank.com\",\"david@hackerrank.com\",\"kate@hackerrank.com\",\"kathy@hackerrank.com\",\"mihir@hackerrank.com\",\"brian@hackerrank.com\"]\n\n=====Test Cases=====\nInput\n\n6\n\nlisa@hackerrank.com\ndavid@hackerrank.com\nkate@hackerrank.com\nkathy@hackerrank.com\nmihir@hackerrank.com\nbrian@hackerrank.com\nOutput\n\n[\"lisa@hackerrank.com\",\"david@hackerrank.com\",\"kate@hackerrank.com\",\"kathy@hackerrank.com\",\"mihir@hackerrank.com\",\"brian@hackerrank.com\"]\n\n=====Explanation=====\nYour function should take the first line of input as the number of emails.\nThen, you need to print the first N emails in a single line, sorted lexicographically.\n\n>>> solution(1)\n['lisa@hackerrank.com']\n>>> solution(2)\n['lisa@hackerrank.com', 'david@hackerrank.com']\n>>> solution(3)\n['lisa@hackerrank.com', 'david@hackerrank.com', 'kate@hackerrank.com']\n>>> solution(4)\n['lisa@hackerrank.com', 'david@hackerrank.com', 'kate@hackerrank.com', 'kathy@hackerrank.com']\n>>> solution(5)\n['lisa@hackerrank.com', 'david@hackerrank.com', 'kate@hackerrank.com', 'kathy@hackerrank.com','mihir@hackerrank.com']\n\n\"\"\""
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1@2.com'\nassert solution('3') == '1@2.com'\nassert solution('4') == '1@2.com'\nassert solution('5') == '1@2.com'\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\na@b.com\\na@b.com\\na@c.com\\na@c.com') == ['a@b.com','a@c.com']\nassert solution('2\\nc@d.com\\nc@d.com\\nc@e.com\\n') == ['c@d.com','c@e.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == [\"johndoe@gmail.com\", \"johnsmith@gmail.com\", \"john_smith@yahoo.com\"]"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ['0', '1', '1', '2', '3', '5', '8', '13', '21', '34']\nprint(solution(''))\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == ['0', '1', '8', '27', '64', '125']\n\nSOLUTION:"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == [1, 1, 2, 8, 27, 64]"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1\\n8\\n27\\n64'\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0\\n1\\n1\\n2\\n3\\n5\\n8\\n13\\n21\\n34\\n55\\n89\\n144\\n233\\n377\\n610\\n987\\n1597\\n2584\\n4181\\n6765\\n10946\\n17711\\n28657\\n46368\\n75025\\n121393\\n196418\\n317811\\n514229\\n832040\\n1346269\\n2178309\\n3524578\\n5702887\\n9227465\\n14930352\\n24157817\\n39088169\\n63245986\\n102334155\\n165580141\\n267914296\\n433494437\\n701408733\\n1134903170\\n1836311903\\n2971215073\\n4807526976\\n97802799012\\n15480069254\\n26483525352\\n47331648151\\n62270209944\\n10636644591\\n171220470498\\n278832246786'\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == [1, 2]\nassert solution('7') == [1, 8, 27, 64, 125, 216, 729]\nprint(solution(input()))\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n3\n3\n7''') == '2'\n\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == [1, 1, 1]\nassert solution('5') == [1, 1, 1, 1, 1]\nassert solution('10') == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == [1, 8, 27], 'Case 1'\nassert solution('5') == [1, 32, 123, 1000, 1331], 'Case 2'\nassert solution('10') == [1, 44, 205, 1259, 1692, 2584, 3551, 4032, 4186, 4368, 4892, 5162, 5708, 6736, 7058, 7292, 7404, 7482, 8077, 8191, 8349, 8576, 8680, 8764, 8832, 8970, 9149], 'Case 3'\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\\n1\\n8\\n27\"\n\"\"\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n    <title>Some Title</title>\n    <subtitle>Some Subtitle</subtitle>\n    <link rel=\"alternate\" href=\"http://www.w3.org/2005/Atom\"/>\n    <updated>2013-08-27T00:00:00Z</updated>\n</feed>''') == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('<feed><title>How to hack</title><subtitle>Hacking is fun</subtitle></feed>') == \"4\"\nassert solution('<feed><title>How to hack</title><title>Hacking is fun</title></feed>') == \"2\"\nassert solution('<feed><title>How to hack</title><subtitle>Hacking is fun</subtitle><title>Hacking is fun</title></feed>') == \"3\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang=\"en\"><title>How to get started with programming</title><subtitle>with XML</subtitle></feed>') == \"2\"\nassert solution('<feed xml:lang=\"en\">' +\n                '<title>How to get started with programming</title>' +\n                '<subtitle>with XML</subtitle>' +\n                '<author>' +\n                '<name>John Smith</name>' +\n                '<email>john.smith@example.com</email>' +\n                '</author>' +\n                '<link href=\"http://example.com/feed.xml\" rel=\"self\" />' +\n                '<category term=\"programming\"/>' +\n                '</feed>') == \"3\""
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n<a><b><c><d><e><f>\\n') == 3\nassert solution('5\\n<a>\\n') == 0\nassert solution('5\\n<a><b><c><d><e><f>\\n') == 4\nassert solution('1\\n<a>\\n') == 0\nassert solution('1\\n<a>\\n<b><c></b><d><e></e></d></a>\\n') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"3\"\n'''\n\n\nimport xml.etree.ElementTree as ET\nfrom collections import defaultdict"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '2'\n'''\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n<feed xmlns:ns1=\"nsuri:ns1\">\n<ns1:title>hello</ns1:title>\n<ns1:link href=\"link.html\"/>\n<ns1:description>\n  <ns1:title>hi</ns1:title>\n</ns1:description>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n</ns1:feed>\n\"\"\") == \"2\"\nassert solution(\"\"\"\n<feed xmlns:ns1=\"nsuri:ns1\">\n<ns1:title>hello</ns1:title>\n<ns1:link href=\"link.html\"/>\n<ns1:description>\n  <ns1:title>hi</ns1:title>\n</ns1:description>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n</ns1:feed>\n\"\"\") == \"3\"\nassert solution(\"\"\"\n<feed xmlns:ns1=\"nsuri:ns1\">\n<ns1:title>hello</ns1:title>\n<ns1:link href=\"link.html\"/>\n<ns1:description>\n  <ns1:title>hi</ns1:title>\n</ns1:description>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n<ns1:icon>\n    <ns1:href>icon.gif</ns1:href>\n</ns1:icon>\n</ns1:feed>\n\"\"\") == \"2\"\n\"\"\")\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n<root><a><b/><c/></a></root>') == 2\nassert solution('1\\n<root><a><b><c/></b></a></root>') == 3\n=====Test cases=====\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for developers</subtitle>\n<link rel='alternate' type='text/html' href='http://lear.inrialpes.fr/Renderer/xsl/guide/tutorial.html'/>\n<updated>2013-05-28T00:00:00</updated>\n</feed>''') == '4'\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n<link rel='alternate' href='http://www.xml.com/pub/a/2001/06/xml/index.html'/>\n</feed>\"\"\") == \"2\", \"Should be 2\"\n\n=====Explanation=====\nThe initial depth of the tree is 0, and the answer is 2.\nEach line in the input data represents an XML element, and the XML document contains N lines of these elements.\n\n=====Constraints=====\n1 <= N <= 100\n\n=====Test Cases=====\nInput 1:\n    <feed xml:lang='en'>\n        <title>XML Developer's Guide</title>\n        <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n        <link rel='alternate' href='http://www.xml.com/pub/a/2001/06/xml/index.html'/>\n    </feed>\n\nOutput 1:\n    2\n\nInput 2:\n    <feed>\n        <title>XML Developer's Guide</title>\n        <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n    </feed>\n\nOutput 2:\n    0\n\nInput 3:\n    <feed>\n        <title>XML Developer's Guide</title>\n        <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n        <link rel='alternate' href='http://www.xml.com/pub/a/2001/06/xml/index.html'/>\n    </feed>\n\nOutput 3:\n    2\n\nInput 4:\n    <feed xml:lang='en'>\n        <title>XML Developer's Guide</title>\n        <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n    </feed>\n\nOutput 4:\n    0\n\n=====Hints=====\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n918123645\\n718542563\") == \"YES\"\nassert solution(\"1\\n9191223645\\n718542563\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 879 234 567\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"YES\"\nassert solution(\"7 879 234 567 987\") == \"YES\""
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n(939) 3980-1943\n''') == \"NO\"\n=====Test Case 1=====\n>>>>>>> parent of 48a4c1e... Fixed test case 1\nassert solution('''\n1\n(939) 3980-1943\n''') == \"NO\"\n>>>>>>> parent of 48a4c1e... Fixed test case 1\nassert solution('''\n2\n(939) 3980-1943\n''') == \"YES\"\n>>>>>>> parent of 48a4c1e... Fixed test case 1\n\n=====Test Case 2=====\n>>>>>>> parent of 48a4c1e... Fixed test case 2\nassert solution('''\n1\n(939) 3980-1943\n''') == \"YES\"\n>>>>>>> parent of 48a4c1e... Fixed test case 2\nassert solution('''\n2\n(939) 3980-1943\n''') == \"NO\"\n>>>>>>> parent of 48a4c1e... Fixed test case 2\n\n=====Test Case 3=====\n>>>>>>> parent of 48a4c1e... Fixed test case 3\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n71949234567\n719492345678\n''') == 'YES\\nNO', 'First'\nassert solution('''\n2\n71949234567\n719492345678\n''') == 'YES\\nNO', 'Second'\nassert solution('''\n2\n81949234567\n819492345678\n''') == 'NO', 'Third'\n''') == 'YES\\nNO', 'Fourth'\nassert solution('''\n2\n898949234567\n8989492345678\n''') == 'NO', 'Fifth'\n''') == 'YES\\nNO', 'Sixth'\nassert solution('''\n2\n749234567\n7492345678\n''') == 'NO', 'Seventh'\n''') == 'YES\\nNO', 'Eighth'\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n987654321\n987654321\n''') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n979-912-3456\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n979-912-5678\n979-912-5678\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1\n979-912-9012\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n979-912-5678\n979-912-5678\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n979-912-9012\n979-912-9012\n979-912-9012\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n7165049987') == 'YES'\nassert solution('13\\n(016)568-7890') == 'YES'\nassert solution('(016)568-7890') == 'NO'\nassert solution('(016)568-7890') == 'NO'\nassert solution('7165049987') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9 0 7 8 9"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n738272161234\\n918752160234\\n738272161234\\n\") == \"YES\\nYES\\nYES\"\nassert solution(\"1\\n738272161234\\n918752160234\\n738272161234\\n\") == \"NO\"\nassert solution(\"1\\n738272161234\\n738272161234\\n\") == \"YES\\nYES\\nYES\""
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7\n987 65432\n8474940\n\"\"\") == \"\"\"NO\nNO\nNO\nNO\nYES\nYES\nYES\nNO\n\"\"\".strip()\n\nassert solution(\"\"\"\n7\n123 456 7890\n789 543 21\n\"\"\") == \"\"\"YES\nYES\n\"\"\".strip()\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4 3 2''') == '''1 2 5'''\n>>> \n=====Explanation=====\nstdin = 5 4 3 2\nWrite 5 lines of code to test the correctness of solution:\n=====Solution=====\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\") == \"1 3 5 8\"\n\n=====Expected Output=====\n1 3 5\n>>>>>>> Improve the Solution\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3 1\"\nassert solution(\"2 4 5 7 9 11 12\") == \"11 12 9 5 7 4\"\n\n\n=====Sample Test Cases=====\nTest 1\n\nInput\n\n5\n1 2 3 4 5\n6 7 8 9 10\n\nOutput\n\n1 2 3 4 5 6 7 8 9 10 11 12\n\nTest 2\n\nInput\n\n4\n2 4 1 3\n7 8 10 9\n\nOutput\n\n1 3 4 7 8 2 10 9 1 2 3\n\n'''\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 4, 5, 9]) == \"2 9 5 4\"\nassert solution([1, 2, 3, 4]) == \"3 4 2 1\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) == \"5 7 8 9 6 4 3 2 1\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 4, 3, 2]) == \"4 2 5\"\nassert solution([1, 2, 3, 4]) == \"2 3 4\"\nassert solution([4, 5, 6, 7]) == \"7 6 4 5\"\nassert solution([1, 2, 3, 4, 5]) == \"4 5 3 2 1\"\nassert solution([7, 7, 7, 7]) == \"7 7 7 7\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '10 8 12 6 14'\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5 7 2') == '3 4 5 6 7'\nassert solution('1 3 5 2 7') == '6 7 5 3'\nassert solution('1 1 2') == '3'\nassert solution
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"1 2\"\nassert solution('4') == \"1 3\"\nassert solution('6') == \"1 5\"\nassert solution('7') == \"2 4\"\nassert solution('8') == \"2 5\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3 4 2'\nassert solution('5 2 3 4 4') == '3 4'\nassert solution('1 4 8 5') == '1 5'\nassert solution('5 3 4 3') == '2 3 3'\n\n\n=====EXAMPLE TEST CASES=====\n>>> solution('5 4 3 2')\n'3 4 2'\n>>> solution('5 2 3 4 4')\n'3 4'\n>>> solution('1 4 8 5')\n'1 5'\n>>> solution('5 3 4 3')\n'2 3 3'\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3 2\") == \"3 2 1\"\n\n=========================================\n\n=====Solution=====\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n    ID         MARKS      NAME       CLASS\n    1         97         Raymond    7\n    2         50         Steven     4\n    3         91         Adrian     9\n    4         72         Stewart    5\n    5         80         Peter      6''') == '82.00'\nassert solution('''5\n    ID         MARKS      NAME       CLASS\n    1         97         Raymond    7\n    2         50         Steven     4\n    3         91         Adrian     9\n    4         72         Stewart    5\n    5         80         Peter      6''') == '81.00''''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nA,2,3,4\\n1,2,3,4\\n1,2,3,4\\n1,2,3,4\\n\") == \"3.00\"\nassert solution(\"2\\nA,2,3,4\\n1,2,3,4\\n1,2,3,4\\n1,2,3,4\\n\") == \"3.00\"\nassert solution(\"10\\nA,2,3,4\\n1,2,3,4\\n1,2,3,4\\n1,2,3,4\\n1,2,3,4\\n1,2,3,4\\n\") == \"2.16\"\n=====Sample Test Cases=====\nInput\nOutput\n\n========================\n2\nA,2,3,4\n1,2,3,4\n1,2,3,4\n1,2,3,4\n\nOutput\n========================\n3.00\n3.00\n\n========================\n4\nA,2,3,4\n1,2,3,4\n1,2,3,4\n1,2,3,4\n\nOutput\n========================\n3.00\n3.00\n\n========================\n10\nA,2,3,4\n1,2,3,4\n1,2,3,4\n1,2,3,4\n\nOutput\n========================\n2.16\n2.16\n\n\"\"\""
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nID MARKS CLASS NAME\\n1 2 3 4\\n2 5 6 7') == \"2.67\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2,2,2,0,2,2,0,2,0,1]) == 1.5\nassert solution([2,2,2,0,2,2,0,2,0,1,2,0,2,2,0,2,0,1]) == 2.0\nassert solution([2,2,2,0,2,2,0,2,0,1,2,0,2,2,0,2,0,1,2,0,2,2,0,2,0,1,2,0,2,2,0,2,0,1]) == 2.5\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1.5 3.5 2.5\\n2.5 2.5 1.5\\n\") == \"2.25\""
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\nABCDEF\\n1\\nabc\\n2\\nxyz\\n4\\ny\\n5\\nxy\\n7\\n') == '6.00'\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nID         MARKS      CLASS      NAME\n1          97         12         Raymond\n2          50         12         Euan\n3          91         10         Aaron\n4          72         10         Sam\n''') == \"82.05\"\nassert solution('''\n5\nMARKS      CLASS      NAME       ID\n91         12         Aaron      1\n72         10         Sam       2\n88         74         Ariel      3\n83         66         Brianna   4\n''') == \"91.66\"\n\n=====Explaination=====\nFirst, we read in the number of students as \"N\".\nThen we read in the names of the columns as \"ID,MARKS,CLASS,NAME\".\nWe convert the values in ID,MARKS,CLASS and NAME to integers and store them in a list.\n\nIn the next N lines, we read in the marks and store them in a list.\n\nFinally, we calculate the average marks of the list using the sum of all marks divided by the number of students.\n\n============================\n''')"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n    ID         MARKS     NAME      CLASS\n    1          94         Raymond    7\n    2          97         Asha        8\n    3          91         Adrian      9\n    4          72         Stewart    10\n    5          80         Peter      10\n    6          91         Andy       10\n    7          76         Peter      7\n    8          80         Stewart    9''') == \"81.00\"\n\nThe average of the list : 92.16\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 2 3\\n4 5 6\\n\") == \"2.00\"\nassert solution(\"1\\n1 1\\n4 5\\n\") == \"2.00\"\nassert solution(\"1\\n1 1\\n4 5\\n\") == \"2.00\"\n\n=====Sample Input & Output=====\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nId,Marks,Class,Name\\n1,2,1,John\\n2,3,2,Bob\\n3,4,3,Steve\\n4,5,4,Sam\\n5,6,3,Pam') == '3.66'"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Weird'\nassert solution('6') == 'Not Weird'\nassert solution('21') == 'Weird'\nassert solution('25') == 'Weird'\nassert solution('26') == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\n=====Sample Input=====\n20\n>>>>>>> Stashed changes"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"6\") == \"Weird\"\nassert solution(\"21\") == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('33') == 'Not Weird'\nassert solution('66') == 'Not Weird'\nassert solution('101') == 'Not Weird'\nassert solution('5') == 'Weird'\nassert solution('5') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('3') == 'Not Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Weird'"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Not Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\nassert solution('6') == 'Weird'\nassert solution('10') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"Weird\"\nassert solution('6') == \"Not Weird\"\nassert solution('10') == \"Weird\"\nassert solution('11') == \"Not Weird\"\nassert solution('13') == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1234) == \"Not Weird\", \"You are wrong\"\nassert solution(2) == \"Weird\", \"You are wrong\"\nassert solution(3) == \"Weird\", \"You are wrong\"\nassert solution(1) == \"Not Weird\", \"You are wrong\"\nassert solution(11) == \"Weird\", \"You are wrong\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('<head><title>A</title><title>B</title></head>') == 2\nassert solution('<head><title>A</title><title>A</title></head>') == 2\nassert solution('<head><title>A</title><title>B</title><title>C</title></head>') == 3\nassert solution('<head><title>A</title><title>B</title><title>C</title></head>') == 2\nassert solution('<head><title>A</title><title>B</title><title>C</title><title>D</title></head>') == 4\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"<feed xml:lang='en'>\\n\"\n    \"<title>HackerRank</title>\\n\"\n    \"<subtitle lang='en'>Programming challenges</subtitle>\\n\"\n    \"<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n\"\n    \"</feed>\\n\") == \"3\"\n\n=====Input Example=====\n2\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n</feed>\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n</feed>\n\n=====Output Example=====\n4\n>>>\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n<a a=\"a\" b=\"b\" c=\"c\"/>\\n<d a=\"a\" d=\"d\" e=\"e\"/>') == '4', \"Wrong answer\"\nassert solution('6\\n<a a=\"a\" b=\"b\" c=\"c\"/>\\n<d a=\"a\" d=\"d\" e=\"e\"/>\\n<f a=\"a\" f=\"f\" g=\"g\" h=\"h\"/>') == '7', \"Wrong answer\""
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"<feed><title>How are you?</title><subtitle>Wow!</subtitle></feed>\") == 10, \"Should be 10\"\nassert solution(\"<feed><title>How are you?</title><subtitle>Wow!</subtitle><title>How are you?</title><subtitle>Wow!</subtitle></feed>\") == 20, \"Should be 20\"\nassert solution(\"<feed><title>How are you?</title><subtitle>Wow!</subtitle></feed><title>How are you?</title><subtitle>Wow!</subtitle>\") == 10, \"Should be 10\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n    <title>Some XML</title>\n    <subtitle>Some XML subtitle</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"http://example.com/\"/>\n    <updated>2013-11-09T09:00:00Z</updated>\n    <id>http://www.w3.org/2005/Atom/text/feed/</id>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"http://example.com/\"/>\n    <title>Some XML</title>\n</feed>\n''') == '6'\n'''"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n<greeting>Hello!</greeting>\\n<greeting>Hi!</greeting>\") == \"5\"\nassert solution(\"3\\n<greeting>Hello!</greeting>\\n<greeting>Hi!</greeting>\\n<greeting>Bye!</greeting>\") == \"9\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    <feed xml:lang='en'>\n      <title>XML Developer's Guide</title>\n      <subtitle lang='en'>Tutorial Series</subtitle>\n      <link rel='alternate' type='text/html' href='http://www.tutorialspoint.com/xml/'/>\n      <updated>2003-05-06T10:12:14</updated>\n    </feed>\n    \"\"\"\n) == \"73\"\n\"\"\"\nOutput\n73\n\"\"\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of basic XML tags</subtitle>\n<link rel='alternate' href='http://www.xml.com/xml-tutorials/'/>\n<updated>2013-09-25</updated>\n</feed>''') == '74'\n=====Test Cases=====\nInput 1:\n\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of basic XML tags</subtitle>\n<link rel='alternate' href='http://www.xml.com/xml-tutorials/'/>\n<updated>2013-09-25</updated>\n</feed>\n\nOutput 1:\n\n74\n\nInput 2:\n\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of basic XML tags</subtitle>\n</feed>\n\nOutput 2:\n\n0\n\n'''\n)\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of basic XML tags</subtitle>\n</feed>''') == '0'\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n<a></a>\n<b></b>\n''') == '2'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank.com presents Hackerrank!</title>\n  <subtitle lang='en'>We are introducing you to the APIs!</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n</feed>\n''') == '2'\nassert solution('''\n<greeting>\n  <am>1</am>\n  <pm>2</pm>\n</greeting>\n''') == '5'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank.com presents Hackerrank!</title>\n  <subtitle lang='en'>We are introducing you to the APIs!</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n</feed>\n''') == '5'\n=====Solution Solution=====\n\nimport xml.etree.ElementTree as ET"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 4\") == \"45\"\nassert solution(\"3 4 5 6\") == \"60.0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 0 1') == '0'\nassert solution('0 0 1 1') == '90'\nassert solution('2.1 0.5 1.1') == '0.0'\n=====Test cases=====\nInput:\n\n1 1 0 1\n1 0 1 1\n2.1 0.5 1.1\n\nOutput:\n\n0\n90\n0.0\n\nsolution('1 1 0 1') == '0'\nsolution('0 0 1 1') == '90'\nsolution('2.1 0.5 1.1') == '0.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0 0 2 0\n1 0 1 0\n3 0 3 0\n4 0 4 0''') == \"60\"\n'''"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 3') == '47.38671875', '1 1 2 3'\nassert solution('2 2 -1 1') == '61.26171875', '2 2 -1 1'\n=====Explanation=====\nFor the given inputs :\n\nX: 2, Y: 1, Z: -3\n\nThe cross product of vectors AB and BC is -2. Hence, it is equal to 0.\n\nX: 2, Y: -1, Z: -3\n\nThe cross product of vectors BC and CD is -3. Hence, it is equal to -3.\n\nSince X.Y is equal to 2.0. Hence, the angle will be 47.38671875 degrees.\n\nX: 1, Y: 2, Z: 1\n\nThe cross product of vectors AB and BC is 1. Hence, it is equal to 1.\n\nX: 1, Y: -2, Z: 1\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: -1, Z: 3\n\nThe cross product of vectors BC and CD is -2. Hence, it is equal to -2.\n\nX: -1, Y: -1, Z: 1\n\nThe cross product of vectors BC and CD is 1. Hence, it is equal to 1.\n\nSince X.Y is equal to -2.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 3, Y: 1, Z: 2\n\nThe cross product of vectors BC and CD is 2. Hence, it is equal to 2.\n\nX: 1, Y: 1, Z: 2\n\nThe cross product of vectors BC and CD is 2. Hence, it is equal to 2.\n\nSince X.Y is equal to 2.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 1, Y: -1, Z: 2\n\nThe cross product of vectors BC and CD is 1. Hence, it is equal to 1.\n\nX: -1, Y: 1, Z: 2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 1, Y: 1, Z: -2\n\nThe cross product of vectors BC and CD is 1. Hence, it is equal to 1.\n\nX: -1, Y: 1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -1, Y: -1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nX: -2, Y: -1, Z: -2\n\nThe cross product of vectors BC and CD is -2. Hence, it is equal to -2.\n\nSince X.Y is equal to -1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 2, Y: 1, Z: -3\n\nThe cross product of vectors AB and BC is -2. Hence, it is equal to -2.\n\nX: 1, Y: 1, Z: -3\n\nThe cross product of vectors BC and CD is -3. Hence, it is equal to -3.\n\nSince X.Y is equal to -2.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 1, Y: -1, Z: -3\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nX: -1, Y: -1, Z: -3\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to -2.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 1, Y: 1, Z: 2\n\nThe cross product of vectors AB and BC is 1. Hence, it is equal to 1.\n\nX: -1, Y: 1, Z: 2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: 1, Y: -1, Z: 2\n\nThe cross product of vectors AB and BC is 1. Hence, it is equal to 1.\n\nX: -1, Y: -1, Z: 2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -1, Y: 1, Z: -2\n\nThe cross product of vectors AB and BC is -1. Hence, it is equal to -1.\n\nX: 1, Y: 1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: -1, Z: -2\n\nThe cross product of vectors BC and CD is -2. Hence, it is equal to -2.\n\nX: -1, Y: -1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to -1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: 1, Z: 1\n\nThe cross product of vectors AB and BC is -2. Hence, it is equal to -2.\n\nX: 1, Y: 1, Z: 1\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: -1, Z: 1\n\nThe cross product of vectors AB and BC is -1. Hence, it is equal to -1.\n\nX: 1, Y: -1, Z: 1\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: 1, Z: -2\n\nThe cross product of vectors AB and BC is -1. Hence, it is equal to -1.\n\nX: 1, Y: 1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -2, Y: -1, Z: -2\n\nThe cross product of vectors AB and BC is -1. Hence, it is equal to -1.\n\nX: 1, Y: -1, Z: -2\n\nThe cross product of vectors BC and CD is -1. Hence, it is equal to -1.\n\nSince X.Y is equal to 1.0. Hence, the angle will be 61.26171875 degrees.\n\nX: -1, Y: -1, Z: 1\n\nThe cross product of vectors AB and BC is -1. Hence, it is equal to -1.\n\nX: 1, Y: -1, Z: 1"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.0 1.0 1.0 1.0\") == \"90.0\"\n\n=====Sample Test Case=====\nInput\n\nOutput\n\nOutput the angle correct up to two decimal places.\n>>>>>>> Stashed changes\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 6 6 -6\") == \"60.0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1. 1. 2. 2. 4. 3.\") == \"60.41\"\n\nSample Input 0\n\n0.3 0.4 0.7\n0.2 0.5 0.9\n0.2 0.3 1.\n0.3 0.2 0.4\n0.4 0.2 0.5\n0.5 0.2 0.3\n=====Explanation=====\nPHI = 45.41\n=====Solution=====\nstdin = input()\nA, B, C, D = stdin.split()\nx1, y1, z1 = float(A), float(B), float(C)\nx2, y2, z2 = float(D), float(B), float(C)\ncos1 = (x1 * y2) / (math.sqrt(pow(x1, 2) + pow(y1, 2)))\ncos2 = (y1 * z2) / (math.sqrt(pow(y1, 2) + pow(z1, 2)))\ncos3 = (x2 * z2) / (math.sqrt(pow(x2, 2) + pow(z1, 2)))\n\nresult = math.degrees(math.acos(cos1)) + math.degrees(math.acos(cos2)) + math.degrees(math.acos(cos3))\nprint(f\"{result:.2f}\")\n\n\"\"\""
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 4 5\") == '60.39332768754237'\nassert solution(\"1 2 3 3\") == '60.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4.8 3.4 9.5 1.2\") == '0.47'\nassert solution(\"6.7 3.9 3.3 4.3\") == '0.42'\nassert solution(\"-1.2 -0.1 0.1 -1.0\") == '0.44'\n\n=================================\n\nimport math"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '30.00'\nassert solution('-1 2 3 4') == '60.00'\nassert solution('2 2 -1') == '60.00'\n=====Testing Area=====\n\n=====Solution=====\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nab a\\nef a\\nno e\\n\\n\") == \"5\"\n\nSample Test:\nInput\n6\nab a\nef a\nno e\ny u\nzz z\n\nOutput\n5\n\"\"\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\ne\\ni\\no\\ny\\n\") == 6, \"First Example\"\nassert solution(\"1\\nhello\\nworld\\n\") == 3, \"Second Example\"\nassert solution(\"2\\nhie\\nbye\\n\") == 2, \"Third Example\"\n\nassert solution(\"5\\n3.14 15 3.4 3.0\\n0.1 0.2 0.3\\n\") == 13, \"Example Test Case\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 3\n\n\"\"\""
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\na ab abc a') == 2\nassert solution('2\\na ab abc a') == 1\nassert solution('3\\na ab abc a') == 1\nassert solution('4\\nab ab abc a') == 1\nassert solution('5\\nabc ab abc a') == 1\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['eavesdropper', 'parrot', 'apples','snakes', 'aardvark']) == 5\n\n=====Sample Input/Output 1=====\nInput\n\n3\neavesdropper apples parrot apples ea\nOutput\n\n1\nExplanation\nThe score of the word \"eavesdropper\" is 3 because it contains an even number of vowels (3).\nThe score of the word \"parrot\" is 1 because it contains 1 vowel (e).\nThe score of the word \"apples\" is 5 because it contains 2 vowels (aa and ee) and 1 consonant (p).\nThe score of the word \"snakes\" is 3 because it contains 3 vowels (ss, nn and tt) and 1 consonant (a).\nThe score of the word \"aardvark\" is 5 because it contains 4 vowels (aar, aaa, aad, aan and aar) and 5 consonants (ard, ddd, dda, dda, ard).\n\n=====Sample Input/Output 2=====\nInput\n\n3\neavesdropper apples parrot apples ea\nOutput\n\n1\nExplanation\nThe score of the word \"eavesdropper\" is 3 because it contains an even number of vowels (3).\nThe score of the word \"parrot\" is 1 because it contains 1 vowel (e).\nThe score of the word \"apples\" is 5 because it contains 2 vowels (aa and ee) and 1 consonant (p).\nThe score of the word \"snakes\" is 3 because it contains 3 vowels (ss, nn and tt) and 1 consonant (a).\nThe score of the word \"aardvark\" is 5 because it contains 4 vowels (aar, aaa, aad, aan and aar) and 5 consonants (ard, ddd, dda, dda, ard).\n\n=====Sample Input/Output 3=====\nInput\n\n2\neavesdropper parrot\nOutput\n\n0\nExplanation\nThe score of the word \"eavesdropper\" is 0 because it contains an even number of vowels (0).\nThe score of the word \"parrot\" is 0 because it contains an even number of vowels (0).\n\n=====Sample Input/Output 4=====\nInput\n\n5\nairport\nbus\nrainbow\ntiger\neavesdropper\nOutput\n\n2\nExplanation\nThe score of the word \"airport\" is 2 because it contains an even number of vowels (2).\nThe score of the word \"bus\" is 2 because it contains an even number of vowels (2).\nThe score of the word \"rainbow\" is 3 because it contains an even number of vowels (2).\nThe score of the word \"tiger\" is 3 because it contains an even number of vowels (2).\nThe score of the word \"eavesdropper\" is 5 because it contains an even number of vowels (2).\n'''"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n\n=====Sample TestCase 1=====\nSample Input 1:\n3\nbc def ghi jkl mno pqrs tu vwxy\nSample Output 1:\n2\n\nSample Test Case 2:\nSample Input 2:\n3\nab cd\nSample Output 2:\n1\n\nSample Test Case 3:\nSample Input 3:\n4\npppl pp\nSample Output 3:\n1\n'''\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\ncan you\ncan i\"\"\") == \"4\"\n\n=====Sample Input and Output=====\nThe template code reads the input from stdin and passes it to the function solution. It then prints the returned value to stdout. In the above sample, the template code reads the input from stdin and calls the solution function and prints the returned value to stdout. The template code prints the following output:\n\n=====Submission Test=====\nThe template code first tests the submission with the locked code template. It should print:\n\n=====Output=====\n4\n\n\"\"\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"2 2 3 4\") == \"4\"\nassert solution(\"2 2 3 4 5\") == \"5\"\nassert solution(\"5 5 3 2\") == \"4\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nfoo bar') == 2\nassert solution('1\\na') == 1\nassert solution('2\\na b') == 2\nassert solution('3\\na') == 1\nassert solution('2\\na b') == 2\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 a 1\") == \"1\", \"Should be 1\"\nassert solution(\"5 4 abcdef\") == \"2\", \"Should be 2\"\n=====Sample Input=====\n8\nisland\nallen\nalbert\nally\nbarry\nbrandon\nbradford\nbruce\n\n=====Sample Output=====\n4\n\n>>>>>>> Stashed changes\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('M') == True\nassert solution('D') == False\nassert solution('C') == False\nassert solution('X') == False\nassert solution('L') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('MCMXCIX') == True\nassert solution('III') == True\nassert solution('IV') == False\nassert solution('LVIII') == False\nassert solution('MCMXCIV') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"MDCCL\"\n    ) == True\nassert solution(\n    \"III\"\n    ) == False\nassert solution(\n    \"MMMMMCCCC\"\n    ) == False\nassert solution(\n    \"MMMMMCDXLIII\"\n    ) == True\nassert solution(\n    \"MMMDCCC\"\n    ) == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"X\") == True\nassert solution(\"V\") == True\nassert solution(\"III\") == True\nassert solution(\"VI\") == True\nassert solution(\"IX\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('MCMXCIX') == True\nassert solution('CDXCIX') == False\nassert solution('MMMCMXCIX') == True\nassert solution('MMMMCMXCIX') == False\nassert solution('MMMCCCCXIII') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"X\") == True\nassert solution(\"V\") == False\nassert solution(\"III\") == True\nassert solution(\"IV\") == False\n=====Sample Input=====\nX\n\nSample Output\n\nTrue\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"X\") == True\nassert solution(\"V\") == False\nassert solution(\"C\") == False\nassert solution(\"I\") == True\nassert solution(\"MMMCMXCIX\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"MCMXCIX\") == \"True\"\nassert solution(\"C\") == \"False\"\nassert solution(\"XIV\") == \"False\"\nassert solution(\"III\") == \"True\"\nassert solution(\"XX\") == \"True\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('III') == True\nassert solution('IV') == False\nassert solution('MMMCMXCIX') == True\nassert solution('MMMCMXCIXI') == False\nassert solution('MMMCMXCIX') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"XI\") == True\nassert solution(\"X\") == False\nassert solution(\"IX\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MMMCMXCIX\") == False\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '+91 xxxxx xxxxx\\n'\nassert solution(input) == '+91 xxxxx xxxxx\\n'\nassert solution(input) == '+91 xxxxx xxxxx\\n'\nassert solution(input) == '+91 xxxxx xxxxx\\n'\nassert solution(input) == '+91 xxxxx xxxxx\\n'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n+91 974363621\n+91 917945678\n+91 9876369876''') == '''+91 974363621\n+91 917945678\n+91 9876369876''', 'incorrect output'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == ''\nassert solution(\"7977482774\") == \"+91 7977482774\"\nassert solution(\"7977482774 7882748273\") == \"+91 7977482774 7882748273\"\n=====Constraints=====\n1 <= N <= 10^5\n\n1 <= len(mobile) <= 10^5\n\n=====Sample Input and Output=====\nSample Input 1\n\n3\n7977482774\n7977482774 7882748273\n+91 7977482774\n\nSample Output 1\n\n+91 7977482774\n+91 7977482774 7882748273\n\nSample Input 2\n\n2\n7977482774\n7977482774\n+91 7977482774\n\nSample Output 2\n\n+91 7977482774\n+91 7977482774\n\nSample Input 3\n\n3\n7977482774\n7977482774 7882748273\n7977482774\n\nSample Output 3\n\n+91 7977482774\n+91 7977482774 7882748273\n+91 7977482774\n'''\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '+91 9999999999'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1\\n\"\n    \"9528213095\\n\"\n    \"95528213095\\n\"\n) == \"1+9528213095+95528213095\\n\"\nassert solution(\n    \"3\\n\"\n    \"12345\\n\"\n    \"12345\\n\"\n    \"12345\"\n) == \"1+12345+12345+12345\\n\"\n\n
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12\\n+91 987 6543210\\n+91 9876543210\\n+91 987654321\\n+91 987654321') == '+91 9876543210\\n+91 987654321\\n+91 987654321'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n9112345678\\n9112345678\\n9112345678\\n9112345678') == '+91 9112345678\\n9112345678\\n9112345678\\n9112345678\\n'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"+91 99999 999999\"\n\nIf there is no mobile phone numbers, print \"No Number\".\nIf there is only one mobile phone number, print \"+91 xxxxx xxxxx\" where xxxx is the mobile number.\nInput Format\nFirst line contains an integer N.\nN lines follow each containing a mobile number.\nConstraints\n1 \u2264 N \u2264 100\nOutput Format\nPrint N mobile numbers on separate lines in the required format.\nNote:\nIn the first line, print \"No Number\" if there is no mobile phone numbers.\nIn the second line, print \"+91 xxxxx xxxxx\" where xxxx is the mobile number.\n=====Test Cases=====\nTest Case 1\nInput\n3\n987654321\n987654321\n987654321\nOutput\n+91 9876543210\n+91 9876543210\nNo Number\nTest Case 2\nInput\n1\n987654321\nOutput\nNo Number\nTest Case 3\nInput\n2\n987654321\n987654321\nOutput\n+91 9876543210\n+91 9876543210\nTest Case 4\nInput\n10\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n987654321\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n+91 9394738642\n+91 939479734\n+91 9431302948\n+91 938377376\n+91 9394738642''') == '+91 9394738642\\n+91 939479734\\n+91 9431302948\\n+91 938377376\\n+91 9394738642'\n\n'''\n\n\nfrom collections import Counter"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n901234567\\n9384949387\\n938494962\\n9876543210') == '+91 9012345678\\n+91 9384949387\\n+91 9876\\n+91 9876543210'\nprint(solution('4\\n901234567\\n9384949387\\n938494962\\n9876543210'))"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nalpha 100\\nbeta 75\\nalpha\\ngamma 90\\nalpha\\n') == '90.00'\nassert solution('5\\nalpha 100\\nbeta 75\\ngamma\\nalpha\\n') == '100.00'\nassert solution('2\\nalpha 100\\nbeta 75\\n') == '100.00'\n'''\n\nn = int(input())\n\nmarks_dict = {}\n\nfor i in range(n):\n    name, *marks = input().split(' ')\n    marks = list(map(float, marks))\n    marks_dict[name] = marks\n\nquery_name = input()\nprint(f'{sum(marks_dict[query_name])/len(marks_dict[query_name]):.2f}')\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nalpha 20.0\\nbeta 30.0\\nalpha') == \"50.0\"\nassert solution('3\\nalpha 100.0\\nbeta 70.0\\nalpha\\n') == \"80.0\"\nassert solution('2\\nx y\\nz') == \"x y z\"\n'''\n\nn=int(input())\nmy_dict={}\nfor i in range(n):\n    name,marks=input().split()\n    my_dict[name]=marks\nquery_name=input()\naverage_sum=0\nfor j in my_dict.keys():\n    if j==query_name:\n        average_sum=average_sum+float(my_dict[j])\nprint(average_sum/3)\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nalpha 100\\nbeta 90\\ngamma 80\\ndelta 75\\nquery_name beta\\n\") == \"50.0\"\nassert solution(\"1\\na 100\\nb 100\\nc 100\\n\") == \"100.0\""
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nalpha 100\\nbeta 90\\nalpha 60\\n') == '50.0'\nassert solution('4\\nalpha 100\\nbeta 90\\nalpha 60\\nquery_name') == 'query_name'\nassert solution('4\\na\\nb\\nc\\n') == 'invalid input'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\") == \"50.0\"\nprint(solution(\"3\\nalpha 100\\nbeta 50\\nalpha\"))\n\nhttps://www.hackerrank.com/challenges/ctci-bubble-sort/problem\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nbeta:20 30 40\\nalpha:30 50 60\\nbeta:10 20 30\\nbeta') == \"50.0\"\nassert solution('2\\nbeta:20 30 40\\nalpha:30 50 60\\n') == \"30.0\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nalpha 100\\nbeta 90\\nalpha 60\\nalpha 70\\n\") == \"60.00\"\nassert solution(\"1\\nbeta 100\\n\") == \"100.00\"\nassert solution(\"1\\nbeta 100\\nalpha 100\\n\") == \"100.00\"\n'''\n\nimport statistics"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\nalpha\\n') == '50.0'\nassert solution('3\\nbeta 100\\nalpha 50\\nalpha\\n') == '50.0'\n=====Submission=====\n\nThe code stub provided is a starting point. You will need to implement the solution and \ntest it with the provided test cases.\n\nTest cases.\n'''\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nalpha 100\\nbeta 90\\nalpha\\nbeta\\nalpha\") == '50.0'\n\"\"\"\n\nn = int(input())\nmarks = {}\nfor i in range(0,n):\n    name, *marks_of_a_student = input().split()\n    marks[name] = marks_of_a_student\nquery_name = input()\n\nprint(sum(list(map(int,list(marks[query_name])))/3) )\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\") == \"50.0\"\nassert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\") == \"50.0\"\n\n=====Test Case 2=====\nThe provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.\n\n=====Example=====\nmarks key:value pairs are\n'alpha': [20,30,40]\n'beta': [30,50,70]\nquery_name = 'beta'\nThe query_name is 'beta'. beta's average score is (30+50+70)/3 = 50\n\n=====Input Format=====\nThe first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.\n\n=====Constraints=====\n2\u2264n\u226410\n0\u2264marks[i]\u2264100\nlength of marks arrays = 3\n\n=====Output Format=====\nPrint one line: The average of the marks obtained by the particular student correct to 2 decimal places.\n\n=====Test Case 3=====\nThe provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.\n\n=====Example=====\nmarks key:value pairs are\n'alpha': [20,30,40]\n'beta': [30,50,70]\nquery_name = 'alpha'\nThe query_name is 'alpha'. alpha's average score is (20+30+40)/3 = 30\n\n=====Input Format=====\nThe first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.\n\n=====Constraints=====\n2\u2264n\u226410\n0\u2264marks[i]\u2264100\nlength of marks arrays = 3\n\n=====Output Format=====\nPrint one line: The average of the marks obtained by the particular student correct to 2 decimal places.\n\n=====Test Case 4=====\nThe provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.\n\n=====Example=====\nmarks key:value pairs are\n'alpha': [20,30,40]\n'beta': [30,50,70]\nquery_name = 'beta'\nThe query_name is 'beta'. beta's average score is (30+50+70)/3 = 50\n\n=====Input Format=====\nThe first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.\n\n=====Constraints=====\n2\u2264n\u226410\n0\u2264marks[i]\u2264100\nlength of marks arrays = 3\n\n=====Output Format=====\nPrint one line: The average of the marks obtained by the particular student correct to 2 decimal places.\n\n=====Test Case 5=====\nThe provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.\n\n=====Example=====\nmarks key:value pairs are\n'alpha': [20,30,40]\n'beta': [30,50,70]\nquery_name = 'alpha'\nThe query_name is 'alpha'. alpha's average score is (20+30+40)/3 = 20.0\n\n=====Input Format=====\nThe first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.\n\n=====Constraints=====\n2\u2264n\u226410\n0\u2264marks[i]\u2264100\nlength of marks arrays = 3\n\n=====Output Format=====\nPrint one line: The average of the marks obtained by the particular student correct to 2 decimal places.\n\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nMartha George\n20\nF\n\n2\nJohn Milton\n19\nM\n\n3\nHenry David\n22\nM\n\n4\nMaria George\n21\nF\n\n5\nDavid George\n19\nM\n\n6\nPaul George\n18\nF\n\n7\nNayara George\n18\nM\n\n8\nGiovanni George\n18\nM\n\n9\nMary George\n19\nM\n\n10\nJonathan George\n18\nM''') == '''Mr. Henry Davids\nMs. Mary George\nMs. John Milton\nMs. Maria George\nMs. Paul George\nMs. Giovanni George\nMs. Giorgio George\nMs. Hayley George\nMs. Nayara George\nMs. Giovanni George\nMs. David George\nMs. Noel George\nMs. Giuseppe George\nMs. Mario George'''"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\nSmith\nYonder\nSue\nSara\n''') == '''Sue Sara\nSara Sue\nSara Yonder\nSara Smith'''\n\nassert solution('''5\nDavids\nPeter\nPaul\nStephen\nJohn\n''') == '''Stephen John Peter Paul Davids'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nMike Thomson 20 M\nJohn Hopkins 20 F''') == '''Mr. Mike Thomson\nMs. John Hopkins'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nJohn George\n28\nM\n\n2\nMark Zuckerberg\n31\nM\n\n3\nJohn Elvis\n29\nM\n\n4\nPaul Benjamin\n29\nM\n\n5\nJohn Marvin\n25\nM\n''') == '''\nMs. Mark Zuckerberg\nMs. John Elvis\nMs. Paul Benjamin\nMs. John Marvin\n'''\n\n===========================================\nINPUT:\n2\nJohn George\n28\nM\n\n2\nMark Zuckerberg\n31\nM\n\n3\nJohn Elvis\n29\nM\n\n4\nPaul Benjamin\n29\nM\n\n5\nJohn Marvin\n25\nM\n\nOUTPUT:\nMs. Mark Zuckerberg\nMs. John Elvis\nMs. Paul Benjamin\nMs. John Marvin\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nMarry\\n13\\nF\") == \"Ms. Marry\\n\"\nassert solution(\"2\\nDiana\\n17\\nF\") == \"Ms. Diana\\n\"\nassert solution(\"3\\nAlbert\\n17\\nM\") == \"Mr. Albert\\n\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nBaijiahao\\t10\\tF\\nFranklin\\t20\\tM\\n') == 'Baijiahao Franklin'\nassert solution('1\\nHenry\\t20\\tM\\n') == 'Henry Henry'\nassert solution('1\\nHenry\\t20\\tM\\n') == 'Henry Henry'"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nMarry Sim, 28\nJohn Simon, 29\nKaren Bacon, 27\nNancy Warren, 30\nMary George''') == '''Ms. Mary George\nMr. Henry Davids'''\nassert solution('''5\nMarry Sim, 28\nJohn Simon, 29\nKaren Bacon, 27\nNancy Warren, 30\nMary George\nAndrew W''') == '''Ms. Mary George\nMs. Andrew W'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMarry Sim\\n18\\nF\") == \"Ms. Mary Sim\\nMr. Henry Sim\"\n=====Submission=====\nInput:\n1\nMarry Sim\n18\nF\n\nOutput:\nMs. Mary Sim\nMr. Henry Sim\n\n=================\n\n1. firstName = []\n2. lastName = []\n3. age = []\n4. sex = []\n\n=====Solution=====\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nBart Bart Bart\\nLisa Lisa Lisa\\nDSDS 1\\nDSDS 1\\nDSDS 1\\nDSDS 1\") == \"Bart\\nLisa\\nDSDS\\nDSDS\"\n\nassert solution(\"1\\nBart Bart Bart\\nLisa Lisa Lisa\\nDSDS 1\\nDSDS 1\\nDSDS 1\\nDSDS 1\") == \"Bart\\nDSDS\\nDSDS\\nDSDS\"\n\nassert solution(\"1\\nDSDS 1\\nDSDS 1\\nDSDS 1\\nDSDS 1\") == \"DSDS\\nDSDS\\nDSDS\\nDSDS\"\n\nassert solution(\"2\\nDSDS 1\\nDSDS 1\\nDSDS 1\\nDSDS 1\") == \"DSDS\\nDSDS\\nDSDS\\nDSDS\"\n\nassert solution(\"2\\nDSDS 1\\nDSDS 1\\nDSDS 1\\nDSDS 1\") == \"DSDS\\nDSDS\\nDSDS\\nDSDS\""
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nMarry Jane\nJohn Peter\nLinda Smith\nLily David\n''') == '''Marry Jane\nJohn Peter\nLinda Smith\nLily David''', f\"expected '{solution('4')}', received '{solution('4')}'\"\nassert solution('''7\nHarry Potter\nJ.K.Rowling\nLennon, John\nMarkus\nLynn\nMichael\nElizabeth''') == '''Harry Potter\nJ.K.Rowling\nMarkus\nLynn\nMichael\nElizabeth''', f\"expected '{solution('7')}', received '{solution('7')}'\"\n\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution(\"1 1 1 3\") == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\n=====Output Format=====\nPrint an array of the elements that do not sum to n = 3\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\nSample Input\n4 1 6 3\n5\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n'''"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2,2,2,2]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([1,1,1,1]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([3,3,3,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution([5,5,5,5]) == []\n\n\n\"\"\""
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 1, 2, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([2, 2, 2, 1]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([2, 2, 2, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n===Output===\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n[[2, 2, 2], [2, 2, 1], [2, 1, 2], [2, 1, 1], [1, 2, 2], [1, 2, 1], [1, 1, 2], [1, 1, 1]]\n[[2, 2, 2], [2, 2, 1], [2, 1, 2], [2, 1, 1], [1, 2, 2], [1, 2, 1], [1, 1, 2], [1, 1, 1]]\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 1, 1, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\n=====Test Case 1=====\nSample Input 0\n\nSample Output 0\n\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n\n=====Test Case 2=====\nSample Input 1\n\nSample Output 1\n\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n\n=====Test Case 3=====\nSample Input 2\n\nSample Output 2\n\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n\n=====Test Case 4=====\nSample Input 3\n\nSample Output 3\n\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n\n\n>>>>>>> Stashed changes\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1]]\n\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1]]\n\n'''"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nprint(solution([1, 1, 2, 3]))\n\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nprint(solution([1, 1, 2, 3]))\n\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nprint(solution([1, 1, 2, 3]))\n\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nprint(solution([1, 1, 2, 3]))\n\n=======Output========\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n[0, 0, 0, 1, 0, 1, 2, 1, 3]\n\n=================================================================================\nclass Solution(object):\n    def all_permutations(self, nums):\n        def recur(nums, idx, path):\n            if idx == len(nums):\n                res.append(path)\n                return\n\n            recur(nums, idx+1, path)\n            recur(nums, idx+1, path+[nums[idx]])\n\n        res = []\n        recur(nums, 0, [])\n        return res\n\n    def all_permutations(self, nums):\n        res = []\n\n        def helper(nums, idx, path):\n            if idx == len(nums):\n                res.append(path)\n                return\n\n            for i in range(idx, len(nums)):\n                helper(nums, idx+1, path+[nums[i]])\n\n        helper(nums, 0, [])\n        return res\n\n    def all_permutations(self, nums):\n        res = []\n        n = len(nums)\n        visited = set()\n\n        def helper(idx, path):\n            if idx == n:\n                res.append(path)\n                return\n\n            for i in range(n):\n                if i not in visited:\n                    visited.add(i)\n                    helper(idx+1, path+[nums[i]])\n                    visited.remove(i)\n\n        helper(0, [])\n        return res\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 1, 1, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([2, 2, 3, 4]) == [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1], [0, 1, 0], [0, 1, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([5, 5, 5, 7]) == [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1], [0, 1, 0], [0, 1, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([6, 6, 6, 8]) == [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1], [0, 1, 0], [0, 1, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([3, 3, 3, 5]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.3+0.2i') == '0.3-0.2i', \"Wrong answer\"\nassert solution('1+2i') == '1.00-2.00i', \"Wrong answer\"\nassert solution('1.1+2.2i') == '1.11-2.21i', \"Wrong answer\"\nassert solution('1+2i') == '1.00-2.00i', \"Wrong answer\"\n=====Test Case Example=====\nInput:\n2.3+3.7i\n4.1+2.2i\nOutput:\n2.3-3.7i\n4.1-2.2i\n4.1+2.2i\n6.30i\n4.1+2.2i\nOutput:\n4.1-2.2i\n4.1+2.2i\n4.1-2.2i\n4.1+2.2i\n4.1-2.2i\nOutput:\n-1.00+0.00i\n-4.00+0.00i\n-4.00+0.00i\n-4.00+0.00i\n-4.00+0.00i\n=====Explaination=====\nGiven two complex numbers A and B, the output should be in the following sequence on separate lines:\nC+D\nC-D\nC*D\nC/D\nmod(C)\nmod(D)\n\nFor two complex numbers C and D, the output should be in the following sequence on separate lines:\nC+D\nC-D\nC*D\nC/D\nmod(C)\nmod(D)\n\nFor complex numbers with non-zero real (A) and complex part (B), the output should be in the following format:\nReplace the plus symbol (+) with a minus symbol (-) when B<0.\nFor complex numbers with a zero complex part i.e. real numbers, the output should be:\nA+0.00i\nFor complex numbers where the real part is zero and the complex part is non-zero, the output should be:\n0.00+Bi\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1i\") == \"1+1i\"\nassert solution(\"1 1+i\") == \"1-1i\"\nassert solution(\"1 1+i\") == \"1+1i\"\n=====Explanation=====\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1.00+2.00i'\nassert solution(input()) == '0.00+-3.00i'\nassert solution(input()) == '1.00+-0.00i'\nassert solution(input()) == '0.00+3.00i'\nassert solution(input()) == '0.00+0.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2+3i\") == \"2+3i\"\n=====SAMPLE RUNS=====\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"1-2i\")\n'-1+2i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i\")\n'1+0.00i'\n>>> solution(\"1+0i\")\n'1+0.00i'\n>>> solution(\"1+2i\")\n'1+2i'\n>>> solution(\"2+3i\")\n'2+3i'\n>>> solution(\"4-2i\")\n'-2+4i'\n>>> solution(\"3+5i\")\n'3+5i'\n>>> solution(\"4+6i\")\n'4+6i'\n>>> solution(\"3+4i\")\n'3+4i'\n>>> solution(\"4+3i\")\n'4+3i'\n>>> solution(\"2-2i\")\n'-2-2i'\n>>> solution(\"1+1i\")\n'1+1i'\n>>> solution(\"1i"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0') == '1 0'\nassert solution('1 1') == '2 -1'\nassert solution('1 2') == '2 -2'\nassert solution('-1 0') == '-2 0'\nassert solution('2 2') == '2 2'\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '2.00+0.00i'\nassert solution('-1 -1') == '-2.00+0.00i'\nassert solution('3 1') == '4.00+0.00i'\nassert solution('1 -1') == '2.00+0.00i'\nassert solution('0.0+1.0i') == '0.00+1.00i'\n=====Sample Test Cases=====\nInput\n1 1\nOutput\n2.00+0.00i\nInput\n-1 -1\nOutput\n-2.00+0.00i\nInput\n3 1\nOutput\n4.00+0.00i\nInput\n1 -1\nOutput\n2.00+0.00i\nInput\n0.0+1.0i\nOutput\n0.00+1.00i\n'''\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.1 + 2.2i\") == \"1.1+2.2i\", \"Wrong answer\"\nassert solution(\"-1.1 + -2.2i\") == \"-1.1-2.2i\", \"Wrong answer\"\nassert solution(\"1.1+0.0i\") == \"1.1+0.0i\", \"Wrong answer\"\n=====Test cases=====\nInput\nOutput\nConstraints\n1 <= |Real_part of the complex number| <=100\n0 <= |Imaginary_part of the complex number| <=100\n\n=====Sample input and output=====\nInput\nOutput\nConstraints\n1 <= |Real_part of the complex number| <=100\n0 <= |Imaginary_part of the complex number| <=100\n\n1.1 + 2.2i\n-1.1 + -2.2i\n1.1 + 0.0i\n0.0 + 1.1i\n\n'''"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.5+2.1i') == '1.5+2.1i'\nassert solution('5-2.1i') == '5-2.1i'\nassert solution('5+2i') == '9.0+3.14i'\nassert solution('5.0+2i') == '9.0+2.0i'\nassert solution('5.0-2i') == '9.0-2.0i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2.3+4.5i\") == \"2.3+4.5i\"\nassert solution(\"4.3-2.2i\") == \"4.3-2.2i\"\nassert solution(\"-2.3-2.2i\") == \"-2.3-2.2i\"\nassert solution(\"0.00+0.00i\") == \"0.00+0.00i\"\nassert solution(\"0.00-0.00i\") == \"0.00-0.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0 1.0') == '2.0 -1.0'\nassert solution('1.0 -1.0') == '2.0 +1.0'"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\nassert solution('xyz\\nabc\\nxyz') == 'xaybzcxaybzc'\nassert solution('xyz\\nabc\\nxyz\\nabc') == 'xaybzcxaybzcxaybzc'\nassert solution('xyz\\nabc\\nxyz\\nabc\\nxyz') == 'xaybzcxaybzcxaybzcxaybzcxaybzc'\nassert solution('xyz\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'xaybzcxaybzcxaybzcxaybzcxaybzcxaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'xyz'\n    ) == 'xaybzc'\nassert solution(\n    'abc'\n    ) == 'xaybzc'\nassert solution(\n    'a'\n    ) == 'a'\nassert solution(\n    ''\n    ) == ''"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\""
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\nprint(solution('xyz\\nabc'))\n\n\"\"\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''xyz\nabc''') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nxyz\nabc''') == 'xaybzc'"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"xaybzc\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"01\") == \"00\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00'\nassert solution('B') == ''\nassert solution('1B') == '00'\nassert solution('0B') == '00'"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00'"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n01B0\n''') == '00'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01B0') == '00'\nassert solution('00') == '00'\n\"\"\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('01B0') == '00'\n\"\"\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"01B1\") == \"00\"\nassert solution(\"01B2\") == \"00\"\nassert solution(\"01B3\") == \"00\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\nprint('TEST', solution('01B0'))"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'\nassert solution('01') == '01'\nassert solution('01000') == '00'\nassert solution('00') == '00'\nassert solution('11111') == '11111'"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('01B0') == '00'\nassert solution('01B01') == '01'\nassert solution('01B01B') == '00'\nassert solution('01') == '01'\nassert solution('B0') == '00'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n''') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"5\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\nassert solution(\"8\\n1 1 1 1 1 1 1\\n\") == \"3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"2\"\nassert solution(\"4\\n1 1 1 1 1\\n\") == \"3\"\nassert solution(\"3\\n1 1 1 1\\n\") == \"2\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 3 4 5\\n') == '4'\nassert solution('3\\n1 2 2 3\\n') == '2'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n2 1 5 4 3\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n2 1 5 4 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 2 1\") == \"4\"\nassert solution(\"2\\n2 3 2 1\") == \"2\"\nassert solution(\"3\\n2 3 2 1\") == \"3\"\nassert solution(\"5\\n2 3 2 1\") == \"4\"\nassert solution(\"5\\n1 2 2 1\") == \"4\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1\\n') == '2'\nassert solution('1\\n2 2\\n') == '1'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('3\\n1 2 2\\n') == '1'\nassert solution('4\\n1 1 1 1\\n') == '1'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5,2,1,5,4,3]) == '4'\nassert solution([1,1,1,1,1,1]) == '0'\nassert solution([1,3,4,1,4,4]) == '1'\nassert solution([1,1,1,1,1,1,1]) == '4'\nassert solution([1,1,1,1,1,1,1,1]) == '2'"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\nassert solution('''5\n2 2 3 4 4\n''') == '5'\nassert solution('''5\n2 2 2 3 3\n''') == '5'\nassert solution('''5\n0 0 0 0 0\n''') == '0'\nassert solution('''5\n0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''aca\naccc\nca\n\n''') == 'A'\nassert solution('''ba\nabcb\nca\n\n''') == 'B'\nassert solution('''ab\nabab\ncc\n\n''') == 'C'\nassert solution('''ac\nacbc\nccc\n\n''') == 'A'\nassert solution('''bca\nabcb\nccc\n\n''') == 'B'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\""
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\""
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n\n'''\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''a\na\na''') == 'A'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"3 3 7\") == \"NO\"\nassert solution(\"6 7 9\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"2 2 2\") == \"NO\"\nprint(solution())\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\"\"\"\n\na = input().split()\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\""
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n\"\"\"\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"10 10 7\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"10 10 10\") == \"YES\"\n\nimport re\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"2 3 4\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"2 2 5\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 7') == 'YES'\nassert solution('1 2 3') == 'NO'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"4\"\n\"\"\"\n\nn = int(input())\n\nlucas_list = [2, 1]\n\nfor i in range(2, n + 1):\n    lucas_list.append(lucas_list[i - 1] + lucas_list[i - 2])\n\nprint(lucas_list[n - 1])\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n\n''') == '11'\nassert solution('''1\n\n''') == '2'\nassert solution('''100\n\n''') == '67384560'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '11'\n\"\"\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n') == '11'\nassert solution('10\\n') == '13'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n''') == '4'\nassert solution('''5\n''') == '11'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '3'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '11'\nassert solution('10\\n') == '13'\nassert solution('100\\n') == '252525253'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"11\"\n\"\"\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"55\"\nassert solution(\"15\") == \"725\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"7\""
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '7'\nassert solution('1') == '1'\nassert solution('1000000000') == '1000000000000'\nassert solution('1000000000') == '100000000000000'\n\n\"\"\"\na = int(input())\nb = int(input())\nh = int(input())\n\nprint(a + b + h / 2)\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('2') == '6'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\"\nassert solution(\"3\\n5\\n3\\n\") == \"14\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"6\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n2''') == '7'\nprint('PASSED!')\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4\\n2') == '7'\n\"\"\"\na, b, h = [int(i) for i in stdin.split(\"\\n\")[0].split(\" \")]\nprint((a+b)/2 * h)\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n2\\n') == '7'\nassert solution('2\\n4\\n2\\n') == '10'\nassert solution('4\\n2\\n2\\n') == '8'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nassert solution(\"5\\n2 3 1 4 2\") == \"8\"\nassert solution(\"5\\n1 1 1 1 1\") == \"5\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\") == \"3\""
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '11'\nassert solution('5\\n1 2 3 4 5') == '10'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '42'\nassert solution('50\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '56455773229896215855343378035503552675638398254037660179899814779027551263000504743173988654442942439949144812078567781328379725431540965164865243726987537879888224776522817643626782427662899893645178952713087433737954680342436584716096709316637040402667'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '11', 'Sample Test 1 Failed'\nassert solution('5\\n1 2 3 4 5') == '14', 'Sample Test 2 Failed'\nassert solution('5\\n2 3 4 5 6') == '15', 'Sample Test 3 Failed'\nassert solution('5\\n3 4 5 6 7') == '16', 'Sample Test 4 Failed'\nassert solution('4\\n1 2 3 4') == '0', 'Sample Test 5 Failed'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '11'\nassert solution('''\n3\n1 2 3\n''') == '11'\nassert solution('''\n2\n1 2\n''') == '4'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '108'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nassert solution(\"3\\n1 2 4\") == \"15\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '11'\nassert solution('''\n3\n1 2 3\n''') == '8'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"15\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3\") == \"11\"\nassert solution(\"1 2 3 4\") == \"18\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\""
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"YES\", \"Test 1 Failed\"\nassert solution(\"5 3 2\") == \"NO\", \"Test 2 Failed\"\nassert solution(\"8 6 7\") == \"YES\", \"Test 3 Failed\"\nassert solution(\"4 3 4\") == \"YES\", \"Test 4 Failed\"\nassert solution(\"1 1 2\") == \"NO\", \"Test 5 Failed\""
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 2') == 'YES', 'WA'\nassert solution('1 1 1') == 'NO', 'WA'\nassert solution('5 6 7') == 'NO', 'WA'\n\"\"\"\n\nstdin = input()\na = list(map(int, stdin.split()))\na.sort()\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"r 4\ng 3\nb 2\"\"\") == \"YES\"\nassert solution(\n\"\"\"b 2\nr 3\ng 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"b 2\ng 4\nr 3\"\"\") == \"YES\""
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 3 2') == 'NO'"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"12 2 3\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('5 5 5') == 'NO'\nassert solution('1 1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == \"YES\", \"1 2 3\"\nassert solution('4 5 6') == \"NO\", \"4 5 6\""
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3 2''') == 'YES'\nassert solution('''4 4 5''') == 'NO'\n\"\"\"\n\nr, g, b = map(int, input().split())"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 5 5\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"5 5 2\") == \"NO\"\nassert solution(\"5 4 3\") == \"NO\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"10\"\nassert solution(\"5 3 11\\n3\") == \"9\"\n\nThe expected output is a single integer.\nThe function should return the largest possible sum of the integers written on the blackboard after K operations by E869120.\n'''\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 11\\n1') == '30'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n2\n''') == '30'\nassert solution('''5 3 11\n3\n''') == '30'\nassert solution('''5 3 11\n4\n''') == '30'\nassert solution('''5 3 11\n5\n''') == '30'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n2\n''') == '12'\nassert solution('''5 3 11\n3\n''') == '15'\nassert solution('''5 3 11\n4\n''') == '16'\nassert solution('''5 3 11\n5\n''') == '20'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '0'\nassert solution('5 3 11\\n3') == '20'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0 0') == '0'\nassert solution('5 3 11') == '30'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('3 4 5') == '10'\nassert solution('1 2 3') == '2'\nassert solution('3 4 5') == '8'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '15'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcdef') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"example\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n\n---Explanation---\n\nGiven string abaccaba, each lowercase letter occurs four times and the other letters occur zero times.\n'''\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aba') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes', \"solution('abaccaba')\"\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabb\") == \"No\"\nassert solution(\"aaa\") == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"4\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '3'\n'''\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"3\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, k = map(int, stdin.split())\n        a = sorted(list(map(int, stdin.split())))\n        return str(a[k - 1])\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 4\") == \"3\"\n\"\"\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 2') == '2'\nassert solution('4 6\\n1 1 1 1') == '1'\nassert solution('5 5\\n1 1 1 1 1') == '1'\nassert solution('3 5\\n3 3 3 3 3') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '3'\nassert solution('3 5') == '5'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 5\n1 1\n2 2\n3 3\n5 6''') == '3'\n\nassert solution('''4 7\n1 1\n2 2\n3 3\n4 4''') == '4'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"5 2\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\""
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 0 0\n1 1 1''') == '2'\nassert solution('''10 10\n1 0 1 0 1 1 0 1 1 1 0 1 0 1 1 1 1\n1 0 1 1 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 5\") == \"6\"\nassert solution(\"8 10\") == \"8\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n10 10 15') == '10'\nassert solution('1 2 3\\n10 10 15') == '5'\nassert solution('20 3\\n5 10 15') == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '4'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"100 500\") == \"150\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 3\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"20 3\n5 10 15\n\"\"\") == \"10\"\nassert solution(\"\"\"20 4\n1 10 3 4\n\"\"\") == \"13\"\nassert solution(\"\"\"20 4\n1 2 3 4\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 5') == '10'\nassert solution('20 20') == '0'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 5') == '20'\nassert solution('20 6') == '20'\nassert solution('20 7') == '20'\nassert solution('20 8') == '20'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 30') == '30'\nassert solution('20 30 30 30 30 30 30 30') == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n0 0 0''') == '0'\nassert solution('''20 3\n10 10 10''') == '10'\nassert solution('''20 3\n0 0 0''') == '0'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 2 7\n''') == '15'\nassert solution('''4 5 2 6\n''') == '6'\nassert solution('''4 5 7 4\n''') == '8'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('1 2 3 4') == '2'"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2 7\") == \"15\", solution(\"2 5 2 7\")\nassert solution(\"1 2 3 4\") == \"4\", solution(\"1 2 3 4\")\nassert solution(\"1\") == \"1\", solution(\"1\")\nassert solution(\"3 4\") == \"4\", solution(\"3 4\")\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 2 7\") == \"15\"\nassert solution(\"7 3 5 2\") == \"14\"\nassert solution(\"10 20 30 40\") == \"50\"\nassert solution(\"6 6 6 6\") == \"6\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 5 2 7\n\"\"\"\n) == \"15\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"2 3 4 5\") == \"10\""
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 5, 2, 7]) == \"15\"\nassert solution([2, 7, 2, 7]) == \"14\"\nassert solution([7, 7, 7, 7]) == \"14\"\nassert solution([2, 4, 2, 4]) == \"8\"\nassert solution([2, 2, 2, 2]) == \"4\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 2 7') == '15'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 4 5 2 7') == '14'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\""
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"3\") == \"WA x 1\"\nassert solution(\"2\") == \"TLE x 2\"\nassert solution(\"0\") == \"RE x 0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('6\\nWA\\nAC\\nTLE\\nWA\\nWA\\nTLE\\n') == 'WA x 1\\nAC x 3\\nTLE x 2\\nRE x 0\\n'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nAC\\nAC\\nWA\\nWA\\nWA\\nTLE\\n') == 'AC x 3'\nassert solution('2\\nAC\\nWA\\nAC\\nWA\\nWA\\n') == 'AC x 3'\nassert solution('6\\nAC\\nAC\\nAC\\nAC\\nAC\\n') == 'AC x 3'\nassert solution('10\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\nWA\\n') == 'WA x 1'\nassert solution('1\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\n') == 'AC x 3'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\nAC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3'\nassert solution('''5\nAC\nWA\nAC\nWA\nAC\n''') == 'AC x 2'\n\n'''\nI\u2019ve been given a template and a sample input, I\u2019ve solved the problem without any help.\n'''"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"7\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\nAC x 0\\nWA x 0\"\nassert solution(\"8\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\nAC x 0\\nWA x 0\\nAC x 0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"AC x 2\\nWA x 1\\nTLE x 2\\nRE x 0\""
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '10'\nassert solution('2') == '2'"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"21\") == \"27\"\nassert solution(\"21.5\") == \"27\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('15') == '2'\nassert solution('20') == '2'\nassert solution('21') == '7'\nassert solution('24') == '7'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('21') == '27'\nassert solution('15') == '30'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"2\"\nassert solution(\"23\") == \"4\"\n\"\"\""
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '10'\nassert solution('20') == '19'\nassert solution('30') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('21') == '27'\nassert solution('13') == '13'"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '27'\nassert solution('0') == '27'\nassert solution('1') == '28'\nassert solution('2') == '29'\nassert solution('3') == '30'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '21') == '27'\nassert solution(\n    '21') == '27'\n\n'''"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"error\"\nassert solution(\"4\") == \"error\"\nassert solution(\"5\") == \"error\"\nassert solution(\"6\") == \"9\"\nassert solution(\"7\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"6 4\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '10'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\", \"Wrong answer for [1, 2]\"\nassert solution(\"1 2 3\") == \"4\", \"Wrong answer for [1, 2, 3]\"\nassert solution(\"5\") == \"6\", \"Wrong answer for [5]\"\nassert solution(\"-9 -10\") == \"error\", \"Wrong answer for [-9, -10]\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"7\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"5 6\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"10 10\") == \"error\"\n\n\"\"\"\n\nA, B = map(int, input().split())\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"error\"\nassert solution(\"9\") == \"9\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 6') == '11'\nassert solution('10 9') == 'error'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 8\") == \"error\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"3\"\nassert solution(\"2 2\\n\") == \"4\"\nassert solution(\"4 5\\n\") == \"10\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n10\\n20\\n40\\n') == '7'\nassert solution('4\\n1\\n1\\n2\\n') == '2'\nassert solution('4\\n1\\n2\\n3\\n') == '5'"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 7 9') == '7'\nassert solution('4 5 10 5') == '10'"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 3, 7, 9]) == 7\nprint(solution([2, 3, 7, 9]))\n\"\"\"\n\nN = int(stdin)\na = list(map(int, stdin.split()))\n\na.sort()\n\nminDist = a[0]\n\nfor i in range(1, len(a)):\n    minDist = min(minDist + a[i], a[i] - a[i - 1])\n\nprint(minDist)"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2 3 7 9''') == '7'\nassert solution('''10\n3 4 7 8 9''') == '7'\nassert solution('''1\n1 2 3''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"7\"\nassert solution(\"6\") == \"7\"\n\"\"\""
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"0\"\nassert solution(\"4\\n2 3 7 9\\n\") == \"7\""
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7 9\") == 7\nassert solution(\"4\") == 9\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('3 4') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == 'Yes', \"Wrong\"\nassert solution(\"1 3\") == \"Yes\", \"Wrong\"\nassert solution(\"1 2\") == \"Yes\", \"Wrong\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n') == 'Yes'\nassert solution('2 3\\n') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 4\") == \"No\"\nassert solution(\"1 1\\n2 2\") == \"Yes\""
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3\n''') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 3') == 'No'"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == \"Yes\"\nassert solution('4 5') == \"No\""
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 3') == 'No'\nassert solution('2 4') == 'No'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == 'Even'\nassert solution('1 1') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('2 2') == 'Even'\nassert solution('3 3') == 'Odd'\n\"\"\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Even\"\n\nsolution(\"10 10\") == \"Even\"\n\nsolution(\"-1 -1\") == \"Odd\"\n\nsolution(\"-1 10\") == \"Odd\"\n\nsolution(\"2 4\") == \"Odd\"\n\nsolution(\"3 7\") == \"Odd\"\n\nsolution(\"2 5\") == \"Even\"\n\nsolution(\"-1 -1 -1\") == \"Odd\"\n\nsolution(\"0 0\") == \"Even\"\n\nsolution(\"-1 -1 -1\") == \"Odd\"\n\nsolution(\"1 1\") == \"Odd\"\n\nsolution(\"1 10\") == \"Odd\"\n\nsolution(\"-1 10\") == \"Odd\"\n\nsolution(\"1 -1\") == \"Odd\"\n\nsolution(\"-1 -1 -1\") == \"Odd\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 5\") == \"Even\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"4 5\") == \"Odd\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n\") == \"Even\"\nassert solution(\"1 2\\n\") == \"Odd\"\nassert solution(\"-3 -2\\n\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'Even'\nassert solution('1 2') == 'Odd'"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 2') == 'Odd'\n'''"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"\n\"\"\"\n\na, b = map(int, input().split())\nprint(\"Even\" if a * b % 2 == 0 else \"Odd\")\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 6''') == '2'\nassert solution('''2 3''') == '3'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '2'\nassert solution('2 3') == '3'\nassert solution('3 5') == '4'\nassert solution('4 5') == '3'"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '3'\nassert solution('3 6') == '2'\nassert solution('4 7') == '3'\nassert solution('5 8') == '4'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 6\"\n) == \"2\"\nassert solution(\n    \"2 5\"\n) == \"2\"\nassert solution(\n    \"2 10\"\n) == \"2\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 6\") == \"2\"\n\n---Output---\n2\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\"\"\") == \"6 9\"\nassert solution(\"\"\"\n4\n4 1 2 4\n2\n1 1\n1 2\n1 3\"\"\") == \"8 4 9\"\nassert solution(\"\"\"\n5\n4 1 2 2 3\n2\n1 1\n1 2\n1 3\n1 4\"\"\") == \"10 3 8\""
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6\\n9\\n'\nassert solution('4') == '6\\n9\\n'\nassert solution('2') == '6\\n9\\n'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    2 1 4\n    2\n    1 1\n    2 3\n    ''') == '6 9'\nassert solution('''\n    4\n    5\n    2 5\n    3 3\n    ''') == '12 13'\n''')\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6 9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('5\\n2 1 5 4\\n2\\n1 1\\n2 3') == '6\\n10'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1 4\n2\n1 1\n2 3\n''') == '6 9'"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6\\n9\\n'\nassert solution('4') == '1\\n0\\n'\nassert solution('5') == '2\\n4\\n'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6 9'\nassert solution('4\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6 9'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 8\") == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 2 3 4 5 6 7 8 9') == '2000'\nassert solution('10000 8') == '21000'\nassert solution('1000000 8') == '10000000'"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10\\n2 2 2 2 2 2\\n\") == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4 5 6 7 8 9') == '2000'\nassert solution('10000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1 3 5 7') == '2000'\nassert solution('3 3 3 4 5') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1000 8\\n\"\n    \"1 3 4 5 6 7 8 9\"\n) == \"2000\""
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 8') == '2000'"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 3 4 5 6 7 8 9') == '2000'\nassert solution('1 2 3 4 5 6 7 8 9') == '2000'\nassert solution('1 2 4 5 6 7 8 9') == '2000'\nassert solution('1 2 4 5 6 7 8 9') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1000 10\") == \"2000\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1000\""
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 100') == '2000'\nassert solution('1000 10') == '2000'\nassert solution('1000 1000') == '2000'\nassert solution('1000 100') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 3 4 5 6 7 8 9\") == \"2000\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 3 4\\n1 3\\n2 3') == '2'\nassert solution('3 4\\n1 2 3 4\\n1 3\\n2 3') == '2'\nassert solution('4 4\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '1'"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 2\") == \"0\"\nassert solution(\"5 3\\n1 2 3 4 5\\n1 3\\n2 3\\n2 4\\n3 3\\n3 4\") == \"3\""
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"10 4\\n2 3 4 5 6 7 8 9 10\\n2 4\\n3 4\\n2 4\\n3 5\\n4 5\\n2 6\\n4 6\\n2 7\\n3 7\\n2 8\\n3 8\\n2 9\\n3 9\\n2 10\\n3 10\") == \"2\"\nassert solution(\"10 4\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n5 7\\n6 7\\n6 8\\n7 8\\n7 9\\n8 9\\n8 10\\n9 10\") == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"0\"\nassert solution(\"4 2\\n1 2\\n2 2\\n3 3\\n2 4\") == \"0\"\nassert solution(\"4 2\\n1 2\\n2 2\\n3 3\\n2 4\") == \"0\""
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('5 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4') == '4'\nassert solution('4 3\\n1 2 3 4\\n2 3\\n3 4\\n2 4') == '1'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\""
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\") == \"2\"\nassert solution(\"4 3\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"0\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"0\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2'\nassert solution('3 2') == '1'\nassert solution('5 4') == '1'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\n\"\"\""
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"15\"\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nk = int(sys.stdin.readline().strip())\ndp = {1: 1, 2: 2, 3: 4, 4: 7, 5: 10}\nres = dp[1]\nfor i in range(2, n + 1):\n    res = min(res * 2, res + k)\n    dp[i] = res\nprint(res)\n\"\"\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '13'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '10'\nassert solution('5') == '14'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"20\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3') == '10'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n3\\n\"\n    ) == \"10\\n\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\") == \"10\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '12'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == '0', 'Test Failed'\nassert solution(0) == '1', 'Test Failed'"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n\"\"\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1''') == '1', \"Wrong\"\nassert solution('''0\n0''') == '0', \"Wrong\"\nassert solution('''1\n1''') == '1', \"Wrong\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '1'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('0.1') == '0.1'\nassert solution('0.00001') == '0.00001'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('-1') == '1'\n\"\"\""
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"1+2\"\nassert solution(\"123\") == \"1+2+3\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('12') == '1+2'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '156'\nassert solution('2') == '7'\nassert solution('2+5') == '7'\nassert solution('2+5+7') == '17'\nassert solution('1+2+3+4+5+6+7+8+9+0') == '10'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('125') == \"176\""
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '176'\nassert solution('1') == '176'\nassert solution('12345') == '176'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == \"1\"\nassert solution('6\\n10 11 12 13 14 15') == \"0\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n4\n1 2 3 4\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\n'''\nOutput\n\n1\n'''"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('4') == '1'"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3 4 5 6') == '1'\nassert solution('5\\n2 1 4 5 6') == '5'"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"0\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"0\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4 5') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('8\\n1 2 3 4 5 6 7') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '0'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '5'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2 5 1 6\") == \"1\"\nassert solution(\"1\\n10 8 7 4 11\") == \"0\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 4 5 6\\n') == '1'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"20\") == \"16000\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"20\") == \"15800\"\nassert solution(\"20\") == \"15800\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16000') == '15800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2080'\nassert solution('1') == '1'\nassert solution('5') == '2400'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20') == '15800'\nassert solution('100') == '15800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20\n''') == '15800'\nassert solution('''10\n''') == '7600'\nassert solution('''100\n''') == '17500'\nassert solution('''101\n''') == '19995'\nassert solution('''20\n''') == '14200'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '3200'\nassert solution('20') == '16000'\nassert solution('20') == '16000'\nassert solution('5') == '15800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"10000\"\nassert solution(\"10\\n\") == \"0\"\nassert solution(\"20\\n\") == \"15800\""
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '15800'\nassert solution('10\\n') == '13800'\nassert solution('15\\n') == '16200'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ant\nobe\nrec\n''') == 'abc', solution('''ant\nobe\nrec\n''')\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"./test.in\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''c_{11}c_{12}c_{13}\nc_{21}c_{22}c_{23}\nc_{31}c_{32}c_{33}''') == 'abc', \"Should be 'abc'\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aabc\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('asdfasdf') == ''\nassert solution('asdfasdfasdf') == ''\nassert solution('a') == 'a'\nassert solution('asdf') == 'asd'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ant') == 'abc', \"Wrong answer\"\nassert solution('obe') == 'abc', \"Wrong answer\"\nassert solution('rec') == 'abc', \"Wrong answer\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ant\") == \"abc\", \"Should be abc\"\nassert solution(\"obe\") == \"abc\", \"Should be abc\"\nassert solution(\"rec\") == \"abc\", \"Should be abc\"\nprint(\"Done\")"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '2'\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n) == \"2\"\nassert solution(\n    \"0\\n\"\n    \"1\\n\"\n    \"1\\n\"\n) == \"1\"\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n) == \"3\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"111\") == \"4\"\nassert solution(\"001\") == \"1\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100') == '2'\nassert solution('011') == '1'\nassert solution('100') == '1'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '2'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\"\n\"\"\"\n\ns = input()\na, b, c = map(int, s.split(\" \"))\nprint(a+b+c)\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '2'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('101') == '2'\nassert solution('100') == '1'\nassert solution('110') == '0'\nassert solution('001') == '0'\nassert solution('001010101010') == '4'"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n10000\n9000''') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 10000 9000') == '48000'\n\"\"\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\n\"\"\"\nimport math\n\nn, k, x, y = list(map(int, stdin.strip().split()))\n\ncost = x * (k + 1) * (k + 2) // 2 + y * k\nprint(cost)\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"10\") == \"21\"\n\"\"\"\n\n\nclass Solution:\n\n    def solution(self, N: str, K: str, X: str, Y: str) -> str:\n        return \"\".join(str(x) for x in (int(X)*K, int(X)*(K+1), int(Y)*(K+1), int(Y)*K))\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '48000'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '48000'\nassert solution('4') == '4000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n10000\\n9000') == '48000'\nassert solution('5\\n2\\n100\\n1000') == '100000'"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '48000'\nassert solution('4') == '47000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n3\n10000\n9000\n\"\"\") == \"48000\"\nassert solution(\"\"\"\n2\n3\n100000\n90000\n\"\"\") == \"100000\"\nassert solution(\"\"\"\n3\n4\n30000\n40000\n\"\"\") == \"50000\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\n\n---"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + 2 - 3') == '2'\nassert solution('3 + 2 - 1') == '1'\nassert solution('2 + 1 - 3') == '-1'\nassert solution('1 - 2 + 3') == '-2'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 + 1\") == \"2\"\nassert solution(\"2 + 2\") == \"4\"\nassert solution(\"2 + 1\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 * 2') == '2'\nassert solution('5 * 6') == '30'\nassert solution('1 - 1') == '0'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + -2') == '1'\n\"\"\""
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == '3'\nassert solution(\"1 - 2\") == '1'\nassert solution(\"1 * 2\") == '2'\nassert solution(\"1 / 2\") == '0.5'\nassert solution(\"1 - 2 * 3\") == '-2'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 - 2') == '1'\nassert solution('1 + 2 + 3') == '6'\nassert solution('1 + 2 - 3') == '2'\nassert solution('-1 + 2 - 3') == '-5'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"2 - 1\") == \"1\"\nassert solution(\"1 - 1\") == \"0\"\nassert solution(\"2 + 1\") == \"3\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'ABC'\nassert solution('1000') == 'ARC'\n'''\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1250') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1000''') == 'ABC'\nassert solution('''1001''') == 'ARC'\nassert solution('''1200''') == 'ARC'\nassert solution('''1201''') == 'ARC'\nassert solution('''1202''') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"ABC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1234') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('2000') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1000\n''') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"ARC\"\nassert solution(\"12000\") == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('123') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1200') == 'ABC'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([700, 600, 780]) == '1300'\nassert solution([700, 600, 780]) == '1480'\nassert solution([700, 600, 780]) == '1380'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"800 600 780\") == \"1480\"\nassert solution(\"700 700 780\") == \"1300\"\nassert solution(\"800 800 780\") == \"1300\"\nassert solution(\"700 600 790\") == \"1300\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1300'\nassert solution('1 1 1') == '1300'\nassert solution('1 1 2') == '1300'\nassert solution('1 2 2') == '1480'\nassert solution('1 2 3') == '1480'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1300', \"Wrong answer!\"\nassert solution('700 600 780') == '1300', \"Wrong answer!\"\nassert solution('700 600 780') == '1480', \"Wrong answer!\"\nassert solution('700 600 780') == '1380', \"Wrong answer!\""
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"300 400 450 500\") == \"1300\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 300 780\") == \"1300\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\na b c\n700 600 780\n''') == '1300'\nassert solution('''\na b c\n700 600 780\n''') == '1300'\nassert solution('''\na b c\n700 700 780\n''') == '1700'\nassert solution('''\na b c\n700 700 780\n''') == '1700'\nassert solution('''\na b c\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"900 900 900\") == \"1800\"\nassert solution(\"800 100 1000\") == \"1500\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 7 10\n\"\"\") == \"1300\"\nassert solution(\"\"\"\n8 7 9\n\"\"\") == \"1480\"\nassert solution(\"\"\"\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 4 5\n\"\"\") == \"1300\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''700 600 780''') == '1300'\nassert solution('''1000 200 500''') == '1500'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 3\nabcd\n1234\"\"\") == \"\"\"#abcd#\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\"\nassert solution(\"1 1\") == \"###\\n#a#\\n#c#\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\na\nb''') == '#####\\n#a#\\n#b#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"12\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\""
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\nIIDID') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('10\\nHIHIHIHI') == '9'\nassert solution('100\\nHIIIIIII') == '99'\nassert solution('200\\nHIHIHIHIHI') == '99'\nassert solution('300\\nHIIIIIIIHIHIHIHIHI') == '99'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nI') == '1'\nassert solution('1\\nD') == '1'\nassert solution('1\\nDD') == '2'\nassert solution('1\\nIDID') == '3'\nassert solution('1\\nIDIDD') == '3'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('4\\nIIDID') == '2'\nassert solution('10\\nIIDID') == '2'\nassert solution('20\\nIIDID') == '3'\nassert solution('100\\nIIDID') == '2'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"99999\") == \"4\"\nassert solution(\"1\") == \"1\"\n\n'''\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11009 11332') == '4'\n\"\"\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11005 11332') == '3'\nassert solution('11001 11332') == '2'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([11009, 11332]) == \"4\"\nassert solution([11010, 11333]) == \"4\"\nassert solution([11011, 11111]) == \"4\"\nassert solution([11012, 11211]) == \"4\"\nassert solution([11013, 11311]) == \"4\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nA B\n11009 11332\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"99999999999999999999999999999\") == \"999999999\"\nassert solution(\"9\") == \"0\"\nassert solution(\"8888\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11012 11111') == '3'\nassert solution('11221 11321') == '2'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11009 11332''') == '4'\nassert solution('''2040 20800 20700''') == '2'\nassert solution('''1 1''') == '1'\nassert solution('''0 0''') == '0'\nassert solution('''1000 0000''') == '3'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11009 11332\") == \"4\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11009 11332') == '4'\n\n\"\"\""
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 4 2\") == \"3\"\nassert solution(\"3 1 4 1 2\") == \"4\"\nassert solution(\"2 1 4 1 3\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 2 4\") == \"3\"\nassert solution(\"3 3 3 4\") == \"3\"\nassert solution(\"3 3 3 4 4\") == \"3\"\nassert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 5\") == \"4\"\nassert solution(\"3 1 7\") == \"3\"\nassert solution(\"3 1 6\") == \"4\"\nassert solution(\"1 1 1\") == \"4\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 4\\n') == '3'\nassert solution('4 2 3\\n') == '3'\nassert solution('2 4 3\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"4 3 5 6\") == \"4\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"5 5 5\") == \"5\""
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"2 4 3\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"12\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '12'\n\"\"\"\n\nn, k = map(int, input().split())\nsticks = sorted(list(map(int, input().split())), reverse=True)\n\ntoy = 0\nfor i in range(k):\n    toy += sticks[i]\n\nprint(toy)\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"12\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n\n\"\"\"\nWhat if you can change the number of sticks given?\nWhat if you can change the length of a stick?\nWhat if you can change the length of a stick to a non-positive number?\n\"\"\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 2\\n1 2 3 4 5\") == \"10\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '12'\nassert solution('5 3') == '12'\nassert solution('6 2') == '6'\n\nTests:\npython solution.py < stdin.txt\n\"\"\"\n\nfrom itertools import combinations\nimport sys"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3\n''') == '12', 'Wrong answer'\n\nassert solution('''\n3\n2\n1\n''') == '3', 'Wrong answer'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '12'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '12'\nassert solution('1 2 3 4 5') == '12'\nassert solution('1 2 3 5') == '10'\nassert solution('1 2 3 5') == '10'\nassert solution('3 4 5') == '7'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"10 5\") == \"15\"\nassert solution(\"15 5\") == \"20\"\nassert solution(\"30 10\") == \"35\"\nassert solution(\"15 1\") == \"16\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"12\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 2 7\") == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('10 2 10') == 'A'\n\nassert solution('2 2 2') == 'A'\nassert solution('10 10 10') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('5 4 7') == 'A'\nassert solution('5 5 7') == 'B'\nassert solution('5 5 5') == 'A'\nassert solution('5 5 4') == 'B'"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 2 1') == 'A'\n\n========================================================="
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 7''') == 'B'\nassert solution('''10 1 7''') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 2 3') == 'A'\nassert solution('2 3 4') == 'C'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'A'\nassert solution('5 2 7') == 'B'\nassert solution('10 1 5') == 'B'\nassert solution('9 7 7') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 2 7'\n) == 'B'\nassert solution(\n    '5 2 7'\n) == 'A'"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 7\\n') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 7\\n') == 'B'\nassert solution('1 2 3\\n') == 'A'"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/12/29\") == \"2017/12/29\"\nassert solution(\"2017/12/25\") == \"2017/12/25\"\nassert solution(\"2017/01/25\") == \"2017/01/25\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/16') == '2017/01/16'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(solution(\"2017/01/07\"))\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\""
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n\n\"\"\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/08') == '2018/01/08'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(solution(input()))"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/01') == '2018/01/01'\nassert solution('2017/01/13') == '2018/01/13'\nassert solution('2017/01/31') == '2018/01/31'"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"aac\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n' + 'cbaa') == 'aac'\nassert solution('3\\n' + 'daacc') == 'aca'\nassert solution('3\\n' + 'acacac') == 'acac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'aac'\nassert solution('4') == 'cbaa'\nassert solution('5') == 'daacc'"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac'\n\"\"\"\nimport sys"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"aac\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\ncba\\n') == 'a'\nassert solution('3\\ncba\\ndaacc\\nacacac\\n') == 'acacac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('4\\ncba\\ndaac\\nacaa\\ncaaa') == 'acaa'\nassert solution('3\\nac\\naa\\nba') == 'acba'\nassert solution('1\\n') == ''\nassert solution('2\\naa\\nbb') == 'bb'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"caa\""
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'a'\nassert solution('3') == 'aa'\nassert solution('4') == 'aaa'\nassert solution('10') == 'aaa'\nassert solution('12') == 'aaaa'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"aac\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '7'\n\"\"\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1]) == '7'\nassert solution([1, 24, 30]) == '7'\nassert solution([1, 24, 26, 30]) == '7'\nassert solution([1, 24, 25, 26, 30]) == '7'\nassert solution([1, 24, 25, 27, 30]) == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 1\n:\n3 3\n:\n''') == '7'\nassert solution('''\n3\n1 1 1\n:\n1 4\n:\n:\n''') == '5'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n24 30\n''') == '7'\nassert solution('''1\n23 19\n''') == '4'\nassert solution('''1\n1 2\n''') == '2'\nassert solution('''1\n2 5\n''') == '0'\nassert solution('''1\n2 6\n''') == '0'\n'''\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 2\\n1 3\\n2 3\") == \"1\"\nassert solution(\"5\\n4 2\\n3 2\\n4 4\\n2 3\\n3 3\\n4 4\\n5 5\") == \"5\"\nassert solution(\"1\\n1 2\\n3 4\\n1 2\\n2 4\\n3 6\\n4 4\\n5 5\") == \"1\"\nassert solution(\"2\\n1 2\\n3 4\\n1 2\\n3 4\\n5 6\\n4 5\\n5 5\") == \"2\"\nassert solution(\"10\\n1 10\\n2 5\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"10\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\", \"1\"\nassert solution(\"2\") == \"2\", \"2\"\nassert solution(\"3\") == \"3\", \"3\"\nassert solution(\"4\") == \"4\", \"4\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1]) == \"1\"\nassert solution([2]) == \"1\"\nassert solution([3]) == \"1\"\nassert solution([4]) == \"1\"\nassert solution([5]) == \"2\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '6'"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == \"0\"\nassert solution(3) == \"4\"\nassert solution(4) == \"8\"\nassert solution(6) == \"12\"\nassert solution(7) == \"16\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n3 4\n''') == '6'\nassert solution('''5 3\n3 4\n5 5\n4 1\n4 5\n5 1\n''') == '8'\n\"\"\"\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m = map(int, stdin.split())\n        return str(min(n, m) - max(n, m) - 4)\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n\") == \"6\""
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '6', \"Wrong answer\"\nassert solution('1 1') == '1', \"Wrong answer\"\n\"\"\"\nn, m = map(int, input().split())\n\nb = []\nfor i in range(n + 1):\n    for j in range(m + 1):\n        if i == 0 or j == 0:\n            b.append(1)\n        else:\n            b.append(min(b[i - 1], b[j - 1]) + 1)\nprint(b[n] * b[m])\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '6'\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '6'\nassert solution('5 5') == '12'\nassert solution('10 10') == '100'\n\n\"\"\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == \"Possible\"\nassert solution('4 5') == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"4 2\") == \"Possible\"\nassert solution(\"2 1\") == \"Impossible\"\nassert solution(\"7 9\") == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5\n2 1''') == 'Possible'\nassert solution('''4 5\n3 2''') == 'Impossible'\n''')\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"2 2\\n\") == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"4 5\") == \"Impossible\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"Possible\"\nassert solution(\"6 3\") == \"Impossible\"\n\n\"\"\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"Possible\"\nassert solution(\"4 5\") == \"Impossible\"\nassert solution(\"1 2\") == \"Possible\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n2 3''') == 'Possible'\nassert solution('''3 3\n1 1''') == 'Impossible'\nassert solution('''1 1\n3 2''') == 'Possible'\nassert solution('''1 1\n2 3''') == 'Impossible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 5\n4 3\n5 4\n4 5\n3 3\n''') == 'Possible'\nassert solution('''3 5\n3 2\n1 3\n6 4\n2 2\n''') == 'Impossible'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\n\n##Task: Write a Python program that reads the list of integers from a given list of strings, and prints the maximum integer value from the given list."
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"ctcoder\""
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('coder') == 'atcoder'\nassert solution('?') == 'UNRESTORABLE'\n\n'''"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'bcoder'\nassert solution('123') == '123'"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('abc') == 'UNRESTORABLE'\nassert solution('abcd') == 'UNRESTORABLE'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'zabcdefghijklmnopqrstuvwxyz'\nassert solution('hj?m?kc') == 'hjkc'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('aa') == 'UNRESTORABLE'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"?tc????\") == \"atcoder\", '#test'\nassert solution(\"coder\") == \"btcoder\", '#test'\nassert solution(\"atcoder\") == \"atcoder\", '#test'\n\"\"\"\n\n\nimport itertools\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'btcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\nassert solution('?tc?????') == 'atcoder'\nassert solution('??tc????') == 'UNRESTORABLE'\nassert solution('??tc?????') == 'UNRESTORABLE'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2002\") == \"2017\"\n\nassert solution(\"2017\") == \"2032\"\n\nassert solution(\"2032\") == \"2002\""
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n\"\"\""
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2017'\nassert solution('2032') == '2032'"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\nassert solution(\"2032\") == \"2002\""
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2020') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2017\"\nassert solution(\"2032\") == \"2032\"\nassert solution(\"2003\") == \"2003\"\nassert solution(\"2004\") == \"2004\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\nassert solution('2033') == '2032'\nassert solution('2034') == '2032'\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nstring\n''') == '6'\nassert solution('''\nletter\n''') == '4'\nassert solution('''\naaaaaa\n''') == '0'\nassert solution('''\nuncopyrightable\n''') == '13'\nassert solution('''\nassesses\n''') == '1'\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('a b') == 2\nassert solution('a b c') == 2\nassert solution('abc') == 2\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == None\nassert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n50\n3\n''') == 'AC'\n\nassert solution('''\n1\n10001\n5\n''') == 'TLE'\n\nassert solution('''\n1\n1000001\n5\n''') == 'TLE'\n\nassert solution('''\n1\n19931568\n6\n''') == 'AC'"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'AC'\nassert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 5\n2\n5\n1\n2\n5''') == 'AC'\nassert solution('''5 1 5\n2\n5\n1\n2\n5''') == 'AC'\nassert solution('''5 1 5\n2\n5\n1\n2\n5''') == 'AC'\nassert solution('''5 1 5\n2\n5\n1\n2\n5''') == 'AC'\nassert solution('''5 1 5\n2\n5\n1\n2\n5''') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"100000000 500 3\"\n) == \"AC\"\nassert solution(\n    \"100000000 50 3\"\n) == \"AC\"\nassert solution(\n    \"100000000 10001 5\"\n) == \"TLE\"\nassert solution(\n    \"100000000 10000 5\"\n) == \"TLE\"\nassert solution(\n    \"19931568 1000000 6\"\n) == \"TLE\""
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100000000 500 3\n''') == 'AC'\nassert solution('''\n100000000 50 3\n''') == 'AC'\nassert solution('''\n100000000 10001 5\n''') == 'TLE'\nassert solution('''\n100000000 10000 5\n''') == 'TLE'\nassert solution('''\n19931568 1000000 6\n''') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100000000 500 3''') == 'TLE'\nassert solution('''100000000 50 3''') == 'AC'\nassert solution('''100000000 10001 5''') == 'TLE'\nassert solution('''100000000 10000 5''') == 'AC'\nassert solution('''19931568 1000000 6''') == 'TLE'\n\n----\n\nPowered by AlgoExpert.io\n'''\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\n\nassert solution(\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\n\nassert solution(\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\n\nassert solution(\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 0 2') == '4 0 0 0'\nassert solution('2 0 0 2') == '4 16 8 2'\nassert solution('2 0 0 2') == '4 16 8 2'\nassert solution('2 0 0 2') == '4 16 8 2'\nassert solution('2 0 0 2') == '4 16 8 2'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '2 1024 64 0'\nassert solution('2 4 4 8') == '0 0 0 4'\nassert solution('2 2 4 8') == '0 0 0 0'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\") == \"\"\"\n1 1 1 0\n4 4 4 0\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 1 1 2\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\") == \"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\") == \"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\") == \"\"\"\n1 1 1 1\n2 4 4 4\n3 8 8 8\n4 16 16 16\n5 32 32 32\n\"\"\".strip()\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n') == '2 4 8 0\\n4 0 4 4\\n16 16 16 16\\n32 32 32 32\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\n\"\"\".strip()\nassert solution(\"\"\"\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n\"\"\") == \"\"\"\n2 2 4 0\n4 0 0 4\n8 16 16 16\n32 32 0 0\n0\n\n\"\"\".strip()\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"2 0 0 2\") == \"4 16 8 2\"\nassert solution(\"2 0 0 2\") == \"2 64 32 4\"\nassert solution(\"2 0 0 2\") == \"2048 64 0 0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '2048 64 0 0'\nassert solution('1024 1024 64 0') == '0 0 0 4'\nassert solution('3') == '0 0 0 4'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nC2H6 10\nC3H8\n''') == '6'\nassert solution('''\nCH3OH 1\nCH4\n''') == '1'\nassert solution('''\nC6H6OCH2O 10\nHCN\n''') == '0'\nassert solution('''\nC6H14 10\nC5H10\n''') == '12'\nprint('All test cases passed!')"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"H 2\nO\n\"\"\") == \"0\"\n\nassert solution(\"\"\"C2H6 10\nC3H8\n\"\"\") == \"6\"\n\nassert solution(\"\"\"CH3OH 1\nCH4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"C6H6OCH2O 10\nHCN\n\"\"\") == \"12\"\n\nassert solution(\"\"\"C6H14 10\nC5H10\n\"\"\") == \"16\""
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n\"\"\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, \"Oh no, not the answer\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H2OC100H\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"0\"\nassert solution(\"C6H6OCH2O 10\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('H2OC100H') == '0'\nassert solution('C2H6 10') == '6'\nassert solution('C3H8') == '1'\nassert solution('CH3OH 1') == '1'\nassert solution('C6H6OCH2O 10') == '12'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '1'\nassert solution('C 2') == '0'\nassert solution('C 3') == '1'\nassert solution('CH 3OH 1') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('H 2\\nO') == '0'\nassert solution('C 2\\nH') == '0'\nassert solution('C 2\\nO') == '1'\nassert solution('CH3OH 1\\nCH4') == '1'\nassert solution('C 6H6OCH2O 10\\nHCN') == '0'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ABSC HAPPYBIRTHDAYCACEY\nABSC HAPPYBIRTHDAYCACEY''') == 'PASS'\nassert solution('''ABSC HAPPYBIRTHDAYCACEY\nABSC HAPPYBIRTHDAY''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAYCACEY\nABC HAPPYBIRTHDAYCACEY''') == 'PASS'\nassert solution('''ABC HAPPYBIRTHDAY\nABC HAPPYBIRTHDAYCACEY''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAYCACEY\nABC HAPPYBIRTHDAY''') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"ABC SOMECHORESARETOUGH\") == \"PASS\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAYC') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"FAIL\"\nassert solution(\"ABC\") == \"PASS\"\nassert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n\n\"\"\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAYC\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"FAIL\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    SECRET SOMECHORESARETOUGH\n''') == \"PASS\"\nassert solution('''\n    ABC HAPPYBIRTHDAYCACEY\n''') == \"PASS\"\nassert solution('''\n    SECRET SOMECHORESARETOUGH\n''') == \"FAIL\"\nassert solution('''\n    ABC TRAGICBIRTHDAYCACEY\n''') == \"FAIL\"\nassert solution('''\n    ABC HAPPYBIRTHDAY\n''') == \"FAIL\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nA $B $C\nB\nC $A\n''') == 'PASS'\nassert solution('''\nA $B $C\nB\nC $A\n''') == 'FAIL'\nassert solution('''\nA $B $C\nB\nC $C\n''') == 'PASS'\nassert solution('''\nA $B $C\nB\nC $C\n''') == 'FAIL'\nassert solution('''\nA $B $C\nB\nC $C\n''') == 'FAIL'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(([] [] ] )''') == '] 7'\nassert solution('''([] [] ] )''') == '] 7'\nassert solution('''(([] [] ] )''') == 'ok so far'\nassert solution('''([] [] ] )''') == 'ok so far'\nassert solution('''(([] [] ] )''') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"]\"\nassert solution(\"2\") == \"]\"\nassert solution(\"3\") == \"ok so far\"\nassert solution(\"4\") == \"ok so far\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == '] 20'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'ok so far'\nassert solution('2') == 'ok so far'\nassert solution('3') == 'ok so far'\nassert solution('4') == 'ok so far'\nassert solution('5') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"ok so far\"\nprint(solution(''))\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n(())\nok so far''') == '] 1'\nassert solution('''13\n(([] [[]] ()) ())\nok so far''') == '] 12'\nassert solution('''21\n[ { { () } } ]\nok so far''') == '] 20'\nassert solution('''27\n[ { [[()]] (({})) } ] () {}\nok so far''') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '8\\n'\n    '([] [] ]\\n'\n    ) == '] 7'\n\nassert solution(\n    '13\\n'\n    '(([] [[]] ())\\n'\n    ) == '] 20'\n\nassert solution(\n    '27\\n'\n    '[ { [[()]] (({})) } ] () {}\\n'\n    ) == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(8) == '] 7'\nassert solution(13) == '] 20'\nassert solution(21) == 'ok so far'\nassert solution(27) == 'ok so far'\nassert solution('([] {})') == '] 7'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Fair Game\", \"solution\"\nassert solution(\"3\") == \"Player 1 lost\", \"solution\"\nassert solution(\"2\") == \"Player 2 lost\", \"solution\""
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == \"Fair Game\"\nassert solution('''\n3\napple\nextra\napple\n''') == \"Player 1 lost\"\nassert solution('''\n2\napple\nneat\n''') == \"Player 2 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Fair Game'\nassert solution('1\\napple\\nextra\\neat\\n') == 'Player 1 lost'\nassert solution('2\\napple\\nextra\\neat\\n') == 'Player 2 lost'\nassert solution('3\\napple\\nextra\\neat\\n') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n3\napple\nextra\napple\n''') == 'Player 1 lost'\nassert solution('''\n2\napple\nneat\n''') == 'Player 2 lost'\nassert solution('''\n1\napple\n''') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\napple\\nexample\\nlist\\n') == 'Fair Game'\nassert solution('3\\napple\\nexample\\nlist\\n') == 'Player 1 lost'\nassert solution('3\\napple\\nexample\\nlist\\n') == 'Player 2 lost'\nassert solution('4\\napple\\nexample\\nlist\\n') == 'Player 2 lost'\nassert solution('3\\napple\\nexample\\nlist\\n') == 'Player 2 lost'\n\n''''''\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\napple\near\nreal\nletters\nstyle\n\"\"\") == \"Fair Game\", \"Fair Game\"\nassert solution(\"\"\"3\napple\nextra\napple\n\"\"\") == \"Player 1 lost\", \"Player 1 lost\"\nassert solution(\"\"\"2\napple\nneat\n\"\"\") == \"Player 2 lost\", \"Player 2 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Fair Game'\nassert solution('3\\napple\\nextra\\napple\\n') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\napple\\neear\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nexra\\napple') == 'Player 1 lost'"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\napple\\nexternal\\neal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nexternal\\neal\\nletters\\nstyle\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nexternal\\neal\\nletters\\nstyle\") == \"Player 2 lost\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10000\n+\n10''') == '10010'\nassert solution('''10\n+\n100''') == '1010'\nassert solution('''1000\n*\n100''') == '100000'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000\\n+\\n100\\n') == '100000'\nassert solution('10000\\n+\\n10\\n') == '1010'\nassert solution('10\\n+\\n1000\\n') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"100000\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1000\n*\n100\n''') == '100000'\nassert solution('''\n10\n+\n10\n''') == '1010'\n'''\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == '100000'\nassert solution('100') == '10010'\nassert solution('10') == '1010'"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '100010'\nassert solution('10') == '1010'"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000\\n+\\n100\") == \"100000\"\nassert solution(\"1000\\n*\\n100\") == \"10010\"\nassert solution(\"10\") == \"1010\"\nprint(\"Congratulations your solution is correct!\")\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == '100000', 'Check your code!'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '1010'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n\n\"\"\""
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''menolaxios mox\nSample Input 2:\nalemaxe maxos\nSample Output 2:\nalemaxexmaxos\n\nSample Input 3:\npamoli toxes\nSample Output 3:\npamolextoxes''') =='menolaxiosexmox'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\nprint(solution('''menolaxios mox'''))\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\n\n\"\"\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes','sample 1'\nassert solution('2019') == 'no','sample 2'\nassert solution('2020') == 'yes','sample 3'\n'''"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2019') == 'no'\n\nassert solution('2018') == 'yes'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(3) == \"no\"\nassert solution(4) == \"yes\"\nassert solution(5) == \"no\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'yes'"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64', 'Should be 64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0', 'Should be 0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000', 'Should be 1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''\n0 0 0 0 4 0 0 0 0 4\n3\n''') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64', 'First'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000', 'Second'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n4\n3\n5\n4''') == '64', solution('''4 0 0 0 4 0 0 0 0 4\n3\n4\n3\n5\n4''')\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n4\n3\n5\n4''') == '1820000', solution('''10 10 10 20 0 10 10 10 10 10\n4\n4\n3\n5\n4''')\nprint('All tests passed!')"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == str(64)\nassert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == str(64)\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == str(0)\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == str(1820000)\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n2\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n3\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n3\n''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n5\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n0\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n1\n''') == '64'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1 1'\nassert solution('3') == '2 1'\nassert solution('6') == '2 1'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999\\n') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999\\n') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999\\n') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n7 0\n30 270 995 996 997 998 999\n\"\"\"\n) == \"2 330\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n7 0\n30 270 995 996 997 998 999\n\"\"\") == \"2 330\"\nassert solution(\"\"\"\n7 1\n30 270 995 996 997 998 999\n\"\"\") == \"2 570\"\nassert solution(\"\"\"\n7 2\n30 270 995 996 997 998 999\n\"\"\") == \"0 0\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7 0\n30 270 995 996 997 998 999\n\"\"\") == \"2 330\"\nassert solution(\"\"\"7 1\n30 270 995 996 997 998 999\n\"\"\") == \"2 570\"\nassert solution(\"\"\"7 2\n30 270 995 996 997 998 999\n\"\"\") == \"0 0\"\nassert solution(\"\"\"7 3\n30 270 995 996 997 998 999\n\"\"\") == \"0 0\""
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2 330\"\nassert solution() == \"2 570\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\nassert solution('ghijklmnopqrstuvwxyz') == '26'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"1\"\nassert solution(\"abababa\") == \"2\"\nassert solution(\"aabbaaa\") == \"5\"\nassert solution(\"abbbaaabbabaabaa\") == \"4\"\nassert solution(\"abbbabababbababa\") == \"3\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aa\") == \"2\"\nassert solution(\"aaa\") == \"3\"\nassert solution(\"aaaaa\") == \"4\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"abccabbcaabc\") == \"3\"\nassert solution(\"abca\") == \"2\"\nassert solution(\"abca\") == \"2\"\nassert solution(\"\") == \"1\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n\"\"\""
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\n\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\n\nassert solution('''\n3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0\n'''\n\nlines = stdin.readlines()\nM, N = map(int, lines[0].split())\ntimes = list(map(int, lines[1].split()))\ndistances = list(map(int, lines[2].split()))\n\ncounts = []\ncur = 0\nfor i in range(1, len(distances) + 1):\n    cur += distances[i - 1]\n    counts.append(cur)"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0\\n1\\n2'\nassert solution('''6 2\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0'"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\""
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0\\n1\\n'''"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 12') == '2'\nassert solution('5 10') == '1'\nassert solution('3 6') == '1'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 12') == '2'\nassert solution('5 10') == '1'\nassert solution('3 6') == '1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(f\"{sys.stdin.read()}\") == \"1 2\"\nassert solution(f\"{sys.stdin.read()}\") == \"1 2\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 12') == '2'\nassert solution('5 10') == '1'\nassert solution('3 6') == '1'"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '1'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5551212\n5519876\n5055555''') == '0'\nassert solution('''\n5551212\n5519876\n5055555\n''') == '1'\nassert solution('''\n5551212\n5519876\n5055555\n''') == '1'\nassert solution('''\n5551212\n5519876\n5055555\n''') == '1'\nassert solution('''\n5551212\n5519876\n5055555\n''') == '1'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5551212\n''') == '1'\nassert solution('''\n5055555\n''') == '0'\n\"\"\""
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\""
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\""
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5551212\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5519876\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5055555\n\"\"\"\n) == \"0\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n\n\n\"\"\"\n\n\nimport unittest\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5551212\\n') == '1'\nassert solution('5519876\\n') == '0'\nassert solution('5055555\\n') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\"\"\""
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-40/1') == '-40/1'\nassert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''33/1''') == '5/9'''\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_standard) == \"0/1\"\nassert solution(input_dev) == \"5/9\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"-32/1\") == \"-4/3\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\""
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"40/1\") == \"40/1\"\nassert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Retrograde'\nassert solution('11') == 'Inversion'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == 'Inversion'\nassert solution('10') == 'Nonsense'\nassert solution('5') == 'Nonsense'\nassert solution('2') == 'Transposition'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Transposition'\nassert solution('7') == 'Inversion'\nassert solution('7') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nC E G\\nD F# A\\n') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('5\\nA E A E A E A\\n') == 'Retrograde'"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nC E G\\nD F# A\\n') == 'Transposition'\nassert solution('2\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('3\\nC E G\\nD F# A\\n') == 'Nonsense'\nassert solution('3\\nA B C D E F G\\nG F E D C B A\\n') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nC E G\nD F# A\n\"\"\") == \"Transposition\"\nassert solution(\"\"\"\n7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Inversion\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''I love ba-na-na\nSample Output 1:\nGah kove bababa\n\nSample Input 2:\nCat-a-pil-lar\nSample Output 2:\nCatacillar\n\nSample Input 3:\nCo-ding is the best\nSample Output 3:\nCociccah gs the bestuh''') == '''Gah kove bababa\n\nSample Input 4:\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.'''.splitlines()"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Catacillar\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == 'Gah kove bababa'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n\nimport io\nimport sys\n\nsys.stdin = open('input.txt')\n\nsys.stdin = io.StringIO(input().strip())"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''I love ba-na-na\n\nCat-a-pil-lar''') == 'Gah kove bababa'\nassert solution('''I love ba-na-na\n\nCat-a-pil-lar''') == 'Catacillar'"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\nassert solution(\"This is a test\") == \"This is a taht\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''I love ba-na-na\n    Cat-a-pil-lar''') == 'Gah kove bababa'\nassert solution('''Co-ding is the best\n    Catacillar''') == 'Cociccah gs the bestuh'\n'''\n\nimport sys\nfrom typing import List, Tuple"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '9'\nassert solution('4') == '16'\nprint('Done')\n\"\"\""
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == '6'\nassert solution('''\n4\n''') == '16'\nassert solution('''\n3\n''') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n4\n''') == '6'\nassert solution('''4\n''') == '16'\n'''"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\"\"\""
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"10\") == \"6\"\nassert solution(\"1\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n''') == '6'\n\nassert solution('''\n4\n''') == '16'\n\nassert solution('''\n3\n''') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 3 4 5\\n\"\n    ) == \"3\\n\"\nassert solution(\n    \"5 10\\n\"\n    \"4 8 1 9 7\\n\"\n    ) == \"2\\n\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 3 4 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 10\n4 8 1 9 7\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 20\n1 3 2 5 7 7 8 8 8 9 8 10 7 11 7 12 7 13 7 14 7 15 7 16 7 17 7 18 7 19 7\n\"\"\") == \"17\""
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution_2() == '4'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('''\n3 6\n1 2 3 4 5\n''') == '3'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\""
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 10\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '4'\nassert solution('''4 10\n1 3 1 7\n''') == '4'"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n1 0 0\n1 0 1\n\"\"\") == \"possible\"\n\nassert solution(\"\"\"\n4 2\n1 0 0\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n''') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\""
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1 2\n0 1 0\n1 0 0\n\"\"\") == \"impossible\""
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"2 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n0 0 0\\n1 0 1\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == 'possible'\n\"\"\""
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.0\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''2 3''') == '1.875'\nassert solution('''6 2''') == '4.25'\nprint('All tests passed!')\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n2 3\n1 1\n2 2''') == '1.875'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\nprint(solution(input()))\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 0\\n') == '0 0'\nassert solution('4 2 7\\n') == '1 4'\nassert solution('3 0 0\\n') == '1 6'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 0\n''') == '1 4\nassert solution('''4 2 7\n''') == '1 4\nassert solution('''3 1 0\n''') == '0 0\n''')"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 1 0\"\"\") == \"0 0\"\nassert solution(\"\"\"4 2 7\"\"\") == \"1 4\"\nassert solution(\"\"\"3 0 0\"\"\") == \"1 6\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2 1'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nprint('all tests passed')\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n\nprint(solution(*list(map(int, input().split()))))\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1', 'First sample'\nassert solution('''4\nBWWB\nWBWB\nWBBW\nBWBW\n''') == '0', 'Second sample'\nassert solution('''5\nBWBWB\nWBBWB\nWBWBW\nWBWBW\n''') == '0', 'Third sample'\nassert solution('''6\nBWWB\nWBBW\nWBBW\nBWBW\nBWBW\nWWBW\n''') == '0', 'Fourth sample'\nassert solution('''8\nBWBWB\nWBWBWB\nWBBWBW\nBWBWBW\nWBBWBW\nWBWBWB\nWBWBWB\n''') == '0', 'Fifth sample'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''4\nBWWB\nWBWB\nWBBW\nBWBW''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nWBWB\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWBW\\nWBWB\\nWBBW\\nBWBW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\""
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"4\\nWBBW\") == \"1\"\nassert solution(\"4\\nWBWB\") == \"1\"\nassert solution(\"4\\nBWWB\") == \"0\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nWBWB\\nWBWB\\nWBBW\\nWBBW\") == \"1\\n\", \"First\"\nassert solution(\"4\\nWBWB\\nWBWB\\nWBBW\\nWBBW\") == \"0\\n\", \"Second\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nWBBWBW\\nWWBWBB\") == \"0\\n\", \"Third\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('4\\nBBWWB\\nWBWBWB\\nWBBWBW\\nBWWBBW\\nBWWBBW\\nWWBWBB\\n') == '0'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1'\nassert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 4'\nassert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 7'\nassert solution('6\\n3 2 1 2\\n4 7 3 4\\n3 4 1 3\\n2 1 1 3\\n2 4 5 8') == '3 4'"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 2\\n3 4\"\nassert solution(\"1\") == \"2 1\"\nassert solution(\"2\") == \"3 4\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1 2\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3 4'\nassert solution('4 1') == '3 2'\nassert solution('4 4') == '3 2'\nassert solution('3 4') == '3 2'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 4'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 2'"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 7'\nassert solution('''\n1\n2\n1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 2'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 2'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '2 3'\nassert solution('1 4 5 8') == '7 2'\n\nstdin = '5'\nprint(solution(stdin))\n\nstdin = '1 2 1 2'\nprint(solution(stdin))"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n\nassert solution('''5\n1 1 1 1\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n\nassert solution('''5\n1 1 1 1\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n\nassert solution('''5\n1 1 1 1\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'true'\nassert solution('-4') == 'true'\nassert solution('1,2') == 'false'\nassert solution('-1,2') == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[3,2,0,-4]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1]\") == \"false\"\nassert solution(\"\") == \"false\"\nassert solution(\"[3,2,0,-4,null,1]\") == \"true\"\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3,2,0,-4], 1) == 'true'\nassert solution([1,2], 0) == 'true'\nassert solution([1], -1) == 'false'\nassert solution([], -1) == 'false'"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'false'\nassert solution([]) == 'false'"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4]) == \"true\"\nassert solution([1,2]) == \"true\"\nassert solution([1]) == \"true\"\nassert solution(\"\") == \"false\"\nassert solution([]) == \"false\""
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n''') == 'true'\nassert solution('''\n[1]\n0\n''') == 'true'\nassert solution('''\n[1]\n-1\n''') == 'false'"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n[1,2]\n-1\n''') == 'true'\nassert solution('''\n[3,2,0,-4]\n1\n''') == 'true'\nassert solution('''\n[1]\n0\n''') == 'false'\nassert solution('''\n[]\n-1\n''') == 'false'"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4]) == \"true\"\nassert solution([1,2]) == \"true\"\nassert solution([1]) == \"false\"\nassert solution(\"\") == \"false\""
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\nassert solution([4, 3, 2, 3, 5, 2, 4, 2], 6) == [3, 4]\nassert solution([1, 2, 4, 8, 16], 12) == [0, 1]\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 1\""
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '''\n0, 1'''\n\nassert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '''\n0, 1'''\n\nassert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '''\n0, 1'''\n\nassert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '''\n0, 1'''\n\nassert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '''\n0, 1'''"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1], \"test 1 failed\"\nassert solution([1, 2, 3], 0) == [], \"test 2 failed\"\nassert solution([2, 7, 11, 15], 5) == [1, 2], \"test 3 failed\"\nassert solution([2, 7, 11, 15], 9) == [0, 1], \"test 4 failed\""
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n7\n11\n15''') == '0 1'\nprint('Okay!')\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n[2, 7, 11, 15]\n9\n\"\"\") == \"0 1\""
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4, 5, 6') == '[0, 1]'\nassert solution('8, 9, 10') == '[0, 2]'\nassert solution('4, 5, 6, 7') == '[0, 1, 2]'\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 7 11 15') == \"0 1\"\nassert solution('9 8 5 12') == \"2 3\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n7\\n11\\n15') == '0 1'\n\nSample Test case\nInput\n[\"Solution\", \"solution\", \"array\", \"target\", \"solution\"]\n[[2, 7, 11, 15], [], [1, 2, 3, 4, 6], 6, [2, 3]]\nOutput\n[\"False\\nFalse\\nFalse\\nFalse\", \"2\\n7\\n11\\n15\", \"1\\n2\\n3\\n4\\n6\"]"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2, 7, 11, 15') == '0 1'\n\"\"\"\nimport sys\n\ninput_lines = sys.stdin.readlines()\nnums = [int(line) for line in input_lines]\ntarget = int(input_lines[-1])\nfor i in range(len(nums)-1):\n    for j in range(i+1, len(nums)):\n        if nums[i] + nums[j] == target:\n            return '{} {}'.format(i, j)\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nprint('YOUR ANSWER:', solution())\nassert stdin == '3\\n'\n\nimport codewars_test as test\n\n\ntest.it(\"Basic tests\")\ntest.assert_equals(solution(''), '0')\ntest.assert_equals(solution('2\\n'), '1')\ntest.assert_equals(solution('5\\n'), '1')\ntest."
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"6\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('1000') == '3'"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '1'\n\nassert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"5\\n\") == \"2\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 2 1\\n7') == '4'\nassert solution('2\\n3 6 1\\n3') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('1 2 2 1') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2 2 1') == \"4\"\nassert solution('1\\n3 7') == \"impossible\"\nprint(solution(input))"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n2\\n\") == \"4\"\nassert solution(\"1\\n1\\n1\\n1\\n2\\n\") == \"impossible\"\nassert solution(\"1\\n4\\n3\\n2\\n2\\n\") == \"impossible\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"1\") == \"4\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == \"4\"\nassert solution('''\n1\n3 7\n''') == \"impossible\""
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == '4'\nassert solution('''\n1\n3 7\n''') == 'impossible'\nassert solution('''\n3\n2 2 1 3 3 3\n''') == '5'\nassert solution('''\n1\n2 2 2 1 1\n''') == 'impossible'\nassert solution('''\n1\n3 7\n''') == 'impossible'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'impossible'\nassert solution('3\\n1 7') == 'impossible'\nassert solution('4\\n3 7') == '4'\nassert solution('5\\n2 2 2 2 2') == 'impossible'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2 2 2 1\n''') == 'impossible'\nassert solution('''\n1\n3 7\n''') == '4'"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''184 1\n123450995 1\n''') == '180'\nassert solution('''123450995 1\n''') == '123451000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '5'\nassert solution('123450995 1') == '123451000'"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1804 1\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'\nprint('You are a genious programmer!')\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123450995 1') == '123451000'\n\nassert solution('18000 1') == '18000'\n\nassert solution('6449 1') == '6450'\n\nassert solution('20809 1') == '2081'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"184 1\") == \"180\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('183 1') == '180'\nassert solution('123450995 1') == '123451000'"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8311\n''') == '7982'\nassert solution('''\n35891\n''') == '36880'\nassert solution('''\n122345\n''') == '122345'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"184 1\") == \"180\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([185, 1]) == \"180\"\nassert solution([12345995, 1]) == \"123451000\"\nassert solution([123450995, 1]) == \"123451000\"\n\nassert solution([1, 1]) == \"1\"\nassert solution([1, 0]) == \"1\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'\nassert solution('''\n19 0\n''') == '19'\nassert solution('''\n0 0\n''') == '0'\nassert solution('''\n1000 1000\n''') == '1000'\n''') == '5'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3') == '0.000000'\nassert solution('1') == '0.000000'\nassert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '1.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1') == '0.000000'\nassert solution('2\\n2 2') == '0.000000'\nassert solution('3\\n3 3') == '0.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1') == '0.000000'\nassert solution('2\\n0 1') == '1.000000'\nassert solution('2\\n1 2') == '2.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 3') == '0.000000'\n\n\"\"\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.0'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '1.0'\nassert solution('10\\n0 0\\n1 1\\n1 0\\n0 0\\n0 0\\n0 0\\n1 0\\n0 0\\n1 1\\n1 0\\n0 0\\n1 1\\n0 0\\n0 0') == '9.999999999'\nassert solution('10\\n0 0\\n1 0\\n1 0\\n1 1\\n1 0\\n0 0\\n0 0\\n1 0\\n0 0') == '2.0'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('3') == '0.000000'\n\n---"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000000'\nassert solution('2 2') == '0.000000'\nassert solution('3 3') == '0.000000'\nassert solution('1 0') == '0.750000'\nassert solution('1 1') == '1.000000'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1 2 3 4'\nassert solution('8') == '1 2 3 4 6 8'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == '1'\nassert solution(samples[1]) == '2'\nassert solution(samples[2]) == '6'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4\\n2 1 3\\n2 3 6\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1''') == '1\\n2\\n4\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1 2'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '2 4 6 8 1'"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"1 2 4 6 8\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n1 1 2 2 3 2 2 2 2 2\n1 2 2 3 3 4 2 4 3 3\n1 3 4 4 3 2 2 3 2 2\n1 4 4 3 2 3 3 2 4 1\n1 5 5 5 5 5 5 5 5 5\n1 6 6 6 6 6 6 6 6 6\n1 7 7 7 7 7 7 7 7 7\n1 8 8 8 8 8 8 8 8 8\n1 9 9 9 9 9 9 9 9 9\n''') == '1 6 7 8 9'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"1 2 4 6 8\""
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n2\\n6\\n8\""
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"15 12 15\") == \"432\"\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 2''') == '60'\nassert solution('''1 2 1''') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\") == \"8\"\nassert solution(\"5 5 5\") == \"60\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"20 20 20\") == \"100\"\nassert solution(\"1 1 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 5\n2 2 2''') == '8'\n\nassert solution('''3 1 2\n2 2 3''') == '7'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2\n2\n''') == '4'\nassert solution('''\n2\n1\n1\n''') == '3'\nassert solution('''\n2\n2\n2\n''') == '6'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"60\""
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6666666666666667'\nassert solution('''\n1\n1 2 1\n''') == '1.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n1 -1 4') == '2.5'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"\n5\n4 -1 2 0 3\n\"\"\") == \"2.50000\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2.5'\n\"\"\""
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1.6666666666666667'\nassert solution('3 2 0') == '1.66666667'\nassert solution('3 3 2 -1') == '2.5'\nassert solution('3 0 3 2') == '2.333333333333333'\nassert solution('3 0 2 0') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 -1 4') == '2.5'\nassert solution('3') == '1.0'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n3 0 2\n\"\"\") == \"1.66666667\"\nassert solution(\"\"\"\n3\n1 -1 4\n\"\"\") == \"2.50000\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 0 2\nSample Output 1:\n1.6666666666666667\n\nSample Input 2:\n4\n1 -1 4 2\nSample Output 2:\n1.6666666666666667\n''') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\\n\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\\n\") == \"2.5\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3 0 2\\n\"\n    \"Sample Input 2:3\\n\"\n    \"1 -1 4\"\n    \"Sample Output 2:2.5\") == \"2.5\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6'\nassert solution('15 12') == '7'\nassert solution('3') == '3'"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10') == '5'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '3'\nassert solution('100 8') == '10'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '3'\nassert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '6'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 5') == '10'\nassert solution('1 1') == '1'\nassert solution('5 2') == '3'\nassert solution('5 3') == '5'\nassert solution('15 10') == '10'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n') == '7'\nassert solution('7 12\\n') == '7'\nprint('\"Run\" is good. Great job!')"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '7'\n\"\"\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1.2 3 4 5\n''') == '1'\nassert solution('''\n9.5 9.6 9.7\n''') == '0'\nassert solution('''\n1 2\n''') == '0'\nassert solution('''\n10.2 10.3 10.4\n''') == '0'\nassert solution('''\n0.8 0.9 0.2 0.4 0.5 0.6\n''') == '6'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8') == '1'\nassert solution('123864 123865') == '0'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"1\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n123456\n123457\n123458\n123459\n123460\n123461\n123462\n123463\n123464\n123465\n123466\n123467\n123468\n123469\n123457\"\"\") == \"1\"\nassert solution(\n\"\"\"\n123456\n123457\n123458\n123459\n123460\n123461\n123462\n123463\n123464\n123465\n123466\n123467\n123468\n123469\n123457\"\"\") == \"1\"\nassert solution(\n\"\"\"\n123456\n123457\n123458\n123459\n123460\n123461\n123462\n123463\n123464\n123465\n123466\n123467\n123468\n123469\n123457\"\"\") == \"1\"\nassert solution(\n\"\"\"\n123456\n123457\n123458\n123459\n123460\n123461\n123462\n123463\n123464\n123465\n123466\n123467\n123468\n123469\n123457\"\"\") == \"1\"\nassert solution(\n\"\"\"\n123456\n123457\n123458\n123459\n123460\n123461\n123462\n123463\n123464\n123465\n123466\n123467\n123468\n123469\n123457\"\"\") == \"1\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('4') == '0.0'\nassert solution('5') == '0.0'\nassert solution('6') == '0.0'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n\nassert solution('3') == '0.49999999'\n\"\"\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('9') == '0.0000'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n\"\"\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0.66666667\"\nprint(solution(input()))\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n\n'''"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"single 10\"\nassert solution() == \"double 9\"\nassert solution() == \"triple 20\""
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('12') =='single 12'"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n20\n96\n\"\"\") == \"\"\"triple 19\nsingle 9\n\"\"\".strip()\n\nassert solution(\"\"\"\n180\n\"\"\") == \"\"\"impossible\"\"\".strip()\n\nassert solution(\"\"\"\n15\n80\n\"\"\") == \"\"\"triple 20\ntriple 20\n\"\"\".strip()\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('180') == \"triple 20\"\nassert solution('96') == \"triple 19\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''180\nSample Input 2:\n96\nSample Output 2:\ntriple 19\ndouble 15\nsingle 9\n''') == 'triple 19\\ndouble 15\\nsingle 9'''\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n''') == 'impossible'\nassert solution('''\n6\n''') =='single 6'\nassert solution('''\n7\n''') == 'triple 7'\nassert solution('''\n20\n''') =='single 20'\nassert solution('''\n95\n''') == 'triple 19'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 4 7''') == '168'\nassert solution('''5 2 2''') == '36'\nprint(solution())\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 2''') == '36'\nassert solution('''10 4 7''') == '168'\nassert solution('''5 2 5''') == '105'\nassert solution('''4 3 4''') == '16'\nassert solution('''10 10 10''') == '40'"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\") == \"36\"\nassert solution(\"10 4 7\") == \"168\"\nassert solution(\"20 5 3\") == \"105\"\nassert solution(\"30 2 3\") == \"270\"\nassert solution(\"40 3 2\") == \"80\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"18\"\nassert solution(\"10 4 7\\n\") == \"168\"\nassert solution(\"5 2 2\\n\") == \"36\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 4 7\") == \"168\"\nassert solution(\n    \"5 2 2\") == \"36\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 10\nSample Input 3:\n2\n4 5\n1 2\nSample Output 3:\n1\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\"\n\"\"\"\n\nn = int(input())\ningredients = {}\nfor i in range(n):\n    sour = int(input())\n    biter = int(input())\n    ingredients[i+1] = (sour,biter)\n\ndiff = 100000000000\nfor i in ingredients:\n    diff = min(diff, abs(ingredients[i][0]-ingredients[i][1]))\nprint(diff)"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '7'\nassert solution('2 3') == '1'\n\n-------------------------------------------------------\nWhat is this code?\n1. 4 lines of code!\n2. 3 lines of code!\n3. 2 lines of code!\n4. 1 line of code!\n\nWhat does this code do?\n1. 4 lines of code!\n2. 3 lines of code!\n3. 2 lines of code!\n4. 1 line of code!\n\nWhat are the data structures and functions I need in order to complete this problem?\n1. a list of integers, where each index represents an ingredient\n2. an integer, to be used as the base for each ingredient's sourness and bitterness\n3. a set, where each index represents an ingredient\n4. a dictionary, where each key is an ingredient, and each value is another dictionary, with 2 keys,\n    whose values are the respective values for the sourness and bitterness of that particular ingredient\n5. a function, which takes the integer sourness, and the integer bitterness as arguments\n6. a function, which takes the integer sourness and the integer bitterness as arguments\n7. a function, which takes the integer sourness and the integer bitterness as arguments\n8. a function, which takes the integer sourness and the integer bitterness as arguments\n9. a function, which takes the integer sourness and the integer bitterness as arguments\n10. a function, which takes the integer sourness and the integer bitterness as arguments\n11. a function, which takes the integer sourness and the integer bitterness as arguments\n12. a function, which takes the integer sourness and the integer bitterness as arguments\n13. a function, which takes the integer sourness and the integer bitterness as arguments\n14. a function, which takes the integer sourness and the integer bitterness as arguments\n15. a function, which takes the integer sourness and the integer bitterness as arguments\n16. a function, which takes the integer sourness and the integer bitterness as arguments\n17. a function, which takes the integer sourness and the integer bitterness as arguments\n18. a function, which takes the integer sourness and the integer bitterness as arguments\n19. a function, which takes the integer sourness and the integer bitterness as arguments\n20. a function, which takes the integer sourness and the integer bitterness as arguments\n21. a function, which takes the integer sourness and the integer bitterness as arguments\n22. a function, which takes the integer sourness and the integer bitterness as arguments\n23. a function, which takes the integer sourness and the integer bitterness as arguments\n24. a function, which takes the integer sourness and the integer bitterness as arguments\n25. a function, which takes the integer sourness and the integer bitterness as arguments\n26. a function, which takes the integer sourness and the integer bitterness as arguments\n27. a function, which takes the integer sourness and the integer bitterness as arguments\n28. a function, which takes the integer sourness and the integer bitterness as arguments\n29. a function, which takes the integer sourness and the integer bitterness as arguments\n30. a function, which takes the integer sourness and the integer bitterness as arguments\n\nSolution:\n1. we can create an empty list of integers using the range function\n2. we can create an empty dictionary using the defaultdict function\n3. we can create an empty set using the set function\n4. we can create an empty dictionary using the defaultdict function\n5. we can create a function using the lambda function\n6. we can create a function using the lambda function\n7. we can create a function using the lambda function\n8. we can create a function using the lambda function\n9. we can create a function using the lambda function\n10. we can create a function using the lambda function\n11. we can create a function using the lambda function\n12. we can create a function using the lambda function\n13. we can create a function using the lambda function\n14. we can create a function using the lambda function\n15. we can create a function using the lambda function\n16. we can create a function using the lambda function\n17. we can create a function using the lambda function\n18. we can create a function using the lambda function\n19. we can create a function using the lambda function\n20. we can create a function using the lambda function\n21. we can create a function using the lambda function\n22. we can create a function using the lambda function\n23. we can create a function using the lambda function\n24. we can create a function using the lambda function\n25. we can create a function using the lambda function\n26. we can create a function using the lambda function\n27. we can create a function using the lambda function\n28. we can create a function using the lambda function\n29. we can create a function using the lambda function\n30. we can create a function using the lambda function\n\nBONUS:\n1. we can import modules in Python\n2. we can import modules in Python\n3. we can import modules in Python\n4. we can import modules in Python\n5. we can import modules in Python\n6. we can import modules in Python\n7. we can import modules in Python\n8. we can import modules in Python\n9. we can import modules in Python\n10. we can import modules in Python\n11. we can import modules in Python\n12. we can import modules in Python\n13. we can import modules in Python\n14. we can import modules in Python\n15. we can import modules in Python\n16. we can import modules in Python\n17. we can import modules in Python\n18. we can import modules in Python\n19. we can import modules in Python\n20. we can import modules in Python\n21. we can import modules in Python\n22. we can import modules in Python\n23. we can import modules in Python\n24. we can import modules in Python\n25. we can import modules in Python\n26. we can import modules in Python\n27. we can import modules in Python\n28. we can import modules in Python\n29. we can import modules in Python\n30. we can import modules in Python\n\nExercise:\nWrite a function that takes in an integer and returns the absolute difference between its sum and its product.\n\nExample 1:\n\nInput: 5\nOutput: 1\nExample 2:\n\nInput: 8\nOutput: 0\nExample 3:\n\nInput: 14\nOutput: 3\nExplanation: 14 = 1 + 3 + 5\n'''\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    10\n    1 3\n    2 5\n    3 9\n    4 5\n    5 10\n    6 6\n    7 8\n    8 1\n    9 8\n    10 7\n    11 4\n    12 5\n    13 7\n    14 5\n    15 8\n    16 9\n    17 6\n    18 8\n    19 7\n    20 9\n    21 4\n    22 5\n    23 7\n    24 6\n    25 5\n    26 7\n    27 9\n    28 10\n    29 9\n    30 7\n    31 4\n    32 5\n    33 8\n    34 9\n    35 5\n    36 6\n    37 7\n    38 8\n    39 7\n    40 9\n    41 7\n    42 9\n    43 7\n    44 9\n    45 7\n    46 6\n    47 8\n    48 9\n    49 9\n    50 7\n    51 9\n    52 7\n    53 8\n    54 9\n    55 6\n    56 9\n    57 9\n    58 7\n    59 9\n    60 9\n    61 9\n    62 8\n    63 9\n    64 6\n    65 8\n    66 9\n    67 9\n    68 8\n    69 9\n    70 7\n    71 9\n    72 7\n    73 8\n    74 9\n    75 9\n    76 6\n    77 8\n    78 8\n    79 8\n    80 7\n    81 9\n    82 9\n    83 7\n    84 9\n    85 9\n    86 7\n    87 9\n    88 9\n    89 7\n    90 9\n    91 7\n    92 8\n    93 9\n    94 7\n    95 8\n    96 8\n    97 7\n    98 8\n    99 7\n    100 7\n    101 4\n    102 5\n    103 7\n    104 5\n    105 8\n    106 5\n    107 8\n    108 5\n    109 7\n    110 5\n    111 8\n    112 9\n    113 8\n    114 8\n    115 8\n    116 7\n    117 7\n    118 7\n    119 7\n    120 8\n    121 7\n    122 7\n    123 8\n    124 8\n    125 7\n    126 7\n    127 7\n    128 7\n    129 7\n    130 7\n    131 7\n    132 7\n    133 7\n    134 7\n    135 7\n    136 7\n    137 7\n    138 7\n    139 7\n    140 7\n    141 7\n    142 7\n    143 7\n    144 7\n    145 7\n    146 7\n    147 7\n    148 7\n    149 7\n    150 7\n    151 7\n    152 7\n    153 7\n    154 7\n    155 7\n    156 7\n    157 7\n    158 7\n    159 7\n    160 7\n    161 7\n    162 7\n    163 7\n    164 7\n    165 7\n    166 7\n    167 7\n    168 7\n    169 7\n    170 7\n    171 7\n    172 7\n    173 7\n    174 7\n    175 7\n    176 7\n    177 7\n    178 7\n    179 7\n    180 7\n    181 7\n    182 7\n    183 7\n    184 7\n    185 7\n    186 7\n    187 7\n    188 7\n    189 7\n    190 7\n    191 7\n    192 7\n    193 7\n    194 7\n    195 7\n    196 7\n    197 7\n    198 7\n    199 7\n    200 7\n    201 7\n    202 7\n    203 7\n    204 7\n    205 7\n    206 7\n    207 7\n    208 7\n    209 7\n    210 7\n    211 7\n    212 7\n    213 7\n    214 7\n    215 7\n    216 7\n    217 7\n    218 7\n    219 7\n    220 7\n    221 7\n    222 7\n    223 7\n    224 7\n    225 7\n    226 7\n    227 7\n    228 7\n    229 7\n    230 7\n    231 7\n    232 7\n    233 7\n    234 7\n    235 7\n    236 7\n    237 7\n    238 7\n    239 7\n    240 7\n    241 7\n    242 7\n    243 7\n    244 7\n    245 7\n    246 7\n    247 7\n    248 7\n    249 7\n    250 7\n    251 7\n    252 7\n    253 7\n    254 7\n    255 7\n    256 7\n    257 7\n    258 7\n    259 7\n    260 7\n    261 7\n    262 7\n    263 7\n    264 7\n    265 7\n    266 7\n    267 7\n    268 7\n    269 7\n    270 7\n    271 7\n    272 7\n    273 7\n    274 7\n    275 7\n    276 7\n    277 7\n    278 7\n    279 7\n    280 7\n    281 7\n    282 7\n    283 7\n    284 7\n    285 7\n    286 7\n    287 7\n    288 7\n    289 7\n    290 7\n    291 7\n    292 7\n    293 7\n    294 7\n    295 7\n    296 7\n    297 7\n    298 7\n    299 7\n    300 7\n    301 7\n    302 7\n    303 7\n    304 7\n    305 7\n    306 7\n    307 7\n    308 7\n    309 7\n    310 7\n    311 7\n    312 7\n    313 7\n    314 7\n    315 7\n    316 7\n    317 7\n    318 7\n    319 7\n    320 7\n    321 7\n    322 7\n    323 7\n    324 7\n    325 7\n    326 7\n    327 7\n    328 7\n    329 7\n    330 7\n    331 7\n    332 7\n    333 7\n    334 7\n    335 7\n    336 7\n    337 7\n    338 7\n    339 7\n    340 7\n    341 7\n    342 7\n    343 7\n    344 7\n    345 7\n    346 7\n    347 7\n    348 7\n    349 7\n    350 7\n    351 7\n    352 7\n    353 7\n    354 7\n    355 7\n    356 7\n    357 7\n    358 7\n    359 7\n    360 7\n    361 7\n    362 7\n    363 7\n    364 7\n    365 7\n    366 7\n    367 7\n    368 7\n    369 7\n    370 7\n    371 7\n    372 7\n    373 7\n    374 7\n    375 7\n    376 7\n    377 7\n    378 7\n    379 7\n    380 7\n    381 7\n    382 7\n    383 7\n    384 7\n    385 7\n    386 7\n    387 7\n    388 7\n    389 7\n    390 7\n    391 7\n    392 7\n    393 7\n    394 7\n    395 7\n    396 7\n    397 7\n    398 7\n    399 7\n    400 7\n    401 7\n    402 7\n    403 7\n    404 7\n    405 7\n    406 7\n    407 7\n    408 7\n    409 7\n    410 7\n    411 7\n    412 7\n    413 7\n    414 7\n    415 7\n    416 7\n    417 7\n    418 7\n    419 7\n    420 7\n    421 7\n    422 7\n    423 7"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 10, 5, 8]) == 7\nassert solution([3, 8, 5, 8]) == 1\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 10\\n5 8\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"\nassert solution(\"3\\n2 7\\n2 9\") == \"2\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3 8\n5 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n1 10\n2 6\n3 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \"smile.\"\nassert solution(\"2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\n raise your right hand.\n raise your left hand.\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nSimon says raise your right hand.\\nLower your right hand.') == 'raise your right hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nSimon says lower your left hand.\nSimon says raise your right hand.\nSimon says smile.\n''') == '''\n raise your left hand.\n raise your right hand.\n smile'''\n\nassert solution('''\n1\nSimon says raise your left hand.\nSimon says smile.\n''') == '''\n raise your left hand.\n smile'''\n\nassert solution('''\n2\nSimon says raise your right hand.\nSimon says raise your left hand.\n''') == '''\n raise your left hand.\n raise your right hand'''\n\nassert solution('''\n1\nSimon says raise your right hand.\nSimon says smile.\n''') == '''\n raise your right hand.\n smile'''\n\nassert solution('''\n1\nSimon says lower your left hand.\n''') == '''\n lower your left hand'''"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nSmiley: Hello\\nSimon says smile.\\n') =='Smiley: Hello'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\nraise your right hand.'\n\nstdin = \"\"\"\n1\nSimon says smile.\n\"\"\"\n\nstdout = \"\"\"\n smile.\n\"\"\"\n\nassert stdout == solution(stdin)\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.'\nassert solution('2\\nSimon says raise your right hand.') =='raise your right hand.'"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nSimon says raise your left hand.') == 'raise your left hand.'\nassert solution('2\\nraise your right hand.') == 'raise your right hand.'\nassert solution('3\\nlower your left hand.') == 'lower your left hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'raise your left hand.\\nraise your right hand.\\n'\nassert solution('1') =='smile.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\nSimon says smile.\n\n2\nSimon says how are you?\n\"\"\") == \" smile.\n\nassert solution(\"\"\"\n3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\nSample Output 2:\n raise your right hand.\n raise your left hand.\n\"\"\") == \" raise your left hand.\n\nassert solution(\"\"\"\n4\nSimon says start to play.\n\"\"\") == \" start to play.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"smile\"\nassert solution(\"2\") == \"raise your right hand\"\nassert solution(\"3\") == \"raise your left hand\""
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\nSimon says raise your left hand.\nLower your right hand.\nSimon says raise your right hand.\nSample Output 2:\n raise your left hand.\n raise your right hand.''') == 'raise your right hand.'\nassert solution('''1\nSimon says smile.\nSample Output 1:\n smile.''') =='smile.'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\n    \"1 2 4 6 10 12 16 18\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 6 10 12 16 18') == '5'\nprint(solution(input()))\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == \"5\"\nassert solution('1 2 4 6 10 12 16 18') == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 0 4 6 10 12 16 18''') == '5'\nassert solution('''1 2 4 6 10 12 16 18''') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 4 6 10 12 16 18') == '5'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '16'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '14'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '16'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == \"3\"\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == \"2\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4 1\\nA\\nA\\nG\\nT\\n') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\""
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4 1\\nA\\nA\\nG\\nT\\n') == '2'\nprint(solution(input()))"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4 1\\nA\\nA\\nG\\nT') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'\nassert solution('4 1') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == \"3\"\nassert solution('''4 1\nA\nA\nG\nT''') == \"2\""
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\nAA\\nAC\\n\") == \"0 1\\n1 2\\n2 3\"\nassert solution(\"5 1\\nAA\\nGT\\nAA\\nT\\n\") == \"1 3\\n0 1\\n0 2\\n0 3\\n1 4\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4 1\\nA\\nA\\nG\\nT') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1\nA\nA\nG\nT''') == '2'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a', \"First\"\nassert solution('ab') == '-1', \"Second\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\nassert solution('abb') == 'b'\nassert solution('abbba') == 'bba'\nassert solution('ababab') == 'abab'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\n\n------------------------------------------------------------------------------------------------------------------------"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\n\nstdin = \"\"\"\naab\nbba\n\"\"\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\""
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"a\"\nassert solution(\"bbb\") == \"-1\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20 100\n''') == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution('''\n2 3\n''') == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\""
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\") == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution(\"1\\n0\") == \"Dr. Chaz has enough chicken!\"\nassert solution(\"1\\n100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2\\n3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"20 100\\n\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\n    \"2 3\\n\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n\n\"\"\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n\") == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution(\"2\\n20\\n\") == \"Dr. Chaz has 80 pieces of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '-2'\nassert solution('3 5') == '0'\nassert solution('3 10') == '2'\nassert solution('3 30') == '0'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 10\\n2 2 2\\n3 2 1\") == \"-2\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\""
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\n\nassert solution('''\n2 100\n1 1 2\n2 2 2\n3 2 1\n''') == '-1'\n\nassert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '1'\n\nassert solution('''\n4 100\n1 1 1\n5 2 3\n5 2 1\n5 2 3\n''') == '2'\n\nassert solution('''\n3 100\n1 1 1\n2 2 2\n3 2 1\n''') == '1'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 10\") == '-2'\nassert solution(\"3 30\") == '0'"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '-2'\nassert solution('3 30') == '0'\n\n'''\n\nclass Solution:\n    def __init__(self):\n        self.test = False\n\n    def solution(self, stdin: str) -> str:\n        if self.test:\n            print(stdin)\n        n = int(stdin.splitlines()[0])\n        ans = 0\n        for i in range(1, n+1):\n            l, w, h = [int(x) for x in stdin.splitlines()[i].split()]\n            ans += l * w * h\n        return str(ans)"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nassert solution('3 1000\\n1 1 1\\n5 2 3\\n5 2 1\\n1000 1000') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 10\n1 1 2\n2 2 2''') == '-2'\nassert solution('''3 20\n1 1 2\n2 2 2\n3 2 1''') == '0'\nassert solution('''3 100\n1 1 2\n2 2 2\n3 2 1''') == '20'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"-2\"\nassert solution(\"3 10 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 30') == '0'\nassert solution('2 50') == '20'\nassert solution('4 10') == '-2'\nassert solution('8 10') == '10'\nassert solution('5 3 5') == '-1'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"luka\"\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"luka\"\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"luka\"\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"luka\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\n') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"as\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"\""
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ala'"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == 'as'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4 4\\n'\n    'luka\\n'\n    'o#a#\\n'\n    'kula\\n'\n    'i#a#\\n') == 'kala', 'wrong'\nassert solution(\n    '4 4\\n'\n    'luka\\n'\n    'o#a#\\n'\n    'kula\\n'\n    'i#as\\n') == 'as', 'wrong'\nassert solution(\n    '1 1\\n'\n    'a\\n'\n    'b\\n') == 'a', 'wrong'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'as'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == 'kala'\nassert solution('4 4') == 'as'"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\nassert solution('NSEWMMMMM') == '13'\n\"\"\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"WNESW\") == \"10\"\nassert solution(\"NSEW\") == \"4\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"NSEW\") == \"4\"\nassert solution(\"NNENWEENW\") == \"8\"\nassert solution(\"SSWW\") == \"2\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"NNEEN\") == \"N\"\nassert solution(\"NESW\") == \"N\"\nassert solution(\"ENW\") == \"NE\"\nassert solution(\"NNEW\") == \"N\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nN\nS\nE\n''') == 'NSEW'\nassert solution('''\nN\nN\n''') == 'NSEWN'\n''')\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"NSEW\") == \"4\"\nassert solution(\"WN\") == \"3\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"Wrong answer for stdin: '1 2 3 4'\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Wrong answer for stdin: '0 4 2 2'\"\nassert solution('0 0 0 0') == 'problems ahead', \"Wrong answer for stdin: '0 0 0 0'\"\nassert solution('0 0 0 0 0') == 'problems ahead', \"Wrong answer for stdin: '0 0 0 0 0'\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"Wrong answer\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Wrong answer\"\nassert solution('0 5 6 - 7') == '0 + 5 = 5 - 7', \"Wrong answer\"\nassert solution('0 0.5 6 - 7') == '0 + 0.5 = 0.5 - 7', \"Wrong answer\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\""
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"-1 4 2 2\") == \"0 + 4 = 2 * 2\"\nassert solution(\"4 2 1 2\") == \"0 + 4 = 2 * 2\"\nassert solution(\"2 -1 2 1\") == \"0 + 4 = 2 * 2\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\", solution(\"1 2 3 4\")\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\", solution(\"0 4 2 2\")\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\""
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\n\nstdin = \"\"\"\n10 5 3 2\n\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n0 4 2 2\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('4 3 2 5') == '4 / 2 = 3 * 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\nassert solution('''4 0 2 2''') == '4 * 0 = 2 - 2'\nassert solution('''2 2 2 2''') == '2 / 2 = 2 / 2'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"3.9.5.7.8.4.1.9.6.5.0.10.7.2.3.7.5.8.8.9.10.11.5.12.3.13.5.14.5.8.9.5.10.5.11.6.7.4.5.9.8.7.9.10.5.11.5.13.5.14.5.15.5.16.6.7.5.8.9.10.11.5.12.3.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13.5.14.5.15.5.16.7.5.8.9.10.11.5.13."
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '\\n'.join(['D...', 'M...', 'T...', 'A...', 'B...', 'M...', 'A...', 'D...'])"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''BANANA PIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA'''\n\n\"\"\""
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\""
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''BANANA PIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....'''\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\""
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 365\n20 28''') == '1'\nassert solution('''3\n10 14\n13 17\n25 26''') == '365'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '20'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"365\"\nassert solution(\"1 365\") == \"10\"\nassert solution(\"20 28\") == \"365\""
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n4\n1 2\n1 3\n2 4\n''') == '1'\nassert solution('''\n4\n1 2\n1 3\n2 4\n''') == '4'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\nassert solution([1, 5, 9, 12, 15]) == \"5\""
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\nassert solution([1, 365]) == \"365\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10'\nassert solution('2\\n1 365\\n20 28') == '365'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0 1'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\""
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nprint(solution(input()))\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nassert solution(\"4\") == \"2 3\"\n\"\"\""
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\""
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'A 100 49'\nprint(solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n'''))\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49'\nassert solution('''\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\nassert solution(\"\"\"\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\""
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'B 100 49'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"A 0 99\"\nassert solution(\"4 4\") == \"A 0 99\"\nassert solution(\"5 3\") == \"A 100 49\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\"\n) == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'B 100 50'\nassert solution('5 3') == 'B 100 49'\nassert solution('5 2 3') == 'A 1 197'\nassert solution('4 4') == 'A 0 99'\nassert solution('4 4') == 'A 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n'\nassert solution('10 7') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.167897437\\n'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '9'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '10'\nassert solution('5') == '39'\nassert solution('6') == '50'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nprint('all test cases passed')"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '168'\nassert solution('1') == '1'\n\"\"\""
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1\n4\n3\n''') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '16'\nassert solution('10') == '400'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2\\n1\\n4\\n3') == '168'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n5\\n3\\n2\\n4\\n') == '6'"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '168'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF'\nassert solution('''\n2 3\nBCD\nEFGH\n2\n''') == 'DCBAEF'\nassert solution('''\n2 2\nDEFG\nHIJK\n''') == 'DFGHIK'\n'''\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\", \"First\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\", \"Second\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF', solution('3 3\\nABC\\nDEF\\n0')\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF', solution('3 3\\nABC\\nDEF\\n2')\nassert solution('5 3\\nABS\\nBCD\\nEFG\\nHIJ\\nKLM\\nNOP\\nQRS\\nTUV\\nWXY\\nZYX') == 'QRSTUVWXYZ', solution('5 3\\nABS\\nBCD\\nEFG\\nHIJ\\nKLM\\nNOP\\nQRS\\nTUV\\nWXY\\nZYX')\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF'"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\nABC\nDEF\n0\n''') == 'CBADEF'\nassert solution('''3 3\nABC\nDEF\n1\n''') == 'CDBEAF'\nassert solution('''3 3\nABC\nDEF\n2\n''') == 'CDBEAF'\nassert solution('''2\n7\nAABC\nCCC\n''') == 'DDCCBAABCCC'\nassert solution('''2\n2\nAB\nBA\n''') == 'ABDDDDDABA'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"CBADEF\"\nassert solution(\"3 3\") == \"CBADEF\""
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"CBADEF\"\nassert solution() == \"ABCDEFG\""
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\nABC\nDEF\n2\n''') == 'CBADEF', 'First'\nassert solution('''3 3\nABC\nDEF\n0\n''') == 'CDBEAF', 'Second'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'CBADEF'\nassert solution(input()) == 'CDBEAF'\nassert solution(input()) == 'ACDBAF'\nassert solution(input()) == 'ADCBEF'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5') == '1'\nassert solution('2\\n5') == '2'\nassert solution('3\\n5') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''2\n3\n100 T\n100 T\n100 T\n100 T\n100 T\n''') == '2'\nassert solution('''3\n2\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '3'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\n\n'''"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4', 'First'\n\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '1', 'Second'"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\n\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'''"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '5'\nassert solution('''\n2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\nSample Output 3:\n4\n''') == '4'\nprint('All tests passed!')"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\nSample Output 3:\n3\n''') == '2'\nassert solution('''4\n5\n100 T\n100 T\n100 T\n100 T\n100 N\nSample Output 4:\n4\n''') == '1'\nassert solution('''6\n5\n100 T\n100 T\n100 T\n100 T\n100 T\nSample Output 5:\n4\n''') == '1'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3'\nassert solution('6 8') == '22'\nassert solution('2 0') == '0'\nprint(\"\\u2713\")"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n\"\"\""
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4 3') == '4'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution([4, 3]) == '6'\nassert solution([6, 8]) == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '5'\nassert solution('10 2') == '10'\nassert solution('100 200') == '200'\nassert solution('1000000 100') == '1000000'\nprint('all tests passed')\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\nprint(solution(input()))\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '6'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n1 2 3\n6 5 4\n7 8 9\"\"\") == \"1\"\nassert solution(\"\"\"1 4\n4 3 2 1\nSample Input 3:\n4 3\n2 5 4\n1 2 3\n6 8 7\nSample Output 3:\n2\n\nSample Input 4:\n2 4\n3 1 1 1\n1 2 3\n1 1 1\nSample Output 4:\n2\n\nSample Input 5:\n10 10\n4 6 5 2 3 1 7 8 9\n4 3 2 1\nSample Output 5:\n3\n\nSample Input 6:\n3 4\n1 2 3\n1 2 3\n1 2 3\nSample Output 6:\n3\n\nSample Input 7:\n5 5\n1 2 3 4 5\n1 2 3 4 5\nSample Output 7:\n5\n\nSample Input 8:\n1\n2\nSample Output 8:\n1\n\nSample Input 9:\n1 4\n4 3 2 1\n1 2 3\n1 2 3\nSample Output 9:\n0\n\nSample Input 10:\n2 4\n3 1 1 1\n1 2 3\n1 2 3\nSample Output 10:\n2\n\nSample Input 11:\n1 1\n1 1\nSample Output 11:\n1\n\nSample Input 12:\n10 10\n1 2 3\n4 5 6\n7 8 9\nSample Output 12:\n4\n\"\"\") == \"1\""
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 3 2 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 3\\n4 3 2 1') == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 3\\n6 5 4') == '1'\nassert solution('6 7\\n1 5 3 2 8\\n2 1 4 3') == '0'\nassert solution('5 7\\n1 5 2 3 5 3\\n2 3 6 6 6') == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 3\n6 5 4\n7 8 9\n10 12 13 14''') == '2'\nassert solution('''1 2\n5 4\n3 2 1\n10 12 13 14''') == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'\nassert solution('''\n5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n''') == '4'\nassert solution('''\n3 4\n3 4 3 4\n4 3 2 1\n''') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '2'\nassert solution('10') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\\\n10\n3\n4\n6\n2\n''') == '28', 'First'\nassert solution('''\\\n10\n3\n10\n2\n12\n''') == '16', 'Second'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('6') == '7'\nassert solution('10') == '28'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '10\\n'\n    '3\\n'\n    '4\\n'\n    '6\\n'\n    '2\\n'\n    '12'\n) == '16\\n', f\"({solution(stdin := '10\\n' '3\\n' '4\\n' '6\\n' '2\\n' '12')}!= 16)\"\n\nassert solution(\n    '100\\n'\n    '3\\n'\n    '10\\n'\n    '2\\n'\n    '12'\n) == '28\\n', f\"({solution(stdin := '100\\n' '3\\n' '10\\n' '2\\n' '12')}!= 28)\""
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2''') == '16'\nassert solution('''10\n3\n4\n6\n12''') == '16'\nassert solution('''10\n3\n4\n6\n12\n19''') == '18'\nassert solution('''10\n3\n4\n6\n12\n19\n18''') == '15'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\n3\n4\n6\n2\n12''') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2', \"Wrong!\"\nassert solution('5') == '3', \"Wrong!\"\nassert solution('5') == '4', \"Wrong!\"\nassert solution('5') == '5', \"Wrong!\"\nassert solution('5') == '6', \"Wrong!\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '4'\nassert solution('10') == '16'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n4') == '28'\nassert solution('10\\n5\\n10\\n2') == '16'\nassert solution('100\\n2\\n3') == '14'\nassert solution('2\\n1\\n1') == '4'\nassert solution('3\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('amiss') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"amiss\") == \"hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('mismatch') =='mismatch'\nassert solution('megagrass') =='megagrass'\nassert solution('best') == 'best'\nassert solution('loser') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2', \"Should return 2\"\nassert solution('5') == '5', \"Should return 5\"\nassert solution('3') == '1', \"Should return 1\"\n\"\"\""
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    c++\n    C++\n    c\n    c#\n''') == \"3\"\n\nassert solution('''\n    cryptography\n    blockchain\n    Artificial intelligence\n    Machine-Learning\n    Linux\n''') == \"5\"\n\nassert solution('''\n    c\n    C\n    c++\n    C++\n    c#\n''') == \"4\"\n\nassert solution('''\n    python\n    python3\n    Python\n    Python3\n    Python2\n''') == \"4\"\n\nprint('Time elapsed:', time.process_time() - start_time,'seconds.')"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\nassert solution('''\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\nassert solution('''\nC++\nC#\nC\nC++\n''') == '4'\n'''\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '4\\n'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nc++\nC++\nc\nc#\n''') == \"3\"\nassert solution('''\n5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == \"5\"\n'''\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '4'\nassert solution('8') == '5'\nassert solution('20') == '9'\nassert solution('25') == '8'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nc++\nc#\nc#\nCryptography\n''') == '1'\n\nassert solution('''\n5\nLinux\nc\nC\nc++\nblockchain\nArtificial intelligence\n''') == '5'\n\nassert solution('''\n20\nalgorithm\nalgorithms\nartificial intelligence\nblockchain\nartificial\nAI\nartificial\nCryptography\nC++\ncryptography\nC\nc\nc#\nCrypto\ncrypto\nCryptos\nc\nC++\nc#\nCryptography\nCrypto\nCryptos\nC\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\nCrypto\nCryptos\nCrypto\nCryptos\nCrypto\nC#\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    c++\n    C++\n    c\n    c#\n    ''') == \"3\"\n''')\nprint(solution('''\n    c++\n    C++\n    c\n    c#\n    '''))\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''T\nC\nG\nCC''') == '9'\n\nassert solution('''T\nCC\nC''') == '9'\n\nassert solution('''TT\nTC\nTC''') == '13'\n\nassert solution('''TG\nTC\nTC''') == '13'\n\nassert solution('''TG\nTC\nTC''') == '13'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"TCTCTT\") == \"21\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''T\nT\nT\nTC\nT\nT\nC\nTC\nTC\nTC\nC\nTC\nC\nC\nC\nTC\nC\nC\nT\nCC\nT''') == '9'\nassert solution('''C\nC\nT\nTC\nT\nT\nC\nTC\nTC\nTC\nC\nTC\nC\nC\nC\nTC\nC\nC\nC\nTC\nC''') == '21'\nassert solution('''T\nT\nT\nTC\nT\nT\nC\nTC\nTC\nTC\nC\nTC\nC\nC\nC\nTC\nC\nC\nC\nTC\nC''') == '9'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"T\") == \"1\"\nassert solution(\"CC\") == \"2\"\nassert solution(\"CG\") == \"3\"\nassert solution(\"TTT\") == \"0\"\nprint(solution(input()))\n\"\"\"\n\nsolution = lambda stdin: max((stdin.count(\"T\"), stdin.count(\"C\"), stdin.count(\"G\")))\n\nassert solution(\"T\") == \"1\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-90\\n45\") == \"-45\"\nassert solution(\"0\\n90\") == \"90\"\nassert solution(\"90\\n0\") == \"-90\"\nassert solution(\"360\\n180\") == \"-90\"\nassert solution(\"-90\\n-180\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('0') == '0'\nassert solution('90') == '0'\nassert solution('270') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"240\") == \"180\"\nassert solution(\"270\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''315\n45''') == '90'\nassert solution('''180\n270''') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join((\n    '315',\n    '45',\n))) == '90'\n\nassert solution('\\n'.join((\n    '180',\n    '270',\n))) == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n315\\n45') == '90'\nassert solution('\\n180\\n270') == '90'\nassert solution('\\n0\\n0') == '0'\nassert solution('\\n360\\n0') == '360'\nassert solution('\\n0\\n360') == '0'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('3\\n1\\n23\\n18\\n13') == '2'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\nassert solution('9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '7'\nassert solution('9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '8'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''4\n1\n2\n3\n4\n6''') == '1'\nassert solution('''5\n1\n2\n3\n4\n5''') == '2'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('5 1 2 3') == '2'\nassert solution('5 1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('5 1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('5 1 2 3 4 5 6 7 8 9 10') == '2'\n\n'''\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 23 18 13 99') == '3'\nassert solution('5 11 20 33 40 55') == '2'"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('11') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '1'\n\"\"\""
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''WWWWBBW''') == '1'\nassert solution('''WWWWBBW''') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '1'\nassert solution('BWBWBBBWB') == '1'\nassert solution('BWBWBBBWB') == '0'"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBW\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('BBBB') == '0'\nassert solution('B') == '0'\nassert solution('W') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '1', \"Should be 1\"\nassert solution('WWWWBBW') == '0', \"Should be 0\"\nassert solution('BWBWBWB') == '1', \"Should be 1\"\nassert solution('WBWBWBWB') == '0', \"Should be 0\""
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '9.0'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('100 10 50 4') == '5.681512964704552'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 3') == \"9\"\nassert solution('1 2 1 1') == \"1.299038105676658\""
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint('Check passed')\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1.299038105676658'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 3 3''') == '9'\nassert solution('''1 2 1 1''') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint('Whooosh!')\n\"\"\""
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''robert\nroooooooooobert''') == 'robert'\nassert solution('''roobor''') == 'roober'\nassert solution('''rrooobert''') == 'roober'\nassert solution('''rroobor''') == 'roober'\nassert solution('''roobor''') == 'roober'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''robert''') == 'robert'\nassert solution('''robbigby''') == 'robert'\nassert solution('''robbin''') == 'robert'\nassert solution('''robbins''') == 'robert'\nassert solution('''robbinsrobbinsrobbins''') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roob\") == \"roob\"\nassert solution(\"roobrob\") == \"roobrob\"\nassert solution(\"roobroobert\") == \"roobrob\"\nassert solution(\"roobroobrob\") == \"roobrob\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('roorooobert') == 'robert'\nassert solution('roorooobbert') == 'robert'\nassert solution('roooobertr') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''robert''') == 'robert'\nassert solution('''rooooobert''') == 'robert'\nassert solution('''roooooobert''') == 'robert'\nassert solution('''roobroobt''') == 'robert'\nassert solution('''roobroobsbt''') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooberb') == 'robert'\nassert solution('roooberb') == 'robert'\nassert solution('roobraber') == 'robert'\nassert solution('roobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert', f\"Your solution ({solution('robert')}) is not correct. Check that it returns 'robert' for the input 'robert'.\"\nprint('Everything passed!')"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\nassert solution(\"rrrooobbbert\") == \"robert\"\n\n\"\"\""
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'\nassert solution('roobeart') == 'robert'"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n''')\n\n'''\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"2\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1000 9 7\n900 900 7''') == 'Impossible'\nassert solution('''1000 9 7\n900 900 8''') == 'Impossible'\nassert solution('''1000 9 7\n900 900 9''') == '108 4'''\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"10 10\") == \"49\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"10 10\") == \"2\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1\\n1\\n1\\n1\\n1\\n'\nassert solution() == '0\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '1'\nassert solution('4 4') == '1'\nassert solution('3 3') == '0'\nassert solution('4 4') == '1'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '1'\nassert solution('6 2') == '1'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n..#\\n..X\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nprint('Check complete')\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1953566'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n12\n15\n''') == '213'\nassert solution('''\n2\n13\n15\n''') == '2745'\nassert solution('''\n3\n13\n15\n''') == '45213'\nassert solution('''\n4\n123\n14\n''') == '652441'\n'''\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\n'''\nThe expected output should be:\n1953566\n'''\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1953566', 'expected: 1953566'\nassert solution('5') == '102', 'expected: 102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"\n\"\"\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n212\\n1253\\n') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22\\n') == '102'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n23\n17\n43\n52\n22''') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\nassert solution('1') == '1'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\nassert solution('''\n5\n23\n17\n43\n52\n22\n''') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\nassert solution('123') == '10234321'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\n\n'''\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        q = int(stdin.split()[0])\n        o = int(stdin.split()[1])\n        p = int(stdin.split()[2])\n        q_a = o*q\n        q_p = p*q\n        return str(q_a-q_p)\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\""
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 5') == '0.000000 0.000000 0.000000'\nassert solution('7 7 7') == '0.000000 3.000000 8.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"10 10 10\\n0.25 0.25 0.25\") == \"1.000000 0.000000 0.000000\""
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000', solution('10 10 10')\nassert solution('9 9 9') == '0.000000 3.000000 6.000000', solution('9 9 9')"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\nprint(\"You passed the solution check!\")\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''<sdf>''') == ''\nassert solution('''') == ''\nassert solution('<c<f>') == 'f'\nassert solution('<h<>l>') == 'h'\nassert solution('foss<<rritun') == 'forritun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''<>\n<>\n<>\n<>\n<>\n<>''') == '<><><>'"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"forritun\"\n'''"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n\n\"\"\""
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"forritun\"\n'''"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a<bc<') == 'b'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\n'''\n\nimport re\n\ninput_str = input()\n\noutput_str = re.sub(r\"<\", \"\", input_str)\n\nprint(output_str)"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''a<bc<\nfoss<<rritun''') == 'forritun'''"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''KMP''') == 'KMP'\nassert solution('''Mirko-Slavko''') == 'MS'''')\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'KMP'\nassert solution(input()) == 'MS'"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\""
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"KMP\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 1 0\n''') == 'Estate or Copper'\nassert solution('''\n2 1 0\n''') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\") == \"Estate\"\nassert solution(\"2 1 0\") == \"Gold\"\nassert solution(\"0 1 0\") == \"Estate\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 1 0\") == \"Province or Gold\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('5 7 4') == 'Estate or Copper'"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 1 0\n''') == 'Estate or Copper'\nassert solution('''\n2 1 0\n''') == 'Province or Gold'\nassert solution('''\n1 1 1\n''') == 'Silver or Copper'\n''')\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0 1 0\n2 1 0''') == 'Province or Gold'\nassert solution('''0 1 0\n2 2 0''') == 'Province or Duchy'\n''')"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 0\n''') == 'Province or Gold'\nassert solution('''\n0 1 0\n''') == 'Estate or Copper'\n'''\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('1 1') == 'impossible'\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\n70 50\nSample Input 1:\n10 3\n80 90\nSample Output 1:\n75.7142857\n''') == '75.7142857'\nprint('All test cases passed!')\nassert solution('''\n2 1\n70 50\nSample Input 2:\n10 3\n80 90\nSample Output 2:\nimpossible\n''') == 'impossible'"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\""
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nprint('Check passed')"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 3 1 5 4 7 6\n''') == \"2, 3, 5, 7\"\nassert solution('''\n5\n1 2 3 4 5\n''') == \"1, 2, 3, 4, 5\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5, 1, 2, 3, 4, 5'\nassert solution('''7\n2 3 1 5 4 7 6''') == '4, 2, 3, 5, 7'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5 1 2 3 4\"\nassert solution(\"7 2 3 1 5 4 7 6\") == \"2 3 5 7 1 4\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 3'\nassert solution('7') == '2 3 5 7'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5 1 2 3 4\"\nassert solution(\"2 5 1 6 3 4\") == \"6 5 1 2 3 4\""
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 10\n10 30\n''') == '9 25'''\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1\\n') == '4 4'\nassert solution('3 5\\n') == '2 2'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 30''') == '23 45'\nassert solution('''10 10''') == '9 25'\nassert solution('''0 0''') == '23 45'\nassert solution('''0 10''') == '23 15'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('23 30') == '9 25'\n\"\"\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('12 20') == '15 45'\nassert solution('9 40') == '9 45'\nassert solution('20 18') == '18 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"7 6\") == \"7 14\"\nassert solution(\"20 24\") == \"20 44\"\nassert solution(\"9 16\") == \"9 18\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0 30''') == '23 45'\n\nassert solution('''0 10''') == '9 25'\n\nassert solution('''24 50''') == '23 45'\n\nassert solution('''10 10''') == '9 25'\n\nassert solution('''3 15''') == '9 30'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n2 0\n3 3\n4 1\n5 5\n6 6''') == \"3 0\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.414214'\n\nNote that the input can contain any valid input, and the output should also be valid input.\n\n##### Task\n\nGiven one real number $x$, write a function that returns an integer $a$ such that $a\\times\\infty=x$\n\n##### Example\nInput:\n2.000000\n\nOutput:\n1.414214\n\n##### Solution"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\""
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n'''"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('0.36788') == '1.414214'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"99\") == \"99:\"\nassert solution(\"999\") == \"999:\"\nassert solution(\"1234567890\") == \"1234567890:\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"51\") == \"2,1\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1:', solution('1')\nassert solution('2') == '2:', solution('2')\nassert solution('3') == '3:', solution('3')\n\n'''\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3: 2,1'\nassert solution('50') == '50: 2,1'\nassert solution('51') == '51: 6,5'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3:2,1\\n3:2,2\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\""
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1:'\nassert solution('3') == '3:'\nassert solution('50') == '50:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\""
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2,1\n\n''') == '3:2,1'\nassert solution('''50\n2,1\n\n''') == '50:2,1'\nassert solution('''51\n2,1\n\n''') == '51:2,1'\nassert solution('''51\n5,5\n6,5\n\n''') == '51:5,5,6,5'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '100:'\n\"\"\""
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3:', print(solution('3'))\nassert solution('50') == '50:', print(solution('50'))\nassert solution('1000') == '1000:', print(solution('1000'))\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('THE RAIN IN SPAIN') == \"yes\"\nassert solution('IN THE RAIN AND THE SNOW') == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE PLAIN\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE PLAIN IN THE PLAIN\") == \"yes\"\n\nfor i in range(1, 10):\n    print(i)\n'''"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input(1)) == \"no\"\nassert solution(input(2)) == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRL') == 'SSKKKHHS'\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RRRRRR') == 'SSKKKHHS'\nassert solution('BLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\nassert solution('''RBLLLBRR''') == 'CHCS'\n''')"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''R\nB\nB\nR\nB\nR\nR\nB\nR\nB''') == 'SSKKKHHS'\nassert solution('''R\nR\nR\nR\nR\nR''') == 'CHCS'\nassert solution('''RRRRRLLLLRLL\nRLLLLLLLRRRRR\nRRLLLLLLLLRRR\nRLRRRRRRRLLRR\nRRRLRRRRRRRLR\nRLRLRRRRRRLLR\nRRRLRRRRRRLLR\nRLRLRRRRRRLLR\nRLRLRRRRRRRR\nRLRLRRRRRRLRL\nRRRRRRRRRRRLR\nRRRLRRRRRRRLR\nRLRLRRRRRRRR''') == 'SSKKKHHS'\nassert solution('''R\nR\nR\nR\nR\nR\nR\nR\nB\nR\nB\nB\nR\nB\nB\nB\nB\nR\nB\nB\nR\nB\nB\nB\nR\nB\nB\nB\nR\nB\nB\nR\nB\nB\nB\nR\nB\nB\nB\nR\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nR\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nR\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\nB\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nprint(solution(input()))\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\nassert solution('1') == '1'\nassert solution('2') == '1\\nFizz'\nassert solution('1\\n1\\n1') == '1\\nFizzBuzz'"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 7\n''') == '1\\n2\\n3\\n'\nprint(solution('''\n1 2 7\n'''))\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\nassert solution('1 2 3') == '1\\nFizz\\n2\\nFizz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n''') == '1\\n2\\nFizz\\n3\\n'\nassert solution('''\n1 3 5\n''') == '1\\n2\\nFizz\\n4\\n'\nassert solution('''\n1 3 5\n''') == '1\\n2\\nFizz\\n4\\nBuzz\\n'\nassert solution('''\n1 3 5\n''') == '1\\n2\\nFizz\\n4\\nBuzz\\n'\nassert solution('''\n1 2 3\n''') == '1\\n2\\nFizz\\n3\\n'\n'''"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\""
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"4 2\") == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10') == \"It hadn't snowed this early in 0 years!\"\nassert solution('4 2') == \"It hadn't snowed this early in 3 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\""
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"4 2\") == \"It hadn't snowed this early in 3 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\nprint(solution(\"2 10\\n0 100\"))"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 2\\n'\n    '3 3 3 2\\n'\n) == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution(\n    '1 10\\n'\n    '0 100\\n'\n) == 'It hadn\u2019t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('2 10') == \"It hadn't snowed this early in 0 years!\"\nprint(solution(input()))\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 10\n0 100''') == 'It hadn't snowed this early in 0 years!'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n10 2''') == '2'\nassert solution('''5\n10 1''') == '1'\nassert solution('''5\n10 0''') == '5'\nassert solution('''2\n10 2''') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 5\n''') == '2'\nassert solution('''10\n2 5 1 2 1 5 3 1 2 2 1 3 3 3 3 3\n''') == '7'"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n\nassert solution(\"10 1\") == \"1\"\nassert solution(\"100 10\") == \"99\"\nassert solution(\"1 100\") == \"99\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 10\") == \"7\"\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"6 6\") == \"1\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n2''') == '2'\nassert solution('''\n5 5\n2\n''') == '3'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '1'\nassert solution('3 5') == '2'\nassert solution('5 7') == '2'\nassert solution('5 5') == '3'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\nprint('You are a smart cookie!')\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n\"\"\"\nfrom collections import defaultdict\nfrom itertools import product"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\nprint(\"\\033[92mPASSED\\033[0m\")"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n''') == ''\n\nassert solution('hi') == 'hi'\n\nassert solution('''') == ''\n\nassert solution('gfhj') == ''\n\nassert solution('gfhjk') == ''"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"bok\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\"\"\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"8 1\"\nassert solution(\"1\") == \"1 1\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '8 3'\nassert solution('6') == '8 2'\nprint(solution(input()))\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '8 2'\nassert solution('6') == '8 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3 2\"\nassert solution(\"7\") == \"8 3\"\nassert solution(\"10\") == \"8 4\"\nassert solution(\"16\") == \"8 6\"\nassert solution(\"32\") == \"9 8\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\nassert solution('22') == '17 10'\nassert solution('12') == '6 1'\n\nstdin = \"\"\"\n6\n\"\"\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4') == '4 4\\n'\nassert solution('100000\\n64') == '64 64\\n'\nassert solution('4\\n12') == '12 12\\n'"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0 0\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"1\") == \"0 1\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2 2'\nassert solution('8') == '2 1'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2 1'\nassert solution('3') == '3 2'\nassert solution('2') == '1 1'\nassert solution('1') == '1 1'\n\nstdin = \"\"\"3\n3\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\") == \"4 2\"\nassert solution(\"7\\n12\") == \"6 2\"\nassert solution(\"6\\n10\") == \"5 3\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('S1') == 'YES'\nassert solution('S2') == 'NO'\nassert solution('S3') == 'YES'\nassert solution('S4') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('drought') == 'YES'\nassert solution('fairy tale') == 'NO'\nassert solution('forever in doubt') == 'YES'\nassert solution('yellow submarine') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('drought') == 'YES'\nassert solution('worried and fearful') == 'NO'\nassert solution('tasty sprout') == 'YES'"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"air\") == \"NO\"\nassert solution(\"eat\") == \"NO\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet eat') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('eet eat') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('paint') == 'NO'"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('pls tt moo') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('tasty sprout') == 'YES'\nassert solution('difficult route') == 'YES'\nassert solution('forever in doubt') == 'YES'\nassert solution('worried and fierce') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('drought') == 'YES'\nassert solution('erres') == 'YES'\nassert solution('eet') == 'YES'\nassert solution('eet') == 'YES'\nassert solution('eet') == 'YES'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"WIN\"\nassert solution(r\"\"\"HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"LOSE\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\""
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n\"\"\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n\"\"\""
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN', solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''')\n\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE', solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''')\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\""
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\nassert solution('10') == 'DECREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"INCREASING\"\nassert solution(\"11\") == \"NEITHER\"\nassert solution(\"-5\") == \"INCREASING\"\nassert solution(\"11-5\") == \"DECREASING\"\nassert solution(\"4 5 7 8 1\") == \"DECREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT_1) == \"INCREASING\"\nassert solution(SAMPLE_INPUT_2) == \"NEITHER\"\nassert solution(INPUT) == \"INCREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"INCREASING\", \"First\"\nassert solution(\"11\") == \"NEITHER\", \"Second\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"INCREASING\", \"First\"\nassert solution(\"11\") == \"NEITHER\", \"Second\""
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'DECREASING', \"Wrong\"\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER', \"Wrong\"\nprint('All test cases passed!')"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'DECREASING'\nassert solution('''6\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN''') == 'NEITHER'\nassert solution('''4\nHOPE\nALI\nBECKY\nJULIE''') == 'INCREASING'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"George wins!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\nassert solution(\"\"\"\n3 10 13\nJohn\nJohn\nGeorge\n\"\"\") == \"No winner!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 10 13') == \"Nina wins!\"\nassert solution('4 10 13') == \"Nina wins!\"\nassert solution('3 10 13') == \"No winner!\"\nassert solution('3 10 13') == \"No winner!\"\nassert solution('2 10 13') == \"No winner!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == \"George wins!\"\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == \"Nina wins!\"\n'''\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!'\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!'\n'''\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"John wins!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\nprint(solution.__doc__)\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 10 13\\n\"\n    \"John\\n\"\n    \"Kelly\\n\"\n    \"George\\n\"\n    \"Kelly 1\\n\"\n    \"George 2\\n\"\n    \"Kelly 1\\n\"\n    \"John 2\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"Kelly 3\\n\"\n    \"Kelly 1\\n\"\n    \"George 3\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"George 3\\n\"\n    \"Kelly 1\\n\"\n) == \"George wins!\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint(solution(*input().split()))\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    7 3 0 0 5 4\n\"\"\") == \"2.0\n\nassert solution(\"\"\"\n    6 0 0 2 7 6\n\"\"\") == \"2.0\n\nassert solution(\"\"\"\n    6 -10 0 0 2 7\n\"\"\") == \"2.0\n\nassert solution(\"\"\"\n    6 0 0 -2 7 6\n\"\"\") == \"2.0\n\nassert solution(\"\"\"\n    6 0 0 -10 7 6\n\"\"\") == \"2.0\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('-5 -5 1 1 1 -4') == '3.0'\nprint('All test cases passed...')"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 0 0 5 4') == \"2.0\"\nassert solution('6 0 0 2 7 6') == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nprint('all tests passed')"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nprint(solution(input()))"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\""
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('11') == '10'\nassert solution('10') == '11'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12345\n''') == '165'\nassert solution('''\n987654321\n''') == '0'\nassert solution('''\n1000001\n''') == '0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '13'\nassert solution('1000000') == '1000001'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20') == '80'\nassert solution('2480') == '2480'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"330\"\nprint(solution(__file__.read().rstrip('\\n')))\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"10 4\") == \"10\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 4') == '3'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nprint(\"Cool. You got it right.\")\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '4'\nassert solution('1 2') == '2'\nassert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n    150000 100000 160000 100000 180000\n    190000 170000 140000 160000''') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n190000 170000 140000 160000\\n') == '4'\nassert solution('5 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\n') == '3'"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == \"4\"\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == \"3\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"42\") == \"1\"\nassert solution(\"84\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\n) == \"10\"\nassert solution(\n    \"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\"\n) == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '10'\nassert solution('42\\n84') == '1'\n\nassert solution('1\\n2\\n3') == '10'\nassert solution('42\\n84') == '1'\n\nassert solution('1\\n2\\n3') == '10'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(0).read()) == '10'\nassert solution(open(1).read()) == '0'\nassert solution(open(2).read()) == '10'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\n\nassert solution(input(\": \")) == \"1\""
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '10'\n\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '5'\n\nassert solution('''2\n4\n8\n16\n32\n64\n128\n256\n512\n1024''') == '6'\n\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '4'\n\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '3'"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\n\"\"\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''13 3\n1 0''') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n100\n100\n100\n100\n\n100\n100\n100\n100\n\n1\n''') == 'yes'"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 3') == 'yes', \"You failed the first sample test\"\nassert solution('1 0') == 'yes', \"You failed the second sample test\"\n\n\"\"\"\nimport collections\n\nn, b = input().split()\nn, b = int(n), int(b)\n\nwith open('output.txt', 'w') as f:\n    if collections.Counter(list(input().split())).most_common(1)[0][1] == n:\n        f.write('yes')\n    else:\n        f.write('no')\n\n\"\"\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n3\n''') == 'yes'\nassert solution('''\n1 1\n1\n''') == 'no'\nprint(solution(stdin))\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'yes'\nassert solution('13 3') == 'no'"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 0\n''') == 'yes'\nassert solution('''\n2 1\n''') == 'no'\nassert solution('''\n10 3\n''') == 'yes'\nassert solution('''\n1 10\n''') == 'no'\nassert solution('''\n2 1\n''') == 'no'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([13, 3]) == 'yes'\nassert solution([1, 0]) == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"yes\"\nassert solution([1, 0]) == \"yes\"\nassert solution([13, 3]) == \"yes\"\nassert solution([1, 0, 0]) == \"yes\"\nassert solution([13, 3, 0]) == \"yes\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 1001\n\n-----Output-----\nyes\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', 'Expected output was 12 12 11 13 but got {}'.format(solution('P01K02H03H04'))\nassert solution('H02H10P11H02') == 'GRESKA', 'Expected output was GRESKA but got {}'.format(solution('H02H10P11H02'))\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02\n''') == '12 12 11 13'\nassert solution('''P01K02H03H04\nH02H10P11H02\n''') == 'GRESKA'\nassert solution('''P01K02H03H04\nH02H10P11H02\n''') == 'GRESKA'\nprint('All test cases passed.')"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\nassert solution('''H02H10P11H02\nP01K02H03H04''') == 'GRESKA'\n\nNote: This problem has an easy solution, but can also be solved by a brute-force way. In a brute-force way, we can assume that the number of cards of each suit must be the same.\n\n### A. Standard ###\n\nThis is a typical way to solve the problem: first count the occurrence of each card and then output the missing cards in the same order."
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nprint('All test cases passed.')\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '12 12 11 13'\nassert solution('P01K02H03H04') == '12 12 11 13'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\""
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nprint(solution(input()))\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', 'First'\nassert solution('H02H10P11H02') == 'GRESKA', 'Second'"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 5, 3]) == \"1\"\nassert solution([7, 6, 4]) == \"2\"\nassert solution([2, 5, 1]) == \"1\"\nassert solution([2, 6, 4]) == \"1\"\nassert solution([2, 5, 3]) == \"1\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 5, 3]) == \"1+-+..\\n*|*.\\n+-+..\\n|*|*\\n+-+..\\n*|*.\\n+-+..\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 5, 3]) == '1', 'easy'\nassert solution([7, 6, 4]) == '2','medium'\nassert solution([5, 5, 3]) == '1', 'hard'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == \"1\"\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == \"2\""
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5 3\n.*.*.\n.*.*.\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nprint('All tests passed!')"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\""
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"12\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('3C 3H 2D AC') == '1'\nassert solution('2C 4D 4H 2D 2H') == '2'\nassert solution('3C 3H 2D AC') == '1'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, 'Test 1 failed'\nassert solution(\"2C 4D 4H 2D 2H\") == 3, 'Test 2 failed'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nAC AD AH AS KD\n''') == '4'\nassert solution('''\n2C 4D 4H 2D 2H\n''') == '3'\nassert solution('''\n2C AD 2H 3C 2S 2D\n''') == '5'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nAC AD AH AS KD\n''') == '4'\nassert solution('''\n2C 4D 4H 2D 2H\n''') == '3'\nprint('Do it!')\nassert int(solution('''\n3C 4D 5H 2C 3D 3H 2S\n''')) == 6\nprint('Yay!')"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\n\nprint(solution(input()))\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '5'\nassert solution('5 1') == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6 5\n2 1 1 1 0 1\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n5 1\n0 0 0 0 0\n\"\"\"\n) == \"7\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n0 0 0 0 0\n''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '5'\nassert solution('1 1 1 1 0 1') == '5'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5'\nassert solution('5 1\\n0 0 0 0 0') == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\nSample Input 1:\n6 5\n1 1 1 1 0 1\nSample Output 1:\n5\nSample Input 2:\n5 1\n0 0 0 0 0\nSample Output 2:\n7\n''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''5 1\n0 0 0 0 0\n''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\n'''\n\n\nimport string"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nAll your base are belong to us.\n\"\"\") == \"\"\"@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n\"\"\""
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\nHello World!\n\n''') == '@3110\\\\\\\\\\/0|Z1|)!\n\nassert solution(\n'''\nWhat's the Frequency, Kenneth?\n''') == '\\/\\/[-]@\\'][''$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\']['[-]?"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\n\nassert solution('What\\'s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\n\nassert solution('What is the frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\n\nassert solution('what is the frequency, kenneth?\\n') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Hello World!\") == \"[-]3110 \\\\/\\/0|Z1|)!\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\nassert solution(\"Hello, world!\\nHow are you?\\nI am fine.\\nWhat's the frequency of 'Hello World'?\") == \"[-]3110 \\\\/\\/0|Z1|)!\\n\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\\\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Hello World!') == '-3110/0|Z1|)!'\nassert solution('This is a test.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$. This is a test.'\nassert solution('this is a test') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$. this is a test'"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Hello World!\\n\") == \"Hello World!\\n\"\nassert solution(\"H\\t\\tllo World!\\n\") == \"H\\t\\tllo World!\\n\"\nassert solution(\"I\\n\\t\\tllo World!\\n\") == \"I\\n\\t\\tllo World!\\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"What's the Frequency, Kenneth?\\n\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nAll your base are belong to us.\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '\n\nassert solution('''\nWhat's the Frequency, Kenneth?\n''') == '\\/\\/[-]@\\'][''$ \\']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3'[-]?''''\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Bob\"\nassert solution(\"10\") == \"Alice\"\nassert solution(\"13\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Alice\"\nassert solution(\"2\\n\") == \"Bob\""
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n''') == 'Alice'\nassert solution('''\n2\n''') == 'Bob'\n'''\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n''') == 'Alice'\nassert solution('''\n5\n''') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"Bob\"\nassert solution(\"1\") == \"Alice\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"one\") == \"one\"\nassert solution(\"twenty\") == \"twenty\"\nassert solution(\"two hundred\") == \"twohundred\"\nassert solution(\"three hundred and forty\") == \"threehundredandforty\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    this\n    sentence\n    has\n    $\n    letters\n\"\"\") == \"\"\"thirty is the number of letters here\"\"\"\n\"\"\"\n    This is the first attempt at an input/output problem.\n    The solution is given below:\n\"\"\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'one', 'test 1'\nassert solution('2') == 'one', 'test 2'\nassert solution('5') == 'one', 'test 3'\nassert solution('4') == 'one hundred', 'test 4'\nassert solution('10') == 'one hundred', 'test 5'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"thirty one letters\", 'Wrong output'\nassert solution('6') == \"sixteen letters\", 'Wrong output'\nassert solution('10') == \"ten letters\", 'Wrong output'\nassert solution('7') == \"seven letters\", 'Wrong output'\nassert solution('11') == \"eleven letters\", 'Wrong output'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nthis\nsentence\nhas\n$\nletters\nSample Input 3:\n2\n$\n''') == 'this sentence has thirty one letters'\n\nassert solution('''7\n$\nis\nthe\nnumber\nof\nletters\nhere\nSample Output 3:\nthirty is the number of letters here\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''this\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters \n\n'''\nSample Input 3:\n4\n$\nthere\nis\n$\nno\n$\ndifference\n'''\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"this sentence has thirtyone letters\") == \"thirty is the number of letters here\"\nassert solution(\"this sentence has thirtyone letters\") == \"thirty is the number of letters here\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nthis\\nhas\\n$\\letters\\n\") == \"this sentence has thirtyone letters\"\nassert solution(\"4\\nthe\\nnumber\\nis\\n\") == \"the number of letters here\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'thirty one letters', \"First\"\nassert solution('7') == 'thirty letters here', \"Second\""
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"1\"\nassert solution(\"AaB\") == \"0\"\nassert solution(\"AaBcdEaBcdEaBcd\") == \"6\"\nassert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('aBcDeFgHiJKLMNopQRstuVwXyZ') == 'aBcDeFgHiJKLMNopQRstuVwXyZ'\n\"\"\""
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB''') == '5'\nassert solution('''Abcd\n\nEaEbFabG''') == '6'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\""
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh''') == \"0\"\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh''') == \"5\"\nassert solution('''E\n\na\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh''') == \"4\"\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh''') == \"0\"\n'''"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"Even 9\"\nassert solution(input_string) == \"Odd 4\"\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 2\n3 4\n5''') == 'Odd 6'\nassert solution('''3 3\n2 3\n4 4\n6''') == 'Even 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n4 3\n5 3\n6 3''') == 'Even 6'\nassert solution('''3 3\n4 3\n5 3\n6 3''') == 'Not a moose'\nassert solution('''1 0\n3 4\n1 0\n6 5''') == 'Not a moose'\nassert solution('''6 0\n3 4\n1 0\n6 5''') == 'Odd 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Odd 6\"\nassert solution(\"2 3\") == \"Even 6\"\nassert solution(\"1 1\") == \"Not a moose\"\n\"\"\"\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Even 3'\nassert solution('3 3') == 'Odd 3'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n''') == 'Odd 6'\nassert solution('''\n3 3\n''') == 'Even 6'\n''')\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nja\nla\n52\n''') == '2'\n\nassert solution('''\n1\nmono\n666\n''') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\nto\\nomo\\n\"\n    \"2\\ncat\\n\"\n    \"3\\ndak\\n\"\n    \"4\\ndas\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"10\\n\"\n    \"11\\n\"\n    \"12\\n\"\n    \"13\\n\"\n    \"14\\n\"\n    \"15\\n\"\n    \"16\\n\"\n    \"17\\n\"\n    \"18\\n\"\n    \"19\\n\"\n    \"20\\n\"\n    \"21\\n\"\n    \"22\\n\"\n    \"23\\n\"\n    \"24\\n\"\n    \"25\\n\"\n    \"26\\n\"\n    \"27\\n\"\n    \"28\\n\"\n    \"29\\n\"\n    \"30\\n\"\n    \"31\\n\"\n    \"32\\n\"\n    \"33\\n\"\n    \"34\\n\"\n    \"35\\n\"\n    \"36\\n\"\n    \"37\\n\"\n    \"38\\n\"\n    \"39\\n\"\n    \"40\\n\"\n    \"41\\n\"\n    \"42\\n\"\n    \"43\\n\"\n    \"44\\n\"\n    \"45\\n\"\n    \"46\\n\"\n    \"47\\n\"\n    \"48\\n\"\n    \"49\\n\"\n    \"50\\n\"\n    \"51\\n\"\n    \"52\\n\"\n    \"53\\n\"\n    \"54\\n\"\n    \"55\\n\"\n    \"56\\n\"\n    \"57\\n\"\n    \"58\\n\"\n    \"59\\n\"\n    \"60\\n\"\n    \"61\\n\"\n    \"62\\n\"\n    \"63\\n\"\n    \"64\\n\"\n    \"65\\n\"\n    \"66\\n\"\n    \"67\\n\"\n    \"68\\n\"\n    \"69\\n\"\n    \"70\\n\"\n    \"71\\n\"\n    \"72\\n\"\n    \"73\\n\"\n    \"74\\n\"\n    \"75\\n\"\n    \"76\\n\"\n    \"77\\n\"\n    \"78\\n\"\n    \"79\\n\"\n    \"80\\n\"\n    \"81\\n\"\n    \"82\\n\"\n    \"83\\n\"\n    \"84\\n\"\n    \"85\\n\"\n    \"86\\n\"\n    \"87\\n\"\n    \"88\\n\"\n    \"89\\n\"\n    \"90\\n\"\n    \"91\\n\"\n    \"92\\n\"\n    \"93\\n\"\n    \"94\\n\"\n    \"95\\n\"\n    \"96\\n\"\n    \"97\\n\"\n    \"98\\n\"\n    \"99\\n\"\n    \"100\\n\"\n    \"101\\n\"\n    \"102\\n\"\n    \"103\\n\"\n    \"104\\n\"\n    \"105\\n\"\n    \"106\\n\"\n    \"107\\n\"\n    \"108\\n\"\n    \"109\\n\"\n    \"110\\n\"\n    \"111\\n\"\n    \"112\\n\"\n    \"113\\n\"\n    \"114\\n\"\n    \"115\\n\"\n    \"116\\n\"\n    \"117\\n\"\n    \"118\\n\"\n    \"119\\n\"\n    \"120\\n\"\n    \"121\\n\"\n    \"122\\n\"\n    \"123\\n\"\n    \"124\\n\"\n    \"125\\n\"\n    \"126\\n\"\n    \"127\\n\"\n    \"128\\n\"\n    \"129\\n\"\n    \"130\\n\"\n    \"131\\n\"\n    \"132\\n\"\n    \"133\\n\"\n    \"134\\n\"\n    \"135\\n\"\n    \"136\\n\"\n    \"137\\n\"\n    \"138\\n\"\n    \"139\\n\"\n    \"140\\n\"\n    \"141\\n\"\n    \"142\\n\"\n    \"143\\n\"\n    \"144\\n\"\n    \"145\\n\"\n    \"146\\n\"\n    \"147\\n\"\n    \"148\\n\"\n    \"149\\n\"\n    \"150\\n\"\n    \"151\\n\"\n    \"152\\n\"\n    \"153\\n\"\n    \"154\\n\"\n    \"155\\n\"\n    \"156\\n\"\n    \"157\\n\"\n    \"158\\n\"\n    \"159\\n\"\n    \"160\\n\"\n    \"161\\n\"\n    \"162\\n\"\n    \"163\\n\"\n    \"164\\n\"\n    \"165\\n\"\n    \"166\\n\"\n    \"167\\n\"\n    \"168\\n\"\n    \"169\\n\"\n    \"170\\n\"\n    \"171\\n\"\n    \"172\\n\"\n    \"173\\n\"\n    \"174\\n\"\n    \"175\\n\"\n    \"176\\n\"\n    \"177\\n\"\n    \"178\\n\"\n    \"179\\n\"\n    \"180\\n\"\n    \"181\\n\"\n    \"182\\n\"\n    \"183\\n\"\n    \"184\\n\"\n    \"185\\n\"\n    \"186\\n\"\n    \"187\\n\"\n    \"188\\n\"\n    \"189\\n\"\n    \"190\\n\"\n    \"191\\n\"\n    \"192\\n\"\n    \"193\\n\"\n    \"194\\n\"\n    \"195\\n\"\n    \"196\\n\"\n    \"197\\n\"\n    \"198\\n\"\n    \"199\\n\"\n    \"200\\n\"\n    \"201\\n\"\n    \"202\\n\"\n    \"203\\n\"\n    \"204\\n\"\n    \"205\\n\"\n    \"206\\n\"\n    \"207\\n\"\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('2\\n3') == '2\\n3'\nassert solution('1\\n2') == '1'\nassert solution('3') == '1'\nassert solution('5\\n6') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('tomo') == 'tomo'\nassert solution('mono') =='mono'\nassert solution('dak') == 'dak'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n') == '1'\nassert solution('2\\n4\\n5\\n') == '2'\nassert solution('1\\n6\\n7\\n') == '1'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\ntomo\nmono\ndak\n6666\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\nja\nla\n52\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\ntomo\nmono\ndak\n666\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666\\n') == '1'\nassert solution('2\\nja\\nla\\n52\\n') == '2'\nassert solution('10\\n12345\\n6789\\nabcdefg\\nhijk\\nlmn\\nopqrst\\nuvwxyz\\n') == '11'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution('3\\ntomo\\nmono\\ndak\\n6666\\n') == '1'\nassert Solution().solution('2\\nja\\nla\\n52\\n') == '2'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"8\") == \"8\"\nassert solution(\"15\") == \"15\"\n"
    }
]