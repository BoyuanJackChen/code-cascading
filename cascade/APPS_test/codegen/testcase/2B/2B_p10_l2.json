[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 1\n\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 1\n\n\"\"\") == \"9\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('3') == '1 8 6'\nassert solution('16') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 8 6\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"1 8 6\"\nassert solution('4') == \"1 8 6\"\nassert solution('3') == \"1 8 6\"\nassert solution('2') == \"1 2\"\nassert solution('1') == \"1 2\"\n\nstdin = \"\"\"\n7\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\"\nprint(solution(stdin))\nstdin = \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\"\nprint(solution(stdin))\n\n\"\"\"\n\n1 3 4\n\n1 3 4\n2 4 6\n3 7 8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''\n3\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\nassert solution('''2\n1 2\n2 3''') == '2'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '5'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('3') == '1'\nassert solution('20') == '0'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '20 8'\nassert solution('') == '1 1'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2 2''') == '4 4'\nassert solution('''2\n3 5''') == '5 3'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n''') == '20 8'\nassert solution('''\n4\n10 2\n''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2\\n3 5\\n4 5\\n5 1\\n'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '10 2\\n2 8\\n20 4\\n5 1\\n4 1\\n5 20\\n'\nassert solution('1\\n1 1') == '1 1'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '20 8'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '8 2'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2 3 5'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 5'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"20 8\"\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\nassert solution('''\n4 3 4\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '11'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == '24'"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\nprint(solution(input()))"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '24'\nassert solution('5 5 4') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"24\""
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24', solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''')\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56', solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''')\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nprint('Done!')"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"LLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 4 3 2''') == '4'\nassert solution('''3 2 2''') == '2'\nassert solution('''5 6 7''') == '2'\nassert solution('''8 5 2''') == '1'\nassert solution('''9 5 2''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\n\n\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRR\"\n\n\n\n\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('2') == 'R'\nassert solution('5') == 'LLRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_data_1) == \"4\"\nassert solution(test_data_2) == \"LLRR\"\nassert solution(test_data_3) == \"1\"\nassert solution(test_data_4) == \"R\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\n\nassert solution(input()) == \"LLRR\""
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\") == \"3\"\nassert solution(\"3\\n1 4 4 7 4 1\") == \"3\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\"\nassert solution(\"5\\n1 3 3 7\") == \"-1\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"1 1 2 2 5 5\") == \"2\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"2 1 2 5 5\") == \"2\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3\") == \"2\"\nassert solution(\"5\\n1 4 2 5 3 4\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3 4 3\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3 4 5 3\") == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 4 3 7\") == \"3\"\nassert solution(\"5 2 5 5 2 5\") == \"3\"\nassert solution(\"3 1 2 5\") == \"2\"\nassert solution(\"4\") == \"-1\""
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == -1\nassert solution(\"2\") == 3\nassert solution(\"1 4 4 7 4 1\") == 3\nassert solution(\"5 2 5 2 5\") == 3\nassert solution(\"4\") == -1"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n4\n2 2 5 2 5\n''') == '3'\nassert solution('''\n3\n1 3 3 7\n''') == '3'\nassert solution('''\n2\n2 8\n''') == '3'\nassert solution('''\n2\n-1 -2 -3\n''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5 2 5 2 5\n''') == '3'\nassert solution('''\n4\n3 3 3 7\n''') == '3'\nassert solution('''\n6\n1 2 4 5 6\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '0'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 3 7\n\n''') == '3'\n\nassert solution('''\n5\n2 2 5 2 5\n\n''') == '-1'\n\nassert solution('''\n6\n1 4 4 7 4 1\n\n''') == '3'"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\n\nassert solution('''3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\n\nassert solution('''5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\nassert solution(input) == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\""
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\") == \"YES\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"NO\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\") == \"YES\"\nassert solution(\"3 3 7 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\n\nassert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES'\n\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == 'YES'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1098') == \"20\"\nassert solution('10') == \"19\"\nassert solution('0') == \"1\"\nassert solution('12345') == \"24\"\nassert solution('11122233334444') == \"16\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"20\""
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '21'\nassert solution('10') == '199'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '20'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0 0 0\n''') == '4 0 0 1 2'\nassert solution('''5\n0 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n0 0 1 4 5 6 7\n''') == '7 0 0 1 4 5 6 7'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5 3 1 2 4 5 6\"\nassert solution() == \"7 3 2 1 4 5 6\""
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1 4 5 2'\nassert solution('7') == '2 1 4 5 3 6'\nassert solution('7') == '2 1 4 5 3 6'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n5 0 0 2 4\\n\"\n    ) == \"5 3 1 2 4\"\nassert solution(\n    \"7\\n7 4 0 3 0 5 1\\n\"\n    ) == \"7 4 2 3 6 5 1\"\nassert solution(\n    \"7\\n0 1 4 3 5 6 1\\n\"\n    ) == \"7 4 2 3 6 5 1\"\nassert solution(\n    \"7\\n0 0 0 0 0 0 0\\n\"\n    ) == \"7 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == \"5 3 1 2 4\"\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 3 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'NO'\nassert solution('4 2') == '1 1 2 2'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4 2') == 'YES'\nassert solution('2 2 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1') == 'NO\\n'\nassert solution('5 2\\n3 2 1 2 3') == 'NO\\n'\nassert solution('10 2\\n1 1 1 2 2 2 2 1 2 1 2 2') == 'YES\\n1 1 1 2 2 2 2 2\\n'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 2 2 3\n''') == 'YES', \"Easy\"\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES', \"Medium\"\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO', \"Hard\""
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''\n5 2\n1 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n1 2 1 2\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 2 3 3\n''') == 'YES'\n\nassert solution('''5\n3\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''5\n3\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''7\n4\n1 1 2 2 2 3 3\n''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n1 2 1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 2\") == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n\n'''\n\nimport math\nimport sys\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11 5 1\n11010100101''') == \"3\"\nassert solution('''11 5 1\n11010100101''') == \"1\"\nassert solution('''11 5 2\n11010100101''') == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nYES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\\nYES\\nYES\\nNO\\nYES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\\n') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n1\n2\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n3\n2\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"11\"\nassert solution(\"111\") == \"11\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"333\"\nassert solution(\"5\") == \"5555\"\nassert solution(\"2\") == \"999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n11111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\nassert solution(\n    \"4\\n1337\\n1 2 5 4 6 6 3 1 9\"\n) == \"1557\"\nassert solution(\n    \"2\\n33\\n1 1 1 1 1 1 1 1 1\"\n) == \"33\"\nassert solution(\n    \"3\\n111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\nassert solution(\n    \"1\\n111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'\nassert solution('3') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('11111') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('1337') == '1553'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '4 8 16'\nassert solution('15 18 21') == '114 228 456'\nassert solution('100 100 101') == '7'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n123 321 456\\n5 10 15\") == \"1 1 3\"\nassert solution(\"4\\n1 2 3\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\""
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '3 1 1 2 3'\nassert solution('''\n1 2 3\n1 123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 3 1 1'\nassert solution('''\n2 3 4\n2 2 2 2 2\n1 2 1\n2 1 1 2\n''') == '2 3 4 1 2'\nassert solution('''\n1 1 2\n2 1 1 2\n1 2 1 2\n''') == '1 1 2'\nassert solution('''\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n1 2 1\n1 2 1\n''') == '2 2 2 2 2'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3\n1 2 3\n2 3\n1 2 3\n1 2 3\n2 3\n1 2 3\n''') == '1 1 1'\nassert solution('''\n2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '1'\nassert solution('''\n3\n3 2\n2 3\n3 2\n3 2\n3 2\n3 2\n''') == '1 1 1'\nassert solution('''\n10\n10 9\n9 8\n8 7\n7 6\n6 5\n5 4\n4 3\n3 2\n2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"15 18 21\") == \"114 228 456\"\nassert solution(\"100 100 101\") == \"7\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    1 2\n    1 1\n    ''') == '1 1 1'\n\nassert solution('''\n    2\n    1 2\n    -3 1\n    ''') == '2'\n\nassert solution('''\n    2\n    1 2\n    3 1\n    ''') == '1'\n\nassert solution('''\n    2\n    1 2\n    1 3\n    ''') == '1 2'\n\nassert solution('''\n    2\n    1 2\n    1 3\n    ''') == '2 1'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n1 2 3\n321 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '114 228 456'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4\"\nassert solution(\"15 18 21\") == \"1 2 3\"\nassert solution(\"100 100 101\") == \"7\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\""
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3\n5\n7\n\n''') == '2'\nassert solution('''\n2\n100000\n\n''') == '0'\nassert solution('''\n3\n1\n\n''') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    1, 2, 3, 4, 5\n]) == 1\n\nassert solution([\n    1, 2, 3, 7, 8\n]) == 2\n\nassert solution([\n    1, 100000, 100000, 100000, 100000\n]) == 0\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\nassert solution(\"2\\n1 1\") == \"0\""
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n10\n100000''') == '1'\nassert solution('''2\n11\n1000000000000000''') == '0'\nassert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"\nassert solution(\"2\\n3\\n1 100000\\n\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('2') == '0'\n\n---\n\n>>> solution(\n...     '1 3 3 7'\n... )\n'2'\n>>> solution(\n...     '1 100000'\n... )\n'0'\n>>> solution(\n...     '4'\n... )\n'2'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test_input_1) == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(test_input_2) == \"-1\"\nassert solution(test_input_3) == \"1 2 3 0 3\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\u041f\u0435\u0442\u044f \u043f\u0440\u043e\u0431\u0435\u0436\u0430\u043b \u0441\u043f\u0430\u0442\u044c \u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u0437\u0430\u043d\u044f\u0442\u0443\u044e \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u043e\u0439. \u041a\u043e\u0433\u0434\u0430 \u043e\u043d \u043f\u0440\u043e\u0448\u0435\u043b \u0432\u0435\u0441\u044c \u043f\u0435\u0440\u0435\u0440\u0430\u0441\u0447\u0435\u0442, \u043e\u043d \u043f\u043e\u043f\u0440\u043e\u0441\u0438\u043b \u0432\u0430\u0441 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0432 \u0432\u0438\u0434\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u0433\u043e\u0434\u0443, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439, \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439.\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432, \u043a\u0430\u0436\u0434\u044b\u0439 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f (\u0434\u043b\u044f \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0441\u0440\u043e\u043a \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u0432\u0430\u0436\u0435\u043d). \u0412 \u043d\u0430\u0447\u0430\u043b\u0435 \u0433\u043e\u0434\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u0433\u043e\u0434\u0443, \u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439.\n\n\u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0432 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u0441\u0435 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u044b \u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432 \u043e\u0434\u043d\u043e\u043c \u043d\u0435\u0434\u0435\u043b\u044e. \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0445 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u0430 \u0438 \u044d\u043a\u0437"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2 3 0 3 ', solution()\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('15 3') == '1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 2 2 2 1 3 3 2 3 2 3 2 2 2 1 3 3 1 1 2 3 2 1 3 3 2 1 1 2 3 2 1 1 2 3 2 1 3 3 2 3 2 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '-1\n\nassert solution('''\n10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n\nassert solution('''\n1\n2\n3\n''') == '0 0 0 0 0 1 2 2 3 0 0 0 0'\n\nassert solution('''\n2\n2\n3\n''') == '0 0 0 0 1 2 2 3 0 0 0 0'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 3 0 3\"\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2 2 2 1 1 0 4 3 4 4'\nassert solution(input_) == '0 0 0 0 1 1 0 2 1 2'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(0).read()) == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '120 51840\\n'\n    '42 42\\n'\n) == '7'\n\nassert solution(\n    '48 72\\n'\n    '42 42\\n'\n) == '0'\n\nassert solution(\n    '48 72\\n'\n    '48 72\\n'\n) == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12 51840''') == '7'\nassert solution('''12 42''') == '0'\nassert solution('''48 72''') == '-1'\nassert solution('''48 72''') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''120 51840\n''') == '7'\nassert solution('''42 42\n''') == '0'\nassert solution('''48 72\n''') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"48 72\") == \"7\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == -1\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\naba\\n') == 'ababababa'\nassert solution('3 2\\ncat\\n') == 'catcat'\n\n\n-----------------------------------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\nassert solution('3 4\\naba') == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"ababababa\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ababababa\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\ncat\") == \"cat\"\nassert solution(\"2 2\\ncat\") == \"cat\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\nassert solution('1') == ''\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\naba\\n\") == \"ababababa\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\na\nb\nc\nd\ne\n\"\"\") == \"ababab\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 1 2 4 3\") == \"2\"\nassert solution(\"2 1 2 4 3 5\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '3'\nassert solution('''\n4\n8 3 5 2\n''') == '2'\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2 1 2 4 3\n''') == '3'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3 1 2 2\n''') == '3'\nassert solution('''\n4\n2 5 1 2 2\n''') == '2'\nassert solution('''\n5\n8 3 5 2 2\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '0'\nassert solution('5') == '2'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"2\"\nassert solution('4') == \"3\"\nassert solution('5') == \"4\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '0'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\naaaaa''') == \"15\"\nassert solution('''5 7\naaaaa''') == -1\nassert solution('''10 100\najihiushda''') == 233"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('asdf') == '4'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\nassert solution('aaaaaaaaa') == '-1'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"4 6\") == \"4\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2', 'abca') == '-1'\nassert solution('4 5', 'asdf') == '4'\nassert solution('5 6', 'aaaaa') == '15'\nassert solution('5 7', 'aaaaa') == '-1'\nassert solution('10 100', 'ajihiushda') == '233'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"10 10\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\naaaaa\n''') == \"4\"\nassert solution('''5 7\naaaaa\n''') == -1\nassert solution('''10 100\najihiushda\n''') == 233"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"233\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'First example'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'Second example'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO', 'Third example'"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 5 4') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\"\"\"\nimport itertools"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == \"NO\"\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\"\n''')"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\nassert solution(\"10:00\") == \"10:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('01:00\\n05:03') == '02:02'\nassert solution('06:15\\n16:23') == '16:23'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5:00') == '5:00'\nassert solution('11:11') == '11:11'\nassert solution('10:00') == '10:30'\nassert solution('10:00') == '10:30'\nassert solution('10:00') == '10:30'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('9123573') == '8'\n\n'''"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('8') == '1'\nassert solution('10') == '2'\nassert solution('42') == '6'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"3\",\"7\",\"2\",\"8\"]) == \"27\"\nassert solution([\"3\",\"10\",\"2\",\"7\"]) == \"14\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('4048') == '8'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"\nassert solution(1) == \"1\"\n\n\n## Input:\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''5''') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\nprint(solution(input))"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nprint(solution())\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"7\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n3\n2 6\n1 3\n0 4\n3 3\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '7'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n6\n1 2\n9 20\n1 5\n''') == '5'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"0 4\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '0'\nassert solution('7') == '7'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'NO'\n\nassert solution('''\n2\n10 10\n''') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 5, 5, 5, 5]) == \"YES\"\nassert solution([5, 5, 5, 5, 5, 2]) == \"YES\"\nassert solution([5, 5, 5, 5, 5, 2, 4]) == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 100\\najihiushda\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"4\", \"first\"\nassert solution(\"10 10\") == \"-1\", \"second\"\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == expected"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\nasdf\n\n''') == \"4\"\n\nassert solution('''\n5 6\naaaaa\n\n''') == \"15\"\n\nassert solution('''\n5 7\naaaaa\n\n''') == \"-1\"\n\nassert solution('''\n10 100\najihiushda\n\n''') == \"233\""
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n\" +\n                 \"aaaaa\" +\n                 \"\\n\") == \"4\"\n\nassert solution(\"4 5\\n\" +\n                 \"asdf\" +\n                 \"\\n\") == \"4\"\n\nassert solution(\"5 7\\n\" +\n                 \"aaaaa\" +\n                 \"\\n\") == \"-1\"\n\nassert solution(\"10 100\\n\" +\n                 \"ajihiushda\" +\n                 \"\\n\") == \"233\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''1 100 1\n''') == '3'\nassert solution('''30 20 10\n''') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n\") == \"3\\n\"\nassert solution(\"30 20 10\\n\") == \"39\\n\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"4\"\nassert solution(\"2 1 1\") == \"4\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 0 0') == '1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1\n\n''') == '4'\nassert solution('''3 2 2\n\n''') == '7'\nassert solution('''1 100 1\n\n''') == '3'\nassert solution('''30 20 10\n\n''') == '39'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 1, 1]) == 4\nassert solution([3, 2, 2]) == 7\nassert solution([1, 100, 1]) == 3\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1\n''') == '4'\n\nassert solution('''\n30 20 10\n''') == '39'\n\nassert solution('''\n2 2 2\n''') == '7'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('5 6') == 'YES'\nassert solution('5 7') == 'YES'\nassert solution('7 4') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\n\n'''\nThere are 4 types of tiles, with the following descriptions:\n\nTop left: 6\n\nTop right: 5\n\nBottom left: 5\n\nBottom right: 7\n\nRight: 8\n\nLeft: 9\n\nBottom center: 9\n\nTop center: 5\n\nRight center: 7\n\nMiddle: 4\n\nBottom center: 4\n\nRight top left: 1 1\n\nRight top right: 1 1\n\nRight bottom left: 1 1\n\nRight bottom right: 1 1\n\nLeft top left: 1 1\n\nLeft top right: 1 1\n\nLeft bottom left: 1 1\n\nLeft bottom right: 1 1\n\nTop left top center: 1 1\n\nTop left bottom center: 1 1\n\nTop center top center: 1 1\n\nTop center bottom center: 1 1\n\nTop center left top: 1 1\n\nTop center left bottom: 1 1\n\nTop center right top: 1 1\n\nTop center right bottom: 1 1\n\nBottom left top center: 1 1\n\nBottom left bottom center: 1 1\n\nBottom center top center: 1 1\n\nBottom center bottom center: 1 1\n\nBottom center left top: 1 1\n\nBottom center left bottom: 1 1\n\nBottom center right top: 1 1\n\nBottom center right bottom: 1 1\n\nLeft top left bottom center: 1 1\n\nLeft top left top center: 1 1\n\nLeft top right bottom center: 1 1\n\nLeft top right top center: 1 1\n\nLeft bottom left top center: 1 1\n\nLeft bottom left bottom center: 1 1\n\nLeft bottom right top center: 1 1\n\nLeft bottom right bottom center: 1 1\n\nRight top left bottom center: 1 1\n\nRight top left top center: 1 1\n\nRight top right bottom center: 1 1\n\nRight top right top center: 1 1\n\nRight bottom left top center: 1 1\n\nRight bottom left bottom center: 1 1\n\nRight bottom right top center: 1 1\n\nRight bottom right bottom center: 1 1\n\nTop center left bottom center: 1 1\n\nTop center left top center: 1 1\n\nTop center right bottom center: 1 1\n\nTop center right top center: 1 1\n\nBottom center left bottom center: 1 1\n\nBottom center left top center: 1 1\n\nBottom center right top center: 1 1\n\nBottom center right bottom center: 1 1\n\nRight top left center: 1 1\n\nRight top right center: 1 1\n\nRight bottom left center: 1 1\n\nRight bottom right center: 1 1\n\nLeft top center: 1 1\n\nLeft bottom center: 1 1\n\nRight top center: 1 1\n\nRight bottom center: 1 1\n\nTop center left: 1 1\n\nTop center right: 1 1\n\nBottom center left: 1 1\n\nBottom center right: 1 1\n\nFor example, the square is symmetric:\n\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\nSo the output should be \"YES\":\n\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('3 4') == 'NO'\nassert solution('1 2') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES', solution('2 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100')\nassert solution('3 3\\n1 1\\n4 4\\n5 5\\n1 2\\n2 2\\n2 2\\n1 2\\n1 2\\n3 3') == 'NO', solution('3 3\\n1 1\\n4 4\\n5 5\\n1 2\\n2 2\\n2 2\\n1 2\\n1 2\\n3 3')\nassert solution('5 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n1 2\\n1 3\\n5 3\\n5 5\\n1 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'YES', solution('5 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n1 2\\n1 3\\n5 3\\n5 5\\n1 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1')\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('2\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'NO'"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''2\n3 3\n1 2\n4 5\n1 2''') == \"NO\"\nassert solution('''2\n4\n1 2\n1 2''') == \"YES\"\nassert solution('''1\n3\n1 1''') == \"YES\"\nassert solution('''5\n6\n1 2\n1 2''') == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\nassert solution('''\n4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\nassert solution('''\n4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''10\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''8\n''') == '1'\nassert solution('''10\n''') == '2'\nassert solution('''11\n''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n5''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n''') == '0'\nassert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n()()\n''') == '1'\nassert solution('''3\n()())\n''') == '5'\nassert solution('''2\n(((\n''') == '0'\nassert solution('''5\n(((\n''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"(()))()\") == \"0\"\nassert solution(\"()\") == \"4\"\nassert solution(\"(((()))())\") == \"5\"\nassert solution(\"(()())\") == \"4\"\nassert solution(\"((()))()()\") == \"3\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n()))()\n\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'\nassert solution('''3\n(()\n\n''') == '0'\nassert solution('''4\n(((\n\n''') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == 5\nassert solution(\"3\") == 4\nassert solution(\"2\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"5\"\nprint(solution(input_data))\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n()))()\n\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n()))()\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'\nassert solution('''5\n((((\n\n''') == '7'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5071\n5701\n7501\n7510\n7150''') == '4'\nassert solution('''705\n1241367''') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == \"4\"\nassert solution('''125\n6\n7\n8\n9\n5''') == \"2\"\nassert solution('''5071\n71241\n74321\n753\n74589\n7465432''') == \"4\"\nassert solution('''705\n7319\n7794\n8021\n8139\n81443\n8143\n81453\n81463''') == \"1\"\nassert solution('''12345\n67890\n91011\n92134\n92345\n92450''') == \"5\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\n\nassert solution(input) == -1"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n'''"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nabcd\\n') == '4\\n1 1 1 1 1\\n'\nassert solution('6\\nabcd\\n') == '2\\n1 1 1 1 1 2\\n'\nassert solution('9\\nabacbecfd\\n') == '2\\n1 1 1 2 1 2 1 2 1\\n'\nassert solution('12\\naaabbcbb\\n') == '2\\n1 2 1 2 1 2 1 1 2\\n'\nassert solution('7\\nabcde\\n') == '3\\n1 1 1 1 1 1 1\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nabcd') == '1'\nassert solution('3\\nabcd') == '1 2 1'\nassert solution('2\\nabcd') == '1 2 1 2'\nassert solution('1\\nabcd') == '1 1 1 1 1'\nassert solution('8\\nabccde') == '1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n'\n    'a'\n) == '1\\n'\n\n\nassert solution(\n    '2\\n'\n    'a'\n) == '1\\n'\n\n\nassert solution(\n    '2\\n'\n    'c'\n) == '1\\n'\n\n\nassert solution(\n    '3\\n'\n    'a'\n) == '2\\n'\n\n\nassert solution(\n    '4\\n'\n    'a'\n) == '3\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"abc\") == \"2\"\nassert solution(\"abcd\") == \"2\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 1 1 1 1'\nassert solution('3') == '1 2 2 2 2'\nassert solution('4') == '1 3 1 3 1'\nassert solution('5') == '1 4 1 4 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 1 1 1'\nassert solution('4') == '1 1 1 1 1'\nassert solution('5') == '1 1 1 1 1'\nassert solution('6') == '1 1 1 1 1 1'\nassert solution('7') == '1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\na\nb''') == 'NO'\nassert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\na\\nb\\nc\\n') == \"NO\"\nassert solution('5\\na\\naba\\nabacaba\\nba\\n') == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == \"YES\"\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n\n''') == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\n\nstdin = \"\"\"3\nab\na\nb\n\n\"\"\"\n\n\"\"\"\n\nInput\n5\nab\na\nb\n\nOutput\nYES\nab\na\nb\n\nInput\n5\na\nab\na\nb\n\nOutput\nNO\n\nInput\n3\nqwerty\nqwerty\nqwerty\n\nOutput\nYES\nqwerty\nqwerty\nqwerty\n\n\"\"\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"YES\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4\\n'\n                '4 2 3 1 5 1 6 4') == '5'\n\nassert solution('5 2\\n'\n                '3 1 2 1 3') == '0'\n\nassert solution('5 100\\n'\n                '12 34 55 43 21') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"5\"\nprint(solution(input))\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution(\"4 4\") == '5'\nassert solution(\"5 2\") == '0'\nassert solution(\"5 100\") == '5'\nassert solution(\"4 1 2 1 3\") == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n\n'''\n\nn, k = map(int, input().split())\nli = list(map(int, input().split()))\n\nmishka_first = li[0]\nmishka_last = li[-1]\n\ncount = 0\n\nwhile len(li) > 0:\n    if mishka_first <= mishka_last:\n        if mishka_first <= k and mishka_last >= k:\n            mishka_last = max(li)\n            li.remove(max(li))\n            count += 1\n        elif mishka_first >= k:\n            mishka_first = min(li)\n            li.remove(min(li))\n            count += 1\n    else:\n        mishka_first = min(li)\n        li.remove(min(li))\n        count += 1\n\nprint(count)"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('5 100 2') == '5'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"5 2\") == \"5\"\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 4]) == \"12\"\nassert solution([3, 9]) == \"14\"\nassert solution([3, 6]) == \"12\"\nassert solution([506, 2708]) == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\") == \"12\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 4\\n') == '12'\n\nassert solution(\n    '3 9\\n') == '14'\n\nassert solution(\n    '3 6\\n') == '12'\n\nassert solution(\n    '506 2708\\n') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '18'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1\\n\") == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'NO'\nassert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('6') == 'YES'\nassert solution('8') == 'YES'\nassert solution('9') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"10\") == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nabacb') == 'YES'\nassert solution('10\\nabacb') == 'NO'\nassert solution('0\\nabcde') == 'YES'\nassert solution('1\\nabcd') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"25\"\nassert solution(\"1 10\") == \"25\"\nassert solution(\"2 10\") == \"25\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"4 5\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 10\n''') == '25'\nassert solution('''\n3 4\n''') == '-1'\nassert solution('''\n2 2\n''') == '25'\nassert solution('''\n3 4\n''') == '-1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"10 10\") == \"25\"\nassert solution(\"1 1\") == \"-1\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('4 2') == '25'\nassert solution('3 2') == '25'\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"\nimport math\nA, B = map(int, stdin.split())\n\nans = 100000000000000000000000\nans2 = 0\n\nfor i in range(A, B):\n    tmp = math.floor(i * 0.08)\n    tmp2 = math.floor(i * 0.1)\n    if tmp < tmp2:\n        if tmp < ans:\n            ans = tmp\n            ans2 = i"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '25'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"2 2\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 4\") == \"25\"\nassert solution(\"0 5\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n5 6\n''') == '25'\nassert solution('''4 7\n2 2\n''') == '-1'\nassert solution('''6 4\n7 4\n''') == '7'\nassert solution('''1 3\n4 3\n''') == '4'\nassert solution('''2 3\n4 3\n''') == '4'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"7 8\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"YES\"\nprint(solution(input_string))"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"1 4\") == \"NO\"\nassert solution(\"1 5\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"YES\"\nassert solution(\"1 2\\n\") == \"NO\"\nassert solution(\"1 1\\n\") == \"YES\"\nassert solution(\"8 2\\n\") == \"NO\"\nassert solution(\"8 3\\n\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n25 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n20 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('26 6') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n1 2\n3 4\n5 6\n7 8\n''') == 'YES\\n3 4\\n2 6\\n5 8\\n'''\nassert solution('''\n6 7\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == 'NO\\n'''\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 6\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 1\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO\\n'"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('5 10') == '5'\nassert solution('5 10') == '5'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n5 3\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n        '5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\n    assert solution(\n        '3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\n    assert solution(\n        '3 1\\n300 -300\\n1 299\\n1 123\\n') == '3'\n    assert solution(\n        '1 0\\n300 -300\\n1 299\\n1 123\\n') == '1'\n    assert solution(\n        '0 0\\n300 -300\\n1 299\\n1 123\\n') == '0'\n    "
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"8 -1\") == \"8\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n\nassert solution('''\n1 2\n10 -2\n''') == '1'\n\nassert solution('''\n1 10\n2 -1\n''') == '0'\n\nassert solution('''\n1 100\n2 -1\n''') == '1'"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n6 8\\n10 -2\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\""
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('10 -2') == '9'\nassert solution('8 -1') == '7'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('10') == 'YES'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2 1\n3 2 2\n2 2 2\n3 3 3\n3 3 3\n3 3 3\n1 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n''') == \"NO\"\nassert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n\n''') == \"YES\"\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n\n''') == \"NO\""
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('1') == 'YES'\nassert solution('5') == 'YES'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('10') == 'YES'\n\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''\n100 10\n99 -10\n100 -10\n1 -100\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES', \"easy\"\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES', \"easy\"\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES', \"easy\"\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO', \"easy\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n3 4\n5 2\n5 -3\n2 1\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == \"YES\"\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == \"YES\"\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == \"YES\"\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n4 2\n4 0\n10 -10\n5 -3''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n\n--or--\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test) == \"YES\"\nassert solution(easy) == \"YES\"\nassert solution(hard) == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 11\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n1\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n2\") == \"NO\"\nassert solution(\"10 1 5\\n1\") == \"NO\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n7 1 5\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''\n7 1 11\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 0 1'"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == \"YES\"\nassert solution('''\n10 1 11\n1\n''') == \"YES\"\nassert solution('''\n10 1 5\n2\n''') == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1 11\n1\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 \n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcde\") == \"abcde\"\nassert solution(\"baaba\") == \"bb\"\nassert solution(\"asdfasdf\") == \"0\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 1\nassert solution(\"baaba\") == 2\nassert solution(\"ab\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3, 'One test failed'\nassert solution('bb') == 2, 'One test failed'\nassert solution('abcde') == 0, 'One test failed'\nassert solution('asdfasdf') == 3, 'One test failed'"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == 3\nassert solution(example_input_2) == 2\nassert solution(example_input_3) == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"ab\") == 2\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string()) == 0\nassert solution(input_string((\"\"\"\nbbaba\nbb\n\"\"\", \"\"\"\nbbaba\nab\n\"\"\", \"\"\"\nabcde\nabcde\n\"\"\"))) == 3\nassert solution(input_string((\"\"\"\nasdfasdf\nfasd\n\"\"\", \"\"\"\nbbaba\nab\n\"\"\", \"\"\"\nabcde\nabcde\n\"\"\"))) == 0"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3 2\"\nassert solution(\"10 3\") == \"10 3\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"3 2\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3 2\"\nassert solution(\"2.07\") == \"3 2\"\nassert solution(\"0.15\") == \"3 2\"\nassert solution(\"-5.00\") == \"9 5\"\nassert solution(\"1.50\") == \"2 3\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == \"3 2\"\nassert solution('2.572479') == \"10 3\"\nassert solution('4.024922') == \"9 9\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 3 2\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\""
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\""
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\nassert solution(\"6 2 3\") == \"NO\", \"Should print \"NO\" if the tree does not satisfy the conditions.\"\nassert solution(\"10 4 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\nassert solution(\"8 5 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"6 3 3\n\"\"\") == 'YES', f\"Your solution {solution('')} did not work\"\nassert solution(\n\"\"\"6 2 3\n\"\"\") == 'NO', f\"Your solution {solution('')} did not work\"\n\nassert solution(\n\"\"\"10 4 3\n\"\"\") == 'YES', f\"Your solution {solution('')} did not work\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"1100\", \"Wrong!\"\nassert solution(\"2 2 1\") == \"1100\", \"Wrong!\"\nassert solution(\"3 3 3\") == \"101100\", \"Wrong!\"\nassert solution(\"5 3 6\") == \"01010100\", \"Wrong!\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1\n''') == '1100'\nassert solution('''3 3 3\n''') == '101100'\nassert solution('''5 3 6\n''') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"0011\"\nassert solution(input()) == \"110100\"\nassert solution(input()) == \"101100\"\nassert solution(input()) == \"011001\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 6''') == '01010100'\nassert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"110100\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO', 'First'\nassert solution('3') == 'YES', 'Second'\nassert solution('1') == 'YES', 'Third'\n\n\n'''\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\n\nstdin = \"\"\"\n3\nab\nbc\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"ababab\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ac\") == \"YES\"\nassert solution(\"abca\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nab\\nbc') == 'acbbac'\nassert solution('2\\nab\\nbc') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"bc\") == \"NO\"\nassert solution(\"aa\") == \"YES\"\nassert solution(\"bc\") == \"YES\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('5') == '1 2 3 4 5'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"-2 1\") == \"-2 1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2, 1, 1, 2') == '2, 1, 1, 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n1 1 1 1\n\"\"\") == \"1 2 3 4 5\"\nassert solution(\"\"\"5\n-1 2 2\n\"\"\") == \"-1\"\nprint(solution(input()))"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3 1 2\"\nassert solution() == \"1 2 3\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('2') == '1'\nassert solution('5') == '3 1 2 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('7') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 2 1\") == \"1 1 2\"\nassert solution(\"2\\n1 1\") == \"1 2\"\nassert solution(\"2\\n2 2\") == \"2 2\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 2\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"-1\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3\n''') == '1'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2 3\n''') == '1'\nassert solution('''10\n1 2 2 3 3 3 1 1 2 3 3 1 1\n''') == '5'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n''') == '1', f'''Your first solution ({solution('''3\n1 2 3\n''')}) did not work. Fix it.'''\nassert solution('''5\n2 2 2 3 3\n''') == '2', f'''Your second solution ({solution('''5\n2 2 2 3 3\n''')}) did not work. Fix it.'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"30\") == \"3\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '4'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 2 2 3 3') == '2'\nassert solution('10\\n0 0 0 1 1 1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INP_1) == \"1\"\nassert solution(INP_2) == \"2\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5\"\n\n\"\"\"\n\nimport sys\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('10\\n') == '5\\n'\nassert solution('100\\n') == '25\\n'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('10') == '5'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '5'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"10\\n\"]) == \"5\"\nassert solution([\"10\\n\"]) == \"5\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('7') == '3'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"319\") == \"119 226\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('3') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"319\") == \"119 226\"\nassert solution(\"686\") == \"22 334\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\"\n\n---------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 2'\nassert solution('10') == '1 1 1'\nassert solution('15') == '0 15'\nassert solution('15') == '1 1 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '22 334'\nassert solution('6') == '2 2'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '3 4 4 4 4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n4 1 2 2 1 5 3\"\n) == \"3\\n7 7\\n2 3\"\n\nassert solution(\n    \"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\n) == \"2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\"\n\nassert solution(\n    \"4\\n1 1 1 1\"\n) == \"4\\n4 4\\n1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3 7 7'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 4 4'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3''') == '2 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nprint(solution(input()))"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n''') == '4 4 4 4 4'\nprint(solution(input()))\n\n@author Ntruong\n'''\nimport sys"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 4 4 4 4'\nassert solution('''\n3\n3 3\n1 1\n2 2\n''') == '3 4'\nassert solution('''\n7\n1 1 1 1 1 5 3\n''') == '2 4'\nassert solution('''\n4\n1 1 1 1\n1 2\n2 3\n3 4\n''') == '2 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 1'\nassert solution('4') == '4 4'\nassert solution('11') == '4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 5 5 4 3 2 1 1'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_2) == \"NO\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n3 1 2\n'''\n) == 'YES'\n\n\nassert solution(\n'''\n4\n3 2 2 3\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n5\n3 2 4 3 2\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n5\n1 2 3 4\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n7\n1 2 3 4 3 2 1\n'''\n) == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '-1'\nassert solution('4') == '0'\nassert solution('6') == '4'\nassert solution('6') == '3 5 4 5'\nassert solution('6') == '4 5 3 5'"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'accd\\n'\n) == '-1'\n\nassert solution(\n    '4\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'accd\\n'\n) == '4 3 5 4 5'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '-1'\n\nassert solution('''\n3\nabcd\naccd\n\n''') == '4 5 4 5'\n\nassert solution('''\n10\naabcdefghijk\naabbccddeeffghi\n\n''') == '2 6 3 1 7 5 4 1 9 2 6 8 5'\n\nassert solution('''\n4\nabcdef\naccd\n\n''') == '1 5 4'\n\nassert solution('''\n4\nabcd\naccd\n\n''') == '1 4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    4\n    abcd\n    ''') == '-1'\n\nassert solution('''\n    2\n    aa\n    bb\n    ''') == '4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '4'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"-1\"\nassert solution() == \"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PSPS'\nassert solution('2') == 'PS'"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"SPPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PSPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PSPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PPSPPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"SPPS\"\nassert solution(\"3\") == \"PSPS\"\nassert solution(\"4\") == \"PS\"\n\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"PPS\"\nassert solution(\"2\") == \"PS\"\nassert solution(\"1\") == \"SP\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\na\naa\naaa\na\n''') == 'PS'\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n''') == 'SPPSPSPS'\nassert solution('''\n2\na\nc\n\n''') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"SPPSPSPS\"\nassert solution() == \"PSPSPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'PPSS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\naba\\nab\") == \"PPS\"\nassert solution(\"3\\na\\nab\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'SPPSPSPS', \"Wrong\"\nassert solution('3') == 'PS', \"Wrong\"\nassert solution('2') == 'PS', \"Wrong\"\nassert solution('2') == 'PS', \"Wrong\"\nassert solution('1') == 'P', \"Wrong\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,4,6,8,10]) == \"1\"\nassert solution([3,4,6,8,10]) == \"2\"\nassert solution([2,3,6,8,10]) == \"3\"\nassert solution([1,2,3,4,5]) == \"5\"\nassert solution([5,4,3,2,1]) == \"4\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('2 4 6 8 10') == '2'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"2\"\n\"\"\"\nn, *a = map(int, input().split())\na.sort(reverse=True)\nprint(a[0])\n\"\"\"\nn, *a = map(int, input().split())\na.sort(reverse=True)\nprint(a[0])\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5\n5\n3\n''') == '1'\n\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '2'\n\nassert solution('''\n10\n5\n5\n4\n4\n3\n2\n2\n2\n''') == '1'\n\nassert solution('''\n20\n50\n40\n20\n10\n10\n10\n10\n10\n10\n10\n''') == '2'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 7 4 5 6\") == \"1\"\nassert solution(\"3 4 7 5 6\") == \"2\"\nassert solution(\"0 1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n''') == '1'\nassert solution('''\n3\n10\n10 10\n9 9\n8 8\n7 7\n''') == '4'\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 4 3\") == \"1\"\nassert solution(\"3 3 4 5\") == \"2\"\nassert solution(\"2 4 8 4\") == \"1\"\nassert solution(\"2 1 1 2\") == \"1\"\nassert solution(\"10 4 4 2\") == \"1\"\n\n\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4,"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    6\n    8\n    10\n    ''') == '1'\n\nassert solution('''\n    2\n    4\n    6\n    8\n    10\n    ''') == '0'\n\nassert solution('''\n    8\n    8\n    10\n    ''') == '1'\n\nassert solution('''\n    6\n    8\n    10\n    ''') == '0'\n\n''')\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 3 2 1') == '3'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '2'\nassert solution('10') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10\\n'\n    '1 1 0 1 1 0 1 0 1 0\\n'\n    '5\\n'\n    '1 1 1 1\\n') == '2'\nassert solution(\n    '5\\n'\n    '1 1 1 1\\n') == '0'\nassert solution(\n    '4\\n'\n    '1 1 1\\n') == '0'\nassert solution(\n    '20\\n'\n
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 1 0 1 1 0 1 0 1 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('5\\n1 1 1 1') == '1'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n\"\"\"\n\nimport math\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, *a = map(int, stdin.split())\n        # print(n, a)\n        if max(a) == 0:\n            return str(0)\n\n        a = list(map(lambda x: 1 if x else 0, a))\n        # print(a)\n\n        m = 1\n        for i in range(1, n):\n            if a[i - 1] == a[i + 1]:\n                m += 1\n\n        print(m)\n        return str(m)\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"6\\n6 90 12 18 30 18\\n\") == \"4\""
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('5') == 1\nassert solution('10') == 2\nassert solution('4') == 1\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('3\\n2 6 8') == '3'\nassert solution('10\\n1000 9 10 9 8 7 6 5 4 3 2 1') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n1 2 3 4 5\\n') == '1'\nassert solution(\n    '6\\n6 90 12 18 30 18\\n') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"3\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution([1, 2, 3, 4, 5]) == \"1\"\nassert solution([6, 90, 12, 18, 30, 18]) == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1\n3\n4''') == '1'\nassert solution('''1\n3\n7''') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('6\\n90 12 18 30 18') == '4'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('5\\n1 2 3 4 5') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('50') == '3'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\n\nassert solution('''2\n100\n''') == '1'\n\nassert solution('''2\n0\n''') == '0'\n\nassert solution('''1\n1\n''') == '0'\n\nassert solution('''3\n1 1 1\n''') == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('100') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n100\n''') == '2'\nassert solution('''\n2\n100\n''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('100') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"2\"\n    ) == \"2\\n\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('6') == '3'\nassert solution('100') == '4'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 2 3 3 3 2\") == \"2\"\nassert solution(\"1 2 2 2 3 3 3 3\") == \"2\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\"\n) == \"3\", \"First\"\nassert solution(\n    \"\"\"\n5 3\n1 0 0 0 1\n\"\"\"\n) == \"2\", \"Second\"\nassert solution(\n    \"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"3\", \"Third\"\nassert solution(\n    \"\"\"\n5 10\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"2\", \"Fourth\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''10 10\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''\n5 10\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6 2\\n'\n    '0 1 1 0 0 1\\n'\n) == '3'\n\nassert solution(\n    '5 3\\n'\n    '1 0 0 0 1\\n'\n) == '2'\n\nassert solution(\n    '5 10\\n'\n    '0 0 0 0 0 0\\n'\n) == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"-1\"\nassert solution(\"10 3\\n1 0 0 0 1\\n\") == \"2\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n5 3\n1 0 0 0 1\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\") == \"3\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''15 3\n0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data_01) == \"3\"\nassert solution(input_data_02) == \"2\"\nassert solution(input_data_03) == \"0\"\nassert solution(input_data_04) == \"-1\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '-1'"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('12') == '6'\nassert solution('5') == '3'\nassert solution('18') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('10') == '6'\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '5'\n\"\"\"\n\n\"\"\"\n---My Solution---\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\\n\"\nassert solution(\"2\") == \"2\\n\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"6\"\nassert solution(\"5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\n'''"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"3\\n\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(((())\n''') == '')\nassert solution('''\n)()()\n''') == 0\nassert solution('''\n(()\n''') == 1\nassert solution('''\n()\n''') == 2\nassert solution('''\n)\n''') == 3\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"()\") == \"0\"\nassert solution(\"(()\") == \"0\"\nassert solution(\"(())\") == \"0\"\nassert solution(\")()\") == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s1) == \"3\", f\"actual: {solution(s1)}, expected: {3}\"\nassert solution(s2) == \"0\", f\"actual: {solution(s2)}, expected: {0}\"\nprint(solution.__doc__)"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(6) == 3\nassert solution(8) == 0"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"()\") == 1\nassert solution(\"(())(\") == 1\nassert solution(\"(())(()\") == 2\nassert solution(\"(((((((((((()()()()(((()()()(())())()()))(((((()())(((((()()())((())))))))()))))))()))()()))))))\") == 2\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(((())') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == \"3\"\nassert solution('6') == \"0\"\nassert solution('8') == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((())') == '3'\nassert solution('()()()') == '0'\nassert solution('(())') == '0'\nassert solution('(((())))') == '0'\nassert solution('((((()))))') == '3'\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3, \"WRONG\"\nassert solution(\"bb\") == 1, \"WRONG\"\nassert solution(\"bbba\") == 0, \"WRONG\"\nassert solution(\"baaba\") == 2, \"WRONG\"\nassert solution(\"ab\") == 1, \"WRONG\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == solution(s)\n\n'''\nfrom itertools import combinations\nfrom collections import Counter"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ababa\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"bbaba\") == 3\nassert solution(\"bcabcde\") == 3\nassert solution(\"bcde\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\nassert solution('''\nbaaba\nab\n''') == 2\nassert solution('''\nabcde\nabcde\n''') == 0\nassert solution('''\nasdfasdf\nfasd\n''') == 3"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('asdfasdf') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"bbaba\") == 3\nassert solution(\"bbba\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"bbaba\",\n    \"bb\",\n) == 3\n\nassert solution(\n    \"baaba\",\n    \"ab\",\n) == 2\n\nassert solution(\n    \"abcde\",\n    \"abcde\",\n) == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"bbb\") == 1\nassert solution(\"\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 3"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n-10 -10 -10 -10\n''') == '-10'\nassert solution('''\n2 3 2 2\n''') == '8'\nassert solution('''\n4 5 5 6\n''') == '6'\nassert solution('''\n1 2 2 2\n''') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(input) == your_output\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 2\") == '2'"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 2 2 2\") == \"4\"\nassert solution(\"2 2 5 5\") == \"7\"\nassert solution(\"2 2 3 3\") == \"6\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 3 4 4') == '8'\nassert solution('5 5 7 5') == '5'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 1 3''') == '2'\nassert solution('''1 2 1 1''') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 2') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 2') == '1'\nassert solution('1 2 3 4') == '6'\nassert solution('1 0 0 0') == '0'\nassert solution('0 0 0 1') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '2'\nassert solution('6\\n') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"1\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == '2'\nassert solution(\"4\") == '1'\nassert solution(\"5\") == '0'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1 4 5\\n') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('7\\n8 5 1 4 3 6 9\\n') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n\"\"\"\nimport math\nimport sys\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 1 2') == '1'\nassert solution('8 5 4 2') == '2'\nassert solution('4 6 3 2') == '3'\n\n'''\n\n\nimport math\nfrom itertools import accumulate\n\nh, n, l, r = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ngood_time = list(range(l, r + 1))\ngood_time = list(accumulate(good_time))\n\nprint(max(good_time))"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 24 21 23') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22''') == \"3\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n20 21 23\n''') == '3'\nassert solution('''\n20\n''') == '0'\nassert solution('''\n20\n1 23\n''') == '3'\nassert solution('''\n20\n0 3\n''') == '0'\nassert solution('''\n7\n16 17 14 20 20 11 22\n''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"5 10 10 20 20\") == \"1\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n\nassert solution('''\n8 12 8 14 12 10 18\n12 13 8 14 8 10 18\n''') == '2'\n\nassert solution('''\n5 12 5 17 5 12\n17 5 12 5 12\n''') == '1'\n\nassert solution('''\n8 12 8 14 12 10 18\n12 13 8 14 8 10 18\n''') == '2'\n\nassert solution('''\n7 6 4 5 8 10\n8 5 3 5 7 7\n''') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == \"1\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == 3\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\nassert solution() == \"1\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 10 50 110 250') == '4'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('5\\n1 2 5 6 7 10 21 23 24 49') == '1'\nassert solution('6\\n1 2 3 4 5 6 7') == '0'"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 10 50 110 250\\n\") == \"4\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"10 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 10 50 110 250\\n\"\n    \"4 7 12 100 150 199\\n\"\n    \"5 2 6 7 10 21 23 24\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 7 12 100 150 199\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 5 6 7 10 21 23 24\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 3 12 100 150 199\\n\"\n    \"10 4 7 12 100 150 199\\n\"\n    \"1 2 10 5 6 7 10 21 23 24 49\\n\"\n    \"5 6 7 10 21 23 24 49\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"4 3 12 100 150 199\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"5 6 7 10 21 23 24 49\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\nassert solution('7\\n5 2 11 3 7') == '1 4'\nassert solution('8\\n5 2 11 3 7') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n8\\n3\\n6\") == \"1 2\"\nassert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"6\\n5 2 11 3 7\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\"\nassert solution(\"5\\n2 5 10 1 10 2\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\"\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4 8 3 6\n5 2 11 3 7\n''') == '1 2'\nassert solution('''5\n2 4 8 3 6\n''') == '2 4'\nassert solution('''5\n1 2\n''') == '1 2'"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''5\n5 2 11 3 7\n''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 3\") == \"1 2\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"121\") == \"021\"\nassert solution(\"120110\") == \"120120\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211220'\nassert solution('''6\n120110''') == '120120'\n\nprint(solution(input()))"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"021\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    121\n    ''') == '021'\nassert solution('''\n    6\n    000000\n    ''') == '001122'\nassert solution('''\n    6\n    211200\n    ''') == '211200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"00\"\nassert solution(\"1\") == \"01\"\nassert solution(\"0\") == \"10\"\nassert solution(\"2\") == \"00\"\nassert solution(\"0\") == \"01\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    121\n    ''') == '021'\nassert solution('''\n    6\n    000000\n    ''') == '001122'\nassert solution('''\n    6\n    211200\n    ''') == '211200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211200'\nassert solution('''6\n120110''') == '120120'"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '5'\nassert solution('6 4') == '6'\nassert solution('6 5') == '6'\nassert solution('6 6') == '6'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"6 1\\n4\") == \"4\"\nassert solution(\"6 1\\n5\") == \"5\"\nassert solution(\"6 1\\n6\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('10 1') == '10'\nassert solution('5 2') == '2'\nassert solution('10 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('12 1') == '5'\nassert solution('12 3') == '2'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '4'\nassert solution('6 3') == '4'\nassert solution('6 4') == '3'\nassert solution('6 5') == '3'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"7\"\nassert solution(\"3 4 1 2 3\") == \"9\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 1\n3\n''') == '4'\nassert solution('''\n6 1\n2\n''') == '2'\nassert solution('''\n6 1\n4\n''') == '4'\nassert solution('''\n6 1\n3\n''') == '4'\nassert solution('''\n6 2\n2\n''') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 1\n3\n\n''') == '4'\nassert solution('''6 2\n3\n\n''') == '3'\nassert solution('''6 3\n1\n2\n3\n\n''') == '0'\nassert solution('''6 4\n1\n2\n3\n4\n\n''') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 0') == '1'\nassert solution('6 -1') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"6 2 4\") == \"2\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 4\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5\") == \"3\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"4 5 6\") == \"5\"\nassert solution(\"4 5 4\") == \"4\"\nassert solution(\"4 3 2\") == \"3\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 4\\n') == '2'\nassert solution('6 1 4\\n') == '1'\n\n\"\"\"\n\nstdin = input()\nX, K, D = stdin.split()\nX, K, D = int(X), int(K), int(D)\n\nX = X + (D - 1) * K\nX = X + abs(X - (D - 1)) * K\n\nprint(int(X))\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 -2\") == \"1\"\nassert solution(\"-1 2 -2\") == \"1\"\nassert solution(\"-1 -2 2\") == \"1\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == \"2\"\nassert solution('5 3 5') == \"5\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"5 2 4\") == \"4\"\nassert solution(\"6 9 7\") == \"6\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 1') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('5 5 -2') == '2'\nassert solution('2 9 1') == '1'\nassert solution('-4 4 5') == '5'\nassert solution('-5 4 5') == '4'\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 4') == '4'\nassert solution('5 1 10') == '1'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"101\") == \"2\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"123456\") == \"1\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '1'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n\n\"\"\""
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('31415') == '1'\nassert solution('3,14,15') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('6') == '1'\nassert solution('1000000') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"27\"\nprint(solution(__import__(\"sys\").stdin.read()))\n\n\n\n\n\n\"\"\"\n\n\nfrom sys import stdin\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"27\"\nassert solution(\"2\") == \"4\"\n\"\"\"\n\na = int(input())\n\nprint(f\"{(a+1)%27}\")"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"20\"\nassert solution(\"7\") == \"21\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\">3\") == \"012\"\nassert solution(\"<3\") == \"213\"\nassert solution(\"<=-3\") == \"213\"\nassert solution(\"==-3\") == \"213\"\nassert solution(\"=<-3\") == \"213\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '9'\nassert solution('10') == '36'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '27'\nprint('Super solution')\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5', f\"Your solution {solution('5')} did not pass the assertion test\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint('use os.environ.get(\"ABC\")')\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('927') == '0'\nassert solution('48') == '1'\nassert solution('132') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n2 5 3 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == ''\nassert solution('2 5 3 1') == '4'\nassert solution('12 5 3 1') == '10'\nassert solution('13 5 3 1') == '10'\nassert solution('14 5 3 1') == '11'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 3 1') == '1'\nassert solution('4 5 3 1') == '2'\nassert solution('2 2 2 3 1') == '2'\nassert solution('3 3 3 1') == '2'\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '4'\n\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 5 3 1') == \"4\"\nassert solution('3 2 4 1 1') == \"5\"\nassert solution('1 2 3 4 5') == \"10\"\nassert solution('2 2 5 6 5') == \"9\"\nassert solution('1 3 5 6 7') == \"11\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 3\") == \"5\"\nassert solution(\"2 5 3 1\") == \"2\"\n\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 3 1\") == \"4\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n1\n10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n6\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n6\n8 7\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\nassert solution('''\n6\n8 7\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\nassert solution('''\n6\n999999999999999999999999999999\n999999999999999999999999999999\n''') == '999999999999999999999999999999'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == \"1\"\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999734\n''') == \"99999732\"\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == \"99999733\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n') == '2'\n\nassert solution('4\\n5 1\\n6 7\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('2\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('3\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('1\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n'''"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n''')\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''5\n8 7\n8 1\n6 10\n999999999 999999997\n99999999 999999999\n''') == '1'\nassert solution('''5\n8 7\n8 1\n6 10\n999999999 999999997\n99999999 999999999\n''') == '99999999'\nassert solution('''5\n8 7\n8 1\n6 10\n99999999 999999997\n99999999 999999999\n''') == '99999999'\nassert solution('''5\n8 7\n8 1\n6 10\n99999999 999999997\n99999999 999999999\n''') == '99999999'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(input) == '8'\nassert solution(input) == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n0 1\") == \"1\"\nassert solution(\"10 10\\n1 3 2 1 4 5 3 5\\n1 2\") == \"16\"\nassert solution(\"5 5\\n3 2 3 2 2\\n1 2 1 2 2 2\") == \"12\"\nassert solution(\"5 5\\n4 1 4 2 1 2\\n0 1 2 1 1 1 1\") == \"60\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 3 4 5\n1 3\n0 1\n''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n') == '1'\nassert solution('3 3\\n2 1 3\\n1 3\\n0 2\\n') == '4'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n1 1\\n0 1\") == \"0\"\nassert solution(\"4 4\\n2 2\\n1 1\\n0 0\") == \"4\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '2'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n0 1\\n') == '1'\nassert solution('3 3\\n1 2 3\\n1 2 4\\n0 1 2\\n0 3\\n') == '4'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1'\nassert solution(input_t) == '2'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == \"1\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 10 5\") == \"11.0\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 3 4 5') == '1.00000000000000'\nassert solution('2 4 8 12') == '4.00000000000000'\nassert solution('5 4 8 15') == '4.00000000000000'\nassert solution('4 5 8 12') == '2.00000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.0000000000'\nassert solution('3 4 5 6') == '5.0000000000'\nassert solution('3 4 5 6 7') == '5.0000000000'\nassert solution('3 4 5 6 7 8') == '5.0000000000'\nassert solution('3 4 5 6 7 8 9') == '5.0000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"8 1 3 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 8 0\") == \"5.00000000000000000000\"\nassert solution(\"4 3 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 3 1 1\") == \"4.00000000000000000000\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('100 100 100 0') == '200.000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 10 0''') == '5.00000000000000000000'\nassert solution('''4 5 9 0''') == '5.00000000000000000000'\nassert solution('''1 1 10 0''') == '3.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '5.0'\nassert solution('2 2 5') == '5.0'\nassert solution('3 2 5') == '5.0'\nassert solution('4 2 5') == '5.0'\nassert solution('5 2 5') == '5.0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 9 1') == '5.00000000000000000000'\nassert solution('3 4 8 1') == '3.800000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 9 0''') == '5.00000000000000000000'\nassert solution('''2 4 3 5''') == '5.00000000000000000000'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == '8'\nassert solution(\"3 1\") == '6'\nassert solution(\"15 2\") == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n 1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n 1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n\n\n\"\"\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 4\n1 4 5 60 4\n''') == '8'\n\nassert solution(\n'''\n3 1\n1 1 1\n''') == '6'\n\nassert solution(\n'''\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\nprint(\"Congratulations! All test cases passed\")"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('15 2\\n1 1 1\\n') == '97'\nassert solution('4 4\\n1 1 1 1\\n') == '5'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '8'\n\n'''\n\nn, m = list(map(int, stdin.strip().split()))\na = list(map(int, stdin.strip().split()))"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n2\\n3 2\\n\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n    \"\"\") == \"6\"\n\nassert solution(\n    \"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n    \"\"\") == \"7\"\n\nassert solution(\n    \"\"\"\n1 0\n1000000\n    \"\"\") == \"0\""
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"1 0\") == \"0\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"6\\n2\\n3 2\\n\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\nassert solution('''\n1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '2'\nassert solution() == '6'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nczzzzzzzz\nzzzzzzzzzzzzzzzz\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n\"\"\") == \"\"\"Yes\"\"\".replace(\"\\n\", \"\")\n\n\"\"\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\n'''\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'No'"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'Yes'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nx\nx\nx\nx\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nabc\nzabc\nzabcb\n\"\"\") == \"Yes\""
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''\n1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('5 4') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"6\\n2\\n4\\n2\\n3\\n2\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('3 5') == '3 2'"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input) == example_output\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 4') == '2'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '6'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('5 4') == '6'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('4') == '4'\n\n'''\n\nimport heapq"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n\nassert solution() == 'LLRL'\n\nassert solution() == 'LLRRLL'\n\nassert solution() == 'LLRRLL'\n\nassert solution() == 'LLRRLL'"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"4\\n1 2 4 3\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution() == \"LLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n\nInput:\n7\n1 3 5 6 7 4 2\n\nOutput:\n7\nRLRRRR\n'''"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\nfrom collections import deque\nfrom collections import defaultdict\nfrom functools import lru_cache\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = defaultdict(list)\n\nfor i in range(n - 1, -1, -1):\n    b[a[i]].append(i)"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INP) == \"4\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n2 1 5 4 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7\n1 3 5 6 7 4 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\n4\n1 2 4 3\n\"\"\") == \"LLRL\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\""
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"2\""
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 3') == '0'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution() == '2'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == \"1\"\nassert solution('5 3\\n1 2 3 4 5\\n') == \"2\"\nassert solution('5 3\\n1 2 3 4 5\\n') == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2 3 4 5\n\n''') == '1'\nassert solution('''\n5 3\n1 2 2 4 5\n\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n\n''') == '0'\nassert solution('''\n5 3\n1 2 3 3 3\n\n''') == '0'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 2 3\") == \"5\"\n\n---Time Complexity---\nThe solution runs in constant time O(1).\n\n---Auxiliary Space---\nAuxiliary space required for input: 2.\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"100 10 10\") == \"45\"\nassert solution(\"10 9 8\") == \"3\"\nassert solution(\"10000 10 10000 10\") == \"50000\"\nassert solution(\"10000000 1000000000 10\") == \"10\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 4\") == \"4\", \"Should return the number of blue balls\"\nassert solution(\"8 3 4\") == \"4\", \"Should return the number of blue balls\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4\") == \"4\"\n\n'''\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8 3 4\"\"\") == \"4\"\nassert solution(\"\"\"8 0 0\"\"\") == \"8\"\nassert solution(\"\"\"8 0 1\"\"\") == \"7\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3 4\n    ''') == '4'\nassert solution('''8 3 1\n    ''') == '1'\nassert solution('''8 0 3\n    ''') == '0'\nassert solution('''7 3 2\n    ''') == '1'\nassert solution('''7 1 0\n    ''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"4\", \"example\"\nassert solution(\"8 3 4\") == \"4\", \"even\"\nassert solution(\"1000000 2 3 4\") == \"4\", \"one billion\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('10 0 0') == '0'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    16 8 2 12\n''') == '4'\nassert solution('''\n    3\n    4 2 1\n''') == '-1'\n\nassert solution('''\n    3\n    4 3 6\n''') == '4'\nassert solution('''\n    10\n    1 2 1 2 3 2 4 3 6 4 8 5 7\n''') == '1'\nassert solution('''\n    10\n    3 4 2 4 5 1 1 1 1 2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '-1'\nassert solution('1') == '1'\nassert solution('2') == '48'\nassert solution('1') == '1'"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n12 5 4 4 4 7\n4\n3 6 2 1\n''') == '5'\n'''"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\n8 2 12 6 4 24 16 3\") == \"48\"\nassert solution(\"1\\n2\") == \"-1\"\nassert solution(\"2\\n1\") == \"4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '48'\nassert solution('1') == '4'"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n8\\n2\\n3\") == \"3\\n\"\nassert solution(\"8\\n8 2 12 6 4 24 16 3\") == \"4\\n\"\nassert solution(\"1\\n10\\n2\\n3\") == \"2\\n\"\nassert solution(\"8\\n8 2 12 6 4 24 16 3\\n\") == \"2\\n\"\nassert solution(\"1\\n10\\n2\\n3\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 2 12 6 4 24 16 3') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48', \"8\"\nassert solution('''\n9\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1', \"8\"\nassert solution('''\n12\n4 6 8\n2\n6\n''') == '-1', \"4 6 8\"\n\n\"\"\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2\n2 2\n1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n4 4 4 2\n0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1 1 3 1 2\n0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('5') == '2'\nassert solution('5') == '6'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\n\n'''\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '''\n3\n6 6 1\n'''\n\nassert solution('''\n5\n2 4 2 4 4\n''') == '''\n2\n2 4 \n'''\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '''\n1\n6 \n'''\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 5 5 1 6 1\n''') == '3'\nassert solution('''5\n2 4 2 4 4\n''') == '2'\nassert solution('''5\n6 6 6 6 6\n''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_value_1) == \"3\"\nassert solution(input_value_2) == \"2\"\nassert solution(input_value_3) == \"1\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"6 6 6 6 6\"\nassert solution(\"3\") == \"2 4\"\nassert solution(\"5\") == \"2 4\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nprint(solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n'''))"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n432\n\nOutput\n435\n\n\"\"\") == \"\"\"435\"\"\"\n\nassert solution(\n\"\"\"\n99\n\nOutput\n103\n\n\"\"\") == \"\"\"103\"\"\"\n\nassert solution(\n\"\"\"\n237\n\nOutput\n237\n\n\"\"\") == \"\"\"237\"\"\"\n\nassert solution(\n\"\"\"\n42\n\nOutput\n44\n\n\"\"\") == \"\"\"44\"\"\"\n\n\"\"\"\n\nThe function should return the nearest greater or equal interesting number for the given number $a$. That is, find the interesting number $n$ such that $n \\ge a$ and $n$ is minimal.\n\nHint: This problem is pretty easy if you are familiar with 'binary search'. Try to implement it first.\n\n\"\"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\n\n<!-- Note: This is a basic version of a real-world problem. -->\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution(\"1\\n\")) == \"1\"\nassert solution(solution(\"2\\n\")) == \"3\"\nassert solution(solution(\"4\\n\")) == \"5\"\nassert solution(solution(\"42\\n\")) == \"44\"\n\nassert solution(solution(\"87654\\n\")) == \"87654\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"42\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\nassert solution('237') == '237'"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"aba\"\nassert solution(input()) == \"aab\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"b\"\nassert solution(input()) == \"c\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4 1 0\\n3 2 1 0\\n3 4 2 1\\n1 2 1 3\\n1 2 1 2\\n1 2 2 3') == '1ac2'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac\", \"First test\"\nassert solution(\"abc\") == \"aac\", \"Second test\"\nassert solution(\"aba\") == \"aba\", \"Third test\""
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\", \"First\"\nassert solution('''\naac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\", \"Second\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"a\", \"Third\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"ac\", \"Fourth\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"bc\", \"Fifth\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\", solution(\"abac\")\nassert solution(\"abc\") == \"a\", solution(\"abc\")\nassert solution(\"abba\") == \"aba\", solution(\"abba\")\nassert solution(\"ecoosdcefr\") == \"ecodef\", solution(\"ecoosdcefr\")\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"381324141153243241700\", solution(\"38 13 24 14 11 5 3 24 17 0\")\nprint(solution(input()))\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n5\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"abac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"b\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"c\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aab\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"aaa\"\nassert solution(\"4\") == \"aaaa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ba'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'b'\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == 'a'\nassert solution(example_input_2) == 'zzzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"100\") == \"aaaa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"b\"\nprint(solution(input()))\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'a'\nassert solution(['5', '7']) == 'zya'\nassert solution('3') == 'zz'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(6) == 12\nassert solution(10) == 13\nassert solution(6) == 11"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nto be or not to be\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n10\na ab a a b ab a a b c\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n6\naa bb aa aa bb bb\n\"\"\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == \"12\"\nassert solution(test_input_2) == \"13\"\nassert solution(test_input_3) == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '12'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"12\"\nassert solution(\"2\\n\") == \"11\"\nassert solution(\"3\\n\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '13'\nassert solution(input()) == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('6') == '11'\nassert solution('10') == '11'\nassert solution('10') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nto be or not to be\\n') == '12'\nassert solution('6\\nAA BAA BA BA BA BA BA BA BA BA BA BA BA BA BA\\n') == '13'\nassert solution('10\\nA AA B AA BB B AA BB BB BB BB BB BB BB\\n') == '11'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6\nto be or not to be\n\"\"\") == \"12\"\nassert solution(\"\"\"10\na ab a a b ab a a b c\n\"\"\") == \"13\"\nassert solution(\"\"\"6\naa bb aa aa bb bb\n\"\"\") == \"11\""
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('6') == '11'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n) == \"3 2 3\"\nassert solution(\n    \"5 1\"\n) == \"1 5\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"4000\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '1'\nassert solution('4 2') == '2'\nassert solution('5 1') == '5'\nassert solution('8 3') == '20'\nassert solution('4 2') == '2 2'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '5'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"8 3\") == \"3 2 3\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n-1') == '0'\nassert solution('5\\n4 -2 3 2') == '1'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('7\\n-1 -1') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"0\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\ncounter = 0\n\nfor i in range(n - 1):\n    if a[i] > 0:\n        break\n    if a[i] + a[i + 1] == 0:\n        counter += 1\n\nprint(counter)\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n-5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\n\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n-5\n3\n2\n''') == '1'\n\nassert solution('''5\n4\n-2\n3\n-9\n2\n''') == '0'\n\nassert solution('''8\n16\n-5\n-11\n-15\n10\n5\n4\n-4\n''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''10\n16 -5 -11 -15 10 5 4 -4\n''') == '7'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n3\\n2\\n3\\n2\\n5\\n5\\n0\\n\") == \"0\\n2\\n10\\n\""
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n2 1\n2\n2\n''') == '2'\nassert solution('''\n10\n20\n''') == '10'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n1\n10\n1000000000 1000000000\n''') == '2000000000'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0\\n2\\n10'\nassert solution('1\\n100\\n2\\n5\\n2\\n100') == '0\\n2\\n10'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 100\") == \"0\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"2 1000000000\") == \"1000000000\"\nassert solution(\"1000000000 1000000000\") == \"2000000000\""
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\nassert solution('''\n6\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n3 1000000000\n2 1000000000\n1000000000 1000000000\n''') == '2000000000'\nassert solution('''\n7\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n3 1000000000\n2 1000000000\n1000000000 1000000000\n''') == '2000000000'\n\n'''"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"0\\n2\\n5\\n7\\n9\\n10\\n10\\n10\\n10\\n\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n2 100\n3 200\n4 300\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000''') == '1'\nassert solution('''1 1\n2 100\n3 200\n4 300\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000''') == '2'\nassert solution('''1 1\n2 100\n3 200\n4 300\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000''') == '3'\nassert solution('''1 1\n2 100\n3 200\n4 300\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000''') == '4'\nassert solution('''1 1\n2 100\n3 200\n4 300\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000''') == '5'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"2\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''101''') == '4'\nassert solution('''1''') == '-1'\nassert solution('''2''') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"12\") == \"None\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '4'\nassert solution('01') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''101''') == '4'\nassert solution('''1''') == '-1'\nassert solution('''999''') == '-1'\nassert solution('''101''') == '4'\nassert solution('''22222''') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '4'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101') == '4'\n\nprint(solution(input()))"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"4\""
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"121\") == \"-1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"101\") == \"4\"\nassert solution(\"7777\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(testinput_1) == \"4\"\nassert solution(testinput_2) == \"1\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\nassert solution(\"5 30\") == \"-1\"\nassert solution(\"5 100\") == \"1\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\nassert solution(\"5 21\") == \"1\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 26') == '-1'\nassert solution('5 16') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '4'"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"\") == \"-\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8') == '4', solution('5 8')\nassert solution('7 10') == '2', solution('7 10')\nassert solution('5 16') == '1', solution('5 16')\nassert solution('5 26') == '-1', solution('5 26')\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"5 30\\n1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example1) == '3'\nassert solution(example2) == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('5\\n1 3 6 9 12') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n24 21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('4\\n1 3 6 9 12') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(samples) == solutions\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '-1'\nassert solution('5') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '3'\nassert solution('5\\n') == '1'\nassert solution('2\\n') == '-1'\nassert solution('3\\n') == '1'\n\nstdin = input()\nassert solution(stdin) == str(int(stdin))\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n24 21 14 10\n\n''') == '3'\nassert solution('''\n2\n500 500\n\n''') == '0'\nassert solution('''\n3\n14 5 1\n\n''') == '-1'\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 20\") == \"1\"\nassert solution(\"10 30\") == \"2\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '6'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '2'\nassert solution('0 0') == '0'"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"36 4 1 25 9 16\") == \"5\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2 10\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == '4'\nassert solution('''\n4 4\n1 10 100 1000\n''') == '4'\nassert solution('''\n4 4\n1 10 100 1000\n''') == '4'\nassert solution('''\n4 4\n1 10 100 1000\n''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\n\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '5'"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 1, \"Should be: 1\"\nassert solution(\"1 1\") == 1, \"Should be: 1\"\nassert solution(\"1 2\") == 1, \"Should be: 1\"\nassert solution(\"2 2\") == 1, \"Should be: 1\"\nassert solution(\"1 1 1\") == 1, \"Should be: 1\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n') == '5', 'First'\nassert solution('6 1\\n') == '2', 'Second'\nassert solution('4 4\\n') == '4', 'Third'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 9\") == \"7\"\nassert solution(\"10 5 3 2\") == \"1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"10 10 5 10\\n4 10 2 3\") == \"10\"\nassert solution(\"3 4 10\\n6 6 5 5\") == \"2\"\nassert solution(\"3 10\\n10 9 8\") == \"3\"\nassert solution(\"4 5 10\\n5 10 7 5\") == \"4\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\"\n\n====="
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 1 1\") == \"1\"\nassert solution(\"3 2 1\") == \"2\"\nassert solution(\"3 4 1\") == \"4\"\nassert solution(\"3 5 1\") == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 2') == '-1'\nassert solution('2 3 4') == '3'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == 8\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"7 2\") == \"2\"\nassert solution(\"2 5 10 7\") == \"8\""
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '8'"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('5 10 7\\n7 8 3 6') == '7'\nassert solution('5 10 7\\n8 10 3 6\\n8 8 3 6') == '7'\nassert solution('5 10 7\\n7 8 3 6\\n8 7 3 6') == '7'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"8\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 3 4\"\"\") == \"Yes\\nYes\\nYes\\nNo\\nYes\\nYes\"\"\"[1:-1]\n\nassert solution(\"\"\"2 2 3\"\"\") == \"Yes\\nYes\\nNo\\nYes\\nNo\\nYes\"\"\"[1:-1]\n\nassert solution(\"\"\"8 5 6\"\"\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\"\"\"[1:-1]\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 4') == 'Yes\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2') == 'No'\nassert solution('6 3 4\\n3\\n1\\n3\\n2') == 'Yes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2') == 'Yes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2') == 'Yes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2') == 'Yes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n1\") == \"No\"\nassert solution(\"6 3 4\\n1\\n3\\n2\\n3\") == \"No\"\nassert solution(\"6 3 4\\n1\\n3\\n2\\n3\\n5\\n2\\n6\\n6\") == \"Yes\"\nassert solution(\"6 3 4\\n1\\n2\\n3\\n2\\n1\\n1\\n1\") == \"No\"\nassert solution(\"6 3 4\\n1\\n2\\n3\\n2\\n1\\n1\\n1\\n2\\n2\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n', 'First'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n', 'Second'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\nassert solution('''\n2 2\n0 0 0\n1 0 1\n\n''') == 'NO'\nassert solution('''\n3 3\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''3 3\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n\n''') == 'NO'\nassert solution('''5 5\n0 0 0 0 0\n1 0 0 0 0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\n''') == 'NO'\nassert solution('''5 3\n0 0 0\n1 0 1\n1 1 0\n1 1 0\n1 1 0\n\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n1 1 1\\n0 0 0\\n1 0 1\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n1 1\n0 1\n''') == \"YES\"\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == \"YES\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('3 4') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"NO\""
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 1\n0 1\n\"\"\"\n    ) == \"YES\", \"YES\"\nassert solution(\n\"\"\"\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\"\"\"\n    ) == \"YES\", \"YES\"\nassert solution(\n\"\"\"\n1 1\n0 1\n\"\"\"\n    ) == \"NO\", \"YES\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\nprint(solution(sys.stdin.read()))\n\"\"\""
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'Yes'\nassert solution(sample_input_2) == 'No'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(5) == 'No'\nassert solution('434') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n73\n\n''') == 'Yes'\nassert solution('''\n372\n\n''') == 'No'\nassert solution('''\n121\n\n''') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123') == 'Yes'\nassert solution('321') == 'No'\nassert solution('437') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"333\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"432\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5\n''') == \"Yes\"\nassert solution('''6\n1\n2\n3\n4\n5\n6\n''') == \"Yes\"\nassert solution('''3\n1\n2\n''') == \"No\"\nassert solution('''7\n1\n2\n3\n4\n5\n6\n7\n''') == \"No\"\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n\n''') == '5'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('3 3 3 2 2 2') == '2'"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INP) == \"6\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution('6 2 1') == '3'"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 2 1\"\n) == \"3\"\n\nassert solution(\n    \"5 2 1\"\n) == \"4\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n1 0 0 1 0 1') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1 0 0 1 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''\n6 2 1\n1 1 0 1 0 1\n''') == '2'\nassert solution('''\n5 2 1\n0 0 0 1 0\n''') == '5'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == \"4\"\nassert solution('2+2') == \"-46\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'''"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == \"4\"\nassert solution('2+2') == \"-46\"\nassert solution('112-37') == \"375\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nprint('Problem solved!')"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == '4', \"Should be: 4\"\nassert solution(\"2+2\") == '-46', \"Should be: -46\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution('3 2\\n1 3\\n3 2\\n2 3\\n1 2\\n3 1\\n3 1\\n2 4\\n3 4') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('5 5\\n') == 'NO'\n\n--------------------------------------\nThe king of Berland organizes a ball! $n$ pair are invited to the ball, they are numbered from $1$ to $n$. Each pair consists of one man and one woman. Each dancer (either man or woman) has a monochrome costume. The color of each costume is represented by an integer from $1$ to $k$, inclusive.\n\nLet $b_i$ be the color of the man's costume and $g_i$ be the color of the woman's costume in the $i$-th pair. You have to choose a color for each dancer's costume (i.e. values $b_1, b_2, \\dots, b_n$ and $g_1, g_2, \\dots g_n$) in such a way that:  for every $i$: $b_i$ and $g_i$ are integers between $1$ and $k$, inclusive;  there are no two completely identical pairs, i.e. no two indices $i, j$ ($i \\ne j$) such that $b_i = b_j$ and $g_i = g_j$ at the same time;  there is no pair such that the color of the man's costume is the same as the color of the woman's costume in this pair, i.e. $b_i \\ne g_i$ for every $i$;  for each two consecutive (adjacent) pairs both man's costume colors and woman's costume colors differ, i.e. for every $i$ from $1$ to $n-1$ the conditions $b_i \\ne b_{i + 1}$ and $g_i \\ne g_{i + 1}$ hold. \n\nLet's take a look at the examples of bad and good color choosing (for $n=4$ and $k=3$, man is the first in a pair and woman is the second):\n\nBad color choosing:   $(1, 2)$, $(2, 3)$, $(3, 2)$, $(1, 2)$ \u2014 contradiction with the second rule (there are equal pairs);  $(2, 3)$, $(1, 1)$, $(3, 2)$, $(1, 3)$ \u2014 contradiction with the third rule (there is a pair with costumes of the same color);  $(1, 2)$, $(2, 3)$, $(1, 3)$, $(2, 1)$ \u2014 contradiction with the fourth rule (there are two consecutive pairs such that colors of costumes of men/women are the same). \n\nGood color choosing:   $(1, 2)$, $(2, 1)$, $(1, 3)$, $(3, 1)$;  $(1, 2)$, $(3, 1)$, $(2, 3)$, $(3, 2)$;  $(3, 1)$, $(1, 2)$, $(2, 3)$, $(3, 2)$. \n\nYou have to find any suitable color choosing or say that no suitable choosing exists.\n\n\n-----Input-----\n\nThe only line of the input contains two integers $n$ and $k$ ($2 \\le n, k \\le 2 \\cdot 10^5$) \u2014 the number of pairs and the number of colors.\n\n\n-----Output-----\n\nIf it is impossible to find any suitable colors choosing, print \"NO\".\n\nOtherwise print \"YES\" and then the colors of the costumes of pairs in the next $n$ lines. The $i$-th line should contain two integers $b_i$ and $g_i$ \u2014 colors of costumes of man and woman in the $i$-th pair, respectively.\n\nYou can print each letter in any case (upper or lower). For example, \"YeS\", \"no\" and \"yES\" are all acceptable.\n\n\n-----Examples-----\nInput\n4 3\n\nOutput\nYES\n3 1\n1 3\n3 2\n2 3\n\nInput\n10 4\n\nOutput\nYES\n2 1\n1 3\n4 2\n3 4\n4 3\n3 2\n2 4\n4 1\n1 4\n3 1\n\nInput\n13 4\n\nOutput\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\nassert solution('16 4') == 'NO'\nassert solution('2 1') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n\n1 2\n2 3\n3 4''') == \"YES\"\n\nassert solution('''10 4\n\n1 3\n3 1\n2 3\n3 2\n2 4\n4 1\n4 3\n4 2\n3 4\n\n''') == \"YES\"\n\nassert solution('''13 4\n\n1 2\n2 3\n3 4\n4 1\n4 3\n4 2\n3 4\n2 3\n1 4\n4 1\n3 1''') == \"NO\"\n\nassert solution('''8 7\n\n1 2\n1 3\n2 4\n2 5\n2 6\n3 5\n4 5\n4 6\n4 7\n\n''') == \"YES\"\n\nassert solution('''8 10\n\n1 2\n1 3\n2 4\n2 5\n2 6\n3 5\n4 5\n4 6\n4 7\n5 6\n5 7\n\n''') == \"YES\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"5 5\") == \"YES\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == \"YES\"\nassert solution('10 4') == \"YES\"\nassert solution('13 4') == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n3 2\n2 3\n''') == \"YES\"\nassert solution('''\n10 4\n1 3\n1 4\n3 2\n2 4\n4 1\n4 3\n3 2\n2 4\n4 1\n1 4\n3 1\n''') == \"YES\"\nassert solution('''\n13 4\n1 3\n1 4\n4 2\n3 4\n4 3\n3 2\n2 4\n4 1\n1 4\n3 1\n''') == \"NO\"\n\n'''"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"4 3 1\") == \"100\""
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1 5') == '-1'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('5 1 2') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == \"18\"\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == \"100\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INP) == EXP"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"18\"\nassert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"-1\""
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1\n\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n12\n1\n\n\"\"\") == \"21\"\nassert solution(\n\"\"\"\n13\n1\n\n\"\"\") == \"12\"\nassert solution(\n\"\"\"\n15\n1\n\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n10\n1\n\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"21\"\nassert solution(input()) == \"15\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n0011\n\n''') == '4'\nassert solution('''\n12 6\n000010000100\n\n''') == '15'\nassert solution('''\n13 2\n00100000\n\n''') == '13'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n5 2\n00100\n    \"\"\"\n    ) == \"3\"\n\nassert solution(\n    \"\"\"\n6 1\n000000\n    \"\"\"\n    ) == \"4\"\n\nassert solution(\n    \"\"\"\n12 6\n000010000100\n    \"\"\"\n    ) == \"15\"\n\nassert solution(\n    \"\"\"\n4 1\n0011\n    \"\"\"\n    ) == \"4\""
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '21'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 1\n0011''') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(0).read()) == '3'\nassert solution(open(1).read()) == '4'\nassert solution(open(2).read()) == '21'\nassert solution(open(3).read()) == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 1\n0011\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n5 2\n00100\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n6 1\n000000\n\"\"\"\n) == \"21\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"12 6\") == \"15\""
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"10 10\") == \"20\""
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'apple'\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"azzel\") == \"apple\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"azzel\") == \"apple\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 4 5\\n10 10\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5\\n10 20 30 40 50\\n30 20 40 50\\n60 30\\n50 40 30\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5\\n10 20 30 40 50\\n30 20 40 50\\n60 30\\n50 40 30\\n40 30\\n30 40\\n20 40\\n10 30\\n50 40\\n50 40\\n40 30\") == \"5\"\nassert solution(\"6\\n1 2 3 4 5\\n10 20 30 40 50\\n30 20 40 50\\n60 30\\n50 40 30\\n40 30\\n30 40\\n20 40\\n10 30\\n50 40\\n50 40\\n40 30\") == \"1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2 5\\n1 2 3\\n6 3 4\") == \"5\"\nassert solution(\"2\\n1 2\\n3 4\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2 3\\n1\\n\") == \"0\"\nassert solution(\"3\\n4\\n3 2\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 2 1') == '2'\nassert solution('4\\n4 2 3') == '5'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n1 2\") == \"2\"\nassert solution(\"2\\n3 3\\n3 2\") == \"3\"\nassert solution(\"2\\n10 5\\n10 5\") == \"10\"\nassert solution(\"2\\n15 7\\n15 7\") == \"15\"\nassert solution(\"2\\n15 9\\n15 9\") == \"15\"\n\nstdin = '''2\n1 2\n1 2'''"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n1\\n1\\n1\\n') == '0\\n'\nassert solution('1\\n2\\n2\\n1\\n1\\n1\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n1\\n2\\n1\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n1\\n2\\n3\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n1\\n2\\n3\\n') == '0\\n'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\\n2 3\") == \"4\"\nassert solution(\"1 3 2\\n4 2\") == \"4\"\nassert solution(\"1 3 4\\n2 4\") == \"4\"\n\nstdin = \"\"\"1 3 2\n4 2\n2 5\n\"\"\"\nassert solution(stdin) == \"4\"\n\nstdin = \"\"\"5 6 1\n2 3 4 5 6\n4 5 3 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n\"\"\"\nassert solution(stdin) == \"4\"\n\nstdin = \"\"\"4 5\n2 4\n3 4\n1 2 3\n1 3 4\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 5 6 8\") == \"3\"\nassert solution(\"1 3 1 2 3 4\") == \"3\"\nassert solution(\"3 6 8 8 1 5\") == \"6\"\nassert solution(\"1 5 9 10 1 1 2\") == \"11\"\n\nstdin = \"\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"20 20\\n3 1\\n6 5\") == \"3\"\nassert solution(\"2 10\\n3 1\\n6 5\") == \"2\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"2 500\") == \"3\"\nassert solution(\"2 800\") == \"3\"\nassert solution(\"2 700\") == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 700') == '3'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"20 500\\n20 500\\n20 500\") == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"3\"\nassert solution(input) == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('3 100') == '2'\nassert solution('2 100') == '1'\nassert solution('1 2 5') == '3'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"2 500\") == \"3\"\nassert solution(\"3 500\") == \"1\"\nassert solution(\"3 700\") == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"3\"\nassert solution(\"5 800\") == \"3\"\nassert solution(\"5 -2\") == \"5\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 3 4\") == \"4\"\nassert solution(\"2 4 5 7 8 9\") == \"7\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('7\\n5 5 4 5 5 5 6') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n4 8 8 7 8 4 4 5\n''') == '2'\nassert solution('''7\n5 5 4 5 5 5 6\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n        7\n        5 5 4 5 5 5 6\n    '''\n) == '2'\n\n    assert solution(\n        '''\n        8\n        4 8 8 7 8 4 4 5\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n        9\n        2 3 4 2 2 3 2 2 4\n    '''\n) == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n7\n5 5 4 5 5 5 6\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n8\n4 8 8 7 8 4 4 5\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\"\"\") == \"3\""
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('''\n10\n4 6 2 4 5 8 3 8 7 6\n''') == '3'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n1 2 3\") == \"1\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"100\"\nassert solution(\"3 3 1\\n1 100 1 1\") == \"-1\"\nassert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\""
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''\n5 1 3\n1 100 1 1\n''') == '-1'\n\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"100\"\nassert solution(\"0 0 0\\n0 0 0\\n\") == \"0\""
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 3\n1 100 1 1\n\"\"\") == \"100\"\nassert solution(\"\"\"\n5 2\n5 1 3 10 1\n\"\"\") == \"18\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n\nOutput\n18''') == '18', 'First'\nassert solution('''6 1 5\n10 30 30 70 10 10\n\nOutput\n100''') == '100', 'Second'\nassert solution('''7 2 4\n4 100 3 2 1\n\nOutput\n2945''') == '2945', 'Third'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"11\") == \"No\"\nassert solution(\"10\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('2') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\""
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'Yes'\nassert solution('1') == 'No'\nassert solution('5') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"Yes\"\nassert solution(\"1\\n\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == 'No'\nassert solution('1\\n') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == 'Yes'\nassert solution('11') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == 'Yes'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == 'Yes'\nassert solution('1') == 'No'"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 2 4\n2 4 5\n3 2 5\n''') == '2 2 6'\nassert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''4\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''10\n2 2 1\n1 3 2\n2 3 2\n2 4 2\n1 4 3\n1 5 1\n3 5 2\n2 5 3\n2 5 2\n1 5 3\n1 6 3\n2 6 5\n3 6 2\n3 6 1\n4 6 3\n5 6 3\n5 6 5\n''') == '2 2 3'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n2 3 4\n3 4 5''') == '2 2 4'\nassert solution('''3\n1 2 5\n2 3 5\n3 4 5''') == '2 2 6'\nassert solution('''3\n1 2 3\n2 3 4\n3 4 5''') == '2 2 4'"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3 5') == '2 2 6'\nassert solution('2\\n2 1 5') == '2 2 6'\nassert solution('3\\n1 2 5') == '2 2 6'\nassert solution('4\\n3 2 5') == '2 2 6'\n\n\"\"\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('4') == '1 1 2 2'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\""
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\nassert solution('5') == ''\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n\n''') == '2 2 6'\n''')\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 1 5'\nassert solution('1 2 5') == '1 1 5'\nassert solution('3 2 5') == '3 2 5'\nassert solution('3 1 5') == '3 1 5'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('3\\n1 1 1\\n1 1 1\\n1 1 1') == '1 1 1'\nassert solution('5\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '1 1 1'\nassert solution('4\\n2 1 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '0'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '2'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('redcoder') == '1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"cyber\") == \"1\"\nassert solution(\"racecar\") == \"1\"\n\n'''\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"suma\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abc') == '1'\nassert solution('redcoderddr') == '2'\nassert solution('redcoder') == '1'\nassert solution('abc') == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"2\"\nassert solution(\"redcoder\") == \"2\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"0\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'Yes', \"Should return Yes.\"\nassert solution('10') == 'No', \"Should return No.\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"11\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'Yes'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n13''') == 'Yes'\nassert solution('''3\n5''') == 'Yes'\n'''\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n8\n9''') == 'No'\n\nassert solution('''12\n6\n11''') == 'Yes'\n\nassert solution('''11\n20\n36''') == 'Yes'\n\nassert solution('''10\n20\n40''') == 'No'"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 9 7 5') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"7\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '0'\nassert solution('5 0 0 0 0') == '1'\nassert solution('5 0 9 7 5') == '5'\nassert solution('5 4 9 7 5') == '0'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('10\\n0 0 9 7 5') == '6'"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 4 9 7 5\n''') == \"5\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 9 7 5') == \"5\"\nassert solution('10 4 5 8 9 10 11 12 13 14 15') == \"4\"\nassert solution('15 15 15 15 15 15 15 15 15 15 15 15') == \"1\"\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == \"0\"\nassert solution('7 3 4 6 3 2 3 1 3 4 6') == \"1\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '5'\nassert solution('10') == '210'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 4 9 7 5\") == \"5\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1 1\") == \"14\"\nassert solution(\"3\\n3 3 3\") == \"0\"\nassert solution(\"3\\n3 3 3\\n3 3 3\") == \"3\"\nassert solution(\"1\\n2 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\\n1\\n\"\n\n\"\"\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 7') == '-1'\nassert solution('-2 -5') == '-10'\n\n\"\"\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\n\n'''"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10', 'Wrong answer!'\nassert solution('1 2') == '-1', 'Wrong answer!'\n\"\"\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n\") == \"10\"\nassert solution(\"2 4\\n\") == \"-1\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3\\n') == '3'\nassert solution('2 5\\n') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nprint(solution('2 5'))\nassert solution('1 5') == '-1'\nprint(solution('1 5'))\nassert solution('2 4') == '-1'\nprint(solution('2 4'))\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('0') == -1\nassert solution('1') == 1\nassert solution('1 2') == 2\nassert solution('1 2 3') == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\nassert solution('10 2') == '-1'"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n10 12 1 2 14\\n') == '5'\nassert solution('2 5\\n11 12 1 2 14\\n') == '4'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 6\\n10 12 1 2 14\\n\") == \"3\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 1\") == \"4\"\n\"\"\"\n\nfrom itertools import permutations"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"5\"\nassert solution(input) == \"5\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '5'\nassert solution('1 3') == '4'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5\\n10 12 1 2 14') == '5'\nassert solution('1 2\\n3 4') == '1'\n\n'''\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 3\\n1 2 1 2\\n\") == \"1\"\n\"\"\"\n\nN, M = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 5') == '5'\nassert solution('3 7') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '1'"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"100000\"\nassert solution(\"4 4\") == \"1110\"\nassert solution(\"5 6\") == \"111100\"\nassert solution(\"6 6\") == \"110110\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n1 1\n''') == '0'\nassert solution('''\n2 1\n''') == '1'\nassert solution('''\n3 1\n''') == '0'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"5 6 2\") == \"1\""
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"2\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(stdin='5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '1'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 1 1 2 5\n\n''') == 'YES', \"First example\"\nassert solution('''\n3\n4 5 3\n\n''') == 'YES', \"Second example\"\nassert solution('''\n3\n1 2 3\n\n''') == 'NO', \"Third example\""
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\\n2 1 1 2 5\\n\") == \"YES\"\n\nassert solution(\n    \"2\\n4 5 3\\n\") == \"YES\"\n\nassert solution(\n    \"3\\n1 2 3\\n\") == \"NO\"\n\nassert solution(\n    \"4\\n10 10\\n\") == \"YES\"\n\nassert solution(\n    \"5\\n1 2 3\\n\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"3\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n10\\n10\\n10\") == \"YES\"\nassert solution(\"3\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'NO'\nassert solution('10 10') == 'YES'\nassert solution('10 10') == 'YES'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"1000000000000 5\") == \"-1\"\nassert solution(\"1000000000000 5\") == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1000000000000 5\n-1 0 0 0 0\n    \"\"\") == \"-1\"\nassert solution(\n    \"\"\"\n1000000000000 6\n-3 -6 5 4\n    \"\"\") == \"4999999999996\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 6\n-3 -6 5 4\n''') == '4999999999996'\nassert solution('''\n10 4\n-1 0 0 0\n''') == '-1'\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\nassert solution('''\n-1 0 0 0 0\n''') == '-1'\nassert solution('''\n-1 0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nprint('All tests passed!')"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1000 6\\n\"\n    \"-100 -200 -300 125 77 -4\"\n) == \"9\"\n\nassert solution(\n    \"1000000000000 5\\n\"\n    \"-1 0 0 0 0\"\n) == \"4999999999996\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"999999999999\"\nassert solution(\"10 4\") == \"49999999999\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nABC\n\n2\nAB''') == 'AB'\nassert solution('''4\nAAAB\n\n2\nAA''') == 'AA'\nassert solution('''5\nZZZAA\n\n2\nZZ''') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join([\n    '4',\n    'ABACABA'\n])) == 'AB'\n\n\nassert solution('\\n'.join([\n    '6',\n    'ZZZAA'\n])) == 'ZZ'\n\n\nassert solution('\\n'.join([\n    '5',\n    'ZZZAA'\n])) == ''\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nABACABA\\n') == 'AB'\nassert solution('5\\nZZZAA\\n') == 'ZZ'\nassert solution('8\\nAAABBBBA\\n') == ''"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == 'AB', \"First\"\nassert solution('5') == 'ZZ', \"Second\"\nassert solution('AZAAAZ') == 'AZ', \"Third\"\nassert solution('AABBA') == 'AA', \"Fourth\"\nassert solution('AAABBB') == 'AA', \"Fifth\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\""
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nABACABA\\n\") == \"AB\"\nassert solution(\"1\\nZZZAA\\n\") == \"ZZ\"\nassert solution(\"2\\nAB\\n\") == \"\"\nassert solution(\"2\\nAA\\n\") == \"\"\nassert solution(\"3\\nAA\\n\") == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('codeforces') == 7\nassert solution('test') == 2\nassert solution('yes') == 1\nassert solution('b') == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('west') == 2\nassert solution('b') == 1\nassert solution('ab') == 2\n\n'''\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('b') == 'a'\nassert solution('codeforces') == 'codeforces'\nassert solution('test') == 'west'\nassert solution('yes') == 'yes'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('codeforces') == 'est'\nassert solution('test') == 'west'\nassert solution('b') == 'ab'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"west\") == 2\nassert solution(\"codeforces\") == 9\nassert solution(\"test\") == 7\nassert solution(\"yes\") == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"west\") == \"west\"\nassert solution(\"test\") == \"test\"\nassert solution(\"yes\") == \"yes\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('test') == 2\nassert solution('west') == 9\nassert solution('codeforces') == 7\nassert solution('b') == 1"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"west\") == 2, 'incorrect on test case 1'\nassert solution(\"codeforces\") == 9, 'incorrect on test case 2'\nassert solution(\"test\") == 1, 'incorrect on test case 3'\nassert solution(\"yes\") == 7, 'incorrect on test case 4'\nprint('Test is passed')\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"test\") == \"test\"\nassert solution(\"test\") == \"test\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 2') == '1'\nassert solution('5 1') == '5'\nassert solution('5 0') == '0'\nassert solution('5 1') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '1'\nassert solution('10 10') == '4'\nassert solution('3 3') == '2'"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"10 10\") == \"2\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('6') == '2'\nassert solution('7') == '2'\nassert solution('8') == '3'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 3') == '3'\nassert solution('9 2') == '2'\nassert solution('5 9') == '3'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"3 1\") == \"2\""
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 5') == '1'\nassert solution('3 3') == '2'\nassert solution('7 7') == '1'"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"1 10\") == \"0\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"artartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartartart"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\n\"\"\""
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes', 'akasaka'\nassert solution('dabac') == 'No', 'dabac'\nassert solution('amstoy') == 'Yes', 'amstoy'\n\"\"\""
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'No'\nassert solution('aba') == 'Yes'\nassert solution('aaa') == 'Yes'\nassert solution('aab') == 'Yes'\nassert solution('abcd') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''zabu''') == 'No'\nassert solution('''aba''') == 'No'\nassert solution('''aba''') == 'Yes'"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"anagram\") == \"No\"\nassert solution(\"reverse\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"kua\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('akasaka') == 'Yes'\nassert solution('koko') == 'No'\nassert solution('joseph') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Test #1 fail\"\nassert solution(\"leetcode\") == \"No\", \"Test #2 fail\"\nassert solution(\"\") == \"Yes\", \"Test #3 fail\"\nassert solution(\"noe\") == \"No\", \"Test #4 fail\"\nassert solution(\"1\") == \"No\", \"Test #5 fail\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n\"\"\"\n\nA, B = map(int, input().split())\nprint(A * B)\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n__import__('print').print(solution(__import__('sys').stdin))\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"196 1.5\") == \"196\"\nassert solution(\"0 1\") == \"0\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('88 99.99') == '88'\nassert solution('1.9') == '1'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"1.2 1.2\") == \"1\"\nassert solution(\"10.2 1.2\") == \"10\"\nassert solution(\"1.2 1.2\") == \"1\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"4\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"5 9\") == \"30\"\n\"\"\"\nimport math\n\nA, B = map(float, stdin.split())\n\nprint(int(A * math.floor(B)))\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1.10') == '10'\nassert solution('198.10') == '217'\nassert solution('198.10') == '217'"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"1 1.0\") == \"1\"\nassert solution(\"0.4 1.0\") == \"0\"\nassert solution(\"0.0099999 1.0\") == \"100\"\nassert solution(\"0.10 0.10\") == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n\n'''\n\nimport math"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n5\n2\n1\n''') == '3'\nassert solution('''\n5\n7\n3\n3\n''') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n1''') == '0'\nassert solution('''4\n4\n1\n2\n3''') == '1'\nassert solution('''8\n4\n1\n2\n3\n4\n5\n6\n7''') == '1'\nassert solution('''2\n7\n1\n2\n3\n4\n5\n6''') == '0'\nassert solution('''15\n16\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '14'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1\n1''') == '1'\nassert solution('''10\n1\n1''') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n7\n1\n2\n3\n2000000000\n763243547''') == '3'\nassert solution('''6\n7\n1\n2\n3\n2000000000\n763243547''') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3') == '3'\nassert solution('2\\n6') == '3'\nassert solution('3\\n7') == '0'\nassert solution('10\\n2000000000') == '999999999'\nassert solution('10\\n763243547') == '381621773'"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('9 9 1') == '3'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('5 5 5') == '0'\nassert solution('5 5 5') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([9, 9, 1]) == \"3\"\nassert solution([5, 4, 5]) == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('3 3 3') == '0'\nassert solution('10 10 10') == '3'"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n4 4 4\n1 2\n2 3\n3 4\n4 1\n''') == '0'\nassert solution('''\n10 7 9\n1 2\n1 3\n2 3\n2 4\n2 5\n3 6\n4 7\n4 8\n5 8\n6 9\n7 10\n''') == '3'"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4 5\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"4 1\\n\"\n    \"\") == \"1\"\nassert solution(\n    \"5 4 5\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"4 1\\n\"\n    \"\") == \"1\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution([5,4,5]) == '1'"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4\\n'\n    '3 2 4 1\\n'\n) == '4\\n'\n\nassert solution(\n    '6\\n'\n    '1 1 1 4 4 4\\n'\n) == '5\\n'\n\nassert solution(\n    '10\\n'\n    '1 1 1 5 5 5 5 5 5 5 5 5 5\\n'\n) == '10\\n'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('6') == '5'\nassert solution('8') == '8'\n\n\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 2 4 1\\n\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\\n\") == \"5\"\n\n'''"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12\\n') == '000001000002\\n000002000001\\n000001000001\\n'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''1 2\n2 3\n1 4\n''') == '000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"2 1\") == \"000001000002\\n000002000001\"\nassert solution(\"3 3\") == \"000001000001\\n000002000001\\n000001000002\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001\\n'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\""
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '000001000002\\n000002000001\\n000001000001\\n'\nassert solution('5 4') == '000001000002\\n000002000001\\n000001000001\\n000001000003\\n000002000002\\n000001000001\\n'\nassert solution('3 2') == '000001000002\\n000002000001\\n000001000001\\n'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"2 3\") == \"000001000002\\n000002000001\"\n\n---Input------\n\n---Output------"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 2') == '000002000001'\nassert solution('1 3') == '000001000001'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 10 8 40\n''') == '2'\nassert solution('''\n3\n3 8 4 20\n''') == '3'\nassert solution('''\n6\n10 1 8 4 9 2\n''') == '1'\n'''"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,2,8,40]) == \"2\"\nassert solution([3,2,8,40]) == \"4\"\nassert solution([2,8,40]) == \"2\"\n\n--------------------------------------------------------------\n\n----------------------------------"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '8'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '8'\nassert solution('5\\n2 5 4 10') == '4'\nassert solution('3\\n2 4 5') == '5'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"3\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n1 10 8 40\") == \"1\"\nassert solution(\"4\\n4 10 8 40\") == \"0\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 10 8 40\n''') == '2'\nassert solution('''5\n2 9 7 12 12\n''') == '1'\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"6\\n1 2 4 7 8 10\") == \"1\"\nassert solution(\"6\\n1 2 4 7 8 10\") == \"1\"\nassert solution(\"6\\n1 2 4 7 8 10\") == \"1\""
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 5\\n\") == \"4\"\nassert solution(\"5\\n10 10 10 10 10\\n\") == \"20\"\nassert solution(\"2\\n2 1 1 1\\n\") == \"3\""
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'false'\nassert solution('(___-___+___)___>__.') == '10'\nassert solution('(__-___+___)-___>__.') == '010'\nassert solution('(__+___+___)-___>__.') == '021'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'false'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == '0010'\nprint('Coding complete!')\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0101'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == 'false'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == \"0010\"\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == \"false\"\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == \"0250341\"\nassert solution('?(__+___+__-___):-___>__.\\n') == \"0101\"\nassert solution('?(__+___+__-___):-___>__.\\n') == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'false'\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(___+___+___+___):-___>__.') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"false\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3 11\"\n    \"2 1 5\"\n    \"7 10 0\"\n    ) == \"3\"\n\nassert solution(\n    \"3 4 2\"\n    \"1 3 3 3\"\n    \"0 3 3 2\"\n    ) == \"5\"\n\n\n\"\"\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n\"\"\") == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\n\nassert solution(\"3 4 1000000000000000000\") == \"0\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'\n\n\n\n'''"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nz\n''') == 'z'\nassert solution('''\nplmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'codeforces'\nassert solution(input()) == 'thisisexampletwo'\n\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t) == s\n\nInput:\n3\ncodeforces\n\nOutput:\ncodeforces\n\nInput:\n1\nz\n\nOutput:\nz"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'rocesfedoc'\nassert solution('16') == 'thisisexampletwo'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"codeforces\"\nassert solution(input()) == \"thisisexampletwo\"\nassert solution(input()) == \"z\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == 'thisisexampletwo'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"codeforces\"\n\nassert solution(\"16\") == \"thisisexampletwo\"\n\nassert solution(\"1\") == \"z\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 14\n        4 5''') == '9'\nassert solution('''5 14\n        4 5''') == '9'"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7987\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 14') == '19', \"Wrong!\"\nassert solution('381 492') == '873', \"Wrong!\"\nprint('Tests completed!')\n\"\"\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\", \"First\"\nassert solution(\"381 492\") == \"873\", \"Second\"\nassert solution(\"1 10\") == \"11\", \"Third\"\nassert solution(\"1 1\") == \"2\", \"Fourth\"\nassert solution(\"2 2\") == \"4\", \"Fifth\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 14') == \"19\"\nassert solution('381 492') == \"873\"\n\n'''\nfrom typing import List\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5 14',\n    '381 492') == '873'"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('5 4') == '9'"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\", solution(\"2+3\")\nassert solution(\"9-7\") == \"<[<->-]<\", solution(\"9-7\")\nprint(\"Checks passed\")\n\n\n\nclass IntCodeComputer:\n\n    def __init__(self, program: List[int], memory_size: int = 256, stdin: List[int] = []):\n        self.program = program + [0] * memory_size\n        self.stdin = stdin\n        self.relative_base = 0\n\n    def get_params(self, num_params, mode):\n        params = []\n        for i in range(num_params):\n            if mode % 10 == 0:\n                # position mode\n                if len(self.program) <= self.program[self.index + 1 + i]:\n                    # if program does not have enough params to fulfill the opcode, default to position 0\n                    params.append(self.program[self.index + 1 + i])\n                else:\n                    params.append(self.program[self.program[self.index + 1 + i]])\n            elif mode % 10 == 1:\n                # immediate mode\n                params.append(self.program[self.index + 1 + i])\n            else:\n                # relative mode\n                if len(self.program) <= self.program[self.index + 1 + i] + self.relative_base:\n                    # if program does not have enough params to fulfill the opcode, default to position 0\n                    params.append(self.program[self.index + 1 + i] + self.relative_base)\n                else:\n                    params.append(self.program[self.program[self.index + 1 + i] + self.relative_base])\n        return params\n\n    def operate(self, opcode: int, params: List[int], write: bool = False):\n        params.reverse()\n\n        if opcode == 1:\n            self.program[params[2]] = params[0] + params[1]\n        elif opcode == 2:\n            self.program[params[2]] = params[0] * params[1]\n        elif opcode == 3:\n            if len(self.stdin) == 0:\n                return\n            else:\n                self.program[params[0]] = self.stdin.pop()\n        elif opcode == 4:\n            return params[0]\n        elif opcode == 5:\n            if params[0]!= 0:\n                self.index = params[1]\n                return\n        elif opcode == 6:\n            if params[0] == 0:\n                self.index = params[1]\n                return\n        elif opcode == 7:\n            if params[0] < params[1]:\n                self.program[params[2]] = 1\n            else:\n                self.program[params[2]] = 0\n        elif opcode == 8:\n            if params[0] == params[1]:\n                self.program[params[2]] = 1\n            else:\n                self.program[params[2]] = 0\n        elif opcode == 9:\n            self.relative_base += params[0]\n        elif opcode == 99:\n            raise StopIteration()\n        else:\n            print(\"unknown opcode:\", opcode)\n            return\n\n        if write:\n            if opcode == 1 or opcode == 2 or opcode == 7 or opcode == 8:\n                # write only the affected param\n                params.reverse()\n                self.program[params[0] + (self.relative_base if len(self.program) <= params[0] + self.relative_base else 0)] = 1\n            elif opcode == 4:\n                # write only the affected param\n                params.reverse()\n                self.stdin.append(params[0])\n\n        self.index += num_params + 1\n        params.reverse()\n\n    def run(self, stdin: List[int] = None):\n        if stdin is None:\n            stdin = []\n        self.stdin = stdin\n        self.index = 0\n        while True:\n            opcode = self.program[self.index]\n            num_params = opcode % 100\n            mode = opcode // 100\n\n            if num_params == 0:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(1, mode), write=True)\n            elif num_params == 1:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(2, mode), write=True)\n            elif num_params == 2:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(3, mode), write=True)\n            elif num_params == 3:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(1, mode), write=True)\n            elif num_params == 4:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(1, mode))\n                yield self.stdin.pop()\n            elif num_params == 5:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(2, mode), write=True)\n            elif num_params == 6:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(2, mode), write=True)\n            elif num_params == 7:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(3, mode), write=True)\n            elif num_params == 8:\n                # opcode is not parameterized\n                self.operate(opcode, self.get_params(3, mode), write=True)\n            elif num_params == 9:\n                # opcode is not parameterized\n                self.relative_base += self.get_params(1, mode)[0]\n            elif num_params == 99:\n                # opcode is not parameterized\n                raise StopIteration()\n            else:\n                print(\"unknown opcode:\", opcode)\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3+3\n''') == '++>'\nassert solution('''9-7\n''') == '+++++++++>'\n'''\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Should be ++>.\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Should be +++>.\"\n\n\n\"\"\""
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\", \"1st example\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"2nd example\""
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2+3') == '++>', \"Wrong!\"\nassert solution('9-7') == '+++++++++>', \"Wrong!\"\n\"\"\"\n\nclass BrainfuckInterpreter:\n    def __init__(self):\n        self.memory = []\n        self.memory_start = 0\n        self.memory_end = 0\n        self.memory_size = 0\n        self.main_memory_start = 0\n        self.main_memory_end = 0\n        self.main_memory_size = 0\n        self.memory_data_pointer = 0\n        self.main_memory_data_pointer = 0\n        self.terminated = False\n    \n    def __len__(self):\n        return self.memory_size\n    \n    def __init__(self, data):\n        self.memory = []\n        self.memory_start = 0\n        self.memory_end = 0\n        self.memory_size = 0\n        self.main_memory_start = 0\n        self.main_memory_end = 0\n        self.main_memory_size = 0\n        self.memory_data_pointer = 0\n        self.main_memory_data_pointer = 0\n        self.terminated = False\n        \n        if (data == None):\n            self.terminated = True\n            return\n        \n        for i in range(len(data)):\n            self.memory.append(data[i])\n            if (self.memory_start == i):\n                self.memory_start = self.memory_end\n                self.memory_size = len(data)\n        self.memory_size = self.memory_size + 1\n        \n        self.main_memory_size = len(self.memory)\n        self.memory_data_pointer = self.memory_start\n        self.main_memory_data_pointer = self.main_memory_start\n    \n    def get_memory_end(self):\n        return self.memory_end\n    \n    def get_memory_size(self):\n        return self.memory_size\n    \n    def get_memory_start(self):\n        return self.memory_start\n    \n    def get_memory_data_pointer(self):\n        return self.memory_data_pointer\n    \n    def get_main_memory_start(self):\n        return self.main_memory_start\n    \n    def get_main_memory_end(self):\n        return self.main_memory_end\n    \n    def get_main_memory_size(self):\n        return self.main_memory_size\n    \n    def is_terminated(self):\n        return self.terminated\n    \n    def is_main_memory_terminated(self):\n        return self.main_memory_terminated\n    \n    def step(self):\n        if (self.memory_data_pointer == self.memory_end):\n            self.terminated = True\n            return\n        if (self.memory[self.memory_data_pointer] == '<'):\n            self.memory_data_pointer += 1\n        elif (self.memory[self.memory_data_pointer] == '>'):\n            self.memory_data_pointer -= 1\n        elif (self.memory[self.memory_data_pointer] == '['):\n            self.memory_data_pointer += 1\n        elif (self.memory[self.memory_data_pointer] == ']'):\n            self.memory_data_pointer -= 1\n        else:\n            self.memory_data_pointer += 1\n    \n    def move_memory_data_pointer(self, direction):\n        if (direction == '>'):\n            self.memory_data_pointer += 1\n        elif (direction == '<'):\n            self.memory_data_pointer -= 1\n        elif (direction == '['):\n            self.memory_data_pointer += 1\n        elif (direction == ']'):\n            self.memory_data_pointer -= 1\n        else:\n            self.memory_data_pointer += 1\n    \n    def main_memory_step(self):\n        if (self.main_memory_data_pointer == self.main_memory_end):\n            self.main_memory_terminated = True\n            return\n        if (self.main_memory[self.main_memory_data_pointer] == '<'):\n            self.main_memory_data_pointer += 1\n        elif (self.main_memory[self.main_memory_data_pointer] == '>'):\n            self.main_memory_data_pointer -= 1\n        elif (self.main_memory[self.main_memory_data_pointer] == '['):\n            self.main_memory_data_pointer += 1\n        elif (self.main_memory[self.main_memory_data_pointer] == ']'):\n            self.main_memory_data_pointer -= 1\n        else:\n            self.main_memory_data_pointer += 1\n    \n    def main_memory_move_memory_data_pointer(self, direction):\n        if (direction == '>'):\n            self.main_memory_data_pointer += 1\n        elif (direction == '<'):\n            self.main_memory_data_pointer -= 1\n        elif (direction == '['):\n            self.main_memory_data_pointer += 1\n        elif (direction == ']'):\n            self.main_memory_data_pointer -= 1\n        else:\n            self.main_memory_data_pointer += 1\n    \n    def print_memory(self):\n        for i in range(self.memory_start, self.memory_end):\n            if (self.memory[i] == ','):\n                print(' ', end = '')\n            else:\n                print(self.memory[i], end = '')\n    \n    def print_main_memory(self):\n        for i in range(self.main_memory_start, self.main_memory_end):\n            if (self.main_memory[i] == ','):\n                print(' ', end = '')\n            else:\n                print(self.main_memory[i], end = '')\n    \n    def print_terminated(self):\n        print('Terminated:', end = '')\n        if (self.memory_terminated):\n            print('!')\n        else:\n            print('.')\n        print('Main Memory:', end = '')\n        if (self.main_memory_terminated):\n            print('!')\n        else:\n            print('.')\n\nclass BrainfuckInterpreterHelper:\n    def __init__(self, data):\n        self.brainfuck_interpreter = BrainfuckInterpreter(data)\n    \n    def get_data(self):\n        return self.brainfuck_interpreter.memory\n    \n    def get_main_memory(self):\n        return self.brainfuck_interpreter.main_memory\n    \n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2+3') == \"++>\", \"Wrong output\"\nassert solution('9-7') == \"+++++++++>\", \"Wrong output\"\n\n\n'''"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Wrong\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Wrong\"\n\nsolution(\"9-7\")\n\n--\nclass Program:\n    def __init__(self, input_value):\n        self.code = input_value\n\n    def evaluate(self):\n        memory = []\n        pointer = 0\n        while True:\n            command = self.code[pointer]\n            if command == \">\":\n                pointer += 1\n            elif command == \"<\":\n                pointer = max(0, pointer - 1)\n            elif command == \"+\":\n                memory.append(self.code[pointer + 1])\n                memory.append(self.code[pointer + 2])\n                pointer += 3\n            elif command == \"-\":\n                memory.append(self.code[pointer + 1])\n                memory.append(-self.code[pointer + 2])\n                pointer += 3\n            elif command == \".\":\n                yield memory.pop()\n            elif command == \"[\":\n                temp = memory.pop()\n                if temp == 0:\n                    pointer = self.code[pointer + 1]\n                else:\n                    pointer += 2\n            elif command == \"]\":\n                temp = memory.pop()\n                if temp == 0:\n                    pointer = max(0, pointer - 1)\n                else:\n                    pointer = max(0, pointer - 1)\n            else:\n                raise ValueError(\"Unknown command\")\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>\", \"2+3\"\nassert solution(\"9-7\") == \"+++++++++>\", \"9-7\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3\n20\n38\n56\n''') == '2'\nassert solution('''\n5\n1\n3\n20\n38\n56\n''') == '2'\nassert solution('''\n4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8'"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\nassert solution(input()) == '0'"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(0).read()) == \"1\"\nassert solution(open(1).read()) == \"2\"\nassert solution(open(2).read()) == \"5\"\nassert solution(open(3).read()) == \"2\"\nassert solution(open(4).read()) == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n2\n3''') == '3'\nassert solution('''2\n1\n2''') == '1'\nassert solution('''1\n1\n2''') == '1'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '1'\nassert solution('''3\n1\n2\n3''') == '2'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"8\"\nassert solution(\"1000000000000000000\") == \"8\"\n\n\n\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('100') == '8'"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"1\"\n\"\"\""
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '0'\n\"\"\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"4\"\n\nassert solution(\"0\") == \"0\"\n\nassert solution(\"1\") == \"1\"\n\nassert solution(\"2\") == \"1\"\n\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == '4'\nassert solution('577') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"4\"\nassert solution(\"100\") == \"5\"\nassert solution(\"1000\") == \"5\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''100\n3575''') == \"4\"\nassert solution('''3\n10\n7\n5\n1\n1\n''') == \"4\"\nassert solution('''1\n1\n1\n''') == \"1\"\nassert solution('''100\n9\n9\n9\n''') == \"1\"\nassert solution('''2\n100\n100\n''') == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"217\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"36\") == \"2\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"5\"\nassert solution(\"11\") == \"6\"\nassert solution(\"12\") == \"5\"\nassert solution(\"13\") == \"5\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"575\\n\") == \"4\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('000') == '1'\nassert solution('111') == '2'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0') == '1'\nassert solution('1') == '2'"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == 1\nassert solution(\"01\") == 1\nassert solution(\"000\") == 2\nassert solution(\"101\") == 2\nassert solution(\"011\") == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == 1\nassert solution('01') == 2\nassert solution('001') == 3\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '1'\nassert solution('0') == '1'\nassert solution('00') == '0'\nassert solution('11') == '1'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"1\"\nassert solution(\"01\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"10\") == \"0\"\n\"\"\""
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('110') == '1'\nassert solution('0110') == '2'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"1\"\nassert solution(\"01\") == \"2\"\nassert solution(\"010\") == \"2\"\nassert solution(\"11\") == \"3\"\nassert solution(\"0111\") == \"3\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'APPROVED', 'First example'\nassert solution('10') == 'DENIED', 'Second example'\nassert solution('100') == 'APPROVED', 'Third example'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"100\\n1 2 3 4 5\") == \"DENIED\"\nassert solution(\"10\\n1 2 3 4 5\") == \"DENIED\"\nassert solution(\"3\\n1 2 3\") == \"APPROVED\"\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"5\\n10 31 6 10\") == \"APPROVED\"\nassert solution(\"5\\n5 5 5 5 5\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"DENIED\"\nassert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'APPROVED'\nassert solution(input()) == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n6 7 9 10 31\n\"\"\") == \"APPROVED\"\nassert solution(\"\"\"4\n11 4 7 13\n\"\"\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nprint(solution(\"5\\n6 7 9 10 31\"))"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('10\\n5 6 7 9 10 31') == 'DENIED'\n\"\"\"\n\nimport re\nfrom collections import Counter\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 7 9 10 31\\n') == 'APPROVED'\nassert solution('1\\n2 3\\n') == 'DENIED'\nassert solution('2\\n4 7\\n') == 'APPROVED'\n\n\"\"\""
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'APPROVED'\nassert solution('4') == 'APPROVED'\nassert solution('5') == 'DENIED'\nassert solution('1') == 'DENIED'\n\"\"\"\n\nn = int(input())\n\narray = []\n\nfor i in range(n):\n    number = int(input())\n    if number % 3 == 0 or number % 5 == 0:\n        array.append(number)\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"URDDDLLU\") == \"No\"\nassert solution(\"DDDLL\") == \"No\"\nassert solution(\"LDRUDRR\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDDUDR\") == \"No\"\nassert solution(\"DRUDLURDD\") == \"Yes\"\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('RUDLUDR') == 'Yes'\nassert solution('RRRDDD') == 'No'\nassert solution('RRRDDU') == 'No'\nassert solution('RRRDDDU') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''RUDLUDR''') == 'Yes'\nassert solution('''RLRDUDR''') == 'No'\nassert solution('''RUDRLRDU''') == 'No'\nassert solution('''RUDDUDRU''') == 'Yes'\nassert solution('''UUDLDUDRR''') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LULLURDLUDR\") == \"Yes\"\nassert solution(\"RUDRUDDDDR\") == \"Yes\"\nassert solution(\"DDDDDD\") == \"No\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RRDDD') == 'No'\nassert solution('LLDDR') == 'No'\nassert solution('LLDDR') == 'No'\n\"\"\""
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRURD\") == \"No\"\nassert solution(\"RUDRDLR\") == \"Yes\"\nassert solution(\"RDRULURDLRD\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LUDRUDR\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('20\\n3\\n2\\n4\\n3\\n5') == '7'\n\n\"\"\""
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"3\\n3\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"100\\n1\\n2\\n3\\n4\\n5\\n\") == \"103\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n\") == \"10\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == \"7\"\nassert solution(\"\") == \"7\"\nassert solution(\"2\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"1 2\") == \"7\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nprint(solution(input()))"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '10'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '12'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '0'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\") == \"7\"\nassert solution(\"10\\n3\\n2\\n4\\n3\") == \"8\"\nassert solution(\"100\\n3\\n2\\n4\\n3\") == \"120\"\nassert solution(\"100\\n1\\n2\\n3\\n4\\n5\\n6\") == \"120\""
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '7'\nassert solution('3') == '7'\nassert solution('2') == '7'\nassert solution('4') == '7'\nassert solution('3') == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100') == '99'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n\n--"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''3\n''') == '2'\nassert solution('''5\n''') == '3'"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n\n\"\"\""
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n\"\"\"\n\nN = int(input())\n\nfrom itertools import product\n\nfor i in product(range(10), repeat=N):\n    if sum(i) == 0:\n        print(i, end=\" \")\nprint(0)\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"3\") == '4'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\n'''"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"23\""
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"10\\n\") == \"11\"\nassert solution(\"20\\n\") == \"23\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '5'\nassert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('10') == '11'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4\n''') == '4'\nassert solution('''4\n2\n''') == '2'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '23'\n\n'''\nfrom math import sqrt\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"7\"\nassert solution(\"3\") == \"5\"\nassert solution(\"6\") == \"7\"\nassert solution(\"10\") == \"11\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"13\"\nassert solution(\"30\") == \"31\"\nassert solution(\"7\") == \"7\"\nassert solution(\"15\") == \"17\"\nassert solution(\"-2\") == \"17\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"7\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_str) == \"23\""
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 2 3 1\\n\") == \"1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"2\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n''') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '4\\n3 1 3 2\\n') == '1'\nassert solution(\n    '5\\n2 2 3 3 3\\n') == '2'\nassert solution(\n    '8\\n1 2 3 4 5 6 7 8\\n') == '7'\nassert solution(\n    '3\\n2 2 2\\n') == '1'\nassert solution(\n    '4\\n2 2 2 2\\n') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\n\n##CODE DESTRUCTION##\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('10') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3 1 3 2') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 1 3 2\n''') == '1'\nassert solution('''\n6\n1 1 1 2 2 3\n''') == '2'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('1') == '1'\nassert solution('4 1 1') == '2'\nassert solution('2 1 4') == '4'\nassert solution('2 4 1') == '1'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 81\") == \"24\"\nassert solution(\"5 100 90 80 81 82\") == \"26\"\nassert solution(\"5 100 90 80 81 82 83\") == \"28\"\nassert solution(\"5 100 90 80 81 82 83 84\") == \"31\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '23'"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''3 0 50 60\n10\n5\n15\n10''') == '1'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '1'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '1'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 100, 90, 80]) == \"23\"\nassert solution([3, 1, 5, 10]) == \"19\"\nassert solution([3, 1, 5, 10, 8]) == \"18\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('2\\n1\\n1\\n0\\n0') == '0'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 100 90 80') == \"23\"\nassert solution('5 100 90 80') == \"23\""
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 98 40 30 21 80\") == \"97\"\nassert solution(\"5 100 90 80 98 40 30 21 80 98 40 30 21 80\") == \"98\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"DBCCXYZ\") == \"CEDZAB\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"10\\nABCDEFGHIJ\") == \"DEFGHIJKLMNOPQRSTUVWXYZABC\"\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"CDEZAB\"\nassert solution(\"3\") == \"ZBADEC\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nA') == 'C'"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\", \"ABCXYZ\") == \"CDEZAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\", \"Sample test case\"\nassert solution(\"2\") == \"2\", \"Sample test case\"\nassert solution(\"3 5 2 3 2 4\") == \"3 4 2\", \"Sample test case\"\nassert solution(\"5 1 2 3 4\") == \"1 2 3 4\", \"Sample test case\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n4 2 1\n2 2''') == '2 4 2'\nassert solution('''3\n1 1 1\n1 2 2\n2 1 1\n2 3 3\n3 1 2\n''') == '1 1 1 2 2 3 3'\nassert solution('''6\n2 2 2 3 1 2\n2 1 2 2 2\n3 3 3 4 2\n2 2 2 2\n3 3 3 3\n''') == '3 3 3 4 2 2'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999') == '199999'\nassert solution('1\\n3 6') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 2 3 2') == '5 6 3 2'\nassert solution('1') == '1'\nassert solution('4') == '2 4'\nassert solution('5') == '5'\nassert solution('6') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2 4 8\n''') == '2 4 8'\nassert solution('''\n2\n2 2 3\n''') == '3'\nassert solution('''\n2\n4 2 3\n''') == '4 2 3'\nassert solution('''\n5\n5 6 2 1 2 1\n''') == '2 2 1 1'\nassert solution('''\n5\n4 2 4 3 4 1\n''') == '4 1 1 4 3 4'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3 4 2'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n5 2 3 2 4\n\"\"\") == \"4 4 2 2 2 4\"\nassert solution(\"\"\"\n1\n3 5 2 3 2 4\n\"\"\") == \"3 4 2 2 2 4\"\nassert solution(\"\"\"\n1\n3 4 5 2 3 2 4\n\"\"\") == \"3 4 2 5 2 2 4\"\nassert solution(\"\"\"\n2\n3 5 4 5 2 3 2 4\n\"\"\") == \"3 4 2 5 4 2 5 2 4\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 5 2 3 2 4\n\"\"\") == \"3 4 2 \nassert solution(\"\"\"\n1\n2750131 199999\n\"\"\") == \"199999\"\n\nassert solution(\"\"\"\n5\n5 5 6 7 5\n\"\"\") == \"6 7 5\"\nassert solution(\"\"\"\n4\n4 5 4 2\n\"\"\") == \"4 2\"\n\nassert solution(\"\"\"\n9\n9 9 9 9 9 9 9 9 9\n\"\"\") == \"9 9 9 9 9 9 9 9 9\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('5 1\\n7 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'\nassert solution('5 1\\n7 1 2 3 5 4 6') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n1 2 3 4 5 6\\n') == '111221'\nassert solution('5 1\\n3 5 4 3 1\\n') == '211211'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"1121122\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == '11111'\nassert solution('''5 1\n2 1 3 5 4''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6''') == '1121122'\nassert solution('''5 1\n2 4 5 3 1''') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 2\\n'\n    '2 4 5 3 1\\n'\n) == '11111'\n\nassert solution(\n    '5 1\\n'\n    '2 1 3 5 4\\n'\n) == '22111'\n\nassert solution(\n    '7 1\\n'\n    '7 2 1 3 5 4 6\\n'\n) == '1121122'\n\nprint(solution(input()))"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nprint('all test cases passed')\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('100') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(inp) == '1'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '2'\nassert solution('6') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('5 6 7 8 9') == '4'\nassert solution('100 100') == '1'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"100 1\") == \"2\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2\\n3') == '2'\nassert solution('4\\n100 1\\n1\\n2') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"100\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"7\") == \"0\""
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 2 3\\n') == '2'\nassert solution('2\\n100 1\\n') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''4\n100 1\n''') == '4'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 1\nassert solution('4 7 1 5 4 9') == 1\nassert solution('5') == 0\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('1') == '0'\nassert solution('4') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n16\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 1 1 1023\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n1 1 1 1023\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n16\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n16\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1 1 1023\n\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n\n''') == '0'\nassert solution('''\n1\n16\n\n''') == '1'\nassert solution('''\n4\n1 1 1 1023\n\n''') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n7 1 5 4 9\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n1\n16\n''') == '0'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('1023') == '0'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0011') == '4'\n\n------Task------\n\nGiven:\nA string S consisting of N characters, 1 = blue and 0 = red.\n\nReturn:\nThe maximum number of cubes that can be removed.\n\nInput format:\nThe first line contains N.\nThe next line contains S.\n\nOutput format:\nPrint the maximum number of cubes that can be removed.\n\nSample input:\n3\n0011\n\nSample output:\n4\n\nExplanation:\nThe operation that is performed is as follows:\n - Remove the second and third cubes from the bottom. Then, the fourth cube drops onto the first cube.\n - Remove the first and second cubes from the bottom.\n\nSample input:\n5\n01101\n\nSample output:\n3\n\nExplanation:\nThe operation that is performed is as follows:\n - Remove the first and second cubes from the bottom.\n - Remove the third cube from the bottom.\n - Remove the fourth cube from the bottom.\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0011') == '4'\nassert solution('10111') == '4'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0111\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"0111\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0''') == '4'\nassert solution('''0011''') == '4'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '3'\n\"\"\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0011') == \"4\"\nassert solution('10110110001') == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0011') == '4'\nassert solution('10111') == '4'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 4') == '1'\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''5 3\n1 3\n2 4\n5 4\n3 5\n''') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''4 2\n1 2\n3 5\n''') == '1'\nassert solution('''4 2\n1 2\n3 5\n''') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"1\"\n\n---Submissions---\n1.    Have a look at the solution.\n2.    Submit the solution using the following link:\nhttps://code-maven.com/check-code\n\n\"\"\"\n\nfrom math import ceil\n\ninput_lines = []\n\nfor line in stdin:\n    input_lines.append(line)\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\n\"\"\""
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '2'\nassert solution('4 1') == '1'\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 2 1\\n') == \"1\"\nassert solution('10\\n2 4 2 1\\n') == \"2\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\nh_arr = list(map(int, sys.stdin.readline().split()))\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"3\"\n\nstdin = \"\"\"\n3\n1 2 2 1\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"1\") == \"\", \"1\"\nassert solution(\"1 2 3\") == \"1\", \"1 2 3\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n1 2 2 1\") == \"1\"\nassert solution(\"100\\n1 2 2 1\") == \"1\"\nassert solution(\"101\\n1 2 2 1\") == \"1\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"3\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"0\"\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('5\\n1 2 2 1 3') == '2'\nassert solution('4\\n1 2 2 1 3') == '1'\nassert solution('4\\n1 2 2 1 4') == '0'"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('10\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1') == '2'\nassert solution('10\\n1 2 2 1\\n2 3 4 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1') == '3'\nassert solution('10\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1') == '2'\nassert solution('10\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1\\n1 2 2 1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\""
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_0) == example_output_0\nassert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\nassert solution(example_input_4) == example_output_4"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\nassert solution('''\n2 4\n-1 1\n''') == '4'\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''10 0\n-1\n''') == '0'\n\nassert solution('''10 0\n-1\n''') == '0'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 -3') == '3'\nassert solution('3 4 1 2') == '4'\nassert solution('4 10') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"4\"\n\n\"\"\""
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\n4 10\n-1 1\n''') == '4'\n\nassert solution('''\n2 4\n-1 1\n''') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\n2 1 -3\n\n''') == '3'\nassert solution('''\n2 4\n-1 1\n\n''') == '4'\nassert solution('''\n4 10\n2 4 1 2\n\n''') == '2'"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"9 3 6 12 4 8\"\nassert solution(\"4\") == \"126 42 84 28\"\nassert solution(\"2\") == \"3000000000000000000 1000000000000000000\""
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n4 8 6 3 12 9\n\"\"\") == \"9 3 6 12 4 8 \n\nassert solution(\n\"\"\"\n2\n1000000000000000000 3000000000000000000\n\"\"\") == \"3000000000000000000 1000000000000000000 \n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5 1 2 3 4 5'\n\nassert solution('''\n4\n1 3 2 4\n''') == '4 1 3 2 4'\n\nassert solution('''\n3\n6 8 5\n''') == '3 6 8 5'\n\nassert solution('''\n4\n2 3 4\n''') == '2 3 4 2'\n\nassert solution('''\n1\n9 8 6 3 12 9\n''') == '9 8 6 3 12 9'"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == '1234156789'\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n\n''') == '9 3 6 12 4 8 \n\nassert solution('''\n3\n12 4 8 \n\n''') == '3 4 8 12'\n\nassert solution('''\n2\n1000000000000000000 3000000000000000000\n\n''') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3 1 2\"\nassert solution(\"2\\n1 2\") == \"2 1\"\nassert solution(\"3\\n1 2 1\") == \"3 2 1\"\nassert solution(\"4\\n1 2 3 4\") == \"4 1 2 3\"\nassert solution(\"4\\n1 2 3 1\") == \"4 2 3 1\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n'''\n\nfrom itertools import combinations, permutations\nfrom collections import deque\nfrom heapq import heappush, heappop\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"4\") == \"1260000000000000000\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '9 3 6 12 4 8'\nassert solution('6') == '9 3 6 12 4 8'"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '8'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1,8'\nassert solution('6') == '1,3'\nassert solution('1000000000') == '1000000000,1000000000'\nassert solution('1000010000') == '1000010000,1000010000'\nassert solution('1000000000,1000010000') == '1000000000,1000010000'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0\\n[-1, 2, 5]\\n'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 2'\nassert solution('6') == '3 4 5 6 7 8'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('5\\n-1 2 5 8 11') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"1\\n-1 2 5 8 11\") == \"8 3\"\n\n'''\n\n\nimport math"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2 3') == '3'\nassert solution('5\\n-1 -2 -3 -4 -5') == '-1 -2'\nassert solution('5\\n-1 -2 -3 -4 -5') == '-1 -2'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"8\"\nassert solution(\"-1 2 5 8 11\") == \"1\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n-1 2 5 8 11\n''') == '1 7 3 5'\nassert solution('''\n5\n1 2 5 8 11\n''') == '1 7 3 5'\nassert solution('''\n5\n-1 -2 -3 -4 -5\n''') == '0'\nassert solution('''\n5\n-1 -2 -3 -4 -5\n''') == '0'\n\n'''"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 2, 3]) == \"0 2\"\nassert solution([2, 3, 1]) == \"1 2\"\n\"\"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 3\n2 3\n1 2\n''') == '0 2'\nassert solution('''2 5 3\n2 3\n3 4\n''') == '0 1'\nassert solution('''2 1 5\n2 1\n5 2\n''') == '0 2'\nassert solution('''2 1 1\n1 1\n1 1\n''') == '1 1'\nassert solution('''2 2 4\n1 2\n1 2\n''') == '0 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0 2\"\n\n'''"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"6 7 2\") == \"3 1\"\nassert solution(\"1 3 3\") == \"0 0\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 3''') == '0 2'\nassert solution('''0 2 3''') == '0 2'\nassert solution('''4 0 6''') == '2 2'\nassert solution('''4 0 2''') == '0 0'\nassert solution('''0 0 0''') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '2 2'\nassert solution('0 0 0') == '0 0'\nassert solution('2 2 2') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '2 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 1 1\") == \"0 0\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 3, 3]) == '0 2'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '3'\nassert solution('100') == '2'\nassert solution('999') == '4'\nassert solution('1010') == '3'\nassert solution('9999') == '4'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"103\") == \"3\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '3'\nassert solution('102') == '3'\nassert solution('103') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('103') == '3'\nassert solution('101') == '1'\nassert solution('102') == '2'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('103') == '3'\nassert solution('100') == '1'"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"102\") == \"3\"\nassert solution(\"103\") == \"3\"\nassert solution(\"104\") == \"2\"\n\"\"\""
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"3\"\nassert solution(\"100\") == \"3\"\nassert solution(\"1000\") == \"4\"\nassert solution(\"100000000\") == \"6\"\nassert solution(\"2147483648\") == \"4\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '5'\nassert solution('4') == '6'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '243'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '9'\nprint(solution('2'))\n\n\"\"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '3'\nassert solution('5') == '5'\n\"\"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '9'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"9\"\nprint(solution(\"4\"))"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('5\\n3 5 2 2 3') == '10'"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('6') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3 4 6') == '10'\nassert solution('3\\n3 4 6') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nassert solution(\"10\\n8 7 6 5 4 3 2 1\") == \"13\"\nassert solution(\"4\\n3 4 4 4\") == \"7\"\nassert solution(\"5\\n8 7 6 5 4 3 2 1\") == \"7\"\n\n\"\"\"\n\na = input().split()\na = list(map(int, a))\nprint(max(a))\n\n\"\"\""
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4 6') == \"10\"\nassert solution('5\\n3 5 4 4 1') == \"8\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('6\\n1 2 3 4 5 6') == '15'"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('4\\n3 4 6') == '10'"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\", \"Should be 10\"\nassert solution(\"3\\n3 3 3\") == \"5\", \"Should be 5\"\nassert solution(\"3\\n3 2 2\") == \"3\", \"Should be 3\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4 6\\n') == '10'\n\"\"\""
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No\", \"Test 1 (stdin) failed\"\nassert solution(\"1\") == \"Yes\", \"Test 2 (stdin) failed\"\nassert solution(\"2\") == \"Yes\", \"Test 3 (stdin) failed\"\nassert solution(\"3\") == \"No\", \"Test 4 (stdin) failed\"\nassert solution(\"4\") == \"Yes\", \"Test 5 (stdin) failed\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''\n1\n3 2\n5 7\n1 3\n3 1\n''') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"4\\n4 4\\n1 1\\n2 1\\n3 1\\n3 1\") == \"No\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"Yes\"\nassert solution(\"5\\n6 6\\n2 2\\n3 3\\n4 4\\n1 1\\n1 1\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('1\\n1\\n1') == 'No'\nassert solution('100\\n2 2\\n2 2\\n1 1\\n1 1\\n') == 'Yes'"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\") == \"Yes\"\nassert solution(\"4\\n1 2\\n6 6\\n4 4\") == \"No\"\nassert solution(\"3\\n1 2\\n3 3\") == \"No\"\n\n'''\nimport sys\n\nN = int(input())\ndice_1, dice_2 = list(map(int, input().split()))\n\nfor i in range(2, N):\n    dice_1, dice_2 = dice_2, dice_1\n    if dice_1 == dice_2:\n        count += 1"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('4 4') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\nassert solution('2') == 'No'\nassert solution('7') == 'No'\nassert solution('2 2 2 3 3 3 3') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n6 6\\n4 4\\n3 3') == 'Yes', 'First Test'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2') == 'No', 'Second Test'\nassert solution('8\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\\n4 4\\n5 5') == 'Yes', 'Third Test'\n\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '5'"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"16\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n\nr = int(stdin.readline())"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\", \"Wrong!\"\nassert solution(\"2\") == \"4\", \"Wrong!\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1', \"First\"\nassert solution('2') == '4', \"Second\"\nassert solution('3') == '1', \"Third\"\nassert solution('10') == '10', \"Fourth\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4''') == '4'\nassert solution('''3\n2\n3\n4''') == '6'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '4'\nassert solution('''\n3\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n10\n''') == '5'\nassert solution('''\n0\n''') == '0'\n'''\nTest Inputs:\n    Input is given from the following standard input:\n    5\nOutput is expected from the following standard output:\n    1\n    1\n    1\n    1\n    0\n'''\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n\"\"\""
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n\n'''\n\nimport math\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3\n4''') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4 5 1') == 'Yes'\nassert solution('3\\n8 5 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 4\") == \"Yes\"\nassert solution(\"3 4 4\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n8 5 1\n''') == 'Yes'\nassert solution('''\n4\n2 5 1 3\n''') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n9 4 5 1 2\") == \"No\"\nassert solution(\"10\\n2 6 4 8 9 10\") == \"Yes\""
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"702\"\nassert solution(\"3 3\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"-1\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '702'\nprint(\"solution() done! Yay!\")"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\""
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == -1\nassert solution('5 3') == '702'\nassert solution('2 1') == '7'"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '702'\nassert solution('3 2') == '-1'\nassert solution('1 7') == '702'\nassert solution('3 2') == '-1'\nassert solution('1 7') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '702', 'Wrong answer!'\nassert solution('6 4') == '-1', 'Wrong answer!'\nassert solution('8 5') == '-1', 'Wrong answer!'\nassert solution('7 6') == '702', 'Wrong answer!'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"10 20\\n1 7\\n3 2\\n1 7\") == \"101010\"\nassert solution(\"100 100\\n1 7\\n3 2\\n1 7\") == \"101010\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n3 2\\n1 7\\n3 2\\n3 2\") == \"702\"\nassert solution(\"3 3\\n1 7\\n1 7\\n1 7\") == \"1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3\n1 7\n3 2\n1 7\"\"\") == \"702\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n''') == '9'\nassert solution('''4 1\n''') == '1'\n''')\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '9'\nassert solution('5 10') == '159'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '9'\nassert solution('1 2') == '0'\nassert solution('11 11') == '7'\nassert solution('2') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n') == '9'\nassert solution('1 2\\n') == '9'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '9'\nassert solution('15 16') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"10 10\") == \"97\"\nassert solution(\"4 4\") == \"67\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"99\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '9'\nassert solution('5 6') == '2'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '9'\nassert solution('3 1') == '9'\nassert solution('100 1000') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '9'\nassert solution('100 10') == '40'\nassert solution('5 8') == '7'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"1010\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-9') == '1011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n-9\n''') == '1011'\nassert solution('''\n-3\n''') == '11'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-3\") == \"11\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"0\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\n\"\"\""
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-9') == '1011'\nassert solution('-11') == '10111'\nassert solution('-23') == '10101011'\nassert solution('-1000') == '10110101'\nassert solution('-1001') == '10110110'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-9') == '1011'"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"0\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"5\") == \"11\"\nassert solution(\"-4\") == \"12\"\nassert solution(\"11\") == \"11\"\nassert solution(\"2\") == \"10\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-9\") == \"1011\""
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"2 5\") == \"12\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 4\") == \"12\"\n\n--\n\nHow to use the solution\n\nUse the following command to execute the program:\n\npython solution.py < input.txt > output.txt\n\n--\n\n\"\"\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 5\\n\"\n    \"4 9\\n\"\n    \"2 4\\n\"\n) == \"12\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n5 5\n1 3\n4 6''') == '1'\nassert solution('''3 3\n4 6\n2 4\n1 1\n1 3''') == '4'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == '12'\nassert solution('''2 5\n4 9\n2 5''') == '10'\nassert solution('''2 5\n4 9\n2 5''') == '10'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\nassert solution('''4 5\n4 9\n2 4\n''') == '12'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 5\n4 9\n2 4\n''') == '12'\nassert solution('''\n3 1\n2 3\n''') == '6'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\nassert solution('''1 3\n3 1\n3 3\n''') == '3'\nassert solution('''3 3\n3 1\n1 3\n''') == '4'\nassert solution('''5 6\n5 2\n5 3\n''') == '6'\nassert solution('''2 5\n1 3\n1 4\n''') == '7'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == '12'\nassert solution('3 3') == '6'\nassert solution('4 3') == '6'\nassert solution('5 5') == '5'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '12'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"0\"\nassert solution(\"3\\n1 2 3\") == \"1\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\""
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == '2'\nassert solution(\"10\") == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\""
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(5, \"10 4 8 7 3\") == '2'\nassert solution(8, \"1 2 3 4 5 6 7 8\") == '8'\nassert solution(5, \"5 4 8 7 3\") == '5'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 4 8 7 3\n''') == '2'\nassert solution('''\n3\n9 9 5\n''') == '1'\n'''\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('4\\n4 2 8 5') == '3'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n10 20 10 40\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n2 2 3 4 4\n''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 3\n1 2 2 4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 3\n1 2 3 3 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 3\n1 2 3 3 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 3 3') == '0'\nassert solution('5 3\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '0'\nassert solution('''5 3\n1 2 2 4 5\n4\n2\n3\n''') == '1'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"\nassert solution(\"5 3\\n1 2 3 2 3\") == \"2\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\nassert solution('5 3') == '1'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n4 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('4 1 2 1 1 3') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 5\n1 2 2 4 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7 5\n1 3 2 1 1 1 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10\n3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n5 5\n2 4 4 1 1 2\n''') == '4'\nassert solution('''\n6 6\n3 4 2 1 4 2 3\n''') == '4'\nassert solution('''\n6 5\n1 2 3 1 4 2\n''') == '3'\nassert solution('''\n6 5\n1 2 2 2 2 2 2\n''') == '3'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n1 2 5 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\") == \"3\"\nassert solution(\"7 5\") == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n    1 2 2\n    ''') == '3'\nassert solution('''6\n    1 2 2 4 2 3\n    ''') == '4'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 1\n3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n3\n1 1\n3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\nassert solution('''\n3\n1 3\n2 3\n1 1000 1\n1000000000000 42 88\n''') == '42000000000000'\nassert solution('''\n10\n3 1\n3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n5 5 4 3 2 2') == '1000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10 9 42000000000000\""
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 1') == '2'\nassert solution('1 1000000000') == '10'\nassert solution('1 1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n3 3\n2 5\n\"\"\") == \"42000000000000\"\n\nassert solution(\"\"\"\n1\n4 1\n2 3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n3 1 4\n5 1 2\n\"\"\") == \"1000\"\nassert solution(\"\"\"\n3\n6 1 4\n2 1 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"42000000000000\"\nassert solution(\"\"\"\n1\n10 1 3\n7 3 2\n1 1000000 1\n1000000000000 42 88\n\"\"\") == \"1000000\"\nassert solution(\"\"\"\n4\n100 1 5\n1 1000 1\n1 1000000 1\n1000000000000 42 88\n\"\"\") == \"1000000\"\nassert solution(\"\"\"\n5\n1 1 1\n2 1 1\n1 1000 1\n1 1000000 1\n1000000000000 42 88\n\"\"\") == \"1000000000000\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '90000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10'\nassert solution('1\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10'\nassert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 3 3 4 3\n3 6 2 4 5\n7 4 1 3\n2 9 3 5\n3 2 4 2\n''') == '92000000000000'\n\nassert solution('''\n4\n1 2 1 2\n2 3 1 3\n3 1 3 2\n1 2 2 2\n''') == '42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1 1\n3 3 3\n2 1 1\n100 1 100''') == '10'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"5 4\") == \"3\""
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 1\\n3 4\\n3 4 5\\n\") == \"2\"\nassert solution(\n    \"3 3\\n2 3\\n3 4\\n\") == \"3\"\nassert solution(\n    \"5 1\\n1 3\\n1 5\\n4 6\\n2 2\\n4 3\\n\") == \"4\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"3 100\\n1 2 5\") == \"101\"\nassert solution(\"100 5\\n1 2 3\") == \"999\"\nassert solution(\"10 6\\n1 2 3 4 5 6 7 8 9 10\") == \"1000000\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"3 4 5\") == \"1\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 5') == '2', 'Test Case 1 Failed'\nassert solution('5 6 7') == '3', 'Test Case 2 Failed'"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n3 4 5\\n\") == \"2\"\n\"\"\""
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6') == '2'\nassert solution('3 4 5') == '1'\nassert solution('1 3 2') == '0'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''\n1\nhoge\n''') == 'Yes'\nassert solution('''\n3\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''\n5\nhoge\nenglish\nhoge\nenigma\n''') == 'Yes'\nassert solution('''\n5\nhoge\nhoge\nenigma\nenigma\n''') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"50\") == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\neenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"5\\nhoge\\neenglish\\nhoge\\nenigma\\npop\\npop\\npop\\npop\") == \"Yes\"\nassert solution(\"6\\npop\\ne\\npop\\npop\\npop\\npop\\npop\\npop\") == \"No\"\nassert solution(\"0\\n\") == \"No\"\nassert solution(\"1\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('6') == 'Yes'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nhoge\nenglish\nenigma''') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"5\\nabc\\ndef\\nefg\\nhij\\n\") == \"Yes\"\nassert solution(\"10\\nabc\\ndef\\nefg\\nhij\\n\") == \"Yes\"\nassert solution(\"1\\nA\\n\") == \"Yes\"\nassert solution(\"1\\nB\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'No'\nassert solution('5') == 'No'\nassert solution('5') == 'No'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\""
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''2\nhoge\nenglish\n''') == 'Yes'\nassert solution('''3\nhoge\nenglish\nhoga\n''') == 'Yes'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 10') == '10'\n'''"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '6'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3''') == '6'\nassert solution('''4 2''') == '8'\nassert solution('''5 2''') == '10'\nassert solution('''10 2''') == '10'\nassert solution('''10 3''') == '10'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2,3]) == '6'\nassert solution([1,3]) == '3'\nassert solution([1,2]) == '2'\nassert solution([3,5]) == '8'\nassert solution([3,6]) == '10'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 2') == '3'"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(2, 3) == 6\nassert solution(3, 2) == 6\n\n'''\n\nimport math"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"6\"\nassert solution(\"1 2\\n\") == \"3\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"5 4\") == \"9\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('romance') == 'xxxxxxx'\n\n'''"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"sardine\") == \"xxxxxxx\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('sardine') == 'xxxxxxx'\nassert solution('12345') == '12345'\nassert solution('a') == 'a'\nassert solution('x') == 'x'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n\"\"\"\n\ns = input()\nfor i in range(0, len(s)):\n    s = s[:i] + \"x\" + s[i + 1:]\n\nprint(s)"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n\"\"\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"10\\n1 2 1 2 1 2 2 1 2 3\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"4\\n1 1 1 1\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 1 1 3\n''') == 'Yes'\nassert solution('''\n4\n3 2 1 1\n''') == 'No'\nassert solution('''\n5\n1 2 1 3 1\n''') == 'Yes'\nassert solution('''\n5\n1 2 2 3 3\n''') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5 0') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'No'\nassert solution('4') == 'Yes'"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 1 1 3\\n') == 'Yes'\nassert solution('5\\n1 2 2 1 3\\n') == 'No'\nassert solution('5\\n1 2 1 2 3\\n') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"100\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 1 1 3'\n    ) == 'Yes'\n\nassert solution(\n    '1\\n'\n    '1'\n    ) == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 1 1 3\n''') == 'Yes'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n9 5 -20\") == \"2\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n9 5 -20\\n0 -20 -100\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '0'\n'''\n\nimport math"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('4 6 -3') == '2'\nassert solution('2 4 1') == '2'\nassert solution('3 6 -3') == '1'\nassert solution('2 5 -2') == '0'"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"2 3 -10\") == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"1\", \"1st\"\nassert solution(\"2 2 2\") == \"2\", \"2nd\"\nassert solution(\"3 3 1\") == \"1\", \"3rd\"\nassert solution(\"4 4 1\") == \"1\", \"4th\"\n\"\"\""
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3, -10]) == '1', \"1st\"\nassert solution([3, 2, 1, -10]) == '2', \"2nd\"\n\n'''\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2\") == \"1\", \"Solution is wrong!\"\nassert solution(\"2 2 1\") == \"2\", \"Solution is wrong!\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 -10\n1 2 3\n3 2 1\n1 2 2\n1 2 2\n1 2 1\n''') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('3\\n2\\n3') == '5'\nassert solution('1\\n3\\n2') == '4'\nassert solution('1\\n1\\n3') == '1'\nassert solution('1\\n10000\\n1') == '0'\n\"\"\""
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('500') == '100'\nassert solution('30') == '2'\nassert solution('1000') == '10'\nassert solution('38') == '6'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1500\") == \"200\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '0\\n', \"Wrong result in test 1\"\nassert solution('5\\n') == '1\\n', \"Wrong result in test 2\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1900') == '100'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2\\n1') == '1'\nassert solution('4\\n2\\n1') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1900'\n) == '100'"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"6\") == \"9\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 2 2 2 2\n2\n''') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5 5''') == '9'\nassert solution('''2\n4 5\n3 5''') == '9'\nassert solution('''3\n3 5\n2 5''') == '6'\nassert solution('''5\n5 5\n3 5\n3 3\n4 5''') == '5'\nassert solution('''6\n6 6\n2 3\n3 6\n4 5\n4 6''') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 2') == '9'\nassert solution('4 5') == '9'"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 2') == '9'\nassert solution('4 5') == '7'\nassert solution('5 1') == '1'"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('3 5 2') == '9'\nassert solution('4 5') == '7'"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n1 2\n1 3''') == '1'"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['2', '3 5 2', '4 5']) == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5 2\n4 5\n''') == '9'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 1 2') == 'No War'\n\n---\nSolution\n\nint X = stdin.readline()\nint Y = stdin.readline()\nint N = int(stdin.readline())\nint M = int(stdin.readline())\n\nint x_1, x_2,..., x_N = [0] * N\nint y_1, y_2,..., y_M = [0] * M\n\nfor i in range(N):\n    x_1, x_2,..., x_N = map(int, stdin.readline().split())\nfor i in range(M):\n    y_1, y_2,..., y_M = map(int, stdin.readline().split())\n\nint z = 0\n\nfor i in range(N):\n    if x_1 < x_N and y_1 < y_M:\n        if x_2 > x_N and y_2 > y_M:\n            z = max(z, x_1)\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 100 20') == 'War'\nassert solution('4 2 100 20') == 'War'\nassert solution('4 2 10 20') == 'No War'\nassert solution('3 2 10') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 10 20') == 'War'\nassert solution('1 2 8 15 13') == 'No War'\nassert solution('3 2 10 20') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 10 20') == \"War\"\nassert solution('3 2 10 30') == \"No War\"\nassert solution('3 2 10 10') == \"War\"\nassert solution('3 3 10 20') == \"No War\"\nassert solution('3 4 10 10') == \"War\"\n\n-----Edge Cases-----\n\n- N and M are greater than 100\n- X and Y are equal\n- x_1, x_2,..., x_N = X\n- x_i are all different\n- y_1, y_2,..., y_M = Y\n- y_i are all different\n\"\"\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 10\") == \"No War\"\nassert solution(\"5 3 4\") == \"War\"\nassert solution(\"4 3 3\") == \"War\"\nassert solution(\"5 3 3\") == \"War\""
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 20\n8 5 13\n16 10''') == 'War'\nassert solution('''3 3 10 20\n8 5 13\n16 10''') == 'No War'\nassert solution('''3 3 10 20\n8 5 13\n10 10''') == 'No War'\nassert solution('''3 3 10 20\n8 5 13\n16 11''') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"4 4 7 4\") == \"War\"\nassert solution(\"3 1 4 6\") == \"War\"\nassert solution(\"2 2 4 4\") == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No War'\nassert solution('1 2 3') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20 20') == 'War'\nassert solution('3 2 20 10') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"5 2 1 10 20\") == \"War\"\nassert solution(\"3 2 10 10\") == \"War\"\n\n\"\"\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n''') == '6'\nassert solution('''2\n2\n3\n''') == '6'\nassert solution('''3\n2\n3\n''') == '6'\nassert solution('''4\n2\n3\n''') == '6'\nassert solution('''5\n2\n3\n''') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '9'\nassert solution('4') == '12'\nassert solution('5') == '18'\nassert solution('6') == '24'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\n\"\"\"\n\nimport sys\nimport math\n\nN = int(input())\nT_1 = int(input())\nT_N = int(input())"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n3\n\n''') == '6'\nassert solution('''1\n1\n2\n\n''') == '6'\nassert solution('''2\n2\n1\n\n''') == '6'\nassert solution('''3\n2\n4\n\n''') == '6'\nassert solution('''4\n4\n1\n\n''') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n3\\n') == '6'\nassert solution('4\\n3\\n5\\n') == '10'\nassert solution('8\\n2\\n4\\n') == '20'\nassert solution('16\\n8\\n12\\n') == '36'"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '6'\n\"\"\""
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\nassert solution('4') == '8'\n\n'''\n\nimport math\n\nn = int(stdin.readline())\nt = [int(i) for i in stdin.readline().split()]\n\nclock = [0] * n\n\nfor i in range(len(t)):\n    clock[i] = clock[i - 1] + t[i]\n\nmax_clock = max(clock)\n\nprint(math.ceil(max_clock / n))\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n4\") == \"6\"\nassert solution(\"5\\n3\\n9\") == \"12\"\nassert solution(\"5\\n6\\n18\") == \"21\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n') == '0'\nassert solution('4\\n1 2 3 4\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('4\\n2 1 3 2') == '0'\nassert solution('5\\n1 2 3 2 4') == '0'\nassert solution('6\\n4 1 2 3 3 3') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('3 1 2 3') == '0'\nassert solution('3 4 5 1 2 3') == '4'\nassert solution('3 2 3 4') == '-2'\nassert solution('3 1 2 3') == '-2'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('6\\n1 2 3 4 5') == '0'\nassert solution('1\\n2') == '2'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1 2 3 2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('4\\n1 2 3\\n4 5 6') == '2'\nassert solution('4\\n1 2 3\\n4 5 6\\n8 9 10') == '1'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3 3\n    3 2 1\n    1 2 3\n    4 5 6\n''') == '6'\n\nassert solution('''\n    4 3\n    1 6 3 4\n    5 10 7 8\n    9 2 11 12\n''') == '2'\n\nassert solution('''\n    3 4\n    1 6 3 4\n    5 10 7 8\n    9 2 11 12\n''') == '0'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\n\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_01) == '6'\nassert solution(example_input_02) == '0'\nassert solution(example_input_03) == '2'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 5 5 5\") == \"0\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(6) == 5\n\nassert solution(2) == 99\n\n\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"1\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n''')\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 100\n5 50\n''') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n\n\n\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '99'\nassert solution('6') == '97'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == '2'\nprint(solution(input_data))"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == \"2\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"0\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0 0''') == '0'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '0'\nassert solution('7') == '3'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 0 1 0 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n0 1 0 1 1 0\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n0 0 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"0\"\nassert solution(\"8\\n0 0 0\\n\") == \"0\"\nassert solution(\"9\\n1 0 1 1 1 0 1\\n\") == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '1'\nassert solution('6') == '0'\nassert solution('20') == '20'\nassert solution('1000') == '17'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('') == ''\nassert solution('4') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == '1'\n\nassert solution('''7\n''') == '0'\n\nassert solution('''5\n''') == '4'\n\nassert solution('''6\n''') == '5'\n\nassert solution('''11\n''') == '10'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\nassert solution(input) == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '0'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution() == '1'"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('7') == '0'\n\n\n'''"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"brie\"\nassert solution(\"4\") == \"emi\"\nassert solution(\"5\") == \"ese\"\nassert solution(\"6\") == \"se\"\n\n\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\nimport collections"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == \"3\"\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ngruyere hard\\ncolby hard\\nasiago hard\\n') == \"4\"\nassert solution('0\\n') == \"0\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nparmel\\nemmental\\n') == 4\n\n\n\"\"\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\nassert solution('''\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\n\"\"\") == \"\"\"4\"\"\".replace(\"\\n\", \"\")\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9') == '3', \"First\"\nassert solution('6') == '4', \"Second\"\nassert solution('1') == '1', \"Third\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'\n\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0\", 'Wrong solution'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"0 0 0 1 0 2 4\"\nassert solution(\"4\") == \"0 0 0 1 0 2 4\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 0 0 2\"\nassert solution(input()) == \"0 0 0 1 0 2\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == \"1 0 0 2\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 2 1\") == \"1 0 2 1\"\nassert solution(\"3 2 1 1\") == \"1 0 2 1\"\nassert solution(\"3 2 1 1 2 3 4 3 2 5 6 5 2 4 3 2 7 8 7 2 8\") == \"1 0 2 1 3 2 4 3 5 6 5 2 4 3 7 8 7 2 8\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"\nassert solution(\"3 2 1 1\") == \"0 0 0 1\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n0 1 2\n3 2 1 1''') == '1 0 0 2'\nassert solution('''4\n0 1 2 1\n3 2 1 1\n\n5\n2 5 1 5 3 4 3''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_line) == output_line\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"\nassert solution(\"7\") == \"0 0 0 1 0 2 4\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 2 2\n''') == '0 0 1 2'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 2\n3 2 1\n''') == '1 0 0 2'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0\n1\n1\n0\n''') == '0'\nassert solution('''\n0\n1\n1\n0\n''') == '1'\nassert solution('''\n0\n0\n1\n1\n''') == '0'\nassert solution('''\n0\n1\n1\n0\n''') == '0'\nassert solution('''\n0\n0\n0\n1\n''') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\n\n[Image] \n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0\\n1\\n1\\n0') == '1'\nassert solution('1\\n0\\n1\\n0') == '0'\nassert solution('0\\n1\\n1\\n0') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\n\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('11') == '1'\nassert solution('01') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0\n1\n1\n0''') == '0'\nassert solution('''0\n1\n1\n1''') == '1'\nassert solution('''0\n0\n1\n1''') == '0'\nassert solution('''1\n0\n0\n1''') == '1'\nassert solution('''1\n0\n0\n0''') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\\n\") == \"0\", \"Should return 0\"\nassert solution(\"1\\n\") == \"1\", \"Should return 1\"\nassert solution(\"1\\n\") == \"0\", \"Should return 0\"\nassert solution(\"0\\n\") == \"0\", \"Should return 0\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\"\"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 50\") == \"No\"\nassert solution(\"1000 15 50\") == \"Yes\"\n\"\"\"\n\nfrom time import time"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"10 30 5\") == \"No\""
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('100 8 11') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 20') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 80\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 15 80\\n') == 'Yes'\nassert solution('1000 20 80\\n') == 'No'\n\"\"\"\n\nd, t, s = list(map(int, input().split()))\n\ntakahashi = d * s\naoki = t - d"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 100 20\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 30\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 90\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 1000 2') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"No\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n83\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n83\\n84\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n83\\n84\\n87\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n83\\n84\\n87\\n87\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n91') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n86') == 'Yes'"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\") == \"Yes\"\nassert solution(\"30\\n78\\n65\\n87\\n89\\n74\\n65\\n86\\n92\\n30\\n90\\n70\\n81\\n80\\n90\\n83\\n78\\n83\\n90\\n83\\n87\\n82\\n82\\n81\\n82\\n84\\n83\\n82\\n80\\n81\\n73\\n83\\n83\\n83\\n81\\n83\\n82\\n83\\n81\\n81\\n83\\n83\\n82\\n80\\n80\\n83\\n83\\n83\\n84\\n83\\n82\\n82\\n82\\n84\\n83\\n83\\n81\\n83\\n82\\n82\\n81\\n81\\n83\\n83\\n82\\n83\\n81\\n81\\n83\\n83\\n82\\n80\\n80\\n82\\n83\\n81\\n80\\n81\\n83\\n83\\n83\\n81\\n82\\n80\\n81\\n83\\n83\\n82\\n80\\n81\\n81\\n83\\n83\\n83\\n83\\n83\\n83\\n82\\n81\\n83\\n82\\n82\\n82\\n81\\n81\\n81\\n81\\n83\\n81\\n83\\n82\\n81\\n83\\n82\\n82\\n81\\n81\\n83\\n83\\n82\\n82\\n82\\n82\\n83\\n83\\n82\\n81\\n81\\n83\\n83\\n83\\n83\\n82\\n80\\n80\\n82\\n83\\n81\\n80\\n81\\n83\\n83\\n83\\n83\\n83\\n81\\n83\\n82\\n83\\n82\\n81\\n81\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n83\\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('41 2') == '30'\nassert solution('9 6') == '-1'"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 10') == '10'\nassert solution('40 10') == '30'\nassert solution('41 1') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"30\""
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''41 2\n5 6''') == '30'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nassert solution('''50 3\n5 8\n''') == '-1'\nassert solution('''100 3\n7 3\n''') == '37'\nassert solution('''50 2\n7 3\n''') == '-1'\nassert solution('''50 1\n7 2\n''') == '30'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"41 -1\") == \"31\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 6\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '30'\nassert solution('41 2') == '30'\nassert solution('1 1') == '-1'\nassert solution('41 1') == '-1'"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nassert solution('''81 2\n10 20\n20 10\n''') == '30'\nassert solution('''25 2\n6 5\n3 4\n''') == '-1'\nassert solution('''41 2\n5 6\n''') == '30'\nassert solution('''41 2\n5 6\n''') == '30'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 5\n1''') == '1'\nassert solution('''2 5\n1''') == '4'\nassert solution('''3 5\n2''') == '2'\nassert solution('''4 5\n3''') == '6'\nassert solution('''5 5\n3''') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0') == '2'\nassert solution('1 5') == '5'\nassert solution('0 2') == '1'\nassert solution('2 1') == '2'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1') == '1'\nassert solution('0 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 3') == '3'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 5\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2 1') == '1'\nassert solution('0 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 5\n''') == '5'\nassert solution('''0 5\n1''') == '1'\nassert solution('''0 5\n2''') == '2'\nassert solution('''0 5\n3''') == '3'\nassert solution('''0 5\n4''') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '5'\nassert solution('2 0') == '1'\nassert solution('3 0') == '0'\nassert solution('4 0') == '0'\nassert solution('0 0') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 5\\n\") == \"5\"\nassert solution(\"0 0\\n\") == \"0\"\nassert solution(\"0 1\\n\") == \"1\"\nassert solution(\"0 2\\n\") == \"2\"\nassert solution(\"0 3\\n\") == \"3\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"7 6 8\\n\"\n) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"20 10 9 8\\n\"\n) == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('4\\n20 7 4\\n') == '2'\nassert solution('10\\n1 2 3\\n') == '3'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n7 6 8\n\"\"\") == \"2\"\n\n\"\"\"\n--- Day 11: Seating System ---\n\nYou arrive at the Venus fuel depot only to discover it's protected by a password. The Elves had written the password on a sticky note,\n but someone threw it out.\n\nHowever, they do remember a few key facts about the password:\n\nIt is a six-digit number.\nThe value is within the range given in your puzzle input.\nTwo adjacent digits are the same (like 22 in 122345).\nGoing from left to right, the digits never decrease; they only ever increase or stay the same (like 111123 or 135679).\nOther than the range rule, the following are true:\n\n111111 meets these criteria (double 11, never decreases).\n223450 does not meet these criteria (decreasing pair of digits 50).\n123789 does not meet these criteria (no double).\nHow many different passwords within the range given in your puzzle input meet these criteria?\n\n\"\"\"\n\nfrom itertools import permutations\n\nnumbers = '0123456789'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '10'\nassert solution('1000') == '100'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n9 6 8\\n') == '2'\nassert solution('3\\n1 1 1\\n') == '1'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n9 6 8\\n') == '3'\nassert solution('3\\n9 4 8\\n') == '3'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n7 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n5 8 12\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n1 8 4\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n4 8 5\n\"\"\") == \"4\"\nassert solution(\"\"\"2\n3 5\n\"\"\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n5 5 5\n''') == '2'\n\nassert solution('''\n3\n6 6 6\n''') == '3'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('15') == '5'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('2\\n9 5 4') == '2'\nassert solution('2\\n4 3 2') == '2'"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 2 3\"\n\"\"\"\n\nfrom itertools import accumulate, cycle\n\nn = int(input())\nseq = sorted([int(x) for x in input().split()])\n\narr = list(accumulate(seq, lambda x, y: x + y))\nans = [x + 1 for x in cycle(range(1, n + 1))]\n\nfor i, v in enumerate(arr):\n    if v == ans[i]:\n        print(ans[i], end=\" \")\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '3 1 4 5'\nassert solution('15') == '3 1 4 5 7 8 9 10 12 13 14 15'\n\n\"\"\"\n\n\nn = int(input())\nnums = input().split()\nprint(*sorted(nums))\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 1 2', \"Wrong result\"\nassert solution('1') == '1', \"Wrong result\""
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 1 2'\nprint(solution('3'))"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3 1'\nassert solution('3') == '3 1 2'\nassert solution('4') == '3 1 2 3'\nassert solution('5') == '3 1 2 3 4'"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 2 3\""
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nprint(solution(input()))"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''10 9 100''') == '9'\nassert solution('''1 2 100''') == '0'\nassert solution('''2 10 100''') == '0'\nassert solution('''3 10 100''') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('15 7 8') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 10') == '0'\nassert solution('10 10 10') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 10 1') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 7 100') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 1') == '1'\nassert solution('10 10') == '0'\nassert solution('10 3') == '9'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('12 7 100') == '0'\nassert solution('13 7 100') == '0'\nassert solution('14 7 100') == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"1 100\\n1 100\") == \"1\""
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('4 5') == '0'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n5 5 5 5 5\n''') == '2'\nprint(solution('''6 3\n2 2 3 3 3 3\n'''))"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n') == '2', \"Positive tests\"\nassert solution('4 1 2 3\\n') == '1', \"Negative tests\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 100 5 100 100') == '1'\nassert solution('2 500 5 100 200') == '2'\nassert solution('5 100 5 100 100') == '2'\nassert solution('5 500 5 100 200') == '2'"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"3 10\") == \"2\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"10 11\") == \"10\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 2 1') == 'Yes'\nassert solution('1') == 'No'\n\"\"\"\nimport math\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1\\n5 4 2 1') == 'Yes'\nassert solution('10 0\\n3 2 1 4 6 8 5 2\\n3 3 4 1') == 'No'\nassert solution('10 1\\n5 4 2 1') == 'Yes'\nassert solution('10 5\\n1 2 3 4 5\\n1 4 3 2') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == \"Yes\"\nassert solution('2 1 3 5') == \"No\"\n\n\"\"\""
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"2 2 3 4\") == \"No\"\nassert solution(\"2 2 3 4\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 1') == 'No'\n\"\"\"\n\nn, m = map(int, input().split())\nvotes = list(map(int, input().split()))\ncandidates = set()\n\nfor _ in range(m):\n    a = votes.pop(0)\n    candidates.add(a)\n\nresult = list(candidates)"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n5 4 2 1''') == 'Yes'\nassert solution('''7 1\n10 3 2 1 5 6''') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 1\\n5 4 2 1\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('8 1') == 'No'\nassert solution('9 1') == 'Yes'"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n..#\n###\n''') == \"5\"\nassert solution('''5 4 7\n#####\n#####\n#####\n##..\n##..\n''') == \"3\"\nassert solution('''5 5 7\n#####\n#####\n#####\n##..\n##..\n''') == \"3\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 3 2'\n    '..#'\n    '###'\n) == '5'\n\nprint(solution(\n    '2 3 2'\n    '..#'\n    '###'\n))\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 2\n..#\n###''') == \"5\"\nassert solution('''2 3 2\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 3 2\"\n    \"..#\"\n    \"###\"\n    ) == \"5\"\nassert solution(\n    \"2 3 2\"\n    \"..#\"\n    \"#..\"\n    ) == \"1\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3 2\n..#\n###\n''') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\nassert solution('''\n2 3 4\n####\n####\n''') == '3'\nassert solution('''\n2 3 6\n##..\n###.\n''') == '6'\nassert solution('''\n3 3 4\n###.\n####.\n##...\n''') == '1'\nassert solution('''\n3 3 7\n##..\n###.\n###.\n''') == '0'\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"5\"\nassert solution(\"2 2 2\") == \"3\"\nassert solution(\"1 2 1\") == \"4\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"1 1 1\") == \"3\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"4 4 4\\n##.#\\n#..#\\n##.#\\n###\") == \"8\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('5 4 2') == '5'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2020 2040''') == '2'\nassert solution('''2020 1001''') == '2'\nassert solution('''2020 2041''') == '1'\nassert solution('''2020 2042''') == '1'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 2041\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2041') == '1'\nassert solution('2020 2042') == '0'\nassert solution('2020 2043') == '4'\nassert solution('2020 2044') == '9'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n') == '1'\nassert solution('2 3\\n') == '3'\nassert solution('2020 2040\\n') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"80 2050\") == \"1\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('ATCODER') == 'WA'\nassert solution('ATCODER') == 'WA'\nassert solution('ATCODER') == 'WA'\n\nfrom collections import Counter\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"First\"\nassert solution(\"AAACCCDDDCCDDDDD\") == \"AC\", \"Second\"\nassert solution(\"CCC\") == \"WA\", \"Third\"\nassert solution(\"ABC\") == \"WA\", \"Fourth\"\nassert solution(\"BC\") == \"WA\", \"Fifth\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('atcoder') == 'AC'\nassert solution('ATCODE') == 'WA'\nassert solution('ATCOD') == 'WA'\nassert solution('ATCODE') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AAtCoder') == 'AC'\nassert solution('AtCoderC') == 'WA'\nassert solution('AtCoderCAt') == 'WA'\nassert solution('AtCoderCCCC') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('ATCODER') == 'WA'\nassert solution('ATCODER') == 'AC'"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AC\"\n'''\n\nimport sys"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"AC\"\nassert solution(input()) == \"WA\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'AC', \"First\"\nassert solution('ATCODER') == 'WA', \"Second\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"AtCoder\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"WA\") == \"WA\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1214') == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1214') == '2'"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1214') == '2'\nassert solution('100') == '0'\nassert solution('123456789') == '9'"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1324') == '4'\nassert solution('1214') == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1214\") == \"2\""
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1324\") == \"243322444\"\nassert solution(\"1214\") == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1324') == '133'\nassert solution('1224') == '121'\nassert solution('134') == '4'\nassert solution('113') == '1'\nassert solution('13') == '1'"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1324') == '3'\nassert solution('1324') == '1333224444'\nassert solution('1324') == '133333333322224444444444444444'\nassert solution('1324') == '133333333322224444444444444444'\nassert solution('1324') == '133333333322224444444444444444'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"4 4 1 1 5\") == \"NO\""
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('6 5 2 3 4 1') == 'NO'\n\n\"\"\""
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES', \"Unexpected result\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4 5') == 'YES'\nassert solution('1 2 3 4') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n2 3 4 5 1\") == \"NO\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"10 5 8 7 2 1\") == \"NO\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 2 3 4 1\n''') == 'YES'\nassert solution('''\n3\n5 1 4 2\n''') == 'NO'\nassert solution('''\n10\n1 5 9 2 3 4 6 7 8 10\n''') == 'YES'\nassert solution('''\n20\n3 1 9 2 4 8 5 6 7 10 11 12 13 14 15 16 17 18 19 20\n''') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('5 2 3 4 1') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 2 3 4 1\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n3\n1 2 3\n''') == 'YES'\nassert solution('''\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''\n10\n10 2 9 5 8 7 4 1 6 3\n''') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n\"\"\"\n\nfrom collections import deque\n\nn = int(input())\narr = list(map(int, input().split()))\nvisited = {i: False for i in arr}\n\nqueue = deque()\n\nfor i in range(n):\n    queue.append((i, arr[i]))\n\nwhile queue:\n    i, val = queue.popleft()\n\n    if not visited[val]:\n        visited[val] = True\n        for j in range(len(queue)):\n            if queue[j][1] == val:\n                queue.popleft()\n                break\n        else:\n            continue\n\n    j = i\n    while j > 0:\n        if arr[j] < val:\n            arr[j], arr[j - 1] = arr[j - 1], arr[j]\n            j -= 1\n        else:\n            break\n    else:\n        continue\n\nfor i in arr:\n    if i == val:\n        continue\n    else:\n        print('NO')\n        break\nelse:\n    print('YES')\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''201920181''') == '4'\nassert solution('''1000000000000000000000000000000000''') == '33'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n\nstdin = \"\"\"\n1000000000000\n\"\"\""
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n\n\n\"\"\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == str(answer)"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n\nimport sys\nfrom collections import deque\nsys.setrecursionlimit(10**6)\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '0'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '0'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n-1 -2 1\n-3 -4 1\n''') == '1'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n-1 -2 1\n-3 -4 1\n''') == '3'\n\n'''\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n2 4 7''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6''') == '3'\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nabaca?b\nzabbbcc\n''') == \"5\"\nassert solution('''7\nabaca?b\nzabbbcc\n''') == \"6 5\"\nassert solution('''9\nbambarbia\nhellocode\n''') == \"10 9\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc''') == '6 5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nabaca?b\nzabbbcc''') == '5'\nassert solution('''10\nbambarbia''') == '0'"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''\n7\nabaca?b\nzabbbcc\n''') == '6 5'\nassert solution('''\n9\nbambarbia\nhellocode\n''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == \"5\"\nassert solution('''7\nabaca?b\nzabbbcc\n''') == \"6 5\"\nassert solution('''9\nbambarbia\nhellocode\n''') == \"0\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"5\"\nassert solution(\"10\") == \"10\"\nassert solution(\"?\") == \"0\"\nassert solution(\"a\") == \"0\"\nassert solution(\"abca\") == \"0\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b''') == '6 5'\nassert solution('''9\nbambarbia''') == '0'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\n1 1 1 1\n\"\"\") == \"\"\"2\"\"\"\n\nassert solution(\"\"\"7\n4 1 2 2 1 5 3\n\"\"\") == \"\"\"3\"\"\"\n\nassert solution(\"\"\"7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"\"\"4\"\"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"\") == \"4\"\nassert solution(\"2\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('11') == '4 4 4 4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\nassert solution('4 1 2 2 1 5 3') == '7 7'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == \"2 4\"\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == \"2 3 4 1 4\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2 3 4\") == '3'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n''') == '3\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 4 4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3 3\"\nassert solution(\"6\") == \"3 4\"\nassert solution(\"7\") == \"3 7\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('11') == '3'\nassert solution('4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4 5 4 4 5 5 5 5 5'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 11\n45 1 10 12 11 7\n\"\"\") == \"7\"\nassert solution(\"\"\"\n4 2\n2 78 4 10\n\"\"\") == \"12\"\nassert solution(\"\"\"\n5 2\n3 7 19 3 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 7\n\nfor _ in range(10):\n    input()\n    a = list(map(int, input().split()))\n    k = int(input())\n    cnt = 0\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if (a[i] + a[j]) % k == 0:\n                cnt += 1\n    print(cnt)\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 7\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"7\"\nassert solution(\"5 2\") == \"12\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n2 78 4 10\n''') == '7'\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\nassert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\nassert solution('''\n4 2\n2 78 4 10\n''') == '0'"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\""
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\n\nassert solution('''\n4 2\n2 78 4 10\n''') == '12'\n\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\n\nassert solution('''\n2 6\n3 4 7 8 9 10\n''') == '5'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"6 11\n45 1 10 12 11 7\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"4 2\n2 78 4 10\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"5 2\n3 7 19 3 3\n\"\"\") == \"0\""
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"7\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('4\\n2 5 1\\n') == '7'"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n4 4 -1\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\n\"\"\") == \"10\"\nassert solution(\"\"\"\n6\n1 2 3 4 5 -1\n\n\"\"\") == \"10\"\nassert solution(\"\"\"\n7\n1 2 3 4 5 -1 -2\n\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n4\n-2 -4 1 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('3') == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '9'\nassert solution('7') == '16'\nassert solution('8') == '22'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n4 5\n5 6\"\"\") == \"9\"\nassert solution(\"\"\"5\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"12\""
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"3\\n3\") == \"3\"\nassert solution(\"5\\n2 4 5\") == \"7\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"1\") == \"9\""
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n-1 -2 -3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5\n2 5 -1 -2 -3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"110\"\nassert solution(\"10 10 3\") == \"110\"\nassert solution(\"3 3 3\") == \"110\"\nassert solution(\"3 3 2\") == \"100\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 3') == '110'\n\nassert solution('4 4 3') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3') == '110'\nassert solution('1 2 3') == '110'\nassert solution('1 2 2') == '100'\nassert solution('1 1 1') == '100'\nassert solution('1 1 1') == '100'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\\n1 2 2\") == \"110\"\nassert solution(\"1 1 1\\n1 3 3\\n\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"\nassert solution(\"\"\"\n2 2 2\n1 1 1\n1 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3 3\n1 2 1\n1 2 1\n1 1 1\n\"\"\") == \"100\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('6 6 4') == '6'\nassert solution('4 4 3') == '6'\nassert solution('5 5 3') == '6'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3'"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('3 4 1') == '110'\nassert solution('5 4 1') == '110'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\"\nassert solution(\"3\\n1 2 5 3\\n\") == \"3\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('10\\n1 1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('7\\n1 2 3 4 5 6 7') == '0'\nassert solution('1\\n1') == '0'\nassert solution('6\\n1 2 3 4 5 6') == '5'"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2\n1 2\n3\n5\"\"\") == \"5\"\nassert solution(\"\"\"3\n1 -2 2\n1 3\n4\n-1\"\"\") == \"2\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\""
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 9 2\\n') == '5'\nassert solution('6\\n1 2 3 4 5 6\\n') == '0'\nassert solution('3\\n2 4 2\\n') == '1'"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"2 10 20 3\") == \"20\"\nassert solution(\"3 30 50 6\") == \"30\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n0 0\n1 0\n0 1\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"2\n0 0\n1 0\"\"\") == \"1.414213...\"\n\n----Submission----\nsubmission.py\n\n----Sample Output----"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2.276142373\"\nassert solution(\"1\") == \"1.0\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('4\\n0 0\\n1 0\\n0 1\\n3 0\\n3 0\\n3 0\\n') == '3.9375518439'"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == '2.276142373999999'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2.2761423749'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.276142...'\nassert solution('5\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n') == '2.769230769'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.2761423749'"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == \"2.276142\"\nassert solution('''2\n0 0\n1 0\n0 1''') == \"1.000000000000\"\n\n\"\"\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2.2761423\"\nassert solution(\"4\") == \"2.2761423\"\n\n\"\"\"\n\nN = int(stdin.readline())\nx_arr, y_arr = [], []\n\nfor i in range(N):\n    x_arr.append(int(stdin.readline().split()[0]))\n    y_arr.append(int(stdin.readline().split()[0]))"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\nassert solution('2 4') == '2'\nassert solution('1 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 3') == '1'"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 5') == '4'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"8 10\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 4') == '4'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '4'\nassert solution('12 4') == '4'\n'''"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"10 20\") == \"20\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''12 4\n''') == '4'\nassert solution('''4 4\n''') == '4'\nassert solution('''3 3\n''') == '3'\nassert solution('''1 1\n''') == '0'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 4') == '4'"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 12\n5 9\n''') == '4'\nassert solution('''100 10\n20 30\n''') == '18'\nassert solution('''16 16\n5 5\n''') == '16'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''100\n100''') == '2'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"3\""
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10000') == '3'"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"10000\") == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10000') == '3'\nassert solution('50') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"3\"\nassert solution(\"15\\n\") == \"3\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"1\\n\") == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 1 2\\n3 1 2 3\") == \"1\"\nassert solution(\"1 2\\n2 1 2\\n2 3 2\") == \"2\"\nassert solution(\"2 1\\n3 1 2\\n1 2 3\") == \"3\"\nassert solution(\"3 3\\n2 1 2\\n3 1 2 3\") == \"3\"\nassert solution(\"2 5\\n2 1 2 3 4\\n2 3 2 4 5\\n2 4 3 5 2\\n2 1 2 3 4 5\") == \"6\""
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"10 10\\n1 1 2 1 2 1 3 2 3 2 2 1 2 3\\n3 3 2 1 3 1 2 2 3 3\") == \"9\"\n\n\"\"\"\nimport math\n\nn, m = [int(i) for i in input().split()]\nnums = [int(i) for i in input().split()]\nnum_of_foods = dict()\n\nfor food in nums:\n    if food not in num_of_foods:\n        num_of_foods[food] = 1\n    else:\n        num_of_foods[food] += 1\n\nnum_of_people = math.ceil(m / n)\n\nfood_liked = dict()\nfor i in range(num_of_people):\n    food_liked[i + 1] = 0\n\nfor food, people in num_of_foods.items():\n    food_liked[people] += 1\n\nfor people, liked in food_liked.items():\n    print(liked)\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 1 3\n3 1 2 3\n2 3 2\n3 4 3\n''') == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('5 6\\n2 1 5\\n3 1 2 5\\n4 1 3 5\\n2 3 2 5') == '4'\nassert solution('10 10\\n2 1 2 3 5 5 2 4 6 4 7\\n2 3 2 5 5 2 7 7 7 5 7 7 7 5') == '7'"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"8 8\\n8 5 1 8\\n3 2 1 4\\n8 5 4 8\\n1 1 2 1 1\\n3 2 1 4\") == \"2\""
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 3') == '2'\n\n--* More tests! *--\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2 3') == '1'\nassert solution('2 3 4 5') == '3'\nassert solution('2 2 3 3') == '2'\nassert solution('2 4') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0.5\"\n\ninput = int(stdin)\np = input / (input + 1)\nprint(p)\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.5000000000'"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(4) == '0.5000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\nassert solution(\"2\") == \"0.25\"\nassert solution(\"3\") == \"0.3333333333\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0.5'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\"\nassert solution(\"3\\n\") == \"0.500000000\"\nassert solution(\"2\\n\") == \"0.5\"\n\n\"\"\""
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.5'\nassert solution('3') == '0.3333333333333333'\nassert solution('4') == '0.25'"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('123') == '0.3333333333'\nassert solution('1234') == '0.266666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0.5000000000'"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\nassert solution(\"1\") == \"1.0\"\n\"\"\"\n\nn = int(input())\na_pos = n // 2 + 1\na_neg = n // 2\nprint(a_pos/(a_neg + 1))"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '2\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '2\\n'\nassert solution('4\\n') == '1\\n'\nassert solution('5\\n') == '0\\n'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '1'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\n\n\"\"\""
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n1 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''4\n1 1\n1\n1 1\n1\n2 0\n''') == '3'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n3\n1 2\n2 1\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''\n5\n4\n3 2\n3 3\n4 2\n1 1\n1\n''') == '2'\nassert solution('''\n5\n1\n1 1\n2 1\n3 1\n4 1\n4 1\n''') == '4'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''5\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution('''8\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '5'\nassert solution('''12\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution('''15\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '5'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('4\\n2 1 1\\n1\\n2 0\\n') == '1'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"nikoandsolstice\"\nassert solution(\"5\") == \"nikoandsolstice\"\nassert solution(\"4\") == \"nikoandsolst\"\n\"\"\"\nK, S = input().split()\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nS') == 'nikoandsolstice'\nprint('Everything passed!')\n\"\"\""
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"nikoandsolstice\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'nikoandsolstice'"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'nikoand'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234567') == '1234567'\nassert solution('123456789') == '123456789'\nassert solution('123456789A') == '123456789'\nassert solution('123456789AB') == '123456789'\nassert solution('123456789ABC') == '123456789'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('8') == 'nikoandsolstice'\nassert solution('16') == 'nikoandsolstice'\nassert solution('32') == 'nikoandsolstice'\nassert solution('36') == 'nikoandsolstice'"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"a\" * 100) == \"a\" * 100\nassert solution(\"a\" * 101) == \"a\" * 100 + \"a\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '6'\nassert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"nikoand...\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'apples'\n\nfrom typing import List"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('bun') == 'buns'\nassert solution('car') == 'cars'\nassert solution('cat') == 'cats'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\"\n\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('pear') == 'pears'\nassert solution('grape') == 'graves'\nassert solution('duduk') == 'ducks'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"apples\"\nassert solution(\"apple\") == \"apples\"\nassert solution(\"oranges\") == \"oranges\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"zenith\") == \"zeniths\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apples') == 'apples'\nassert solution('appleses') == 'appleses'\nassert solution('apple') == 'apples'\nassert solution('b') == 'bs'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"orange\") == \"oranges\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"bee\") == \"bees\"\nassert solution(\"dog\") == \"dogs\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('5 5\\n3\\n1 2 3\\n2\\n2 4 5') == '2'\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 2\n2\n1 3\n1\n3\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2\n3\n1 2 3 4\n3\n2\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 3\n1\n3\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 3\n1\n2\n3\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 2\n3\n1 3\n1\n3\n\n\"\"\") == \"1\""
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 2\n2\n1 3\n1\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n3\n1 1 3\n1\"\"\") == \"0\"\nassert solution(\"\"\"3 2\n3\n3 3 3\n3\"\"\") == \"1\"\nassert solution(\"\"\"10 1\n10\n10 10 10 10 10 10 10 10 10 10\"\"\") == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"10 10\") == \"4\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '1'\nassert solution('1 3') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"100 3\") == \"1\"\nassert solution(\"100 1\") == \"0\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '5'\n\"\"\"\n\nn = int(input())\ns = input()\n\nfrom collections import defaultdict"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '5'"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n'\n    'ab\\n'\n    'abc\\n'\n    'ab\\n'\n    'aac\\n'\n) == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\naabbbbaaca\") == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\nababbbaaca\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"10\") == \"5\""
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == ''\nassert solution('3') == '3'\nassert solution('10') == '10'\n\nn = int(input())\ns = input()\ns_list = []\n\nfor i in range(n):\n    s_list.append(s[i])"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"4 4 4 4\") == \"4\"\n\n'''\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n5 2 4\n''') == '4'\nassert solution('''6\n5 2 4 3 2\n''') == '2'"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''4\n2 1 3\n''') == '1'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''3\n5 2 4\n''') == '3'\n\nassert solution(\n    '''10\n10 10 10 10 10 10 10 10 10 10 10\n''') == '10'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\\n\") == \"3\"\nassert solution(\"4\\n3 2 4\\n\") == \"2\"\nassert solution(\"5\\n2 3 4\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == str(2)\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"5 1 1 3\") == \"2\"\nassert solution(\"3 1 1 3\") == \"3\"\nassert solution(\"5 1 1 3\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('5 1 5 7') == '13'\nassert solution('5 1 5 7') == '13'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 -5 2') == '6'\nassert solution('5 1 2 3') == '4'\nassert solution('2 1 0 0') == '2'\nassert solution('2 1 -1 0') == '2'\nassert solution('2 1 -2 0') == '1'\n\nimport math"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 1\") == \"2\"\nassert solution(\"4 4 -1 2\") == \"4\"\nassert solution(\"4 4 1 2\") == \"5\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 1 3\n''') == '2'\nassert solution('''1 1 1 3\n''') == '3'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('3 2 3 -1') == '3'\nassert solution('1 1 1 3') == '2'"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8\") == \"Yes\", \"Try again\"\nassert solution(\"5 7\") == \"No\", \"Try again\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('10 20') == 'Yes'\nassert solution('10 20') == 'No'\nassert solution('3 1') == 'No'\nassert solution('2 4') == 'No'"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('4 7') == 'No'"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == 'Yes', \"Test 1 Failed\"\nassert solution('2 10') == 'No', \"Test 2 Failed\"\nassert solution('3 8') == 'Yes', \"Test 3 Failed\"\nassert solution('3 6') == 'No', \"Test 4 Failed\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"Yes\", \"Expected: Yes\"\nassert solution(\"3 8\") == \"Yes\", \"Expected: Yes\"\nassert solution(\"4 5\") == \"No\", \"Expected: No\""
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n\"\"\"\n\nfrom collections import defaultdict\n\nn, m = map(int, input().split())\n\ngraph = defaultdict(set)\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a].add(b)\n    graph[b].add(a)"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n'''\n\nfrom collections import defaultdict\n\nclass Graph:\n    def __init__(self, graph_dict=None):\n        if graph_dict == None:\n            graph_dict = defaultdict(list)\n        self.graph_dict = graph_dict\n    \n    def add_edge(self, u, v):\n        self.graph_dict[u].append(v)\n        self.graph_dict[v].append(u)\n    \n    def __str__(self):\n        return str(self.graph_dict)\n    \n    def __repr__(self):\n        return self.__str__()\n    \n    def bfs(self, root):\n        visited = defaultdict(bool)\n        queue = deque([root])\n        \n        while queue:\n            node = queue.popleft()\n            if not visited[node]:\n                visited[node] = True\n                print(node, end=' ')\n                for n in self.graph_dict[node]:\n                    queue.append(n)\n    \n    def dfs(self, root):\n        visited = defaultdict(bool)\n        stack = deque([root])\n        \n        while stack:\n            node = stack.pop()\n            if not visited[node]:\n                visited[node] = True\n                print(node, end=' ')\n                for n in self.graph_dict[node]:\n                    stack.append(n)\n\nn, m = map(int, input().split())\ngraph = Graph()\nfor i in range(m):\n    a, b = map(int, input().split())\n    graph.add_edge(a, b)\n    graph.add_edge(b, a)\nprint(graph)\n\nprint(graph.bfs(1))\nprint(graph.dfs(1))"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''2 4\n1 2\n1 3\n2 3''') == '1'\n'''\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 2''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\n'''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'''\nimport sys\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '2'\n'''\n\n\nfrom collections import defaultdict\nclass Graph:\n    def __init__(self):\n        self.graph = defaultdict(list)\n    def add_edge(self,u,v):\n        self.graph[u].append(v)\n        self.graph[v].append(u)\n    def path_count(self,v):\n        visited = set()\n        stack = []\n        stack.append(v)\n        count = 0\n        while len(stack)>0:\n            count += 1\n            node = stack.pop()\n            if node not in visited:\n                visited.add(node)\n                for neighbor in self.graph[node]:\n                    stack.append(neighbor)\n        return count"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 5\n4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 5\n4 5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\n\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2 2\") == \"2\""
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 3\n3 4\n4 5\n5 6''') == \"18\"\nprint('solution: ', solution('''5 2\n2 3\n3 4\n4 5\n5 6'''))"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 1') == '3'\nassert solution('4 4') == '3'\nassert solution('4 5') == '4'\nassert solution('5 4') == '4'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"16\"\nassert solution(\"6\") == \"24\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 1\") == \"3\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string=\"5 2\") == \"18\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'\nassert solution('12 10') == '22'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"18\", \"3+4+5+6=18\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 2') == '6'\nassert solution('5 2') == '6'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15') == '60'"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"15\") == \"60\"\n\n\"\"\"\nimport math\nfrom functools import reduce"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '60'\nassert solution('2') == '2'\nassert solution('10') == '80'\nassert solution('15') == '60'\nassert solution('2147483647') == '0'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''15\n''') == '60'\n\n\"\"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"15\"\n    ) == \"60\""
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"20\") == \"6\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == '60'\nassert solution('17') == '84'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"15\") == \"60\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('5') == 'Buzz'\nassert solution('15') == 'BuzzBuzz'\nassert solution('20') == 'Buzz'\nassert solution('25') == 'BuzzBuzz'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5\\n4 6 7\\n') == '8'\nassert solution('2 2\\n1 1\\n') == '1'\nassert solution('6 2\\n2 4 5\\n') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n4 7 10 6 5\n''') == '8'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('5 2 5 5 5') == '5'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"123 2\") == \"125\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '8'\nassert solution('6 5') == '8'\nassert solution('9 9') == '10'\nassert solution('10 9') == '10'\nassert solution('20 20') == '30'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n3 5 4 7\n''') == '8'\nassert solution('''\n6 8\n1 2 3 5 6 7\n''') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"X Y\") == \"8\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"3 2\") == \"3\""
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n4 7 10 6 5\n''') == \"8\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 3') == '4'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"6 6\") == \"5\"\nassert solution(\"8 8\") == \"0\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 5') == '6'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1') == '2'"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"5 7\") == \"4\"\nassert solution(\"20 9\") == \"20\""
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\n\nassert solution('3 2') == '1'\n\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2\n\n''') == \"1\"\n\nassert solution('''\n4\n4\n\n''') == \"1\"\n\nassert solution('''\n5\n4\n\n''') == \"3\"\n\nassert solution('''\n10\n10\n\n''') == \"2\"\n\nassert solution('''\n10\n10\n\n''') == \"2\""
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\", \"Should return 1\"\nassert solution(\"5 5\") == \"14\", \"Should return 14\""
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''\n5 2\n3 7 5 1 10 3 20\n''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 4\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"6\"\nassert solution(\n    \"7 2\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\nprint(solution('''7 4\n3 7 5 1 10 3 20'''))\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '7 4\\n3 7 5 1 10 3 20'\n    ) == '6'\nassert solution(\n    '7 2\\n3 7 5 1 10 3 20'\n    ) == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 3 5 1 10 3 20\") == \"6\"\nassert solution(\"4 5\\n1 2 3 4 5\") == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2 3 4\n''') == '-1'\nassert solution('''4 2\n3 4 1 2\n''') == '2'\nprint(\"You're a stud!\")\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == '3', \"Top\"\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\n''') == '3', \"Bottom\"\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1', \"Cross\"\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n\n''') == '3', \"Star1\"\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n\n''') == '-1', \"Star2\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\nassert solution(input) == \"3\"\nassert solution(input) == \"3\"\n\nassert solution(input) == \"-1\"\nassert solution(input) == \"-1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    10 10\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ...*...\n    ''') == '3 4 1'\n    \n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 7\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '3'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n\n''') == '-1'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1'"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 4 1'\nassert solution('4 4') == '3 4 1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '6 8'\n) == '3\\n3 4 1\\n3 5 2\\n3 5 2'\n\nassert solution(\n    '5 5'\n) == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2'\n\nassert solution(\n    '5 5'\n) == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution() == \"ab\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\ngood') == '0'\nassert solution('4\\naaabc') == '2'\nassert solution('3\\naaa') == '3'\nassert solution('2\\nab') == '1'\nassert solution('1\\n') == '0'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'aaa'\nassert solution('4') == 'aaa'\nassert solution('5') == 'aaa'\nassert solution('6') == 'aaa'\nassert solution('7') == 'aaa'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\ngood\n''') == '0'\nassert solution('''2\naaa\n''') == '3'\nassert solution('''3\naaa\n''') == '3'\nassert solution('''1\ngood\n''') == '0'\nassert solution('''1\ngood\n''') == '0'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('good') == 'good'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aaaa'\nassert solution('abc') == 'aa'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('good') == 'good'\nassert solution('aaabc') == 'ab'\nassert solution('aaa') == 'aaa'\nassert solution('aaaa') == 'aaaa'"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '0\\n'\nassert solution('3\\n') == '2\\n'\nassert solution('2\\n') == '1\\n'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('aa') == ''\nassert solution('abc') == ''\nassert solution('aaa') == ''\nassert solution('aaa') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n6\nzzzzzzzzzzz\nzzzzzzzzzzz\nzzzzzzzzzzz\nzzzzzzzzzzz\nzzzzzzzzzzz\nzzzzzzzzzzz\"\"\") == \"zzzzzzzzzzz\"\nassert solution(\"\"\"\\\n1\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2 3\\n1 2\\n1 3\") == \"10110\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5') == 'YES'\nassert solution('1 5') == 'YES'\nassert solution('2 1') == '0'\nassert solution('1 4') == '1'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n\n\"\"\") == \"YES\"\nassert solution(r\"\"\"\n7 5\n1 5\n2 1\n1 4\n3 1\n4 4\n5 5\n6 6\n7 7\n\"\"\") == \"NO\"\nassert solution(r\"\"\"\n6 6\n1 5\n1 4\n3 1\n3 2\n3 5\n4 4\n5 5\n6 6\n\"\"\") == \"NO\"\nassert solution(r\"\"\"\n6 6\n1 5\n1 4\n3 1\n3 2\n3 5\n4 4\n5 5\n6 6\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 5\n1 5\n2 1\n1 4\n3 1\n6 1\n\n\"\"\") == \"YES\", \"Wrong result\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\"\n\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\n\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\n\n\"\"\""
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"YES\"\nassert solution(\"6 5\") == \"YES\"\nassert solution(\"6 5\") == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n6 6\n1 5\n1 5\n2 1\n2 2\n3 2\n3 2\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n6 6\n1 5\n1 5\n2 1\n3 2\n3 2\n4 2\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES', 'First example'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO', 'Second example'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES', 'Third example'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO', 'Fourth example'\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n\n''') == 'YES'\n\nassert solution('''\n1 1\n1 1\n\n''') == 'YES'\n\nassert solution('''\n10 10\n1 2\n1 3\n1 6\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n5 6\n5 7\n5 8\n5 9\n5 10\n7 6\n7 7\n7 8\n7 9\n7 10\n8 6\n8 7\n8 8\n8 9\n8 10\n9 6\n9 7\n9 8\n9 9\n9 10\n10 6\n10 7\n10 8\n10 9\n10 10\n\n''') == 'NO'\n\nassert solution('''\n1 1\n1 1\n\n''') == 'NO'\n\nassert solution('''\n1 1\n1 1\n\n''') == 'NO'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"1 7\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'\nassert solution('''\n1 5\n1 7\n''') == '1'\nassert solution('''\n1 7\n1 7\n''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5\n2 2\n1 2\n5 5\n\n''') == '2'\nassert solution('''2\n1 1\n1 2\n\n''') == '0'\nassert solution('''2\n1 1\n1 2\n\n''') == '1'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 5\"\n    \"2 2\"\n    \"1 2\"\n    \"5 5\"\n    ) == \"2\"\n\nassert solution(\n    \"1 7\"\n    \"1 7\"\n    ) == \"0\""
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0''')"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5\n2 2\n1 2\n5 5\n\"\"\") == \"\"\"2\"\"\"\n\nassert solution(\"\"\"\n2\n3 4\n\"\"\") == \"\"\"0\"\"\"\n\nassert solution(\"\"\"\n5 6\n1 6\n3 5\n4 2\n2 5\n4 3\n2 6\n\"\"\") == \"\"\"4\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n\n''') == '2'\nassert solution('''1 7\n1 7\n\n''') == '0'''\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n2 2\n1 2\n5 5\n\n''') == '2'\nassert solution('''1 7\n1 7\n\n''') == '0'\nprint('Check passed')"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 5\n2 2\n1 2\n5 5\"\"\") == \"2\"\nassert solution(\"\"\"1 7\n1 7\"\"\") == \"0\""
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('4 9 2 3') == '2'\nassert solution('2 5 2 3') == '2'\nassert solution('1 2 3 4') == '4'\n\n'''"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"10 3 6 4\") == \"7\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 4 6 5\"\n) == \"2\"\nassert solution(\n    \"2 2 5 6\"\n) == \"0\"\nassert solution(\n    \"10 6 8 9\"\n) == \"4\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('5 7 2 3') == '5'\nassert solution('4 8 2 3') == '4'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 9 2 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('7 9 2 1') == '4'\nassert solution('100 9 2 1') == '5'\nassert solution('12 9 2 1') == '8'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('100 50 3 2') == '4'\nassert solution('30 20 6 2') == '4'\nassert solution('30 20 10 2') == '4'\nassert solution('30 20 100 2') == '4'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('10 20 5 0') == '6'\nassert solution('100000 10000 100000 10000') == '1'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 9 2 3') == '2'"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3\n''') == '0\\n'\nassert solution('''\n4 9 2 3\n''') == '3\\n'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1234567890\") == \"Yes\""
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''123456789''') == 'Yes'\nassert solution('''1234567890''') == 'No'\nassert solution('''1234567890a''') == 'No'\nassert solution('''1''') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n\nprint(solution(input()))"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('1234567') == 'Yes'\nassert solution('123456') == 'Yes'\nassert solution('12345') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"ABCD\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"213456789\") == \"No\"\nassert solution(\"2\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('127') == '4'\nassert solution('10') == '10'\nassert solution('9') == '9'\nassert solution('6') == '6'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\nassert solution('100000\\n') == '4'\n\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n\nN = int(input())"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"101\") == \"3\"\nassert solution(\"128\") == \"3\"\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('127') == '4'\nassert solution('10') == '1'\nassert solution('1000') == '8'\n'''\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('127') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"4\", \"Should withdraw 1 yen and then 6, 9, 36, and 81\"\nassert solution(\"12\") == \"3\", \"Should withdraw 1 yen and then 6, 9, and 81\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('127') == '4'\nassert solution('6') == '1'\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"3\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('127') == '4'\nassert solution('16') == '2'\nassert solution('12') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('6\\n6\\n6\\n6\\n6') == '4'\nassert solution('7\\n7\\n7\\n7\\n7') == '4'\nassert solution('8\\n8\\n8\\n8\\n8') == '3'\nassert solution('9\\n9\\n9\\n9\\n9') == '3'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\n'''\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\n\n-- Input --\nS = input()\nT = input()\n\n-- Output --\nYes if S = T after some number of rotations, else No.\n\n'''\nfrom collections import deque\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('tokyo') == 'kyoto'\n'''\n\ns = stdin.readline().strip()\nt = stdin.readline().strip()\nrotations = int(stdin.readline().strip())\n\nfor i in range(rotations):\n    t = t[-len(s):]+t[:-len(s)]\nprint(t == s)"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"\") == \"No\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('tokyo') == 'kyoto'\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('aab') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('ac') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\n\n'''"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('a') == '0'\nassert solution('') == '0'\nassert solution('\\n') == '0'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"cabaca\") == \"1\"\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"cabacc\") == 1\nassert solution(\"abc\") == 2\nassert solution(\"ababc\") == 3\nassert solution(\"abcc\") == 3\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"xyz\") == \"1\"\nassert solution(\"aaaaaa\") == \"2\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('ab') == '1'\nassert solution('ac') == '1'\nassert solution('abcd') == '4'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 5 7') == '5'\n\"\"\""
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"8 12 2\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"20 10 20\") == \"20\"\nassert solution(\"10 20 10\") == \"10\"\nassert solution(\"30 20 30\") == \"30\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('3 3 3') == '3'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 12 3\") == \"1\"\nassert solution(\"8 12 1\") == \"1\""
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"15 30 2\") == \"3\"\nassert solution(\"1 10 4\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([8, 12, 2]) == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1') == '1'\nassert solution('1 2 3 4 5') == '4'\nassert solution('1 5 3 2') == '4'\nassert solution('1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\"\")) == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2020\""
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1024') == '2020'\nassert solution('1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1024') == '2020'\nassert solution('20') == '20'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10000\") == \"2020\"\nassert solution(\"1000\") == \"20\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1023\") == \"2023\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1024') == '2020'\nassert solution('20') == '20'\nassert solution('1') == '10'\nassert solution('2') == '20'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''X\n''') == '2020'\nassert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '3'\nassert solution('''4\n''') == '4'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"500\") == \"500\"\nassert solution(\"100\") == \"100\"\nassert solution(\"500 5\") == \"500\"\nassert solution(\"5 5\") == \"500\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1024') == '2020'\nassert solution('1020') == '20'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1024') == '2020'\nassert solution('100') == '0'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1024') == '2020'\nassert solution('1') == '1'\nassert solution('-3') == '-1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('1 4') == '5'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 2\\n') == '5'\nassert solution('1\\n3 3\\n') == '6'\nassert solution('5\\n3 3\\n') == '8'\nassert solution('9\\n1 3\\n') == '8'\nassert solution('8\\n4 4\\n') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"5\"\nassert solution('1') == \"1\"\nassert solution('10') == \"10\""
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '5'\nassert solution('1 4') == '5'"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '5'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 4\\n') == '5'\nassert solution('4\\n1 1 1 1\\n') == '5'\nassert solution('1\\n10\\n') == '11'\nassert solution('5\\n10 10 10 10 10\\n') == '11'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\"\n\"\"\""
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '5'"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n2 3 5\") == \"8\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4\\n') == '5'\nassert solution('3\\n1 2 3\\n') == '2'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"20 2\") == \"20\"\nassert solution(\"1 100\") == \"1\"\nassert solution(\"1 100000\") == \"1\"\n\"\"\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"2\", \"10\"]) == \"3\"\nassert solution([\"4\", \"2\"]) == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 3') == '3'\nassert solution('4 3') == '4'\nassert solution('8 3') == '5'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"4 20\") == \"5\"\nassert solution(\"20 2\") == \"2\"\nassert solution(\"10 10\") == \"4\"\n\n-------------------------------------------------------\n\nTest case #1: (A = 10, B = 4)\nEnter A and B: 10 4\n\nTest case #2: (A = 4, B = 20)\nEnter A and B: 4 20\n\nTest case #3: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #4: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #5: (A = 20, B = 2)\nEnter A and B: 20 2\n\nTest case #6: (A = 10, B = 20)\nEnter A and B: 10 20\n\nTest case #7: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #8: (A = 4, B = 5)\nEnter A and B: 4 5\n\nTest case #9: (A = 2, B = 10)\nEnter A and B: 2 10\n\nTest case #10: (A = 2, B = 5)\nEnter A and B: 2 5\n\nTest case #11: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #12: (A = 20, B = 5)\nEnter A and B: 20 5\n\nTest case #13: (A = 10, B = 5)\nEnter A and B: 10 5\n\nTest case #14: (A = 4, B = 20)\nEnter A and B: 4 20\n\nTest case #15: (A = 20, B = 2)\nEnter A and B: 20 2\n\nTest case #16: (A = 10, B = 20)\nEnter A and B: 10 20\n\nTest case #17: (A = 2, B = 20)\nEnter A and B: 2 20\n\nTest case #18: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #19: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #20: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #21: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #22: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #23: (A = 4, B = 5)\nEnter A and B: 4 5\n\nTest case #24: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #25: (A = 20, B = 10)\nEnter A and B: 20 10\n\nTest case #26: (A = 10, B = 5)\nEnter A and B: 10 5\n\nTest case #27: (A = 4, B = 20)\nEnter A and B: 4 20\n\nTest case #28: (A = 2, B = 5)\nEnter A and B: 2 5\n\nTest case #29: (A = 4, B = 20)\nEnter A and B: 4 20\n\nTest case #30: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #31: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #32: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #33: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #34: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #35: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #36: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #37: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #38: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #39: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #40: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #41: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #42: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #43: (A = 4, B = 5)\nEnter A and B: 4 5\n\nTest case #44: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #45: (A = 20, B = 5)\nEnter A and B: 20 5\n\nTest case #46: (A = 10, B = 5)\nEnter A and B: 10 5\n\nTest case #47: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #48: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #49: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #50: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #51: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #52: (A = 20, B = 2)\nEnter A and B: 20 2\n\nTest case #53: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #54: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #55: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #56: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #57: (A = 2, B = 4)\nEnter A and B: 2 4\n\nTest case #58: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #59: (A = 2, B = 4)\nEnter A and B: 2 4\n\nTest case #60: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #61: (A = 10, B = 4)\nEnter A and B: 10 4\n\nTest case #62: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #63: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #64: (A = 10, B = 2)\nEnter A and B: 10 2\n\nTest case #65: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #66: (A = 2, B = 2)\nEnter A and B: 2 2\n\nTest case #67: (A = 4, B = 4)\nEnter A and B: 4 4\n\nTest case #68: (A = 2, B = 4)\nEnter A and B: 2 4\n\nTest case #69: (A = 4, B = 2)\nEnter A and B: 4 2\n\nTest case #70: (A = 10, B = 10)\nEnter A and B: 10 10\n\nTest case #71: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #72: (A = 4, B = 5)\nEnter A and B: 4 5\n\nTest case #73: (A = 4, B = 10)\nEnter A and B: 4 10\n\nTest case #74: (A = 20, B = 5)\nEnter A and B: 20 5\n\nTest case #75: ("
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 3\nassert solution(\"1\") == 2\nassert solution(\"4\") == 1\nassert solution(\"10\") == 0\nassert solution(\"3\") == 3\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 1\"\n) == \"1\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 10\n''') == '3'\nassert solution('''5 10\n''') == '3'\nassert solution('''10 10\n''') == '0'\nassert solution('''0 10\n''') == '0'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n0 0\n0 0\n0 0''') == '1'\nassert solution('''5 5\n1 1\n1 1\n1 1''') == '1'"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1\", \"Wrong\"\nassert solution(\"10 3\") == \"4\", \"Wrong\"\nassert solution(\"4 10\") == \"3\", \"Wrong\"\nassert solution(\"3 2\") == \"2\", \"Wrong\"\nassert solution(\"4 5\") == \"3\", \"Wrong\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"2 5\") == \"3\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''CSR\nCSR\nCSR\nCSS\nCSS\nCSR\nCSR\nCSS''') == '2'\nassert solution('''CSR\nCSR\nCSS\nCSS\nCSR\nCSR\nCSR''') == '0'\nassert solution('''CSR\nCSR\nCSS\nCSS\nCSR\nCSR\nCSR''') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"1\"\nassert solution(\"CSR\") == \"1\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '1'\nassert solution('CSBS') == '0'\nassert solution('CSRS') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('3\\n2 1 3 5 4\\n') == '2'\nassert solution('5\\n1 3 4 2 5\\n') == '5'\nassert solution('5\\n1 4 2 3 5\\n') == '5'\nassert solution('5\\n1 4 3 2 5\\n') == '5'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('6\\n1 4 5 2 3 6') == '4'\nassert solution('7\\n1 2 3 4 5 6 7') == '0'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '7'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 2 5 4 3\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == '2'\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == '7'"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''3\n1 2 3''') == '1'\nassert solution('''1\n3 5 2''') == '3'\nassert solution('''4\n3 1 2 5''') == '4'\nassert solution('''2\n4 1 2 5''') == '4'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5.480'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('7') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410', 'First'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620', 'Second'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480', 'Third'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040', 'Fourth'\nassert solution('''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720', 'Fifth'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5.460\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.480\"\nassert solution(\"5\") == \"6.040\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1.1 2.1\") == \"1.1\"\nassert solution(\"5\\n1 2\\n0.5 2\\n0.3 2\\n1 1\\n1 1\") == \"1.0\"\nassert solution(\"5\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\") == \"0.0\"\nassert solution(\"5\\n1 2\\n1.1 2.1\\n1.1 2.1\\n1.1 2.1\\n1.1 2.1\") == \"1.1\"\nassert solution(\"5\\n1 2\\n0.5 2\\n0.3 2\\n1 1\\n1 1\\n1 1\") == \"0.5\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('8') == '5.480'\nassert solution('5') == '5.480'"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''5 15\n5 5 5 5 5\n''') == '2'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 20\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''5 10\n1 3 4 2 1 4 2\n''') == '2'\n\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '1'\n\nassert solution('''5 100\n9 9 9 9 9\n''') == '-1'"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == \"4\"\nassert solution('7 10') == \"2\"\nassert solution('5 16') == \"-1\"\nassert solution('5 26') == \"1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"2 3 1 1 2\\n\"\n) == \"4\"\nassert solution(\n    \"5 16\\n\"\n    \"5 5 5 5 5\\n\"\n) == \"2\"\nassert solution(\n    \"5 26\\n\"\n    \"5 5 5 5 5\\n\"\n) == \"1\"\nassert solution(\n    \"5 10\\n\"\n    \"4 4 4 4 4\\n\"\n) == \"2\"\n\n\"\"\"\n\n\nfrom collections import deque\nimport sys"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 15\") == \"2\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution(\n'''\n5 10\n5 5 5 5 5\n''') == '2'\nassert solution(\n'''\n5 16\n5 5 5 5 5\n''') == '2'\nassert solution(\n'''\n5 26\n5 5 5 5 5\n''') == '-1'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"1 2 3\"\nassert solution(input_data) == \"1 1\"\nassert solution(input_data) == \"2 3\""
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 3\"\nassert solution() == \"7 3 1 3\"\nassert solution() == \"1 1\""
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1 2 3'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1\n''') == '1 1'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 2\\n\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"1 1 1 3 3 1 3\\n1 1 1 2 3 2 1 3\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n''') == '1 2'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '1 1'\n\ns = list(map(int, stdin.split()))\nk = int(stdin.split()[1])\na = []\nfor i in range(k):\n    a.append(int(input()))\na.sort(reverse=True)\nt = []\nfor i in range(k):\n    if (i+1) % k == 0:\n        t.append(a[i])\n    else:\n        t.append(a[i] + a[i+1])\nprint(*t)\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2 3\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"0\"\nassert solution(\"2 4\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"9 9\\n\"\n    \"10 8\\n\"\n    \"5 3\\n\"\n    \"4 3\\n\"\n) == \"5\"\nassert solution(\n    \"6 1\\n\"\n    \"3\\n\"\n    \"6\\n\"\n    \"2\\n\"\n    \"5\\n\"\n    \"1\\n\"\n    \"4\\n\"\n) == \"3\"\nassert solution(\n    \"6 1\\n\"\n    \"3\\n\"\n    \"6\\n\"\n    \"2\\n\"\n    \"5\\n\"\n    \"1\\n\"\n    \"4\\n\"\n) == \"0\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4\n1 2 3 4\n10 8\n5 3\n4 3''') == '3'\nassert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '0'\nassert solution('6 1') == '3'\nassert solution('2 4') == '5'\nassert solution('6 1') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"4 2\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"10\\n\") == \"8\"\nassert solution(\"10\\n\") == \"8\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '0'\nassert solution('3') == '1'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"123\") == 3\nassert solution(\"1112\") == 2\nassert solution(\"111222\") == 3\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nxxxxx\nxxxx\n''') == '0'\nassert solution('''\nxxxxxxxx\nxxxxxxx\n''') == '4'\nassert solution('''\nxxxxxxxxx\nxxxxx\nx\n''') == '0'\nassert solution('''\nxxx\nxx\nx\n''') == '1'\nassert solution('''\nx\nxx\nx\n''') == '3'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\n\nassert solution(\"5\") == \"0\"\n\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"xxxiii\") == \"1\", \"First\"\nassert solution(\"xxoxx\") == \"0\", \"Second\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxoxxx\") == \"7\"\nassert solution(\"xxxiii\") == \"0\""
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nxxxiii''') == '1'\nassert solution('''5\nxxoxx''') == '0'\nassert solution('''10\nxxxxxxxxxx''') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '48'\nassert solution('10') == '64'\nassert solution('7') == '65'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '48'\nassert solution('5') == '-5'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == \"48\"\nassert solution('5') == \"13.5\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"8\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"48\"\n\nThe number of test cases is 1.\"\"\""
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '48'\nassert solution('1') == '1'\n\n-------Hints-------\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '48'\nassert solution('10') == '32760'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"16\"\nassert solution(\"5\") == \"45\"\nassert solution
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '48'\nassert solution('10') == '6576'\nassert solution('5') == '48'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 5]) == \"unsafe\"\nassert solution([1, 2, 3, 4, 5]) == \"unsafe\"\nassert solution([1, 2, 3, 4, 5]) == \"safe\"\nassert solution([1, 2, 3, 4, 5, 6]) == \"unsafe\"\nassert solution([2, 3, 4, 5, 6, 7]) == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'unsafe'\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"unsafe\"\nassert solution(\"1 2\") == \"safe\"\nassert solution(\"1 3\") == \"unsafe\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'unsafe'\nassert solution(input()) =='safe'\n\"\"\"\n\nimport sys\nfrom typing import Dict, List\n\nS, W = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == 'unsafe'\n\nassert solution('1 1') =='safe'\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"unsafe\"\nassert solution(\"7 5\") == \"safe\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == 'unsafe'\nassert solution('''1 2''') == 'unsafe'\nassert solution('''5 2''') =='safe'\nassert solution('''2 1''') =='safe'\nassert solution('''3 5''') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 5]) == \"unsafe\"\nassert solution([1, 5]) == \"safe\"\nassert solution([4, 1]) == \"unsafe\""
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''|AB| |BC| |CA|\n|1| |2| |3|''') == '6'\n\nprint(solution('''|AB| |BC| |CA|\n|1| |2| |3|'''))"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 5''') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 4\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"4 5 3\") == \"10\"\nassert solution(\"7 8 9\") == \"22\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('3 4 5') == '12'\n\nfrom math import sqrt"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('5 10 10') == '50'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 11 4\\n\") == \"4\"\nassert solution(\"2 2 3\\n\") == \"2\"\nassert solution(\"100 5 100\\n\") == \"50\"\nassert solution(\"7 5 8\\n\") == \"17\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['2', '11', '4']) == '4'\nassert solution(['1', '2', '3']) == '3'\nassert solution(['3', '4', '4']) == '3'\nassert solution(['1', '1', '1']) == '1'\nassert solution(['0', '2', '2']) == '2'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('20 10 10') == '20'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"100 5 2\") == \"100\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('4 2 3') == '5'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('1 2 3') == '4'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 10\") == \"100\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"100 200\") == \"500\""
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10', 'Should be 10'\nassert solution('100 5') == '50', 'Should be 50'\nassert solution('1 2') == '2', 'Should be 2'\nassert solution('1 2 3') == '3', 'Should be 3'\nassert solution('1 2 3 4') == '4', 'Should be 4'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 10') == '10'\nassert solution('1 2') == '2'\nassert solution('1 2.5') == '2.5'\nassert solution('1.5 2') == '2.5'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'None'\nassert solution(\"\") == 'None'\nassert solution(\"3\") == '3'\nassert solution(\"12\") == '12'\nassert solution(\"2 3\") == '6'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('10 2') == '10'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '10'\nassert solution('2 5') == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\""
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"5 1 1\") == \"1\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5 7''') == '10'\nassert solution('''3 5 7''') == '10'\nassert solution('''5 5 5 5 5 5''') == '10'\n\nprint('All tests passed!')"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"10\"\nassert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 0.5 1\") == \"2\"\nassert solution(\"2.3 1 1\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nA B T\n1 3 5\n\"\"\") == \"10\"\nassert solution(\"\"\"\nA B T\n1 3 5\n\"\"\") == \"10\"\nassert solution(\"\"\"\nA B T\n1 3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\nA B T\n3 4 7\n\"\"\") == \"10\"\nassert solution(\"\"\"\nA B T\n1 3 5\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\""
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 5 6\") == \"1\"\nassert solution(\"3 10\") == \"8\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 7') == '10', 'First'\nassert solution('2 7 8') == '17', 'Second'\nassert solution('5 10 7') == '10', 'Third'\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 10 10\") == \"100\"\nassert solution(\"5 10 10\") == \"95\"\nassert solution(\"10 10 10\") == \"90\""
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 2 5\") == \"9\"\n\n\"\"\"\n\nA, B, T = map(int, input().split())\nprint(A * (B + 1) * (T + 0.5))\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"NG\"\nassert solution(\"5\") == \"OK\"\nassert solution(\"2\") == \"NG\"\nassert solution(\"3\") == \"OK\"\nassert solution(\"0\") == \"NG\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"8\\n10000 10000\") == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"NG\"\nassert solution(\"7\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7') == 'OK'\nassert solution('1 2') == 'NG'"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'OK'"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'OK'\nassert solution('5') == 'NG'\nassert solution('1') == 'OK'\nassert solution('7') == 'NG'\nassert solution('4') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"7\") == \"NG\"\nassert solution(\"7\") == \"NG\"\nassert solution(\"7\") == \"OK\"\nassert solution(\"7\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == 'OK'\nassert solution('567') == 'OK'\nassert solution('500 600') == 'NG'\nassert solution('1') == 'NG'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"7\") == \"NG\"\nassert solution(\"7\") == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NG\"\nassert solution(\"3\\n1 2\") == \"OK\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2.6666666667'\nassert solution('5 2') == '2.6666666667'\nassert solution('5 0') == '1.3333333333'\nassert solution('0 5') == '1.3333333333'\nassert solution('5 10') == '2.0000000001'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"2.5\"\nassert solution(\"8 1\") == \"7.25\"\nassert solution(\"7 2\") == \"3.5\"\nassert solution(\"4 0\") == \"4.0\"\nassert solution(\"0 0\") == \"0.0\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1.5'\nassert solution('1\\n3') == '2'\nassert solution('2\\n2') == '2.0'\nassert solution('2\\n3') == '2.333'\nassert solution('3\\n2') == '2.0'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"50 100\") == \"1.3333333333\"\nassert solution(\"0 1\") == \"1.0\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n''') == '2.66666667'\nassert solution('''8 3\n''') == '2.666666667'\nassert solution('''8 2\n''') == '2.99999999'"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '2.0'\nassert solution('5\\n2') == '2.0'\nassert solution('100\\n3') == '3.0'\nassert solution('100\\n6') == '5.5'\nassert solution('3\\n2') == '0.5'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0.0\"\nassert solution(\"3 3\") == \"2.0\"\nassert solution(\"8 3\") == \"2.717\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2.6667'\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"4 5\") == \"1.5\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '2.6666666667'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 4 10\") == \"3\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3\\n\") == \"1\""
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([6, 4, 3]) == '1'\nassert solution([5, 4, 1]) == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\n\n(Note: For a larger set of test cases, check https://app.codesignal.com/interview-practice/task/yZuEfiTQIqLZ2FQHU)\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 4 6') == '5'\nassert solution('1 4 5') == '4'\nassert solution('1 4 5 3') == '4'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 4 3') == \"1\"\nassert solution('2 0 5') == \"4\"\nassert solution('10 3 3') == \"10\"\nassert solution('10 0 5') == \"0\"\nassert solution('10 2 2') == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(6,4,3) == \"1\"\nassert solution(5,4,2) == \"2\"\nassert solution(9,4,3) == \"2\"\nassert solution(9,8,4) == \"0\"\nassert solution(20,20,20) == \"0\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2\n3 1 2\n''') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 1 2\n3 1 2\n''') == '3'\nassert solution('''\n8\n2 1 3 4 5 6 7 8\n2 1 3 4 5 6 7 8\n''') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '1'"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 4') == '1'"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 3 2\n3 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 3 2\n3 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 3 2 4\n3 1 2 4\n2 3 1 4\n4 3 1 2\n\"\"\") == \"6\"\n\nprint(solution(input()))"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n\nprint(solution(input()))"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"\"\nassert solution(\"AC\") == \"AC\"\nassert solution(\"GCG\") == \"GC\"\nassert solution(\"GACG\") == \"AC\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"AT\"\nassert solution(\"ATCODER\") == \"TC\"\nassert solution(\"ATCODER\") == \"AC\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"AC\") == \"AC\"\nassert solution(\"ACD\") == \"AC\"\nassert solution(\"ACG\") == \"AC\"\nassert solution(\"TTTT\") == \"TT\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"ATC\", \"Should be 'ATC'!\"\nassert solution(\"ATCODER\") == \"TC\", \"Should be 'TC'!\"\nassert solution(\"ATCODER\") == \"A\", \"Should be 'A'!\"\nassert solution(\"ATCODER\") == \"\", \"Should be ''!\"\nassert solution(\"\") == \"\", \"Should be ''!\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input(\"\")) == \"\"\nassert solution(input
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATCOQDRS') == 'ATCO'\nassert solution('ATCODER') == 'ATC'"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"ATC\", \"Your solution is not correct\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"2\"\nassert solution(\"10\") == \"9\"\nassert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(11) == '9'\nassert solution(1) == '1'\nassert solution(10) == '9'\n\n\"\"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '9'\nassert solution('11') == '9'\nassert solution('-1') == '10'\nassert solution('100') == '100'\nassert solution('10') == '10'\n'''"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"9\"\nassert solution(\"10\") == \"19\"\nassert solution(\"13\") == \"29\"\nassert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''cupofcoffee\ncupofhottea''') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''cupofcoffee\ncupofhottea''') == '4'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\nIn Python, we can execute the below line of code to write the above function.\n\n>>> def solution(S, T):\n    pass\n>>> solution(\"cupofcoffee\", \"cupofhottea\")\n'cupofhottea'\n>>> solution(\"cupofhottea\", \"cupofcoffee\")\n'cupofcoffee'\n\n'''"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 1\") == \"1 2 3 4 5\"\nassert solution(\"10 1\") == \"10 1 2 3 4 5 6 7 8 9\"\nassert solution(\"10 1\") == \"10 1 2 3 4 5 6 7 8 9\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1') == ''\n\nsolution = solution\n'''"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 6 7 8 9'\n) == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 3\") == \"4 5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7') == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 7\n5 6 7 8 9''') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_lines(\\\"inputs/input_test_01.txt\\\", None)) == \"1 2 3 4 5 6 7 8 9\"\nassert solution(input_lines(\\\"inputs/input_test_02.txt\\\", None)) == \"0 1 2 3 4 5 6 7 8 9\"\nassert solution(input_lines(\\\"inputs/input_test_03.txt\\\", None)) == \"0 2 4 6 8 10 12 14 16 18\"\n\"\"\"\n\nfrom functools import reduce\nfrom itertools import permutations, combinations\nimport math\nfrom collections import Counter, defaultdict\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('100') == 'Yes'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Yes'\nassert solution('20') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"-5\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('-40') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Yes'\nassert solution('-10') == 'No'\nassert solution('40') == 'Yes'\nassert solution('2') == 'No'\nassert solution('5') == 'Yes'"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'No'\nassert solution('40') == 'Yes'\nassert solution('15') == 'Yes'\nassert solution('20') == 'Yes'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('6 6') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 4') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('2 -2') == '0'"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '1'\nassert solution('''\n3 2\n1 2\n5 5\n1 -2\n''') == '0'\nassert solution('''\n3 2\n1 2\n5 5\n1 5\n''') == '0'\nassert solution('''\n3 2\n1 2\n5 5\n-1 -2\n''') == '2'\nassert solution('''\n3 2\n1 2\n5 5\n2 -2\n''') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 3') == '9'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"3 3\") == \"2\"\n\n\"\"\"\n\nimport math\n\nn, d = map(int, input().split())\nx = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    key = tuple(x[i:i+d])\n    d[key] = True\n\nans = 0\nfor i in range(n-d+1):\n    for j in range(i+1, n):\n        key = tuple(x[i:i+d])\n        value = tuple(x[j:j+d])\n        if math.sqrt((x[i] - x[j])**2) in range(math.ceil(min(key)), max(key) + 1) and math.sqrt((x[i] - x[j])**2) not in d:\n            ans += 1\n            d[key] = True\n\nprint(ans)\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3,2], ['1 2', '5 5', '-2 8']) == '1'\nassert solution([2,3], ['1 2', '5 5', '-2 8']) == '0'\n\nprint(solution(sys.stdin.read().split()))\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == '1'\nassert solution(s2) == '1'\n\"\"\"\n\n\nfrom math import sqrt\nfrom collections import Counter\n\nn, d = [int(x) for x in input().split()]\n\npoints = [list(map(int, input().split())) for _ in range(n)]\n\npoints = sorted(points, key=lambda x: (x[1], x[2]))\n\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        x1, y1, z1 = points[i]\n        x2, y2, z2 = points[j]\n        d = sqrt((y1 - z1) ** 2 + (y2 - z2) ** 2 + (y1 - z2) ** 2)\n        if d.is_integer():\n            count += 1\n\nprint(count)\n\n\n\"\"\"\nThe number of pairs (i, j) (i < j) such that the distance between the i-th point and the j-th point is an integer\nis the number of pairs (i, j) such that there exists k such that X_{ik} \\neq X_{jk}.\n\nIn other words, there are (N-1)(N-1) pairs whose distance is an integer, where N is the number of points.\n\nIn the above example, there are 3 pairs whose distance is an integer, namely:\n - (i = 0, j = 1)\n - (i = 0, j = 2)\n - (i = 1, j = 2)\n\nHere, X_{ik} \\neq X_{jk} means that X_{i} and X_{j} have different coordinates.\n\nGiven N, D, and an array X of N D-dimensional coordinates, write a function:\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\nassert solution('4950') == 'Bad'\nassert solution('9000') == 'Good'\nassert solution('12345') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad', 'Should be \"Bad\"'\nassert solution('7373') == 'Good', 'Should be \"Good\"'\nassert solution('7377') == 'Bad', 'Should be \"Bad\"'\nassert solution('7379') == 'Good', 'Should be \"Good\"'\nassert solution('7575') == 'Bad', 'Should be \"Bad\"'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Bad\"\nassert solution(\"a2b3c\") == \"Bad\"\nassert solution(\"6378\") == \"Bad\"\nassert solution(\"8288\") == \"Good\"\nassert solution(\"8289\") == \"Bad\"\n\n---\n\n## Solution\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Bad\", \"Should return 'Bad'\"\nassert solution(\"3535\") == \"Bad\", \"Should return 'Bad'\"\nassert solution(\"\") == \"Good\", \"Should return 'Good'\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3772') == 'Good'\nassert solution('3773') == 'Bad'\nassert solution('2332') == 'Bad'\nassert solution('32') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"5511\") == \"Good\""
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3768') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == None, \"Test 1 Failed\"\nassert solution(\"3776\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"1122\") == \"Bad\""
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Good\"\nassert solution(\"25\") == \"Good\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '3.5'\nassert solution('4') == '3.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"3.0\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1.0000\"\nassert solution(\"2\") == \"1.5000\"\nassert solution(\"3\") == \"2.2500\"\nassert solution(\"4\") == \"2.7500\"\nassert solution(\"5\") == \"3.2500\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3.5'\nprint(solution('2'))\nprint(solution('3'))\nprint(solution('4'))\nprint(solution('5'))\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '3.5'\nassert solution('4') == '3.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"2\\n4 4\") == \"3.0\"\nassert solution(\"2\\n4 6\") == \"2.666666666666666\"\nassert solution(\"2\\n4 4\") == \"3.0\"\nassert solution(\"2\\n4 6\") == \"4.0\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '1.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"3.50001\"\nassert solution(\"4\") == \"3.900001\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3 4\n''') == '3.5'\nassert solution('''2\n10 20\n''') == '5.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '3.5'\nassert solution('2') == '4.0'\nassert solution('1') == '4.0'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12') == '17'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == '14'\nassert solution('4\\n3 1 5\\n4 2 4\\n3 6\\n') == '18'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n2 5 4\\n3 6\") == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3\n2 3\n3 4\n''') == \"14\"\nassert solution('''\n5\n1 1 1 2\n2 2\n3\n4\n''') == \"14\"\nassert solution('''\n1\n1 1\n''') == \"2\"\nassert solution('''\n3\n5 1 1\n3\n4\n''') == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9''') == '14'\nassert solution('''5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9''') == '13'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"2\""
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('7 2 1\\n10 4 3\\n8 1 2\\n2 5 4\\n3 6') == '11'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14\n15 16 17 18\n19 20\n''') == '59'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14\n15 16 17 18\n19 20\n''') == '74'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 2') == '14'\nassert solution('2 5 4') == '18'\nassert solution('3 6') == '18'\nprint(solution(input()))"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n5\n2 1 4 6 3\n3 5 6 7 8\n4 8 7 9 10\n3 1 5 8 9 10\n2 2 4 5 8 9\n''') == '28'\nassert solution('''\n5\n3 1 5 6 3\n2 3 4 6 2\n3 1 5 7 3\n2 2 4 5 7\n3 3 6 8 3\n''') == '6'\nassert solution('''\n5\n2 1 5 6 3\n3 2 5 7 3\n4 2 6 7 9\n3 3 6 8 3\n2 3 4 5 8\n''') == '6'\nassert solution('''\n6\n2 1 5 3 6 2\n3 2 4 5 7 3\n4 2 6 7 9 8\n3 3 6 8 9 10\n2 2 4 6 7 9\n3 3 5 7 9 10\n''') == '6'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nZABCDBABCQ') == '2'\nassert solution('5\\nBACB') == '2'\nassert solution('7\\nABCD') == '0'\nassert solution('9\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == '1'"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nZABCDBABCQ\") == \"2\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '2'\nassert solution('ZABCDBABCQ') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\nZABCDBABCQ\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"4\"\nassert solution(\"\"\"\n50\n\"\"\") == \"0\""
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '2'\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ABC') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nHZXKZPXM\") == \"2\"\nassert solution(\"10\\nDXXJLXHB\") == \"3\"\nassert solution(\"100\\nRKHXRLKHW\") == \"5\"\nassert solution(\"10\\nRKHXRLKHW\") == \"6\"\nassert solution(\"10\\nRKHXRLKHW\") == \"7\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ZABCDBABCQ\") == 2\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ZABCDBABCQ\") == \"2\""
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == '2'\nassert solution(\"ZABCDBABCQ\") == '2'\nassert solution(\"\") == ''\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ABCB') == '2'\nassert solution('ABCDEF') == '6'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 2\n'''\nimport math"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\nimport sys\nimport collections\nfrom typing import Dict, List\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nMASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI\\n') == '2'\n\n'''\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('5 5') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"6 6\") == \"No\"\nassert solution(\"15 4\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 1') == 'No'\nassert solution('1 2 2') == 'Yes'\n\nTest Case 2\n\nInput\n\nInput is given from Standard Input in the following format:\n4 5\n\nOutput\n\nPrint Yes if Takahashi's submission gets an AC; otherwise, print No.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n - 0 \\leq M \\leq N\n - All values in input are integers.\n\n-----Input-----\n4 5\n\n-----Output-----\nYes\n\nAll three test cases have been passed, so his submission gets an AC.\n\nTest Case 3\n\nInput\n\nInput is given from Standard Input in the following format:\n10 10\n\nOutput\n\nPrint No if Takahashi's submission gets an AC; otherwise, print Yes.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n - 0 \\leq M \\leq N\n - All values in input are integers.\n\n-----Input-----\n10 10\n\n-----Output-----\nNo\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Yes'"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./SampleTestCases/AXC001_SOLUTIONS/AXC001_Takahashi_ExpectedOutput/AXC001_Takahashi_ExpectedOutput_ExpectedOutput.txt\") == \"Yes\"\nassert solution(\"./SampleTestCases/AXC001_SOLUTIONS/AXC001_Takahashi_ExpectedOutput/AXC001_Takahashi_ExpectedOutput_ExpectedOutput2.txt\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"5 3\") == \"Yes\", \"Test 2 failed\"\nassert solution(\"10 3\") == \"No\", \"Test 3 failed\"\nassert solution(\"6 2\") == \"No\", \"Test 4 failed\"\nprint(solution(input(\"Enter a test case: \")))\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'Yes', 'Test 1 Failed'\nassert solution('3 1') == 'No', 'Test 2 Failed'\nassert solution('5 5') == 'Yes', 'Test 3 Failed'\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\", \"Test 1 Failed\"\nassert solution(\"1 3\") == \"No\", \"Test 2 Failed\"\nassert solution(\"5 3\") == \"Yes\", \"Test 3 Failed\"\nassert solution(\"5 2\") == \"No\", \"Test 4 Failed\"\nassert solution(\"6 3\") == \"No\", \"Test 5 Failed\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('ab') == 'No'\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n\nassert solution(\"xxx\") == \"No\"\n\nassert solution(\"xxxx\") == \"No\"\n\nassert solution(\"xz\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('sippuu') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"abcdefghij\") == \"No\"\nassert solution(\"adc\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippus\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sssddd\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"s\") == \"No\"\nassert solution(\"\") == \"No\"\n'''\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n\n======="
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 60\\n1 80\\n4 50') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50') == '7'\nassert solution('3 100\\n10 50\\n1 50\\n4 50') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\nassert solution('''5 6\n7 2\n1 4\n8 7\n9 8\n10 9\n''') == '9'\nassert solution('''4 20\n1 2\n2 3\n2 4\n1 3\n3 4\n''') == '20'\nassert solution('''4 7\n1 2\n2 3\n2 4\n1 3\n3 4\n''') == '20'\nassert solution('''5 3\n1 2\n2 3\n3 4\n4 5\n''') == '20'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\n\n---\n\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution('3 70') == '4'\nassert solution('3 1') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '4'\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('4 50') == '50'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'TLE'\nassert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n3 5\n1 2''') == '4'\nassert solution('''2 3\n5 5\n2 5''') == 'TLE'\nassert solution('''1 1\n5 5\n1 5''') == 'TLE'\nassert solution('''3 3\n4 6\n1 2''') == '4'\nassert solution('''4 4\n6 7\n1 2''') == '6'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'TLE'\nassert solution('2') == 'TLE'\nassert solution('3') == 'TLE'\nassert solution('4') == 'TLE'\nassert solution('5') == 'TLE'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '8'\nassert solution(input) == '8'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2 9''') == '8'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"2 2 2\") == \"4 4 4\"\nassert solution(\"5 3 2\") == \"8 6 6\"\nassert solution(\"5 3 2\") == \"8 6 6\"\nassert solution(\"10 4 5\") == \"15 10 10\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('10 10 5') == '15'\nassert solution('7 8 6') == '10'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"1 10 100\") == \"10\""
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4,2,9]) == '8'\nassert solution([5,5,8]) == '16'\nassert solution([1,1,1]) == '0'\nassert solution([100,100,100]) == '0'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n''') == '6'\nassert solution('''\n2 2 2\n''') == '6'\nassert solution('''\n3 3 1\n''') == '1'\nassert solution('''\n6 7 9\n''') == '10'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2\") == \"5\"\nassert solution(\"10 10 4\") == \"10\"\nassert solution(\"20 20 50\") == \"60\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 4\") == \"12\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\n\ninput_lines = stdin.split('\\n')\ninput_lines = [input_lines[i].strip() for i in range(0, len(input_lines))]\nprint(input_lines)"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == '1'\nassert solution(\"2\\nabcdefghijklmnopqrstuvwxyz\\nabcdefg\\nabcdefgh\\n\") == '2'"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('5\\ncoaen\\ntnast\\nbon\\nconstraint') == '0'\nassert solution('10\\nAcemanistnt\\nPeanutbomb\\nConstraint\\n') == '0'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\", \"Expected 1\"\nassert solution(\"2\") == \"1\", \"Expected 1\"\nassert solution(\"3\") == \"2\", \"Expected 2\"\nassert solution(\"5\") == \"11\", \"Expected 11\"\nassert solution(\"10\") == \"101\", \"Expected 101\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"12\") == \"0\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n20\n38\n56\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n20\\n38\\n56') == '2'\nassert solution('4\\n2132\\n506\\n999999999\\n1000000000') == '8'"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\") == \"1\"\nassert solution(\"4\\n2\") == \"2\"\nassert solution(\"3\\n20\") == \"5\"\nassert solution(\"2\\n506\") == \"9\"\nassert solution(\"1\\n100\") == \"8\""
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n20\n38\n56''') == '2'\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n\nassert solution('5') == '5'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1\\n2\\n3\") == \"1\"\nassert solution(\"4\\n1\\n20\\n38\\n56\") == \"2\"\nassert solution(\"4\\n2\\n20\\n38\\n56\") == \"8\""
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == \"1\"\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == \"8\"\nassert solution('''2\n20\n38\n56''') == \"9\"\nassert solution('''1\n506''') == \"8\""
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2 1 1 2'\nassert solution() == '3 2 1 1 2'\nassert solution() == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1''') == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''10 2\n1 4\n3 5\n1 2\n2 3\n1 5\n2 6\n2 7\n3 8\n3 9''') == '3'\nassert solution('''30 2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 11\n30 21\n30 31\n30 32\n30 33\n30 34\n30 35\n30 36\n30 37\n30 38\n30 39\n30 40\n30 41\n30 42\n30 43\n30 44\n30 45\n30 46\n30 47\n30 48\n30 49\n30 50\n30 51\n30 52\n30 53\n30 54\n30 55\n30 56\n30 57\n30 58\n30 59\n30 60\n30 61\n30 62\n30 63\n30 64\n30 65\n30 66\n30 67\n30 68\n30 69\n30 70\n30 71\n30 72\n30 73\n30 74\n30 75\n30 76\n30 77\n30 78\n30 79\n30 80\n30 81\n30 82\n30 83\n30 84\n30 85\n30 86\n30 87\n30 88\n30 89\n30 90\n30 91\n30 92\n30 93\n30 94\n30 95\n30 96\n30 97\n30 98\n30 99\n30 100''') == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 2\n3 1\n1 4\n1 2\n4 3\n3 5\n3 6\n5 2\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n\"\"\") == \"3\""
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 2\\n\"\n    \"3 1\\n\"\n    \"1 4\\n\"\n    \"4 3\\n\"\n    \"3 5\\n\"\n    \"3 6\\n\"\n    \"5 2\"\n    ) == \"2\"\nassert solution(\n    \"10 2\\n\"\n    \"10 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"2 7\\n\"\n    \"3 8\\n\"\n    \"3 9\\n\"\n    ) == \"3\""
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"1 2 1\"\nassert solution(\"4 2\") == \"1 2 1 1 2\"\nassert solution(\"6 2\") == \"1 2 1 1 1 1\"\nassert solution(\"10 2\") == \"1 2 1 1 1 1 1 1 1 1 2\"\nassert solution(\"10 10\") == \"1 1 1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '6 2\\n'\n    '1 4\\n'\n    '4 3\\n'\n    '3 5\\n'\n    '3 6\\n'\n    '5 2'\n    ) == '2'\n\nassert solution(\n    '10 2\\n'\n    '3 1\\n'\n    '1 4\\n'\n    '1 2\\n'\n    '2 5\\n'\n    '2 6\\n'\n    '2 7\\n'\n    '3 8\\n'\n    '3 9\\n'\n    ) == '3'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 1, 2, 4]) == '2 4'\nassert solution([9, 1, 8, 8, 8, 4, 4, 4, 4]) == '3 8'\nassert solution([7, 4, 3, 1, 4, 3, 3]) == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\nassert solution(\"\") == \"\"\nassert solution(\"7\\n1 1 8 8 8 4 4 4 4\") == \"3 8\""
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 1 1 1 1\"\nassert solution(\"4\") == \"2 2 2 2\"\nassert solution(\"7\") == \"3 6\"\nassert solution(\"9\") == \"3 8\"\nassert solution(\"11\") == \"8 8\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\n\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '3 6'\nassert solution('9') == '3 8'\nassert solution('1') == '2 4'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 4 4\n\n''') == '2 4'\nassert solution('''\n7\n4 3 7 1 4 3 3\n\n''') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2 4\"\nassert solution(\"3\") == \"3 6\"\nassert solution(\"7\") == \"3 6\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n1 2 4 4\n\n''') == '2 4'\n\nassert solution('''7\n4 3 7 1 4 3 3\n\n''') == '3 6'\n\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n\n''') == '3 8'\n\nassert solution('''11\n4 3 7 1 4 3 3 4 4 4\n\n''') == '4 8'\n\nassert solution('''19\n2 3 5 8 1 4 3 3 4 5 4 6 7 8 9 1 4 5 6 7 9 10 11 7 12 13 15 16 17 19\n\n''') == '17 18'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('5') == '3 2 1 5'\nassert solution('3') == '3 2 1 5'\nassert solution('5') == '3 2 1 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2\") == \"1 2\\n3 1\"\nassert solution(\"5 1\\n1 2\\n3 4\\n4 5\\n2 1\") == \"1 1\\n1 2\\n3 4\\n4 5\"\nassert solution(\"5 5\\n2 1\\n1 2\\n3 4\\n4 5\\n1 5\") == \"1 1\\n2 1\\n3 4\\n4 5\\n5 1\""
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('3') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 2 1 5'\nassert solution('3') == '3 1 2'\nassert solution('5') == '3 2 1 5'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3 4\n4 1\n3 2\n\n''') == '1 2 3 4'\nassert solution('''\n5\n3 4\n4 1\n2 4\n3 1\n1 2\n\n''') == '1 2 3 4 5'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('1') == '1 2 3'\nassert solution('3') == '3 2 1'\nassert solution('2 3') == '2 3 1'\nassert solution('1 2 3') == '1 2 3'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"3\") == \"3 2 4 1 5\"\nassert solution(\"2\") == \"3 2 4 1 5\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3 2 4 1 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2\\n3') == '1 1 1 1'\nassert solution('1\\n2\\n3') == '3 1 2'\nassert solution('1\\n3\\n2') == '3 2 1'\nassert solution('2\\n3\\n1') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1 2 3 4 5\", \"One line\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 10 17 12 15 2''') == \"3\"\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == \"1\"\nassert solution('''6\n1 1000 10000 10 100 1000000000\n''') == \"1\""
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(6) == 3\nassert solution(10) == 10\nassert solution(6) == 1\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    6\n    1 1000 10000 10 100 1000000000\n    ''') == '1'\nassert solution('''\n    10\n    1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n    ''') == '10'\nassert solution('''\n    6\n    1 1000 10000 10 100 1000000000\n    ''') == '1'\nassert solution('''\n    6\n    1 1000 10000 10 100 1000000000\n    ''') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6'\n) == '3'\n\nassert solution(\n    '10'\n) == '1'\n\nassert solution(\n    '6'\n) == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"3\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10 17 12 15 2') == '3'\nassert solution('6') == '1'\nassert solution('10') == '10'"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10 17 12 15 2') == '3'\nassert solution('6') == '1'\nassert solution('10') == '10'\nassert solution('6') == '1'\nassert solution
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''6\n1 1000 10000 10 100 1000000000\n''') == '1'\n\"\"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n6\n1 10 17 12 15 2\n''') == 3\nassert solution(\n'''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == 1\nassert solution(\n'''\n6\n1 1000 10000 10 100 1000000000\n''') == 1\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '4'\nassert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '-1'\n\n'''"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n5\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n15 5 3 2') == '4'\nassert solution('2\\n15 5 4 3') == '5'\nassert solution('3\\n15 5 2 1') == '-1'\nassert solution('4\\n15 5 5 1') == '0'\nassert solution('5\\n15 5 7 3') == '2'"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"4\"\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"-1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution('''\n2\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '5'\nassert solution('''\n10\n5 10 5 2\n5 10 3 2\n5 10 3 3\n5 10 3 4\n5 10 3 5\n5 10 3 6\n5 10 3 7\n5 10 3 8\n5 10 3 9\n5 10 3 10\n5 10 3 11\n5 10 3 12\n5 10 3 13\n5 10 3 14\n5 10 3 15\n5 10 3 16\n5 10 3 17\n5 10 3 18\n5 10 3 19\n5 10 3 20\n5 10 3 21\n5 10 3 22\n5 10 3 23\n5 10 3 24\n5 10 3 25\n5 10 3 26\n5 10 3 27\n5 10 3 28\n5 10 3 29\n5 10 3 30\n5 10 3 31\n5 10 3 32\n5 10 3 33\n5 10 3 34\n5 10 3 35\n5 10 3 36\n5 10 3 37\n5 10 3 38\n5 10 3 39\n5 10 3 40\n5 10 3 41\n5 10 3 42\n5 10 3 43\n5 10 3 44\n5 10 3 45\n5 10 3 46\n5 10 3 47\n5 10 3 48\n5 10 3 49\n5 10 3 50\n5 10 3 51\n5 10 3 52\n5 10 3 53\n5 10 3 54\n5 10 3 55\n5 10 3 56\n5 10 3 57\n5 10 3 58\n5 10 3 59\n5 10 3 60\n5 10 3 61\n5 10 3 62\n5 10 3 63\n5 10 3 64\n5 10 3 65\n5 10 3 66\n5 10 3 67\n5 10 3 68\n5 10 3 69\n5 10 3 70\n5 10 3 71\n5 10 3 72\n5 10 3 73\n5 10 3 74\n5 10 3 75\n5 10 3 76\n5 10 3 77\n5 10 3 78\n5 10 3 79\n5 10 3 80\n5 10 3 81\n5 10 3 82\n5 10 3 83\n5 10 3 84\n5 10 3 85\n5 10 3 86\n5 10 3 87\n5 10 3 88\n5 10 3 89\n5 10 3 90\n5 10 3 91\n5 10 3 92\n5 10 3 93\n5 10 3 94\n5 10 3 95\n5 10 3 96\n5 10 3 97\n5 10 3 98\n5 10 3 99\n5 10 3 100\n5 10 3 101\n5 10 3 102\n5 10 3 103\n5 10 3 104\n5 10 3 105\n5 10 3 106\n5 10 3 107\n5 10 3 108\n5 10 3 109\n5 10 3 110\n5 10 3 111\n5 10 3 112\n5 10 3 113\n5 10 3 114\n5 10 3 115\n5 10 3 116\n5 10 3 117\n5 10 3 118\n5 10 3 119\n5 10 3 120\n5 10 3 121\n5 10 3 122\n5 10 3 123\n5 10 3 124\n5 10 3 125\n5 10 3 126\n5 10 3 127\n5 10 3 128\n5 10 3 129\n5 10 3 130\n5 10 3 131\n5 10 3 132\n5 10 3 133\n5 10 3 134\n5 10 3 135\n5 10 3 136\n5 10 3 137\n5 10 3 138\n5 10 3 139\n5 10 3 140\n5 10 3 141\n5 10 3 142\n5 10 3 143\n5 10 3 144\n5 10 3 145\n5 10 3 146\n5 10 3 147\n5 10 3 148\n5 10 3 149\n5 10 3 150\n5 10 3 151\n5 10 3 152\n5 10 3 153\n5 10 3 154\n5 10 3 155\n5 10 3 156\n5 10 3 157\n5 10 3 158\n5 10 3 159\n5 10 3 160\n5 10 3 161\n5 10 3 162\n5 10 3 163\n5 10 3 164\n5 10 3 165\n5 10 3 166\n5 10 3 167\n5 10 3 168\n5 10 3 169\n5 10 3 170\n5 10 3 171\n5 10 3 172\n5 10 3 173\n5 10 3 174\n5 10 3 175\n5 10 3 176\n5 10 3 177\n5 10 3 178\n5 10 3 179\n5 10 3 180\n5 10 3 181\n5 10 3 182\n5 10 3 183\n5 10 3 184\n5 10 3 185\n5 10 3 186\n5 10 3 187\n5 10 3 188\n5 10 3 189\n5 10 3 190\n5 10 3 191\n5 10 3 192\n5 10 3 193\n5 10 3 194\n5 10 3 195\n5 10 3 196\n5 10 3 197\n5 10 3 198\n5 10 3 199\n5 10 3 200\n5 10 3 201\n5 10 3 202\n5 10 3 203\n5 10 3 204\n5 10 3 205\n5 10 3 206\n5 10 3 207\n5 10 3 208\n5 10 3 209\n5 10 3 210\n5 10 3 211\n5 10 3 212\n5 10 3 213\n5 10 3 214\n5 10 3 215\n5 10 3 216\n5 10 3 217\n5 10 3 218\n5 10 3 219\n5 10 3 220\n5 10 3 221\n5 10 3 222\n5 10 3 223\n5 10 3 224\n5 10 3 225\n5 10 3 226\n5 10 3 227\n5 10 3 228\n5 10 3 229\n5 10 3 230\n5 10 3 231\n5 10 3 232\n5 10 3 233\n5 10 3 234\n5 10 3 235\n5 10 3 236\n5 10 3 237\n5 10 3 238\n5 10 3 239\n5 10 3 240\n5 10 3 241\n5 10 3 242\n5 10 3 243\n5 10 3 244\n5 10 3 245\n5 10 3 246\n5 10 3 247\n5 10 3 248\n5 10 3 249\n5 10 3 250\n5 10 3 251\n5 10 3 252\n5 10 3 253\n5 10 3 254\n5 10 3 255\n5 10 3 256\n5 10 3 257\n5 10 3 258\n5"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n''') == '1'\n\nassert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '3'\n\nassert solution('''\n2\n4 5 3 1\n3 2 1 1\n''') == '-1'\n\nassert solution('''\n2\n2 1 1 1\n2 1 1 1\n''') == '0'\n\nassert solution('''\n2\n2 1 1 1\n2 1 1 1\n''') == '0'"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2') == '4'\nassert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n???????\n''') == '0'\nassert solution('''3\nac?b?c\n''') == '24'\nassert solution('''9\ncccbbbaaa\n''') == '2835'\nassert solution('''5\na???c\n''') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(6) == \"24\"\nassert solution(7) == \"2835\"\nassert solution(9) == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n???????\n\nOutput\n2835\n\nInput\n5\na???c\n\nOutput\n46\n''') == '0'"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '24'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\nac?b?c''') == '24'\nassert solution('''7\n???????''') == '2835'\nassert solution('''5\na???c''') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"24\"\nprint(solution(solution.__doc__))"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"29\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '0'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\""
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1 3 3\\n\"\n    \"2 3 5\\n\"\n    \"2 1 1\\n\"\n    ) == \"5\"\n\nassert solution(\n    \"4 0\\n\"\n    \"1 3 3 7\\n\"\n    ) == \"16\"\n\nassert solution(\n    \"5 4\\n\"\n    \"1 2 3 4 5\\n\"\n    \"1 2 8\\n\"\n    \"1 3 10\\n\"\n    \"1 4 7\\n\"\n    \"1 5 15\\n\"\n    ) == \"18\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n\"\"\"\nimport heapq\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"16\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n\n'''\nimport heapq"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n'''\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\") == '5'\nassert solution(\"4 0\\n1 3 3 7\\n2 1 1\\n2 3 10\\n2 4 7\\n2 5 15\\n\") == '18'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 2 2\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 2 2\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\n\n\n\n\n2. Input:\n\n6 3 4\n2 4\n7 7\n1 5\n2 5\n8 5\n1 5\n\nOutput:\n\n7\n\n3. Input:\n\n3 3 3\n1 1\n1 1\n\nOutput:\n\n4\n\n'''"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '14'\nassert solution(input()) == '-1'\nassert solution(input()) == '45'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'\nassert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == '-1'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == \"14\"\nassert solution('''10 1 1\n0 9\n0 5\n''') == \"45\"\nassert solution('''5 1 1\n0 9\n1 5\n''') == \"-1\"\nassert solution('''10 1 1\n0 9\n1 5\n''') == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\""
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 1 1\n0 9\n0 5\n''') == \"45\"\nassert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == \"14\"\nassert solution('''10 1 1\n0 9\n1 5\n''') == \"-1\"\nassert solution('''10 1 1\n0 9\n1 5\n''') == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '14'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == \"Yes\", \"Wrong!\"\nassert solution('5 7 5') == \"Yes\", \"Wrong!\"\nassert solution('5 7 5') == \"Yes\", \"Wrong!\"\n\"\"\""
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 5') == 'No'\nassert solution('3 4 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == 'Yes', 'Sample Test Failed'\nassert solution('2 1 1') == 'No', 'Sample Test Failed'\nassert solution('3 1 5') == 'Yes', 'Sample Test Failed'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\n\"\"\""
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\""
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 4\") == \"Yes\"\nassert solution(\"2 2 2\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"4 2 3\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input('A B C\\n')) == 'No'\nassert solution(input('5 7 5\\n')) == 'Yes'\nassert solution(input('10 0 10\\n')) == 'No'\nassert solution(input('13 12 11\\n')) == 'Yes'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\n\"\"\"\nimport math"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 5\n4 8\n4 7\n''') == '1'\nassert solution('''\n4\n2 6\n4 7\n4 8\n4 7\n''') == '2'\n'''\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n1000 2000') == '1'\nassert solution('3\\n2\\n-10 -20 30') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '3'\n\"\"\"\n\nN, A = list(map(int, input().split()))\nH = list(map(int, input().split()))"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"12 5\") == \"1\"\nassert solution(\"1000 2000\") == \"1\""
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 2 3 4''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('1 5') == '1'\nassert solution('4 2') == '0'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n''') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\nACACTACG') == '2'\nassert solution('10 5\\nCAAATTGGTCCACTACG') == '3'\nassert solution('10 6\\nACACTACG') == '0'\nassert solution('5 6\\nCAAATTGGTCCACTACG') == '3'\nassert solution('10 5\\nACACTACG') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\nAC\") == \"2\"\nassert solution(\"5 10\\nACABBACCDBCABBD\") == \"6\"\nassert solution(\"5 10\\nAAAABBBCCCCDDDD\") == \"4\"\nassert solution(\"5 10\\nAAAABBBCCCCDDDD\") == \"4\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"0\"\nassert solution(\"5 6\") == \"3\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '0'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '3'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '-1'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8 3\nACACTACG\n3 7\n2 3\"\"\") == \"2\"\n\nassert solution(\"\"\"8 3\nACACTACG\n3 7\n1 8\"\"\") == \"3\"\n\nassert solution(\"\"\"8 3\nACACTACG\n4 5\n2 5\"\"\") == \"1\"\n\nassert solution(\"\"\"8 3\nACACTACG\n5 6\n5 6\"\"\") == \"0\"\n\nassert solution(\"\"\"8 3\nACACTACG\n1 0\n1 1\"\"\") == \"3\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('8 3') == '2'\nassert solution('8 4') == '3'\nassert solution('10 20') == '8'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\nACACTACG\n3 7\n2 3\n1 8\n\n''') == '2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\"\nassert solution(\"2\\n1 3\\n3 5\\n\") == \"3\"\nassert solution(\"5\\n1 3\\n2 3\\n3 5\\n4 5\\n\") == \"1\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"3\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3,2]) == \"210\"\nassert solution([5,5]) == \"210\"\nassert solution([5,6]) == \"220\"\nassert solution([5,6,5]) == \"220\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"7 2\") == \"210\"\nassert solution(\"10 3\") == \"210\"\nassert solution(\"3 10\") == \"210\"\nassert solution(\"2 2\") == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n30 50 80 120 80\\n\") == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 3\") == \"6\"\nassert solution(\"1 2 3\") == \"8\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\nassert solution('''5 4\n100 120 60 80 50\n''') == '250'\nassert solution('''5 5\n50 100 80 120 80\n''') == '100'\nassert solution('''5 6\n100 120 60 80 50\n''') == '110'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\", \"1st example\"\nassert solution(\"2\") == \"0\", \"2nd example\"\nassert solution(\"4\") == \"0\", \"3rd example\"\nassert solution(\"5\") == \"50\", \"4th example\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n50 100 80 120 80''') == '210'\n\"\"\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"50 100 80 120 80\"\n) == \"210\"\nassert solution(\n    \"15 9\\n\"\n    \"35 49 99 100 99 100 98 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"210\"\n\nsolution()\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 3, 4]) == \"4\"\nassert solution([1, 2, 3]) == \"2\"\nassert solution([1, 1, 2]) == \"3\""
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\""
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 4 5\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 5 2\") == \"3\"\n\nprint(solution(input()))"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 5 9\") == \"8\"\nassert solution(\"1 8 12\") == \"20\"\nassert solution(\"1 4 10\") == \"13\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 2 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 5 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2 5\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 4 1') == '4'\nassert solution('3 4 5') == '7'\nassert solution('1 2 3') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"2 3 2\") == \"3\"\nassert solution(\"2 3 4\") == \"5\""
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 5 4\") == \"3\"\nassert solution(\"1 1 5\") == \"5\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 3 4') == '7'\nassert solution('3 1 2') == '8'\nassert solution('1 3 4') == '4'\n\n--\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\\n0\") == \"0\"\nassert solution(\"1\\n1\") == \"10\"\nassert solution(\"3\\n3\") == \"0\"\nassert solution(\"8\\n8\") == \"0\"\nassert solution(\"5\\n7\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'\nassert solution('0 5') == '10'\n\"\"\"\n\nn = int(stdin.readline())"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\", \"Should be 0\"\nassert solution(\"1 2\") == \"10\", \"Should be 10\"\nassert solution(\"2 1\") == \"0\", \"Should be 0\"\nassert solution(\"3 5\") == \"10\", \"Should be 10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 4') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\n\"\"\"\n\nx, y = map(int, input().split())"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('10 5') == '10'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(X, A) == 10\n\"\"\""
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"4 5\") == \"10\""
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1', 'Sample test 1 failed'\nassert solution('12 3') == '1', 'Sample test 2 failed'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n\") == \"1\"\nassert solution(\"6 4\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4') == '1'\nassert solution('7 4') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4') == '1'\nassert solution('8 9') == '8'\nassert solution('-3 -3') == '2'\nassert solution('-1 1') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"10 9\") == \"9\"\nassert solution(\"20 19\") == \"19\"\nassert solution(\"10 0\") == \"10\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 4\n''') == '1', 'First'\nassert solution('''12 -4\n''') == '3', 'Second'\nassert solution('''7 4\n''') == '1', 'Third'\nassert solution('''12 -4\n''') == '3', 'Fourth'\nassert solution('''8 -3\n''') == '3', 'Fifth'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('7\\n4') == '1'\nassert solution('7\\n7') == '0'\nassert solution('0\\n0') == '0'\nassert solution('0\\n1') == '1'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('3 3 9') == 'bust'\nassert solution('5 8 6') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 8 10\") == \"bust\"\nassert solution(\"5 7 9\") == \"win\"\nprint(solution(input()))\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"7 7 7\") == \"bust\"\n\n\"\"\"\n\nA_1, A_2, A_3 = map(int, input().split())"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"1 2 3 4\") == \"win\"\nassert solution(\"2 2 2\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"3 4 6\") == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9\\n') == 'win'\nassert solution('4 5 2\\n') == 'bust'\nassert solution('3 2 7\\n') == 'win'\nassert solution('5 1 2\\n') == 'win'"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 7 9\n5+7+9=21, so print win.''') == 'win'\nassert solution('''3 2 6\n3+2+6=9, so print win.''') == 'win'\nassert solution('''3 3 4\n3+3+4=7, so print win.''') == 'win'\nassert solution('''3 1 3\n3+1+3=4, so print win.''') == 'win'\nassert solution('''6 7 7\n6+7+7=10, so print win.''') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == \"win\"\nassert solution('5 6 9') == \"win\"\nassert solution('5 5 9') == \"win\"\nassert solution('5 5 6') == \"win\"\nassert solution('5 5 5') == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6'\nassert solution('5') == '5'\nassert solution('8') == '8'\nassert solution('6') == '6'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '10'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '5'\nassert solution('7') == '6'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '2'\nassert solution('10') == '2'\nassert solution('15') == '5'\nassert solution('20') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('15') == '18'\nassert solution('8') == '8'"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"100\") == \"101\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('7') == '6'\n\nassert solution('15') == '12'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '2'\nassert solution('8 10') == '3'\nassert solution('4 1') == '1'\nassert solution('8 3') == '0'\n'''"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input) == \"2\"\nassert solution(input) == \"2\""
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '2'\nassert solution('1 2') == '1'\nassert solution('3 5') == '1'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 4') == '1'\nassert solution('6 2') == '2'\nassert solution('10 10') == '2'\nassert solution('4 8') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 2') == '2'\nassert solution('10 4') == '3'\nassert solution('10 8') == '4'\nassert solution('15 12') == '5'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '1'\nassert solution('5 6') == '2'\nassert solution('20 20') == '3'\nassert solution('10 30') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n\n-------------------------------\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''16\n3\n10\n3\n12\n4''') == 'bon'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"bon\"\nassert solution(\"16\") == \"pon\"\nassert solution(\"200\") == \"bon\"\nassert solution(\"1000\") == \"pon\"\nassert solution(\"2000\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'hon'\nassert solution('1') == 'hon'\nassert solution('101') == 'pon'\nassert solution('10') == 'hon'\n\nfrom collections import deque\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == \"pon\"\nassert solution('24') == \"bon\"\nassert solution('96') == \"bon\"\nassert solution('141') == \"pon\"\nassert solution('172') == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"hon\"\nassert solution(\"5\") == \"pon\"\nassert solution(\"6\") == \"bon\"\nassert solution(\"7\") == \"bon\"\nassert solution(\"10\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"hon\"\nassert solution(\"5\") == \"bon\"\nassert solution(\"10\") == \"pon\"\nassert solution(\"16\") == \"pon\"\nassert solution(\"20\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16') == 'pon'\nassert solution('21') == 'pon'\nassert solution('22') == 'bon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"25\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\n\na, b = input().split()\na, b = int(a), int(b)"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\n\n---Output---\n4.13\n\nYou should submit your program on at least 3 conditions:\n1) Your program includes at least one import statement;\n2) Your program includes at least one function definition;\n3) Your program includes at least one main function.\n\n\"\"\""
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 1 1 1\n\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5\n3 2 1 3 2\n\n\"\"\") == \"24\"\nassert solution(\"\"\"\n4\n1 1 1 2\n\n\"\"\") == \"20\"\nassert solution(\"\"\"\n3\n1 1 1\n\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '11'\nassert solution('3') == '18'\nassert solution('4') == '27'\nassert solution('5') == '37'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"6\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '11'\nassert solution('''1\n10''') == '10'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 2\n''') == '11'\nassert solution('''\n4\n6 10 3 8 5 2\n''') == '25'\nassert solution('''\n10\n20 1 2 3 5 10 20 2 2 1 2 5 20 5 1 3\n''') == '55'\nassert solution('''\n10\n6 9 5 2 2 1 2 2 2\n''') == '15'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3 1 2\") == \"11\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"3\") == \"11\"\nassert solution(\"3\") == \"11\""
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"20\"\nassert solution
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"15\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 2, 1, 4, 3]) == \"4 3 2 1\""
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n1\n4\n3\"\"\") == \"4 3\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('12') == '12'"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4 3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4 3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4 3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4 3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4 3\"\n\n-----\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"5\\n1\\n5\\n5\\n5\\n5\") == \"5\\n5\\n5\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n2\\n3\\n4\") == \"3\\n4\\n4\"\nassert solution(\"100\\n4\\n4\\n4\") == \"4\\n4\\n4\"\nassert solution(\"1\\n4\\n4\\n4\") == \"4\\n4\\n4\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '4'\nassert solution('5') == '4'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4', \"Sample Case 1\"\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '5\\n5\\n5\\n5\\n5', \"Sample Case 2\"\nassert solution('6\\n1\\n2\\n3\\n4\\n5\\n6') == '6\\n6\\n6\\n6\\n6', \"Sample Case 3\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"5\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1, 4, 3]) == '4\\n3\\n4', solution([3, 1, 4, 3])\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"9 9\") == \"10\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 5\") == \"12\"\nassert solution(\"3 1\") == \"3\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '9'\nassert solution('20 30') == '30'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"9\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"4 3\") == \"10\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"5 3\", \"5 3\"]) == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 10\") == \"1\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 3\") == \"6\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"10 20\") == \"31\"\nassert solution(\"1000000000 1000000000\") == \"1000000000000001\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"5 1\") == \"4\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 3]) == \"40\"\nassert solution([5, 4]) == \"50\"\nassert solution([5, 2]) == \"5\"\nassert solution([5, 1]) == \"5\"\nassert solution([6, 6]) == \"6\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '40'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"3 3\") == \"30\"\nassert solution(\"2 3\") == \"20\"\nassert solution(\"4 3\") == \"40\"\nassert solution(\"5 2\") == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '40'\nassert solution('4 6') == '40'\nassert solution('6 5') == '50'\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"40\"\nassert solution(\"5 2\") == \"40\"\nassert solution(\"1 2\") == \"1\"\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '40'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('1 3') == '4'\nassert solution('2 4') == '1'"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 3]) == \"40\"\nassert solution([1, 2, 5, 6, 7]) == \"55\"\nassert solution([1, 2, 5, 7, 7]) == \"52\"\nassert solution([1, 2, 5, 7, 8]) == \"54\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 13\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n') == '1'\nassert solution('7\\n4\\n') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([8, 13]) == '2'\n\"\"\"\n\n\"\"\"\nThe code below solves the problem by using a dictionary which is the key is the height of the tower and the value is the number of the tower, if not exist.\nIt also has the for loop that iterates from 1 to 999, checking for the value of the dictionary by the height of the tower.\nIt then starts from the second tower with the second tower being the key.\nIt checks if there is a value of the key, if there is, then it prints the result, otherwise it adds the key and the value.\n\"\"\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n8 13\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n5 3\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n9999 99\n\"\"\") == \"9999\"\n\nassert solution(\n\"\"\"\n500 500\n\"\"\") == \"500\""
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 13') == '2'\nassert solution('7 9') == '2'\nassert solution('8 9') == '2'\nassert solution('8 9') == '2'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"10 5\") == \"6\"\nassert solution(\"12 4\") == \"10\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"10 5 2\") == \"5\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '10 4'\n    ) == '3'"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"6 5\") == \"2\"\n\"\"\"\n\nimport sys\nfrom math import gcd\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '3'\nassert solution('10 4') == '2'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"10 4\\n\"\n    ) == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 5') == '2'\nassert solution('10 6') == '1'\nassert solution('10 7') == '0'\nassert solution('10 8') == '1'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('10 4') == '3'\nassert solution('10 5') == '4'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n\") == \"3\"\nassert solution(\"1 2\\n\") == \"2\"\nassert solution(\"1 2 3\\n\") == \"4\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n\") == \"3\"\nassert solution(\"1 2\\n\") == \"1\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"10 15 20 25\") == \"20\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 100 100\") == \"50\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == '50'\nassert solution(\"0 0 0 0\") == '0'\nassert solution(\"0 0 0 0 1\") == '0'\nassert solution(\"3 2 3 4\") == '6'\nassert solution(\"3 2 3 3\") == '0'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == '50'\nassert solution(\"1 0 0 100\") == '1'"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('1 4 12 100') == '55'"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '50'\nassert solution('1 0 1 0') == '50'\nassert solution('1 0 1 1') == '50'\nassert solution('0 1 1 1') == '50'\nassert solution('0 0 1 1') == '50'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 100') == '100'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 75 25 100''') == '50'\nassert solution('''1 1 1 1''') == '1'\nassert solution('''5 0 0 0''') == '5'\nassert solution('''-1 1 1 1''') == '0'\nassert solution('''7 2 2 2''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('105') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('105') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"105\") == \"4\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"3\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('105') == '1'\nassert solution('200') == '929'"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"4\\n\") == \"3\\n\"\nassert solution(\"5\\n\") == \"4\\n\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n\"\"\""
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('200') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"11\") == \"\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3\n1\n1\n1\n1\n2\n2\n3''') == '1'\nassert solution('''10 2\n5\n2\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '7'"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n''') == '1'\nassert solution('''\n8 2\n''') == '5'\nassert solution('''\n7 3\n''') == '1'\nassert solution('''\n10 10\n''') == '0'\nassert solution('''\n12 10\n''') == '5'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3') == '1'"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n7 8\n''') == '2'\nassert solution('''100 5\n1 2 3 4 5\n''') == '45'\nassert solution('''9 1\n10 10\n''') == '1'\nassert solution('''10 1\n10 10\n''') == '1'\nassert solution('''1000 7\n99999 999\n''') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('7 3') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('7 3') == '1'\nassert solution('10 2') == '9'\nassert solution('100 2') == '99'\nassert solution('100 3') == '99'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('10 2') == '9'\nassert solution('10 5') == '2'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('111') == '111'\nassert solution('-1') == '-1'\nassert solution('1') == '1'"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"113\") == \"113\"\nassert solution(\"114\") == \"114\"\nassert solution(\"115\") == \"115\"\nassert solution(\"11\") == \"11\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\nassert solution('101') == '101'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('00') == '00'"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"110\") == \"110\"\nassert solution(\"101\") == \"111\"\nassert solution(\"001\") == \"110\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"12\"\nassert solution(\"111\") == \"111\""
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('111') == '111'\nassert solution('1111') == '1111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\nassert solution('11') == '11'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('110') == '110'\nassert solution('11') == '11'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 6 3''') == '5'\nassert solution('''3 2 1''') == '4'\nassert solution('''4 2 1''') == '3'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 4\") == \"3\"\nassert solution(\"2 1 3\") == \"3\"\nassert solution(\"2 2 2\") == \"2\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\n\n\"\"\""
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('10 10 10') == '0'\nassert solution('4 10 6') == '1'\n'''\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 4 5') == '0'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 6 3\n''') == '5'\nassert solution('''\n1 1 1\n''') == '3'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 6, 3]) == \"5\"\n\n\"\"\""
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 10 10\") == \"7\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 1 2') == '3'\nassert solution('3 1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('2 3 1') == '1'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6 3') == '5'"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('10') == '4'\nassert solution('0') == '1'\nassert solution('100') == '99'\nassert solution('101') == '100'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('8') == '5'\nassert solution('12') == '5'\nassert solution('14') == '7'\nassert solution('16') == '8'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n\"\"\""
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('8') == '5'"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('7') == '5'\nassert solution('8') == '5'\n\n---\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('8') == '5'\nassert solution('10') == '10'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 'No'\nassert solution('1 3 6 10') == 'Yes'\nassert solution('3 9 8 5') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"1 9 10 11\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"9 10 10 11\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 2\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 5 5\n''') == 'No'\nassert solution('''\n2 2 5 5\n''') == 'No'\nassert solution('''\n1 1 1 1\n''') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"2 3 4 5\") == \"Yes\"\n\n-14, 10, 2, -2\nprint(\"Yes\") if abs(2 - 2) > abs(2 + 2) else print(\"No\")"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''A B C D\n10 9 10 10''') == 'No'\nassert solution(\n'''A 5 8 5 9\n0 1 1 1 1''') == 'Yes'"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 4') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 9 10 10\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"No\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'No'\nassert solution('5 7 10 1') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n2\\n\") == \"1\\n1\\n1\\n\"\nassert solution(\"3\\n2\\n4\\n\") == \"2\\n2\\n2\\n\"\nassert solution(\"4\\n5\\n3\\n\") == \"3\\n3\\n3\\n\"\nassert solution(\"12\\n10\\n12\\n\") == \"10\\n10\\n12\\n\"\nassert solution(\"12\\n15\\n12\\n\") == \"15\\n15\\n15\\n\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\"\nassert solution(\"6\\n4 2 8\\n5 5 3\\n\") == \"7\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == \"5\"\n\nassert solution('''\n10\n2 5\n6 3 4\n''') == \"5\"\n\nassert solution('''\n2\n3 6\n5\n''') == \"0\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 2 5\n4 3 4\n\n\"\"\") == \"10\", \"wrong answer\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '5'\nassert solution('1') == '0'\nassert solution('2') == '0'"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n2\n0 0\n0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n#.##\") == \"###\\n###\\n.##\"\nassert solution(\"5 5\\n###.###\\n###.###\\n###.###\\n###.###\\n###.###\") == \"###.###\\n###.###\\n###.###\\n###.###\\n###.###\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n##.#\\n#...\\n##.#\\n#...\\n###\") == \"###\\n###\\n#..#\\n#..#\\n###\"\nassert solution(\"5 5\\n#.#.#\\n#.##\\n#.##\\n###\\n##.#\") == \"###\\n#.##\\n###\\n#.##\\n###\"\nassert solution(\"4 4\\n#...\\n#...\\n###\\n###\") == \"###\\n###\\n###\\n###\""
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n') == '###\\n###\\n.##\\n'\nassert solution('4 4\\n##.#\\n....\\n##.#\\n') == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"3 3\") == \"###\\n###\\n.##\\n\"\nassert solution(\"2 1\") == \"###\\n.##\\n\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"###\"\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n###.##\n##...#\n...#...\n...#...\n.##..###''') == '###'\nassert solution('''5 5\n###.##\n##...#\n...#...\n...#...\n.##..###''') == '###'\nassert solution('''10 10\n##########\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\""
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n#####\n...#.\n...#.\n#####''') == '###\\n###\\n.##\\n', 'Wrong solution for input \"\".'\nassert solution('''4 4\n#####\n...#.\n...#.\n#####''') == '###\\n###\\n.##\\n', 'Wrong solution for input \"\".'\nassert solution('''3 4\n#####\n...#.\n...#.\n#####''') == '###\\n###\\n.##\\n', 'Wrong solution for input \"\".'\nassert solution('''5 5\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"###\"\nassert solution(\"3\") == \"###\"\nassert solution(\"6\") == \"###\"\nassert solution(\"10\") == \"###\"\nassert solution(\"1000\") == \"###\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"8.555555555555557\"\nassert solution(\"2\") == \"16.774193548387097\"\nassert solution(\"3\") == \"24.242424242424242\"\nassert solution(\"4\") == \"28.461538461538462\"\nassert solution(\"5\") == \"32.414213562373095\"\n\"\"\"\n\nR = float(input())"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5.0\"\nassert solution(\"1\") == \"6.283185307179586\"\nassert solution(\"0\") == \"5.0\"\n\"\"\"\n\nr = int(input())\nimport math\nprint(round(math.pi*r*r, 2))\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"3\") == \"7.38905609893065\"\nassert solution(\"0\") == \"0\"\nassert solution(\"100\") == \"6.28318530717958623200\"\nassert solution(\"-1\") == \"0\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\n\"\"\""
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0.0'"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"1\") == \"6.28318530717958623200\"\n\"\"\""
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"1\") == \"6.28318530717958623200\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '6.28318530717958623200'\nassert solution('3\\n') == '7.14285714285714285714'\nassert solution('5\\n') == '12.566370614359172'\nassert solution('10\\n') == '78.389056603773516'\nassert solution('15\\n') == '98.0'\n\"\"\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == '6.28318530717958623200'\nassert solution('''\n1\n''') == '6.28'\n\"\"\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AA') == 'Yes'\nassert solution('AB') == 'Yes'\nassert solution('BA') == 'No'\nassert solution('AA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"SSA\") == \"No\"\nassert solution(\"SSS\") == \"Yes\"\nassert solution(\"SSSAA\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"Yes\"\nassert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AA\") == \"No\"\nassert solution(\"AASAA\") == \"No\"\nassert solution(\"ASA\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"ZZZZ\") == \"Yes\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ASSA') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '-10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2', 'First'\nassert solution('-1 2') == '1', 'Second'\nassert solution('-1 -2') == '-3', 'Third'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('1 2') == '1'\nassert solution('-3 -2') == '-5'\nassert solution('1 1') == '2'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"-10 -15\") == \"15\"\nassert solution(\"-13 3\") == \"10\"\nassert solution(\"-13 3\") == \"10\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"18\"\nassert solution(\"15 19\") == \"30\"\nassert solution(\"9 14\") == \"41\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '-10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\", \"First\"\nassert solution(\"-1 -2\") == \"1\", \"Second\"\nassert solution(\"3 5\") == \"14\", \"Third\"\nassert solution(\"-3 2\") == \"-5\", \"Fourth\"\nassert solution(\"3 -5\") == \"-8\", \"Fifth\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"-21 13\") == \"8\"\nassert solution(\"-21 1\") == \"0\"\nassert solution(\"-21 -13\") == \"16\"\nassert solution(\"-21 3\") == \"14\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n1 1 1 1 1\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"20\\n3 4 5 3 5\") == \"9\"\nassert solution(\"40\\n1 2 2 4 5 5 2\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('1\\n1 2 3') == '2'\nassert solution('1\\n-1 3') == '0'\n\n'''\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"7\"\nassert solution(\"20\") == \"13\""
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n6 5 6 8\n''') == '3'\nassert solution('''\n10\n10 10 10 10 10 10 10 10 10\n''') == '5'\nassert solution('''\n20\n
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n6 5 6 8\n''') == '3'\n\nassert solution('''\n3\n2 3 4\n''') == '3'\n\nassert solution('''\n3\n3 5 4\n''') == '0'\n\nassert solution('''\n6\n5 5 2 6 7 4 5\n''') == '3'\n\nassert solution('''\n6\n6 5 5 5 6 5\n''') == '1'"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"3\", 'test_1'\nassert solution(\"5\") == \"4\", 'test_2'\nassert solution(\"6\") == \"3\", 'test_3'\nassert solution(\"7\") == \"3\", 'test_4'\nassert solution(\"8\") == \"2\", 'test_5'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '2\\n3 4'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2 3 4\"\n) == \"1 3\"\nassert solution(\n    \"3\\n\"\n    \"2 1 2\"\n) == \"2 1 1\"\nassert solution(\n    \"5\\n\"\n    \"1 1 1 1 1\"\n) == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 1 2 1\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4'\nassert solution(\n    '4\\n1 1 1 1\\n') == '4\\n1 1 1 1'\nassert solution(\n    '5\\n1 2 1 2 1\\n') == '1\\n5'\nassert solution(\n    '5\\n1 2 1 2 1\\n') == '3\\n2 2 1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '7\\n'\n    '1 2 3 1 2 3 4\\n'\n) == '2\\n'\n\nassert solution(\n    '4\\n'\n    '1 1 1 1\\n'\n) == '4\\n'\n\nassert solution(\n    '5\\n'\n    '1 2 1 2 1\\n'\n) == '3\\n2 2 1\\nInput'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2 3 1 2 3 4\\n\"\n) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"1 1 1 1\\n\"\n) == \"4\"\n\nassert solution(\n    \"5\\n\"\n    \"1 2 1 2 1\\n\"\n) == \"3\""
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1 2 3 4 5'\nassert solution(input) == '1 2 1 2 1'"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n1\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n10\n\"\"\") == \"1\""
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '1'\nassert solution() == '7'\nassert solution() == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n7\n21\n999999999\n999999984\n''') == '1'\nassert solution('''6\n3\n7\n28\n999999999\n999999984\n''') == '7'\nassert solution('''3\n2\n1\n7\n''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\n\nassert solution('''\n2\n3\n1\n2\n''') == '1'\n\nassert solution('''\n1\n6\n7\n21\n28\n999999999\n999999984\n''') == '7'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n2\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n7\n3\n2\n1\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n7\n3\n2\n1\n4\n333333333\n333333328\n''') == '7'\nassert solution('''\n7\n3\n2\n1\n4\n333333333\n333333328\n''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n7\\n999999999\") == \"1\\n2\\n1\"\nassert solution(\"2\\n4\\n28\\n999999984\") == \"1\\n2\\n1\"\nassert solution(\"2\\n3\\n5\\n999999999\") == \"1\\n2\\n1\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"21\") == \"7\"\nassert solution(\"28\") == \"4\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '1'\nassert solution('''\n7\n''') == '1'\nassert solution('''\n21\n''') == '7'\nassert solution('''\n28\n''') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''2\n3\n6\n7\n21\n28\n999999999\n999999984''') == '2'\nassert solution('''3\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''4\n3\n6\n7\n21\n28\n999999999\n999999984''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n3\n4\n7\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n4\n2\n1\n2\n3\n1\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n8\n5\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_value) == output_value"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000000 9\") == \"1\"\nassert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"50\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4\\n') == '50'\nassert solution('1000000000 9\\n') == '1'\n\n'''\n\nfrom functools import reduce\nfrom operator import mul\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000000000 9') == '1'\nassert solution('512 4') == '50'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"50\"\n\nassert solution(input(\"\")) == \"50\"\n\n'''\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '2\\n1 2 3 2 1 2 2'\nassert solution('5') == '4 5 1 5 3 4'\nassert solution('3') == '2 5 1 5'"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('2') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"7\"\nassert solution(\"6\") == \"5\"\nassert solution(\"3 1 3 3 1 3 1 2\") == \"2\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"5\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 3 5 1 2 2 1\\n\") == \"5 2 1 1 2 3\"\nassert solution(\"7\\n3 7 5 1 5\\n\") == \"2 5 5 5 5\"\nassert solution(\"3\\n2 3 4 2 3\\n\") == \"2 2 4 4\"\nassert solution(\"5\\n2 1 5 1 2 2\\n\") == \"5 1 2 1 2 2\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n3\n5 1 4\n''') == '4'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\n\"\n    \"3 7 5 1 5\\n\") == \"5\\n\"\nassert solution(\n    \"6\\n\"\n    \"4 3 5 1 2 2 1\\n\") == \"6\\n\"\nassert solution(\n    \"6\\n\"\n    \"5 4 6 4 3 2 3\\n\") == \"6\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"5\"\nassert solution(\"5\") == \"4\"\nassert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('7') == '5 1 4'\nassert solution('5') == '4 5 \nassert solution('2') == '1 2'\nassert solution('8') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"4 12\") == \"3\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 11\") == \"2\"\nassert solution(\"16 16\") == \"16\"\nassert solution(\"16 1\") == \"16\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n\n''') == '2'\n\nassert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n\n''') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 16\\n\"\n    \"10 8\\n\"\n    \"7 4\\n\"\n    \"3 1\\n\"\n    \"5 4\") == \"2\"\n\nassert solution(\n    \"4 21\\n\"\n    \"10 8\\n\"\n    \"7 4\\n\"\n    \"3 1\\n\"\n    \"5 4\") == \"-1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\nassert solution('4 12') == '3'\nassert solution('5 8') == '1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == \"2\"\n\n'''\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"1\"\nassert solution(\"3 9\") == \"-1\"\nassert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"qwerty\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"vvvvv\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'tleelte'\nassert solution('6 6 1') == 'qwerty'\nassert solution('6 6 1') == 'vvvvv'\nassert solution('6 6 1') == 'abcde'"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 3\") == \"tleelte\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\nassert solution('4 6 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'qwerty'\nassert solution('4 6 3\\n5 2 2\\n') == 'abcde'\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'tleelte'\nassert solution('5 2 2\\n1 1 1\\n1 1 1') == 'vvvvv'\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"5\\n2 2\\n3 2\\n5 2\\n\") == \"vbvf\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n\nassert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n\nassert solution('''\n3\n4 2 3\n4 2 3\n3 2 3\n''') == \"leet\"\n\nassert solution('''\n7\n6 1 1\n6 6 1\n5 2 2\n4 2 3\n3 2 3\n3 2 3\n3 2 3\n''') == \"qwerty\"\n\nassert solution('''\n8\n8 8 3\n8 8 3\n7 8 3\n6 6 3\n5 8 3\n4 8 3\n4 8 3\n''') == \"abcde\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"5 2 2\") == \"vvvv\"\nassert solution(\"6 6 1\") == \"abcde\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == \"tleelte\"\nassert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2''') == \"qwerty\"\nassert solution('''5\n7 5 3\n6 1 1\n6 6 1\n5 2 2''') == \"vvvvv\"\nassert solution('''3\n7 5 3\n6 1 1\n6 6 1''') == \"abcde\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4 6') == '6'\nassert solution('20 12 6') == '12'\nassert solution('20 3 6') == '9'\nassert solution('20 1 6') == '6'"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1\\n') == '1'\nassert solution('20 12 6\\n') == '12'"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"20\", \"12\", \"6\"]) == \"12\"\nassert solution([\"20\", \"12\", \"6\"]) == \"12\""
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 10\") == \"10\"\nassert solution(\"5 10 10\") == \"10\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2\") == \"1\", \"Should be 1\"\nassert solution(\"5 6 6\") == \"6\", \"Should be 6\"\nassert solution(\"10 10 10 10 10 10\") == \"10\", \"Should be 10\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('30 4 20') == '10'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('12 12 12') == '12'\nassert solution('5 100 100') == '32'\nassert solution('4 5 4') == '0'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 10 20') == '20'\nassert solution('10 10 10 10 10 10 10') == '10'\nassert solution('2 10 10 10 10 10 10') == '10'\nassert solution('100 100 100 100 100 100 100') == '100'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('1 100 5') == '10'\nassert solution('1 1000 5') == '15'\nassert solution('2 10 6') == '10'\nassert solution('2 50 9') == '100'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n''') == '2'\nassert solution('''2\n''') == '2'\n\n'''\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '2'"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2\\n3\\n1') == '3'\nassert solution('1\\n1\\n1\\n1') == '2'\nassert solution('4\\n4\\n4\\n4') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\nassert solution('5') == '3'\nassert solution('100') == '4'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n\n''') == '2'\nassert solution('''1\n\n''') == '1'\nassert solution('''2\n\n''') == '2'\nassert solution('''5\n\n''') == '2'\nassert solution('''100\n\n''') == '10'"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '2'"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '2'\n'''"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '2'\nassert solution('8') == '2'\nassert solution('11') == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '1'\nassert solution('1 10') == '10'"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"100 10\") == \"10\""
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 3 4 5\") == \"4\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '3'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 5') == '2'\nassert solution('5 2') == '2'\nassert solution('20 10') == '1'\nassert solution('30 10') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('3 2') == '3'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4 12\n'''\n) == '16', f\"actual: {solution(\n'''\n4 12\n''')}, expected: '16'\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2', \"First\"\nassert solution('2 3') == '1', \"Second\"\nassert solution('3 5') == '2', \"Third\"\nassert solution('2 6') == '4', \"Fourth\"\nassert solution('3 7') == '5', \"Fifth\"\n\n'''\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == print(input())\n\n##"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '4'\nassert solution('3 2') == '5'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 10\") == \"19\""
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"10 2\") == \"8\"\nassert solution(\"30 20\") == \"20\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 1') == '2'\nassert solution('0 1') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 12') == '16', solution('4 12')\nassert solution('5 20') == '15', solution('5 20')\nassert solution('7 4') == '9', solution('7 4')\nassert solution('10 16') == '18', solution('10 16')\nassert solution('7 8') == '11', solution('7 8')\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 0'\nassert solution('2 1') == '0 1'\nassert solution('3 2') == '2 1'\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\nassert solution(\"qewr\") == \"No\"\n\n'''"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('chokudai') == 'Yes', 'Check your code'\nassert solution('chokudai') == 'Yes', 'Check your code'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n'''"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\", \"Wrong Answer\"\nassert solution(\"chokudaiz\") == \"Yes\", \"Wrong Answer\"\nassert solution(\"chokudai\")!= \"Yes\", \"Wrong Answer\"\n\"\"\"\nfrom typing import Any\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\n\n'''"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudiz') == 'No'\n'''\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('3 4') == '9'\nassert solution('4 3') == '9'\nassert solution('4 6') == 'IMPOSSIBLE'\n\n\"\"\""
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 4\") == \"9\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '9'\nassert solution('2 16') == '9'\nassert solution('10 5') == 'IMPOSSIBLE'\nassert solution('10 5') == 'IMPOSSIBLE'\nassert solution('10 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"9\""
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 4') == '5'\nassert solution('3 8') == '5'\nassert solution('1 100') == '100'\nassert solution('1 2') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('4 3') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('5 7') == '9'\nassert solution('8 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 16\n''') == '9'\nassert solution('''\n2 10\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['N']) == 'No'\nassert solution(['117']) == 'Yes'\nassert solution(['117N']) == 'Yes'\nassert solution(['117N1']) == 'No'\nassert solution(['117N3']) == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('123') == 'Yes'\nassert solution('12') == 'No'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"117\") == \"Yes\"\n\nassert solution(\"123\") == \"No\"\n\nassert solution(\"0\") == \"Yes\""
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'Yes'\nassert solution('0') == 'No'\nassert solution('11') == 'No'\nassert solution('123') == 'Yes'\nassert solution('1234') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"931\") == \"No\"\nassert solution(\"1\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"32\") == \"No\"\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == 'Yes'\nassert solution('8') == 'No'\nassert solution('0') == 'No'"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\nassert solution('27') == 'Yes'\nassert solution('28') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1234') == 'No'\n\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"1000\") == \"No\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(12) == 'Yes'\nassert solution(18) == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Yes'\nassert solution('32') == 'No'\nassert solution('101') == 'Yes'\nassert solution('11') == 'No'\nassert solution('1010') == 'Yes'"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"1000\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"-1 1 -1 0\") == \"0 0 0 1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([0,0,0,1]) == \"(0,0),(0,1),(-1,1),(-1,0)\", \"Example #1\"\nassert solution([0,0,0,1]) == \"(0,0),(0,1),(-1,1),(-1,0)\", \"Example #2\"\nassert solution([-1,-1,0,1]) == \"(-1,-1),(-1,0),(-1,1),(0,1)\", \"Example #3\"\nassert solution([-1,-1,1,1]) == \"(-1,-1),(0,-1),(0,1),(1,1)\", \"Example #4\"\nassert solution([-1,0,1,1]) == \"(-1,0),(0,1),(1,1),(1,0)\", \"Example #5\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0 1') == '(-1, 1 -1 0)'\nassert solution('0 0 0 1') == '(-1, 1 -1 0)'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\""
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1\\n') == '-1 1 -1 0'\nassert solution('0 0 0 1\\n') == '-1 1 -1 0'\nassert solution('0 0 0 1\\n') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"x_1 y_1 x_2 y_2\n1 1 -1 0\n0 0 -1 1\"\"\") == \"(0,1)(1,1)(-1,1)(-1,0) is the four vertices of a square in counter-clockwise order.\"\n\nassert solution(\"\"\"x_1 y_1 x_2 y_2\n1 1 -1 0\n0 0 1 1\"\"\") == \"(0,1)(1,1)(-1,1)(1,0) is the four vertices of a square in counter-clockwise order.\"\n\nassert solution(\"\"\"x_1 y_1 x_2 y_2\n1 1 -1 0\n0 0 1 1\"\"\") == \"(0,1)(1,1)(-1,1)(1,0) is the four vertices of a square in counter-clockwise order.\"\n\nassert solution(\"\"\"x_1 y_1 x_2 y_2\n1 1 -1 0\n0 0 1 1\"\"\") == \"(0,1)(1,1)(-1,1)(1,0) is the four vertices of a square in counter-clockwise order.\"\n\nassert solution(\"\"\"x_1 y_1 x_2 y_2\n1 1 -1 0\n0 0 1 1\"\"\") == \"(0,1)(1,1)(-1,1)(1,0) is the four vertices of a square in counter-clockwise order.\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\""
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('red blue') == '2 4'\n\nprint(solution('red blue'))\n\"\"\""
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('3 4') == '2 4'\nassert solution('3 2') == '2 2'\nassert solution('4 4') == '2 2'\nassert solution('5 5') == '0 0'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('red blue') == '2 4'\nprint(solution('red blue'))"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '1 4'\nassert solution('red blue') == '0 4'\nassert solution('red blue') == '0 4'"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nprint(solution(\"red blue\"))\nprint(solution(\"red\"))\nprint(solution(\"blue\"))\nprint(solution(\"blue blue\"))\nprint(solution(\"blue red\"))\nprint(solution(\"blue red\"))\n\n>>> "
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('1 1') == '1 1'\nassert solution('0 0') == '0 0'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red red') == '1 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nabcd\\n\") == \"Yes\"\nassert solution(\"5\\nabcde\\n\") == \"Yes\"\nassert solution(\"5\\nabcde\\n\") == \"No\"\nassert solution(\"9\\nabcdefg\\n\") == \"Yes\"\nassert solution(\"9\\nabcdefg\\n\") == \"No\""
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\"\n\nfrom itertools import combinations_with_replacement"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == 'Yes'\nassert solution('6\\n') == 'Yes'\nassert solution('10\\n') == 'No'"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\nabcabc\n''') == 'Yes'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '3.000000 0'"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '3.000000 0'\nassert solution('2 2 0 1') == '3.000000 1'\nassert solution('2 3 1 2') == '3.000000 1'\nassert solution('2 1 2 3') == '3.000000 2'\nassert solution('3 2 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 1 2 2\") == \"0\"\nassert solution(\"1 2 3 4\") == \"1\""
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 1 2\n1 1 1 2\n1 2 1 2\n2 1 1 2\n2 2 1 2\n''') == '2.000000 1'\nassert solution('''3 4 1 2\n3 4 1 2\n3 4 1 2\n4 3 1 2\n4 4 1 2\n''') == '1.000000 2'\nassert solution('''3 4 1 2\n2 4 1 2\n3 4 1 2\n2 4 1 2\n''') == '1.000000 2'\nassert solution('''3 4 1 2\n4 2 1 2\n3 4 1 2\n2 4 1 2\n''') == '2.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('0 0 0 0') == '1.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('5 5 1 1') == '2.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"10 2 7 3\") == \"10.000000 0\""
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '2.000000 0'\nassert solution('10 11 7 8') == '8.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nW G\nP Y\nW Y\nP G\nY W''') == 'Four'\nassert solution('''4\nP Y\nW Y\nP G\nY W''') == 'Three'\nassert solution('''2\nP\nP''') == 'Two'\nassert solution('''6\nG W\nP Y\nW Y\nP G\nY W\nP G''') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('9\\nY W G G G Y') == 'Three'\nassert solution('8\\nY G G G G G Y') == 'Four'\nassert solution('8\\nY G G G G G Y') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'Four'\nassert solution('1') == 'Three'\nassert solution('2') == 'Two'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'Four'\nassert solution('3') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('5\\nP P P P W W W W') == 'Three'\nassert solution('4\\nW W W W G Y Y') == 'Four'\nassert solution('5\\nP P P P P P P') == 'Three'\nassert solution('6\\nP P P P P P P') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Three\"\nassert solution(\"4\") == \"Four\"\nassert solution(\"10\") == \"Four\"\nassert solution(\"10\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Three\"\nassert solution(\"5\") == \"Four\"\nassert solution(\"8\") == \"Four\"\nassert solution(\"10\") == \"Four\"\nassert solution(\"12\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'Three'\nassert solution('6') == 'Four'"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6\nG W Y P Y W\n\"\"\") == \"Four\"\nassert solution(\"\"\"\n3\nP Y W G\n\"\"\") == \"Three\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 3') == '2'\nassert solution('6 3 2') == '6'\nassert solution('5 5 6') == '2'\nassert solution('3 3 5') == '0'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t) == \"2\"\nassert solution(tw) == \"3\"\nassert solution(tt) == \"4\"\nassert solution(ttt) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2\n''') == 6\n\nassert solution('''5 3 3\n1 2 4 2 3\n''') == 2\n\nassert solution('''5 5 6\n1 2 6 10 3\n''') == 2\n\nassert solution('''5 5 5\n1 2 5 2 3\n''') == 5\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('5 5 5') == '3'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5 6\n2 3 1 3 4 2''') == '2'\n\nassert solution('''5 3 3\n1 2 4 2 3\n''') == '6'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3\n\n''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3\n\n''') == '2'\nassert solution('''0 0 2\n1 2 3\n\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"7\"\nprint(solution(input))\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '7'\nassert solution('6') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3') == '7'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '7'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3') == '7'\nassert solution('10\\n1 1 2 1 3\\n2 1 3 1 4') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '7'\nassert solution('5') == '7'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string()) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example) == \"1 1 3 5 9\"\nassert solution(puzzle) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\""
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 4 5 10') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'\nassert solution('10000 10 50605065 1 5 89 5 999999999 60506056 1000000000') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 1 3 5 9\"\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 1 3 5 9'\n\n'''\nfrom itertools import permutations\nimport math\nfrom collections import deque"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 4 5 10') == '1 1 3 5 9'\nassert solution
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '1 1 3 5 9'\nassert solution('10\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''\n10\n''') == '1 1 3 5 9'\nassert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1 1 3 5 9\"\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 4 5 10') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == '1'\nassert solution(\"17 15\") == '2'\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n6) \u0414\u0430\u043d \u043e\u0434\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u041d\u0430\u0439\u0442\u0438 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0432\u043e\u0434\u0430\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0432\u0438\u0441\u0435\u0442\u044c \u043e\u0442 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\u041f\u0440\u0438 \u043f\u043e\u0438\u0441\u043a\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0435 \u0434\u0435\u043b\u044f\u0449\u0435\u0433\u043e\u0441\u044f \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u0434.\n\"\"\"\nfrom random import randint\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 2') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\nassert solution('10') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\n''')"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 0 0 1 2\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1 0 0 0 2\") == \"0\""
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '0'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\") == \"4\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\") == \"0\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3') == '0'\nprint('Congratulations! Your solutions pass the tests!')"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '2'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('8') == '3'\nassert solution('3') == '0'\nassert solution('2') == '1'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\naz\\nbf\\n\"\n) == \"bc\"\n\nassert solution(\n    \"5\\nafogk\\nasdji\\n\"\n) == \"alvuw\"\n\nassert solution(\n    \"6\\nnijfvj\\ntqvhwp\\n\"\n) == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\naz\nbf\n''') == 'bc'\n\nassert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\n\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2'\n    'az'\n    'bf'\n    ) == 'bc'\nassert solution(\n    '5'\n    'afogk'\n    'asdji'\n    ) == 'alvuw'\nassert solution(\n    '6'\n    'nijfvj'\n    'tvqhwp'\n    ) == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''\n2\naz\nbf\n''') == 'bc'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\naz\\nbf\\n') == 'bc'\nassert solution('2\\naz\\nbf\\n') == 'bc'\nassert solution('3\\naz\\nbf\\n') == 'bc'\nassert solution('4\\naz\\nbf\\n') == 'bc'\nassert solution('5\\naz\\nbf\\n') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nassert solution('''\n2\naz\nbf\n''') == 'bc'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"bc\", solution()\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'bc', solution()"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\naz\\nbf') == 'bc'\nassert solution('5\\nafogk\\nasdji') == 'alvuw'"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"bc\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('5 1') == 'NO'\nassert solution('4 1') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n\") == \"NO\"\nassert solution(\"4 4\\n\") == \"YES\\n1 2 3 4\"\n\n\nfrom collections import Counter"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n') == 'NO'\nassert solution('4 4\\n') == 'YES\\n1 2 3 4'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nprint(solution(input))"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5 3\\n' + \n    '15 13 15 15 12'\n    ) == 'YES\\n1 2 5\\n'\n\nassert solution(\n    '5 4\\n' + \n    '15 13 15 15 12'\n    ) == 'NO\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"YES\"\nassert solution(input_data_2) == \"NO\"\n\n'''\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES'\nassert solution('''4 4\n20 10 40 30''') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n''') == 'YES\\n1 2 5\\n'\n\nassert solution('''5 4\n20 10 40 30\n''') == 'NO\\n'\n\nassert solution('''4 4\n20 10 40 30\n''') == 'YES\\n1 2 3 4\\n'\n\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n''') == 'YES\\n1 2 3 4 5 6 7 8\\n'"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n''') == 'YES'\nassert solution('''1\n3\n''') == 'NO'\nassert solution('''3\n1 3 5\n''') == 'YES'\nassert solution('''1\n2 2\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0'\nassert solution('3\\n1 3 2 5') == 'NO'"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'YES'\nassert solution('''\n2\n0 0\n''') == 'NO'\n\nassert solution('''\n4\n1 2 3 4\n''') == 'NO'\n\nassert solution('''\n4\n1 2 3 4\n5 6 7 8\n''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4 1 2\") == \"NO\"\nassert solution(\"1 2 3 4 1 2\") == \"YES\""
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 8 2\") == \"YES\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 3 6 8 2 9 0 10') == 'YES', solution('5 1 3 6 8 2 9 0 10')\nassert solution('9 5 1 3 6 8 2 9 0 10') == 'NO', solution('9 5 1 3 6 8 2 9 0 10')"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"YES\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"3\\n0\\n1134\\n0\"\nprint(solution(input_string))\n\"\"\""
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000000 1 1 100000000000000000\") == \"1134\"\nassert solution(\"4\\n1000000000000 1 1 100000000000000000\\n1000000000 1 1 1000000000\\n100 51 51 51\\n1234 1 100 199\\n1000000000000 1 1 100000000000000000\") == \"0\""
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3'\nassert solution('4\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n') == '1134'\nassert solution('4\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000\\n') == '0'\n\n----------------------------------------------------\n8. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0447\u0430\u0441\u0442\u044c \u0447\u0438\u0441\u043b\u0430 $n$ \u043e\u0442 $1$ \u0434\u043e $10$.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0446\u0438\u0444\u0440\u0443 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u0441\u0430\u043c\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044f, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u044b\u0435.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u043e \u0432\u0441\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0443\u0441\u0442\u044b\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0439\u043b\u0430 input.txt \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f input.txt.\n\nn = 1, 2, 3, 4, 5, 6, 7, 8, 9\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n\n1\n3\n7\n9\n>>>\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0439\u043b\u0430 output.txt \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f input.txt.\n\nn = 1, 2, 3, 4, 5, 6, 7, 8, 9\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n\n1\n3\n7\n9\n>>>\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0439\u043b\u0430 input.txt \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f input.txt.\n\nn = 1, 2, 3, 4, 5, 6, 7, 8, 9\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n>>>\n\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0439\u043b\u0430 output.txt \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f input.txt.\n\nn = 1, 2, 3, 4, 5, 6, 7, 8, 9\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 2 1 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"2\\n4 2 1 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\nassert solution(\"3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\nassert solution(\"3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000001 1 1 100000000\n''') == '1134'\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000001 1 1 1000000000\n''') == '0'\nassert solution(\n'''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n100001000000001 1 1 1000000000\n''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\\n0\\n1134\\n0\""
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n8\n''') == '1260'\nassert solution('''\n20\n''') == '12164510040883200'\nassert solution('''\n42\n''') == '25750549713165810656390655446775747759670386056182786245530585888374558392013624843993654905636804980005640184513556824061578767549324672668567394936251864781097625447896505835864866352729010907459873252675178038247269417428437180889591388896286001396499410658380366054372407766882487454808643929698865376515471679428497795401946171867457132356182067816884870687956139548996913383623794515080247363891786882118271205162229181589258664407054999470480923684424092420331481564131218123688177769824837288104308717010764293385194380731716590527398221636379316894731458010613882376463879945852845189642632072492419423792884480656089432894924666656207775425022132414158312983496231031123004540909271400952088490557\n''') == '25750549713165810656390655446775747759670386056182786245530585888374558392013624843993654905636804980005640184513556824061578767549324672668567394936251864781097625447896505835864866352729010907459873252675178038247269417428437180889591388896286001396499410658380366054372407766882487454808643929698865376515471679428497795401946171867457132356182067816884870687956139548996913383623794515080247363891786882118271205162229181589258664407054999470480923684424092420331481564131218123688177769824837288104308717010764293385194380731716590527398221636379316894731458010613882376463879945852845189642632072492419423792884480656089432894924666656207775425022132414158312983496231031123004540909271400952088490557\n'''\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nassert solution('-2') == '0'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\""
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"20\") == \"12164510040883200\"\nassert solution(\"20\") == \"12164510040883200\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n\n''') == '1'\n\nassert solution('''\n4\n\n''') == '3'\n\nassert solution('''\n8\n\n''') == '1260'\n\nassert solution('''\n20\n\n''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"def\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 3\na\n\n5 2\nb\n\n4 5\nz\n\n1 1\n\"\"\") == \"\"\"c\n\n\"\"\"[:-1]\n\nassert solution(\n\"\"\"\n5 3\na\n\n5 2\nb\n\n4 5\nz\n\n1 1\n\"\"\") == \"\"\"c\n\n\"\"\"[:-1]\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"3 3\\ncccaabababaccbc\\n\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15 3') == 'ccbbabaccbc', 'First'\nassert solution('1 1') == '', 'Second'\nassert solution('11 11') == '', 'Third'\nassert solution('1 0') == '', 'Fourth'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '22', \"Should be '22'\"\nassert solution('1 1') == '1', \"Should be '1'\"\nassert solution('5 3') == '52', \"Should be '52'\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\nu\n''') == 'ud', 'Should remove the first character of the string'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\naaabbbcc''') == 'aaabbc'\nassert solution('''1 2\nu''') == 'u'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\nassert solution('1 1') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"15 3\") == \"cccbbabaccbc\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"u\"\nassert solution(\"2 2\") == \"x\"\nassert solution(\"3 1\") == \"x\"\nassert solution(\"4 3\") == \"x\"\nassert solution(\"5 1\") == \"\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n10\n10 10 10 10 10\n2\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3') == '8'\nassert solution('5 3\\n4 2\\n3 3') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2 0 2 0\\n'\n    '2 4\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n) == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2 0 2 0\\n'\n    '2 4\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n    ) == '8'\n\nassert solution(\n    '5 3\\n'\n    '4 2\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n    ) == '20'"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6\\n3 4\\n1 2\\n3 1\\n2 2\\n') == '8'\nassert solution('4 6\\n1 2\\n3 1\\n2 2\\n') == '4'\nassert solution('5 6\\n3 4\\n4 3\\n3 2\\n2 5\\n') == '10'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n1 10\n7 1\n1 5\n2 3\n3 2\n2 6\n3 6\n6 3\n6 7\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 6\n10 0 0 0 0\n8 2\n1 2\n1 2\n3 3\n1 2\n2 4\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4 3\n1 3\n1 5\n1 2\n2 5\n2 3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5 4\n0 1\n1 2\n1 2\n1 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n2 5\n''') == '20'"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '8'\nassert solution('3 5') == '21'\nassert solution('4 2') == '6'\nassert solution('3 3') == '6'\nassert solution('5 2') == '3'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 5\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n5 4\n3 2 1 2 0\n1 2\n1 5\n2 3\n''') == '3'\nassert solution('''\n5 3\n3 3\n3 5\n4 2\n2 5\n''') == '4'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n6 8\n***.*\n*.***\n*.***\n***.*\n***.*\n***.*\n\n''') == '3\\n3 3 1'\n\nassert solution('''\n\n5 5\n*.*\n**.\n*.\n*.\n*.*\n\n''') == '3\\n2 2 1'\n\nassert solution('''\n\n3 3\n*.*\n*.*\n*.*\n\n''') == '-1'\nassert solution('''\n\n5 5\n*.*\n**.\n*.*\n*.*\n*.*\n\n''') == '-1'\nassert solution('''\n\n6 6\n*.*\n*.*\n*.*\n*.*\n*.*\n*.*\n\n''') == '3\\n3 3 1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n.*.\\n*.*\") == \"3 4 1\"\nassert solution(\"3 3\\n*.*.\\n**.*\") == \"3 3 1\"\nassert solution(\"5 5\\n.*.*.*\") == \"3 4 1\"\nassert solution(\"5 5\\n.*.*.\\n**.*\") == \"3 4 1\"\nassert solution(\"5 5\\n.*.*.*\\n**.*\") == \"3 4 1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3 4 1\\n3 5 2\\n'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3 4 1\\n3 5 2\\n'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n***\n*.*\n''') == '3 4 1'\n\nassert solution('''\n5 5\n.*.*\n**.*\n*.*\n''') == '3 4 1'\n\nassert solution('''\n5 5\n.*.*\n**.*\n***\n''') == '-1'\n\nassert solution('''\n5 5\n***\n**.*\n*.*\n''') == '-1'\n\nassert solution('''\n3 3\n*.*\n.*.\n''') == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8\\n'\n                '....*...\\n'\n                '...**...\\n'\n                '..*****.\\n'\n                '...**...\\n'\n                '....*...\\n'\n                '........') == '3\\n' \\\n                '3 4 1\\n' \\\n                '3 5 2\\n'\n\nassert solution('5 5\\n'\n                '.*...\\n'\n                '****.\\n'\n                '*.***\\n'\n                '.....\\n') == '-1\\n'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '6 8\\n'\n    '.*\\n'\n    '..*\\n'\n    '.****\\n'\n    '.*..\\n'\n    '....\\n'\n) == '3 4 1\\n'\nassert solution(\n    '5 5\\n'\n    '.*\\n'\n    '.*\\n'\n    '*.*\\n'\n) == '3 3 1\\n'\nassert solution(\n    '5 5\\n'\n    '.*\\n'\n    '.*\\n'\n    '*.*\\n'\n    '.....\\n'\n) == '-1\\n'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"5 5\") == \"3 4 1\"\n\nassert solution(\"5 5\") == \"3 4 1\"\n\nassert solution(\"5 5\") == \"3 4 1\"\n\n\"\"\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == \"Yes\"\nassert solution('15') == \"Yes\"\nassert solution('23') == \"No\"\nassert solution('545') == \"Yes\"\nassert solution('11') == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == 'Yes'\nassert solution('520') == 'No'"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == 'Yes'\nassert solution('4') == 'No'\nassert solution('100') == 'Yes'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''575''') == 'Yes'\nassert solution('''10''') == 'No'\nassert solution('''14''') == 'Yes'\nassert solution('''12''') == 'No'\nassert solution('''9''') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1') == 'No'\nassert solution('23') == 'Yes'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 'No','stdin not handled'\nassert solution('123') == 'Yes', 'wrong solution'\nassert solution('577') == 'Yes', 'wrong solution'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"124\") == \"No\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"101\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Alice'\nassert solution('2 4') == 'Bob'\nassert solution('5 6') == 'Draw'\n\n\"\"\"\"\n\nn = int(input())\na, b = map(int, input().split())"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 2') == 'Bob'\n\"\"\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"1 5\") == \"Bob\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 6\\n\") == \"Alice\"\n\nassert solution(\"8 3\\n\") == \"Bob\"\n\nassert solution(\"8 5\\n\") == \"Draw\"\n\nassert solution(\"8 7\\n\") == \"Draw\"\n\nassert solution(\"8 8\\n\") == \"Draw\""
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"10 7\") == \"Bob\"\nassert solution(\"10 7\") == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Alice'\nassert solution('2 2') == 'Draw'\nassert solution('1 6') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7') == 'Alice'\nassert solution('8 9') == 'Bob'\nassert solution('3 5') == 'Draw'\nassert solution('4 2') == 'Alice'"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\n\nassert solution(\"10 10\") == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 2') == 'Bob'\n\"\"\""
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 6\\n') == 'Alice'\nassert solution('3 2\\n') == 'Bob'\nassert solution('1 2\\n') == 'Draw'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(solution(\"happy,newyear,enjoy\"))"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"Congratulations! Your solution is correct!\")\n'''\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(solution(input()))\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy','sample test 1 failed'\nassert solution('happy,,newyear,enjoy') == 'happy newyear enjoy','sample test 2 failed'\nassert solution('happy,newyear, enjoy') == 'happy newyear enjoy','sample test 3 failed'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'happy newyear enjoy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n\"\"\"\n\ns = input()\ns1 = s.replace(',',' ')\nprint(s1)"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy,') == 'happy newyear enjoy,'\nassert solution('happy,newyear,enjoy,,') == 'happy newyear enjoy,,'\nassert solution('happy,newyear,enjoy,') == 'happy newyear enjoy,'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n2 0\n0 0\n-1 0\n1 0\n''') == '2 1'\nassert solution('''\n1 2\n0 0\n1 0\n''') == '1 1'\nassert solution('''\n3 3\n0 1\n2 2\n-1 2\n-3 -2\n''') == '2 3'\nassert solution('''\n1 2\n0 0\n1 0\n''') == '1 2'\nassert solution('''\n3 3\n1 0\n2 2\n0 1\n-1 2\n-3 -2\n''') == '2 3'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2 1\"\nassert solution(\"3 4\\n1 1\\n0 0\\n0 0\\n-1 -1\\n1 1\") == \"1 1\"\nassert solution(\"2 5\\n3 4\\n3 3\\n3 2\\n2 2\\n-1 -1\\n0 1\\n-1 -1\") == \"2 2\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\\n1\"\nprint(solution(input))\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '1'\nassert solution('10 1') == '1'\nassert solution('10 5') == '2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"100 100\") == \"1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 0') == '1'\nassert solution('2 2\\n2 0\\n0 0') == '2 1'\nassert solution('2 2\\n1 0\\n0 0') == '1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2 1'\nassert solution('''5 5\n5 1\n5 3\n5 5\n5 2\n5 2\n5 2''') == '1 5'"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2 1\\n1 1', 'First test case failed'\nassert solution('1 3') == '1 3', 'Second test case failed'\nprint('Tests passed')"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '17'\nassert solution('4') == '25'\nassert solution('5') == '35'\n\nprint('All tests passed!')\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 14\nassert solution('1') == 2"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '14'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '14'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"14\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"10\") == \"55\"\nassert solution(\"123\") == \"243\"\nassert solution(\"12345\") == \"103150\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('1 2') == 'No'"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n.#.\\n#.#\\n#.\\n#.\\n\") == \"Yes\"\nassert solution(\"10 1\\n#.##..#\\n#######\\n##.##.##\\n#######\\n##.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n######.##\\n#######.##\\n###.##.##\\n###.##.##\\n##.##.##\\n##.##.##\\n##.##.##\\n\") == \"No\"\nassert solution(\"10 3\\n#..#\\n#.#.\\n.#.#\\n#..#\\n#..#\\n#.#.\\n#.#.\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n\") == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"Yes\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"5 5\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == 'Yes'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 2\") == \"53\"\nassert solution(\"5 2 5 2\") == \"53\"\nassert solution(\"1 5 2\") == \"5\"\nassert solution(\"5 1 2\") == \"5\"\nassert solution(\"1 0 0\") == \"0\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == \"53\"\nassert solution('1 5 3') == \"5\"\nassert solution('1 1 2') == \"4\"\nassert solution('1 4 5') == \"4\"\nassert solution('5 1 2') == \"4\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"53\""
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\\n\") == \"53\"\nassert solution(\"5 1 2 3\") == \"9\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 2 3\") == \"5\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 5 2\n''') == '53'\nassert solution('''\n1 2\n''') == '3'\nassert solution('''\n2 2\n''') == '2'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n4 3\n''') == '1'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '6', 'One'\nassert solution('1 2 3') == '6', 'Two'\nassert solution('1 2 3') == '6', 'Three'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('3 9 1') == '5'\nassert solution('4 7 3') == '6'\nassert solution('5 8 6') == '7'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 5 0\") == \"0\"\nassert solution(\"1 5 3\") == \"9\"\nassert solution(\"1 5 6\") == \"14\"\nassert solution(\"2 1 4\") == \"8\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 1 1\") == \"4\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 2 1\") == \"2\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"8\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"10\") == \"15950\"\n\nclass DSU:\n    def __init__(self, N):\n        self.parent = list(range(N))\n        self.rank = [0] * N\n\n    def find(self, x):\n        if self.parent[x]!= x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, x, y):\n        xroot, yroot = map(self.find, (x, y))\n        if xroot == yroot: return\n\n        if self.rank[xroot] > self.rank[yroot]:\n            self.parent[yroot] = xroot\n        elif self.rank[xroot] < self.rank[yroot]:\n            self.parent[xroot] = yroot\n        else:\n            self.parent[xroot] = yroot\n            self.rank[yroot] += 1\n\n    def connected(self, x, y):\n        return self.find(x) == self.find(y)\n\n\nclass Solution:\n    def __init__(self, n, p_list):\n        self.dsu = DSU(n)\n        self.p_list = p_list\n        self.ans = 0\n\n    def test(self):\n        for i in range(len(self.p_list)):\n            self.dsu.union(i, i + 1)\n        for i in range(2, len(self.p_list)):\n            if not self.dsu.connected(0, i):\n                self.ans += self.p_list[i - 1]\n                self.dsu.union(i, 0)\n        return self.ans\n\n\n    def total(self):\n        return self.test()\n\nn = 3\np_list = [4980, 7980, 6980]\n\ns = Solution(n, p_list)\nprint(s.total())\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '15950'\nassert solution('2') == '239.5'\nassert solution('3') == '169.5'\nprint(solution(input()))"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '15950'\n\"\"\"\n\nn = int(stdin.readline().strip())\np = list(map(int, stdin.readline().strip().split()))\n\ndp = [0] * (n + 1)\nfor i in range(n):\n    if i == 0:\n        dp[i] = p[i]\n        continue\n    if i % 2 == 0:\n        dp[i] = dp[i // 2] + p[i]\n    else:\n        dp[i] = dp[i // 2] + p[i] // 2\nprint(sum(dp))\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n4980\n7980\n\"\"\") == \"15950\"\nassert solution(\"\"\"\n5\n9980\n8980\n6980\n5980\n9980\n\"\"\") == \"14400\"\nassert solution(\"\"\"\n10\n8390\n11897\n5179\n5973\n6784\n1633\n1228\n8392\n4289\n9728\n1940\n6423\n9705\n6787\n7960\n2567\n8085\n3216\n\"\"\") == \"2910564\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '15950'\nassert solution('6') == '15900'\n\"\"\""
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '15950'\n\n---another sample----\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950.0'\nassert solution('''\n1\n8980\n''') == '8980.0'\nassert solution('''\n6\n1290\n1290\n1290\n1290\n1290\n''') == '16290.0'\nassert solution('''\n2\n8880\n8880\n''') == '8880.0'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3\\n4980\\n7980\\n6980') == '15950'\nassert solution(\n    '2\\n9000\\n16000\\n24000') == '63000'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '15950'\nassert solution('2') == '15950'\nassert solution('1') == '15950'\nassert solution('4') == '15950'\nassert solution('5') == '15950'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''29\n20\n7\n35\n120''') == '215'\n\nassert solution('''2\n1\n5\n4\n2\n''') == '3'\n\nassert solution('''4\n2\n6\n4\n3\n''') == '3'\n\nassert solution('''4\n2\n6\n4\n2\n''') == '3'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n6\\n1\\n3\\n2\") == \"7\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"11\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"3\"\nassert solution(\"1\\n2\\n0\\n4\\n5\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '57'\nassert solution('120') == '180'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"60\"\nassert solution(\"35\") == \"57\"\nassert solution(\"120\") == \"180\"\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n7\n35\n120\n''') == '215'\nassert solution('''\n29\n20\n7\n35\n120\n''') == '215'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '5'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20\\n7\\n35\\n120') == '215'\n\"\"\"\n\n\nfrom math import ceil"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('2\\n2\\n0\\n1\\n1') == '0'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"60\"\nassert solution(\"35\") == \"57\"\nassert solution(\"120\") == \"180\"\n\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '0'\nassert solution('35') == '120'\nassert solution('120') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"19\\n30\\n7\\n35\\n120\") == \"154\"\nassert solution(\"19\\n30\\n7\\n35\\n120\") == \"154\"\nassert solution(\"19\\n30\\n7\\n35\\n120\") == \"154\"\nassert solution(\"19\\n30\\n7\\n35\\n120\") == \"154\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7.5'\nassert solution('4') == '4.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('5') == '2.5'\nassert solution('1') == '0.5'"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('20') == '1'\nassert solution('21') == '2'\nassert solution('22') == '3'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '7.5'\nassert solution('''\n2\n1 2\n''') == '2.5'\nassert solution('''\n4\n1 2 3 4\n''') == '7.5'\nassert solution('''\n4\n1 2 3 4\n''') == '7.5'\n\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"15\") == \"2\"\nassert solution(\"2147483647\") == \"2147483647\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '7.5'\nassert solution('3') == '7.49999'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n5 3\\n') == '7.5'\nprint(solution(input()))"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('5') == '0.5'\nassert solution('12') == '1.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('5\\n6 3 1') == '5.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '7.50001'\n\"\"\"\n\nimport math\n\nn, *a = map(int, input().split())\n\nsum_inv = 0\n\nfor i in range(len(a)):\n    sum_inv += 1/a[i]\n\nprint(sum_inv)\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('3 3\\n2\\n3\\n1') == '0'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\""
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"6 3\") == \"4\""
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"10 2\") == \"7\"\nassert solution(\"10 3\") == \"5\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('B') == 'a'\n\nThe tests below will test your solution\n\"\"\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'A', 'Test 1 fail'\nassert solution('a') == 'a', 'Test 2 fail'\nassert solution('E') == 'E', 'Test 3 fail'\nassert solution('e') == 'e', 'Test 4 fail'\nassert solution('F') == 'F', 'Test 5 fail'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('B') == 'a'\nassert solution('A') == 'A'\nprint(solution(input()))"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('B') == 'A'\n\"\"\"\n\nletter = input()\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"B\") == \"A\"\n\n----PEP8\n\n1) A string is of constant size.\n2) A single line is wrapped as a single line of code\n3) The function has only 1 argument\n4) The function has no return value\n\n\"\"\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'A', 'Expected \"A\", but got: {}'.format(solution('A'))\nassert solution('a') == 'a', 'Expected \"a\", but got: {}'.format(solution('a'))\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('A') == 'a'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"6\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"\n\"\"\"\nimport math"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input := \"3 2\") == \"6\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 2''') == '2'\nassert solution('''3 3''') == '12'\nassert solution('''10 15''') == '98'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('3 5') == '15'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\n\"\"\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YYMM\"\nassert solution(input(\"\")) == \"NA\"\nassert solution(input(\"01\")) == \"YYMM\"\nassert solution(input(\"010101\")) == \"YYMM\"\nassert solution(input(\"123456789\")) == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM', 'Sample test 1 failed'\nassert solution('19') == 'NA', 'Sample test 2 failed'\nassert solution('01') == 'YYMM', 'Sample test 3 failed'\nassert solution('0104') == 'YYYY', 'Sample test 4 failed'\nassert solution('001010') == 'YYYYMM', 'Sample test 5 failed'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Wrong answer\"\nassert solution(\"0217\") == \"AMBIGUOUS\", \"Wrong answer\"\nassert solution(\"1409\") == \"AMBIGUOUS\", \"Wrong answer\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('19') == 'YYMM'\nassert solution('1905') == 'YYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NA\"\nassert solution(\"2\") == \"NA\"\nassert solution(\"19\") == \"YYMM\"\nassert solution(\"20\") == \"YYMM\"\nassert solution(\"2001\") == \"YYYYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0123\") == \"NA\"\nassert solution(\"012345\") == \"NA\"\nassert solution(\"01234\") == \"YYYY\"\nassert solution(\"1905\") == \"YYYY\"\nassert solution(\"190511\") == \"YYYY\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"MMYY\"\nassert solution(\"10\") == \"NA\"\nassert solution(\"31\") == \"NA\"\nassert solution(\"0\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('05') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'NA'\nassert solution('01') == 'YYYY'\nassert solution('0112') == 'YYYYMM'\nassert solution('1201') == 'YYMMYY'\nassert solution('011219') == 'YYYYMM'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n\"\"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\n\n\"\"\""
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('4') == '1'"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"15\") == \"6\"\nassert solution(\"30\") == \"7\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"9 10\") == \"21\"\nassert solution(\"10 10\") == \"21\"\nassert solution(\"9 10\") == \"21\"\nassert solution(\"9 12\") == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 12\") == \"21\"\n\nSample Test Cases\n\nEnter A: 7\nEnter B: 12\n21\n\"\"\"\n\nfrom datetime import datetime\n\nt = datetime.now()"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"22\"\nassert solution(\"15 21\") == \"23\"\nassert solution(\"17 19\") == \"20\"\nassert solution(\"18 18\") == \"18\"\nassert solution(\"23 27\") == \"23\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"21\", \"Should be 21\"\nassert solution(\"\"\"\n1 2\n\"\"\") == \"21\", \"Should be 21\"\nassert solution(\"\"\"\n2 2\n\"\"\") == \"19\", \"Should be 19\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9 12\") == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"21\"\nassert solution(\"4 4\") == \"21\"\nassert solution(\"4 5\") == \"21\"\nassert solution(\"4 6\") == \"21\"\nassert solution(\"4 7\") == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''9 12\n''') == '21'\nassert solution('''9 10\n''') == '20'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"9 18\") == \"19\"\n\"\"\""
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"9 12\") == \"21\"\nassert solution(\"9 5\") == \"9\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 2') == '1'\nassert solution('3 1') == '0'"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '5'\nassert solution('2 20') == '19'\nassert solution('3 9') == '8'\nassert solution('4 19') == '18'\nassert solution('5 20') == '18'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n\n'''"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2919''') == '3719'\nassert solution('''2 1699''') == '1699'\nassert solution('''2 2''') == '2'\nassert solution('''2 0''') == '2'\nassert solution('''1 0''') == '0'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"4 0\") == \"0\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1\n1\n1\n''') == '1'\nassert solution('''10 2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"10 10\") == \"19\"\nassert solution(\"9 9\") == \"18\""
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 511') == '511'\nassert solution('10 1') == '1'\nassert solution('100 2') == '2'\nassert solution('1000 3') == '3'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 10\") == \"12\"\nassert solution(\"100 100\") == \"100\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''1 1''') == '1'\nassert solution('''1 1 1''') == '1'\nassert solution('''0 0 1''') == '2'\nassert solution('''1 1 1 1''') == '1'\n'''\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('101') == '3'\nassert solution('10111') == '4'\nassert solution('100000000') == '10'\nassert solution('100001111') == '7'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''7 2''') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 5') == '3'\nassert solution('4 8') == '1'\nassert solution('3 1') == '2'"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 2') == '4'\nassert solution('1') == '1'\nassert solution('11') == '4'\nassert solution('11 00') == '3'\nassert solution('11 01') == '2'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 2\") == \"4\""
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\nassert solution('1 4') == '4'\nassert solution('1 1') == '3'\nassert solution('1234') == '8'\nassert solution('00000000000000') == '20'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''11 2''') == '4'\n'''\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '4'\nassert solution('101') == '1'\nassert solution('1101') == '3'\nassert solution('1010101') == '3'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"4\"\nassert solution(\"1011\") == \"4\"\nassert solution(\"1101\") == \"4\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('15') == '3'\nassert solution('10') == '3'"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"5\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\n\n\"\"\"\nimport math\nn = int(input())\n\nn_sheets = math.ceil(n / 2)\nprint(n_sheets)"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '4'\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\""
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '0'"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\n\"\"\"\n\nN = int(input())\n\ncounter = 0\nwhile N >= 1:\n    counter += (N // 2)\n    N = N % 2\n\nprint(counter)"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"1 4\") == \"Yay!\"\nassert solution(\"1 5\") == \"Yay!\"\nassert solution(\"1 6\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n') == 'Yay!'\nassert solution('5 4\\n') == 'Yay!'\n\n'''\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"1 1\") == \"E869120 and square1001's 16-th birthday is coming soon.\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == 'Yay!'\n\nclass solution(object):\n    def __init__(self, A, B):\n        self.A = A\n        self.B = B\n        self.A_one_to_six = (self.A + 1, self.A + 2, self.A + 3, self.A + 4, self.A + 5, self.A + 6)\n        self.B_one_to_six = (self.B + 1, self.B + 2, self.B + 3, self.B + 4, self.B + 5, self.B + 6)\n    def solution(self, A, B):\n        ans = 'Yay!'\n        for i in range(1,7):\n            if (A + i) in self.A_one_to_six and (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (A + i) in self.A_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            else:\n                ans = ':( '\n        return ans\n\nThe above example, if E869120 and square1001 are to eat A and B of the cake (1-16 pieces)\n\nthat are not part of the cake, they should either take an adjacent piece of cake,\n\nor take a piece of cake for themselves.\n\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Input-----\nInput is given from Standard Input in the following format:\n\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\nclass solution(object):\n    def __init__(self, A, B):\n        self.A = A\n        self.B = B\n        self.A_one_to_six = (self.A + 1, self.A + 2, self.A + 3, self.A + 4, self.A + 5, self.A + 6)\n        self.B_one_to_six = (self.B + 1, self.B + 2, self.B + 3, self.B + 4, self.B + 5, self.B + 6)\n    def solution(self, A, B):\n        ans = 'Yay!'\n        for i in range(1,7):\n            if (A + i) in self.A_one_to_six and (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (A + i) in self.A_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            else:\n                ans = ':( '\n        return ans\n\nThe above example, if E869120 and square1001 are to eat A and B of the cake (1-16 pieces)\n\nthat are not part of the cake, they should either take an adjacent piece of cake,\n\nor take a piece of cake for themselves.\n\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Input-----\nInput is given from Standard Input in the following format:\n\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\nclass solution(object):\n    def __init__(self, A, B):\n        self.A = A\n        self.B = B\n        self.A_one_to_six = (self.A + 1, self.A + 2, self.A + 3, self.A + 4, self.A + 5, self.A + 6)\n        self.B_one_to_six = (self.B + 1, self.B + 2, self.B + 3, self.B + 4, self.B + 5, self.B + 6)\n    def solution(self, A, B):\n        ans = 'Yay!'\n        for i in range(1,7):\n            if (A + i) in self.A_one_to_six and (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (A + i) in self.A_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            else:\n                ans = ':( '\n        return ans\n\nThe above example, if E869120 and square1001 are to eat A and B of the cake (1-16 pieces)\n\nthat are not part of the cake, they should either take an adjacent piece of cake,\n\nor take a piece of cake for themselves.\n\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Input-----\nInput is given from Standard Input in the following format:\n\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\nclass solution(object):\n    def __init__(self, A, B):\n        self.A = A\n        self.B = B\n        self.A_one_to_six = (self.A + 1, self.A + 2, self.A + 3, self.A + 4, self.A + 5, self.A + 6)\n        self.B_one_to_six = (self.B + 1, self.B + 2, self.B + 3, self.B + 4, self.B + 5, self.B + 6)\n    def solution(self, A, B):\n        ans = 'Yay!'\n        for i in range(1,7):\n            if (A + i) in self.A_one_to_six and (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (A + i) in self.A_one_to_six:\n                ans = 'Yay!'\n                break\n            elif (B + i) in self.B_one_to_six:\n                ans = 'Yay!'\n                break\n            else:\n                ans = ':( '\n        return ans\n\nThe above example, if E869120 and square1001 are to eat A and B of the cake (1-16 pieces)\n\nthat are not part of the cake, they should either take an adjacent piece of cake,\n\nor take a piece of cake for themselves.\n\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Input-----\nInput is given from Standard Input in the following format:\n\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\nclass solution(object):\n    def __init__(self, A, B):\n        self.A = A\n        self.B = B\n        self.A_one_to_six = (self.A + 1, self.A + 2"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yay!'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 4]) == \"Yay!\"\n\n-------Hint--------\n\n- The E869120 and square1001 are square numbers of size 4 and 5 respectively,\n- The cake has 16 pieces, and 4 pieces are of size 4 and 5 respectively.\n- The same person should not take two adjacent pieces of cake.\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nassert solution(\"3 1\") == \"Not\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A 1\nB 2\nC 3\nD 4\nE 5\nF 6\nG 7\nH 8\nI 9\nJ 10\nK 11\nL 12\nM 13\nN 14\nO 15\nP 16''') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 3\\n2 5\\n2 4\\n1 1\\n1 1\") == \"Yay!\"\n\nassert solution(\"2 2\\n1 1\\n1 2\\n1 1\") == \"Yay!\"\n\nassert solution(\"1 3\\n1 3\\n1 2\\n1 1\") == \"Yay!\"\n\nassert solution(\"1 1\\n1 2\\n1 2\\n1 1\") == \"Yay!\"\n\nassert solution(\"1 2\\n1 1\\n1 2\\n1 1\") == \"Yay!\""
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"3 4\") == \"Yay!\""
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('101010101010101010101010101010101010101010101010101010101010101') == '0'\nassert solution('1234') == '34'\nassert solution('123') == '34'\n\n--mixed\n---one\n---two\n---three\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---one\n---two\n---three\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---two\n---three\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---four\n---five\n---seven\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---nine\n\n---mixed\n---four\n---five\n---six\n---seven\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---eight\n---nine\n\n---mixed\n---four\n---five\n---six\n---"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1234567876''') == '34'\nassert solution('''6912021059''') == '14'\nassert solution('''876543210''') == '6'\nassert solution('''81420619''') == '7'\nassert solution('''98691210''') == '11'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"123456789\") == \"987654321\"\nassert solution(\"01234\") == \"987654321\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"654321\") == \"10\"\nassert solution(\"123456\") == \"15\"\nassert solution(\"123345\") == \"15\"\nassert solution(\"123456\") == \"15\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"12345678\") == \"12345678\"\nassert solution(\"567\") == \"567\"\nassert solution(\"\") == \"\"\nassert solution(\"123\") == \"123\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '35'\nassert solution('12345') == '34'\nassert solution('12345678') == '35'\nassert solution('123456789') == '35'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '26'\nassert solution('1') == '4'\nassert solution('12345678') == '2'\nassert solution('12345678') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\nassert solution('7654321') == '14'"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234567876') == '34'\nassert solution('87654321') == '12'\nassert solution('12345678') == '11'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 12 6\n\n''') == '5 3'\n\nassert solution('''\n2\n2 9\n\n''') == '1 7'\n\nassert solution('''\n7\n13 52 0 13 26 52\n\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7]) == \"12 13\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\n\nassert solution('''\n2\n2 9\n''') == '1 7'\n\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\n\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 12 6\n\n''') == '5 3'\nassert solution('''2\n2 9\n\n''') == '1 7'\n\nassert solution('''7\n13 52 0 13 26 52\n\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n3\n3 12 6\n\n2\n2 9\n\n7\n2 1000000000 4 6 8 4 2\n\n6\n13 52 0 13 26 52\n\n'''\n    ) == '5 3\\n1 7'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5 3\"\nassert solution(\"2\") == \"1 7\"\nassert solution(\"7\") == \"12 13\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"12 13\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\nassert solution('''\n2\n2 9\n''') == '1 7'\nassert solution('''\n7\n13 52 0 13 26 52\n''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3 12 6\n''') == '5 3'\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 1 4 1\n''') == '3'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\nassert solution('''\n5\n1 1 1 2 2\n''') == '1'\nassert solution('''\n1\n2\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 1 4 1') == '3'\nassert solution(\n    '3') == '1'\nassert solution(\n    '4') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 1 4 1\n''') == '3'\n\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\n\nassert solution('''\n1\n1 1 1\n''') == '1'\n\nassert solution('''\n4\n1 1 1 2 2\n''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '3'\nassert solution('''\n2\n3 2 3\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 1 4 1\n''') == '3', '4th day'\nassert solution('''\n3\n1 1 1\n''') == '1', '1st day'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2', '2nd day'"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 1 2 2') == '2'\nassert solution('4\\n3 1 4 1') == '3'\nassert solution('3\\n1 1 1') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1 4 1\n''') == '3'\nassert solution('''\n5\n1 1 2 2 1\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 1 4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 1 1 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7\n3 2 1 2 3 3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '1'\nassert solution('''\n2 0\n''') == '1'\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"1\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 0\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\nassert solution('''4 2\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 2, 1, 2, 3]) == 2\nassert solution([2, 0]) == 1\nassert solution([3, 2, 1, 2, 3]) == 2\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\":\")) == \"4 2\"\nassert solution(input(\":\")) == \"1\"\nassert solution(input(\":\")) == \"1 2\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n\"\"\") == \"11\"\nassert solution(\"\"\"\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\n\"\"\") == \"4\"\nprint(\"Congratulations, your submission is correct!\")"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('6 4') == '3'\nassert solution('1 5') == '1'\nassert solution('3 1') == '2'\n\n'''\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"11\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"\nassert solution(\"8 1\\n8 1 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n9 8\\n1 10\\n10 7\\n1 8\\n2 11\\n3 11\\n5 10\\n6 13\\n7 14\\n12 11\\n13 9\\n14 12\\n13 14\\n\") == \"12\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 2 3 4 5') == \"11\"\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == \"4\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\n\nassert solution(\"5 1\") == \"11\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\"\nassert solution(\"2 3\") == \"1 5\\n2 1\""
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\""
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 5\"\nassert solution(\"1 5\") == \"1 1\"\nassert solution(\"2 3\") == \"1 5\""
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n\n\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == '1 5'\nassert solution(\"1 10000000000\") == '1 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 6\n10 15 12\n1 9 12 23 26 37\n\n''') == '1 5\\n2 1\\n2 9999999994'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_0) == test_output_0\nassert solution(test_input_1) == test_output_1"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n5 10000000000\n5 6 9999999999''') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\nassert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 4\n\n''') == '2 1 3'\nassert solution('''40 40 40 60\n\n''') == '20 20 20'\nassert solution('''201 101 101 200\n\n''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1 1\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n2 2 2\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n3 4 3\n\"\"\") == \"1 1 3\"\n\nassert solution(\"\"\"\n3 5 3\n\"\"\") == \"1 1 3\"\n\nassert solution(\"\"\"\n3 6 3\n\"\"\") == \"1 1 3\""
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\nBRBGBRGR'\nassert solution(input()) == '6\\nBGRBRBGBGBGRG'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"9\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"13\") == \"6\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"13\") == \"6\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution('2') == 'R'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"RBGBR\"\nassert solution(\"10\") == \"BBGBRR\"\nassert solution(\"15\") == \"BGRBRBBGBGRG\"\nassert solution(\"20\") == \"BRBGBRGRGBGRR\"\nassert solution(\"25\") == \"BGRBGRBGBGBGR\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'RRRR'\nassert solution('5') == 'RRBBB'\nassert solution('10') == 'BBBBBBB'\nassert solution('13') == 'BGRBBBGBGBGRG'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == 'RBGRRBRGG'\nassert solution('8') == 'BBBGBRRR'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 3 5 2 4 6\n''') == '4'\nassert solution('''6\n10 9 8 7\n''') == '6'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''10\n6 7 8 3 4 5 9 10 11\n''') == '1'\nassert solution('''11\n6 7 8 3 4 5 9 10 11\n''') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"8\") == \"2\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 3 4 7 5 6 8\") == \"4\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\"\nassert solution(\"7\\n10 9 8 7\") == \"1\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 3 4 7 5 6 8\") == \"4\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\"\nassert solution(\"4\\n10 9 8 7\") == \"1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\"\nprint('\"Run\" is good. Great job!')"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\n\nassert solution('''\n4\n10 9 8 7\n''') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '9\\n1 2 3 7 8 9'\nassert solution('4\\n10 9 8 7') == '4\\n1 2 3 7'"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) in [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"7\\n\"\n    \"3 3 4 7 5 6 8\"\n    ) == \"4\"\n\nassert solution(\n    \"6\\n\"\n    \"1 3 5 2 4 6\"\n    ) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"10 9 8 7\"\n    ) == \"6\"\n\nassert solution(\n    \"9\\n\"\n    \"6 7 8 3 4 5 9 10 11\"\n    ) == \"6\"\n\nassert solution(\n    \"10\\n\"\n    \"10 9 8 7\"\n    ) == \"1\""
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('10') == '1'\nassert solution('6') == '2'\nassert solution('9') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\n\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n\nassert solution('''10\n1 3 5 2 4 6 7 8 9 10 11\n''') == '1'\n\nassert solution('''11\n7 9 5 4 8 3 2 6 1 1 2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 1\"\"\") == \"Yes\"\nassert solution(\"\"\"3 5\"\"\") == \"No\"\nassert solution(\"\"\"1 3\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1''') == 'Yes'\nassert solution('''3 2''') == 'No'\nassert solution('''1 1''') == 'Yes'\nassert solution('''2 1''') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 4\") == \"No\""
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"Yes\", \"Should be Yes\"\nassert solution(\"5 1\") == \"No\", \"Should be No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('3 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"4 4\") == \"No\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"15 5\") == \"110\""
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 50\") == \"110\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"50 1\") == \"1\"\nassert solution(\"1 20\") == \"20\"\nassert solution(\"2 2\") == \"20\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 8') == '2'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('60 60') == '110'\nassert solution('1 2') == '110'\nassert solution('2 1') == '110'\nassert solution('1 2 3') == '110'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\""
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('10 10') == '10'\nassert solution('11 10') == '10'\nassert solution('12 10') == '10'\nassert solution('13 10') == '10'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 11') == '60'\nassert solution('60 60') == '110'\nprint(solution(input()))\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n1 2''') == '1'\nassert solution('''1 1\n1 2''') == '0'\nassert solution('''2 5\n1 1\n2 2''') == '2'\nassert solution('''3 9\n1 1\n2 2\n3 3''') == '3'\nassert solution('''7 17\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '12'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('100 100') == '200'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '8'\nassert solution('4') == '16'\nassert solution('6') == '26'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"257\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"10\") == \"65\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '18'\nassert solution('3') == '36'"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == \"8\"\nassert solution(2) == \"8\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '8'\n\n\"\"\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == \"NO\"\nassert solution(4) == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"10\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"999\") == \"ABC\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'AB'\nassert solution('2') == 'AB'\nassert solution('3') == 'AB'\nassert solution('999') == 'ABC'\nassert solution('1000') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'AB'\nassert solution('3') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution('1') == '1'\nassert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\nassert solution('100') == 'AB'\nassert solution('100') == 'AB'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '999') == 'ABC'"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('999') == 'ABC'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n10\n15''') == 'Yay!'\nassert solution('''1\n2\n3\n5\n8\n9\n10\n15''') == 'Yay!'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15''') == 'Yay!'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15''') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''a\nb\nc\nd\ne\nk\n''') == \"Yay!\"\nassert solution('''1\n2\n4\n8\n9\n15\n''') == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''a\nb\nc\nd\ne\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n0\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n4\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Nay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Nay!\"\nassert solution(\"5\") == \"Nay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"1\") == \"red\"\nassert solution(\"2\") == \"red\"\nassert solution(\"2\") == \"red\"\nassert solution(\"100\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3201') =='red'\nassert solution('3202') =='red'\nassert solution('3203') =='red'\nassert solution('3204') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"0\") == \"red\"\nassert solution(\"9001\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2 is not less than 3200, so we print s = red.'\nassert solution('3') == '3 is not less than 3200, so we print s = red.'\nassert solution('4') == '4 is not less than 3200, so we print s = red.'\nassert solution('5') == '5 is not less than 3200, so we print s = red.'\nassert solution('6') == '6 is not less than 3200, so we print s = red.'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"4200\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"pink\", \"Test 1 Failed\"\nassert solution(input()) == \"red\", \"Test 2 Failed\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3200') == 'pink'\nassert solution('12345') =='red'"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3200') == 'pink'\nassert solution('1200') =='red'\nassert solution('1300') =='red'\nassert solution('1310') =='red'\nassert solution('20') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') =='red'\nassert solution('2') =='red'\nassert solution('3') == 'green'"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"3199\") == \"red\""
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ARC'\nassert solution('3') == 'AGC'\nassert solution('4') == 'ABC'\nassert solution('5') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == \"ABC\"\nassert solution(2) == \"ARC\"\nassert solution(3) == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"R\") == \"ABC\"\nassert solution(\"1199\") == \"ARC\"\nassert solution(\"5999\") == \"AGC\"\nassert solution(\"1242\") == \"AGC\"\nassert solution(\"15999\") == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('R') == 'ABC'\nassert solution('1199') == 'ABC'\nassert solution('2800') == 'ARC'\nassert solution('2800') == 'ARC'\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ARC'\nassert solution('3') == 'AGC'\nassert solution('4') == 'ABC'\nassert solution('5') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'ABC', '1'\nassert solution('2') == 'ARC', '2'\nassert solution('3') == 'AGC', '3'\nassert solution('4') == 'R', '4'\nassert solution('5') == 'R', '5'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''121\nABC\nARC\nAGC''') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == 'ARC'\nassert solution('399') == 'AGC'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9'\nassert solution('101') == '99'\nassert solution('111') == '99'\n\n'''\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"119\") == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\nassert solution('119') == '991'\nassert solution('999') == '1'\nassert solution('9999') == '1'\nassert solution('1111') == '1'"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('9') == '1'\nassert solution('111') == '99'\nassert solution('119') == '991'\nassert solution('1234567890') == '999999999'"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123') == '1123', 'Wrong answer'\nassert solution('56789') == '967890', 'Wrong answer'\nassert solution('11111') == '910111', 'Wrong answer'\nassert solution('11111') == '910111', 'Wrong answer'\nassert solution('999') == '9999', 'Wrong answer'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"110\") == \"101\", \"101 - 1\"\nassert solution(\"000\") == \"999\", \"999 - 1\"\nassert solution(\"1112\") == \"1101\", \"1101 - 1\"\nassert solution(\"1010101\") == \"10110001\", \"10110001 - 1\"\nassert solution(\"10111111\") == \"111001111\", \"111001111 - 1\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '91', 'Wrong'\nassert solution('1') == '9', 'Wrong'\nassert solution('9') == '1', 'Wrong'\nassert solution('999') == '991', 'Wrong'\nassert solution('9999') == '9991', 'Wrong'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n129\n''') == '991'\nassert solution('''\n119\n''') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == '321'\nassert solution('112') == '111'\nassert solution('0') == '0'\nassert solution('999') == '979'\nassert solution('2') == '99'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\nassert solution(input()) == \"zzzzzzzzzz\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"abac\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"abac\"\nassert solution(sys.stdin.read()) == \"ac\"\nassert solution(sys.stdin.read()) == \"bcdaf\""
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''abaac\nac\nzzzzzzzzzz''') == 'abac'\nassert solution('''abac\nac\nzzzzzzzzzz''') == 'abac'\nassert solution('''abaac\nac\nzzzzzzzzzz''') == 'ac'\nassert solution('''abaac\nac\nzzzzzzzzzz''') == 'zzzzzzzzzz'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n2\nac\nac\n''') == \"ac\"\nassert solution('''\n1\nzzzzzzzzzz\n''') == \"zzzzzzzzzz\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n\n''') == 'abac'\nassert solution('''\n3\nabbaac\nac\nzzzzzzzzzz\n\n''') == 'ac'\n\nassert solution('''\n4\naaaa\naaa\naaa\naaa\n\n''') == 'aaa'\nassert solution('''\n3\naaaa\naaa\naaa\naaa\n\n''') == 'aaa'\n\nassert solution('''\n4\naaaaa\naaa\naaaaa\naaa\n\n''') == 'aaa'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"5\\nabac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"5\\nabac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"5\\nabac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"5\\nabac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nabac\nac\nbccddaaf\nzzzzzzzzzz\nac''') == \"abac\"\nassert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz''') == \"ac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abac\") == \"abac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\n\n\"\"\"\n\nn = int(input())\nfor i in range(n):\n    a = input()\n    l = len(a)\n    for i in range(l):\n        for j in range(l):\n            if i+j < l:\n                print(a[i:i+j+1])\n    \n    \n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n1\naba\naa\n''') == \"ab\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n10 4\n100 9\n100 4\n123 456\n92 46\n''') == '5'\nassert solution('''\n1\n''') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('10 4') == '5'\nassert solution('13 9') == '4'\nassert solution('100 13') == '5'\nassert solution('123 456') == '333'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"333\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n10 4\n''') == '2'\nassert solution('''6\n10 9\n''') == '1'\nassert solution('''9\n10 9\n''') == '0'\nassert solution('''13\n9 9\n''') == '2'\nassert solution('''123\n4\n''') == '2'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n10 4\n13 9\n''') == '5'\nassert solution('''\n2\n100 13\n''') == '333'\nassert solution('''\n1\n2\n''') == '0'\n'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 4\\n\") == \"2\"\nassert solution(\"5\\n13 9\\n\") == \"5\"\nassert solution(\"5\\n100 13\\n\") == \"0\"\nassert solution(\"5\\n123 456\\n\") == \"333\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4') == '2'\nassert solution('13 9') == '5'\nassert solution('100 13') == '333'\nassert solution('123 456') == '0'\nassert solution('92 46') == '5'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '4'\nassert solution('''\n5\n7 4\n6 2\n7 4\n8 4\n''') == '4'"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n10 4\n''') == '2'\nassert solution('''\n5\n13 9\n''') == '5'\nassert solution('''\n5\n123 456\n''') == '0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n2 5 3 4 1\n''') == '2.0'\nassert solution('''\n4 3\n3 4 1 2\n''') == '2.0'\nassert solution('''\n4 3\n2 5 3 4 1\n''') == '2.666666666666667'\nassert solution('''\n5 2\n1 2 3 4 5\n''') == '0.5'\nassert solution('''\n2 2\n1 1\n''') == '1.0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == \"2.666666666666667\"\nassert solution('''\n4 2\n2 2 1 1\n''') == \"0.5\"\nassert solution('''\n4 3\n2 2 1 2\n''') == \"1.0\"\nassert solution('''\n5 3\n3 4 1 2 3\n''') == \"1.333333333333333\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667', 'First example'\nassert solution('''\n4 3\n3 3 1 2\n''') == '2.0', 'Second example'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 4 1 2\n''') == '2.666666666666667'\nprint('all tests passed')"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n4 3\n3 4 1 2\n    '''\n) == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''3 5\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''4 4\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''4 5\n3 4 1 2\n''') == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n3 4 1 2''') == '2.666666666666667'\nassert solution('''3 4\n3 4 1 2''') == '1.333333333333333'\nassert solution('''7 2\n5 1 1 2 3 4 5''') == '1.222222222222222'"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n4\\n1\\n2') == '2.0'"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == '1.0'\nassert solution('2\\n5') == '1.0'\nassert solution('3\\n8') == '2.0'\nassert solution('4\\n20') == '2.0'\nassert solution('5\\n30') == '3.0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2.666666666666667'\nassert solution([3, 4, 1, 2]) == '2.666666666666667'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\np = set(map(int, sys.stdin.readline().split()))"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2\\n1 2 3 4 5\\n3 2\\n4 2 1 3\\n5 2\\n4 2\\n2 1 4 3\\n1 3') == 'YES'\nassert solution('10 5 2\\n1 2 3 4 5 6 7 8 9 10\\n4 2 5 6 7\\n8 5 3 2 6 7\\n9 6 7 3 2 8\\n7 2 8 9 3 6 5 4\\n6 1 5 8 4 2 3 7\\n5 3 2 1 4 7 6 8\\n2 4 5 7 6 3 8 9\\n3 4 1 2 9 8 5 7\\n9 2 3 8 7 6 5 4\\n1 3 2 4 8 7 6 9\\n7 8 4 1 3 6 9 2\\n6 9 3 2 1 4 8 5 7\\n5 7 8 4 3 2 1 9 6\\n2 1 9 5 8 6 4 3 7\\n3 6 4 7 9 8 5 2 1\\n') == 'YES'\nassert solution('10 5 2\\n1 2 3 4 5 6 7 8 9 10\\n4 2 5 6 7\\n8 5 3 2 6 7\\n9 6 7 3 2 8\\n7 2 8 9 3 6 5 4\\n6 1 5 8 4 2 3 7\\n5 3 2 1 4 7 6 8\\n2 4 5 7 6 3 8 9\\n3 4 1 2 9 8 5 7\\n9 2 3 8 7 6 5 4\\n1 3 2 4 8 7 6 9\\n7 8 4 1 3 6 9 2\\n6 9 3 2 1 4 8 5 7\\n5 7 8 4 3 2 1 9 6\\n2 1 9 5 8 6 4 3 7\\n3 6 4 7 9 8 5 2 1\\n') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 4\n''') == 'YES'\nassert solution('''\n2 1\n2 1 2\n''') == 'YES'\nassert solution('''\n2 1\n2 1 2\n''') == 'YES'\nassert solution('''\n3 1\n2 1 2\n1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nprint(solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''))"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'NO'\n\nassert solution('''4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'YES'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'YES'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\n\nassert solution() == \"YES\\nNO\\nYES\\nNO\\nNO\\nNO\\n\"\n\nassert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\n\nassert solution() == \"YES\\nNO\\nYES\\nNO\\nNO\\nNO\\n\"\n\nassert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2 3\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 2 3 4 5 1\\n4 2\\n2 1 4 3\\n1 3\") == \"YES\"\nassert solution(\"3\\n4 1 2 3\\n5 1\\n2 1 2 3\\n1 3\") == \"YES\"\nassert solution(\"4\\n4 2 1 3\\n5 1\\n2 1 2 3\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"YES\" * int(input())\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n        '2\\n'\n        'abcd\\n'\n        'cdef\\n'\n        '\\n'\n        '3\\n'\n        'pqrs\\n'\n        'uvw\\n'\n        'xyz\\n'\n        '\\n'\n        '4\\n'\n        'cde\\n'\n        'fgh\\n'\n        'ijk\\n'\n        'lmn\\n'\n        'o'\n        ) == 'abcd'\n    \nassert solution(\n        '10\\n'\n        'abcd\\n'\n        'cdef\\n'\n        'pqrs\\n'\n        'uvw\\n'\n        'xyz\\n'\n        '\\n'\n        '3\\n'\n        'pqrs\\n'\n        'uvw\\n'\n        'xyz\\n'\n        '\\n'\n        '4\\n'\n        'cde\\n'\n        'fgh\\n'\n        'ijk\\n'\n        'lmn\\n'\n        'o'\n        ) == 'abcde'\n    \nassert solution(\n        '6\\n'\n        'bbb\\n'\n        'ccc\\n'\n        '\\n'\n        '3\\n'\n        'pqrs\\n'\n        'uvw\\n'\n        'xyz\\n'\n        '\\n'\n        '4\\n'\n        'cdef\\n'\n        'fgh\\n'\n        'ijk\\n'\n        'lmn\\n'\n        'o'\n        ) == 'cccf'\n\nassert solution(\n        '4\\n'\n        'cde\\n'\n        'fgh\\n'\n        'ijk\\n'\n        'lmn\\n'\n        'o'\n        ) == 'cde'\n    \nassert solution(\n        '1\\n'\n        'z'\n        ) == 'z'"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\nbab\"\"\") == \"bab\"\nassert solution(\"\"\"10\nooopppssss\"\"\") == \"oops\"\nassert solution(\"\"\"1\nz\"\"\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"bab\"\nassert solution(input()) == \"oops\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"Output\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nboop\") == \"b\"\nassert solution(\"2\\nab\") == \"b\"\nassert solution(\"3\\nab\") == \"b\"\nassert solution(\"4\\nab\") == \"b\"\nassert solution(\"5\\nab\") == \"b\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'\nassert solution('''\n1\nz\n''') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"10\") == \"oops\"\nassert solution(\"3\") == \"ooo\"\nassert solution(\"0\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nbaabbb\\n') == 'bab'\nassert solution('10\\nooopppssss\\n') == 'oops'\nprint(solution(input()))"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\nooopppssss\n\"\"\") == \"oops\"\n\nassert solution(\"\"\"\n6\nbaabbb\n\"\"\") == \"bab\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 10\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == '0'\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == '1'\nassert solution(\"1 0\\n\") == '0'\nassert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '1'\nprint(solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n\n'''))\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n\n''') == \"1\"\nassert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n\n''') == \"0\"\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == \"0\"\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == \"1\"\nassert solution('''\n3 1\n1 2 1\n2 3 2\n1 3 3\n\n''') == \"0\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == '2'\nassert solution('''7 5\n1 2 2\n2 3 3\n2 4 2\n1 5 2\n6 4 1\n3 6 2\n4 6 2\n5 6 3\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"1\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution(\n'''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution(\n'''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution(\n'''\n5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\\n\") == \"1\\nGB\"\nassert solution(\"7\\nRGBGRBB\\n\") == \"3\\nRGBRGBR\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\nRRR\n\n3\nRRRR\n\n4\nRRRRR\n\n5\nRRRRRRR\n\n6\nRRRRRRRR\n\n7\nRRRRRRRRRR\n\n8\nRRRRRRRRRRR\n\n9\nRRRRRRRRRRRR\n\n10\nRRRRRRRRRRRRR\n\n11\nRRRRRRRRRRRRRR''') == '3\\n' + \\\n    'RRRRRRR'\n\nassert solution('''3\nRRR\n\n2\nRRR\n\n3\nRRR\n\n4\nRRR\n\n5\nRRR\n\n6\nRRR\n\n7\nRRR\n\n8\nRRR\n\n9\nRRR\n\n10\nRRR\n\n11\nRRR\n\n12\nRRR\n\n13\nRRR\n\n14\nRRR\n\n15\nRRR\n\n16\nRRR\n\n17\nRRR\n\n18\nRRR\n\n19\nRRR\n\n20\nRRR\n\n21\nRRR\n\n22\nRRR\n\n23\nRRR\n\n24\nRRR\n\n25\nRRR\n\n26\nRRR\n\n27\nRRR\n\n28\nRRR\n\n29\nRRR\n\n30\nRRR\n\n31\nRRR\n\n32\nRRR\n\n33\nRRR\n\n34\nRRR\n\n35\nRRR\n\n36\nRRR\n\n37\nRRR\n\n38\nRRR\n\n39\nRRR\n\n40\nRRR\n\n41\nRRR\n\n42\nRRR\n\n43\nRRR\n\n44\nRRR\n\n45\nRRR\n\n46\nRRR\n\n47\nRRR\n\n48\nRRR\n\n49\nRRR\n\n50\nRRR\n\n51\nRRR\n\n52\nRRR\n\n53\nRRR\n\n54\nRRR\n\n55\nRRR\n\n56\nRRR\n\n57\nRRR\n\n58\nRRR\n\n59\nRRR\n\n60\nRRR\n\n61\nRRR\n\n62\nRRR\n\n63\nRRR\n\n64\nRRR\n\n65\nRRR\n\n66\nRRR\n\n67\nRRR\n\n68\nRRR\n\n69\nRRR\n\n70\nRRR\n\n71\nRRR\n\n72\nRRR\n\n73\nRRR\n\n74\nRRR\n\n75\nRRR\n\n76\nRRR\n\n77\nRRR\n\n78\nRRR\n\n79\nRRR\n\n80\nRRR\n\n81\nRRR\n\n82\nRRR\n\n83\nRRR\n\n84\nRRR\n\n85\nRRR\n\n86\nRRR\n\n87\nRRR\n\n88\nRRR\n\n89\nRRR\n\n90\nRRR\n\n91\nRRR\n\n92\nRRR\n\n93\nRRR\n\n94\nRRR\n\n95\nRRR\n\n96\nRRR\n\n97\nRRR\n\n98\nRRR\n\n99\nRRR\n\n100\nRRR\n\n101\nRRR\n\n102\nRRR\n\n103\nRRR\n\n104\nRRR\n\n105\nRRR\n\n106\nRRR\n\n107\nRRR\n\n108\nRRR\n\n109\nRRR\n\n110\nRRR\n\n111\nRRR\n\n112\nRRR\n\n113\nRRR\n\n114\nRRR\n\n115\nRRR\n\n116\nRRR\n\n117\nRRR\n\n118\nRRR\n\n119\nRRR\n\n120\nRRR\n\n121\nRRR\n\n122\nRRR\n\n123\nRRR\n\n124\nRRR\n\n125\nRRR\n\n126\nRRR\n\n127\nRRR\n\n128\nRRR\n\n129\nRRR\n\n130\nRRR\n\n131\nRRR\n\n132\nRRR\n\n133\nRRR\n\n134\nRRR\n\n135\nRRR\n\n136\nRRR\n\n137\nRRR\n\n138\nRRR\n\n139\nRRR\n\n140\nRRR\n\n141\nRRR\n\n142\nRRR\n\n143\nRRR\n\n144\nRRR\n\n145\nRRR\n\n146\nRRR\n\n147\nRRR\n\n148\nRRR\n\n149\nRRR\n\n150\nRRR\n\n151\nRRR\n\n152\nRRR\n\n153\nRRR\n\n154\nRRR\n\n155\nRRR\n\n156\nRRR\n\n157\nRRR\n\n158\nRRR\n\n159\nRRR\n\n160\nRRR\n\n161\nRRR\n\n162\nRRR\n\n163\nRRR\n\n164\nRRR\n\n165\nRRR\n\n166\nRRR\n\n167\nRRR\n\n168\nRRR\n\n169\nRRR\n\n170\nRRR\n\n171\nRRR\n\n172\nRRR\n\n173\nRRR\n\n174\nRRR\n\n175\nRRR\n\n176\nRRR\n\n177\nRRR\n\n178\nRRR\n\n179\nRRR\n\n180\nRRR\n\n181\nRRR\n\n182\nRRR\n\n183\nRRR\n\n184\nRRR\n\n185\nRRR\n\n186\nRRR\n\n187\nRRR\n\n188\nRRR\n\n189\nRRR\n\n190\nRRR\n\n191\nRRR\n\n192\nRRR\n\n193\nRRR\n\n194\nRRR\n\n195\nRRR\n\n196\nRRR\n\n197\nRRR\n\n198\nRRR\n\n199\nRRR\n\n200\nRRR\n\n201\nRRR\n\n202\nRRR\n\n203\nRRR\n\n204\nRRR\n\n205\nRRR\n\n206\nRRR\n\n207\nRRR\n\n208\nRRR\n\n209\nRRR\n\n210\nRRR\n\n211\nRRR\n\n212\nRRR\n\n213\nRRR\n\n214\nRRR\n\n215\nRRR\n\n216\nRRR\n\n217\nRRR\n\n218\nRRR\n\n219\nRRR\n\n220\nRRR\n\n221\nRRR\n\n222\nRRR\n\n223\nRRR\n\n224\nRRR\n\n225\nRRR\n\n226\nRRR\n\n227\nRRR\n\n228\nRRR\n\n229\nRRR\n\n230\nRRR\n\n231\nRRR\n\n232\nRRR\n\n233\nRRR\n\n234\nRRR\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\nRRRRR\n\n\"\"\") == \"GRB\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\nassert solution(\"RR\") == \"1\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nRGBRBB\n''') == '4'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n    RR\n    ''') == '1'\nassert solution('''7\n    RRGGRBB\n    ''') == '3'\nassert solution('''6\n    RGRB\n    ''') == '1'\nassert solution('''7\n    RGRB\n    ''') == '1'\nassert solution('''6\n    RGR\n    ''') == '1'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"RR\") == \"1\"\nassert solution(\"RRR\") == \"2\"\nassert solution(\"RRRR\") == \"0\"\nassert solution(\"RRRRR\") == \"1\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('4\\n100000000.0 JPY\\n100.00000000 BTC\\n') == '49810000000000.00000000'\nprint(solution(input()))\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"4\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"5\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"6\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"3\\n10.1 JPY\\n1.0 BTC\\n\") == \"20.0\"\nassert solution(\"4\\n1.5 JPY\\n1.4 BTC\\n\") == \"8.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n100000000 JPY\\n10.00000000 BTC\") == \"500000000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n3.05863 USD\\n0.556965 BTC\") == \"48.2357\"\nassert solution(\"2\\n3.05863 USD\\n0.556965 BTC\") == \"48.2357\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\") == \"453050.0\"\nassert solution(\"3\\n0.10000000 BTC\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\\n7000 JPY\") == \"48000.0\""
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n0.10000000 BTC\\n10000 JPY\") == \"48000.0\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1,3,2,4]) == \"2\"\nassert solution([1,2,3,4]) == \"1\"\nassert solution([1,2,3,4,5,6,7]) == \"5\"\nassert solution([1,2,3,4,5,6,7,8]) == \"7\"\nassert solution([1,2,3,4,5,6,7,8,9]) == \"8\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n''') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"2 5\") == \"6\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1\n    1\n    2\n    3\n    4''') == '3'\n\nassert solution('''4 4\n    1\n    2\n    3\n    4''') == '2'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '', 'Input cannot be blank'\nassert solution('4 2') == '3', 'Input must be an integer'\nassert solution('1') == '0', 'Input must be an integer'\nassert solution('2') == '1', 'Input must be an integer'\nassert solution('3') == '2', 'Input must be an integer'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"8\"\nassert solution(\"11\") == \"9\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\") == \"3\"\nassert solution(\"10\\n5\") == \"9\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'\nassert solution('10 8') == '7'\nassert solution('2') == '0'"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"10 3\") == \"8\"\nassert solution(\"4 1\") == \"4\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ip') == 'i'\nassert solution('cc') == 'i'\nassert solution('ip cc') == 'iip'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nip cc\n''') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"123\"\nassert solution(\"4\") == \"1234\"\nassert solution(\"5\") == \"12345\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"ipcc\""
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'icpc'"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"333\""
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ip\") == \"icpc\"\nassert solution(\"ip cc\") == \"icpc\""
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'icpc'"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\na\nb\nc\nd\ne\n\"\"\") == \"abcde\"\nassert solution(\"\"\"\n4\na\nb\nc\nd\ne\n\"\"\") == \"acdb\"\nassert solution(\"\"\"\n7\nabc\nabc\nabc\nabc\nabc\nabc\nabc\n\"\"\") == \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AB') == 'No'\nassert solution('AB') == 'No'\nassert solution('A') == 'Yes'\nassert solution('ABB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"BA\") == \"Yes\"\nassert solution(\"AA\") == \"No\"\nassert solution(\"BB\") == \"No\"\nassert solution(\"AB\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"BAB\") == \"No\"\nassert solution(\"BBB\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"AAA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"BAB\") == \"Yes\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRRRR\") == \"0\"\nassert solution(\"RRR\") == \"1\""
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RRS') == '2'\nassert solution('RDR') == '3'\nassert solution('RDRR') == '4'\n\nWe have weather records at AtCoder Town for some consecutive three days. A string of length 3, S, represents the records - if the i-th character is S, it means it was sunny on the i-th day; if that character is R, it means it was rainy on that day.\n\nFind the maximum number of consecutive rainy days in this period.\n\n-----Constraints-----\n - |S| = 3\n - Each character of S is S or R.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the maximum number of consecutive rainy days in the period.\n\n-----Sample Input-----\nRRS\n\n-----Sample Output-----\n2\n\nWe had rain on the 1-st and 2-nd days in the period. Here, the maximum number of consecutive rainy days is 2, so we should print 2.\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('R') == '1'\nassert solution('RR') == '2'\nassert solution('RRRRRRR') == '3'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RRRRRRRR') == '4'\n\n'''\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSSSS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSSSSSSSS') == '3'\nassert solution('RRSS') == '1'\nassert solution('RS') == '1'\nassert solution('R') == '1'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRS') == \"2\""
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '2'\nassert solution('RRRR') == '3'\nassert solution('RRRRRRRRRRRRRR') == '5'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRS') == '2'\nassert solution('RRS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RRR') == '2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"2 3 1 4\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 4\") == \"4 3 2\"\nassert solution(\"1 3 3\") == \"2 3 1\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n\") == \"3 1 2\"\nassert solution(\"4 5 6\\n\") == \"6 5 4\"\nassert solution(\"7 8 9\\n\") == \"9 8 7\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"2 3 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"\n\n---Explanation---\nExample 1:\n\nInput:\n1 2 3\n\nOutput:\n3 1 2\n\nExplanation:\nA = 1\nB = 2\nC = 3\n\nSwap the contents of boxes A and B.\nSwap the contents of boxes A and C.\nSwap the contents of boxes A and C.\nAfter the contents of A and B are swapped, A, B, and C contain 2, 1, and 3, respectively.\nAfter the contents of A and C are swapped, A, B, and C contain 3, 1, and 2, respectively.\nAfter the contents of A and C are swapped, A, B, and C contain 3, 1, and 2, respectively.\nExample 2:\n\nInput:\n3 2 1\n\nOutput:\n2 3 1\n\nExplanation:\nA = 3\nB = 2\nC = 1\n\nSwap the contents of boxes A and C.\nSwap the contents of boxes A and B.\nSwap the contents of boxes A and C.\nAfter the contents of A and C are swapped, A, B, and C contain 2, 1, and 3, respectively.\nAfter the contents of A and B are swapped, A, B, and C contain 2, 1, and 3, respectively.\nAfter the contents of A and C are swapped, A, B, and C contain 2, 1, and 3, respectively.\n'''\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 1 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\n---Submission---\nfrom sys import stdin"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\"\"\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n''') == '''\n3 1 2'''"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\""
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\""
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 50') == '50'\nassert solution('30 100') == '50'\nassert solution('30 50') == '100'\nassert solution('30 20') == '60'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"30 100\") == \"100\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"15 5\") == \"15\"\nassert solution(\"20 5\") == \"30\"\nassert solution(\"10 5\") == \"25\"\nassert solution(\"1 5\") == \"50\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"20 50\") == \"50\"\nassert solution(\"21 9\") == \"21\"\nassert solution(\"22 21\") == \"22\"\nassert solution(\"23 20\") == \"23\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10') == '20', 'First'\nassert solution('100 10') == '100', 'Second'\nassert solution('30 100') == '140', 'Third'\nprint('All tests passed!')\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '4'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 10') == '50'"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30 100') == '100'\n\n\"\"\""
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"20 15\") == \"25\"\nassert solution(\"-2 5\") == \"25\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 4\") == \"6\"\n\n---Output---\n0.0\n5.0\n6.0\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+-++''') == '2'\nassert solution('''+-++''') == '2'\n\nimport unittest\n\nclass Test_Solution(unittest.TestCase):\n    def test_1(self):\n        self.assertEqual(solution('''+-++'''), '2')\n\n    def test_2(self):\n        self.assertEqual(solution('''-+-'''), '2')\n    \n    def test_3(self):\n        self.assertEqual(solution('''-+-'''), '2')\n\n    def test_4(self):\n        self."
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\n\n---Sample Testcase---\nTestcase 1\n\nInput:\n+-++\n\nOutput:\n2\n\n\n--Python3--\nimport io\nimport unittest\nfrom collections import Counter\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        from solution import solution\n        io_mock = io.StringIO(\"+-++\")\n        solution(io_mock)\n        self.assertEqual(io_mock.getvalue(), \"2\")"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\nassert solution('-+--') == '2'\nassert solution('-++-') == '1'\nassert solution('-++--') == '0'"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2'\nassert solution('-++') == '2'\nassert solution('+-') == '1'\nassert solution('-+') == '0'\nassert solution('+-') == '1'"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--++-\") == \"2\"\n\nn=int(input())\nfor i in range(n):\n    s=input()\n    print(solution(s))"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/06/30\") == \"TBD\""
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2019/04/29\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/05/05\") == \"TBD\"\nassert solution(\"2019/05/05\") == \"TBD\"\nassert solution(\"2020/03/30\") == \"TBD\"\nassert solution(\"2020/07/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2019/05/31\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2019/04/30\") == \"Heisei\"\nassert solution(\n    \"2019/04/29\") == \"TBD\""
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/28') == 'TBD'\nassert solution('2019/04/29/') == 'TBD'\nassert solution('2019/04/30/') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'TBD'\nassert solution('2019/03/30') == 'TBD'\nassert solution('2019/03/30') == 'TBD'\nassert solution('2019/03/29') == 'TBD'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"14\"\nassert solution(t) == \"9\"\nassert solution(s2) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '18'\n    '2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10'\n) == '14'\nassert solution(\n    '10'\n    '6 6 6 3 6 1000000000 3 3 6 6'\n) == '9'\nassert solution(\n    '3'\n    '1337 1337 1337'\n) == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10\n''') == '14'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''\n18\n
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 10 10 10 10\\n\") == \"14\"\nassert solution(\"4\\n6 6 6 3 6\\n\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '9'\nassert solution('''\n10\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10\n''') == '14'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2 1 3 2\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3 1 2\""
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution(sys.stdin.read())) == \"3\\n1 3 2\\n\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 2 1 3 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10\") == \"9\""
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n20 7\n1 2 3 2 1 3 2 1 1 2 3 3 2 1 2 3 1 1 1 1 1 1 1 1 1 2 3 2 1 2 1 2 1 1 1 1 1 1 1 2 3 2 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2 3 3 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2 2 1'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"10 4\") == \"3\""
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2 1\"\nassert solution(\"10 4\") == \"3 1 2\""
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution(stdin='5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '3'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '1 2 3 4'\nassert solution('1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n\") == \"\"\nassert solution(\"5\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"3 2\"\nassert solution(\"8\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"2 4\""
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '3 2'"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 4 8 2 4') == '1'\nassert solution('5 4\\n8\\n5\\n14\\n10') == '3 2'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14') == '3 2'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1 -1 3 2\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"3 2\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"You didn't pass the test\"\nassert solution(\"5 4\\n8\\n\") == \"1\", \"Output doesn't match\"\nassert solution(\"2 4 8 2 4\\n8\\n\") == \"1\", \"Output doesn't match\""
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n4\n''') == '1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2 3'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n3 8\n''') == \"21\"\nassert solution('''\n5 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n2 6 7\n3 8\n''') == \"0\"\nassert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n3 8\n''') == \"0\"\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n2 6 7\n3 8\n''') == \"0\"\nassert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n3 8\n''') == \"21\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\n\"\"\"\n) == \"21\"\nassert solution(\n\"\"\"\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\n''') == '21'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"21\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n1 2 3\\n2 6 7') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"21\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"21\"\nassert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == \"0\"\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == \"0\""
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\"\n) == \"21\"\nassert solution(\n    \"\"\"\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"0\"\nprint(solution(s))"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 4 6 6 6\n\nOutput\n2\n1 2 3\n1 1 2\n\nInput\n3\n2 8 10\n\nOutput\n2\n2 2 1 \n2 3 2 \n\nInput\n4\n1 1 1 1\n\nOutput\n0\n''') == '''2\n1 2 3\n1 1 2\n'''"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"2 2 1\""
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\n2 4 6 6 6\n''') == '2'\nassert solution(\n'''\n3\n2 8 10\n''') == '2'\nassert solution(\n'''\n4\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2 4 6 6 6\") == \"2 2 1 3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"2\"\n\nassert solution() == \"2\"\n\nassert solution() == \"2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n3 2 4\n4 5 6\n1 1\n''') == '2'\nassert solution('''\n1 2 1\n1 2\n''') == '2'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n1 1 2 2 3\n1 2 3 2 4\n1 3 4 2 5\n1 2 6 2 8\n1 2 8 6 2\n1 4 2 6 2\n1 6 2 8 2\n1 8 2 6 2\n1 6 2 8 2\n1 4 2 6 2\n1 2 6 2 8\n1 2 8 6 2\n1 4 6 2 8\n1 6 2 8 2\n1 8 2 6 2\n1 4 6 2 8\n1 2 8 6 2\n1 6 8 2 6\n1 4 8 2 6\n1 8 6 2 8\n1 6 2 8 6\n1 4 8 2 6\n1 2 6 8 2\n1 8 2 6 2\n1 2 8 6 2\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 6 2\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 6 2\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 2\n1 4 6 2 8\n1 2 6 2 8\n1 6 8 2 2\n1 4 6 2 8\n1 6 8 2 2\n1 8 2 6 2\n1 6 2 8 2\n1 4 2 6 8\n1 6 2 8 2\n1 8 2 6 2\n1 6 8 2 6\n1 4 8 2 6\n1 2 6 8 2\n1 8 6 2 8\n1 4 6 2 8\n1 2 8 6 2\n1 6 8 2 6\n1 4 8 2 6\n1 8 6 2 8\n1 6 2 8 2\n1 4 8 2 6\n1 6 8 2 2\n1 8 6 2 2\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 6 2\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 2\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 6\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 8 2 8\n1 2 6 8 2\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 2 6\n1 4 8 2 6\n1 6 8 2 8\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 4 6 8 2\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 6\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 4 6 8 2\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 6 8 2\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 8 2 6\n1 4 8 2 6\n1 6 2 8 2\n1 8 2 6 6\n1 4 6 8 2\n1 6 8 2 8\n1 2 6 8 2\n1 4 8 2 6\n1 6 8 2 8\n1 2"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(in1) == out1\nassert solution(in2) == out2"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '0'\nassert solution('5 1') == '1'\nassert solution('10101') == '2'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0\n''') == '1'\nassert solution('''\n7 1\n0110011\n0110010\n01110111\n01101000\n01101011\n00110101\n01001111\n''') == '2'\nassert solution('''\n7 1\n0110011\n0110010\n01110111\n01101000\n01101011\n00110101\n01001111\n0\n''') == '2'\nassert solution('''\n7 1\n0110011\n0110010\n01110111\n01101000\n01101011\n00110101\n01001111\n1\n''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n001\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''6 1\n000000\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''6 2\n01010\n01010\n01010\n01010\n01010''') == '2'\nassert solution('''6 3\n10010\n01010\n10010\n01010\n01010''') == '3'\nassert solution('''6 1\n00100\n00101\n00100\n00101\n00100''') == '1'\n\n'''\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '2'\nassert solution('6 1') == '1'\nassert solution('6 2') == '0'\nassert solution('5 1') == '1'\nassert solution('6 2') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '0'\nassert solution('5 1') == '1'\nassert solution('10101') == '1'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\n'''\nComplete the solution so that it returns the minimum number of segments needed to remove all bad points.\n''')"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n2 3\n3 3\n''') == '3\\n4\\n1 2 3\\n'"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 4 5\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''5 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 1\") == \"1 4 5\"\nassert solution(\"6 1\") == \"1 4 5\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\n\"\"\") == \"4\""
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n11 11') == '3'\nassert solution('5 1\\n29 30') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()[:-1]\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n10 20\n10 10\n''') == '3'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\n''') == '4'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '3'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10\"\nassert solution(\"3\\n4\\n5 6 15 30\") == \"31\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n5 6 15 30') == '30'\nassert solution('2\\n4\\n10 6 30 15') == '31'\nassert solution('3\\n3 4 6') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15''') == '31'\nassert solution('''1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '30'\nassert solution([\n    [5, 6, 15, 30],\n    [4, 6, 30, 15],\n    [3, 4, 6,]\n]) == '31'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n\nassert solution('''5\n2\n1 5\n2 5\n3 5\n4 5\n''') == '10'\n\nassert solution('''6\n3\n5 8 3 2 9\n1 2 3\n5 6 7\n4 5 8\n8 9 10\n''') == '3'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n\nassert solution('''\n1\n1\n2\n''') == '2'\n\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n\nassert solution('''\n1\n1\n2\n''') == '2'\n\nassert solution('''\n2\n1\n2\n''') == '1'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3\n1\n2\n\n''') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"11\"\nassert solution(s2) == \"4\"\nprint(solution(s3))\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\"\n) == \"30\\n31\\n10\\n\""
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\nassert solution('''\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"1\"\nassert solution('''\n5\n1 2 3 4 5\n1\n2\n3\n4\n5\n''') == \"2\"\nassert solution('''\n6\n1 2 3 4 5 6\n1\n2\n3\n4\n5\n6\n''') == \"1\"\nassert solution('''\n9\n1 2 3 4 5 6 7 8 9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == \"2\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"42\") == \"1\""
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\"\nassert solution(\"5\\n2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\"\nassert solution(\"5\\n2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\nassert solution('''\n3\n5\n1 2 3 4 5\n1\n1\n2\n1\n2\n''') == \"1\"\nassert solution('''\n4\n5\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\nassert solution('''\n4\n5\n1 2 3 4 5\n1\n1\n2\n1\n2\n''') == \"1\"\nassert solution('''\n4\n5\n1 2 3 4 5\n1\n1\n2\n1\n2\n''') == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n2\n''') == \"1\"\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n4\n''') == \"2\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2 3\n5\n2 3 4 99 100''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100''') == '2'"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2'\n\nassert solution(\n    '6\\n4\\n5\\n2\\n4\\n3\\n5\\n3\\n4\\n5\\n6\\n1') == '2'\n\nassert solution(\n    '1\\n4\\n2\\n5\\n3\\n3\\n1\\n1\\n3\\n2\\n3\\n5\\n1\\n1\\n2\\n5\\n1\\n1\\n1\\n1') == '1'"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '4\\n'\n    '4\\n'\n    '2 10 1 20\\n'\n    '2\\n'\n    '3 6\\n'\n    '5\\n'\n    '2 3 4 99 100\\n'\n    '1\\n'\n    '42\\n'\n    ) == '2\\n1\\n2\\n1'\n\nassert solution(\n    '4\\n'\n    '4\\n'\n    '2 10 1 20\\n'\n    '2\\n'\n    '3 6\\n'\n    '5\\n'\n    '2 3 4 99 100\\n'\n    '1\\n'\n    '42\\n'\n    ) == '2\\n1\\n2\\n1'\n\nassert solution(\n    '4\\n'\n    '4\\n'\n    '2 10 1 20\\n'\n    '2\\n'\n    '3 6\\n'\n    '5\\n'\n    '2 3 4 99 100\\n'\n    '1\\n'\n    '42\\n'\n    ) == '1\\n1\\n2\\n1'\n\nassert solution(\n    '4\\n'\n    '4\\n'\n    '2 10 1 20\\n'\n    '2\\n'\n    '3 6\\n'\n    '5\\n'\n    '2 3 4 99 100\\n'\n    '1\\n'\n    '42\\n'\n    ) == '2\\n1\\n2\\n1'\n\nassert solution(\n    '4\\n'\n    '4\\n'\n    '2 10 1 20\\n'\n    '2\\n'\n    '3 6\\n'\n    '5\\n'\n    '2 3 4 99 100\\n'\n    '1\\n'\n    '42\\n'\n    ) == '1\\n1\\n2\\n1'"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''2 3 2 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''3 3 3 3\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\n''')\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\\nNO\\nNO\\nYES\"\nassert solution('''\n3\n2 3\n1 1\n3 3\n''') == \"YES\\nNO\\nNO\"\nassert solution('''\n8\n2 1\n1 3\n5 4\n2 3\n3 3\n1 2\n3 4\n5 2\n2 4\n''') == \"YES\\nYES\\nNO\\nYES\"\nassert solution('''\n7\n2 1\n1 3\n5 4\n2 3\n3 3\n1 2\n3 4\n5 2\n2 4\n''') == \"YES\\nYES\\nNO\\nYES\"\nassert solution('''\n3\n3 3\n3 3\n3 3\n''') == \"YES\\nYES\\nNO\\nYES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\n'\nassert solution('''4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nNO\\nNO\\nYES\\n'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"6 6 6 6 6 6 6\") == \"NO\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n1 2 3\n3 3 5\n3 3 5\n''') == 'YES'\n\nassert solution('''\n2\n1 2 3\n1 2 3\n''') == 'NO'\n\nassert solution('''\n5\n2 3 4 5\n2 3 4 5\n''') == 'YES'\n\nassert solution('''\n5\n1 2 3 4 5\n2 3 4 5\n''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\nassert solution('1 5 10') == 'YES'"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 6 27\n1 2 3 6\n3 3 5 18\n1 2 3 6\n1 2 3 6\n1 2 3 6\n1 2 3 6\n1 2 3 6\n3 3 5 18\n''') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 3\n3 2 4''') == 'YES'\nassert solution('''1 2 3\n3 2 4''') == 'NO'\nassert solution('''1 2 3\n1 2 3''') == 'YES'\nassert solution('''2 1 3\n3 2 4''') == 'YES'\nassert solution('''1 1 3\n3 2 4''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\""
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 1 4\") == \"YES\"\nassert solution(\"3 3 1 2\") == \"YES\"\nassert solution(\"5 1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 1\") == \"NO\""
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0\n''') == 'YES'\n\nassert solution('''\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'NO'\nassert solution('5 0 1 2 3 4') == 'YES'\nassert solution('5 1 2 3 4') == 'NO'\nassert solution('1 1 2 3 4') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 'NO', \"Empty\"\nassert solution(\"1\") == 'YES', \"One\"\nassert solution(\"2\") == 'YES', \"Two\"\nassert solution(\"3\") == 'YES', \"Three\"\nassert solution(\"4\") == 'YES', \"Four\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\"\n\nassert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\""
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 3 2 7 1 4 3') == 'YES'\nassert solution('5 0 1 2 3 4') == 'YES'\nassert solution('0 1 2 3 4') == 'NO'\nassert solution('5 2 1 3 4') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"4 3 1 5 3\") == \"YES\"\nassert solution(\"0 1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5 2 1 4\n''') == 'YES'\nassert solution('''\n5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''\n5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''\n5\n5 5 5 5 5\n''') == 'NO'\nassert solution('''\n5\n1 1 2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"YES\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 4\\n\"\n    \"7 1 1\\n\"\n    \"2 1 1\\n\"\n    \"4 0 1\\n\"\n    \"8 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 1 1\\n\"\n    \"1 0 1\\n\"\n    \"3 0 0\\n\"\n) == \"18\"\n\nassert solution(\n    \"5 3\\n\"\n    \"3 0 0\\n\"\n    \"2 1 0\\n\"\n    \"3 1 0\\n\"\n    \"5 0 1\\n\"\n    \"3 0 1\\n\"\n) == \"8\""
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"18\"\nassert solution([\n  7, 1, 1,\n  2, 1, 1,\n  4, 0, 1,\n  8, 1, 1,\n  1, 0, 1,\n  1, 1, 1,\n  1, 0, 1,\n  3, 0, 0,\n]) == \"18\"\nassert solution([\n  3, 0, 0,\n  2, 1, 0,\n  3, 1, 0,\n  5, 0, 1,\n  3, 0, 1,\n]) == \"-1\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18', 'easy'\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8','medium'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"6 0 0\") == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\n\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\nassert solution('''\n4 2\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\n\nassert solution('''\n5 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '-1'\nassert solution('''\n6 2\n5 1 0\n5 0 0\n5 1 0\n6 0 0\n5 0 0\n5 0 0\n''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"18\"\nassert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\""
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\"\n) == \"7\"\nassert solution(\n    \"\"\"\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\"\n) == \"7\"\nassert solution(\n    \"\"\"\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n3 1\n1 2 2\n3 4\n5 2 5\n\"\"\"\n) == \"-1\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n\") == \"7\"\nassert solution(\"4\\n6 2\\n1 6\\n3 5\\n5 2 5\\n\") == \"6\"\nassert solution(\"4\\n2 2\\n1 6\\n3 5\\n5 2 5\\n\") == \"7\""
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2\\n6\\n-1\\n7'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_string) == example_output\nassert solution(input_string) == output"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n2 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\n''') == \"7\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '6'\nassert solution('3') == '-1'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\"\nassert solution(\"4\\n2 3\\n4 5\\n1 5\\n1 5\\n6 7\\n8 9\\n8 8\\n10 9\\n\") == \"-1\"\nassert solution(\"10\\n1 1\\n1 2\\n2 3\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"10\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\"\nassert solution(\"4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"6\"\nassert solution(\"4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\nassert solution(\"2 2\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\nassert solution(\"4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"-1\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\"\n    ) == \"5\"\nassert solution(\n    \"12\"\n    ) == \"0\"\nassert solution(\n    \"15\"\n    ) == \"3\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\n\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '4'\nassert solution('3') == '0'\nassert solution('12') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution('1') == '0'"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"12\") == \"1\""
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8 15 16 23') == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 8 15 16 23\") == \"5\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '1'\nassert solution('''7\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'\nassert solution('''8\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'\nassert solution('''9\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n3\\n2\\n92\\n87654322\\n9150\""
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"13 42\") == \"92\"\nassert solution(\"18 4\") == \"87654322\"\nassert solution(\"1337 420\") == \"9150\"\nassert solution(\"123456789 1000000000\") == \"0\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"13 42\") == \"92\"\nassert solution(\"18 4\") == \"87654322\"\nassert solution(\"1337 420\") == \"9150\"\nassert solution(\"123456789 1000000000\") == \"100500\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\n\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3\n\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92\n'''\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n5 5\n''') == \"0\"\n\nassert solution('''\n6\n5 5\n''') == \"3\"\n\nassert solution('''\n6\n6 6\n''') == \"0\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n7\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '1'\nassert solution('''\n8\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '1'\nassert solution('''\n6\n5 5\n9 1\n8 9\n13 37\n123 4\n100 5\n''') == '1'\nassert solution('''\n6\n5 5\n9 1\n8 9\n13 37\n123 4\n100 5\n''') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5 5\") == \"0\"\nassert solution(\"2\\n5 5\") == \"3\"\nassert solution(\"3\\n5 5\") == \"2\"\nassert solution(\"4\\n5 5\") == \"92\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n3 0 7\n2 0 9\n''') == '2'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '12339'\nassert solution(input()) == '0'\nassert solution(input()) == '15'\nassert solution(input()) == '54306'\nassert solution(input()) == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\nprint(solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''))\nassert solution('''\n8 7 5 6\n7 2 4\n0 3 1\n''') == \"7\"\nprint(solution('''\n8 7 5 6\n7 2 4\n0 3 1\n'''))\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n3\n5 0 2\n7 2 4\n9 7 3\n''') == '5'\nassert solution('''\n3\n5 0 2\n7 2 4\n9 7 3\n''') == '7'\nassert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '1'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n'''"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\nassert solution('''\n6 4 111\n1 0 4\n10 5 15\n2 0 999999999\n''') == \"0\"\nassert solution('''\n1 0 4\n10 5 15\n1 0 999999999\n''') == \"9\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"12339\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 2\\n\") == \"8\"\nassert solution(\"7 3\\n\") == \"4\"\nassert solution(\"7 3\\n\") == \"4\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '6'\nassert solution('7 3') == '4'\nassert solution('8 2') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 1\\n1 1 1 1 1 1 1\\n') == '1'\nassert solution('7 1\\n1 1 1 1 1 1 1\\n') == '0'"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''7 3\n1 2 2 3 2 4 5\n\n''') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution(['']) == ''"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''\n8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\nassert solution('''7 4\n1 2 2 3 2 4 5''') == '4'\nassert solution('''9 3\n1 2 3 4 5 6 7 8''') == '9'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''\n7 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"7 3\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 4\\n1 2 2 3 2 4 5 10\") == \"4\"\nassert solution(\"7 5\\n1 2 2 3 2 4 5 6 10\") == \"7\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"aBC\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '23'\nassert solution('4 5 6') == '6 5'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"B\"\nassert solution(\"2 3\") == \"c\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('3 1 2') == '3 1 2'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"c\"\nassert solution(\"2\") == \"b\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 A\") == \"a2 A\"\nassert solution(\"1 3 A\") == \"a3 A\"\nassert solution(\"2 4 B\") == \"b4 B\"\nassert solution(\"3 3 B\") == \"b3 B\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'aBC', 'wrong answer'"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'aBC'"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\nAB\") == \"aB\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2', 'ABC') == 'abC'\nprint('All tests passed!')"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\") == '3 4 6 1 5 2'\nassert solution(\"5\\nkhabarovsk 10\\nmoscow 20\\nkazan 40\\nmoscow 60\\nkazan 35\") == '4 6 1 5 2 3'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('1') == '1'\nassert solution('7') == '1 2 3 4 5 6 7'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3,4,6,1,5,2\"\nassert solution(\"15\") == \"14,15,16,17,18\"\nassert solution(\"6\") == \"3,4,6,1,5,2\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '''3\n4\n6\n1\n5\n2'''\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('4') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nmoscow 10\\nmoscow 60\\nmoscow 40\\nmoscow 60\\nmoscow 40\\nkazan 35\\nkazan 50\\nkazan 20\\nmoscow 10') == '1 2 3 4 5 6'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3 4 6 1 5 2\"\nassert solution(input()) == \"2 4 6 3 5 1\""
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 900') == 'Yes'\n\n\"\"\"\nK, X = map(int, stdin.split())"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1000') == 'Yes'\nassert solution('1 1000') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 500\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes', 'Sample assertion error.'\nassert solution('1 5') == 'No', 'Sample assertion error.'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 900\\n') == 'Yes'\nassert solution('10 4\\n') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 500\") == \"Yes\"\nassert solution(\"1 900\") == \"Yes\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('4 2') == '0.75'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\nassert solution(\"4 5\") == \"0.145833333333\""
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 10\n\"\"\"\n) == \"0.1458333333\"\n\nassert solution(\n\"\"\"3 10\n2\n1\n2\n2\n3\n3\n1\n\"\"\"\n) == \"0.2857142857\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '0.145833333333'"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5') == '0.145833333333'\nassert solution('10 10') == '0.145833333333'\nassert solution('2 6') == '0.145833333333'\nassert solution('10 10') == '0.145833333333'"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 10\"\n    ) == \"0.145833333333\"\nassert solution(\n    \"100 50\"\n    ) == \"0.0\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('4 10') == '0.145833333333'\nassert solution('6 10') == '0.145833333333'\nassert solution('7 10') == '0.145833333333'\nassert solution('8 10') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.145833333333\"\nassert solution(\"2\") == \"0.145833333333\"\nassert solution(\"3\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 20\") == \"0.0888888888888\"\nassert solution(\"3 100\") == \"0.0833333333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\""
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"TUE\") == \"2\"\nassert solution(\"WED\") == \"2\"\nassert solution(\"THU\") == \"3\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '2'\nassert solution('MON') == '3'\nassert solution('TUE') == '4'\nassert solution('WED') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('SAT') == '1'\nassert solution('WED') == '2'\nassert solution('SUN') == '0'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '0'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"MON\") == 2\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 4\nassert solution(\"THU\") == 5\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"TUE\") == \"0\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\nassert solution(\"2 10 20\") == \"30\\n50\""
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\"\nassert solution(\"2 10 20\") == \"50\"\n\"\"\"\nimport math\n\nr, D, *_ = list(map(int, stdin.split()))\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 10 20\n''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250''')\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nprint(solution(input()))\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(\"2 20 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\nassert solution(\"2 10 30\") == \"50\\n90\"\nassert solution(\"2 10 50\") == \"90\\n170\"\nassert solution(\"2 10 100\") == \"170\\n330\"\nassert solution(\"2 10 200\") == \"330\\n650\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''\n3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''\n3\n4 1 2\n''') == '0'"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''3\n4 1 2\n''') == '4'\nassert solution('''5\n1 3 1 1 4\n''') == '5'"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) in {0, 5}\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n3\n4 1 2\n''') == '4'\nassert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 1 1 4') == \"5\"\nassert solution('3\\n4 1 2') == \"4\"\nassert solution('5\\n1 3 2') == \"0\"\nassert solution('2\\n1 2') == \"0\""
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3\n100 100 100''') == 'YES'\nassert solution('''5\n2 5 8\n10 20 20''') == 'NO'\nassert solution('''5\n2 5 7\n5 10 7''') == 'YES'\nassert solution('''5\n3 2 3\n3 4 5\n10 20 15''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1 1000000000 1000000000''') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000'''"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\nYES\\nYES\\n1 1 1000000000\\n'"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n3 2 1\\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nYES\\n1 1 1000000000\\n\"\nassert solution('''\n5\n1 2 3\n1 2 3\n2 3 1\n1 3 2\n3 2 1\n''') == \"NO\\n1 2 3\\nNO\\n1 2 3\\nNO\\nNO\\nYES\\n1 3 2\\nYES\\n1 3 2\\nYES\\n1 3 2\\nYES\\n\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3\n2\n''') == 'YES'\nassert solution('''\n1\n2\n1\n''') == 'NO'\nassert solution('''\n2\n1\n2\n''') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\"\nassert solution('''5\n3 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == \"NO\"\nassert solution('''2\n2 3 3\n1 1 1\n1 1 1\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 3''') == 'YES'\nassert solution('''100 100 100''') == 'YES'\nassert solution('''50 49 49''') == 'YES'\nassert solution('''10 30 20''') == 'YES'\nassert solution('''1 1000000000 1000000000''') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == \"4\"\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == \"5\"\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '5'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\n\nassert solution('5 1 4\\n5 2 3 4 1') == '4'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '1'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"5\"\nassert solution(\"5 3 3\") == \"5\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '1'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'\nassert solution('''\n5 3 3\n2 2 2 2 2\n''') == '4'\nassert solution('''\n5 3 3\n1 2 3 1 2\n''') == '2'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n'\n'a b c\\n'\n'f a d\\n') == '1'\n\nassert solution('4 2\\n'\n'a b\\n'\n'a b\\n'\n'a b\\n'\n'a b\\n') == '0'\n\nassert solution('9 2\\n'\n'a a a\\n'\n'b b\\n'\n'a a a\\n'\n'b b\\n'\n'a a a\\n'\n'b b\\n'\n'a a a\\n'\n'b b\\n') == '10'\n\nassert solution('8 3\\n'\n'a a a\\n'\n'a b\\n'\n'a a a\\n'\n'a b\\n'\n'a a a\\n'\n'a b\\n'\n'a a a\\n') == '16'\n\nassert solution('5 3\\n'\n'a a\\n'\n'a b\\n'\n'a a\\n'\n'a b\\n'\n'a a\\n'\n'a b\\n'\n'a a\\n') == '6'"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2\\nabacaba\\nabacaba\\nabacaba\\nabacaba\\nabacaba') == '12'\nassert solution('7 3\\nabacaba\\nf a\\nd\\nf a\\nb\\nf a\\nc\\nd\\nf a\\nd\\nf a') == '21'\nassert solution('7 1\\na') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_()) == \"12\"\nassert solution(input_(\"\")) == \"0\"\nassert solution(input_(\"7 1\")) == \"0\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\nabacaba\na b\n''') == \"12\"\nassert solution('''\n10 3\nsadfaasdda\nf a d\n''') == \"21\"\nassert solution('''\n7 1\naaaaaaa\nb\n''') == \"0\"\nassert solution('''\n7 1\naaaaaaa\na\n''') == \"3\""
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '12'\nassert solution('\\n'.join([\"7 2\", \"abacaba\", \"a b\", \"3 4\", \"f a d\", \"b\", \"b\"])) == '21'"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"15\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"7 2\") == \"12\"\nassert solution(\"10 3\") == \"15\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n\n>>> solution(\"3 2\\nabacaba\\na b\")\n12\n>>> solution(\"10 3\\nsadfaasdda\\nf a d\")\n21\n>>> solution(\"7 1\\naaaaa\\nb\")\n0\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n-1 -2 -1 -3') == '6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n\nassert solution('''\n5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n\nassert solution('''\n5\n-1 -2 -1 -3\n10\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\"\n) == \"2\\n-1\\n6\\n-2999999997\\n\"\n\nassert solution(\n\"\"\"\n2\n2\n1 -1\n3\n-1 -2\n\"\"\"\n) == \"2\\n-1\\n3\\n-2\\n\"\n\nassert solution(\n\"\"\"\n3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\"\n) == \"2\\n-1\\n6\\n-2999999997\\n\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''\n1\n1\n-1\n''') == '1\\n-1'\nassert solution('''\n3\n-1\n-2\n1\n''') == '1\\n-1\\n1'\nassert solution('''\n4\n-1\n-1\n-1\n''') == '1\\n-1\\n-1\\n-1'\n''') == '0\\n0\\n0\\n0'\n''') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4', solution('3')\nassert solution('4') == '4', solution('4')\nassert solution('10') == '4', solution('10')\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n\n'''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\") == \"2\"\nassert solution(\"4\\n4\\n-1 -2 -1 -3\") == \"6\"\nassert solution(\"10\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\") == \"-2999999997\""
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''5\n5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n''') == '-1'\nassert solution('''6\n5\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6') == '4 1\\n1 2\\n1 3'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4'\nprint('all tests passed')\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\nassert solution('8 9') == '3 2'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\n\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2\") == \"3 5\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"3 2\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"3 5\"\nassert solution(\"4 6\") == \"4 1\"\nassert solution(\"8 9\") == \"3 2\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0\""
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"3\") == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1\n    5\n    499993\n    \"\"\") == \"40\"\nassert solution(\n    \"\"\"\n    2\n    5\n    499993\n    \"\"\") == \"41664916690999888\"\nassert solution(\n    \"\"\"\n    3\n    5\n    499993\n    \"\"\") == \"0\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n499993\n''') == '0'\n\nassert solution('''2\n3\n1000000000\n''') == '1000000000'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1\n5\n''') == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n5\n99999999\n''') == '0'\nassert solution('''\n1\n3\n2\n''') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '40'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n1''') == '0\nassert solution('''5\n3\n5''') == '40\nassert solution('''499993\n1\n16\n14\n5''') == '41664916690999888'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n5\n499993\n''') == \"41664916690999888\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''\n2\n5 5 1\n''') == '2 1 2 1 2 1 1 2 2'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1 2 3 4'\nassert solution('3') == '-1'\nassert solution('4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('5') == '1 1 1 1 2 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '-1'"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n4 5 7 6 7 5 4 4 6 4\n\"\"\") == \"\"\"1 1 1 2 -1 1 1 3 1 1\"\"\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"\"\"1 -1 -1 -1 -1 -1 -1 -1 -1 -1\"\"\"\nassert solution(\"\"\"\n3\n3 2 1\n\"\"\") == \"\"\"1 -1 1 1\"\"\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 1 1 2 -1 1 1 3 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"2\") == \"1 1 -1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1 1 1 2 -1 1 1 3 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4 5 7 6 7 5 4 4 6 4\\n') == '1 1 1 2 -1 1 1 3 1 1', 'First example'\nassert solution('2\\n3 3 1 4 4\\n') == '1 1 1 3 3 3 3 2 2', 'Second example'\nassert solution('5\\n1 2 4 6 3\\n') == '1 1 1 2 3 1 4 4 2 3 1', 'Third example'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\\n3 4 8\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"64\") == \"YES\\n2 4 8\"\nassert solution(\"32\") == \"NO\"\nassert solution(\"97\") == \"YES\\n3 5 823\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2\n6\n1\n6\n''') == 'YES'\nassert solution('''\n5\n10\n8\n1\n50\n''') == 'YES'\nassert solution('''\n5\n6\n4\n1\n5\n''') == 'NO'\nassert solution('''\n5\n10\n6\n5\n1\n''') == 'YES'\nassert solution('''\n5\n4\n5\n1\n5\n''') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'YES'\nassert solution('2') == 'NO'\nassert solution('12345') == 'YES'\nassert solution('12345') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('64') == '2 4 8'\nassert solution('32') == 'NO'\nassert solution('97') == 'YES'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'NO'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'YES'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == \"YES\"\n\nassert solution('''\n4\n4\n8\n1\n3\n''') == \"YES\"\n\nassert solution('''\n3\n3\n2\n''') == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n4\n8\n\n\"\"\"\n    ) == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n123\n''') == \"YES\", \"1st example\"\nassert solution('''\n5\n64\n32\n97\n2\n12345\n\n''') == \"YES\", \"2nd example\"\nassert solution('''\n10\n4569\n353696\n56545\n345543\n453464\n3455\n76545\n9\n12\n15\n36\n37\n35\n34\n3\n1\n''') == \"NO\", \"3rd example\"\nassert solution('''\n20\n64\n32\n97\n2\n12345\n\n''') == \"YES\", \"4th example\"\n'''\n''') == \"YES\", \"5th example\"\n'''\n''') == \"YES\", \"6th example\"\n'''\n''') == \"NO\", \"7th example\"\n'''\n''') == \"NO\", \"8th example\"\n'''\n''') == \"NO\", \"9th example\"\n'''\n''') == \"YES\", \"10th example\"\n'''\n''') == \"YES\", \"11th example\"\n'''\n''') == \"NO\", \"12th example\"\n'''\n''') == \"NO\", \"13th example\"\n'''\n''') == \"YES\", \"14th example\"\n'''\n''') == \"NO\", \"15th example\"\n'''\n''') == \"YES\", \"16th example\"\n'''\n''') == \"YES\", \"17th example\"\n'''\n''') == \"NO\", \"18th example\"\n'''\n''') == \"NO\", \"19th example\"\n'''\n''') == \"YES\", \"20th example\"\n'''\n''') == \"NO\", \"21st example\"\n'''\n''') == \"YES\", \"22nd example\"\n'''\n''') == \"YES\", \"23rd example\"\n'''\n''') == \"NO\", \"24th example\"\n'''\n''') == \"YES\", \"25th example\"\n'''\n''') == \"NO\", \"26th example\"\n'''\n''') == \"YES\", \"27th example\"\n'''\n''') == \"NO\", \"28th example\"\n'''\n''') == \"YES\", \"29th example\"\n'''\n''') == \"YES\", \"30th example\"\n'''\n''') == \"YES\", \"31th example\"\n'''\n''') == \"NO\", \"32th example\"\n'''\n''') == \"YES\", \"33th example\"\n'''\n''') == \"YES\", \"34th example\"\n'''\n''') == \"YES\", \"35th example\"\n'''\n''') == \"YES\", \"36th example\"\n'''\n''') == \"YES\", \"37th example\"\n'''\n''') == \"YES\", \"38th example\"\n'''\n''') == \"YES\", \"39th example\"\n'''\n''') == \"YES\", \"40th example\"\n'''\n''') == \"YES\", \"41th example\"\n'''\n''') == \"YES\", \"42th example\"\n'''\n''') == \"YES\", \"43th example\"\n'''\n''') == \"NO\", \"44th example\"\n'''\n''') == \"YES\", \"45th example\"\n'''\n''') == \"YES\", \"46th example\"\n'''\n''') == \"YES\", \"47th example\"\n'''\n''') == \"YES\", \"48th example\"\n'''\n''') == \"YES\", \"49th example\"\n'''\n''') == \"YES\", \"50th example\"\n'''\n''') == \"NO\", \"51st example\"\n'''\n''') == \"YES\", \"52nd example\"\n'''\n''') == \"YES\", \"53rd example\"\n'''\n''') == \"YES\", \"54th example\"\n'''\n''') == \"YES\", \"55th example\"\n'''\n''') == \"YES\", \"56th example\"\n'''\n''') == \"YES\", \"57th example\"\n'''\n''') == \"YES\", \"58th example\"\n'''\n''') == \"YES\", \"59th example\"\n'''\n''') == \"YES\", \"60th example\"\n'''\n''') == \"YES\", \"61st example\"\n'''\n''') == \"YES\", \"62nd example\"\n'''\n''') == \"YES\", \"63rd example\"\n'''\n''') == \"YES\", \"64th example\"\n'''\n''') == \"YES\", \"65th example\"\n'''\n''') == \"YES\", \"66th example\"\n'''\n''') == \"YES\", \"67th example\"\n'''\n''') == \"YES\", \"68th example\"\n'''\n''') == \"YES\", \"69th example\"\n'''\n''') == \"YES\", \"70th example\"\n'''\n''') == \"YES\", \"71st example\"\n'''\n''') == \"YES\", \"72nd example\"\n'''\n''') == \"YES\", \"73rd example\"\n'''\n''') == \"YES\", \"74th example\"\n'''\n''') == \"YES\", \"75th example\"\n'''\n''') == \"YES\", \"76th example\"\n'''\n''') == \"YES\", \"77th example\"\n'''\n''') == \"YES\", \"78th example\"\n'''\n''') == \"YES\", \"79th example\"\n'''\n''') == \"YES\", \"80th example\"\n'''\n''') == \"YES\", \"81st example\"\n'''\n''') == \"YES\", \"82nd example\"\n'''\n''') == \"YES\", \"83rd example\"\n'''\n''') == \"YES\", \"84th example\"\n'''\n''') == \"YES\", \"85th example\"\n'''\n''') == \"YES\", \"86th example\"\n'''\n''') == \"YES\", \"87th example\"\n'''\n''') == \"YES\", \"88th example\"\n'''\n''') == \"YES\", \"89th example\"\n'''\n''') == \"YES\", \"90th example\"\n'''\n''') == \"YES\", \"91st example\"\n'''\n''') == \"YES\", \"92nd example\"\n'''\n''') == \"YES\", \"93rd example\"\n'''\n''') == \"YES\", \"94th example\"\n'''\n''') == \"YES\", \"95th example\"\n'''\n''') == \"YES\", \"96th example\"\n'''\n''') == \"YES\", \"97th example\"\n'''\n''') == \"YES\", \"98th example\"\n'''\n''') == \"YES\", \"99th example\"\n'''\n''') == \"NO\", \"100th example\"\n'''\n''') == \"YES\", \"101st example\"\n'''\n''') == \"YES\", \"102nd example\"\n'''\n''') == \"YES\", \"103rd example\"\n'''\n''') == \"YES\", \"104th example\"\n'''\n''') == \"YES\", \"105th example\"\n'''\n''') == \"YES\", \"106th example\"\n'''\n''') == \"YES\", \"107th example\"\n'''\n''') == \"YES\", \"108th example\"\n'''\n''') == \"YES\", \"109th example\"\n'''\n''') == \"YES\", \""
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"abba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ababab\"\nassert solution(\"2\\naa\") == \"ba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\nbbbb\n''') == 'abba'\nassert solution('''6\nababab\n''') == 'ababab'\nassert solution('''2\naa\n''') == 'ba'"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nbbbb') == 'abba'\nassert solution('6\\nababab') == 'ababab'\nassert solution('2\\naa') == 'ba'"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == str(input())\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nbbbb\\n\") == \"abba\"\nassert solution(\"6\\nababab\\n\") == \"ba\"\nassert solution(\"2\\naa\\n\") == \"1\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"abba\"\nassert solution(input()) == \"aba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nbbbb\\n') == '2\\nabba\\n'\nassert solution('6\\nababab\\n') == '0\\nababab\\n'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"15\"\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == \"9\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == '9'\n\nassert solution('''\n3\n3 0\n2 0\n2 2\n''') == '3'\n\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\n''') == '15'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\n\"\"\") == \"9\""
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == \"9\"\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\n''') == \"15\"\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == \"9\""
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('10\\n1 1\\n2 3\\n5 4\\n8 6\\n4 5\\n2 6\\n5 7\\n7 8\\n') == '18'\nassert solution('7\\n1 1\\n2 2\\n3 3\\n5 5\\n6 6\\n') == '10'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\nassert solution(\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n7\n1 0\n1 1\n2 1\n4 2\n3 3\n3 1\n1 2\n\"\"\") == \"17\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\n\"\"\"\nimport math"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('2') == '1'"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''3\n1\n\n''') == '2'"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.5'\nassert solution('3') == '0.8'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\n\nassert solution(\"3\") == \"1.000000000000\""
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n') == '1.000000000000'\nassert solution('1\\n') == '0.96'\nassert solution('2\\n') == '0.96'\nassert solution('-4\\n') == '0.96'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('1') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('5') == '0.96'\nassert solution('10') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1000') == '1'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1.000000000000\"\nassert solution(\"5\") == \"1.000000000000\"\nassert solution(\"7\") == \"0.96\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1.000000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '3'\nassert solution('3') == '5'\n\"\"\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"6\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '10'\nassert solution('10') == '100'\nassert solution('1') == 'Hello World'"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"13\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"14\"\n\n\"\"\""
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+2'\n\"\"\""
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('2\\n3\\n4') == '7'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+2\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+2\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2 + 2 = 4'\nassert solution('1') == '1 + 1 = 2'\n\nstdin = input()\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2\"\n\nstdin = input()\nN = int(stdin)\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"4444\"\nassert solution(\"7 9\") == \"99999\"\nassert solution(\"7 9\") == \"99999\"\nassert solution(\"1 1\") == \"11\"\nassert solution(\"2 3\") == \"33\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3333\"\n\n\"\"\""
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('3 3') == '333'\nassert solution('2 3') == '233'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3333'\nassert solution('5 5') == '5555'\nassert solution('3 3') == '3333'\nassert solution('5 5') == '5555'\nassert solution('1 3') == '3333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 3') == '3333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3333'\nassert solution('9 2') == '922'\nassert solution('5 1') == '511'\n\n'''\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2 1'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 4') == '1444'\nassert solution('4 5') == '545'\nassert solution('1 1') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('e') == 'c'\nassert solution('a') == 'b'\nassert solution('b') == 'c'"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"a\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('z') == 'a'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"b\"\nprint(\"Test passed\")"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"b\"\nprint(solution(\"a\"))\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"b\""
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aB\") == \"B\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('e') == 'd'\nassert solution('I') == 'l'\nassert solution('O') == 'e'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"ab\") == \"bc\"\nassert solution(\"aab\") == \"c\"\nassert solution(\"abc\") == \"c\"\nassert solution(\"bca\") == \"ac\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('oder atc') == 'atcoder'\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"oder\", \"atc\"]) == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\"\n\"\"\"\n\ns = input()\nt = input()\n\nt_c = t.split()\ns_c = s.split()\n\nfor i in range(len(t_c)):\n    s_c[i] = t_c[i] + s_c[i]\n\ns_c = \" \".join(s_c)\n\nprint(s_c)\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('oder at') == 'at'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\nprint(solution('oder atc'))\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n        S T\n        S T\n        S T\n        S T\n        S T\n        S T\n        S T\n        S T\n    \"\"\"\n    ) == \"atcoder\"\n    assert solution(\n        \"\"\"\n        T T\n        S T\n        T T\n        T T\n        S T\n        S T\n        S T\n        T T\n    \"\"\"\n    ) == \"atcoder\"\n    assert solution(\n        \"\"\"\n        S T\n        T T\n        S T\n        S T\n        T T\n        T T\n        S T\n        S T\n    \"\"\"\n    ) == \"atcoder\"\n    assert solution(\n        \"\"\"\n        T T\n        S T\n        T T\n        S T\n        S T\n        S T\n        S T\n        S T\n        S T\n    \"\"\"\n    ) == \"atcoder\"\n    assert solution(\n        \"\"\"\n        S T\n        T T\n        S T\n        S T\n        S T\n        S T\n        T T\n        S T\n    \"\"\"\n    ) == \"atcoder\"\n    "
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''oder\natc\n\n''') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"S T\") == \"atcoder\"\n'''\n\nimport os\nimport sys"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('abcd') == 'abcd'\nassert solution('code') == 'code'\nassert solution('cat') == 'cat'\nassert solution('tiger') == 'tiger'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('5 1 2 4 6 3') == '0'\nassert solution('2') == '1000000'\nassert solution('6') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n5 1 2 4 6 3\n''') == '0'\nassert solution('''\n5\n1 5 7 8 2\n''') == '0'\nassert solution('''\n6\n5 1 2 4 6 3\n''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1000000\"\n\"\"\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000 1000000\") == \"1000000\""
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1000000 1000000\") == \"1000000\""
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('6') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '6'\nassert solution('1 1 100 99') == '1'\nassert solution('3 5 4 2 7 6') == '7'\nassert solution('6 2 3 3') == '5'"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"6\""
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nprint(\"check passed\")\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution([\"1 1 100 99\", \"7 10 50 12 1 8\"]) == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == \"5\"\nassert solution('7 4 2 1') == \"1\""
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"1\"\nassert solution(\"4 5 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '6'\nassert solution('1 1 100 99') == '1'"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6') == '5'\nassert solution('6\\n5') == '6'\nassert solution('1\\n100') == '1'\nassert solution('100\\n1') == '1'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"./testInput_01.txt\") == \"5\"\nassert solution(\"./testInput_02.txt\") == \"6\"\nassert solution(\"./testInput_03.txt\") == \"7\"\nassert solution(\"./testInput_04.txt\") == \"2\"\nassert solution(\"./testInput_05.txt\") == \"1\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n1 1 100 99\n100\n''') == '1'\nprint('all tests passed')"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution() == '2'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 2\n0 1 2 3\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n6 3\n3 2 0 6 10 12\n\"\"\") == \"3 2 0 7 10 14\""
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('''\n1 2 3\n''') == '1'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\nassert solution('''\n6 2\n0 1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\n\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '3'\nassert solution('6 3') == '3'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n\n''') == '0 1 2 3'"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n2 3\n3 2 0 6 10 12\n\"\"\"\n    ) == \"3\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3 2 0 7 10 14'\nassert solution('4 2\\n0 1 2 3') == '0 1 2 3'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '8'\nassert solution('4 2 1 3 2') == '20'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '8'\nassert solution('3 3') == '1'\nassert solution('5 7') == '2'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 0 2 0\\n\"\n    \"2 4\\n\"\n    \"3 3\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n) == \"8\"\n\nassert solution(\n    \"5 3\\n\"\n    \"4 2\\n\"\n    \"2 5\\n\"\n    \"3 5\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n    \"1 2\\n\"\n) == \"20\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"8\""
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1 1 1\\n2\\n10\\n10\\n5\\n1 2 3 4') == 'YES'\nassert solution('2\\n2\\n1 1\\n10\\n10\\n5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n10 5\\n5 5\\n5 5\\n10 5\\n10 5\\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n5 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n3\n5 5 5 5 5 5\n3 1 1 1 1 1 1\n2\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\"\"\") == \"NO\"\n\nimport sys\nimport io\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5') == 'YES'\nassert solution('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 100 100 100\n''') == 'YES'\nassert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n50000 50000 50000 50000\n''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n10 5 2 10 1 1 2 5\n2\n1 1 1 1 1 1 1 1\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n''') == 'YES'\n\nassert solution('''\n1\n10 5 2 10 1 1 2 5\n2\n1 1 1 1 1 1 1 1\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''\n2\n10 5 1 10 5 1 1 1\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == 'NO'\n\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n1 1 10 10\") == \"YES\"\nassert solution(\"5\\n2\\n1 1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"10\\n4\\n10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"10\\n2\\n10 5 1 10 5 1 1 1\") == \"NO\"\nassert solution(\"1\\n1\\n1 1 1 1 1 1 1 1\") == \"YES\"\n\n\n\n'''"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n5\n1\n1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1 10 10\\n2') == 'YES'\nassert solution('5\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1') == 'NO'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\nassert solution(\"7 1 5\") == \"2\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example1) == \"1\"\nassert solution(example2) == \"4\"\nassert solution(example3) == \"3\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 1\") == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == \"3\"\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == \"9\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '7486 3'\nassert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 1 1 1 1 1\"\nassert solution(\"5 1\") == \"1 1 1 1 1\"\nassert solution(\"10 2\") == \"2 2 1 1 2 1\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 4'\nassert solution('10') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6\n1 5 12 13 2 15\n''') == '7486 3'\nassert solution(\n'''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution(\n'''\n8\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 4'\nassert solution(\n'''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 4'\nassert solution(\n'''\n5\n1 1 3 4 2\n''') == '3 1'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == '3 1'\nassert solution(\"10\") == '7486 3'\nassert solution(\"10 10\") == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 3 4 2\") == \"3 1\"\nassert solution(\"5\") == \"2 1 1 1 1 1\"\nassert solution(\"10\") == \"7486 3\""
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '3 1'\n\n\"\"\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('99') == '2'\nassert solution('1001') == '3'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    5009\n    7\n    9876\n    10000\n    10\n    ''') == '2'\nassert solution('''\n    3\n    1000\n    10\n    ''') == '1'\n''')\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\""
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n3\") == \"2\\n3\\n2\\n\", \"Should sum 3 to 2\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('10') == '1'\nassert solution('200') == '2'\nassert solution('7') == '7'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == \"2\"\nassert solution('''10\n4000\n1\n9''') == \"1\"\nassert solution('''8\n20\n10\n9\n3\n100''') == \"5\"\nassert solution('''5\n50009\n7\n9876\n10000\n10''') == \"2\"\nassert solution('''4\n1\n7\n10\n10''') == \"3\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == '2'\nassert solution('''3\n5009\n7\n9876''') == '1'\nassert solution('''2\n5009\n7''') == '2'\nassert solution('''4\n5009\n7\n9876\n10000''') == '1'\nassert solution('''5\n5009\n7\n9876\n10000\n10''') == '2'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n5\n7\n100\n1\n10\n''') == '1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 1 2 3\\n2 3 1\") == \"1 1 1 1\"\nassert solution(\"5\\n4 6 2 1 3 5\\n2 3 1\") == \"3 3 3 1 3 2 1\"\nassert solution(\"3\\n5 1 2 3 4 5\\n1 2 3 1\") == \"2 3 3 1 1\"\nassert solution(\"4\\n4 4 4 4 4 4\\n4 4 4 4 4\") == \"4 4 4 4 4 4\"\n\nstdin = \"\"\"\n4\n4 5 1 2 3\n2 3 1\n3\n4 5 1 2 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 \n3 3 3 2 1 3 \n2 3 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 3 2 2 2 2 2 2 2'"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 3 1 1 3 4 1 2 2 3 1'\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 4 1 2 3 4 2 2 1 1 1 2 2 2 4 4'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 4 1 2 3 2 3 1 3 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3 3 4 4 4 4 2 2 3 4 1 3 3 2 1 3 3 2 1 3"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5 1 2 3 4\n3\n2 3 1\n6\n4 6 2 1 5 3''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '1 1 1 1 1 1'\nassert solution('5') == '3 3 3 3 1'\nassert solution('1 2 3 4 5') == '3 3 3 3 3'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5 1 1 1 1'\nassert solution('6') == '6 3 3 3 2 2'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 2 2'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\") == \"1 1 1 1 1 3 3 3 2 1 3\\n2 2 2 2 2 2\\n4 4 4 1 4\\n5\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\") == \"1 1 1 1 1 3 3 3 2 1 3\\n2 2 2 2 2 2\\n4 4 4 1 4\\n5\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\") == \"1 1 1 1 1 3 3 3 2 1 3\\n2 2 2 2 2 2\\n4 4 4 1 4\\n5\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\") == \"1 1 1 1 1 3 3 3 2 1 3\\n2 2 2 2 2 2\\n4 4 4 1 4\\n5\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\") == \"1 1 1 1 1 3 3 3 2 1 3\\n2 2 2 2 2 2\\n4 4 4 1 4\\n5\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 3 4 5\\n'\n    '3\\n'\n    '1 2 2\\n'\n    '4\\n'\n    '1 1 1 1\\n') == '2'\nassert solution(\n    '4\\n'\n    '1 2 3\\n'\n    '3\\n'\n    '1 1\\n') == '1'\nassert solution(\n    '3\\n'\n    '1 2 3\\n'\n    '3\\n'\n    '1 1') == '2'\nassert solution(\n    '7\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6\\n'\n    '1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n3\n3\n3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n\nassert solution('''2\n1 2\n3\n3\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n3\n1 2 2\n4\n1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n1 2 3 4 5\\n3\\n1 2 2\") == \"2\\n3\\n1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n3\n3\n1 2 2\n5\n1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n5\n1 2\n4\n1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n3\n2\n1 2\n4\n1 1 1 1\n\"\"\") == \"2\""
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1'''\n) == '2'\n\nassert solution(\n    '''4\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1'''\n) == '3'\n\nassert solution(\n    '''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1'''\n) == '4'\n\nassert solution(\n    '''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1'''\n) == '4'\n\nassert solution(\n    '''1\n5\n1 2 3 4 5\n1\n1 2 2\n4\n1 1 1 1'''\n) == '2'"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 3 4\n3\n1 2 2\n4\n1 1 1 1\n''') == \"3\"\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n5\n1 2 2 2 2\n4\n1 1 1 1\n''') == \"5\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\\n') == '3\\n2\\n1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\\n') == '3\\n2\\n1'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == '0 0 1 2 \n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"0 0 1 2 3 4 5\"\nassert solution(\"4 2\") == \"0 0 1 2 3 4 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4\\n10 4 10 15\\n1 2') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2\n10 4 10 15\n1 2\n4 3\n\"\"\") == \"0 0 1 2 \n\nassert solution(\"\"\"\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\"\"\") == \"5 4 0 5 3 3 9 0 2 5 \n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '0 0 1 2'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"1 3 1 2\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2\n''') == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1 2 3\\n\"\n    \"1 3 2\\n\"\n) == \"YES\"\nassert solution(\n    \"3 2\\n\"\n    \"1 2 1\\n\"\n    \"1 3 2\\n\"\n) == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n1 3 2\n''') == \"YES\"\nassert solution('''\n3 2\n1 2 3\n1 3 2\n''') == \"NO\"\nassert solution('''\n3 2\n1 2 3\n1 3 4\n''') == \"NO\"\nassert solution('''\n3 2\n1 2 3\n1 3 4\n''') == \"NO\"\nassert solution('''\n3 3\n1 1 1\n2 2 2\n3 3 3\n''') == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n1 2 3\n1 3 2\n''') == 'YES'\nassert solution('''\n4 2\n1 2 4 3\n1 3 4 2\n''') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2\n''') == 'YES'\nassert solution('''3 2\n1 2 3\n1 3 5\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 2\\n1 3 2\\n2 3 1\\n3 4 2\") == \"NO\"\nassert solution(\"5 3 2\\n1 2 3\\n1 3 4\\n2 3 4\\n3 4 1\\n4 5 2\") == \"YES\"\nassert solution(\"3 4 2\\n1 2 3\\n1 3 4\\n2 3 4\\n3 4 1\") == \"YES\"\nassert solution(\"5 2 4\\n1 3 2\\n1 4 3\\n2 3 4\\n2 4 1\\n3 4 5\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2\n1 2\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"NO\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"43\"\nassert solution() == \"2 1 4 3 5 2 4\""
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '69'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\nassert solution('''\n2\n1 4\n''') == '2'"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2 1\"\nassert solution('3') == \"2 1 3\"\nassert solution('4') == \"2 1 3 5 4\"\nassert solution('5') == \"2 1 4 3 5\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\nassert solution('2') == '3'\n\nassert solution('20 10 20') == '43'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n2 1 3 5 2 4'\nassert solution('4\\n10 10 10 10 10\\n') == '69\\n6 1 3 5 2 4'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\nassert solution('2') == '3'\nassert solution('1 4') == '2 1'"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '43'\nassert solution(input()) == '2 1 3 5 2 4'\n\nassert solution(input()) == '69'\nassert solution(input()) == '6 1 3 5 2 4'\n\nassert solution(input()) == '64'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\n\nassert solution('''4\n10 10 10 10\n''') == '69'\n\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\n\nassert solution('''2\n1 4\n''') == '3'\n\nassert solution('''1\n4\n''') == '2'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"6\"\nassert solution(\"6\") == \"9\"\nassert solution(\"10\") == \"18\"\nassert solution(\"11\") == \"21\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 5 1 3\") == \"3\"\nassert solution(\"5 1 2 4 3\") == \"2\"\nassert solution(\"2\") == \"0\"\n\"\"\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"5\\n1 2 5 3 4\\n\") == \"3\"\nassert solution(\"5\\n5 4 1 2 3\\n\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\"\nassert solution(\"1\\n1 2 3 4 5\\n\") == \"1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('5 4 2 1 3') == '1'\nassert solution('6 3 2 1 4 5') == '2'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"5\\n3 2 5 4 1\") == \"4\"\nassert solution(\"5\\n4 2 5 1 3\\n3 2 5 4 1\") == \"3\"\nassert solution(\"5\\n4 2 5 1 3\\n3 2 5 4 1\\n2 2 1 1 2\") == \"2\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 4, 2, 1, 3]) == '3'\nassert solution([5, 2, 5, 2, 3]) == '3'\nassert solution([3, 3, 3]) == '3'\nassert solution([4, 1, 2, 3, 2]) == '4'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '10'\nassert solution('5 1 2') == '3'\nassert solution('5 5 1 2 3 1 3') == '5'"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('3 4 5') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 3 3 3\n''') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"5 1 2 3 4\") == \"4\"\nassert solution(\"4 5 1 2 3\") == \"3\"\nassert solution(\"3 5 1 2 3\") == \"1\"\nassert solution(\"2 5 1 2 3\") == \"0\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"1\"\nassert solution(\"4\\n3 2 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 3 3 3 3') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 3, 3, 3]) == \"1\", \"1\"\nassert solution([4, 3, 3, 3, 1]) == \"2\", \"2\"\nassert solution([3, 3, 3]) == \"1\", \"1\"\nassert solution([3, 3, 3, 1]) == \"2\", \"2\"\nassert solution([3, 3, 3, 1, 1]) == \"2\", \"2\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"9\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 3 3 3 3\") == \"1\"\nassert solution(\"10\\n1 2 2 3 3 4 4 5 6 6 7 7 8 8 9 9 10\") == \"9\""
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('10') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('4 2 5 3 0') == '2'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 1 2 3 4') == '1'\nassert solution('3 1 2 4 0') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"4 3 1 2\") == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\nassert solution('''0 1 2 3 4 5''') == '2'\nassert solution('''0 2 3 4 5''') == '2'\nassert solution('''0 1 2 3 4''') == '1'\nassert solution('''0 1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1', \"First\"\nassert solution('1 2 3 4 5') == '4', \"Second\"\nassert solution('2 3 4 5 6') == '-1', \"Third\"\nassert solution('1 1 1 1 1') == '1', \"Four\"\nprint(\"You are a studnet!\")\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"2 0 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '2'\nassert solution('2 3') == '1'\nassert solution('6 7') == '3'\nassert solution('10 10') == '1'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"10 5\") == \"1\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '0'\nassert solution(input) == '0'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nprint(solution('3 5'))"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 5\n    \"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('6 6') == '0'\n\"\"\""
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('4 1') == '1'\n\"\"\""
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('4 2') == '1'\nassert solution('5 5') == '1'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n        2 5\n        2 5\n        3 2\n        3 5\n        1 1''') == '0'\n\n'''\n3 5\n2 5\n2 5\n3 2\n3 5\n1 1\n\n'''"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\"\nn = int(stdin.readline().strip())\nseq = list(map(int, stdin.readline().strip().split()))\n\nsum = 1\nfor num in seq:\n    sum = (sum * num) % 4"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 10, 100]) == \"Yes\"\nassert solution([1, 100, 10]) == \"No\"\n\"\"\"\nimport math\nn = int(input())\na = list(map(int, input().split()))\n\nans = \"Yes\"\nfor i in range(1, n):\n    if math.prod(a[i:]) % 4!= 0:\n        ans = \"No\"\n\nprint(ans)"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3]) == \"Yes\"\nassert solution([2]) == \"No\"\nassert solution([1]) == \"Yes\"\nassert solution([4]) == \"No\""
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\nassert solution('''4\n1 2 3 4\n''') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n''') == 'No'\nassert solution('''5\n1 2 3 4 5\n''') == 'Yes'\nassert solution('''4\n1 2 3 4\n''') == 'No'"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\nassert solution('''5\n1 2 3 4 5\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\nassert solution('''5\n1 5 100 200 30\n''') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 2 3 4\") == \"Yes\"\nassert solution(\"10\\n2 2 3 1 3 4 4 5\") == \"No\""
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n\n\n'''"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('adcd') == 'No'\nassert solution('abcd') == 'No'\nassert solution('bbaa') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"xzy\") == \"No\"\nassert solution(\"zyx\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n\"\"\"\n\ns = stdin.readline().rstrip()\nt = stdin.readline().rstrip()\n\nfor i in range(len(s)):\n    if t < s[i:] + s[:i]:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"Yes\"\n'''"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"10 2 1\") == \"NO\"\nassert solution(\"3 3 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5 1\\n') == 'YES'\nassert solution('10 15 1\\n') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\""
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 7 8 2\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 5 1\n''') == 'YES'\nassert solution('''7 9 3\n''') == 'NO'\nassert solution('''7 7 1\n''') == 'YES'\nassert solution('''7 2 1\n''') == 'NO'\nassert solution('''7 7 2\n''') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"10 10 10\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('1 1 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 1\") == \"YES\"\nassert solution(\"1 4 6\") == \"NO\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\"\"\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 1\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 4\n3 1\n2 5\n1 2\n3 3''') == \"5\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 4') == '1'\nassert solution('4 7') == '8'\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n\n0 0 1 0 0 0\n1 0 1 0 0 0\n1 0 1 0 0 0\n0 0 1 0 0 0\n0 0 0 1 0 0\n0 0 0 1 0 0\n\n0 0 1 1 0 0\n1 0 1 1 0 0\n1 0 1 1 0 0\n0 0 1 1 0 0\n0 0 0 1 0 0\n0 0 0 1 0 0''') == '1'\nassert solution('''5 5\n\n0 0 1 1 1 0\n1 0 1 1 1 0\n1 0 1 1 0 0\n1 0 1 1 0 0\n0 0 1 1 0 0\n\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 0 1''') == '14'\nassert solution('''8 8\n\n0 0 1 1 1 0 0 0\n1 0 1 1 1 0 0 0\n1 0 1 1 1 0 0 0\n1 0 1 1 1 0 0 0\n0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0\n0 0 0 0 1 1 1 0\n0 0 0 0 1 1 1 0''') == '8'\n\n\"\"\"\nSample Test:\n\nimport solution\n\nclass TestSolution:\n    def test_solution(self):\n        assert solution.solution('''2 2\n\n0 0 1 0 0 0\n1 0 1 0 0 0\n1 0 1 0 0 0\n0 0 1 0 0 0\n0 0 0 1 0 0\n0 0 0 1 0 0\n\n0 0 1 1 0 0\n1 0 1 1 0 0\n1 0 1 1 0 0\n0 0 1 1 0 0\n0 0 0 1 0 0\n0 0 0 1 0 0''') == '1'\n        assert solution.solution('''5 5\n\n0 0 1 1 1 0\n1 0 1 1 1 0\n1 0 1 1 0 0\n1 0 1 1 0 0\n0 0 1 1 0 0\n\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 1 1\n0 0 0 0 0 1''') == '14'\n        "
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5\n3 4\n3 5\n1 4\n1 5''') == '1'\nassert solution('''8 10\n7 9\n6 10\n5 6\n4 7\n4 9\n3 6\n2 5\n2 8''') == '2'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\n\n\"\"\"\n\nimport math\n\nx = int(input())\ny = int(input())\nz = int(input())"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([13, 3, 1]) == '3'\nassert solution([23, 6, 2]) == '5'\nassert solution([2, 3, 4]) == '2'\nassert solution([37, 50, 5]) == '4'\nassert solution([55, 55, 6]) == '2'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 1') == '3'\nassert solution('5 6 1') == '4'\nassert solution('5 9 1') == '3'\nassert solution('5 10 1') == '4'\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''13 3 1\n''') == '3'\nassert solution('''\n1 1 1\n''') == '0'\n'''"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([13, 3, 1]) == \"3\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5 2') == '3'\nassert solution('5 1 2') == '3'\nassert solution('9 4 5') == '3'\nassert solution('9 5 2') == '2'\nassert solution('6 6 5') == '1'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('13 3 2') == '2'"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2') == '3'\nassert solution('1 1 1') == '2'\nassert solution('2 4 4') == '1'\n\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\") == \"3\"\nassert solution(\"13 3 1\") == \"3\"\nassert solution(\"3 3 2\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"4 5 3\") == \"4\"\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '1'\nassert solution('1 3') == '2'\nassert solution('4 2') == '2'\nassert solution('0 4') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 2, 3, 1, 4, 2]) == '2'\nassert solution([5, 5, 5, 5, 5, 5]) == '0'\nassert solution([3, 2, 3, 1, 4, 2, 4, 2]) == '2'\n\"\"\"\n\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '1'\nassert solution('1 3') == '0'\nassert solution('4 2') == '0'\nassert solution('0 4') == '0'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n3 3\n1 1\n1 3\n3 1\n3 2\n1 2\n2 4\n2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n1 1\n1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\n\"\"\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '2'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '7'\nassert solution('2 2') == '3'\nassert solution('3 4') == '5'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '7'\nassert solution('1 3') == '7'\nassert solution('1 3') == '7'\nassert solution('1 3') == '7'\nassert solution('1 3') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3') == '7'\nassert solution('1 1\\n0 0') == '0'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '7'"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '7'\n\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"7\"\nassert solution(\"5 0\") == \"5\"\nassert solution(\"5 1\") == \"4\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4\n0 3\n''') == '7'\n\"\"\"\n\nn,t=map(int,input().split())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\n\nl.sort()\n\nans=0\n\nfor i in l:\n    ans+=i\n    t-=i\n    if(t<=0):\n        break\n    ans+=t\n\nprint(ans)"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 0 3\") == \"3\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '7'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\n\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n2\\n\"\n\n\"\"\""
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\n\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\""
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\nprint(\"You're a smart cookie!\") if solution(*_) else print(\"You failed cookie!\")\n\n\"\"\"\nimport sys\nfrom collections import deque\n\ninput = lambda: sys.stdin.readline().rstrip()"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\n\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"0\""
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1\n2\n1\n''') == '4'\nassert solution('''\n1\n1\n1\n''') == '-1'\nassert solution('''\n1\n2\n1\n''') == '4'\nassert solution('''\n1\n2\n1\n''') == '4'\nassert solution('''\n2\n1\n1\n''') == '4'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\") == \"6\"\nassert solution(\n    \"3\\n4\") == \"2\"\nassert solution(\n    \"1\") == \"1\"\nassert solution(\n    \"5\") == \"-1\"\nassert solution(\n    \"7\") == \"72\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\nassert solution('''\n2\n3\n6\n8\n''') == '-1'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '72'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"25\") == \"3\"\nassert solution(\"30\") == \"4\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10') == '4'\nassert solution('1\\n25') == '6'\nassert solution('1\\n30') == '6'\nassert solution('1\\n14') == '6'\nassert solution('1\\n27') == '-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0'\nassert solution('''\n7\n1\n10\n25\n30\n14\n27\n
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    1\n    10\n    25\n    30\n    14\n    27\n    1000000000000000000\n''') == '4'\nassert solution('''\n    0\n    100\n    25\n    30\n    14\n    27\n    1000000000000000000\n''') == '6'\nassert solution('''\n    0\n    1000000000000000000\n''') == '-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"25\") == \"6\"\nassert solution(\"30\") == \"6\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('1') == '0'\nassert solution('10') == '6'\nassert solution('25') == '6'\nassert solution('30') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"4\"\nassert solution(\"25\") == \"6\"\nassert solution(\"30\") == \"6\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n2\n2 2\n1\n2\n''') == 'NO'\nassert solution('''\n2\n3 3\n1\n2\n''') == 'YES'\nassert solution('''\n2\n1 1\n1\n1\n''') == 'YES'\nassert solution('''\n2\n1 1\n1\n1\n''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'NO'\nassert solution('4\\n3\\n1 1 2\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\\nNO\\nYES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"NO\"\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"NO\"\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\n'''\n\n## Solutions\n\n## One line solutions\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n2\n1 1 2\n3\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n1\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 0\n\n\"\"\""
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"zcabd\"\n    ) == \"0\"\n    assert solution(\n    \"7\\n\"\n    \"abacaba\"\n    ) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == 4, \"Correct result\"\n\n\n\n\"\"\"\n\n\n\nfrom collections import deque\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\dbacz\\n') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t) == '0'\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == 4\nassert solution('5\\nzcabd\\dbacz\\n') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nzcabd\ndbacz''') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nzcabd\ndbacz\n''') == '0'\n\nassert solution('''\n10\nabacaba\nbacabaa\n''') == '4'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nzcabd\ndbacz''') == 0\nassert solution('''5\nzcabd\ndbacz\n''') == 1\nassert solution('''8\nzcabd\ndbacz\n''') == 4\nassert solution('''13\nzcabd\ndbacz\n''') == 4\nassert solution('''20\nzcabd\ndbacz\n''') == 2\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '198'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 1 999999999\n1 1 999999999\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n1 10 5\n1 1 1000000000\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n1 1000000000 1 6\n1 1 1000000000\n\"\"\") == \"2999999997\"\nassert solution(\n\"\"\"\n1 1 999999999\n1 1 999999999\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 1 999999999\n1 1 999999999\n\"\"\") == \"1\""
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3 3\n1 5\n4 3\n3 2\n''') == '8'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '198'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\\n\"\n    \"5 2 3\\n\"\n    \"100 1 4\\n\"\n    \"1 10 5\\n\"\n    \"1000000000 1 6\\n\"\n    \"1 1 1000000000\\n\"\n    \"1 1 999999999\\n\"\n) == \"8\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '8'\nprint('\\nCorrect!')\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1 1000000000 1 6\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n\") == \"8\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n3\n5\n6\n13\n15\n16\n20\n''') == '3'\nassert solution('''\n3\n12\n36\n22\n''') == '5'\nassert solution('''\n3\n30\n''') == '2'\nassert solution('''\n1\n5\n''') == '6'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('6\\n13') == '27'\nassert solution('3620\\n10000') == '6561'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1000000000000000000\\n'*20000) == '19683'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n    \"\"\") == \"3\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '3'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n') == '27'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n\\n') == '6561'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1\n1''') == '2'\nassert solution('''6\n2\n1\n10\n20\n50\n100''') == '27'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 3 1 2 3 3 2 4 2 4 4 1 5 1 4 5 6 1 6 1 5 8 1 6 8 1 4 4 1 8 10 1 4 10 1 8\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5\n6\n12\n15\n25\n100\n''') == '3'\nassert solution('''\n2\n7\n9\n10\n1\n''') == '7'\nassert solution('''\n3\n5\n6\n12\n15\n25\n100\n''') == '27'\nassert solution('''\n4\n5\n6\n12\n15\n25\n100\n''') == '1350851717672992089'\nassert solution('''\n5\n5\n6\n12\n15\n25\n100\n''') == '1350851717672992089'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1\n2\n3\n''') == '1'\nassert solution('''1\n1\n1\n3\n''') == '1'\nassert solution('''1\n2\n2\n3\n''') == '2'\nassert solution('''1\n3\n3\n4\n''') == '3'\nassert solution('''1\n4\n4\n5\n''') == '4'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    6\n    10\n    10\n    30\n    10\n    ''') == '3'\nassert solution('''\n    2\n    6\n    30\n    12\n    10\n    ''') == '3'\nassert solution('''\n    1\n    10\n    ''') == '10'\n''')"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"77\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"55\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999000000000\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999\"\n\n--Example case 2\n3\n3\n11 5\n5 6\n'''"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212') == '70'\nassert solution('3\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000') == '999999999000000000'\nassert solution('1\\n1000000000 1000000000 1 1 1') == '999999999'\nassert solution('3\\n10 11 2 1 5\\n10 11 9 1 10') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000000 1000000000 1 1 1\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999\"\nassert solution(\"10 11 2 1 5\") == \"55\"\nassert solution(\"10 11 9 1 10\") == \"77\"\nassert solution(\"\") == \"999999999000000000\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70'\nassert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '77'\nassert solution('7\\n10 11 2 1 5\\n10 11 9 1 10') == '55'\nassert solution('7\\n10 11 2 1 5\\n12343 43 4543 39 123212') == '999999999000000000'\nassert solution('7\\n10 11 2 1 5\\n12343 43 4543 39 123212') == '999999999000000000'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"55\"\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"77\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"177177\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999000000000\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10 8 5 3\n''') == '70'\nassert solution('''\n1000000000 1000000000 1 1 1\n''') == '999999999000000000'\nassert solution('''\n10 11 2 1 5\n''') == '55'\nassert solution('''\n10 11 9 1 10\n''') == '999999999'\nassert solution('''\n''') == '0'"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_from_stream(solution.__doc__.strip().split('\\n')[1:])) == \"77777\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"70\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"77\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"55\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"10\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        solution()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('------------')\n        print(out)\n        print('------------')\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n        \"\"\"\n        output = \"\"\"\n70\n77\n177177\n999999999000000000\n999999999\n55\n10\n        \"\"\"\n        self."
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000000000 1000000000 1 1 1\") == \"999999999000000000\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5\n7 4\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n10 4\n7 4\n10 10\n2 4\n7 4\n9 3\n''') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 5\\n4 3\\n7 8\\n8 7\\n9 6\\n\") == \"1 1\\n1 2\\n1 2\\n2 2\\n3 2\\n2 3\\n2 2\\n1 3\\n3 1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n12 11\n22 21\n12 24\n32 21\n''') == '2'\nassert solution('''\n5\n3 3\n8 6\n9 7\n8 8\n''') == '2'\nassert solution('''\n5\n3 4\n6 7\n8 9\n10 11\n12 13\n''') == '1'\nassert solution('''\n5\n7 7\n19 16\n12 15\n5 11\n4 13\n''') == '2'\n''')"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5\n2 5\n2 5\n2 5\n2 5\n2 5\n''') == '2'\n'''\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 3') == '0'\nassert solution('2 4') == '1'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\nassert solution('9 3') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\n\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\n\nassert solution('''\n5\n2 2\n5 10\n2 4\n7 4\n9 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n10 10\n2 4\n7 4\n9 3\n''') == '2'\n\nassert solution('''\n5\n2 9\n10 10\n2 4\n7 4\n9 3\n''') == '2'"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"9 3\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3\\n2 4') == '0'\nassert solution('2 4\\n7 4') == '1'\nassert solution('3 4\\n9 3') == '2'\n\n\n'''\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n11\n11\n22\n''') == '13'\n\nassert solution('''\n1\n11\n11\n22\n''') == '90'\n\nassert solution('''\n1\n77\n77\n''') == '1'\n\nassert solution('''\n1\n22\n22\n''') == '1'\n\nassert solution('''\n1\n11\n1\n22\n''') == '0'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '13'\nassert solution('4') == '90'\nassert solution('3') == '1'\nassert solution('2') == '66'\nassert solution('1') == '90'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2\n3\n1\n4\n''') == '13'\nassert solution('''4\n1\n3\n1\n2\n''') == '6'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n10\n100\n22''') == '13'\nassert solution('''2\n3\n99\n1''') == '1'\nassert solution('''3\n11\n999\n2''') == '7'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n22\\n9999\\n1\\n777\\n'\n) == '13'\n\"\"\"\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = 0\n    for j in range(len(a)):\n        if j == len(a)-1:\n            b += 1\n    print(b)\n    "
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n22\n9999\n1\n777\n''') == '13'\n\nassert solution('''\n1\n22\n9999\n1\n777\n''') == '90'\n\nassert solution('''\n3\n1\n9999\n1\n777\n''') == '1'\n\nassert solution('''\n1\n11\n2222\n1\n7777\n''') == '2'\n\nassert solution('''\n1\n11\n2222\n1\n7777\n''') == '2'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"22\") == \"3\"\nassert solution(\"2223\") == \"4\"\nassert solution(\"2222\") == \"4\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n22\n9999\n1\n777''') == \"13\"\nassert solution('''3\n2\n2\n2''') == \"0\"\nassert solution('''5\n22\n2\n2\n2\n2''') == \"10\"\nassert solution('''4\n22\n9999\n1\n777''') == \"13\"\nassert solution('''5\n2\n22\n2\n2\n2''') == \"10\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '13'\nassert solution('''5\n4\n1\n11\n2\n22\n3\n333\n4\n555\n5\n6\n6\n666\n7\n777\n8\n888\n9\n999\n''') == '1'"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\"\n) == \"NO\"\nassert solution(\n    \"5\"\n) == \"YES\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n\n3\n2 2 2 2 2\n5\n2 2 2 2 2''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2''') == 'YES'\nassert solution('''6\n2 2 2 2 2 2\n5\n2 2 2 2 2''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2''') == 'YES'\nassert solution('''5\n2\n2 2 2 2 2\n3\n2 2 2''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\nassert solution('''4\n6\n2 2 2 2 2\n5\n2 2 2\n3\n2 2\n5\n2 2 2 2 2\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'YES\\n2 6\\n1 2'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES\\n2 2\\n4 1'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([2,-3,-1,5,-4]) == 13\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4,2,3\") == \"5\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"\n\"\"\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[4,2,3]\") == \"5\"\nassert solution(\"[3,-1,0,2]\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2,-3,-1,5,-4') == 13\nassert solution('1,-2,-3,-4') == -1\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3\n1\n2\n1\n2\n2\n3\n2\n1\n2\n3\n''') == '13'\nassert solution('''\n3\n-1\n0\n2\n1\n2\n2\n3\n2\n1\n2\n3\n''') == '6'\nassert solution('''\n5\n2\n3\n1\n2\n3\n''') == '7'\nassert solution('''\n5\n3\n-1\n0\n2\n-3\n''') == '3'\nassert solution('''\n5\n3\n-1\n0\n2\n-3\n''') == '3'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n3 4\n5 2\n1 3\n''') == '5'\nassert solution('''\n4 2\n4 -2\n4 3\n5 2\n1 3\n''') == '6'\nassert solution('''\n3 -1\n2 3\n1 3\n''') == '6'\n'''\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5\nassert solution('''\n3 -1 0 2\n3\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n3\n''') == '13\n'''\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4,2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\nassert solution(\"5,2,3\") == 6\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n-2\n1\n''') == \"true\"\nassert solution('''\n-2\n2\n''') == \"false\"\n\nprint('time: %.10fms' % ((timer() - start) * 1000))\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"true\"\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        sum_A = sum(A)\n        if sum_A % 3: return False\n        \n        target = sum_A // 3\n        d = defaultdict(int)\n        for i, num in enumerate(A):\n            d[num] = i\n        \n        for key in d:\n            if target == (d[key] + d[target - key]) // 2:\n                return True\n        return False"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == 'true'\nassert solution('0') == 'true'\nassert solution('1') == 'false'\nassert solution('1 2 3') == 'true'\nassert solution('2 1 0') == 'false'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true', \"Should be true\"\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false', \"Should be false\"\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true', \"Should be true\"\n''')\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 0\") == \"true\"\nassert solution(\"1 2 0\") == \"false\"\nassert solution(\"1 1 0\") == \"true\"\nassert solution(\"1 1 1\") == \"true\"\nassert solution(\"1 1 1 1\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"false\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"true\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"false\""
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\", \"Should return true if the array is partitioned into three equal parts.\"\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\", \"Should return true if the array is partitioned into three equal parts.\"\nassert solution([0,2,1,-6,6,7,9,1,2,0,1]) == \"false\", \"Should return false if the array is partitioned into three equal parts.\""
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 0 -1') == 'false'\nassert solution('-1') == 'false'\nassert solution('0') == 'true'\nassert solution('2 1 0 -1') == 'true'\nassert solution('1 2 2 -1') == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'true'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat') == 'beat and vet'\n\"\"\"\nimport collections"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nbeat') == 'beat'\nassert solution('7\\nvet') =='vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet''') == 'beet and vet'\nassert solution('''5\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet''') == 'beat and bet'\nassert solution('''5\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet''') == 'beat and bet'\nassert solution('''1\nbeat\nbed\nvet\nbeet\nbed\nbet\nbeet''') == 'beat and bet'\nassert solution('''10\nbeat\nbed\nvet\nbeet\nbed\nbet\nbeet\nbed\nvet\nbeet''') == 'beat and bet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\n\n-  Pythonic code\n-  Nested loops\n-  Standard inputs\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"beet and vet\"\nprint(\"Your solution: \", solution(input()))\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\nassert solution('6\\nbeat\\nvet\\nbeet') == 'beat and beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'beet and vet are written on two sheets each, while beat, bed, and bet are written on one vote each.'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beat, vet\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '6'"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\nassert solution('4') == '10'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '11'\nassert solution('4') == '17'\nassert solution('5') == '22'\nassert solution('6') == '28'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('4 8') == '16'"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"NO_ANSW\"\nassert solution(\"\") == \"NO_ANSW\"\nassert solution(\"1\") == \"NO_ANSW\"\nassert solution(\"2\") == \"NO_ANSW\"\nassert solution(\"3\") == \"NO_ANSW\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"18\"\nassert solution(\"10\") == \"2800\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\nassert solution('999999999') == '980000'\nassert solution('123') == '97'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"1\") == \"14\"\nassert solution(\"2\") == \"10\""
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84'\n\"\"\"\nimport sys\nsys.stdin = open(__file__.replace('.py', '_input.txt'))"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"10\"\nassert solution(\"5\") == \"10\"\nassert solution(\"5\") == \"10\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '84'\n\"\"\""
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15\\n1\\n1\\n') == '84'\nassert solution('11\\n1\\n1\\n') == '84'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1234\n150\n100''') == '84'\nassert solution('''123''') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 5\") == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '8'\nassert solution('4 5') == '8'\nassert solution('10 10') == '2520'\nassert solution('8 8') == '3628800'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '8'\nassert solution('4 4') == '120'\nassert solution('6 5') == '24'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 2') == '1'\nassert solution('3 3') == '17'\nassert solution('4 4') == '14'\nassert solution('5 5') == '253'"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 2\") == \"12\"\nassert solution(\"8 3\") == \"84\"\nassert solution(\"10 2\") == \"138\"\nassert solution(\"1 5\") == \"1455\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"10 10\") == \"225072\""
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('4 5') == '29'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"12\"\nassert solution(\"2 5\") == \"63\"\nassert solution(\"10 10\") == \"8064674176\"\nassert solution(\"2 20\") == \"128354054320\"\nassert solution(\"4 5\") == \"72\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\nassert solution('3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\n\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('2 4') == 'POSSIBLE'\nassert solution('4 3') == 'POSSIBLE'\nassert solution('5 3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('10 4') == 'IMPOSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('3 100') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == 'POSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 2\n1 2\n2 3\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"3 4\n1 2\n2 3\n3 4\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\n'''\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr'"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\n\"\"\""
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcd') == ''\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"acdr\""
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr', \"Wrong Answer\"\nassert solution('banana') == 'anbn', \"Wrong Answer\"\nassert solution('atoi') == 'atoi', \"Wrong Answer\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"acdr\"\n\n'''\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'atcoder'\n\n------------------------------------\n\nSolution\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'acdr'\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n\n\"\"\""
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''rng gorilla apple''') == 'YES'\nassert solution('''a''') == 'NO'\n'''\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng banana apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"abcde ghijkl mnop qrst uvwxyz\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"rng\ngorilla\napple\"\"\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n36\n24\n''') == 'GREATER'"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"18\\n43\") == \"LESS\", \"Should be LESS\"\nassert solution(\"20\\n40\") == \"GREATER\", \"Should be GREATER\"\nassert solution(\"3\\n8\") == \"EQUAL\", \"Should be EQUAL\"\nprint(\"Congrats! You are the best!\")\n\"\"\""
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'GREATER'\nassert solution('6') == 'LESS'\n\n'''\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('9') == 'EQUAL'\nassert solution('10') == 'EQUAL'\nassert solution('4') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('35') == 'EQUAL'\n\"\"\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('36\\n24') == 'GREATER'"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'GREATER', 'WRONG!'\n\n\"\"\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'LESS'\nassert solution('2') == 'GREATER'\nassert solution('3') == 'EQUAL'"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"\nassert solution(\"1\\n2\") == \"LESS\"\nassert solution(\"0\\n1\") == \"EQUAL\"\n\n\"\"\"\n\na, b = input().split()\na = int(a)\nb = int(b)\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n5\\n') == 'LESS'\nassert solution('1\\n2\\n') == 'EQUAL'\nassert solution('1\\n-2\\n') == 'LESS'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\n\n---------------------------------------------------------------------------------------------------------------------------------------------------\n\"\"\"\n\n\"\"\"\nCode Explanation\n\n/bin/bash $ python3 pythonsolution.py < input.txt\n\n\"\"\"\n\n---------------------------------------------------------------------------------------------------------------------------------------------------"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\norange\\ngrape\\n1\\ngrape\") == \"2\"\nassert solution(\"3\\napple\\norange\\ngrape\\n1\\ngrape\") == \"2\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    5\n    apple\n    orange\n    apple\n    1\n    grape\n    ''') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n\n'''\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\napple\\norange\\napple\\ngrape\\n') == '2'\nassert solution('10\\nCATCATA\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\nCATCAT\\n') == '10'"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == 2"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\n\\t\\tapple\\n\\t\\torange\\n\\t\\tapple\\n\\t\\t1\\ngrape\\n\"\n    ) == \"2\"\nassert solution(\n    \"2\\n\\t\\t\\tapple\\n\\t\\t\\torange\\n\\t\\t\\tapple\\n\\t\\t\\t1\\ngrape\\n\"\n    ) == \"3\"\nassert solution(\n    \"3\\n\\t\\t\\tapple\\n\\t\\t\\torange\\n\\t\\t\\tapple\\n\\t\\t\\t1\\ngrape\\n\"\n    ) == \"3\"\nassert solution(\n    \"4\\n\\t\\t\\tapple\\n\\t\\t\\torange\\n\\t\\t\\tapple\\n\\t\\t\\t1\\ngrape\\n\"\n    ) == \"3\"\nassert solution(\n    \"5\\n\\t\\t\\tapple\\n\\t\\t\\torange\\n\\t\\t\\tapple\\n\\t\\t\\t1\\ngrape\\n\"\n    ) == \"2\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nabcd\\njkl\\nzyx\\n123') == '2'\nassert solution('3\\nabcd\\njkl\\nzyx') == '0'\nassert solution('2\\nabcd\\njkl') == '0'\nassert solution('2\\nabcd\\njkl\\nk') == '1'\nassert solution('2\\nabcd\\njkl\\nk\\nl') == '2'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\nassert solution('TT') == 'TT'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"G\") == \"C\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\""
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 2 3 2') == '4'\nassert solution('4\\n1 2 3 2') == '5'\nassert solution('2\\n2 2 2 2') == '0'\nassert solution('2\\n1 2 2 2') == '0'\n\"\"\""
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '14'\nassert solution('5') == '14'\nassert solution('20') == '20'\nassert solution('60') == '21'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '14'\nassert solution('3 2 2 4 1') == '14'\nassert solution('3 2 2 3 1') == '3'\nassert solution('1 2 3 4 5') == '0'\nassert solution('5 5 5 5 5') == '0'"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"6\"\nassert solution(\"5 5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '14'\nassert solution('5\\n1 2 2 4 1') == '14'\n\"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nm = int(input())\nb = list(map(int, input().split()))\n\na.sort(reverse=True)\nb.sort(reverse=True)\n\ndp = [[0]*n for _ in range(m+1)]\n\nfor i in range(m+1):\n    for j in range(n):\n        if i == 0:\n            dp[i][j] = a[j]\n        else:\n            dp[i][j] = dp[i][j-1]\n\nfor i in range(m):\n    for j in range(n):\n        if j == 0:\n            dp[i+1][j] = b[i]\n        else:\n            dp[i+1][j] = max(dp[i+1][j-1], dp[i][j-1] + a[j])\n\nprint(max(dp[-1]))"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '14'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '14'\nassert solution('10') == '4'\nassert solution('3') == '3'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n1 2 2 2 1\n3 2 2 2 1''') == '6'\nassert solution('''5\n1 2 2 2 1\n1 2 2 2 1''') == '7'\nassert solution('''5\n1 2 2 2 1\n1 2 2 2 1''') == '7'\nassert solution('''5\n3 2 2 4 1\n3 2 2 2 1\n1 2 2 2 1''') == '10'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 2\n1 1 1''') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3') == '2'\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"10 9 5\") == \"7\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n1\n\n''') == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"2 2 2 2 2 2 2 2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1'\nassert solution('7 7') == '1'\nassert solution('7 7') == '1'\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\"\nassert solution(\"3 3\\n2 2 2\\n\") == \"0\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 3') == '3'\nassert solution('5 5 5 5') == '4'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 5') == '2'\nassert solution('3 3') == '1'\n\"\"\"\n\nfrom heapq import heappush, heappop\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('0 0 1\\n2 1 2\\n1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n1 1 1\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 1 1\\n2 1 2\\n1 0 1') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 1') == \"Yes\"\nassert solution('2 1 2') == \"Yes\"\nassert solution('1 0 1') == \"Yes\""
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\\n2 1 2\\n1 1 1\") == \"No\""
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\nprint(solution(input()))"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ABCD\") == \"ARC\"\nassert solution(\"CAB\") == \"ARC\"\nassert solution(\"CABD\") == \"ARC\"\nassert solution(\"ABCABC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2\") == \"3\"\nassert solution(\"1 2 1\") == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 10 2') == '2'\nassert solution('4 100 2') == '1'\nassert solution('4 100 100 2') == '0'\nassert solution('4 100 0 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\") == \"3\"\nassert solution(\"2 8 2\") == \"3\"\nassert solution(\"4 4 2\") == \"0\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"5 2 5\") == \"4\"\nassert solution(\"4 3 4\") == \"1\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"100 8 9\") == \"0\"\nassert solution(\"6 10 20 2\") == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('10 10 2') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"1 10 1\") == \"10\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('7 5 3') == '2'\nassert solution('10 8 3') == '1'\n\n'''\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 7') == '0'\nassert solution('4 8 3') == '3'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"1 1 1 1 1 1 1 1 1\"\nassert solution(\"14\") == \"1 1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"15\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"22\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\""
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('18') == \"Christmas Eve Eve Eve Eve\"\nassert solution('21') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas\"\nassert solution('23') == \"Christmas Eve\"\nassert solution('24') == \"Christmas Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Should be Christmas\"\nassert solution(\"24\") == \"Christmas Eve\", \"Should be Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Should be Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Should be Christmas Eve Eve Eve\""
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == '31 Dec'\nassert solution('15') == '30 Dec'\nassert solution('14') == '29 Dec'\nassert solution('13') == '28 Dec'\nassert solution('12') == '27 Dec'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('25') == 'Christmas', 'Test 1 failed'\nassert solution('24') == 'Christmas Eve', 'Test 2 failed'\nassert solution('23') == 'Christmas Eve Eve', 'Test 3 failed'\nassert solution('22') == 'Christmas Eve Eve Eve', 'Test 4 failed'\nassert solution('21') == 'Christmas Eve Eve Eve Eve', 'Test 5 failed'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('22') == 'Christmas Eve Eve Eve Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve'\nassert solution('25') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('21') == 'Christmas Eve Eve Eve Eve'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4', 'First'\nassert solution('8') == '3', 'Second'\nassert solution('3') == '1', 'Third'\n\n\"\"\""
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '4'\nassert solution('23') == '1'\nassert solution('2345') == '1'\nassert solution('98765') == '1'\nassert solution('7777') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n6\n''') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(Takahashi) == 4\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 4\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"17\") == \"3\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 7, 9, 3]) == \"Yes\"\nassert solution([2, 4, 8, 5]) == \"Yes\"\nassert solution([5, 8, 7, 6]) == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 5 8') == 'Yes'\nassert solution('1 2 5 8') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 0\") == \"Yes\"\nassert solution(\"9 7 9 1\") == \"Yes\"\nassert solution(\"4 4 1 4\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 7, 9, 3]) == \"Yes\"\nassert solution([1, 1, 1, 1]) == \"Yes\"\nassert solution([1, 1, 1, 100]) == \"No\"\nassert solution([1, 100, 1, 1]) == \"No\"\nassert solution([1, 1, 1, 1]) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 5') == \"Yes\"\n\nassert solution('4 7 9 3') == \"No\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4 5 1\n''') == 'Yes'\nassert solution('''\n4\n1 2 3\n''') == 'No'\nassert solution('''\n4\n4 5 1\n''') == 'Yes'\n''')"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4]) == \"Yes\"\nassert solution([4, 2, 3, 1]) == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('5 5 8 7') == 'Yes'\nassert solution('5 5 9 9') == 'Yes'\nassert solution('2 1 1') == 'Yes'\nassert solution('4 2 5') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 6 7 3\") == \"Yes\""
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('GeeksForGeeks') == 'FG'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER BEGINNER CONTEST\") == \"ABC\""
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n'''"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ABC\""
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\".\\n.\\n\") == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '50 100 120\\n'\n    '10 20 30 40\\n'\n    '100 120') == 'Yes'\nassert solution(\n    '10 20 30 40\\n'\n    '10 20 30 40\\n'\n    '30 40 60\\n'\n    '10 20 30 40\\n'\n    '100 120') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 50 100\") == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''50 100 120''') == 'Yes'\nassert solution('''0 50 100 120''') == 'No'\nassert solution('''50 0 100 120''') == 'No'\nassert solution('''50 50 100 120''') == 'Yes'\nassert solution('''30 30 100 120''') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 50 10') == 'Yes'\nassert solution('5 1 10') == 'No'\nassert solution('50 500 100') == 'Yes'\n'''"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('100 150 120') == 'No'\nassert solution('50 100 120 -50') == 'Yes'\nassert solution('150 150 120') == 'No'\nassert solution('50 100 120 -50 -150') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"15 20 25\") == \"No\"\nassert solution(\"15 20 30\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'No'\nassert solution('1 2 3') == 'Yes'\nassert solution('4 3 2') == 'Yes'\nassert solution('1 2 3') == 'No'"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 50 100\") == \"No\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 5 100\n''') == 'Yes'\nassert solution('''\n10 5 100\n''') == 'No'\nassert solution('''\n100 500 1000\n''') == 'Yes'\nassert solution('''\n100 500 1000\n''') == 'No'\nassert solution('''\n1000 500 100\n''') == 'No'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '5'\nassert solution('4 8') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 8\n7 9 8 9\n''') == '5'\n''')"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'\n\n\"\"\""
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('3 2') == '3'\nassert solution('7 9 8 9') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 8\n7 9 8 9\n''') == '5'\nassert solution('''\n4 8\n1 2 3 4\n''') == '1'\nassert solution('''\n4 8\n1 2 3 4\n''') == '1'\nassert solution('''\n4 8\n1 2 3 4\n''') == '1'\nassert solution('''\n4 8\n1 2 3 4\n''') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"2 1\\n2 4 2 3\") == \"3\""
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nassert solution('4 7\\n7 9 8 9') == '1'\nassert solution('4 5\\n7 9 8 9') == '1'\n\"\"\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4 2 1 3'\nassert solution('5') == '5 2 1 3 4'\nassert solution('6') == '5 2 1 3 4 5'\n\n----------------"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4 2 1 3\"\nprint(solution())"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4 2 1 3'\nassert solution('10') == '10 1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"3\\n1 2 3\") == \"3 1 2\"\nassert solution(\"2\\n1 2\") == \"2 1\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"3 4 5 2 6 1\") == \"2 1 3 4 5 6\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3 2 1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 2 1 3 4\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4 2 1 3'\nassert solution('4\\n5 6 7') == '7 6 5 4'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4 2 1 3\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 2\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('2 4') == 'No'"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 1\") == \"No\"\nassert solution(\"10 2\") == \"Yes\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"15 3\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"4 5\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"2 3\\n0 1 2\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('8 3') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('10 3') == 'No'\nassert solution('10 6') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('20 10') == 'No'\n\n\"\"\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"100 3\\n4 5 6\") == \"No\""
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '8'\nassert solution('abaababa') == '3'\nassert solution('abaabab') == '3'\nassert solution('abaab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '2'\nassert solution('abaabab') == '3'\nassert solution('abaaba') == '3'\nassert solution('ba') == '1'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaabab') == '4'\nassert solution('abaaba') == '3'\nassert solution('ababab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"1\"\nassert solution(\"abaabab\") == \"2\"\nassert solution(\"abaaba\") == \"2\"\nassert solution(\"aba\") == \"2\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 5\nassert solution('abaabab') == 4\nassert solution('abaab') == 3\nassert solution('ab') == 2\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaaba\") == \"2\"\nassert solution(\"aba\") == \"2\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"1\"\nassert solution(\"abaabab\") == \"2\"\nassert solution(\"abaaba\") == \"1\"\nassert solution(\"aba\") == \"2\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '2'\nassert solution('abaabab') == '1'\nassert solution('abaab') == '0'\nassert solution('aab') == '1'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''bac''') == 'Yes'\nassert solution('''abc''') == 'No'\nassert solution('''baa''') == 'No'\nassert solution('''aab''') == 'Yes'\nassert solution('''bba''') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes', 'Check your code'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('aabc') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aabbccddeeff\") == \"Yes\"\nassert solution(\"babcbcac\") == \"No\"\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"a\") == \"Yes\"\n\"\"\"\nfrom typing import Dict"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('aab') == 'No'\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes', \"BAD TEST CASE\"\nassert solution('acb') == 'Yes', \"BAD TEST CASE\"\nassert solution('baca') == 'Yes', \"BAD TEST CASE\"\nassert solution('bacac') == 'Yes', \"BAD TEST CASE\"\nassert solution('abc') == 'Yes', \"BAD TEST CASE\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n8 7 2 4\\n9 7 2 9 3') == '646'\nassert solution('1\\n1000000\\n1000000\\n') == '757402647'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('1000000') == '76649544174813586'\nassert solution('1000000') == '76649544174813586'\nassert solution('2') == '20'\nassert solution('2') == '20'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '646'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"646\""
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"21\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646', 'Should be 46'\nassert solution('''\n1\n1000000\n1000000\n''') == '757402647', 'Should be 757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"3\\n5 2\\n4 5\\n\") == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t1) == '86'\nassert solution(t2) == '73'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n\n\"\"\""
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n\") == \"7\"\nassert solution(\"1\\n2\\n4\\n6\\n\") == \"17\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"17\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\\\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n\"\"\") == \"7\"\nassert solution(\"\"\"\\\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n\"\"\") == \"17\"\nassert solution(\"\"\"\\\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('5 1 4') == '17'\nassert solution('9 1 4') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 4\") == \"17\"\nassert solution(\"7 4 8\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"\nassert solution(\"2 5 4 2 6 3 1\") == \"7\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4 5') == '17'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 8') == '17'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''\n3 1\n2 1\n''') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"4 5\\n\"\n    \"4 6\\n\"\n    \"5 7\"\n) == \"2\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\""
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([7]) == '2'\nassert solution([7, 1, 2]) == '1'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7]) == '0'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7, 1]) == '1'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7]) == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\n''') == '1'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\n''') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"7\") == \"1\""
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\nassert solution('7') == '1'"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n5 3\n7 12\n1 1000000000\n2 1\n3 1000000000\n4 1000000000\n''') == '1999999999'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1999999999'\nassert solution('7 97') == '113'\nassert solution('1000000001') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1999999999'\nassert solution('7 97') == '1000000001'\nassert solution('1000000000 1000000000') == '1'"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n2\n1\n4\n5''') == '1999999999'\nassert solution('''5\n7\n10000000\n10000000\n10000000\n10000000\n50000000''') == '1000000001'\nassert solution('''5\n12\n1\n2\n3\n4\n5''') == '1000000001'\nassert solution('''5\n13\n100000000000\n10000000\n10000000\n10000000\n10000000\n10000000''') == '100000000000'\nassert solution('''5\n11\n100000000\n10000000\n10000000\n10000000\n10000000\n10000000''') == '10000000'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"10\"\nassert solution(\"4 12\") == \"1999999999\"\nassert solution(\"2 1000000000\") == \"1000000001\"\nassert solution(\"7 97\") == \"113\"\nassert solution(\"1000000000 1000000000\") == \"1\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '11'\nassert solution('3') == '21'\nassert solution('4') == '41'\nassert solution('5') == '51'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n5 8\n7 9\n10 1000000000\n1 1000000000\n2 1000000000\n10 1\n''') == '1999999999'\nassert solution('''\n5 8\n7 9\n10 1000000000\n1 1000000000\n2 1000000000\n10 1\n''') == '113'\nassert solution('''\n5 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\n\n'''\nfor t in range(int(input())):\n    n, k = map(int, input().split())\n    r = list(range(n, 10**9+1))\n    for i in range(n):\n        if i % n!= 0:\n            r.remove(i)\n            break\n    print(r[k-1])\n\n'''"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '11'\nassert solution('10 7') == '1999999999'\nassert solution('10 1000000000') == '1000000001'\n\n\n\"\"\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nprint(solution())\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2\") == \"2\\n2 1\"\nassert solution(\"10 4\") == \"3\\n1 3 2\""
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 3 3 1 2 1\\n') == '2\\n1 3 2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\nprint(\"OK\")\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 2 3 2 1 3 2''') == '2 1'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3 2'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n3 1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n\n'''\n--- Part Two ---\n\nThe boss is vanquished and you prevail!\n\nEach of the $n$ turns starts with a block of input containing the card parameters of the cards you just dealt and your character's attack bonus.\n\nYou have to win at least $5$ additional turns to win the game.\n\nTo win, you need to play as many cards as possible. However, you need to play each card one time, and each time you do, you lose any number of turns equal to the number of cards in the block.\n\nIn the above example, the boss gets rid of 2 cards, and you win the game at least 3 additional turns.\n\nGive your answer as a single integer, the maximum amount of turns you can win in total.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of turns.\n\nThen $n$ blocks of input follow, the $i$-th block representing the parameters of the cards you just dealt and your character's attack bonus.\n\nEach block begins with a line containing one integer $k_i$ ($1 \\le k_i \\le 2 \\cdot 10^5$) \u2014 the number of cards you just played during $i$-th turn. Then $k_i$ lines follow, each containing two integers $c_j$ and $d_j$ ($1 \\le c_j \\le 3$, $1 \\le d_j \\le 10^9$) \u2014 the parameters of the corresponding card.\n\nIt is guaranteed that $\\sum \\limits_{i = 1}^{n} k_i \\le 2 \\cdot 10^5$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum amount of turns you can win.\n\n\n-----Example-----\nInput\n8\n1 5\n1 3\n1 7\n2 4\n2 7\n2 5\n1 3\n1 4\n2 3\n2 5\n\nOutput\n8\n\n\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '263'\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"263\"\nprint(solution(input))\n\"\"\"\nimport sys\nfrom collections import deque\nfrom collections import namedtuple\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3''') == '263'\nassert solution('''10\n2\n1 3\n1 2\n1 1\n1 10\n1 5\n2 2\n2 1\n2 3\n3''') == '241'\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nprint(solution(input))\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '6'\nassert solution('aabacabb') == '3'\nassert solution('dbcbacab') == '3'\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"abacaba\"\n) == \"3\"\nassert solution(\n    \"dfcbbcfeeedbaea\"\n) == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"154873296\\n\" \\\n                         \"386592714\\n\" \\\n                         \"729641835\\n\" \\\n                         \"863725149\\n\" \\\n                         \"975314628\\n\" \\\n                         \"412968357\\n\" \\\n                         \"631457982\\n\" \\\n                         \"598236471\\n\" \\\n                         \"247189563\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"154873396\"\nassert solution(\"3\") == \"856549814\"\nassert solution(\"4\") == \"856549814\"\nassert solution(\"5\") == \"856549814\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n\"\"\") == \"154873296\"\n\nassert solution(\"\"\"\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n\"\"\") == \"154873296\"\n\nassert solution(\"\"\"\n\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\n\"\"\") == \"154873296\""
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    154873296\n    386592714\n    729641835\n    863725149\n    975314628\n    412968357\n    631457982\n    598236471\n    247189563\n''') == '154873296\\n386592714\\n729641835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n', 'Should be \"154873296\\n386592714\\n729641835\\n863725145\\n979314628\\n412968357\\n631457992\\n998236471\\n247789563\"'"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n[Image]\n\nBlocks are bordered with bold black color.\n\nYour task is to change at most $9$ elements of this field (i.e. choose some $1 \\le i, j \\le 9$ and change the number at the position $(i, j)$ to any other number in range $[1; 9]$) to make it anti-sudoku. The anti-sudoku is the $9 \\times 9$ field, in which:  Any number in this field is in range $[1; 9]$;  each row contains at least two equal elements;  each column contains at least two equal elements;  each $3 \\times 3$ block (you can read what is the block in the link above) contains at least two equal elements. \n\nIt is guaranteed that the answer exists.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case consists of $9$ lines, each line consists of $9$ characters from $1$ to $9$ without any whitespaces \u2014 the correct solution of the sudoku puzzle.\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the initial field with at most $9$ changed elements so that the obtained field is anti-sudoku. If there are several solutions, you can print any. It is guaranteed that the answer exists.\n\n\n-----Example-----\nInput\n1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\nOutput\n154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n\"\"\") == \"\"\"154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n\"\"\""
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '154873396'\nassert solution('2') == '336592714'\nassert solution('3') == '729645835'\nassert solution('4') == '863725145'\nassert solution('5') == '979314628'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '412958357\\n98236471\\n998236471\\n247789563\\n336592714'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"1 2 3 4 5 6 7 8 9\\n\" \\\n\nassert solution(\"\"\"\n9\n2 3 1 0 6 5 7 8 4\n8 5 7 2 9 4 3 6 1\n4 7 9 6 3 8 5 2 1\n6 1 5 3 7 4 2 8 9\n5 8 1 6 7 4 9 3 2\n3 2 9 1 4 7 8 5 6\n7 9 8 6 5 2 4 1 3\n4 5 2 6 8 3 1 7 9\n2 1 3 7 4 8 5 6 9\n\"\"\") == \"2 3 1 0 6 5 7 8 4\\n\" \\\n       \"8 5 7 2 9 4 3 6 1\\n\" \\\n       \"4 7 9 6 3 8 5 2 1\\n\" \\\n       \"6 1 5 3 7 4 2 8 9\\n\" \\\n       \"5 8 1 6 7 4 9 3 2\\n\" \\\n       \"3 2 9 1 4 7 8 5 6\\n\" \\\n       \"7 9 8 6 5 2 4 1 3\\n\" \\\n       \"4 5 2 6 8 3 1 7 9\\n\" \\\n       \"2 1 3 7 4 8 5 6 9\\n\"\n\nassert solution(\"\"\"\n2\n9 8 6 7 5 3 4 2 1\n8 5 2 3 1 7 4 6 9\n3 7 4 1 9 2 8 6 5\n4 1 5 6 2 8 7 3 9\n2 6 9 5 3 7 4 1 8\n1 8 7 4 9 2 5 6 3\n6 9 1 3 5 2 4 8 7\n5 7 2 1 4 8 6 3 9\n3 1 7 8 9 5 6 2 4\n4 6 8 9 2 5 1 3 7\n\"\"\") == \"2 9 8 6 7 5 3 4 2 1\\n\" \\\n       \"8 5 2 3 1 7 4 6 9\\n\" \\\n       \"3 7 4 1 9 2 8 6 5\\n\" \\\n       \"4 1 5 6 2 8 7 3 9\\n\" \\\n       \"2 6 9 5 3 7 4 1 8\\n\" \\\n       \"1 8 7 4 9 2 5 6 3\\n\" \\\n       \"6 9 1 3 5 2 4 8 7\\n\" \\\n       \"5 7 2 1 4 8 6 3 9\\n\" \\\n       \"3 1 7 8 9 5 6 2 4\\n\" \\\n       \"4 6 8 9 2 5 1 3 7\\n\"\n\nassert solution(\"\"\"\n1\n6\n1 2 3 4 5 6\n2 4 5 6 3 1\n3 4 5 6 1 2\n6 5 4 3 2 1\n5 4 3 2 1 6\n4 3 2 1 6 5\n\"\"\") == \"6\\n\" \\\n       \"1 2 3 4 5 6\\n\" \\\n       \"2 4 5 6 3 1\\n\" \\\n       \"3 4 5 6 1 2\\n\" \\\n       \"6 5 4 3 2 1\\n\" \\\n       \"5 4 3 2 1 6\\n\" \\\n       \"4 3 2 1 6 5\\n\"\n\nassert solution(\"\"\"\n5\n1 4 3 2 8 5\n7 3 9 2 8 4\n4 2 5 1 3 9\n2 9 5 3 4 1\n8 5 9 4 2 3\n3 2 1 4 5 8\n\"\"\") == \"1 2 3 4 5 6 7 8 9\\n\" \\\n       \"7 3 9 2 8 4\\n\" \\\n       \"4 2 5 1 3 9\\n\" \\\n       \"2 9 5 3 4 1\\n\" \\\n       \"8 5 9 4 2 3\\n\" \\\n       \"3 2 1 4 5 8\\n\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873296\\n386592714\\n729641835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n\n------"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution(stdin='1 1 1 3 5 3 5 7') == '6'\nassert solution(stdin='1 1 1 3 5 3 5 7') == '-1'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '4'"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"3\"\nassert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"6\"\nassert solution(\"\"\"\n8 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 5\n1 2 1 3 5\n1 3\n1 5\n3 2\n2 4\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 5\n1 2 1 3 5\n1 3\n1 5\n3 2\n2 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 2\n1 1 1 3 5\n3 1\n3 4\n3 1\n1 5\n1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '4'\n\nassert solution('''\n9 10\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\n\nassert solution('''\n1\n2\n''') == '-1'"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5 10\n    1 1 1 2 2 2 3 3 3 4 4 4 5 5 5 6 6 6 7 7 7 8 8 9 9 9 10 10\n    2\n    1 2\n    2 4\n    3 3\n    3 2\n    5 3\n    6 2\n    7 7\n    8 5\n    9 4\n    10 5\n    '''\n) == \"4\"\n\nassert solution(\n    '''\n    5 6\n    1 3\n    2 2\n    3 4\n    3 2\n    5 3\n    6 4\n    5 4\n    6 5\n    7 3\n    7 2\n    8 3\n    8 2\n    9 2\n    9 2\n    10 3\n    10 4\n    '''\n) == \"5\"\n\nassert solution(\n    '''\n    5 3\n    1 1\n    2 2\n    3 2\n    3 3\n    '''\n) == \"1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\n6 2') == '8'\nassert solution('7\\n7 3') == '7'\nassert solution('7\\n7 2') == '7'\nassert solution('6\\n6 1') == '6'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"4\") == \"6\"\nassert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '9 6\\n'\n    '1 1 1 3 5 3 5 7\\n'\n    '3 1\\n'\n    '1 5\\n'\n    '3 4\\n'\n    '7 3\\n'\n    '1 8\\n'\n    '1 9\\n'\n    ) == '6\\n'\nassert solution(\n    '10 7\\n'\n    '3 1\\n'\n    '2 1\\n'\n    '3 1\\n'\n    '4 2\\n'\n    '1 5\\n'\n    '5 4\\n'\n    '2 4\\n'\n    '4 5\\n'\n    '3 6\\n'\n    '1 5\\n'\n    '1 6\\n'\n    '5 2\\n'\n    '5 4\\n'\n    '2 5\\n'\n    '2 6\\n'\n    '4 6\\n'\n    '4 5\\n'\n    '4 7\\n'\n    '4 8\\n'\n    '7 1\\n'\n    '6 5\\n'\n    '6 3\\n'\n    '6 4\\n'\n    '6 6\\n'\n    '6 5\\n'\n    '6 5\\n'\n    '5 6\\n'\n    '5 7\\n'\n    '5 5\\n'\n    '5 4\\n'\n    '5 3\\n'\n    '5 3\\n'\n    '5 2\\n'\n    '5 2\\n'\n    '5 5\\n'\n    '5 4\\n'\n    '5 4\\n'\n    '4 5\\n'\n    '4 5\\n'\n    '4 6\\n'\n    '4 7\\n'\n    '4 8\\n'\n    '4 9\\n'\n    '4 3\\n'\n    '4 2\\n'\n    '4 2\\n'\n    '4 1\\n'\n    '4 1\\n'\n    '4 1\\n'\n    '4 1\\n'\n    '4 1\\n'\n    '3 3\\n'\n    '3 3\\n'\n    '3 2\\n'\n    '2 3\\n'\n    '2 2\\n'\n    '2 1\\n'\n    '1 2\\n'\n    '1 2\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == 'YES'\nassert solution('100 101 102 105') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'YES'\nassert solution('0 0 0') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\", \"Should be YES\"\nassert solution(\"100 101 102 105\") == \"YES\", \"Should be YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\", \"Should be NO\"\nassert solution(\"10 20 15 14\") == \"YES\", \"Should be YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n''') == 'YES'\nassert solution('''1 2 3 4 5\n10 20 30 40 50\n''') == 'NO'\nassert solution('''2 3 5 6\n10 20 30 40 50\n''') == 'YES'\nassert solution('''1 3 5\n10 20 30 40\n''') == 'YES'\nassert solution('''3 3 3\n10 20 30 40\n''') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES\\nYES\\nNO\\nNO\\nYES'"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"NO\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\""
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 2 8') == \"YES\"\nassert solution('100 101 102 105') == \"YES\"\nassert solution('3 2 1 100000000') == \"NO\"\nassert solution('10 20 15 14') == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"YES\""
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10') == '9 8 12 6 8'\nassert solution('5 5') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"9 8 12 6 8\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '3 4 6 5'\nassert solution('4 5') == '3 4 6 5'\nassert solution('2 4') == '3 3'\nassert solution('4 2') == '3 3'\n\n\n\n'''"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 4\n1 2 3 4\n\"\"\") == \"3 4 6 5\"\nassert solution(\"\"\"5 5\n2 1 5 3 5\n\"\"\") == \"9 8 12 6 8\"\nassert solution(\"\"\"2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n2 1 5 3 5\n''') == \"3 3\"\nassert solution('''\n4 4\n1 2 3 4\n''') == \"3 4 6 5\"\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == \"3 3\"\nassert solution('''\n3 3\n2 1 5 3 5\n''') == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 4\n1 2 3 4\n''') == '3 4 6 5 \n\nassert solution(\n'''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n\nassert solution(\n'''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 2 3 4\n''') == '3 4 6 5', f\"failed test #1, {solution('''\n3 4\n1 2 3 4\n''')}\"\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8', f\"failed test #2, {solution('''\n5 5\n2 1 5 3 5\n''')}\"\n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n\nassert solution('''\n2 2\n1 2\n''') == '1'\n\nassert solution('''\n0 0\n2 2\n''') == '0'"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"3 4 6 5\""
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES'\nassert solution('10 5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n\"\n             \"1 2\\n\"\n             \"1 3\\n\"\n             \"1 4\\n\"\n             \"2 5\\n\"\n             \"2 6\\n\"\n             \"3 7\\n\"\n             \"7 8\\n\"\n             \"7 9\\n\"\n             \"9 10\\n\"\n             \"4 3 8 9 10\\n\"\n             \"3 2 4 6\\n\"\n             \"3 2 1 5\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\""
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 6\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"3 7\\n\"\n    \"7 8\\n\"\n    \"7 9\\n\"\n    \"9 10\\n\"\n    \"4 3 8 9 10\\n\"\n    \"3 2 4 6\\n\"\n    \"3 2 1 5\\n\"\n) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\n\n'''\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'NO'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'NO'"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 6\\n'\n                '1 2\\n'\n                '1 3\\n'\n                '1 4\\n'\n                '2 5\\n'\n                '2 6\\n'\n                '3 7\\n'\n                '7 8\\n'\n                '7 9\\n'\n                '9 10\\n'\n                '4 3 8 9 10\\n'\n                '3 2 4 6\\n'\n                '3 2 1 5\\n') == 'YES\\n'\n\nassert solution('10 10\\n'\n                '2 2\\n'\n                '2 5\\n'\n                '2 6\\n'\n                '2 7\\n'\n                '2 8\\n'\n                '3 4\\n'\n                '3 6\\n'\n                '3 7\\n'\n                '4 8\\n'\n                '5 5\\n'\n                '5 6\\n'\n                '5 7\\n'\n                '6 7\\n'\n                '6 6\\n'\n                '6 5\\n'\n                '6 5\\n'\n                '7 7\\n'\n                '7 6\\n'\n                '7 5\\n'\n                '7 5\\n'\n                '8 6\\n'\n                '8 7\\n'\n                '8 5\\n'\n                '8 5\\n'\n                '9 9\\n'\n                '9 7\\n'\n                '9 8\\n'\n                '9 5\\n'\n                '9 5\\n'\n                '10 10\\n') == 'NO\\n'\n\nassert solution('10 6\\n'\n                '1 2\\n'\n                '1 3\\n'\n                '1 4\\n'\n                '2 5\\n'\n                '2 6\\n'\n                '3 7\\n'\n                '7 8\\n'\n                '7 9\\n'\n                '9 10\\n'\n                '4 3 8 9 10\\n'\n                '3 2 4 6\\n'\n                '3 2 1 5\\n') == 'NO\\n'\n\nassert solution('10 10\\n'\n                '2 2\\n'\n                '2 5\\n'\n                '2 6\\n'\n                '2 7\\n'\n                '2 8\\n'\n                '3 4\\n'\n                '3 6\\n'\n                '3 7\\n'\n                '4 8\\n'\n                '5 5\\n'\n                '5 6\\n'\n                '5 7\\n'\n                '6 7\\n'\n                '6 6\\n'\n                '6 5\\n'\n                '6 5\\n'\n                '7 7\\n'\n                '7 6\\n'\n                '7 5\\n'\n                '7 5\\n'\n                '8 6\\n'\n                '8 7\\n'\n                '8 5\\n'\n                '8 5\\n'\n                '9 9\\n'\n                '9 7\\n'\n                '9 8\\n'\n                '9 5\\n'\n                '9 5\\n'\n                '10 10\\n') == 'NO\\n'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == 'NO'\nassert solution('2\\n3') == 'YES'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n10\n2 2 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n10\n2 2 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nNO\""
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"1111100\") == \"0011111\"\nassert solution(\"7 11\") == \"0100110\"\nassert solution(\"1111100\") == \"0100110\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n\nassert solution('''2\n1\n2''') == '01'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '01011110'\nassert solution() == '0101111'\nassert solution() == '0011111'\n\n\"\"\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '01011110'\nassert solution(input()) == '0101111'\nassert solution(input()) == '0011111'\n\"\"\"\n\nimport sys\nimport math\nimport re"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n10 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n\nassert solution('''\n2\n9 3\n111\n''') == '111'\n\"\"\"\nfrom collections import deque\nimport unittest\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110', '''01011110'''\nassert solution('''\n8 5\n1111100\n7 9\n11011010\n7 11\n1111100\n''') == '0111111', '''0111111'''\nassert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '11000111', '''11000111'''"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"8 6\") == \"01011101\"\nassert solution(\"3 3\") == \"011\"\n\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '01011110'"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '01011110'\nassert solution(input()) == '0101111'\nassert solution(input()) == '0011111'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('5 1') == '1 3 5 6'"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '4'\nassert solution('6 1') == '4'"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3\"\nassert solution(input_) == \"1 2 4 5 6\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '4'\nassert solution('7 2') == '3'\nassert solution('7 4') == '0'\nassert solution('8 8') == '4'\nassert solution('8 9') == '0'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 2\") == \"1 2 3\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"2\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"7 1\") == \"6\"\nassert solution(\"9 1\") == \"9\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\n\nprint(solution('''\n7 3\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n'''))"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 2 4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n4\\n1 2\\n3 4\") == \"3\\n1 4\"\n\nassert solution(\n    \"3\\n4\\n1 3\\n2 3\\n3 4\") == \"4\\n1 2 3 4\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"3\"\nassert solution(\"7 2\") == \"1 4 7\"\nassert solution(\"5 1\") == \"3\""
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n1 2\\n-3 0\"\n) == \"3\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2\n-3 0\n''') == '19'\nassert solution('''5\n2 1\n-3 0\n''') == '18'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '19'\nassert solution('2') == '0'\nassert solution('4') == '6'\nassert solution('5') == '18'"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('2 1') == '2'\nassert solution('-100 2 3') == '2'\nassert solution('-100 3 2') == '2'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n2\n2 1\n-3 0\n''') == '0'"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"19\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2\n1 2\n-100 2 3\n\n''') == '3'\n\nprint(solution(\n'''\n3\n3 3 3\n-100 2 3\n\n'''))"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 3 2\n-100 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\"\"\"\n2\n1\n-3 0\n\"\"\") == \"0\""
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '21 7 15 21 3 \n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1 3 3 \nassert solution('7 5') == '21 7 15 21 3 \nassert solution('1 2') == '0 0 \nassert solution('3 2') == '1 3 3 \n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '21 7 15 21 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '7 5\\n'\n    '1 2 1\\n'\n    '3 2 3\\n'\n    '2 4 1\\n'\n    '4 5 2\\n'\n    '5 7 4\\n'\n    '3 6 2\\n'\n    '5 2 3 4 1\\n') == '21 7 15 21 3'\n\nassert solution(\n    '3 3\\n'\n    '1 2 1\\n'\n    '2 3 2\\n'\n    '1 3 2\\n') == '1 3 3'\n\nassert solution(\n    '1 2\\n'\n    '1 2\\n') == '0 0'"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input) == '1 3 3'\nprint(solution(stdin))\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '21 7 15 21 3'\n\n\n\"\"\""
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5\") == \"21 7 15 21 3\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == stdout\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == \"21 7 15 21 3\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''5\n5\n1 2 2\n1 3 4 5\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5\n1 2 4\n3\n1 2 4\n3\n1 5\n1 2 4\n1 3 4\n1 5"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3\n2\n2\n3\n''') == 'YES'\nassert solution('''\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n4\n1 2 2\n4\n3 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"YES\\nYES\\nYES\"\nassert solution(\"3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"NO\\nNO\\nYES\"\nassert solution(\"5\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"YES\\nYES\\nNO\"\nassert solution(\"5\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"YES\\nYES\\nNO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"YES\", solution(\"5\\n\")\nassert solution(\"3\\n\") == \"YES\", solution(\"3\\n\")\nassert solution(\"4\\n\") == \"YES\", solution(\"4\\n\")\nassert solution(\"3\\n\") == \"YES\", solution(\"3\\n\")\nassert solution(\"100\\n\") == \"YES\", solution(\"100\\n\")"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('100') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4\\n1010\\n1101\"\n) == \"12\"\nassert solution(\n    \"4 5\\n1001\\n10101\"\n) == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1010\\n') == '12'\nassert solution('4 5\\n1001\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\"\nprint(solution(input()))"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == '12'\nassert solution('''4 5\n1001\n10101\n''') == '11'\nassert solution('''7 5\n101010\n1110010\n''') == '5'"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1010\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1010\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NO'\nassert solution('4') == 'YES'\nassert solution('6') == 'YES'\nassert solution('8') == 'YES'\nassert solution('10') == 'YES'"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n4\n6\n8\n10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1\n4\n6\n8\n10\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n4\n6\n8\n10\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n6\n8\n10\n12\n14\n16\n18\n20\n\"\"\") == \"NO\""
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 4 1 5\\nNO\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n''') == 'NO'\nassert solution('''\n2\n2\n''') == 'YES'\nassert solution('''\n3\n2\n''') == 'YES'\nassert solution('''\n4\n4\n''') == 'YES'\nassert solution('''\n5\n2\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n4\\n') == 'YES'\nassert solution('5\\n10\\n') == 'YES'\nassert solution('4\\n6\\n') == 'NO'\nassert solution('4\\n8\\n') == 'NO'\nassert solution('4\\n10\\n') == 'YES'"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"YES\\n2 4 1 5\\nNO\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == \"NO\"\nassert solution('''3\n5\n7\n9\n1\n3\n5\n8\n2''') == \"YES\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n10\n1\n3\n5\n2\n7\n9\n11\n13\n14\n17\n20\n23\n24\n26\n29\n30\n32\n33\n35\n36\n37\n38\n39\n40\n41\n43\n44\n45\n46\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\nassert solution('''\n1\n3\n5\n7\n11\n13\n''') == 'YES'\nassert solution('''\n7\n2\n4\n6\n8\n10\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n\n\n\"\"\"\n\n\n\"\"\"---SOLUTION---\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == 'YES 2 4 1 5'\nassert solution('''1\n1\n1''') == 'NO'\nassert solution('''9\n1\n1\n1\n1\n1\n1\n1\n1''') == 'YES'"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n\n6\n\n4\n4 3 4\n3 1 2\n1 1 1 1\n2\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n\n5\n\n4\n4 3 4\n3 1 2\n1 1 1 1\n2\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution() == \"1\""
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution(input) == \"1\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2 2 3\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5\n1\n1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"1\""
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == \"5\"\nassert solution('4\\n6\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == \"0\""
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '4'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\") == \"1\"\nassert solution(\"5\\n5\\n7 8 9 2 1\") == \"0\"\nassert solution(\"6\\n8\\n5 2 4 7 3 2 1\") == \"3\"\nassert solution(\"6\\n5\\n7 8 9 2 1\") == \"0\"\nassert solution(\"10\\n8\\n2 5 3 7 8 9\") == \"3\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n'''\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n1\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '5'\nassert solution('''\n1\n1 2\n2 3\n1 4\n1 5\n2 5\n3 5\n1 7\n2 7\n2 7\n3 7\n2 7\n''') == '2'\nassert solution('''\n1\n1 5\n2 4\n2 3\n3 4\n1 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n1\n1 5\n2 4\n2 3\n3 4\n1 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '5'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7'''\n) == '4'"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"7\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n') == '3'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nassert solution('''3\n3\n1 2\n2 3\n2 4\n3 4\n1 3\n2 5\n2 4\n1 2\n2 3\n2 4\n2 5''') == '2'\nassert solution('''2\n2\n1 2\n2 3\n1 3\n2 4\n2 5''') == '2'\nassert solution('''5\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''1\n1\n1 2\n2 3\n2 4\n3 4\n1 3\n2 5\n2 4\n1 2\n2 3\n2 4\n2 5''') == '1'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'\nassert solution('''3\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '4'\n\n\"\"\""
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1180'"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"60\"\nassert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"1439\"\nassert solution(\"\"\"\n2\n23 55\n23 59\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n23 55\n23 59\n23 0\n0 1\n4 20\n\"\"\") == \"1180\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '60'\nassert solution('''5\n-1 -1\n2 2\n-1 -1\n2 2\n-1 -1''') == '1439'\nassert solution('''5\n-1 -1\n2 2\n-1 -1\n2 2\n-1 -1''') == '1180'\nassert solution('''5\n0 0\n0 0\n0 0\n0 0\n0 0''') == '1'\nassert solution('''5\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == '1439'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n\n-----Input-----\n\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n\n\"\"\") == \"\"\"\n60\n1439\n1180\n1\n\"\"\".strip()\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    1 1\n    2\n    1 2\n''') == '60'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5 55\n5 0\n0 1\n4 20\n23 59\n''') == '60'\n\nassert solution('''\n5\n6 55\n6 0\n0 1\n4 20\n23 59\n''') == '1439'\n\nassert solution('''\n6\n6 55\n6 0\n0 1\n4 20\n23 59\n''') == '1180'\n\nassert solution('''\n5\n0 55\n0 0\n0 1\n4 20\n23 59\n''') == '1'\n\nassert solution('''\n5\n0 55\n0 0\n0 1\n4 20\n23 59\n''') == '24'"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n23 55\n23 0\n0 1\n4 20\n''') == \"5\"\n\nassert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n''') == \"60\"\n\nassert solution('''\n6\n1 1\n4 3\n20 5\n7 1\n1 2\n4 10\n''') == \"1\"\n\nassert solution('''\n6\n1 4\n1 3\n7 5\n2 1\n4 6\n''') == \"7\"\n\nassert solution('''\n10\n5 5\n2 3\n6 1\n2 1\n2 3\n4 3\n6 4\n3 1\n3 1\n3 1\n''') == \"1\""
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '60'\nassert solution('1') == '1439'\nassert solution('4') == '1180'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '60'\nassert solution('4') == '1180'\nassert solution('2') == '1'\nassert solution('0') == '1'\nassert solution('23 55') == '60'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == \"60\"\nassert solution('''\n2 9\n22 14\n22 0\n''') == \"1439\"\nassert solution('''\n3 8\n13 21\n13 59\n''') == \"1180\"\n''') == \"1\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nLRUD\\n4\\nLURD\\n') == '1 2'\nassert solution('4\\nLRUD\\n4\\nLURD\\n') == '3 4'\nassert solution('4\\nLRUD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '1 4'\nassert solution('4\\nLRUD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '3 4'\nassert solution('4\\nLRUD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nRLURD\n4\nLURD\n''') == '1 2'\nassert solution('''\n5\nLLRDU\n5\nRRLRD\n''') == '3 4'\nassert solution('''\n3\nLRUD\n''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1 2'\nassert solution('5') == '1 4'\nassert solution('6') == '3 4'\nassert solution('7') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2'\nassert solution() == '1 4'\nassert solution() == '3 4'\nassert solution() == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4'\nassert solution('''\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4'\nassert solution('''\n2\n1\nU\n2\n2\n''') == '1 1'\nassert solution('''\n2\n3\nU\n2\n2\n''') == '1 2'\nassert solution('''\n3\n2\nD\n2\n2\n''') == '1 2'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2'\nassert solution('2 5\\nRRDDU') == '2 4'\nassert solution('6 5\\nRDDDRU') == '2 5'\nassert solution('1 5\\nRURDDU') == '2 5'\nassert solution('1 1\\nRURDDU') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nRRUDU\\n') == '3 4'\nassert solution('4\\nLRUD\\n') == '1 2'\nassert solution('1\\nRRUDU\\n') == '1 4'\nassert solution('5\\nRRUDU\\n') == '3 4'\nassert solution('3\\nLLDDR\\n') == '3 4'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nRRUDU\n1 2\nLRUD''') == '-1'\nassert solution('''4\nLRUD\n4\nLURD''') == '3 2'\nassert solution('''5\nRRUDU\n5\nLLDDR''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nRRDDDRR\n3\n''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 5 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n\n'''\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n4\n6\n2 2 4 2 3\n3\n3\n5\n4\n''') == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3'\nassert solution('5\\n6\\n5 5 5 5 5\\n6\\n6 6 6 6\\n7\\n7 7 7 7\\n8\\n8 8 8 8\\n9\\n9 9 9 9\\n10\\n10 10 10 10\\n') == '2'\nassert solution('2\\n6\\n5 5 5 5 5\\n6\\n6 6 6 6\\n7\\n7 7 7 7\\n8\\n8 8 8 8\\n9\\n9 9 9 9\\n10\\n10 10 10 10\\n') == '2'\nassert solution('10\\n11\\n
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution([5, 2, 4, 1, 4, 3, 4]) == '2'\nassert solution([7, 4, 4, 1, 4, 3, 4]) == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 4 5\n2 3 3 2\n3 5\n4 4 4 4\n5\n2 1 5 4 3\n1\n1\n5\n1 1 1 3\n''') == '2'\nassert solution('''2\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n5 5\n5 5\n''') == '0'\nassert solution('''2\n5\n4 5 5 5 5\n4 4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4 4 4\n5\n5 5\n4 4 4 4\n4 4"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3\\n1\\n0\\n2'\nassert solution('5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '2\\n0\\n0\\n2'"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1337\") == \"0\"\nassert solution(\"1\\n1337\") == \"0\"\nassert solution(\"10\\n1337\") == \"1337\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1337\n\n''') == '0'\n\nassert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\n''') == '121'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1337\n\n''') == '0'\nassert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\n''') == '121'\nassert solution('''\n2\n1\n\n''') == '0'\nassert solution('''\n3\n1\n\n''') == '0'\nassert solution('''\n4\n1\n\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution('1') == '0'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'\nassert solution('1337') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n4\n6\n1 2\n1 3\n3 4\n''') == '36'\nassert solution('''\n3\n7\n1 2\n1 3\n3 4\n''') == '17'\nassert solution('''\n9\n1 3\n2 5\n1 6\n6 7\n5 8\n3 9\n''') == '33'\nassert solution('''\n10\n1 3\n2 5\n1 6\n6 7\n5 8\n3 9\n''') == '33'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == \"18\"\nassert solution('''\n3 2\n3 1 3\n11 12\n8 9\n''') == \"0\"\n'''"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 1 3''') == '6'\nassert solution('''5 10\n8 7 1 8 3 7 5 10 8 9''') == '227'\nassert solution('''5 10\n20 100 50 20 100500''') == '8'\nassert solution('''5 10\n24 24 24 24 24 24 24 24 24 24''') == '0'\nassert solution('''5 10\n6 6 6 6 6 6 6''') == '18'"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"18\"\nassert solution('''5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"227\"\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"0\"\nassert solution('''5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"227\"\nassert solution('''10 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"0\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"18\"\nassert solution(\"10 6\") == \"227\"\nassert solution(\"8 8\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\n\nassert solution(input(\"\")) == \"0\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"18\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '6'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '8'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''8 8\n1 2 3 4 5 6 7 8''') == '0'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"18\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\") == \"6\"\nassert solution(\"5\\n10 6\\n8 7 1 8 3 7 5 10 8 9\") == \"227\"\nassert solution(\"5\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\") == \"0\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\n1''') == '1'\n\nassert solution('''3\n1 2''') == '2'\n\nassert solution('''3\n1 1\n''') == '1'\n\nassert solution('''3\n1 2\n2''') == '2'\n\nassert solution('''4\n1 2 3\n1 2\n3\n1 1\n3\n2 3\n1 1\n''') == '1'"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('[1,2,3]\\n[1,1]') == '1'\nassert solution('[1,2]\\n[1,2,3]') == '2'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"1 2 3\", \"1 1\"]) == \"2\"\nassert solution([\"1 2 3\", \"1 2\"]) == \"1\"\nassert solution([\"1 2 3\", \"1 1 1\"]) == \"1\"\nassert solution([\"1 2 3\", \"1 2 3\"]) == \"2\"\nassert solution([\"1 2 3\", \"1 3\"]) == \"1\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1\n''') == '1'\n\nassert solution('''\n4 3\n3 2 1 1\n''') == '4'\n\nassert solution('''\n4 3\n4 1 3 2\n''') == '4'\n\nassert solution('''\n10 2\n10 3 4 1 5 6 8 9 2\n''') == '10'"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n1\n1\n''') == '2'\nassert solution('''\n1\n2\n3\n1\n1\n''') == '1'"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[1,2,3]\\n[1,1]\") == \"1\"\nassert solution(\"[1,2]\\n[1,2,3]\") == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,2') == '2'"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1 3 3 1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"4\") == \"1 4 5 4 1\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n''') == '''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n'''\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == [\"1\",\"1\",\"2\",\"3\",\"5\",\"8\"]\n\"\"\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    3\n    3 1\n    3 1 2\n    1 2 3\n    1 2 3 1\n''') == '1\\n3\\n3\\n1\\n2\\n4\\n7\\n'\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '[1,3,3,1]', repr(solution('3'))\nassert solution('0') == '[]', repr(solution('0'))\n\"\"\"\n\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        n = rowIndex + 1\n        ans = [1]\n        for _ in range(1, n):\n            ans.append(0)\n        for i in range(1, n):\n            for j in range(1, i):\n                ans[i] += ans[j]\n        return ans\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [1]\nassert solution(\"2\") == [1, 1]\nassert solution(\"3\") == [1, 3, 3, 1]\nassert solution(\"4\") == [1, 4, 6, 4, 1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ['1']\nassert solution('3') == ['1', '3', '3', '1']\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == [\"1\",\"1\",\"1\",\"1\"]\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111111111111111111111111111101') == '31'\n\"\"\"\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while n:\n            count += 1\n            n &= n - 1\n        return count\n\ns = Solution()\nprint(s.hammingWeight(11111111111111111111111111111101))"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0000000000001011\") == \"3\"\nassert solution(\"0000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n\"\"\"\nclass Solution:\n    def hammingWeight(self, n: str) -> int:\n        res = 0\n        for bit in n:\n            if bit == '1':\n                res += 1\n        return res\n        \n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\nassert solution
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\".1010101010101\") == '3'\nassert solution(\".10101010101010\") == '2'\nassert solution(\".101010101010101\") == '1'\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\nassert solution
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example) == '3'\nassert solution(random) == '30'\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"111111111111111111111111111111101\") == '31'\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '31'\nassert solution(input) == '1'\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('11') == '1'\nassert solution('100') == '1'\nassert solution('11111111111111111111111111111101') == '31'\nassert solution('11010101010101010101010101010101') == '31'\n\n'''"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111111111111111111111111111101') == '31'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]', solution('[1,2,3]')\nassert solution('[4,3,2,1]') == '[4,3,2,2]', solution('[4,3,2,1]')"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n[1, 2, 3]\n''') == '''\n[1, 2, 4]\n'''\nassert solution(\n'''\n[4, 3, 2, 1]\n''') == '''\n[4, 3, 2, 2]\n'''\nassert solution(\n'''\n[1, 2, 4]\n''') == '''\n[1, 2, 5]\n'''\nassert solution(\n'''\n[4, 3, 2, 1]\n''') == '''\n[4, 3, 2, 2]\n'''\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n1\n\n2\n\n3\n\n''') == '''\n\n1\n\n2\n\n3\n\n''', solution('''\n\n1\n\n0\n\n3\n\n''') == '''\n\n1\n\n2\n\n''', solution('''\n\n1\n\n10\n\n2\n\n''') == '''\n\n1\n\n11\n\n''', solution('''\n\n1\n\n-1\n\n2\n\n''') == '''\n\n1\n\n2\n\n''', solution('''\n\n1\n\n0\n\n0\n\n''') == '''\n\n1\n\n1\n\n'''\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n[\n    1\n]\n''') == ''\n\nassert solution('''\n[\n    1,\n    2\n]\n''') == ''\n\nassert solution('''\n[\n    1,\n    2\n]\n''') == ''\n\nassert solution('''\n[\n    1\n]\n''') == ''\n\nassert solution('''\n[\n    1,\n    2\n]\n''') == ''"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"2 5\") == \"11\"\nassert solution(\"10 -20\") == \"0\"\nassert solution(\"100 -200\") == \"100\"\nassert solution(\"3 3\") == \"6\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4'\n\n__author__ = 'Yan'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4', '3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.'\nassert solution('1 1') == '2', '3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.'\nassert solution('-1 -1') == '2', '3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.'\nassert solution('-1 -2') == '1', '3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.'\nassert solution('-1 1') == '4', '3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"8 8\") == \"20\"\nassert solution(\"100 1000\") == \"10100\"\n\"\"\"\n\nA, B = map(int, input().split())\nprint(max(A+B, A-B, A*B))\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '4'\nassert solution('1 2') == '2'\nassert solution('1 -5') == '1'\nassert solution('10 -1') == '10'\nassert solution('20 -30') == '-10'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\", \"Wrong\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"2 4\\n0 4\\n-2 4\\n3 4\\n4 -4\") == \"4\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 5\n0 5\n-2 4\n3 4\n4 -4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '3'\nassert solution('4 1') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"2 3\\n1 1\\n4 1\") == \"2\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '3'\nassert solution('10 20') == '8'\nassert solution('1 1') == '1'\nassert solution('3 2') == '1'"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('4 5\\n0 5') == '3'\nassert solution('5 6\\n-2 4\\n3 4\\n4 -4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes'\nassert solution('21') == 'No'\nassert solution('123') == 'Yes'\nassert solution('932') == 'Yes'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('9') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"4324\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('22') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"Yes\", 'No Harshad number'\nassert solution(\"10\") == \"No\", 'No Harshad number'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1111') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes', 'Somehow this is not working'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('1234') == 'Yes'\nassert solution('1235') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12345') == 'No'\nassert solution('12a34') == 'No'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12\\n8\\n10\"\nassert solution(\"2\") == \"10\\n8\\n12\"\nassert solution(\"1\") == \"8\\n10\\n12\""
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 5 -1') == '12\\n8\\n10'\nassert solution('10\\n3 5 -1\\n6 5 -1\\n2 6 -1\\n3 6 -1\\n4 2 -1\\n4 1 -1\\n6 4 -1\\n4 2 -1\\n3 5 -1\\n6 4 -1\\n5 4 -1\\n4 4 -1\\n3 5 -1\\n6 5 -1\\n3 5 -1\\n') == '10\\n12\\n8\\n12\\n10\\n12\\n12\\n12\\n10\\n8\\n12\\n10\\n12\\n10\\n12\\n12\\n12\\n10\\n8\\n12\\n10\\n12\\n10\\n12\\n12\\n12\\n10\\n8\\n12\\n10\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\n12\\"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"12\\n8\\n10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '12'\nassert solution('1') == '5'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n5 -1') == '12'\nassert solution('2\\n3 5 -1') == '8'\nassert solution('10\\n-1 -2') == '18'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '12\\n8\\n10\\n'\nassert solution('4') == '18\\n11\\n10\\n'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '12'\nassert solution('3') == '8'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 -1''') == '12\\n8\\n10\\n'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n3 5 -1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n10\n2 2 2 2 2 2 2 2 2 2 2 2\n\"\"\") == \"25\"\nassert solution(\"\"\"\n10\n4 4 4 4 4 4 4 4 4 4\n\"\"\") == \"27\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"vowel\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\""
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"vowel\"\nassert solution(input()) == \"consonant\"\n\"\"\"\n\nvowels = {'a', 'e', 'i', 'o', 'u'}"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''BBBWW''') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WWWBBBBWW') == '4'\nassert solution('WWWWWWWWWW') == '0'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''BWBWW\n''') == '1'\nassert solution('''WWBWBW\n''') == '1'\nassert solution('''BBBWW\n''') == '2'\nassert solution('''WWBWBW\n''') == '2'\nassert solution('''BWBWBW\n''') == '2'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''BBBWW''') == \"1\"\nassert solution('''WWWWB''') == \"3\"\nassert solution('''WWWWB''') == \"3\"\nassert solution('''BBWWB''') == \"1\"\nassert solution('''WWWWW''') == \"1\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBBWW') == '2'\nassert solution('BBBBBW') == '1'\nassert solution('BBBBBB') == '2'\nassert solution('BBBBBBBBBB') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WWBWW') == '1'\nassert solution('WWWWW') == '3'\nassert solution('BBBBB') == '1'"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWBWW\") == \"2\"\nassert solution(\"WWWWWWWW\") == \"1\""
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWBW\") == \"1\"\nassert solution(\"BBWWB\") == \"1\"\nassert solution(\"WBBBB\") == \"2\"\nassert solution(\"BBBBW\") == \"1\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BBBWW') == '1'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == \"Yes\"\nassert solution('0 1') == \"No\"\n\"\"\""
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 21\n''') == 'Yes'\nassert solution('''1 2\n''') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('8 5') == 'Yes'\nassert solution('9 2') == 'No'\nassert solution('2 3') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 21') == 'Yes', solution('1 21')\n\"\"\"\n\na, b = input().split()"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 10\") == \"No\"\nprint(\"Check passed\\n\")"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 10\") == \"No\""
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes', \"1 + 21 = 121\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"Yes\"\nassert solution(\"3 3\\n\") == \"No\"\nassert solution(\"5 5\\n\") == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 4 1 5 9 2') == '4'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '4'\nassert solution('6\\n7 8 9 1 2') == '9'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('10') == '7'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2\n''') == '4'\nassert solution('''7\n3 1 4 1 5 9 2\n3 1 5 9 2\n''') == '4'\nassert solution('''7\n3 1 4 1 5 9 2\n3 1 5 9 2\n4 3 5 6 7 8 9 10''') == '5'\nassert solution('''7\n3 1 4 1 5 9 2\n6 1 5 9 2\n''') == '5'\nassert solution('''7\n3 1 4 1 5 9 2\n6 1 5 9 2\n2 1 4 1 5 9 2\n''') == '4'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 4 1 5 9 2') == '4'\nassert solution('4\\n1 2 3 4') == '0'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n20\n2 1 4 1 5 9 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '4'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('7') == '6'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '9'"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n''') == '6'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"10\\n8\") == \"14\"\nassert solution(\"10\\n8\") == \"14\"\nassert solution(\"100\\n1000\") == \"1010\"\nassert solution(\"5\\n8\") == \"9\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"5\"\n\"\"\"\nimport math\n\nstdin = input()\nn = int(stdin)\na = int(stdin)\n\nnum_black = 0\nnum_white = n * n\n\nfor row in range(n):\n    for column in range(n):\n        if row + column + 1 <= a:\n            num_black += 1\n        else:\n            num_white -= 1\n\nprint(num_black)\nprint(num_white)\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '7'"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"3\") == \"5\"\n\"\"\"\nimport sys\nimport os"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '9'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n''') == '2'\nassert solution('''6\n1\n''') == '3'\nassert solution('''5\n2\n''') == '4'\nassert solution('''5\n3\n''') == '4'\nassert solution('''6\n1\n''') == '2'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'\n\n---\n\nGiven a non-negative integer N, we have to paint all the squares of the grid black.\nThe only rule is that a square cannot be painted white if it is adjacent to black squares.\n\nExample 1:\n\nInput: N = 3, A = 4\nOutput: 4\n\nExplanation:\nHere are the adjacency matrix:\n1 0 0 0 0\n0 1 1 0 0\n0 0 1 1 0\n0 0 0 1 0\n0 0 0 0 1\n\nWe paint a 2 squares white.\nSince these squares are adjacent to a black square,\nwe cannot paint any of the other squares black.\n\nExample 2:\n\nInput: N = 3, A = 7\nOutput: 6\n\nExplanation:\nHere are the adjacency matrix:\n1 0 0 0 0\n0 1 1 0 0\n0 0 1 1 0\n0 0 0 1 0\n0 0 0 0 1\n\nWe paint a 2 squares white.\nSince these squares are adjacent to a black square,\nwe cannot paint any of the other squares black.\n\nExample 3:\n\nInput: N = 3, A = 4\nOutput: 3\n\nExplanation:\nHere are the adjacency matrix:\n1 0 0 0\n0 1 1 0\n0 0 1 1\n0 0 0 1\n\nWe paint a 2 squares white.\nSince these squares are adjacent to a black square,\nwe cannot paint any of the other squares black.\n\nNote:\n\n1 <= N <= 100\n0 <= A <= 200\n'''\n\n\nclass Solution:\n    def paint(self, n: int, a: int) -> int:\n        if n == 1:\n            return a\n        if a == 0:\n            return 0\n        dp = [[0]*(a+1) for _ in range(n+1)]\n        dp[0][0] = 1\n        for i in range(1, n+1):\n            for j in range(a+1):\n                if j == 0:\n                    dp[i][j] = dp[i-1][1]\n                else:\n                    dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        return dp[n][a]\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 4 9') == 'NO'\n\"\"\""
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\n\"\"\"\n\na,b,c = map(int, stdin.readline().split())\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == 'YES', 'Error'\nassert solution('1 1 1') == 'NO', 'Error'\nprint(solution())"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 5 4') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 5 4') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('2 4 6') == 'NO'\nassert solution('-2 4 6') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 2 2') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 5 1') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n\nassert solution(\"1 2 3\") == \"NO\"\n\nassert solution(\"2 2 2\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 4 6') == 'NO'\nassert solution('1 2 3 4 5 6 7') == 'NO'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('29') == 'Yes'\nassert solution('1') == 'No'\nassert solution('10') == 'Yes'\nassert solution('32') == 'No'\nassert solution('40') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('18') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('48') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''29''') == 'Yes'\nassert solution('''6''') == 'No'\nassert solution('''1''') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n29\n\"\"\"\n) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'No'\nassert solution('22') == 'No'\nassert solution('59') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == 'Yes'\nassert solution('29') == 'Yes'"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('29') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'\nassert solution('59') == 'No'"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 3') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 1 4') == '1'\nassert solution('3 2 3') == '3'\nassert solution('3 1 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('7 6 4') == '8'\nassert solution('7 6 7') == '1'\nassert solution('9 5 3') == '8'\nassert solution('9 5 5') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 5 5') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('2 3 3') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 5 5') == '4'\nassert solution('5 1 5') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"0 3 3\") == \"0\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 3\n1 2 4''') == '1'\nassert solution('''3 3 3\n1 2 4''') == '1'\nassert solution('''5 4 5\n1 2 3 4 5''') == '2'\nassert solution('''3 3 3\n1 2 3 4 5''') == '1'\nassert solution('''3 3 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 5\") == \"1\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3') == \"1\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"Yes\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 6\") == \"No\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n#.\\n###\\n#.\\n') == 'Yes'\nassert solution('4 3\\n...\\n...\\n...\\n') == 'No'\nassert solution('4 2\\n##\\n##\\n##\\n') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 3\") == \"No\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Yes'\n'''"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 3') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('4 5') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.''') == 'Yes'\nassert solution('''4 2\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n.###\\n..###\\n#.##\\n\") == \"Yes\"\nassert solution(\"5 5\\n.##.##.\\n#.##.#.\\n###.##.\\n###.##.\\n###.##.\") == \"No\"\n\n---"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 30 20\n''') == 'Yes'\nassert solution('''2 5 7\n''') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"15 30 10\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\""
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"12 14 22\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('0 10 20') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 2 4\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 10 10') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"1 10 100\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 50 10') == 'No'"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 15 20\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"100 100 100\") == \"Yes\"\nassert solution(\"50 50 50\") == \"No\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Right'"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 6 4') == 'Left'\nassert solution('1 1 1 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\nassert solution('12 12 1') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 2 3 4\") == \"Right\"\nassert solution(\"4 5 6 7\") == \"Right\"\nassert solution(\"6 7 8 9 10\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 3 3 2\") == \"Left\"\nassert solution(\"10 10 10 10\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"9 5 7 2\") == \"Balanced\"\nassert solution(\"9 5 7 2\") == \"Right\"\nassert solution(\"9 9 9 9\") == \"Right\"\nassert solution(\"9 9 9 9\") == \"Left\""
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'Left','sample'\nassert solution('5 4 3 2') == 'Right','sample'\nassert solution('9 8 7 1') == 'Left','sample'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"5 6 2 6\") == \"Balanced\"\nassert solution(\"9 9 9 9\") == \"Right\"\nassert solution(\"8 4 2 6\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 2 3 4\") == \"Right\"\nassert solution(\"1 5 8 2\") == \"Right\"\nassert solution(\"10 11 12 13\") == \"Left\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"5\"\n\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n0 0 0 0 0 1 0 1 0 1\\n1 1 0 1 0 1 0 0 1 0 1\\n0 1 1 0 1 0 1 0 0 1 0 1\\n0 0 0 0 0 1 0 0 0 0 0 1\\n0 0 0 0 0 1 0 0 0 0 0 0 1\\n0 0 0 0 0 0 1 0 0 0 0 0 0 1\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1') == '18'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '15'\nprint('Test passed')\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0 0 1 0 1 0 1 0 1\n2 1 2 1 2 1 2 1 1\n''') == '10'\nassert solution('''\n1\n0 0 1 0 1 0 1 0 1\n2 1 2 1 2 1 2 1 1\n3 2 1 2 1 2 1 1\n''') == '9'\nassert solution('''\n1\n0 0 0 1 0 1 1 0 1\n2 1 2 1 2 1 2 1 1\n3 2 1 2 1 2 1 1\n''') == '8'\nassert solution('''\n1\n0 0 0 0 0 0 0 0 1\n2 1 2 1 2 1 2 1 1\n3 2 1 2 1 2 1 1\n''') == '5'\nassert solution('''\n1\n0 0 0 0 0 0 0 0 1\n2 1 2 1 2 1 2 1 1\n3 2 1 2 1 2 1 1\n''') == '4'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '7'\nassert solution('1 1 1 1 0 0 0 0 1 0 1') == '9'"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n2\n1 1 0 1 0 0 0 1 0 1\n2 4 5 6 7 8 9 -2 -3 4 -2\n''') == '2'\nassert solution('''\n2\n1 1 0 1 0 0 0 1 0 1\n1 2 3 4 5 6 7 8 9\n''') == '7'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\"\nassert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\n'''"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"2\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"10\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes', solution('1 2')\nassert solution('1 2 3') == 'No', solution('1 2 3')\nassert solution('1 2 3 4') == 'Yes', solution('1 2 3 4')\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\nIn the first sample, the (A+1)-th character of S is -, and the other characters are digits from 0 through 9, so it follows the format.\nIn the second sample, the (A+1)-th character of S is not -, and the other characters are digits from 0 through 9, so it does not follow the format.\n\"\"\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 6') == 'No'\n\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"23 23\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"Yes\", \"All tests passed\"\nassert solution(\"1 1\") == \"No\", \"All tests passed\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n') == 'Yes', solution\nassert solution('1 2\\n') == 'No', solution\nassert solution('2 0\\n') == 'No', solution\nassert solution('1 2 3 4\\n') == 'Yes', solution"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('4 2') == 'No'"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"7 3\") == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('2 2 3') == '0'\nassert solution('3 3 4') == '1'"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2 6\"\"\") == \"1\"\nassert solution(\"\"\"2 2 6\"\"\") == \"2\"\nassert solution(\"\"\"6 3 2\"\"\") == \"1\"\nassert solution(\"\"\"4 5 2\"\"\") == \"1\"\nassert solution(\"\"\"1 0 6\"\"\") == \"0\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('2 4 6') == '3'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5\") == \"1\"\nassert solution(\"4 1 6\") == \"1\"\nassert solution(\"4 3 5\") == \"2\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 1 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 1 3\") == \"1\"\nassert solution(\"3 4 10\") == \"3\"\n\nimport math"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 6\n''') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('2 3 4') == '1'\nassert solution('4 5 10') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2 6\n''') == '1'\nassert solution('''3 4 6\n''') == '1'\nassert solution('''3 7 7\n''') == '2'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\nassert solution(\"20 20 5\") == \"10 15 17 20\"\nassert solution(\"10 20 5\") == \"10 15 17 20\"\nassert solution(\"5 10 5\") == \"5 10 9\"\nassert solution(\"1 1 2\") == \"1 2\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 8 2''') == '3'\nassert solution('''3 2 5 1''') == '1,2,3,4,5'\nassert solution('''6 9 7 8 3''') == '3,4,5,6,7,8'\nassert solution('''2 2 1''') == '1,2'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2') == '2'\nassert solution('10 1 2') == '2'\nassert solution('5 100 100') == '100'\nassert solution('5 100 1') == '1'\nassert solution('1 1 100') == '1'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3 2\n''') == '''\n3\n4\n7\n8\n'''\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 2') == '2 3 4 5'\nassert solution('3 8 1') == '1 2 3 4 5'\nassert solution('10 9 8 4 3 2 1') == '1 2 3 4 5 6 7 8 9 10'"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"10 8 2\") == \"8\"\nassert solution(\"1 7 5\") == \"1\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder s Contest') == 'AxC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder s Contest') == 'AXC'\nassert solution('AtCoder X Contest') == 'AXC'\nassert solution('AtCoder X Beginner Contest') == 'AXBC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"You failed the first assignment!\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"You failed the second assignment!\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"AXC\"\nassert solution(\"AtCoder s Contest\") == \"AXC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\n\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Solution is wrong!\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n\"\"\"\n\n\nimport sys\n\na, b, x = map(int, stdin.readline().strip().split())\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 5 4\") == \"NO\"\n\"\"\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n''') == 'YES'\nassert solution('''\n5 2\n''') == 'NO'"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 5 4\") == \"NO\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 4\") == \"YES\"\nassert solution(\"10 5 4\") == \"NO\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4') == 'YES'\nassert solution('1 2 3') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 6 3\") == \"NO\"\nassert solution(\"100 10 4\") == \"YES\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('2 1 4') == 'NO'"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 3') == 'NO'\nassert solution('10 10') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 12') == '1'\nassert solution('8 10') == '1'\nassert solution('4 5') == '1'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 17') == '83'\nassert solution('10') == '1'\nassert solution('10') == '1'"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''X t\n100 17''') == '83'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '83'\nassert solution(input()) == '83'\nassert solution(input()) == '83'\nassert solution(input()) == '83'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1 1\\n\"\nassert solution(\"2 2\") == \"1 1\\n\"\nassert solution(\"3 3\") == \"1 1\\n\"\nassert solution(\"10 10\") == \"1 1\\n\"\nassert solution(\"100 100\") == \"83\\n\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''100 17\n''') == '83'\nassert solution('''123 12\n''') == '8'\nassert solution('''30 20\n''') == '12'\nassert solution('''9 100\n''') == '7'\nassert solution('''20 2\n''') == '0'\n'''\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"83\"\nprint(solution(sys.stdin.read()))"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100 17') == '83'\nassert solution('1000 1') == '1000'\nassert solution('1000 2') == '1000'\nassert solution('10000 1') == '10000'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"8\"\nassert solution(\"10 5\") == \"16\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('-2') == '-10'\nassert solution('3') == '0'\nassert solution('-3') == '0'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '-1'\nassert solution('1') == '1'\nassert solution('10000001') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n100000000000000000 1000000000\") == \"-1\"\nassert solution(\"2\\n1000000000000000 1000000000\") == \"-1\"\nassert solution(\"2\\n1000000000000000 10000000000000000000\") == \"-1\"\nassert solution(\"2\\n1000000000000000 100000000000000000\") == \"-1\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1000000000000000000'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '-1'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('100') == '-1'\nassert solution('12345678') == '123456789'\nassert solution('1234567890') == '123456789'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1000000000 1000000000\n''') == '1000000000000000000'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"123\"\nassert solution(\"2 5 4\") == \"-1\"\n\n---------------------\n\nLet's try to find the largest possible value of A_i multiplied by A_j such that i >= j.\nWe start from i = 1, and iterate j from i to n-1.\nFor each j, we compute A_j * A_i, and the value of this product must be lesser than 10^18.\nIf the product is larger than 10^18, then we return -1.\n\nWe can compute the product of A_j and A_i using the following formula:\nA_j * A_i = j * (A_i-1) + (A_j-1)\n\nComplexity:\nTime: O(n*n)\nSpace: O(n)\n\nWe can compute A_i * A_j using the following formula:\nA_i * A_j = A_i * (A_j-1) + A_i - 1\n\nWe can compute the product of A_j and A_i using the above formula:\nA_j * A_i = A_j * (A_i-1) + A_j - 1\n\nComplexity:\nTime: O(n*n)\nSpace: O(1)\n\nIf the largest product is greater than 10^18, then we return -1\n\nWe can improve the space complexity by using O(n) space.\nThe space complexity is reduced to O(1) after the loop completes.\n\nWe can use the same algorithm to solve the problem below:\n\nLet's compute A_i * A_j, and the largest product is either greater than 10^18, or smaller than 0.\nTo compute A_i * A_j, we first calculate A_j * A_i - A_i - 1.\nIf this value is greater than 10^18, then we have found the largest product and return -1.\nOtherwise, we can continue to compute A_j * A_i - A_i - 1\nWe can do this recursively to find all the largest products.\n\nComplexity:\nTime: O(n*n)\nSpace: O(n)\n\n-----Input-----\n3\n1000000000 1000000000\n2 5 4\n\n-----Output-----\n1000000000000000000\n\n------\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        N = int(stdin)\n        A = [int(x) for x in stdin.split(' ')]\n        m = 10**18\n\n        # Compute A_i * A_i - A_i - 1 for each A_i\n        # If A_i * A_i - A_i - 1 > m, then A_i is the largest product\n        # If A_i * A_i - A_i - 1 is less than m, then continue to compute A_i * A_i - A_i - 1\n        for i in range(N):\n            for j in range(i+1, N):\n                if A[i] * A[j] - A[i] - 1 > m:\n                    return str(-1)\n                elif A[i] * A[j] - A[i] - 1 < m:\n                    continue\n                else:\n                    m = A[i] * A[j] - A[i] - 1\n\n        return str(m)\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('2') == -1\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"Yes\"\nassert solution(\"4\\n1\\n\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'No'\nassert solution('5') == 'Yes'\nassert solution('50') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"1000\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('2020') == 'No'\nassert solution
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'No'\nassert solution('1') == 'Yes'\nassert solution('5000') == 'Yes'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"1\\n2\") == \"No\"\nassert solution(\"20\\n4\") == \"Yes\"\nassert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"1\\n1\") == \"Yes\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4 8\n\n''') == 'dangerous'\nassert solution('''1 5 6\n\n''') =='safe'\n\n-----------------------------------------------------------------------------------------------------------------------\n\n2. Solve the problem of finding minimum integer which is not less than or equal to an input integer and greater than or equal to its divisor.\nInput is given from Standard Input in the following format:\nX\n\nOutput is given from Standard Output in the following format:\nX\n\n-----Constraints-----\n - 0 < X \u2264 1000000\n\n-----Sample Input-----\n1\n\n-----Sample Output-----\n4\n\n-----------------------------------------------------------------------------------------------------------------------\n\n3. Write a program that finds the power of two numbers given by the user, where the power of two is a number with 2^n = 1\n\nInput is given from Standard Input in the following format:\nX Y\n\nOutput is given from Standard Output in the following format:\nX Y\n\n-----Constraints-----\n - 0 \u2264 X, Y \u2264 1000000\n\n-----Sample Input-----\n6 7\n\n-----Sample Output-----\n64 128\n\n-----------------------------------------------------------------------------------------------------------------------\n\n4. Find the minimum number of bit shifts to be performed to make the two input numbers be equal to each other.\nInput is given from Standard Input in the following format:\nX Y\n\nOutput is given from Standard Output in the following format:\nX Y\n\n-----Constraints-----\n - 0 \u2264 X, Y \u2264 1000000\n\n-----Sample Input-----\n3 3\n\n-----Sample Output-----\n1\n\n-----------------------------------------------------------------------------------------------------------------------\n\n5. In a given array, the array must contain numbers of the form x1 + x2 + x3 +... + xn, where each element in the array is of\nthe same type.\nWrite a program that finds the greatest common divisor of all the elements in the array.\nInput is given from Standard Input in the following format:\nx1 x2 x3... xn\n\nOutput is given from Standard Output in the following format:\nx1 x2 x3... xn\n\n-----Constraints-----\n - All elements in the array are integers.\n\n-----Sample Input-----\n2 1 2\n\n-----Sample Output-----\n1\n\n-----------------------------------------------------------------------------------------------------------------------\n\n6. Write a program that finds the sum of the squares of the numbers in the array.\nInput is given from Standard Input in the following format:\nx1 x2 x3... xn\n\nOutput is given from Standard Output in the following format:\nx1 x2 x3... xn\n\n-----Constraints-----\n - All elements in the array are integers.\n\n-----Sample Input-----\n2 1 2\n\n-----Sample Output-----\n9\n\n-----------------------------------------------------------------------------------------------------------------------\n\n7. Write a program that checks if a given number is a prime number.\nInput is given from Standard Input in the following format:\nn\n\nOutput is given from Standard Output in the following format:\n\"Prime\" if the number is prime, else \"Not prime\"\n\n-----Constraints-----\n - 0 \u2264 n \u2264 1000000\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\nNot prime\n\n-----------------------------------------------------------------------------------------------------------------------\n\n8. Write a program that checks if the input number is a prime number.\nInput is given from Standard Input in the following format:\nn\n\nOutput is given from Standard Output in the following format:\n\"Prime\" if the number is prime, else \"Not prime\"\n\n-----Constraints-----\n - 0 \u2264 n \u2264 1000000\n\n-----Sample Input-----\n7\n\n-----Sample Output-----\nNot prime\n\n-----------------------------------------------------------------------------------------------------------------------\n\n9. Write a program that finds the largest prime factor of the number given by the user.\nInput is given from Standard Input in the following format:\nX\n\nOutput is given from Standard Output in the following format:\nX\n\n-----Constraints-----\n - 0 \u2264 X \u2264 1000000\n\n-----Sample Input-----\n7\n\n-----Sample Output-----\n2\n\n-----------------------------------------------------------------------------------------------------------------------\n\n10. Write a program that finds the smallest prime number greater than or equal to the input number.\nInput is given from Standard Input in the following format:\nX\n\nOutput is given from Standard Output in the following format:\nX\n\n-----Constraints-----\n - 0 \u2264 X \u2264 1000000\n\n-----Sample Input-----\n7\n\n-----Sample Output-----\n5\n\n-----------------------------------------------------------------------------------------------------------------------\n\n11. Write a program that finds the product of the numbers in the array.\nInput is given from Standard Input in the following format:\nx1 x2 x3... xn\n\nOutput is given from Standard Output in the following format:\nx1 x2 x3... xn\n\n-----Constraints-----\n - All numbers in the array are integers.\n\n-----Sample Input-----\n3 5 8\n\n-----Sample Output-----\n30\n\n-----------------------------------------------------------------------------------------------------------------------\n\n12. Write a program that finds the sum of the numbers in the array.\nInput is given from Standard Input in the following format:\nx1 x2 x3... xn\n\nOutput is given from Standard Output in the following format:\nx1 x2 x3... xn\n\n-----Constraints-----\n - All numbers in the array are integers.\n\n-----Sample Input-----\n3 5 8\n\n-----Sample Output-----\n17\n\n-----------------------------------------------------------------------------------------------------------------------\n\n13. Write a program that finds the difference of the numbers in the array.\nInput is given from Standard Input in the following format:\nx1 x2 x3... xn\n\nOutput is given from Standard Output in the following format:\nx1 x2 x3... xn\n\n-----Constraints-----\n - All numbers in the array are integers.\n\n-----Sample Input-----\n3 5 8\n\n-----Sample Output-----\n3\n\n-----------------------------------------------------------------------------------------------------------------------\n\n14. Write a program that calculates the absolute value of a number using the following equation:\nx = |x|\n\nInput is given from Standard Input in the following format:\nx\n\nOutput is given from Standard Output in the following format:\nx\n\n-----Constraints-----\n - 0 \u2264 x \u2264 1\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n5\n\n-----------------------------------------------------------------------------------------------------------------------\n\n15. Write a program that checks if the number is a palindrome.\nInput is given from Standard Input in the following format:\nx\n\nOutput is given from Standard Output in the following format:\n\"palindrome\" if the number is a palindrome, else \"not palindrome\"\n\n-----Constraints-----\n - 0 \u2264 x \u2264 1\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n\"palindrome\"\n\n-----------------------------------------------------------------------------------------------------------------------\n\n16. Write a program that checks if a number is prime or not.\nInput is given from Standard Input in the following format:\nn\n\nOutput is given from Standard Output in the following format:\n\"Prime\" if the number is prime, else \"Not prime\"\n\n-----Constraints-----\n - 0 \u2264 n \u2264 1\n\n-----Sample Input-----\n7\n\n-----Sample Output-----\nNot prime\n\n-----------------------------------------------------------------------------------------------------------------------\n\n17. Write a program that finds the greatest common divisor of two numbers.\nInput is given from Standard Input in the following format:\nx y\n\nOutput is given from Standard Output in the following format:\nx y\n\n-----Constraints-----\n - 0 \u2264 x, y \u2264 1\n\n-----Sample Input-----\n2 3\n\n-----Sample Output-----\n1\n\n-----------------------------------------------------------------------------------------------------------------------\n\n18. Write a program that finds the number of digits in a given number.\nInput is given from Standard Input in the following format:\nx\n\nOutput is given from Standard Output in the following format:\nx\n\n-----Constraints-----\n - 0 \u2264 x \u2264 1\n\n-----"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 6\") == \"safe\"\nassert solution(\"5 3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('7 3 6') == 'dangerous'\nassert solution('10 2 3') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('3 4 5') == 'dangerous'\nassert solution('4 3 6') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3 6\n1\n''') =='safe'\nassert solution('''4 3 6\n0\n''') == 'dangerous'\nassert solution('''4 3 6\n0\n''') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 1 1\") == \"dangerous\"\nassert solution(\"2 2 4\") == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 6') =='safe'\nassert solution('4 3 6') == 'dangerous'\nassert solution('10 10 10') == 'dangerous'\nassert solution('10 10 10') == 'dangerous'\n\n\"\"\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"1 2 3\n    4 3 6\n    5 4 7\n    6 5 8\n    7 6 9\n    8 7 10\n    9 8 11\n    10 7 12\n    11 10 13\n    12 11 14\n    13 12 15\n    14 11 16\n    15 12 17\n    16 11 18\n    17 13 19\n    18 12 19\n    19 13 20\n    20 11 21\n    21 10 22\n    22 11 23\n    23 12 24\n    24 11 25\n    25 12 26\n    26 11 27\n    27 12 28\n    28 11 29\n    29 12 30\n    30 11 31\n    31 12 32\n    32 11 33\n    33 12 34\n    34 11 35\n    35 12 36\n    36 11 37\n    37 12 38\n    38 11 39\n    39 12 40\n    40 11 41\n    41 12 42\n    42 11 43\n    43 12 44\n    44 11 45\n    45 12 46\n    46 11 47\n    47 12 48\n    48 11 49\n    49 12 50\n    50 11 51\n    51 12 52\n    52 11 53\n    53 12 54\n    54 11 55\n    55 12 56\n    56 11 57\n    57 12 58\n    58 11 59\n    59 12 60\n    60 11 61\n    61 12 62\n    62 11 63\n    63 12 64\n    64 11 65\n    65 12 66\n    66 11 67\n    67 12 68\n    68 11 69\n    69 12 70\n    70 11 71\n    71 12 72\n    72 11 73\n    73 12 74\n    74 11 75\n    75 12 76\n    76 11 77\n    77 12 78\n    78 11 79\n    79 12 80\n    80 11 81\n    81 12 82\n    82 11 83\n    83 12 84\n    84 11 85\n    85 12 86\n    86 11 87\n    87 12 88\n    88 11 89\n    89 12 90\n    90 11 91\n    91 12 92\n    92 11 93\n    93 12 94\n    94 11 95\n    95 12 96\n    96 11 97\n    97 12 98\n    98 11 99\n    99 12 100\n    100 11 101\n    101 12 102\n    102 12 103\n    103 12 104\n    104 12 105\n    105 12 106\n    106 12 107\n    107 12 108\n    108 12 109\n    109 12 110\n    110 12 111\n    111 12 112\n    112 12 113\n    113 12 114\n    114 12 115\n    115 12 116\n    116 12 117\n    117 12 118\n    118 12 119\n    119 12 120\n    120 12 121\n    121 12 122\n    122 12 123\n    123 12 124\n    124 12 125\n    125 12 126\n    126 12 127\n    127 12 128\n    128 12 129\n    129 12 130\n    130 12 131\n    131 12 132\n    132 12 133\n    133 12 134\n    134 12 135\n    135 12 136\n    136 12 137\n    137 12 138\n    138 12 139\n    139 12 140\n    140 12 141\n    141 12 142\n    142 12 143\n    143 12 144\n    144 12 145\n    145 12 146\n    146 12 147\n    147 12 148\n    148 12 149\n    149 12 150\n    150 12 151\n    151 12 152\n    152 12 153\n    153 12 154\n    154 12 155\n    155 12 156\n    156 12 157\n    157 12 158\n    158 12 159\n    159 12 160\n    160 12 161\n    161 12 162\n    162 12 163\n    163 12 164\n    164 12 165\n    165 12 166\n    166 12 167\n    167 12 168\n    168 12 169\n    169 12 170\n    170 12 171\n    171 12 172\n    172 12 173\n    173 12 174\n    174 12 175\n    175 12 176\n    176 12 177\n    177 12 178\n    178 12 179\n    179 12 180\n    180 12 181\n    181 12 182\n    182 12 183\n    183 12 184\n    184 12 185\n    185 12 186\n    186 12 187\n    187 12 188\n    188 12 189\n    189 12 190\n    190 12 191\n    191 12 192\n    192 12 193\n    193 12 194\n    194 12 195\n    195 12 196\n    196 12 197\n    197 12 198\n    198 12 199\n    199 12 200\n    200 12 201\n    201 12 202\n    202 12 203\n    203 12 204\n    204 12 205\n    205 12 206\n    206 12 207\n    207 12 208\n    208 12 209\n    209 12 210\n    210 12 211\n    211 12 212\n    212 12 213\n    213 12 214\n    214 12 215\n    215 12 216\n    216 12 217\n    217 12 218\n    218 12 219\n    219 12 220\n    220 12 221\n    221 12 222\n    222 12 223\n    223 12 224\n    224 12 225\n    225 12 226\n    226 12 227\n    227 12 228\n    228 12 229\n    229 12 230\n    230 12 231\n    231 12 232\n    232 12 233\n    233 12 234\n    234 12 235\n    235 12 236\n    236 12 237\n    237 12 238\n    238 12 239\n    239 12 240\n    240 12 241\n    241 12 242\n    242 12 243\n    243 12 244\n    244 12 245\n    245 12 246\n    246 12 247\n    247 12 248\n    248 12 249\n    249 12 250\n    250 12 251\n    251 12 252\n    252 12 253\n    253 12 254\n    254 12 255\n    255 12 256\n    256 12 257\n    257 12 258\n    258 12 259\n    259 12 260\n    260 12 261\n    261 12 262\n    262 12 263\n    263 12 264\n    264 12 265\n    265 12 266\n    266 12 267\n    267 12 268\n    268 12 269\n    269 12 270\n    270 12 271\n    271 12 272\n    272 12 273\n    273 12 274\n    274 12 275\n    275 12 276\n    276 12 277\n    277 12 278\n    278 12 279\n    279 12 280\n    280 12 281\n    281 12 282\n    282 12 283\n    283 12 284\n    284 12 285\n    285 12 286\n    286 12 287\n    287 12 288\n    288 12 289\n    289 12 290\n    290 12 291\n    291 12 292\n    292 12 293\n    293 12 294\n    294 12 295\n    295 12 296\n    296 12 297\n    297 12 298\n    298 12 299\n    299 12 300\n    300 12 301\n    301 12 302\n    302 12 303\n    303 12 304\n    304 12 305\n    305 12 306\n    306 12 307\n    307 12 308\n    308 12 309\n    309 12 310\n    310 12 311\n    311 12 312\n    312 12 313\n    313 12 314\n    314 12 315\n    315 12 316\n    316 12 317\n    317 12 318\n    318 12 319\n    319 12 320\n    320 12 321\n    321 12 322\n    322 12 323\n    323 12 324\n    324 12 325\n    325 12 326\n    326 12 327\n    327 12 328\n    328 12 329\n    329 12 330\n    330 12 331\n    331 12 332\n    332 12 333\n    333 12 334\n    334 12 335\n    335 12 336\n    336 12 337\n    337 12 338\n    338 12 339\n    339 12 340\n    340 12 341\n    341 12 342\n    342 12 343\n    343 12 344\n    344 12 345\n    345 12 346\n    346 12 347\n    347 12 348\n    "
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''X A B\n1 1 1''') =='safe'\nassert solution('''X A B\n2 2 1''') == 'dangerous'\nassert solution('''X A B\n3 4 3''') == 'dangerous'\nassert solution('''X A B\n4 3 1''') == 'dangerous'\nassert solution('''X A B\n4 1 2''') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 3, 6]) =='safe'\nassert solution([4, 3, 7]) == 'dangerous'\nassert solution([4, 3, 8]) == 'dangerous'\n\"\"\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1''') == '1'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\nassert solution('10') == '9'\nassert solution('10') == '9'\nassert solution('10') == '9'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nassert solution('20') == '19'\nassert solution('100') == '99'\nassert solution('101') == '101'\nassert solution('5000') == '5000'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\n\n'''\n\nfrom math import sqrt"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '9'\nassert solution('2147483647') == '2147483647'"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('8') == '10'\nassert solution('1') == '1'"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 0\n\n'''\nimport math\n\nn = int(input())"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('0') == '0'\nassert solution('1000') == '10'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"10000000\") == \"999999\"\nassert solution(\"0000000000\") == \"0\"\nassert solution(\"100000000000\") == \"9999999999\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('11') == '9'\nassert solution('8') == '8'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10'\nassert solution('6') == '1'\nassert solution('8') == '1'\nassert solution('10') == '2'\nassert solution('12') == '2'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '10'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1\n3 2\n4 4\n''') == '10'\nassert solution('''\n5\n1 1\n3 2\n4 4\n4 4\n2 1\n''') == '8'\nassert solution('''\n20\n1 1\n3 2\n4 4\n5 6\n7 8\n10 14\n13 16\n12 17\n11 18\n''') == '22'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''\n4\n2 3\n1 1\n3 2\n''') == '5'\nassert solution('''\n3\n1 1\n2 2\n''') == '1'\nassert solution('''\n20\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 3\\n1 1\\n3 2\\n\") == \"10\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '10'\nassert solution('5') == '26'\nassert solution('5') == '25'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"16\"\nassert solution(\"1000\") == \"1025\"\n\"\"\"\nimport math\n\nN = int(input())\n\nnum_votes_takahashi = 0\nnum_votes_aoki = 0\n\nnum_votes_takahashi = int(input())\nnum_votes_aoki = int(input())\n\nnum_votes_takahashi_past = 0\nnum_votes_aoki_past = 0\n\ncount = 0\nfor i in range(1, N + 1):\n    if num_votes_takahashi > num_votes_aoki:\n        count += (math.factorial(N) // (math.factorial(num_votes_takahashi - num_votes_takahashi_past) * math.factorial(num_votes_aoki - num_votes_aoki_past)))\n        num_votes_takahashi = 0\n        num_votes_aoki = 0\n    elif num_votes_aoki > num_votes_takahashi:\n        count += (math.factorial(N) // (math.factorial(num_votes_takahashi - num_votes_takahashi_past) * math.factorial(num_votes_aoki - num_votes_aoki_past)))\n        num_votes_takahashi = 0\n        num_votes_aoki = 0\n    elif num_votes_takahashi == num_votes_aoki:\n        count += (math.factorial(N) // math.factorial(num_votes_takahashi - num_votes_takahashi_past) * math.factorial(num_votes_aoki - num_votes_aoki_past))\n        num_votes_takahashi_past = num_votes_takahashi\n        num_votes_aoki_past = num_votes_aoki\n\nprint(count)"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n2 1\n1 1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n2 3\n1 1\n3 2\n\"\"\") == \"10\""
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''1\n3 1\n3 1''') == \"3\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('uncopyrightable') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"aabb\") == \"yes\"\n\n'''"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes', \"error\"\nassert solution('valid') == 'no', \"error\"\n\nassert solution('copyrightable') == 'no', \"error\"\nassert solution('invalid') == 'yes', \"error\"\nassert solution('invalid1') == 'no', \"error\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('copyrightable') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"this is a string\") == \"yes\"\nassert solution(\"abcde fghij\") == \"no\"\nassert solution(\"\") == \"yes\"\nassert solution(\"asdfgh jklmn\") == \"no\"\nassert solution(\"a,b,c,d,e,f,g\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"ab\") == \"no\"\n\"\"\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('tweet') == 'no'\nassert solution('cd') == 'no'\nassert solution('coding') == 'yes'\nassert solution('awesome') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"banana\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\""
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"6\\nBBBBBBB\") == \"2\"\nassert solution(\"6\\nWWWWWWW\") == \"1\"\nassert solution(\"6\\nWBWBWBW\") == \"0\"\nassert solution(\"5\\nWWWWWWWWWW\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"5\\nWEEEENWW\") == \"1\"\nassert solution(\"3\\nEEWE\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nWEEWW') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('2\\nWEW') == '0'"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"12\") == \"4\"\nassert solution(\"100\") == \"5\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"100 4\") == \"50\\n50\\n50\\n50\"\nassert solution(\"10 100\") == \"90\\n80\\n60\\n50\\n30\\n20\\n10\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\", \"Wrong\"\nassert solution(\"5 3\\n1 2\\n2 3\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n1\\n\", \"Wrong\"\nassert solution(\"10 9\\n1 2\\n2 4\\n4 3\\n4 5\\n5 6\\n6 7\\n5 8\\n6 9\\n8 10\\n\") == \"3\\n4\\n1\\n2\\n1\\n2\\n2\\n2\\n2\\n3\\n\", \"Wrong\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('10 10') == '10'\nassert solution('50 100') == '50'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"2 2 1 1\", \"Should be 2 2 1 1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\nassert solution('4 3') == '2\\n2\\n1\\n1'"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 4\\n\") == \"2 2 1\"\nassert solution(\"4 4\\n1 2\\n2 3\\n1 4\\n\") == \"2 2 1\"\nassert solution(\"5 4\\n1 2\\n2 3\\n1 4\\n\") == \"3 3 1\""
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\n\nhttps://judge.softuni.bg/Contests/Practice/Index/1326#1\n\n\n'''\n\n##########################################################################\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2 2 1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2'\nassert solution('6 4') == '2'\nassert solution('6 2') == '2'\nassert solution('10 3') == '1'"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"5\", \"Test 1 failed\"\nassert solution(\"3\") == \"25\", \"Test 2 failed\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(int(stdin.split(\"\\n\")[-1]) + max([int(x) for x in stdin.split(\"\\n\")[:-1]]))\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('4\\n1\\n10\\n15\\n') == '30'\nassert solution('2\\n1\\n10\\n15\\n') == '0'\nassert solution('5\\n1\\n10\\n15\\n') == '30'\nassert solution('6\\n1\\n10\\n15\\n') == '30'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"2\\n8\\n13\\n15\") == \"30\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('4\\n3\\n10\\n15\\n') == '30'"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '25'\nassert solution('5 2') == '30'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n5\n4\n5''') == '25'\nassert solution('''3\n5\n10\n15\n''') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10\\n15\\n') == '25'\nassert solution('2\\n1\\n2\\n') == '0'\nassert solution('5\\n2\\n10\\n12\\n1\\n3\\n') == '5'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"25\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"60\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"25\", \"Wrong answer\"\nassert solution(\"3\") == \"30\", \"Wrong answer\"\nassert solution(\"2\") == \"0\", \"Wrong answer\"\nassert solution(\"15\") == \"30\", \"Wrong answer\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('aabbca') == '2'\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == '26'"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"4\\nabcd\") == \"1\"\nassert solution(\"5\\naaa\") == \"1\"\nassert solution(\"3\\nab\") == \"2\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('7') == '4'\nassert solution('8') == '5'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ab\") == \"0\"\nassert solution(\"abab\") == \"1\"\nassert solution(\"ababc\") == \"2\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"100\") == \"101\""
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nababc') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nabcb') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\na') == '4'\nassert solution('6\\nabcdefghijklmnopqrstuvwxyz') == '7'\n\n\"\"\""
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '0'\nassert solution('6\\n') == '3'\nassert solution('13\\n') == '4'\nassert solution('14\\n') == '1'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\n\nassert solution('Cloudy') == 'Sunny'\n\nassert solution('Rainy') == 'Sunny'"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n\"\"\""
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\""
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == None, \"Please return None\"\nassert solution('') == '', \"Empty string is not valid\"\nassert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Rainy,Cloudy') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('5 7 120') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('12 17 120') == '119'\nassert solution('8 17 120') == '119'\nassert solution('8 17 120') == '119'"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\") == \"1\"\nassert solution(\"1 10 2\") == \"3\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 1\") == \"1\"\nassert solution(\"2 8 1\") == \"2\"\nassert solution(\"7 9 100\") == \"100\"\nassert solution(\"7 11 1\") == \"1\"\nassert solution(\"7 3 2\") == \"3\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 17 120\n''') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('7 1 5') == '1'\nassert solution('7 2 1') == '2'\nassert solution('3 1 2') == '2'\nassert solution('5 2 1') == '1'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 7 120\") == \"119\", \"Wrong answer\"\nassert solution(\"10 15 200\") == \"6\", \"Wrong answer\"\n\ninput() # remove this line when you submit your answer\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('5 11 20') == '15'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 5\") == \"1\"\nassert solution(\"2 3 5\") == \"6\"\nassert solution(\"4 5 2\") == \"5\"\nassert solution(\"2 5 2\") == \"8\"\nassert solution(\"4 5 2\") == \"6\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '119'"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3800'\n\n'''"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1900\"\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1900'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\n\n'''\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 2') == '3900'\nassert solution('1 3') == '3600'\nassert solution('2 1') == '3700'\nassert solution('2 2') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3800'\n\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 1\") == \"3800\"\nassert solution(\"3 1\") == \"3800\"\nassert solution(\"4 1\") == \"3800\"\nassert solution(\"5 1\") == \"3800\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 1') == '3800'\nassert solution('1 1') == '3800'\nassert solution('1 1') == '3800'\nassert solution('1 1') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\nimport sys\nimport timeit\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\ntimes = []\nfor i in range(1, M + 1):\n    t = timeit.timeit('solution(\"{} {}\")'.format(\"1 1\", i),\n                      setup='from __main__ import solution',\n                      number=1000)\n    times.append(t)"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"a\") == None\nassert solution(\"\") == None\nassert solution(\"aabcb\") == \"c\"\nassert solution(\"aabc\") == \"b\"\n\"\"\"\n\nimport itertools\n\nfrom typing import Iterable\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('a') == 'b'\nassert solution('aa') == 'b'\nassert solution('bb') == None\nassert solution('aaa') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"b\""
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abcd\") == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('a') == None\nassert solution('a') == None\nassert solution('ac') == 'a'\nassert solution('ab') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''atcoderregularcontest''') == 'b'\nassert solution('''a''') == 'None'\nassert solution('''aasdasdasdasdasdasdasdasdasd''') == 'None'\nassert solution('''asdasdasdasdasdasdasdasdasdasdasd''') == 'b'"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\n\"\"\""
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4\\n'\nassert solution('''3\n2 4 3''') == '3\\n2\\n2\\n3\\n'\nassert solution('''10\n1 2 3 4 5 6 7 8 9''') == '10\\n6\\n7\\n9\\n'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"4 3 3 4\"\nassert solution(sample_input_2) == \"4 3 3 4\"\nassert solution(sample_input_3) == \"4 3 3 4\"\nassert solution(sample_input_4) == \"4 3 3 4\"\nassert solution(sample_input_5) == \"4 4 3 3\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\""
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '4'\nassert solution('3') == '3'\nassert solution('11') == '4'\nassert solution('2') == '3'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '4'\nassert solution('5') == '3'\nassert solution('2') == '2'\nassert solution('2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"3\") == \"3\\n3\\n3\\n\"\nassert solution(\"2\") == \"2\\n2\\n2\\n\"\nassert solution(\"1\") == \"1\\n1\\n1\\n\"\nassert solution(\"6\") == \"2\\n3\\n3\\n4\\n4\\n5\\n\""
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n2 1 2 4 2 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\""
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2 4 2 1') == '2'\nassert solution('4') == '0'"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1 \\times 2 rectangle can be formed.\"\n\nTest cases:\n1. A_1 = 1, A_2 = 4, A_3 = 4, A_4 = 1.\n-> 1 \\times 4 rectangle can be formed.\n2. A_1 = 1, A_2 = 1, A_3 = 1, A_4 = 1.\n-> 4 \\times 4 rectangle can be formed.\n3. A_1 = 5, A_2 = 5, A_3 = 4, A_4 = 4.\n-> 0 \\times 4 rectangle can be formed.\n'''"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 2 3\n4 5 3\n''') == '2'\nassert solution('''3\n1 2 2\n1 3\n''') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"10\\n1 1 1 2 2 2 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5\") == \"2\"\nassert solution(\"10\\n1 1 1 2 2 2 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5\") == \"2\"\nassert solution(\"10\\n2 2 2 3 3 3 3 3 3 4 4 4 4 4 4 4 5 5 5 5 5\") == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 1 2 4 2\n''') == '2', \"First\"\n\nassert solution('''\n4\n2 4 1 3\n''') == '0', \"Second\"\n\nassert solution('''\n4\n4 3 2 1\n''') == '2', \"Third\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\", \"First Test Case\"\nassert solution(\"8\") == \"8\", \"Second Test Case\"\nassert solution(\"10\") == \"6\", \"Third Test Case\"\nassert solution(\"100\") == \"28\", \"Fourth Test Case\"\nassert solution(\"10\") == \"11\", \"Fifth Test Case\"\n\n\"\"\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7 1\") == \"8\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n2\\n5') == '8'\nassert solution('3\\n7 1\\n2\\n5') == '8'"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"8\"\nassert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '8'\nassert solution('7 1') == '4'\nassert solution('2') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n2\\n5') == '8'\nassert solution('1\\n10\\n') == '11'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '8'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''\n4\n10 2\n5\n10\n''') == '11'\nassert solution('''\n1\n3\n1\n2\n''') == '4'\nassert solution('''\n2\n2\n1\n1\n''') == '2'\nassert solution('''\n3\n10\n0\n0\n''') == '1'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n100\\n\") == \"1\"\nassert solution(\"5\\n5\\n5\\n50\\n\") == \"0\""
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\\n1\") == \"3\"\nassert solution(\"10\\n20\\n30\\n100\\n\") == \"30\"\n\n---Time---\nO(A+B+C)\n\n---Solutions---\n1.\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\\n2\\n2\\n100\"\n) == \"2\"\nassert solution(\n    \"2\\n2\\n2\\n200\"\n) == \"0\"\nassert solution(\n    \"2\\n2\\n2\\n20\"\n) == \"1\"\nassert solution(\n    \"2\\n2\\n2\\n100\"\n) == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2\n2\n100\n''') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"5\\n2\\n2\\n100\") == \"2\"\nassert solution(\"5\\n2\\n2\\n100\") == \"2\"\nassert solution(\"10\\n10\\n10\\n100\") == \"1\"\nassert solution(\"10\\n10\\n10\\n100\") == \"1\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == \"Yes\"\nassert solution('2 3 4') == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 2') == 'No'\nassert solution('1 0 2') == 'Yes'\nassert solution('-1 3 2') == 'No'\nassert solution('-1 1 2') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes', 'Sample case failed'\nassert solution('1 3 3') == 'No', 'Sample case failed'\nassert solution('3 1 2') == 'No', 'Sample case failed'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\""
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 3') == 'No'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\""
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'Yes', \"Wrong Answer (Tolerance)\"\nassert solution('3 4 2') == 'No', \"Wrong Answer (Tolerance)\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''3 9\n120\n100\n140''') == '9'\nassert solution('''1\n10\n10\n10''') == '1'\nassert solution('''3 1\n3 2\n3 3\n4 4\n4 5\n4 6''') == '3'\nassert solution('''1\n10\n10\n10''') == '1'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '9'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1000') == '9'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('11') == '3'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"3 100\\n120\\n100\\n140\") == \"6\"\nassert solution(\"4 100\\n120\\n100\\n140\") == \"6\"\nassert solution(\"5 100\\n120\\n100\\n140\") == \"9\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10 1000\n120\n100\n140\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 1000\n120\n100\n140\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1000\n120\n100\n140\n\n\"\"\") == \"9\"\nprint(\"You're all set!\")\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1000\") == \"9\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1000\n120\n100\n140\n\"\"\") == \"9\"\nassert solution(\"\"\"\n2 1000\n120\n100\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 1000\n10\n100\n140\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 5\n1\n1\n1\n2\n2\n2\n2\n2\n2\n\"\"\") == \"5\""
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n'''\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''3\napple\norange\napple\n''') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**8)\n\nn = int(input())"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('12') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\""
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"5\") == \"2 2 2 2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\nprint(solution('''4\n2100 2500 2700 2700'''))\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 1'\nassert solution('2') == '1 1'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''5\n10 20 50 60 40\n''') == '2 2'\nassert solution('''8\n2000 3000 3999 4999 5999 6999 7999 8999 9999\n10 20 50 60 40\n''') == '1 1'\nassert solution('''9\n2000 3000 3999 4999 5999 6999 7999 8999 9999\n10 20 50 60 40\n''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\\n\") == \"2 2\"\n\n\"\"\"\n\n\"\"\"\n>>> solution('4\\n2100 2500 2700 2700\\n')\n'2 2'\n\"\"\"\n\n\"\"\"\n\uc81c\ud55c \uc2dc\uac04 \ucd08\uacfc\nN = int(input())\nlist_color = input().split()\ncolor = {}\nfor i in range(1, N+1):\n    color[i] = list_color[i-1]\nlist_min = []\nlist_max = []\nfor i in color:\n    if int(color[i]) < 400:\n        list_min.append(color[i])\n    if int(color[i]) > 1600:\n        list_max.append(color[i])\nprint(len(list_min), len(list_max))\n\"\"\"\n\nN = int(input())\nlist_color = input().split()\ncolor = {}\nfor i in range(1, N+1):\n    color[i] = int(list_color[i-1])\nlist_min = []\nlist_max = []\nfor i in color:\n    if color[i] < 400:\n        list_min.append(color[i])\n    if color[i] > 1600:\n        list_max.append(color[i])\nprint(len(list_min), len(list_max))"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoxo\") == \"900\"\nassert solution(\"ooxx\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('oox') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"700\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''o\nx\nx''') == '900'\nassert solution('''x\nx\nx''') == '900'\nassert solution('''o\no\nx''') == '800'\nassert solution('''x\no\nx''') == '800'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"xoxo\") == \"900\"\nassert solution(\"ooxx\") == \"1600\"\nassert solution(\"xoxo\") == \"900\"\nassert solution(\"ooxx\") == \"1600\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xxx\") == \"700\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"xoxo\") == \"900\"\nassert solution(\"x\") == \"900\"\nassert solution(\"o\") == \"700\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"700\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"0\"\nassert solution(\"xo\") == \"0\"\nassert solution(\"xxx\") == \"0\"\nassert solution(\"xxxx\") == \"0\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"o\") == \"800\"\nassert solution(\"x\") == \"800\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'H', 'First'\nassert solution('H H') == 'H', 'Second'\nassert solution('H D') == 'D', 'Third'\nassert solution('D H') == 'D', 'Fourth'\nassert solution('D D') == 'D', 'Fifth'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H H\\n') == 'H'\nassert solution('D H\\n') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('D D') == 'D'\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'H'\n\n---Time---\n---Worst Case: O(1)\n---Avg Case: O(1)\n---Best Case: O(1)\n\"\"\""
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1+2+2+2=7\") == \"1+2+2+2=7\"\nassert solution(\"123\") == \"1+2+3+4=7\"\nassert solution(\"ABCD\") == \"1+2+3+4=7\"\nassert solution(\"2222\") == \"1+2+2+2=7\"\nassert solution(\"2121\") == \"1+2+1+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('3322') == '1+2+2+2=7'\nassert solution('12345') == '1+2+2+2=7'\nassert solution('1234567') == '1+2+2+2=7'\nassert solution('1111') == '1+1=2'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1221') == '1+2+1=7'\nassert solution('1211') == '1+1=7'\nassert solution('1201') == '1+0=7'\nassert solution('1200') == '1=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\"\"\""
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1234\") == \"1+2+3+4=7\"\nassert solution(\"2345\") == \"2+3+4+5=7\"\nassert solution(\"23456\") == \"2+3+4+6=7\"\nassert solution(\"12345678\") == \"1+2+3+4+5+6=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\nassert solution('1112') == '1+1+1+1=7'\n\"\"\""
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1012') == '1-2+2-2=7'\nassert solution('9111') == '1+1-1-1=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1-2+2-2=7'\nassert solution('1222') == '1+2-2+2=7'\nassert solution('1222') == '1-2-2+2=7'\nassert solution('1222') == '1+2-2-2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\n\"\"\""
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1222''') == '1+2+2+2=7'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n\"\"\""
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '0'\nassert solution('3') == '1'\nassert solution('9') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\\n0\\n0\\n0\\n0\"\nassert solution(\"4\") == \"0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\nassert solution('1\\n1\\n') == '0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 1, 1, 2, 2]) == \"2 0 2 0 0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\n\n----Extras----\n\nThis is a bonus problem, so your solution should be faster than the O(n^2) solution on the above problem, where n is the number of members in the company.\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"5\", \"1 1 2 2\"]) == \"2 0 0 0 0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n2\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '5'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"9\") == \"4\"\nassert solution(\"9\") == \"4\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('6') == '4'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n''') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"20\") == \"9\"\nassert solution(\"15\") == \"14\"\nassert solution(\"14\") == \"12\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6''') == '3'\nassert solution('''4''') == '3'\nassert solution('''5''') == '4'\nassert solution('''10''') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '4'\n\"\"\"\n\nx = int(input())"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1118') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1010') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('1234') == 'Yes'\nassert solution('12345') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1117\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"112\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1118\") == \"Yes\"\n\n'''"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1123') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\n\nassert solution(\"1112\") == \"No\"\n\nassert solution(\"1112\") == \"Yes\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3\""
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '3'\nassert solution('2 4') == '3'\nassert solution('3 6') == '3'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n''') == '3'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 6\") == \"3\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n\nn = int(input())\nupper, middle, lower = map(int, input().split())\nalts = 0"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 5\n2 4\n3 6\n''') == \"3\"\nassert solution('''2 1\n2 4\n3 6\n''') == \"2\"\nassert solution('''3 1\n2 4\n3 6\n''') == \"1\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\n\nassert solution('''5\n2 4\n3 6\n1 1\n4 5\n5 4''') == '4'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\n\"\"\""
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('4') == '3'\n\n'''\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A B') == '<'\nassert solution('D E') == '>'\nassert solution('X Y') == '='\n\"\"\"\n\nx, y = stdin.split()"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output\n\n\"\"\"\n\nstdin = input()\n\nX, Y = stdin.split()"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A A\") == \"<\"\nassert solution(\"C C\") == \">\"\nassert solution(\"F F\") == \"=\"\n\"\"\"\n\na, b = stdin.split()\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '>'\nassert solution('E F') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"A\") == \">\"\nassert solution(\"B\") == \"<\"\nassert solution(\"X Y\") == \"<\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '<'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''A B\n10 11''') == '<'\nassert solution('''A C\n10 11''') == '>'\nassert solution('''A D\n10 11''') == '='\nassert solution('''A E\n10 11''') == '='\nassert solution('''A F\n10 11''') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \"<\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C D\") == \">\"\nassert solution(\"A B\") == \"<\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A B') == '<'\nassert solution('B C') == '>'"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '1#2#1'\nassert solution('4 5') == '11211'\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n\") == \"11211\"\nassert solution(\"4 5\\n\") == \"1#2#1\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '11211'\nassert solution('1 2') == '1#2#1'\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1#2#1\"\nassert solution(input()) == \"11211\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 1\n.\n.\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 4\n.#\n.##\n\"\"\") == \"13\"\nassert solution(\n\"\"\"\n7 7\n..#.#\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '11211'\n\"\"\"\n\nH, W = list(map(int, input().split()))\n\ngrid = []\nfor _ in range(H):\n    grid.append(input())\n\nres = 0\nfor i in range(H):\n    for j in range(W):\n        if grid[i][j] == '#':\n            continue\n        else:\n            if i-1 >= 0 and grid[i-1][j] == '#':\n                res += 1\n            if j-1 >= 0 and grid[i][j-1] == '#':\n                res += 1\n            if j+1 < W and grid[i][j+1] == '#':\n                res += 1\n            if i+1 < H and grid[i+1][j] == '#':\n                res += 1\n            if i-1 >= 0 and j-1 >= 0 and grid[i-1][j-1] == '#':\n                res += 1\n            if i-1 >= 0 and j+1 < W and grid[i-1][j+1] == '#':\n                res += 1\n            if i+1 < H and j-1 >= 0 and grid[i+1][j-1] == '#':\n                res += 1\n            if i+1 < H and j+1 < W and grid[i+1][j+1] == '#':\n                res += 1\n\nprint(res)"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"11\"\n\nn = int(stdin.split(\" \")[0])\nm = int(stdin.split(\" \")[1])"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"3 3\") == \"111\""
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '11211', 'Should be 11211'\nassert solution('1 2') == '12', 'Should be 12'\nassert solution('4 5') == '1111', 'Should be 1111'\nassert solution('5 5') == '1111', 'Should be 1111'"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\n\nprint(solution(input()))\n\nInput\n2 3\n..#.\n...#\n\nOutput\n1\n1\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 4\") == \"2\"\nassert solution(\"3 3 3\") == \"0\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"5 10 4\") == \"3\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\") == \"3\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 240') == \"3\"\nassert solution('60 90 120') == \"3\"\nassert solution('80 150 80 150') == \"4\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\n\n'''"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 4 240') == '3'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 240') == '3'\nassert solution('3 4 240') == '3'\nassert solution('3 3 240') == '3'\nassert solution('1 3 4 240') == '3'\nassert solution('2 2 3 240') == '2'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\nassert solution(\"1 5 6\") == \"1\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2 0 5 0 0\") == \"5\"\nassert solution(\"2 0 2 0 0\") == \"2\"\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n1\n1\n1\n1\n2\n2\n3\n2\n3\n3\n4\n2\n3\n3\n1\n2\n2\n3\n1\n1\n3\n2\n3\n2\n4\n3\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A B C X Y') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\nassert solution('A B C X Y') == '7900'\n\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 10') == '3'\nassert solution('1 2 3 4 5 10 1') == '3'\nassert solution('1 2 3 4 5 10 1 2') == '3'\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1500 2000 1600 1 2''') == '799'\nassert solution('''1500 2000 1600 2 1''') == '799'\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('10 10 10 1 1') == '120'"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1500, 2000, 1600, 3, 2]) == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nprint(solution(input()))\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\n\"\"\""
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('10') == '1'"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('7') == '7'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"20\") == \"20\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nassert solution('1000') == '999'\nassert solution('1') == '1'\nassert solution('12') == '1'\nassert solution('12') == '1'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"9\""
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '1'\n\"\"\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '9'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('5') == '0'\nassert solution('4') == '4'\nassert solution('100') == '99'\nprint(\"You're all set!\")\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('6\\n10\\n8\\n6\\n8\\n10') == '5'\nassert solution('4\\n10\\n10\\n10\\n10') == '4'\nassert solution('3\\n10\\n8\\n8\\n10') == '3'\nassert solution('4\\n10\\n10\\n10\\n10') == '3'"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '3'\nassert solution('8') == '2'\nassert solution('8') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n10\\n8\\n8\\n6\") == \"2\"\nassert solution(\"4\\n10\\n10\\n10\\n10\") == \"4\""
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"6\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10\\n8\\n6\") == \"3\"\nassert solution(\"4\\n10\\n8\\n6\") == \"1\"\nassert solution(\"8\\n10\\n8\\n6\") == \"2\"\nassert solution(\"100\\n10\\n8\\n6\") == \"1\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QAZWSXEDCRFVTGBYHJUIMNPOW') == '7'\nassert solution('GEARTRVFTWYBQJGHXKL') == '6'\nassert solution('SOLAGUQCL') == '2'\nassert solution('QWRTYUIOPASDFHGKJL') == '2'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == 'QWERTYASDFZ'\nassert solution('QWERTYASDFZXCV') == 'QWERTYASDFZ'\nassert solution('QWERTYASDFZXCV') == 'QWERTYASDFZ'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"QWERTYASDFZXCV\"\nprint(solution(\"QWERTYASDFZXCV\"))\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTY') == '1'\n\n----\n\nfrom itertools import takewhile\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('QWERTYASDFZXCV') == 5\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 26\nassert solution('QWERTYASDFZXCVZ') == 5\n\n\"\"\""
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40\n\n''') == \"2\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('10') == '3'\nassert solution('13') == '4'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '1'\n\"\"\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('4') == '3'"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"3\\n4 8 12 40\") == \"0\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n\") == \"2\"\nassert solution(\"3\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"18\""
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '24'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('100') == '66776099'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '12'\nassert solution('5') == '120'\nassert solution('10') == '228'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"12\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\nassert solution(\"5\") == \"42\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n\nimport sys\n\nsys.stdin = open(\"input.txt\", \"r\")\n\nn = int(input())\nprint(sum([i + 1 for i in range(n)]))"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('5') == '5'"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"12\"\nassert solution(\"10\") == \"66\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\n\"\"\"\nN = int(input())\n\ncandy = 1\nline = 1\nwhile candy <= N:\n    candy += candy + line\n    line += 1\n\nprint(candy)\n\n\"\"\"\n\ncandy = 0\nline = 1\nwhile candy <= N:\n    candy += candy + line\n    line += 1\n\nprint(candy)\n\n\"\"\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n\"\"\""
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 3 4''') == '2'\nassert solution('''3\n4 3 1''') == '4'\nassert solution('''8\n4 3 4 6 3 7 1''') == '4'\nassert solution('''3\n5 3 2''') == '6'\nassert solution('''5\n3 1 2 3 5''') == '3'"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'\nassert solution('4 1') == '1'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3 1\n''') == '2'\nprint(solution('''\n2\n3 1\n'''))"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '3'\n\"\"\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nprint('YOUR CODE SUCCESSFULLY TERMINATED')\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"10 5\") == \"4\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('1 3\\n1 AC\\n2 AC\\n2 AC\\n2 WA') == '1 3'\nassert solution('2 3\\n1 WA\\n2 AC\\n2 AC\\n2 WA') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"3 5\") == \"2 3\"\nassert solution(\"10 5\") == \"10 10\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('6 5') == '2 1'\n\n\"\"\"\n\nfrom itertools import permutations\n\nn, m = map(int, input().split())\narr = []\nfor _ in range(m):\n    arr.append(input())\n\nlst = list(permutations([i for i in range(1, n + 1)], n))\n\nres = 0\npenalty = 0\nfor i in lst:\n    num_ac = 0\n    for j in range(n):\n        if arr[j] == 'WA':\n            num_ac += 1\n    if num_ac == n:\n        res += 1\n    else:\n        penalty += num_ac\n\nprint(res, penalty)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\n\"\"\""
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA') == '1 1'\nassert solution('2 WA') == '2 1'\nassert solution('2 AC') == '2 0'\nassert solution('1 AC') == '1 0'\n\"\"\"\n\nn, m = map(int, input().split())\n\ncount = 0\npenalty = 0\nfor i in range(m):\n    problem, verdict = input().split()\n    if verdict == \"AC\":\n        count += 1\n    penalty += int(problem) if verdict == \"WA\" else 0\nprint(count, penalty)\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''\n4 3\n1 WA\n1 WA\n1 WA\n1 WA\n2 WA\n2 WA\n''') == '4 4'\nassert solution('''\n6 3\n1 WA\n1 WA\n1 WA\n1 WA\n2 WA\n2 WA\n''') == '6 6'\nassert solution('''\n6 4\n1 WA\n1 WA\n1 WA\n1 WA\n2 WA\n2 WA\n2 WA\n2 WA\n2 WA\n''') == '12 12'\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '2 2'\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n1 WA\\n2 WA\\n2 AC\\n\") == \"2 2\"\nassert solution(\"1 10\\n1 WA\\n2 WA\\n2 AC\\n3 WA\\n3 AC\\n\") == \"3 2\"\n\"\"\""
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\nassert solution('2 6\\n2 AC\\n3 WA\\n1 AC\\n2 AC\\n2 AC\\n') == '3 1'\nassert solution('3 4\\n1 AC\\n2 AC\\n2 AC\\n2 AC\\n1 AC\\n') == '1 1'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"3 1\\n2 1 3\") == \"4\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('3 2') == '5'\nassert solution('4 3') == '3'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 1\n4 1 2\n1 4 3\n5 4\"\"\") == \"5\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"3 5\") == \"2\""
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1 5\") == \"5\"\nassert solution(\"3 1 5\") == \"5\"\nassert solution(\"1 1 10\") == \"10\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"100 100 1\\n200 50 200\") == \"25\"\nassert solution(\"8 1\\n7 5 6 1 1\\n8 2 1 2\\n7 1 2 3\\n5 2 3 4\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"10 1\") == \"11\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"10 2\") == \"11\"\nassert solution(\"3 1\") == \"5\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"3 1 5\") == \"3\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n4 1 5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 1\n4 1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 2\n3 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n3\\n\") == \"7\"\nassert solution(\"1\\n10\\n3\\n\") == \"7\"\nassert solution(\"1\\n10\\n3\\n\") == \"7\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('1') == '4'\nassert solution('1') == '4'\nassert solution('1') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"8\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('3') == '5'\nassert solution('4') == '12'"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n10\n2\n\n''') == \"4\"\nassert solution('''2\n10\n1\n\n''') == \"10\"\nassert solution('''1\n10\n1\n\n''') == \"9\"\nassert solution('''1\n10\n2\n\n''') == \"3\"\nassert solution('''1\n10\n3\n\n''') == \"11\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n100\\n2\\n') == '16'\nassert solution('1\\n10\\n3\\n') == '7'\nassert solution('1\\n10\\n3\\n') == '7'\nassert solution('1\\n10\\n2\\n') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10\n2\n\n''') == '4', \"Wrong\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\""
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '4'"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '60'\nassert solution('2') == '180'\nassert solution('3') == '330'\nassert solution('4') == '440'\nassert solution('5') == '600'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('100\\n0\\n200\\n0\\n') == '200'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '300'\nassert solution('420') == '420'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    600\n    300\n    220\n    420\n''') == '520'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1\\n0\\n0\\n0') == '0'\n\"\"\""
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''600\n300\n220\n420''') == '520'\nassert solution('''\n100\n100\n300\n300\n''') == '500'\nassert solution('''\n100\n100\n100\n100\n100\n100\n''') == '0'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"3\\n1 1 1 1\") == \"1\"\nassert solution(\"6\\n0 2 0 3 2 1\") == \"0\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 4 4 0 2') == '4'\nassert solution('2\\n2 4 4 0 2') == '4'\nassert solution('3\\n2 4 4 0 2') == '0'\nassert solution('4\\n2 4 4 0 2') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\n\"\"\"\n\nimport collections\nfrom typing import List\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('20') == '0'\nassert solution('100') == '0'\nassert solution('6') == '0'\n'''"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n0 1 0 2 0') == '0'\nassert solution('5\\n0 2 1 4 0') == '0'\nassert solution('5\\n0 4 1 2 0') == '4'\nassert solution('5\\n0 2 4 1 0') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n2 4 4 0 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 2 5') == 84"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('10 1 10') == '55'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('10 2 20') == '76'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 2 5\\n\") == \"84\"\nassert solution(\"1 1 3\\n\") == \"2\"\nassert solution(\"50 500 4\\n\") == \"54\"\nassert solution(\"20 0 0\\n\") == \"0\"\nassert solution(\"1 2 3\\n\") == \"3\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 10\") == \"55\"\nassert solution(\"20 2 5\") == \"84\""
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"20 20 5\") == \"92\"\nassert solution(\"20 20 2\") == \"92\"\nassert solution(\"20 2 2\") == \"84\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 2 5\") == \"7\"\nassert solution(\"5 10 5\") == \"1\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\\n\") == 84\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('1') == '1'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('101') == 'ABC101'\nassert solution('2000') == 'ABC2000'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('1000') == 'ABC1000'\nassert solution('1234') == 'ABC123'\nassert solution('1234') == 'ABC123'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"ABC\"\nassert solution(\"5\") == \"ABCA\"\nassert solution
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == 'ABC100'"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ABC100\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'ABC5'"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('99') == 'ABC99'\nassert solution('99999') == 'ABC999'\nassert solution('777777') == 'ABC777'\nassert solution('888888') == 'ABC888'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'ABC12'\nassert solution('1') == 'ABC1'\nassert solution('7') == 'ABC7'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 5') == '5'"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"0\""
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '5'\n\n\"\"\""
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"10 10\") == \"50\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '5'\n\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1 1\n5 5\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''1 1\n''') == '1'\n\n'''\nclass solution:\n    def solution(self, stdin):\n        a,b = map(int, stdin.split())\n        days = 0\n        months = [31,28,31,30,31,30,31,31,30,31,30,31]\n        for i in range(1,a):\n            if i == 2 and (((a%4)==0 and (a%100!=0)) or (a%400==0)):\n                months[1] = 29\n            days += months[i-1]\n        days += b\n        return days\n\ns = solution()\nprint(s.solution('''1 1\n'''))\n\n'''\nThe position of the missing day can be calculated by subtracting the number of days in each month of the Gregorian calendar from the number of days in each month in the Julian calendar. For example, the number of days in April is 29, and the number of days in July is 30. Therefore, the missing day must be at least 29 days and at most 30 days.\n\nIn the Gregorian calendar, a leap year is a year that is divisible by 4, but not by 100, except that the years 2000 and 2400 are leap years, and the years 1600 and 2400 are not leap years.\n\nIn the Julian calendar, a leap year is a year that is divisible by 4, but not by 100, except that the years 2000 and 2400 are leap years, and the years 1600 and 2400 are not leap years.\n\nThe Gregorian calendar was invented in the year 1582. In the Julian calendar, the day of the month is measured in days since the beginning of the Gregorian year.\n\nGiven a year and a month as integers, return the day of the month as an integer.\n\nNote that the Gregorian calendar is 365 days long, so if a leap year is a year that is divisible by 4, then there are 366 days in that year, so the result is 366. If the year is a leap year that is not divisible by 4, then there are 365 days in that year, so the result is 365."
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2 2\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    \"2 6\\n\"\n    \"3 6\\n\"\n    \"2 7\\n\"\n    \"3 8\\n\"\n    \"3 9\\n\"\n    \"4 10\\n\"\n    \"4 11\\n\"\n    \"4 12\\n\"\n    \"5 12\\n\"\n    \"5 13\\n\"\n    \"5 14\\n\"\n    \"6 15\\n\"\n    \"6 16\\n\"\n    \"6 17\\n\"\n    \"7 18\\n\"\n    \"7 19\\n\"\n    \"7 20\\n\"\n    \"8 21\\n\"\n    \"8 22\\n\"\n    \"8 23\\n\"\n    \"9 24\\n\"\n    \"9 25\\n\"\n    \"9 26\\n\"\n    \"10 27\\n\"\n    \"10 28\\n\"\n    \"10 29\\n\"\n    \"11 30\\n\"\n    \"11 31\\n\"\n    \"11 32\\n\"\n    \"12 33\\n\"\n    \"12 34\\n\"\n    \"12 35\\n\"\n    \"13 36\\n\"\n    \"13 37\\n\"\n    \"13 38\\n\"\n    \"14 39\\n\"\n    \"14 40\\n\"\n    \"14 41\\n\"\n    \"15 42\\n\"\n    \"15 43\\n\"\n    \"15 44\\n\"\n    \"16 45\\n\"\n    \"16 46\\n\"\n    \"16 47\\n\"\n    \"17 48\\n\"\n    \"17 49\\n\"\n    \"17 50\\n\"\n    \"18 51\\n\"\n    \"18 52\\n\"\n    \"18 53\\n\"\n    \"19 54\\n\"\n    \"19 55\\n\"\n    \"19 56\\n\"\n    \"20 57\\n\"\n    \"20 58\\n\"\n    \"20 59\\n\"\n    \"21 60\\n\"\n    \"21 61\\n\"\n    \"21 62\\n\"\n    \"22 63\\n\"\n    \"22 64\\n\"\n    \"22 65\\n\"\n    \"23 66\\n\"\n    \"23 67\\n\"\n    \"23 68\\n\"\n    \"24 69\\n\"\n    \"24 70\\n\"\n    \"24 71\\n\"\n    \"25 72\\n\"\n    \"25 73\\n\"\n    \"25 74\\n\"\n    \"26 75\\n\"\n    \"26 76\\n\"\n    \"26 77\\n\"\n    \"27 78\\n\"\n    \"27 79\\n\"\n    \"27 80\\n\"\n    \"28 81\\n\"\n    \"28 82\\n\"\n    \"28 83\\n\"\n    \"29 84\\n\"\n    \"29 85\\n\"\n    \"29 86\\n\"\n    \"30 87\\n\"\n    \"30 88\\n\"\n    \"30 89\\n\"\n    \"31 90\\n\"\n    \"31 91\\n\"\n    \"31 92\\n\"\n    \"32 93\\n\"\n    \"32 94\\n\"\n    \"32 95\\n\"\n    \"33 96\\n\"\n    \"33 97\\n\"\n    \"33 98\\n\"\n    \"34 99\\n\"\n    \"34 100\\n\"\n    \"34 101\\n\"\n    \"35 102\\n\"\n    \"35 103\\n\"\n    \"35 104\\n\"\n    \"36 105\\n\"\n    \"36 106\\n\"\n    \"36 107\\n\"\n    \"37 108\\n\"\n    \"37 109\\n\"\n    \"37 110\\n\"\n    \"38 111\\n\"\n    \"38 112\\n\"\n    \"38 113\\n\"\n    \"39 114\\n\"\n    \"39 115\\n\"\n    \"39 116\\n\"\n    \"40 117\\n\"\n    \"40 118\\n\"\n    \"40 119\\n\"\n    \"41 120\\n\"\n    \"41 121\\n\"\n    \"41 122\\n\"\n    \"42 123\\n\"\n    \"42 124\\n\"\n    \"42 125\\n\"\n    \"43 126\\n\"\n    \"43 127\\n\"\n    \"43 128\\n\"\n    \"44 129\\n\"\n    \"44 130\\n\"\n    \"44 131\\n\"\n    \"45 132\\n\"\n    \"45 133\\n\"\n    \"45 134\\n\"\n    \"46 135\\n\"\n    \"46 136\\n\"\n    \"46 137\\n\"\n    \"47 138\\n\"\n    \"47 139\\n\"\n    \"47 140\\n\"\n    \"48 141\\n\"\n    \"48 142\\n\"\n    \"48 143\\n\"\n    \"49 144\\n\"\n    \"49 145\\n\"\n    \"49 146\\n\"\n    \"50 147\\n\"\n    \"50 148\\n\"\n    \"50 149\\n\"\n    \"51 150\\n\"\n    \"51 151\\n\"\n    \"51 152\\n\"\n    \"52 153\\n\"\n    \"52 154\\n\"\n    \"52 155\\n\"\n    \"53 156\\n\"\n    \"53 157\\n\"\n    \"53 158\\n\"\n    \"54 159\\n\"\n    \"54 160\\n\"\n    \"54 161\\n\"\n    \"55 162\\n\"\n    \"55 163\\n\"\n    \"55 164\\n\"\n    \"56 165\\n\"\n    \"56 166\\n\"\n    \"56 167\\n\"\n    \"57 168\\n\"\n    \"57 169\\n\"\n    \"57 170\\n\"\n    \"58 171\\n\"\n    \"58 172\\n\"\n    \"58 173\\n\"\n    \"59 174\\n\"\n    \"59 175\\n\"\n    \"59 176\\n\"\n    \"60 177\\n\"\n    \"60 178\\n\"\n    \"60 179\\n\"\n    \"61 180\\n\"\n    \"61 181\\n\"\n    \"61 182\\n\"\n    \"62 183\\n\"\n    \"62 184\\n\"\n    \"62 185\\n\"\n    \"63 186\\n\"\n    \"63 187\\n\"\n    \"63 188\\n\"\n    \"64 189\\n\"\n    \"64 190\\n\"\n    \"64 191\\n\"\n    \"65 192\\n\"\n    \"65 193\\n\"\n    \"65 194\\n\"\n    \"66 195\\n\"\n    \"66 196\\n\"\n    \"66 197\\n\"\n    \"67 198\\n\"\n    \"67 199\\n\"\n    \"67 200\\n\"\n    \"68 201\\n\"\n    \"68 202\\n\"\n    \"68 203\\n\"\n    \"69 204\\n\"\n    \"69 205\\n\"\n    \"69 206\\n\"\n    \"70 207\\n\"\n    \"70 208\\n\"\n    \"70 209\\n\"\n    \"71 210\\n\"\n    \"71 211\\n\"\n    \"71 212\\n\"\n    \"72 213\\n\"\n    \"72 214\\n\"\n    \"72 215\\n\"\n    \"73 216\\n\""
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '5'\nassert solution('3 2') == '1'\n\"\"\"\n\na, b = map(int, input().split())\n\nfor i in range(2018-a+1):\n    if (i % 7 == 0) or (i % 7 == 6):\n        if i % 10 == 2:\n            if i > 31:\n                continue\n        if i % 10 == 5:\n            if i > 30:\n                continue\n    if i % 7 == 0:\n        if i % 10 == 1:\n            if i > 31:\n                continue\n        if i % 10 == 2:\n            if i > 28:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 6:\n        if i % 10 == 1:\n            if i > 30:\n                continue\n        if i % 10 == 2:\n            if i > 29:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 1:\n        if i % 10 == 1:\n            if i > 31:\n                continue\n        if i % 10 == 2:\n            if i > 28:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 2:\n        if i % 10 == 1:\n            if i > 31:\n                continue\n        if i % 10 == 2:\n            if i > 29:\n                continue\n        if i % 10 == 3:\n            if i > 30:\n                continue\n        if i % 10 == 4:\n            if i > 31:\n                continue\n        if i % 10 == 5:\n            if i > 30:\n                continue\n        if i % 10 == 6:\n            if i > 31:\n                continue\n    if i % 7 == 3:\n        if i % 10 == 1:\n            if i > 31:\n                continue\n        if i % 10 == 2:\n            if i > 30:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 4:\n        if i % 10 == 1:\n            if i > 30:\n                continue\n        if i % 10 == 2:\n            if i > 29:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 5:\n        if i % 10 == 1:\n            if i > 30:\n                continue\n        if i % 10 == 2:\n            if i > 29:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n    if i % 7 == 6:\n        if i % 10 == 1:\n            if i > 31:\n                continue\n        if i % 10 == 2:\n            if i > 28:\n                continue\n        if i % 10 == 3:\n            if i > 31:\n                continue\n        if i % 10 == 4:\n            if i > 30:\n                continue\n        if i % 10 == 5:\n            if i > 31:\n                continue\n        if i % 10 == 6:\n            if i > 30:\n                continue\n\nprint(i)"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"3\") == '1'\nassert solution(\"2 3\") == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"2\""
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"1\"\nassert solution('3') == \"1\"\nassert solution('4') == \"1\"\nassert solution('5') == \"1\"\nassert solution('1') == \"0\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('1\\n3\\n1\\n2\\n') == '-1'\nassert solution('2\\n1\\n3\\n2\\n') == '3'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '-1'\nassert solution('10') == '9'\nassert solution('1') == '-1'\nassert solution('100') == '-1'"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n3\\n1\\n5') == '2'\n\"\"\""
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '-1'\nassert solution('3') == '1'\nassert solution('4') == '-1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''4\n1\n2\n3\n4\n5\n6''') == '3'\n\n\"\"\"\n\nN = int(input())\nA = list(map(int, input().split()))\nprint(sum(A))\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n6\n2\n6\n''') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('10') == '3'"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n6\\n2\\n6') == '1'\nassert solution('5\\n2\\n6') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n6\n2\n6\n\n''') == '1', 'First'\nassert solution('''\n5\n5\n3\n2\n1\n\n''') == '4', 'Second'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n5\n4\n''') == '1'\nassert solution('''\n2\n4\n7\n1\n''') == '2'\nassert solution('''\n3\n6\n7\n''') == '1'\nassert solution('''\n4\n4\n2\n''') == '2'\nassert solution('''\n1\n10\n5\n2\n''') == '11'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\n\nstdin = \\\n'''\n3 4\n1 2 3 4 5\n'''\nassert solution(stdin) == '1'\n\nstdin = \\\n'''\n7 4\n1 1 1 1 1 1 1 1\n'''\nassert solution(stdin) == '1'\n\nstdin = \\\n'''\n5 2\n1 1 1 2 2\n'''\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3 2 1''') == '2'\nassert solution('''5 2\n5 2 4 2''') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('10 10\\n1 1 2 1 2 2 1 1 2 1 2 1 1 2 1 1 2') == '2'\nassert solution('1 3\\n3 1') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"8 1\\n1 1 1 1 2 2 2 5 5 5 5 5 5 5 5\") == \"2\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 1 2 2 5\n''') == '1'\nassert solution('''2\n1\n''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '10'\nassert solution('''1\n1\n''') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 2 1 3 2\") == \"2\"\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1'\n\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 2 5\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n\") == \"2\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 1\n1 2\n1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n2\n2 2\n1 1\n\"\"\") == \"No\"\nassert solution(\"\"\"\n5\n1 1\n1 2\n1 1\n2 1\n1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n10\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Yes'\nassert solution('6') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'No'\nassert solution('0') == 'No'\n\"\"\""
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"6 1 1\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'No'\nassert solution('3 1 2') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\"\n) == \"Yes\"\nassert solution(\n    \"5\"\n) == \"No\"\nassert solution(\n    \"4\"\n) == \"No\"\nassert solution(\n    \"5\"\n) == \"Yes\"\nassert solution(\n    \"1000000000\"\n) == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1 2\") == \"Yes\"\nassert solution(\"6\\n1 1 1\\n\") == \"No\"\nassert solution(\"10\\n3 1 2\\n1 2 3\\n\") == \"Yes\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('4\\n1 1 1 1\\n3 1 2\\n3 3 2\\n4 2 1') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == \"Yes\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\n\n---Time Limit Exceeded---\n\n'''\n\n\na,b = map(int,input().split())\nx = int((a+b)/2)\nprint(int(x))"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"1\", \"3\"]) == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 5') == '5'\n\"\"\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '2'\nassert solution('10 5') == '10'\n\n\"\"\"\n\na, b = list(map(int, input().split()))\n\nprint(int( (a + b) / 2))\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n\") == \"2\"\nassert solution(\"5 2\\n\") == \"5\"\nassert solution(\"0 0\\n\") == \"0\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\""
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\n\nprint(solution(\"1 3\"))\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 7') == '4'\nassert solution('1 3') == '1'\nassert solution('2 7') == '2'\nassert solution('3 4') == '1'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''1 2\n1 3\n3 4\n4 5\n5 6\n6 7''') == '0'\nassert solution('''10 1\n1 3\n1 7\n2 8\n3 9\n3 6\n4 5\n4 7\n5 8\n6 9\n6 8\n6 10\n7 9\n7 10\n7 11\n8 12\n8 13\n8 14\n9 15\n9 16\n9 17\n10 18\n10 19\n11 20\n11 21\n12 22\n12 23\n13 24\n13 25\n14 26\n14 27\n15 28\n15 29\n16 30\n16 31\n17 32\n17 33\n18 34\n18 35\n19 36\n19 37\n20 38\n20 39\n21 40\n21 41\n22 42\n22 43\n23 44\n23 45\n24 46\n24 47\n25 48\n25 49\n26 50\n26 51\n27 52\n27 53\n28 54\n28 55\n29 56\n29 57\n30 58\n30 59\n31 60\n31 61\n32 62\n32 63\n33 64\n33 65\n34 66\n34 67\n35 68\n35 69\n36 70\n36 71\n37 72\n37 73\n38 74\n38 75\n39 76\n39 77\n40 78\n40 79\n41 80\n41 81\n42 82\n42 83\n43 84\n43 85\n44 86\n44 87\n45 88\n45 89\n46 90\n46 91\n47 92\n47 93\n48 94\n48 95\n49 96\n49 97\n50 98\n50 99\n51 100\n51 101''') == '16'\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n10 3\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n5 7\n\"\"\") == \"4\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 7\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n3 4\n5 1\n4 3''') == '4', \"First\"\nassert solution('''5 7\n1 2\n3 4\n5 6\n4 7\n6 7''') == '3', \"Second\"\nassert solution('''4 4\n1 3\n4 2\n5 2\n3 7''') == '1', \"Third\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"0\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10 10\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n12 12\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n7 9\n7 8\n8 9\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10 10\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n7 9\n7 8\n8 9\n10 10\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n7 9\n7 8\n8 9\n\"\"\") == \"7\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == \"4\"\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 6''') == \"0\"\nassert solution('''7 7\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7''') == \"0\"\n'''\nThe figure below shows the given graph:\nThe edges shown in red are bridges. There are four of them.\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 7') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '4'\nassert solution(\"5 5\\n3 4\\n4 6\\n2 2\\n1 1\\n1 2\\n4 4\\n6 6\\n6 5\\n6 7\\n5 7\\n6 7\") == '3'\nassert solution(\"5 5\\n3 4\\n4 6\\n2 2\\n1 1\\n1 2\\n4 4\\n6 6\\n6 5\\n6 7\\n5 7\\n6 7\") == '0'\nassert solution(\"5 6\\n3 4\\n4 6\\n2 2\\n1 1\\n1 2\\n4 4\\n6 6\\n6 5\\n6 7\\n5 7\\n6 7\") == '1'\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '1'\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 7, 5]) == 7\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 7 5''') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"10 8 8\") == \"8\"\nassert solution(\"4 5 9\") == \"9\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('6 5 7') == '7'\n\n---\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '7'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 2 3') == '1'\nassert solution('2 3 4') == '3'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 6\") == \"6\"\nassert solution(\"5 7 7\") == \"7\"\nassert solution(\"5 7 7\") == \"7\"\nassert solution(\"5 5 5\") == \"5\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('2 2 1') == '3'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '1'\nassert solution('-2 -2 -1') == '-1'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n5 6 7') == '1'\nassert solution('1 2 1\\n3 3 3') == '1'\nassert solution('1 2 1\\n1 1 1') == '2'\nassert solution('1 2 1\\n1 1 1\\n1 2 1') == '1'\nassert solution('1 2 1\\n2 1 1') == '2'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 100 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 100 1 200 1 2 100 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 100 1 2 200 1 2 100 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 100 1 2 100 1 2 100 10 20 15 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n\"\"\"\n\nA,B,C,D,E,F=map(int,input().split())\ntemp=B+C\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 2 10 10 20 15 200''') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['1 2 10 20 15 200']) == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n\"\"\"\nfrom math import floor\nfrom sys import stdin"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"\") == \"\"\n\"\"\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n'\nprint('Solution passed!')\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''internationalization\ninternationalization''') == 'i18n', 'incorrect result'"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"england\") == \"eng\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"i18n\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '', 'Empty string is correct'\nassert solution('internationalization') == 'i18n', 'Simple string is correct'\nassert solution('computer science') == 'cs', 'Complex string is correct'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('abbreviation') == 'ab12'\nassert solution('abbreviated') == 'ab12'\nassert solution('abbreviate') == 'ab12'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('top') == 'NO'\nassert solution('nop') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''C{A}C{B}C{C}\nC{D}D{E}E{F}\nG{G}G{H}H{I}\nJ{J}J{K}K{L}''') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\n'''"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n\"\"\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    'C_{11}C_{12}C_{13}',\n    'C_{21}C_{22}C_{23}'\n    ])) == 'YES'\n\nassert solution('\\n'.join([\n    'C_{11}C_{12}C_{13}',\n    'C_{21}C_{22}C_{23}',\n    'C_{31}C_{32}C_{33}'\n    ])) == 'NO'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abababc') == 'b'\nassert solution('ababca') == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nassert solution('abb') == 'b'\nassert solution('abc') == 'a'\nassert solution('ababc') == 'a'\nassert solution('ac') == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ababa\") == \"aba\"\nassert solution(\"abab\") == \"ab\"\nassert solution(\"aba\") == \"a\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aba') == 'b'\nassert solution('aab') == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"b\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'b'"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aba') == 'b'\nassert solution('ababababababababa') == 'ababababababababa'\nassert solution('baabababa') == 'babababa'\nassert solution('bababababa') == 'aba'\nassert solution('ab') == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"x\") == \"\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\nassert solution(\"6 3 3 3 3 3 3 3\\n2 1 2 1 1 1 2\\n1 3 2 3 3 1 3 2\\n2 1 3 2 1 3 1 1\\n1 3 1 3 2 1 2 3 2\\n1 3 2 1 3 1 1 3 1\\n2 3 2 2 3 1 2 1\\n3 1 3 3 1 1 3 2\\n2 1 1 1 3 1 3 2\\n1 2 2 1 2 1 2 2\\n2 3 1 2 2 1 2 1\\n3 1 1 1 2 1 1 3\\n\") == \"27\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\"\n) == \"9\"\nprint(solution(\n\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\"\n))\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('5 5 2') == '9'\nassert solution('5 6 2') == '9'\nassert solution('5 7 2') == '9'\nassert solution('5 8 2') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2\\n2 3 4\\n') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_str) == \"9\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"9\"\n\"\"\"\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))\nfrom algorithm.graph.graph import Graph\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"3 3 4\") == \"9\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('7 7 5') == '23'\nassert solution('5 3 1') == '10'\nassert solution('6 5 4') == '18'\nassert solution('2 5 1') == '6'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"3 2\") == \"11\"\nassert solution(\"6 5 1\") == \"12\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1\\n') == '12'\nassert solution('4\\n3 10 1\\n1 10 2\\n2 10 3\\n3 10 4\\n4 10 5\\n') == '11'\nassert solution('4\\n2 10 1\\n1 10 2\\n2 10 3\\n3 10 4\\n4 10 5\\n') == '0'\nassert solution('4\\n1 10 1\\n1 10 2\\n2 10 3\\n3 10 4\\n4 10 5\\n') == '0'"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''5\n5 1 1\n1 10 1\n''') == '11'\nassert solution('''3\n6 5 1\n1 10 1\n''') == '0'\nassert solution('''1\n1 0 0\n''') == '0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '12 11 0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n6 5 1\n1 10 1\n\n''') == '12'\nassert solution('''4\n5 4 1\n10 1 1\n''') == '11'\nassert solution('''5\n1 100 1\n100 1 1\n''') == '0'\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"2\") == \"11\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '12'\nassert solution('6 5 1') == '11'\n\"\"\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n2 1 1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n4\n4 2 1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n5 1 1\n\"\"\") == \"11\"\nassert solution(\"\"\"\n6\n5 1 1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n7\n7 1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0\\n'\nassert solution('5\\n4 6 2 1\\n1 2 3 4 5') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '12'\nassert solution('4') == '11'\nassert solution('5') == '0'\nassert solution('10') == '0'\n\nimport os\nimport sys\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\", \"Sample Test\"\nassert solution(\"5 5\") == \".....\\n.**.\\n.***\\n....\\n....\", \"Sample Test\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '*\\n.*'\nassert solution('3 3') == '..\\n..\\n..\\n.\\n.*\\n.*\\n.*\\n.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n.\\n.') == '1\\n2\\n.\\n.'\nassert solution('4\\n.\\n..\\n*') == '1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n'"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n', 'Test 1 fail'\nassert solution('3 5') == '*\\n*.\\n*\\n*.\\n*\\n*', 'Test 2 fail'\nassert solution('4 5') == '*.\\n*.\\n*.\\n*.\\n*\\n', 'Test 3 fail'\nassert solution('3 3') == '*\\n*\\n*\\n*\\n*\\n', 'Test 4 fail'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n.\\n') == '1 1\\n.\\n'\nassert solution('2 2\\n*\\n*') == '*\\n*\\n*\\n*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n.*\n.*''') == '''*\n*'''"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n..''') == '.'.\n\nassert solution('''1 1\n.''') == '.'\n\nassert solution('''8 8\n.\n.\n.\n.\n.\n.\n.\n.\n.''') == '''..\n..\n..\n.\n.\n.\n.\n.\n..'''"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n.\\n.\\n\") == \"*.\\n*.\\n*.\\n*.\\n\"\n\"\"\"\n\n\nimport sys\n\nsys.setrecursionlimit(10**6)\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1 1\\n1 1\"\nassert solution(\"1 1\\n1 1\") == \"1 1\\n1 1\"\nassert solution(\"1 1\\n1 1\") == \"1 1\\n1 1\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('1000000') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('6\\n2 6 1 4 5') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'NO', 'Test 1 Failed'\nassert solution('6') == 'YES', 'Test 2 Failed'\nassert solution('0') == 'NO', 'Test 3 Failed'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"10\\n7 8 1 4 5 3 2 9 6\") == \"NO\"\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\") == \"YES\"\nassert solution(\"4\\n3\\n3\\n3\\n\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"5\",\"2\",\"6\",\"1\",\"4\",\"5\"]) == \"YES\""
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('5\\n3 6 2 1 4 5') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 1 1\n''') == 'YES'\nassert solution('''3\n1 2 1\n''') == 'NO'\nassert solution('''5\n2 3 4 5 1\n''') == 'YES'\nassert solution('''5\n2 1 1 3 2\n''') == 'NO'"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1 4\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3\\n2 4\\n1 3\") == \"YES\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('10') == '8'\nassert solution('20') == '10'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\") == \"3\\n4\\n4\\n2\\n1\"\nassert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 1 3 4 2 2\") == \"4\\n3\\n4\\n1\"\nassert solution(\"5\\n1 2 2 1 2 1 1 2\\n3\\n1 1 3 4 2 2\") == \"2\\n2\\n2\\n1\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '2'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '1'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '2'\n\n'''\n\nimport heapq"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"4\"\nassert solution(\"6 6 6 6 6 6 8 8\") == \"4\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n4\n5\n6''') == '2'\nassert solution('''5\n2 2 2 1 2\n8\n6 6 6 6 6 6 8 8\n8\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''6\n2 2 2 1 2\n8\n6 6 6 6 6 6 8 8\n8\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"8\"\nassert solution(\"1000\") == \"11\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"8\") == \"5\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution() == '5'\nassert solution() == '77'"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '1'\nassert solution(input()) == '5'\nassert solution(input()) == '77'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\") == \"1\\n2\\n\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''\n1\n5\n1\n''') == '1'\nassert solution('''\n2\n2\n1\n''') == '2'\nassert solution('''\n3\n1\n2\n''') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '1'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '5'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '77'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '77'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\"\nassert solution(\"5\\n12 5\\n123 5\\n123 4\\n567 5\\n897 4\") == \"4\"\nassert solution(\"5\\n8 5\\n543 5\\n123 4\\n123 4\\n567 5\\n897 4\") == \"5\"\n\"\"\""
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\\n\") == \"3\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n\") == \"2\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"1\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\"\nassert solution(\"1\\n5\\n3\\n\") == \"3\"\nassert solution(\"1\\n10\\n3\\n\") == \"4\"\nassert solution(\"1\\n10\\n9\\n\") == \"2\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n\""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\nabca\n1 3\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n''')\n\nassert solution('''\n2 2\nabc\n1 3\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n''')\n\nassert solution('''\n3 3\nabc\n1 3\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n''')\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n'''\n\nassert solution('''3\nabca\n1 3\n10 5\ncodeforces''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n'''"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"abca\\n\"\n    \"1 3\\n\"\n    \"10 5\\n\"\n    \"codeforces\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" \\\n    \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \" \\\n    \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '26 10'\nassert solution('''3\na\nab\nc''') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(input()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n\n\"\"\"\n\nimport sys\nimport unittest\n\nsys.path.append(\"..\")\nfrom utils import utils\n\n\nclass Test(unittest.TestCase):\n    def test_solution(self):\n        test_input = utils.loadStringTestingInput(\n            __file__, \"test_utils_input\")\n        utils.call(test_input)\n        real_output = utils.loadStringTestingOutput(\n            __file__, \"test_utils_output\")\n        utils.assertList(self, real_output, utils.loadStringTestingOutput(\n            __file__, \"test_utils_output\"))\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"26 10\"\nassert solution(\"4 2\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"20 10 1 2 3 5 10 5 9 4\") == \"20 10 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5 10 5 9 4 4 4 1 0 9 5 1 2 3 5"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces''') == '26 10'\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces''') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('''2\n4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n') == '0'\nassert solution('5\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n') == '4'\nassert solution('2\\n2 2 2\\n2 2 2\\n') == '0'"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"9999999994\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('2\\n5 5 5\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '2'\nassert solution('3\\n3 2 5\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '4'\nassert solution('3\\n4 2 5\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '2'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 4') == '0'\nassert solution('10 20 30') == '36'\nassert solution('5 5 5') == '0'\nassert solution('2 4 3') == '4'"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\n''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('2 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '4'"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '1999999994'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '0'\nassert solution('8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '1999999994'\nassert solution('8\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '2'\nassert solution('10\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '4'\nassert solution('8\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '4'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"1999999994\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n6\n8\n''') == 'YES'\nassert solution('''\n5\n8\n''') == 'YES'\nassert solution('''\n4\n3\n6\n8\n''') == 'YES'\nassert solution('''\n5\n7\n3\n8\n''') == 'NO'\nassert solution('''\n4\n4\n8\n''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''2\n1 8\n4\n1 1 1 1''') == 'NO'\nassert solution('''3\n1 2 5 6\n6\n1 12 3 10 5 8''') == 'YES'\nassert solution('''4\n1 2 5 6\n6\n1 12 3 10 5 8''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''6\n5\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''6\n5\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''6\n5\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'NO'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'NO'\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n    2\n    1 8''') == 'YES'\nassert solution('''4\n    2\n    1 8''') == 'NO'\nassert solution('''4\n    2\n    1 8''') == 'YES'\nassert solution('''4\n    2\n    1 8''') == 'NO'\nassert solution('''4\n    2\n    1 8''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n1 2 3 4\n1 1 1 1''') == \"NO\"\nassert solution('''2\n2\n3 2\n3 1''') == \"YES\"\nassert solution('''2\n2\n3 3\n3 1''') == \"YES\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n11 14 16 12\n4\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''2\n3\n11 14 16 12\n4\n1 8\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n3\n11 14 16 12\n4\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''2\n3\n11 14 16 12\n4\n1 8\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n3\n11 14 16 12\n4\n1 8\n4\n1 1 1 1''') == 'NO'"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 1\n1 2 3\n2 3 1\n2 4 1\n3 4 2\n3 5 4\n3 6 1\n5 5 1\n5 6 4\n6 7 4\n6 8 3\n6 9 2\n7 7 1\n''') == '22'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '17'\n\n'''\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"\n\n\"\"\"\n--- Day 2: I Was Told There Would Be No Math ---\nOn our way to school, we've decided to replace some of the hyperbolic methods with their hyperbolic equivalents. For example, the way we used to calculate sin and cos on a plane was as follows:\n\nsin(x) = m cos(x) - n sin(x) m\ncos(x) = n sin(x) + m cos(x) n\nFor some increasingly complex x, the two expressions above are increasingly complex; for example, with x = 1+1i, sin(1+1i) = -i and cos(1+1i) = 1.\n\nThis can cause us problems, because what we really want to calculate is the (real) sin x (not the imaginary part of the result) and (real) cos x (not the imaginary part of the result).\n\nYou have to use new complex numbers for the trig functions.\n\nLet's say you use the old trig functions, e.g. sin(x) and cos(x), but at some point in your path to school, you are called to use new trig functions, like this:\n\nsin(x) = cos(x)\ncos(x) = -sin(x)\nYou are given integers $m$ and $n$. With these, you are given a complex number $z = i m + n$. Write a function that returns the result of the expression $z$ after you have used the new trig functions.\n\nYou can use any complex number's methods, provided they are not in the form of the old trig functions.\n\nThe function you write must be able to handle the case when cos and sin are not defined. (That is, we want the angle to be in the range of 0 to 2\u03c0)\n\nExample:\n\n- If $m = 1$ and $n = 1$, then $z = 1 + 1i$ is returned:\n\n- If $m = 1$ and $n = 2$, then $z = 3 + 1i$ is returned:\n\n- If $m = 2$ and $n = 2$, then $z = -1 + 2i$ is returned.\n\nWrite a function that, given a complex number, returns the angle of that complex number with respect to the x-axis in the range of 0 to 2\u03c0. Note that this is not the angle of the complex number in the complex plane, but the angle in the complex plane between the unit circle and the complex number.\n\n--- Part Two ---\nNow, you can also use trig functions that aren't in the form of the old trig functions, such as sinh or tanh. For example, the expression -cos(x) can be written as:\n\n- The value of this expression is equal to -sin(x), which can be calculated by using the same trig functions that we used above.\n\nSo, your new trig functions are:\n\nsinh(x) = -sin(x)\ncos(x) = -sin(x)\ntan(x) = sin(x)\nsinh(x) = cos(x)\ntan(x) = -cos(x)\n\nAgain, the expression -cos(x) can be written as:\n\n- The value of this expression is equal to -cos(x), which can be calculated by using the same trig functions that we used above.\n\nSo, your new trig functions are:\n\nsinh(x) = -cos(x)\ncos(x) = -sin(x)\ntan(x) = sin(x)\nsinh(x) = cos(x)\ntan(x) = -cos(x)\n\nWrite a function that, given a complex number, returns the absolute value of the complex number.\n\nThe absolute value of a complex number is the square root of the sum of the squares of its real and imaginary parts.\n\nExample:\n\nIf $z = 1 + 2i$, then $|z| = 3 + 4i$ is returned:\n\n- If $z = -1 - 2i$ and $z = -1 - 2i$, then $|z| = 5 + 4i$ is returned.\n\nWrite a function that, given a complex number, returns the absolute value of the complex number.\n\"\"\"\nfrom typing import Dict, List, Tuple, Union\n\nVector = Union[int, float]\nVector2 = Tuple[Vector, Vector]\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"22\"\nprint(solution(input_))\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3''') == '13'\n\n'''"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == '22'\nassert solution('5 5 4') == '13'"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"3\\n9\\n13\\n27\\n6561\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\""
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n10\n''') == '1'\nassert solution('''\n4\n7\n''') == '2'\nassert solution('''\n5\n10\n''') == '9'\nassert solution('''\n7\n15\n13\n''') == '27'\nassert solution('''\n5\n5\n''') == '5'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '6561'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) in (1, 3, 9, 13, 27, 6561, 19683)\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n12\n7\n''') == '1'\nassert solution('''\n1\n2\n''') == '3'\nassert solution('''\n2\n3\n''') == '5'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3\\n5\\n8\\n7'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n7\n1\n2\n6\n13\n14\n3620\n1000\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n7\n1\n2\n6\n13\n14\n3620\n1000000\n\"\"\"\n) == \"13\"\n\nassert solution(\n\"\"\"\n7\n1\n2\n6\n13\n14\n3620\n100000000\n\"\"\"\n) == \"27\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n10') == '20'\nassert solution('10000\\n10001') == '10001'\nassert solution('1\\n10\\n20') == '29'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution('1\\n') == '3'\nassert solution('2\\n') == '3'\nassert solution('6\\n') == '9'\nassert solution('13\\n') == '13'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"1 1 1 1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 1 1 1 1\"\nassert solution(\"6\\n4 6 2 1 5 3\") == \"3 3 3 1 4 2 5\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1\\n5\\n1 2 3 4 5'\n    '2\\n3 3 1'\n    '3\\n4 6 2 1 5 3'\n    '4\\n5 6 2 1 5 3'\n    '6\\n5 6 2 1 5 3') == \"3 3 3 3 3\""
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"1 1 1 1 1 1\"\nassert solution(\"5\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n5 1 2 3 4\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 3 3 2 1 3\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 3 3 2 1 3\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 3 3 2 1 3\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '3 3 3 2 1 2 1 3 4 4 5 5 1 3 3 2 1 4 4 5'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n') == '1 1 1 1 1 1 1\\n3 3 3 \\n2 3 3 2 1 3 3 1 4\\n1\\n2 2 2 2 2\\n4 4 4 1 4\\n5 5 5 1 2 4 3\\n'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 3\\n3 3 3\\n2 3 3 2 1 3 2\\n1\\n2 2 2 2\\n4 4 4 1 4\\n4 4 4 1 4'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n4\\n4 2 1\\n2 3 3\\n4 5 3 1') == '2 2 2 2 2 2 2'\nassert solution('5\\n4\\n2 3 3 1\\n3 4 1 2\\n4 5 1 2 3') == '3 3 3 2 2 1'\nassert solution('4\\n3\\n4 1 2\\n1 2 3\\n3 4') == '2 2 2 3 3'\n\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\"\n    ) == \"1 1 1 1 1 1\\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"\nassert solution(\n    \"4\\n3\\n2 1\\n4\\n2 3 1\\n5\\n3 4 1 2\"\n    ) == \"1 1 1 1 1\\n3 3 3\\n2 2 2 2 1\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 4\n0 1 2 3 4 5\n''') == '7\n2\n'''\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '5 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == '7'"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n0 3 1\n''') == '7 5 -2 4 -1 2'\nassert solution('''\n5 5\n0 1 2 3 4\n''') == '7 5 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 6\\n1 5\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\") == \"7\\n5 -2 4 -1 2\""
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 6\n1 5\n\n''') == '8'\n\nassert solution('''3 5\n0 3 1\n\n''') == '7'\n\nprint(solution('''3 5\n0 3 1\n\n'''))\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 4 2 3\n''') == '7\n\nassert solution('''\n4\n0 3 2 1\n''') == '-1 -2 -3 4'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"7\""
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"5 -2 4 -1 2\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 6\n1 5\n\n''') == '8\n\nassert solution('''3 5\n0 3 1\n\n''') == '7\n\nassert solution('''4 5\n-1 2 4 1\n\n''') == '6\n\nassert solution('''4 6\n1 -2 3 2\n\n''') == '7\n\nassert solution('''1 4\n-4 -1 2 -2\n\n''') == '6"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3''') == \"YES\\nRUUURRRRUU\"\n\nassert solution('''1\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == \"YES\\nRRRRUUU\"\n\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == \"NO\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n5\n2\n1 0\n1 2\n0 1\n1\n3\n3\n4 4\n''') == 'YES'\n\nassert solution('''\n5\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n3\n''') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n\"\n    \"5\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"3 3\\n\"\n    \"5 5\\n\"\n    \"4 3\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"0 1\\n\"\n    \"1\\n\"\n    \"4 3\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"5\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"3 3\\n\"\n    \"5 5\\n\"\n    \"4 3\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"0 1\\n\"\n    \"1\\n\"\n    \"4 3\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"2\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"1\\n\"\n    \"3\\n\"\n) == \"YES\\n\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"RUUURRRRUU\"\nassert solution(\"4\") == \"NO\"\n\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"NO\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''1\n0\n0\n1''') == 'YES'\nassert solution('''1\n0\n1\n1''') == 'NO'\nassert solution('''5\n5\n0\n1\n1\n0\n1''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == \"NO\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open('test_input_01.txt').read()) == 'YES\\nRRRRUUU'\nassert solution(open('test_input_02.txt').read()) == 'YES\\nRRRRUUU'\nassert solution(open('test_input_03.txt').read()) == 'NO'\nassert solution(open('test_input_04.txt').read()) == 'YES\\nRRRRUUU'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3\n1 2\n2 3\n''') == 'YES'\n\nassert solution('''\n3\n3\n1 3\n2 2\n''') == 'NO'\n\nassert solution('''\n2\n3\n3 3\n2 2\n''') == 'YES'\n\nassert solution('''\n2\n4\n2 0\n1 1\n''') == 'YES'\n\nassert solution('''\n3\n4\n4 4\n0 0\n''') == 'YES'"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n\n'''\n\n\nfrom collections import deque"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"500\"\nassert solution(input()) == \"217871987498122\"\nassert solution(input()) == \"99999999999999999\""
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"2147483647\") == \"3\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8', \"First\"\nassert solution('''\n2 2\n2 2\n100 1\n101 1\n100 101\n101 101\n100 1001\n101 1001\n100 1011\n101 1011\n''') == '4', \"Second\""
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1\\n1 1\") == \"8\"\nassert solution(\"5\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\"\nassert solution(\"100000000000000001 1\\n217871987498122 10\\n500 4\\n2 1\") == \"500\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1\\n1 1') == '8'\nassert solution('5\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '899999999999999999'"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\nassert solution('''\n5\n2 0\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '500'\nassert solution('''\n5\n2 0\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '217871987498122'\nassert solution('''\n5\n2 0\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '217871987498122'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '8'\nassert solution('1 1') == '0'\nassert solution('500 4') == '2128012501878'\nassert solution('217871987498122 10') == '899999999999999999'\nassert solution('100000000000000001 1') == '899999999999999999'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\nassert solution(\n    '2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\nassert solution(\n    '2\\n1\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\nassert solution(\n    '5\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\nassert solution(\n    '5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n1\n100\n''') == '100'\nassert solution('''\n2\n2\n''') == '1'\nassert solution('''\n4\n10\n''') == '1'\nassert solution('''\n5\n100\n''') == '1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''\n1\n4\n1 1 0 1\n5\n1 0 0\n3\n0 0 1\n4\n0 1 1\n1\n1 1 0\n''') == '3'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''\n6\n0 0 0 0 0 1\n4\n1 0 0 0 0\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''\n5\n0 0 0 0 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '5'"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '0'\nassert solution('''1\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '1'\nassert solution('''1\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''1\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '3'\nassert solution('''1\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '5'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input) == '2'\nassert solution(input) == '4'"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == \"2\"\nassert solution('''3\n5\n1 0 0\n3\n4 0 1\n5\n1 1 0\n6\n1 1 0\n3\n4 0 1\n5\n1 1 0\n\n''') == \"0\"\nassert solution('''1\n1\n1\n\n''') == \"1\""
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '2'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '4'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '1'"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n3\n4\n5\n6\n\n''') == 'abcd'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'cbcacaab'\nassert solution('5') == 'abcdabab'\nassert solution('6') == 'baababab'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n5 4\\n\") == \"cbcacab\"\nassert solution(\"2 4\\n3 5\\n\") == \"abcd\"\nassert solution(\"2 6\\n3 4\\n\") == \"baabab\"\nassert solution(\"3 5\\n2 4\\n\") == \"cbcaca\""
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'cbcacab'\nassert solution('4') == 'abcd'\nassert solution('6') == 'baabab'\n\"\"\""
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''\n3\n7 4\n6 2\n''') == 'cbcaca'\nassert solution('''\n3\n5 5\n6 6\n''') == 'abcde'\nassert solution('''\n10\n18 20\n22\n''') == 'abababaa'\nassert solution('''\n1\n1\n1\n''') == 'a'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 4\") == \"abcd\"\nassert solution(\"3 3\") == \"cbcaca\"\nassert solution(\"9 9\") == \"cbcacab\"\nassert solution(\"5 6\") == \"cbcacaa\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ab'\nassert solution('3') == 'acb'\nassert solution('4') == 'bac'\nassert solution('5') == 'abb'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''\n7 3\n4 4\n6 2\n''') == 'baabab'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'cbcaca'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'cbcacab'\nassert solution('4') == 'abcd'\nassert solution('6') == 'baabab'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n4 4 2\n\"\"\".strip()\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 1 2'"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == \"6 23 21\"\nassert solution('''\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == \"2 1 2\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'''\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '6 23 21'\nassert solution('6\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '2 2 1'"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n11\\n3 1 4 1 5 9 2 6 5 3 5') == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\nassert solution('''\n8\n20\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\nassert solution('''\n7\n10\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\nassert solution('''\n7\n12\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\nassert solution('''\n7\n12\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n5 6 3\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nprint('Test passed')\n\n\n'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n4 1\n1 2\n3 4''') == '6'\nassert solution('''3\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '27'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '39'\nassert solution('''4\n0\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '11'\nassert solution('''5\n1 2\n1 2 3 4\n2 3 5\n4 5 6 6 5''') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1 2\n2 1\n3 1''') == '7'\nassert solution('''2 2\n1 3\n4 2''') == '9'\nassert solution('''3 3\n1 2\n2 1\n3 1''') == '6'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '7'\nassert solution('''5 5\n1 2\n2 3\n4 5\n5 6\n6 4''') == '34'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '27'\nassert solution('1 2') == '39'\nassert solution('3 4') == '11'\nassert solution('5 5') == '17'\nassert solution('5 5 6 6 5') == '39'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == '6'\nassert solution(\"2 1\") == '27'\nassert solution(\"3 4\") == '39'\nassert solution(\"5 5\") == '11'\nassert solution(\"5 5\") == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n1 2\n''') == '6'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''6\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '27'\nassert solution('3') == '39'\nassert solution('4') == '11'\nassert solution('5') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nprint('Test passed')"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n4\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n3\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n3\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n3\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n3\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\"\n    ) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\n    \"2 1\"\n    ) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\n    \"10 2\"\n    ) == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\n    \"10 1\"\n    ) == \"0 2 4 7 8 11 13 14 16 17\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\n\nstdin = '10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n'\nprint(solution(stdin))\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 4') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 5') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n7 6 18 6 16 18 1 17 17\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"1\\n3 2 3 1 3 3 1 4 1\") == \"0 2 4 7 8 11 13 14 16 17\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"0 1 2 4 7\"\nassert solution(\"2 1\") == \"0 1 2 4 7\"\nassert solution(\"3 2\") == \"0 1 2 3 5\"\nassert solution(\"3 1\") == \"0 1 2 3 5\"\nassert solution(\"4 2\") == \"0 1 2 3 4 5\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == \"aaabb\"\nassert solution('5 2') == \"aabab\"\nassert solution('5 8') == \"baaba\"\nassert solution('5 10') == \"bbaaa\"\nassert solution('3 1') == \"abb\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == 'aa'\nassert solution('2\\n3') == 'aab'\nassert solution('3\\n4') == 'aba'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"aaabb\"\nassert solution(\"5 1\") == \"aabab\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"bbaaa\"\nassert solution(\"5 10\") == \"bbaaaabaaaaabaaaaaaaaaaaaaabaaaaaaaaaaaaaa\"\n\"\"\"\n\n\"\"\"\nPseudocode:\n\nO(n * (2n-1)) + O(n)\n\nLet n = 8, k = 1\n\nLet T = [[],[\"a\",\"b\"]]\n\n1. Put each of the substrings in T to a queue.\n2. From the queue, take an item, for example, from T, and append it to T1\n3. Add the item to the queue, as well as the next element, for example, from T1, to T2\n4. Add the item to the queue, as well as the next element, for example, from T2, to T3\n5. Add the item to the queue, as well as the next element, for example, from T3, to T4\n6. Add the item to the queue, as well as the next element, for example, from T4, to T5\n7. Add the item to the queue, as well as the next element, for example, from T5, to T6\n8. Add the item to the queue, as well as the next element, for example, from T6, to T7\n9. Add the item to the queue, as well as the next element, for example, from T7, to T8\n\nO(n * (2n-1)) + O(n)\n\"\"\"\nimport collections\nimport itertools"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'aaabb'\nassert solution(input()) == 'aabab'\nassert solution(input()) == 'baaba'\nassert solution(input()) == 'bbaaa'\nassert solution(input()) == 'abb'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"aaa\"\nassert solution(\"3 1\") == \"aaaa\"\nassert solution(\"20 100\") == \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaababaabbaaaaaaababaabababbaaababaaabaababbbaaabbaabbababbaaaabaaaabbaaaabbababaababaabbbaaabbababaaababaababaaababaaabbaabbaaaabaabaaaaabbaaaabbababaaabbaaabababbaaabaaaaaabbaaaabaabaaaaababababaaaabababbbabaaabaaaaaaaaaaaaa\"\nassert solution(\"2 10\") == \"ababa\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == 'aaabb'\nassert solution('5 2') == 'aabab'\nassert solution('5 8') == 'baaba'\nassert solution('5 10') == 'bbaaa'\nassert solution('3 1') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n4\n1 5\n3 5\n4 8\n5 5\n''') == ''\nassert solution('''\n6\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"aaabb\", \"Should be 'aaabb'\"\nassert solution() == \"aabab\", \"Should be 'aabab'\"\nassert solution() == \"baaba\", \"Should be 'baaba'\"\nassert solution() == \"bbaaa\", \"Should be 'bbaaa'\"\nassert solution() == \"abb\", \"Should be 'abb'\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''2\n3 3\n1 2\n1 3\n''') == '1'\nassert solution('''2\n4 1\n1 2\n1 3\n''') == '1'\nassert solution('''5\n10 8\n5 9\n4 5\n3 6\n1 3\n''') == '1'\nassert solution('''3\n10 9\n10 9\n10 9\n''') == '1'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '9'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nprint(solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n'''))\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '1'\nassert solution('4 1') == '1'\nassert solution('5 1') == '2'\nassert solution('10 1') == '1'\nassert solution('100 1') == '1'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5 1 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1') == '6'\nassert solution('2\\n4 1 5\\n3 1 6 7 2\\n1 3 6 7 2 5 4\\n2 5\\n3 1\\n4 1\\n5 1\\n6 1\\n') == '6'\nassert solution('3\\n5 6\\n2 1\\n3 4\\n1 4\\n2 5\\n4 3\\n') == '5'\nassert solution('3\\n5 6\\n2 1\\n3 4\\n1 4\\n2 5\\n4 3\\n') == '5'\nassert solution('5\\n10 7\\n15 8\\n20 199\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n') == '10'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n8 1\n1 4 2 2 2 2 3 4\n1 2 3 3 4 3 5 5\n2 3 5 5 1 2 3 4\n2 4 3 4 5 1 2 3 4\n2 5 2 4 1 3 1 3 4\n2 3 1 5 5 2 5 5 5\n3 1 4 4 3 5 1 5 1\n3 2 1 4 4 1 4 2 3\n3 1 4 4 1 3 1 3 4\n3 2 1 4 4 1 3 1 3\n3 3 1 4 4 1 4 3 3\n3 4 1 4 4 1 4 3 3\n3 5 1 4 4 1 4 3 3\n3 2 1 4 4 1 4 3 3\n3 3 1 4 4 1 3 3 3\n3 4 1 4 4 1 4 3 3\n3 5 1 4 4 1 4 3 3\n3 6 1 4 4 1 4 3 3\n3 7 1 4 4 1 4 3 3\n3 8 1 4 4 1 4 3 3\n3 9 1 4 4 1 4 3 3\n3 10 1 4 4 1 4 3 3\n4 1 5 1 5 4 4 4\n4 2 3 5 3 4 3 4\n4 3 1 4 4 4 5 4\n4 4 1 4 4 4 4 4\n4 5 1 4 4 4 4 4\n4 6 1 4 4 4 4 4\n4 7 1 4 4 4 4 4\n4 8 1 4 4 4 4 4\n4 9 1 4 4 4 4 4\n4 10 1 4 4 4 4 4\n5 1 4 4 4 4 4 4\n5 2 3 5 3 4 4 4\n5 3 1 4 4 4 4 4\n5 4 1 4 4 4 4 4\n5 5 1 4 4 4 4 4\n5 6 1 4 4 4 4 4\n5 7 1 4 4 4 4 4\n5 8 1 4 4 4 4 4\n5 9 1 4 4 4 4 4\n5 10 1 4 4 4 4 4\n6 1 4 4 4 4 4 4\n6 2 3 5 3 4 4 4\n6 3 1 4 4 4 4 4\n6 4 1 4 4 4 4 4\n6 5 1 4 4 4 4 4\n6 6 1 4 4 4 4 4\n6 7 1 4 4 4 4 4\n6 8 1 4 4 4 4 4\n6 9 1 4 4 4 4 4\n6 10 1 4 4 4 4 4\n7 1 4 4 4 4 4 4\n7 2 3 5 3 4 4 4\n7 3 1 4 4 4 4 4\n7 4 1 4 4 4 4 4\n7 5 1 4 4 4 4 4\n7 6 1 4 4 4 4 4\n7 7 1 4 4 4 4 4\n7 8 1 4 4 4 4 4\n7 9 1 4 4 4 4 4\n7 10 1 4 4 4 4 4\n8 1 4 4 4 4 4 4\n8 2 3 5 3 4 4 4\n8 3 1 4 4 4 4 4\n8 4 1 4 4 4 4 4\n8 5 1 4 4 4 4 4\n8 6 1 4 4 4 4 4\n8 7 1 4 4 4 4 4\n8 8 1 4 4 4 4 4\n8 9 1 4 4 4 4 4\n8 10 1 4 4 4 4 4\n9 1 4 4 4 4 4 4\n9 2 3 5 3 4 4 4\n9 3 1 4 4 4 4 4\n9 4 1 4 4 4 4 4\n9 5 1 4 4 4 4 4\n9 6 1 4 4 4 4 4\n9 7 1 4 4 4 4 4\n9 8 1 4 4 4 4 4\n9 9 1 4 4 4 4 4\n9 10 1 4 4 4 4 4\n10 1 4 4 4 4 4 4\n10 2 3 5 3 4 4 4\n10 3 1 4 4 4 4 4\n10 4 1 4 4 4 4 4\n10 5 1 4 4 4 4 4\n10 6 1 4 4 4 4 4\n10 7 1 4 4 4 4 4\n10 8 1 4 4 4 4 4\n10 9 1 4 4 4 4 4\n10 10 1 4 4 4 4 4\n11 1 4 4 4 4 4 4\n11 2 3 5 3 4 4 4\n11 3 1 4 4 4 4 4\n11 4 1 4 4 4 4 4\n11 5 1 4 4 4 4 4\n11 6 1 4 4 4 4 4\n11 7 1 4 4 4 4 4\n11 8 1 4 4 4 4 4\n11 9 1 4 4 4 4 4\n11 10 1 4 4 4 4 4\n12 1 4 4 4 4 4 4\n12 2 3 5 3 4 4 4\n12 3 1 4 4 4 4 4\n12 4 1 4 4 4 4 4\n12 5 1 4 4 4 4 4\n12 6 1 4 4 4 4 4\n12 7 1 4 4 4 4 4\n12 8 1 4 4 4 4 4\n12 9 1 4 4 4 4 4\n12 10 1 4 4 4 4 4\n13 1 4 4 4 4 4 4\n13 2 3 5 3 4 4 4\n13 3 1 4 4 4 4 4\n13 4 1 4 4 4 4"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '1'\nassert solution(input()) == '5'\nassert solution(input()) == '10'\n\n\n[Image]\n\nRed points are the points we can't save. Blue points are the points that we can save. The platforms are blue and red, so we can place the first platform between points $(1, -1)$ and $(2, -1)$ and the second one between points $(4, 3)$ and $(5, 3)$.\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 1\n1 2\n1 2\n''') == '2'\nassert solution('''3\n2 1\n1 2\n1 2\n''') == '2'\nassert solution('''5\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"8 1\") == \"7\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3') == '1 2 3 4'\nassert solution('4 3') == '0 0 1 2'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1\\n2\\n1\") == \"1\\n2\\n3\\n3\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 3\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"10\"\n    ) == \"1\"\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    ) == \"2\"\nassert solution(\n    \"4 3\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"10\"\n    ) == \"3\"\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    ) == \"3\"\nassert solution(\n    \"4 3\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"10\"\n    ) == \"4\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '2'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"3\""
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"3 3\") == \"2 2 1\"\nassert solution(\"4 1\") == \"1 1 2 2\"\nassert solution(\"5 2\") == \"2 1 1 2 2\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10'\nassert solution('''\n3\n4 3 5 6\n6 5 4 3\n5 2 2 5\n''') == '6 5 2 5 4 3'\nassert solution('''\n3\n2 1\n5 20\n6 20\n''') == '2 1 20 20 20'\nassert solution('''\n1\n20\n''') == '20'\nassert solution('''\n1\n20\n''') == '20'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50''') == \"1 49 20\""
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4 4 7''') == '7 7 7 7 7 7'''\nassert solution('''6\n3 4 2 1 5''') == '''2 2 5 5 1 1'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8') == '1 49 20 50 10'\nassert solution('4\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8') == '1 49 20 50 10'\nassert solution('7\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8') == '1 49 20 50 10'\nassert solution('4\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8') == '1 49 20 50 10'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10', 'Should be 1 49 20 40 30 50 10'\nassert solution('''\n5 6 4\n2 3 5\n3 4 5\n4 3 5\n4 5 3\n5 3 4\n''') == '5 6 4 2 3 5 3 4 5', 'Should be 5 6 4 2 3 5 3 4 5'\nassert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50 2 3 8 9 13 22 1 10 13 4 19 22 25 16 7', 'Should be 6 20 50 2 3 8 9 13 22 1 10 13 4 19 22 25 16 7'"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution('''5\n4 9\n5 4\n3 6\n1 2 3 4 5 6''') == \"1 2 3 4 5 6\\n4 9\\n5 4\\n3 6\\n1 2 3 4 5 6\""
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"20 40 30 50 10\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\nassert solution(\"9 13 22\") == \"1 10 13 4 19 22 25 16 7\""
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 20 40 30 50 10'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50''') == '1 49 20 40 30 50 10'\nassert solution('''5 20 50\n6 20 50\n7 25 10\n8 23 18 13 3''') == '8 23 18 13 3 27 22 20 36 32 38 41 34 33 50 18 28 35 7 13 14 16 17 20 23 32'\nassert solution('''6 20 50\n5 3 8\n9 13 22\n6 3 13''') == '6 3 13 13 23 23 13 13 13 13 23'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3 1 2\"\n) == \"1 2 3\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\nassert solution('1 5 3') == '3 1 5'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 4 3') == '5 4 3 2'\n\n'''\n\nn = int(input())\n\na = list(map(int, input().split()))\n\na = sorted(a, reverse=False)\n\nfor x in a:\n    print(x, end=\" \")\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\n\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '1 2 3'\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"1 2 3\", \"Wrong!\"\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 2 3\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 2') == '1 2'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"4 4 -2 -3 -1\") == \"-1 -2 -3 -4\"\nassert solution(\"5 5 2 2 2\") == \"2 2 2 2 2\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5') == 'NO'\nassert solution('5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5') == 'YES'\nassert solution('5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n5\\n6 6 6 6 6') == 'NO'"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'YES', solution('2')\nassert solution('2') == 'NO', solution('2')\nassert solution('3') == 'YES', solution('3')\nassert solution('3') == 'NO', solution('3')\nassert solution('4') == 'YES', solution('4')\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3\n4\n2 2 8 8\n3\n3 3 3''') == 'YES'\nassert solution('''4\n2 2 2 2\n3\n2 2 2''') == 'NO'\nassert solution('''1\n2\n3\n2''') == 'YES'"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\nYES\\nNO\\nNO\\nNO'\nassert solution('''\n2\n5\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\nYES\\nNO\\nNO\\nNO'\nassert solution('''\n1\n2\n3\n5\n''') == 'YES\\nYES\\nYES\\nYES\\n'''\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == \"YES\"\n\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\n''') == \"NO\""
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3\n4\n2 2 8 8''') == 'YES'\nassert solution('''3\n3 3 3\n4\n5 5 5 5''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n2 5\n5\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n2 7\n7\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n2 5\n5\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2\n3\n4\n2 2 8 8\n3\n3 3 3''') == 'YES'\nassert solution('''5\n2\n3\n4\n2 2 8 8\n3\n3 3 3''') == 'YES'\nassert solution('''5\n2\n3\n4\n5 5 5 5''') == 'NO'\nassert solution('''5\n2\n3\n4\n5 5 5 5''') == 'NO'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2 3 4 5'\nassert solution('2') == '1 2 3 4 5'\nassert solution('3') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4 5'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('2\\n1') == '1 1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2\n4\n6\n7\n''') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('''\n1\n3\n1\n2\n''') == '3 1 2'\nassert solution('''\n1\n3\n7\n4\n2\n''') == '7 4 2 3 1'\nassert solution('''\n1\n5\n5\n4\n2\n''') == '-1'"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"10\") == -1\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n2\n4\n6\n7\n13\n''') == \"9 6 10 8 4 7 3 1 5 2\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('''4\n1\n2\n3\n4''') == '5 1 3 6 2 4 7'\nassert solution('''4\n1\n2\n3\n4''') == '5 4 1 3 6 2 7'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8''') == '1 2 8 5 3 6 7 4'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8''') == '1 6 8 5 3 7 4 5 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n10\\n4\\n6\\n7\\n') == '9 6 10 8 4 7 3 1 5 2'\nprint(solution('6\\n10\\n4\\n6\\n7\\n'))\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '9 6 10 8 4 7 3 1 5 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('10') == '3 1 4 2'\nassert solution('2') == '-1'\nassert solution('4') == '5 3 6 2 4 1'\nassert solution('6') == '5 1 3 6 2 4 7 3'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\nassert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"-1\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '1'\nassert solution('4\\n4\\n3 2 7 6\\n1\\n7\\n') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(\"\") == '1'\nassert solution(\"1\") == '1'\nassert solution(\"4\") == '0'\nassert solution(\"4 2 7 6\") == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\") == \"2\"\nassert solution(\"4\\n4\\n3 2 6 7\\n3\") == \"1\"\nassert solution(\"4\\n4\\n1 2 3 4\\n3\") == \"0\""
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''\n5\n4 9 2 1 8 6 3 7\n''') == '1'\nassert solution('''\n3\n3 2 7 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''\n5\n6 2 8 2 8\n9\n9\n9\n9\n5\n9\n''') == '0'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\nassert solution('''\n4\n5 3 7 2\n6\n1\n7\n1\n6\n1\n''') == '1'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\") == \"2\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\") == \"1\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\") == \"0\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == stdout.strip()\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1 '\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 2 2 2'\nassert solution('4') == '0 -1 1 -1'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n\"\"\") == \"0 -1 1 -1\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n\"\"\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"\"\"\n3\n0 0 1\n1 2\n1 3\n\n\"\"\") == \"0 -1 1 -1\"\nprint(\"all test cases passed\")\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\") == \"0 -1 1 -1\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '2 2 2 2 1 1 0 2'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n6\n0 0 1 1 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 1 2 2 2 2 0 1 1 1 1 1 0 1 0 2 1 2 2 2 2 2 0 0 1 1 1 1 1 1 1 0 1 0 2 1 2 2 2 2 2 '\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 1 1 0 2\"\nassert solution(\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\"\"\") == \"0 -1 1 -1\"\nassert solution(\"\"\"\n5\n0 0 1 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 1 1 0 2\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == \"2 2 2 2 1 1 0 2\"\nassert solution('''\n8\n0 0 1 1 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\n''') == \"2 2 2 2 2 1 1 0 2\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n10\n34\n74\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '-1'\nassert solution('''11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '-1'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '0'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n\n------Source Code ------\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n12\n12345\n15116544\n''') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('12') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"12345\") == \"12\"\nassert solution(\"15116544\") == \"36\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('12') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n12\n12345\n15116544\n''') == '2'\nassert solution('''\n5\n13\n12345\n15116544\n387420489\n''') == '2'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '0'\nassert solution('''\n4\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\nassert solution('''\n3\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"-\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-\"\nassert solution(\"12\") == \"-\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"15116544\") == \"36\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3''') == '2'\nassert solution('''1\n2\n3''') == '-1'\nassert solution('''5\n3\n1''') == '2'\nassert solution('''2\n3\n1''') == '-1'\nassert solution('''10\n10\n1''') == '1'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"1\"\nassert solution('''\n3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"0\"\n'''\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"1\"\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == \"0\"\nassert solution('''\n5\n5\n1\n5\n1\n5\n''') == \"0\"\nassert solution('''\n4\n4\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n''') == \"3\"\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\nBGGGG\\n') == '0'\nassert solution('5 2\\nRBRGR\\n') == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4 2\\nBGGGG') == '0'\nassert solution('2\\n5 3\\nRBRGR') == '1'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"0\"\nassert solution(\"5 3\\nRBRGR\") == \"1\"\nassert solution(\"5 5\\nBBBRR\") == \"3\""
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"7 5\") == \"4\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 0\nassert solution(\"3\") == 3"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0'\nassert solution('5 2') == '1'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\"\n) == \"1\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"RG\") == \"1\"\nassert solution(\"RGBG\") == \"1\"\nassert solution(\"R\") == \"0\"\nassert solution(\"RB\") == \"0\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n10\n1 10 1 9 2 1 8 3 2\n''') == '3'\nassert solution('''\n10\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n10\n6\n4 3 3 1 2 1\n8\n2 4 1 2 4 5 2\n''') == '4'\nassert solution('''\n2\n5\n1 2 1 2 3\n5\n3 4 3 3 2 4\n''') == '4'\nassert solution('''\n3\n3\n1 1 1\n3\n1 3 2\n''') == '1'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n\n'''"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n6\n3 1 2 3 1 2\n4\n3 1 2 3 1\n''') == '3'\nassert solution('''\n10\n2 1 1 2 1 2 2 1 1\n6\n2 3 1 2 3 1\n''') == '4'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n5\n5 5 5 5 5\n5\n''') == '1'\nassert solution('''\n5\n5 5 5 5 5\n5\n''') == '1'\nassert solution('''\n5\n5 5 5 5 5\n5\n''') == '1'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('1\\n10\\n2 2 1 1 2 4 5 3 1\\n6\\n3 2 1 2 4 2 5 5 3\\n9\\n1 5 3 2 1 2 4 2 5\\n8\\n1 3 2 4 3 2 5 1 3\\n7\\n3 2 2 3 3 4 4 1 5\\n2\\n1 1\\n2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '3'"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\"\nassert solution(\"4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\"\nassert solution(\"6\\n7 4 1 3 2\\n6\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 6 2 4 3\"\nassert solution(\"2\\n3 4 1 2\\n2\\n2\\n4\\n4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"2\\n3 4 1 2\\n4\\n2\\n2\\n4\\n4 3 2 1\") == \"1 2 3 4\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3', 'First'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5', 'Second'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4', 'Third'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4 4', 'Forth'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 5 2 4 3'\nassert solution() == '1 2 3 4 5'\nassert solution() == '1'\nassert solution() == '1 4 3 2'\nassert solution() == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4\\n5 4 1 3 2') == '1 2 4 3 5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"1 2\"\nassert solution('1') == \"1\"\nassert solution('2') == \"1 2\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''\n3\n4 2 1\n5\n1 2 3 4\n''') == '1 2 3 4'\nassert solution('''\n3\n5 1 4 3 2\n5\n1 2 4 3 2\n1\n1\n5\n1 2 3 4\n''') == '1 2 3 4'\nassert solution('''\n1\n2\n5\n1 2 3 4\n''') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '2 1 3'\nassert solution('4') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1 3 2 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"4\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"1\\n3\\n2 1 3\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\""
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4\\n\"\n    \"1 2 3 4\\n\"\n    \"3\\n\"\n    \"1 3 2\\n\"\n    \"5\\n\"\n    \"1 2 3 5 4\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"5\\n\"\n    \"3 2 1 5 4\\n\"\n    \"\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == \"YES\"\nassert solution('5\\n5\\n1 2 3 4 5') == \"YES\"\nassert solution('5\\n5\\n1 3 2 4 5') == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'\nassert solution('''4\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4''') == 'NO'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('5') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 3 4\n3\n2 1 4 3\n5\n1 2 3 5 4\n''') == \"YES\\nYES\\nYES\\nYES\\nYES\"\n\nassert solution('''\n5\n3 2 1 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nYES\\nYES\\nYES\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n'''\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '18'"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\nassert solution('100000 50010') == '75015'\n\n\n\"\"\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 3\n3 2\n5 2\n5 5\n5 5\n''') == '6'\nassert solution('''\n5 3\n3 4\n3 4\n5 5\n3 4\n''') == '6'\nassert solution('''\n5 3\n3 3\n3 4\n3 4\n3 4\n''') == '6'\nassert solution('''\n5 2\n2 4\n2 4\n2 4\n''') == '5'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n18 4\n10 3\n6 2\n75015\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n'''\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"75015\"\nassert solution(\"5 2\") == \"5\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"75015\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5\\n18\\n10\\n6\\n75015\\n', solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010')\n\n\"\"\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\"\nassert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"18\"\nassert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"10\"\nassert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"75015\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5'\n\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '18'\n\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '10'\n\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '75015'\n\nprint(solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n'''))\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nprint(solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n'''))\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n') == 'NO'\nassert solution('10 3\\n') == 'YES'\nassert solution('100 4\\n') == 'YES'\nassert solution('8 7\\n') == 'YES'\nassert solution('97 2\\n') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n4 2 4\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n55 5 5 35\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\""
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"10 2\") == \"YES\"\nassert solution(\"100 4\") == \"YES\"\nassert solution(\"8 7\") == \"YES\"\nassert solution(\"97 2\") == \"YES\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 1\"\n) == \"YES\"\nassert solution(\n    \"10 3\"\n) == \"YES\"\nassert solution(\n    \"100 4\"\n) == \"YES\"\nassert solution(\n    \"8 7\"\n) == \"YES\"\nassert solution(\n    \"97 2\"\n) == \"YES\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2\n0''') == 'YES'\nassert solution('''2\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    3 3\n    3 4\n    3 5\n    5 1\n    ''') == 'YES'\nassert solution(\n    '''\n    2 2\n    2 2\n    ''') == 'YES'\nassert solution(\n    '''\n    5 5\n    5 5\n    5 5\n    5 5\n    ''') == 'NO'\nassert solution(\n    '''\n    6 1\n    3 1\n    3 1\n    6 1\n    3 1\n    ''') == 'YES'\nassert solution(\n    '''\n    100 100\n    1 1\n    1 1\n    ''') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('10\\n10 4') == 'YES\\n4 2 4\\nYES'\nassert solution('1000000000 9') == 'YES\\n1 1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n8\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '15000000000000000'\nassert solution('''\n5\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n6\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '1'\nprint('The test passed')"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n\"\"\") == \"55\"\nassert solution(\"\"\"\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n\"\"\") == \"51\"\n\nassert solution(\"\"\"\n2 1 3\n2 1 100\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55000000000000000'\nassert solution('''\n2 3 7\n2 8 12\n5 2 8\n''') == '9000000000000000'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n2 1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n3 1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n5 1 5\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n2 4 5\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '55'"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n2\n3 3\n1 2 3\n2 1 1\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n5\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n5\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n\"\"\") == \"5\"\nassert solution(r\"\"\"\n2\n1 1\n1 1\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n2\n1 2\n1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '55\\n4\\n3\\n1\\n'\nassert solution('1 10 100') == '51\\n5\\n3\\n1\\n'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51\\n5\\n3\\n1\\n'\nassert solution('23 34 45') == '51\\n5\\n3\\n1\\n'"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 10 100\") == \"55\"\nassert solution(\"10000000000000000 10000000000000000 10000000000000000\") == \"51\"\nassert solution(\"23 34 45\") == \"15000000000000000\""
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 10 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\nassert solution('23 34 45') == '15000000000000000'\nassert solution('5 4 2') == '7'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"5\\n4\\n3\\n\"\nassert solution('4') == \"8\\n7\\n5\\n\"\nassert solution('5') == \"7\\n6\\n5\\n\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"20 5\") == \"15\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\n\nassert solution('''\n1 1\na\n''') == '1'\n\nassert solution('''\n20 1\na\n''') == '20'"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3\\nabcbac') == '6'\nassert solution('6 3\\naaa') == '5'\nassert solution('6 3\\nababa') == '10'\nassert solution('20 10\\necbedececacbcbccbdec') == '15'\nassert solution('20 5\\nababa') == '10'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(input_data) == \"YES\"\nassert solution(input_data) == \"NO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n3\\n5\\n4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5'\nassert solution('2\\n1\\n3\\n5\\n4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'NO'\nassert solution('3\\n3\\n1\\n3\\n5\\n4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5'\nassert solution('3\\n7 2\\n5 1\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5'\nassert solution('3\\n7 2\\n5 1\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'NO'\nassert solution('3\\n7 2\\n5 1\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'NO'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\n\"\"\"\n\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\\n1 3 5\\nNO\\nNO\\nNO\"\nassert solution(\"\"\"\n2\n5 2\n2 2 2 2 2\n\"\"\") == \"YES\\n1 2\\nNO\\nNO\\nNO\"\nassert solution(\"\"\"\n1\n5 2\n2 2 2 2 2\n\"\"\") == \"YES\\n1 2\\nNO\\nNO\\nNO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n3 4\n5 8 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n3 5\n1 2 3 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n4 6\n1 2 3 4 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\nassert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nYES'\nassert solution('''\n1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\nassert solution('''\n2\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''\n1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 5\") == \"1 3 5\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5\"\nassert solution(\"7 6 3 4 2 1\") == \"7 6 3 4 2 1\""
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"YES\""
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"964176192\"\n\"\"\"\n\nimport math\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for i in range(32):\n            ans <<= 1\n            if n & 1 == 1:\n                ans |= 1\n            n >>= 1\n        return ans\n\n\ns = Solution()\nprint(s.reverseBits(int(input())))\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == '964176192'\nassert solution(\"111111111111111111111111111111101\") == '3221225471'\nassert solution(\"10111111111111111111111111111111\") == '3221225471'\n\n\"\"\"\n\nclass Solution:\n    def reverseBits(self, n):\n        return int(\"\".join(reversed(bin(n).split(\"0b\")[1:])), 2)"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''00000010100101000001111010011100'''\n) == '964176192'\nassert solution(\n'''111111111111111111111111111111101'''\n) == '3221225471'"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(str) == '964176192'\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example) == \"964176192\"\nassert solution(input) == \"3221225471\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n00000010100101000001111010011100\n''') == '964176192'\nassert solution('''\n111111111111111111111111111111111\n''') == '3221225471'\nassert solution('''\n1101111111111111111111111111111111111\n''') == '3221225471'"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1011101110111001010111101100100\") == \"964176192\"\nassert solution(\"1011101110111001010111101100100\") == \"964176192\"\nassert solution(\"11011101110111001010111101100100\") == \"964176192\"\nassert solution(\"11011101110111001010111101100100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"10111111111111111111111111111111\") == \"964176192\"\nassert solution(\"00111001011110000010100101000000\") == \"964176192\"\nassert solution(\"111011111111111111111111111111111\") == \"964176192\"\nassert solution(\"111011111111111111111111111111111\") == \"964176192\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\n\n'''\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        result = 0\n        for i in range(32):\n            result <<= 1\n            if n & 1:\n                result += 1\n            n >>= 1\n        return result\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '\\n'.join([str(item) for item in pascal_triangle(5)]), 'test'"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"[1, 1, 1, 1, 1]\\n\"\nassert solution(\"6\") == \"[1, 3, 3, 1, 1, 1]\\n\"\nassert solution(\"10\") == \"[1, 4, 6, 4, 1, 1, 2, 4, 6, 4]\\n\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == stdin\n\nInput: 7\nOutput:\n[\n     [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1],\n    [1,5,10,10,5,1],\n    [1,6,15,20,15,6,1]\n]\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(5) == \"[\\n\\t[1],\\n\\t[1,1],\\n\\t[1,2,1],\\n\\t[1,3,3,1],\\n\\t[1,4,6,4,1]\\n]\\n\"\nassert solution(3) == \"[\\n\\t[1],\\n\\t[1,1],\\n\\t[1,1,1]\\n]\\n\"\nassert solution(1) == \"[\\n\\t[1]\\n]\\n\"\nassert solution(2) == \"[\\n\\t[1],\\n\\t[1,1]\\n]\\n\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1]) == ['1']\nassert solution([1,1]) == ['1','1']\nassert solution([1,2,1]) == ['1','1','1','1']\nassert solution([1,3,3,1]) == ['1','1','3','3','1']\nassert solution([1,4,6,4,1]) == ['1','1','4','6','4','1']\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == '\\n'.join([str(x) for x in pascal(5)]), 'error on input 5'\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ['1']\nassert solution('2') == ['1','1','1']\nassert solution('3') == ['1','1','1','1']\nassert solution('5') == ['1','1','1','1','1']\nassert solution('10') == ['1','1','1','1','1','1','1','1','1','1']\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"[1,1,1,1,1]\""
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == []\nassert solution('2\\n') == ['2@2.com']\nassert solution('3\\n') == ['3@3.com', '3@3.com']\nassert solution('4\\n') == ['4@4.com', '4@4.com', '4@4.com']\nassert solution('5\\n') == ['5@5.com', '5@5.com', '5@5.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['''a@gmail.com''', 'b@gmail.com', 'c@gmail.com', 'd@yahoo.com']) == ['b@gmail.com', 'c@gmail.com', 'd@yahoo.com']\nassert solution(['''a@gmail.com''', 'b@gmail.com', 'c@gmail.com', 'd@yahoo.com', 'e@yahoo.com']) == ['b@gmail.com', 'c@gmail.com', 'd@yahoo.com']\nassert solution(['''a@gmail.com''', 'b@gmail.com', 'c@gmail.com', 'd@yahoo.com', 'e@yahoo.com', 'f@yahoo.com']) == ['d@yahoo.com', 'e@yahoo.com', 'f@yahoo.com']\nassert solution(['''a@gmail.com''', 'b@gmail.com', 'c@gmail.com', 'd@yahoo.com', 'e@yahoo.com', 'f@yahoo.com', 'g@yahoo.com']) == ['d@yahoo.com', 'e@yahoo.com', 'f@yahoo.com', 'g@yahoo.com']\nassert solution(['''a@gmail.com''', 'b@gmail.com', 'c@gmail.com', 'd@yahoo.com', 'e@yahoo.com', 'f@yahoo.com', 'g@yahoo.com', 'h@yahoo.com']) == ['h@yahoo.com', 'd@yahoo.com', 'e@yahoo.com', 'f@yahoo.com', 'g@yahoo.com', 'h@yahoo.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1@gmail.com\\n2@gmail.com\\n3@gmail.com\") == [\"1@gmail.com\",\"2@gmail.com\",\"3@gmail.com\"], \"Wrong\"\n\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nuser@user.com\\nuser2@user.com\\nuser3@user.com\\nuser4@user.com\\n\") == \"user@user.com, user2@user.com, user3@user.com, user4@user.com\"\n\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1@2.3.4.5'\nassert solution('1') == '1@2.3.4.5'\nassert solution('4') == '1@2.3.4.5'\nassert solution('3') == '1@2.3.4.5'\nassert solution('2') == '1@2.3.4.5'\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\n    \"simpleemail@email.com\",\n    \"simpleemail+dots@email.com\",\n    \"simpleemail@mail.with_dots@email.com\"\n    ]) == [\"simpleemail@email.com\", \"simpleemail+dots@email.com\"]\n\nassert solution([\n    \"first.last@email.com\",\n    \"first.last+dots@email.com\",\n    \"first.last@email+dots.com\",\n    \"first.last@email-dots@email.com\",\n    \"first.last+dots@email.us\"\n    ]) == [\"first.last@email.com\", \"first.last+dots@email.com\", \"first.last@email-dots@email.com\", \"first.last+dots@email.us\"]\n\n=====Sample Input & Output\n\nExpected Output:\n\n>>> solution([\n...     \"first.last@email.com\",\n...     \"first.last+dots@email.com\",\n...     \"first.last@email+dots.com\",\n...     \"first.last@email-dots@email.com\",\n...     \"first.last+dots@email.us\"\n... ])\n['first.last@email.com', 'first.last+dots@email.com', 'first.last@email-dots@email.com', 'first.last+dots@email.us']\n\"\"\"\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '[]'\nassert solution('1') == '1'\nassert solution('1\\n2') == '1, 2'\nassert solution('1\\n2\\n') == '1, 2'\nassert solution('1\\n2\\n3') == '1, 2, 3'\n'''"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\njoe@lee.com\\njohn@lee.com') == ['joe@lee.com', 'john@lee.com']\nassert solution('2\\njoe@lee.com\\njohn@lee.com\\nfoo@bar.com') == ['joe@lee.com', 'john@lee.com', 'foo@bar.com']\nassert solution('2\\njoe@lee.com\\njohn@lee.com\\nfoo@bar.com\\njoe@lee.com') == ['joe@lee.com', 'john@lee.com', 'foo@bar.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n\"mynameisshakur@gmail.com\",\n\"my.name.is.shakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"myname.is.shakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\",\n\"my.name.is.sakur@gmail.com\"\n]) == [\"my.name.is.shakur@gmail.com\", \"my.name.is.sakur@gmail.com\"]\nassert solution([\n\"name@domain.com\",\n\"name1@domain.com\",\n\"name2@domain.com\",\n\"name3@domain.com\",\n\"name4@domain.com\",\n\"name5@domain.com\",\n\"name6@domain.com\",\n\"name7@domain.com\",\n\"name8@domain.com\",\n\"name9@domain.com\",\n\"name10@domain.com\",\n\"name11@domain.com\",\n\"name12@domain.com\",\n\"name13@domain.com\",\n\"name14@domain.com\",\n\"name15@domain.com\",\n\"name16@domain.com\",\n\"name17@domain.com\",\n\"name18@domain.com\",\n\"name19@domain.com\",\n\"name20@domain.com\",\n\"name21@domain.com\",\n\"name22@domain.com\",\n\"name23@domain.com\",\n\"name24@domain.com\",\n\"name25@domain.com\",\n\"name26@domain.com\",\n\"name27@domain.com\",\n\"name28@domain.com\",\n\"name29@domain.com\",\n\"name30@domain.com\",\n\"name31@domain.com\",\n\"name32@domain.com\",\n\"name33@domain.com\",\n\"name34@domain.com\",\n\"name35@domain.com\",\n\"name36@domain.com\",\n\"name37@domain.com\",\n\"name38@domain.com\",\n\"name39@domain.com\",\n\"name40@domain.com\",\n\"name41@domain.com\",\n\"name42@domain.com\",\n\"name43@domain.com\",\n\"name44@domain.com\",\n\"name45@domain.com\",\n\"name46@domain.com\",\n\"name47@domain.com\",\n\"name48@domain.com\",\n\"name49@domain.com\",\n\"name50@domain.com\",\n\"name51@domain.com\",\n\"name52@domain.com\",\n\"name53@domain.com\",\n\"name54@domain.com\",\n\"name55@domain.com\",\n\"name56@domain.com\",\n\"name57@domain.com\",\n\"name58@domain.com\",\n\"name59@domain.com\",\n\"name60@domain.com\",\n\"name61@domain.com\",\n\"name62@domain.com\",\n\"name63@domain.com\",\n\"name64@domain.com\",\n\"name65@domain.com\",\n\"name66@domain.com\",\n\"name67@domain.com\",\n\"name68@domain.com\",\n\"name69@domain.com\",\n\"name70@domain.com\",\n\"name71@domain.com\",\n\"name72@domain.com\",\n\"name73@domain.com\",\n\"name74@domain.com\",\n\"name75@domain.com\",\n\"name76@domain.com\",\n\"name77@domain.com\",\n\"name78@domain.com\",\n\"name79@domain.com\",\n\"name80@domain.com\"]) == [\"name1@domain.com\", \"name2@domain.com\", \"name3@domain.com\", \"name4@domain.com\", \"name5@domain.com\", \"name6@domain.com\", \"name7@domain.com\", \"name8@domain.com\", \"name9@domain.com\", \"name10@domain.com\", \"name11@domain.com\", \"name12@domain.com\", \"name13@domain.com\", \"name14@domain.com\", \"name15@domain.com\", \"name16@domain.com\", \"name17@domain.com\", \"name18@domain.com\", \"name19@domain.com\", \"name20@domain.com\", \"name21@domain.com\", \"name22@domain.com\", \"name23@domain.com\", \"name24@domain.com\", \"name25@domain.com\", \"name26@domain.com\", \"name27@domain.com\", \"name28@domain.com\", \"name29@domain.com\", \"name30@domain.com\", \"name31@domain.com\", \"name32@domain.com\", \"name33@domain.com\", \"name34@domain.com\", \"name35@domain.com\", \"name36@domain.com\", \"name37@domain.com\", \"name38@domain.com\", \"name39@domain.com\", \"name40@domain.com\", \"name41@domain.com\", \"name42@domain.com\", \"name43@domain.com\", \"name44@domain.com\", \"name45@domain.com\", \"name46@domain.com\", \"name47@domain.com\", \"name48@domain.com\", \"name49@domain.com\", \"name50@domain.com\", \"name51@domain.com\", \"name52@domain.com\", \"name53@domain.com\", \"name54@domain.com\", \"name55@domain.com\", \"name56@domain.com\", \"name57@domain.com\", \"name58@domain.com\", \"name59@domain.com\", \"name60@domain.com\", \"name61@domain.com\", \"name62@domain.com\", \"name63@domain.com\", \"name64@domain.com\", \"name65@domain.com\", \"name66@domain.com\", \"name67@domain.com\", \"name68@domain.com\", \"name69@domain.com\", \"name70@domain.com\", \"name71@domain.com\", \"name72@domain.com\", \"name73@domain.com\", \"name74@domain.com\", \"name75@domain.com\", \"name76@domain.com\", \"name77@domain.com\", \"name78@domain.com\", \"name79@domain.com\", \"name80@domain.com\"]\n\n=====Input Example=====\n\n6\nname@domain.com\nname1@domain.com\nname2@domain.com\nname3@domain.com\nname4@domain.com\nname5@domain.com\n\n>>> \n=====Output Example=====\n\n['name@domain.com', 'name1@domain.com', 'name2@domain.com', 'name3@domain.com',"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == ['yunxuan@example.com', 'yunxuan2@example.com', 'yunxuan3@example.com', 'yunxuan4@example.com', 'yunxuan5@example.com']"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\nprint(solution('5'))\n\n=====Sample Test Cases=====\nInput\nOutput"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == ['0','1','1','8','27']\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == [1, 8, 27], \"Error\"\n\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ['0','1','1','2','3','5','8','13','21','34','55','89','144','233','377','610','987','1597','2584','4181','6765']\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0 1 1 8'\nassert solution('0') == '0'\nassert solution('2') == '1'"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5''') == '''[0, 1, 1, 8, 27]'''\nassert solution('''4''') == '''[0, 1, 4, 9]'''\n'''\nInput Format\n\nThe first line contains an integer, N (the number of fibonacci numbers to be generated).\n\nOutput Format\n\nA single line of N space-separated integers denoting the cubes of the first N fibonacci numbers.\n\nSample Input\n\n6\n\nSample Output\n\n0 1 1 8 27\n\n=====Sample Solution=====\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == ['0','1','1','2','3']\n\n\n'''\n\nfrom functools import reduce"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '0 1 1 8 27 36 496'"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '3'\nassert solution('3') == '27'\nassert solution('4') == '56'\nassert solution('5') == '125'\nassert solution('10') == '225'\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>''') == \"2\"\n\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>''') == \"3\"\n\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>''') == \"2\"\n\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>''') == \"3\"\n\n=====Constraints=====\n1 <= N <= 100\n1 <= |A| <= 20\n\n=====Test Cases=====\nInput:\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>\n\nOutput:\n2\n\nInput:\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>\n\nOutput:\n2\n\nInput:\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_syntax.asp'/>\n<updated>2009-12-25T09:13:08-05:00</updated>\n</feed>\n\nOutput:\n3\n'''\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n<title>Some XML</title>\n<subtitle>Second item of the RSS feed.</subtitle>\n<link rel=\"alternate\" href=\"http://example.com/rss\"/>\n<updated>2013-12-25T12:20:13Z</updated>\n</feed>''') == 3\n\nprint(f\"The maximum level of nesting in the XML document is {solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n<title>Some XML</title>\n<subtitle>Second item of the RSS feed.</subtitle>\n<link rel=\"alternate\" href=\"http://example.com/rss\"/>\n<updated>2013-12-25T12:20:13Z</updated>\n</feed>''')}\")\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>''') == 3\n\nSample Input 0\n6\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n'''\n    ,\n    '''3\n    1\n    2\n    3''')\n\nSample Output 0\n5\n\nSample Input 1\n7\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n'''\n    ,\n    '''4\n    1\n    2\n    3\n    ''')\n\nSample Output 1\n5\n\nSample Input 2\n3\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n'''\n    ,\n    '''5\n    1\n    2\n    3\n    4\n    5\n    ''')\n\nSample Output 2\n4\n\nSample Input 3\n7\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml'/>\n<updated>2013-04-20</updated>\n</feed>\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('<xml><element><subelement><subsubelement></subsubelement></subelement></element></xml>') == 2\nassert solution('<xml><element><subelement><subsubelement></subsubelement></subelement></element></xml>') == 1\nassert solution('<xml><element><subelement><subsubelement></subsubelement></subelement></element></xml>') == 0\n'''"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n    <title>Some XML document</title>\n    <subtitle>This is another XML document</subtitle>\n    <link rel=\"alternate\" type=\"application/rss+xml\" href=\"rss.xml\"/>\n    <link rel=\"alternate\" type=\"application/atom+xml\" href=\"atom.xml\"/>\n</feed>\n\"\"\") == 2\n\n'''\nsolution(\"\"\"\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n    <title>Some XML document</title>\n    <subtitle>This is another XML document</subtitle>\n    <link rel=\"alternate\" type=\"application/rss+xml\" href=\"rss.xml\"/>\n    <link rel=\"alternate\" type=\"application/atom+xml\" href=\"atom.xml\"/>\n</feed>\n\"\"\")\n'''"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"<feed xml:space='preserve'>\\n<title>Some XML document</title>\\n<subtitle>Some subtitle</subtitle>\\n<link rel='alternate' href='https://example.com/rss'/>\\n<link rel='alternate' href='https://example.com/atom'/>\\n</feed>\") == \"2\"\nassert solution(\"<feed xml:space='preserve'>\\n<title>Some XML document</title>\\n<link rel='alternate' href='https://example.com/atom'/>\\n</feed>\") == \"1\"\nassert solution(\"<feed xml:space='preserve'>\\n<title>Some XML document</title>\\n<link rel='alternate' href='https://example.com/atom'/>\\n</feed>\") == \"0\"\nassert solution(\"<feed xml:space='preserve'>\\n<title>Some XML document</title>\\n<link rel='alternate' href='https://example.com/atom'/>\\n<title>Some other XML document</title>\\n</feed>\") == \"3\""
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n\\t<title>HackerRank</title>\\n\\t<subtitle lang=\"en\">Programming challenges</subtitle>\\n\\t<link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n\\t<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''<feed xml:lang='en'>\n        <title>XML Developer News</title>\n        <subtitle lang='en'>Updated again</subtitle>\n        <link rel='alternate' type='text/html' href='http://www.geeksforgeeks.org/feed/'/>\n        <updated>2009-05-13T10:12:00</updated>\n    </feed>''') == 2"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"1\"\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"0\"\n''')"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some XML document</subtitle>\n  <link rel=\"alternate\" hreflang=\"en\" href=\"http://example.com/\"/>\n  <updated>2013-09-25T13:00:00Z</updated>\n</feed>''') == 3\n\n'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266''') == '''YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES'''\nassert solution('''2\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266\n+91 8131236789\n+91 8131658266''') == '''NO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO\nNO'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n9110\") == \"YES\\nYES\\nYES\"\nassert solution(\"11\\n091012345678\") == \"YES\\nNO\\nYES\"\nassert solution(\"121\\n09110123456789\") == \"YES\\nNO\\nNO\"\nassert solution(\"121\\n0911012345678910\") == \"YES\\nNO\\nNO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n078954621\\n919650550\\n98914855') == \"YES\\nNO\\nNO\\nYES\\n\"\n\nNote: The mobile numbers may have +, -, or. symbols.\n\n=====Sample Input=====\n3\n078954621\n919650550\n98914855\n080016700\n\n=====Output=====\nYES\nNO\nNO\n'''"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    324332\n    94545\n    \"\"\") == \"NO\"\nassert solution(\"\"\"\n    72345\n    9345\n    \"\"\") == \"YES\"\n\"\"\")\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 8 9 8 8 0 0 8 8\") == \"YES\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nNO\"\n=====Test Cases=====\nInput\n1\n7 8 9 8 8 0 0 8 8\n\nOutput\nYES\n\nInput\n2\n7 8 9 8 8 0 0 8 8\n2\n\nOutput\nNO\nNO\n\"\"\"\nimport re\nfor _ in range(int(input())):\n    text = input()\n    x = re.findall(r'^[789]\\d{9}', text)\n    if len(x) > 0:\n        print(\"YES\\n\" + '\\n'.join(x))\n    else:\n        print(\"NO\\n\" + '\\n'.join(x))\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"15\n7152522597\n87925474595\n97925474595\n78725474595\n78725474595\n\"\"\") == \"YES\\nYES\\nNO\\nNO\\nYES\\nYES\\n\"\nassert solution(\"\"\"8\n874996980\n874996980\n874996980\n874996980\n874996980\n\"\"\") == \"NO\\nNO\\nYES\\nYES\\nNO\\nYES\\n\"\nassert solution(\"\"\"7\n797598765\n7-955-987-65\n79-7-95-987-65\n7975-987-65\n7-955-987-65\n7975-987-65\n\"\"\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\n\"\nassert solution(\"\"\"8\n7925474595\n7-955-4745-95\n7-955-4745-95\n7925474595\n7925474595\n7-955-4745-95\n7925474595\n7-955-4745-95\n7925474595\n\"\"\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nYES\\n\"\nassert solution(\"\"\"7\n854152845\n85-4-15-28-45\n85-4-15-28-45\n854152845\n854152845\n85-4-15-28-45\n854152845\n85-4-15-28-45\n85-4-15-28-45\n\"\"\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nYES\\n\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"YES\"\nassert solution(\"7\\n2468\") == \"YES\"\nassert solution(\"7\\n2468\") == \"NO\"\nassert solution(\"8\\n2468\") == \"NO\"\nassert solution(\"8\\n7777\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\\n\".join([\"345678\", \"12345\", \"011223\"])\n) == \"YES\\nNO\\nNO\"\nassert solution(\n    \"\\n\".join([\"53434\", \"01123\", \"56789\", \"12345\"])\n) == \"NO\\nNO\\nNO\\nYES\"\nassert solution(\n    \"\\n\".join([\"745436\", \"011223\"])\n) == \"NO\\nYES\"\nassert solution(\n    \"\\n\".join([\"945345\", \"011223\"])\n) == \"YES\\nNO\\nYES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 8 12 29 51 2 18 6 5 3 0\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2 4 5\\n3 5 7\\n\") == \"5\\n7\\n\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5 4 3 2\n9 10 7 8\n''') == '7 8 9 10'.strip()\n\n'''\n\nPROGRAMMING PROBLEM\n==================\nWrite a function that takes two strings as input and prints their symmetric difference in ascending order. The term symmetric difference indicates those values that exist in either A or B but do not exist in both.\n\n=====Example Input=====\nThe first line of input contains an integer, n, denoting the number of strings.\nThe second line contains n space-separated strings, denoting the strings.\nThe third line contains an integer, k, denoting the number of words in a string.\nThe fourth line contains k space-separated strings, denoting the k words in a string.\n\n=====Example Output=====\nThe symmetric difference string.\n\n=====Pseudocode=====\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 4 5\n5 9 11''') == \"9 11 2 4\"\nassert solution('''5\n2 4 5 9 11''') == \"11 2 4 9 5\"\nassert solution('''7\n3 5 7 9 11 21\n5 9 8''') == \"21 9 8 11 7 5 3\"\nassert solution('''3\n9 5 2\n2 5 3\n5 3 2''') == \"2 5 9 3\"\nassert solution('''1\n1 2 3 4 5 6\n3 5 6 4 1 2''') == \"2 1 5 6 4 3\"\n'''\n\"\"\""
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3\\n3 5 6\\n3 4') == '1 2\\n3 4'"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2\") == \"3 2\"\n\"\"\""
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2,4,5,9]) == ['9', '2', '4', '5']\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 4 5 9\n4\n2 4 11 12''') == \"9 8 7 6 5 4 3 2\"\nassert solution('''5\n2 4 5 9\n4\n2 4 11 12''') == \"9 8 7 6 5 4 3 2\"\n'''\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5 6\") == \"5 6\"\nassert solution(\"7 1 2\") == \"1 2 3 4 5 6 7\"\nprint(solution(\"2 5 6 4 7\"))\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 5, 6, 7, 9, 11, 13]) == \"9 13 7 11 5 6\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 5, 2, 1, 4, 7]) == \"2 4 7 5 3\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == \"8 9 10 1 4 7 5 6 3 2\"\n\n\n'''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 2 3\\n3 5 6\\n7 8 9\\n9 10 11\") == '5.00'\nassert solution(\"2\\n2 5 10\\n1 2 3\\n3 1 4\") == '3.67'\nassert solution(\"2\\n7 3 5\\n1 2 3\\n3 1 4\") == '2.67'\n\n=====Input 1=====\n1\n1 2 3\n3 5 6\n7 8 9\n9 10 11\n=====Output 1=====\n5.0\n=====Input 2=====\n2\n2 5 10\n1 2 3\n3 1 4\n=====Output 2=====\n3.67\n=====Input 3=====\n2\n7 3 5\n1 2 3\n3 1 4\n=====Output 3=====\n2.67\n=====Input 4=====\n2\n7 3 5\n1 2 3\n3 1 4\n=====Output 4=====\n2.67\n=====Input 5=====\n1\n1 2 3\n3 5 6\n7 8 9\n9 10 11\n=====Output 5=====\n5.0\n\"\"\""
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nID,MARKS,CLASS,NAME\\n1,67,2A,John\\n2,66,2B,Bob\\n3,55,2C,Steve\\n') == '67.00'\nassert solution('2\\nID,MARKS,CLASS,NAME\\n1,67,2A,John\\n2,66,2B,Bob\\n3,55,2C,Steve\\n') == '67.00'\nassert solution('3\\nID,MARKS,CLASS,NAME\\n1,67,2A,John\\n2,66,2B,Bob\\n3,55,2C,Steve\\n') == '66.66'\nassert solution('4\\nID,MARKS,CLASS,NAME\\n1,67,2A,John\\n2,66,2B,Bob\\n3,55,2C,Steve\\n') == '55.55'\nassert solution('5\\nID,MARKS,CLASS,NAME\\n1,67,2A,John\\n2,66,2B,Bob\\n3,55,2C,Steve\\n') == '66.66'\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5''') == \"82.00\"\n'''"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([0, 1, 2, 3, 4]) == \"2.00\"\nassert solution([0, 0, 0, 0, 0]) == \"0.00\"\nassert solution([9, 2, 1, 2, 9, 8, 7, 6, 5, 5, 6, 5, 5, 4, 3, 2, 1]) == \"4.89\"\n=====Test cases=====\nInput\nOutput\n\n======1st testcase=====\nInput\n\n6\nid        marks      class    name\n1        2          Y        Pranav\n2        4          Y        Ramesh\n3        1          Y        Kalyan\n4        3          Y        Neha\n5        3          Y        Aaryan\n6        4          N        Aaryan\nOutput\n\n4.00\n\n=====2nd testcase=====\nInput\n\n7\nid        marks      class    name\n1        2          Y        Pranav\n2        4          Y        Ramesh\n3        1          Y        Kalyan\n4        3          Y        Neha\n5        3          Y        Aaryan\n6        4          Y        Aaryan\n7        2          N        Aaryan\nOutput\n\n6.00\n\n\"\"\""
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.24\"\n\n=====Sample Input=====\n5\nID        MARKS      NAME      CLASS\n1        97         Raymond    7\n2        50         Steven     4\n3        91         Adrian     9\n4        72         Stewart    5\n5        80         Peter      6\n\n=====Expected Output=====\n2.66\n\nCode 01\n\n=====Input=====\n6\nID    MARKS    NAME    CLASS\n1    97        Raymond     7\n2    50        Steven     4\n3    91        Adrian     9\n4    72        Stewart    5\n5    80        Peter      6\n6    97        Yvonne     7\n7    81        Kate      7\n8    72        Kathleen   7\n9    62        Kira       7\n10    80        Sam       7\n\n=====Output=====\n2.88\n\nCode 02\n\n=====Input=====\n10\nID    MARKS    NAME    CLASS\n1    97        Raymond     7\n2    50        Steven     4\n3    91        Adrian     9\n4    72        Stewart    5\n5    80        Peter      6\n6    97        Yvonne     7\n7    81        Kate      7\n8    72        Kathleen   7\n9    62        Kira       7\n10    80        Sam       7\n11    97        Jan       7\n12    51        Peter      7\n13    97        Lily      7\n14    80        David     7\n15    91        Hedy      7\n16    91        Zoya      7\n17    96        Farhan    7\n18    77        Kshitij   7\n19    86        Akshat    7\n\n=====Output=====\n3.14\n\n=====Explanation=====\n\n
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2.1\\n1 2.2\\n2 2.1') == '2.08', \"Wrong Answer\"\n\nTest.assert_equals(solution('3\\n1 2.1\\n2 3.1\\n2 4.1'), '2.25', \"Wrong Answer\")\nTest.assert_equals(solution('4\\n1 2.1\\n2 3.1\\n4 4.1'), '2.55', \"Wrong Answer\")\nTest.assert_equals(solution('8\\n1 2.1\\n2 3.1\\n2 4.1\\n3 5.1\\n4 6.1\\n5 7.1\\n6 8.1'), '2.65', \"Wrong Answer\")\n\n=====Explanation=====\nTest Case 1\n\nInitially average = 1.5\n\nAfter replace the ID 1 2.1 in the list with 2 3.1\naverage = (1.5 + 2 + 3 + 1.5) / 4 = 2.25\n\nTest Case 2\n\nInitially average = 2.5\n\nAfter replace the ID 2 3.1 in the list with 2 4.1\naverage = (2.5 + 2 + 3 + 2.5) / 4 = 2.55\n\nTest Case 3\n\nInitially average = 2.55\n\nAfter replace the ID 2 4.1 in the list with 3 5.1\naverage = (2.55 + 2 + 3 + 2.55) / 4 = 2.65\n\nTest Case 4\n\nInitially average = 2.65\n\nAfter replace the ID 2 4.1 in the list with 3 5.1\naverage = (2.65 + 2 + 3 + 2.65) / 4 = 2.75\n\nTest Case 5\n\nInitially average = 2.75\n\nAfter replace the ID 2 4.1 in the list with 3 5.1\naverage = (2.75 + 2 + 3 + 2.75) / 4 = 2.9\n\nTest Case 6\n\nInitially average = 2.9\n\nAfter replace the ID 2 4.1 in the list with 3 5.1\naverage = (2.9 + 2 + 3 + 2.9) / 4 = 3.05\n\nExpected Output\n\n2.55\n\nConstraints\n0<N\u2264100\n\n=====Solution=====\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"2.00\"\nassert solution(\"5\\n1 2 3 4 5\\n6 7 8 9 10\") == \"8.00\"\n\nNote: Use 'file' to test your code.\n\n=====Sample Input & Output=====\nInput Format\n5\nID  MARKS  CLASS  NAME\n1   97   12  Raymond    \n2   81   74   Steven     \n3   91   90  Adrian      \n4   91   98   Stewart    \n5   80   88  Peter      \nOutput Format\n81.00\nExplanation\nRaymond: average = 97 + 81 + 81 + 81 + 80 = 201 = (97+81+81+81+80)/5\nSteven: average = (81 + 74 + 74 + 74 + 74) / 5 = 81.00\nAdrian: average = (91 + 90 + 90 + 90 + 98) / 5 = 90.00\nStewart: average = (91 + 98 + 98 + 98 + 88) / 5 = 98.00\nPeter: average = (80 + 88 + 88 + 88 + 88) / 5 = 88.00\n'''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nID,MARKS,CLASS,NAME\\n1,67,2,John\\n2,56,3,Smith\\n3,56,4,John\\n4,34,5,Smith\\n5,67,6,John\\n') == \"67.00\"\nassert solution('7\\nID,MARKS,CLASS,NAME\\n1,67,2,John\\n2,56,3,Smith\\n3,56,4,John\\n4,34,5,Smith\\n5,67,6,John\\n6,78,7,John\\n7,56,8,Smith\\n8,56,9,John\\n') == \"69.20\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nID        MARKS      NAME      CLASS\n1        91         Parker    7\n2        92         Steven    4\n3        93         Steven   10\n4        94         Peter     7\n5        65         Yamada    8''') == \"91.67\"\nassert solution('''\n5\nID        MARKS      NAME      CLASS\n1        91         Parker    7\n2        92         Steven    4\n3        93         Steven   10\n4        94         Peter     7\n5        65         Yamada    8''') == \"91.67\"\nassert solution('''\n5\nID        MARKS      NAME      CLASS\n1        91         Parker    7\n2        92         Steven    4\n3        93         Steven   10\n4        94         Peter     7\n5        65         Yamada    8''') == \"91.67\"\nassert solution('''\n5\nID        MARKS      NAME      CLASS\n1        91         Parker    7\n2        92         Steven    4\n3        93         Steven   10\n4        94         Peter     7\n5        65         Yamada    8''') == \"91.67\"\n\n'''\n\n'''\nAlternative Solution\n'''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nA 25 80 C\\nB 50 60 D\\n\") == \"66.67\"\n=====Test Case 1=====\nTest Case 1\nInput:\n3\nA 25 80 C\nB 50 60 D\nOutput:\n66.67\n\nTest Case 2\nInput:\n2\nA 50 60\nB 25 80\nOutput:\n33.33\n\nTest Case 3\nInput:\n3\nA 25 80 C\nB 50 60 D\nOutput:\n66.67\n\nTest Case 4\nInput:\n4\nA 25 80 C\nB 50 60 D\nE 70 95 E\nOutput:\n66.67\n\nTest Case 5\nInput:\n5\nA 25 80 C\nB 50 60 D\nE 70 95 E\nF 100 100 F\nOutput:\n66.67\n\nTest Case 6\nInput:\n5\nA 25 80 C\nB 50 60 D\nE 70 95 E\nF 100 100 F\nOutput:\n66.67\n\nTest Case 7\nInput:\n5\nA 25 80 C\nB 50 60 D\nE 70 95 E\nF 100 100 F\nOutput:\n66.67\n\nTest Case 8\nInput:\n5\nA 25 80 C\nB 50 60 D\nE 70 95 E\nF 100 100 F\nOutput:\n66.67\n=====Explanation=====\nTest Case 1\nThe students are 25, 80, C and 50.\nThe average is (25+80+C)/3 = 66.6666666666666\nTest Case 2\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 33.33333333333335\nTest Case 3\nThe students are 25, 80, C and 50.\nThe average is (25+80+C)/3 = 66.6666666666666\nTest Case 4\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\nTest Case 5\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\nTest Case 6\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\nTest Case 7\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\nTest Case 8\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n\nNote: The first line in the input contains a single integer N.\nThe next N lines each contain an integer that represents a student\u2019s ID, name and class.\n\n= SOURCE =\n= TEST CASE 1 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 1\nThe students are 25, 80, C and 50.\nThe average is (25+80+C)/3 = 66.6666666666666\n=====Test Case 2 =\n\n=====Expected Output=====\n33.333\n\n=====Explanation=====\nTest Case 2\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 33.33333333333335\n=====Test Case 3 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 3\nThe students are 25, 80, C and 50.\nThe average is (25+80+C)/3 = 66.6666666666666\n=====Test Case 4 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 4\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n=====Test Case 5 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 5\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n=====Test Case 6 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 6\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n=====Test Case 7 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 7\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n=====Test Case 8 =\n\n=====Expected Output=====\n66.67\n\n=====Explanation=====\nTest Case 8\nThe students are 50, 60, D and B.\nThe average is (50+60+D)/3 = 66.6666666666666\n\"\"\""
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Weird'\nassert solution('5') == 'Not Weird'\nassert solution('6') == 'Not Weird'\nassert solution('1') == 'Weird'\nassert solution('2') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(17) == 'Weird'\nassert solution(6) == 'Not Weird'\nassert solution(20) == 'Weird'\nassert solution(15) == 'Weird'\nassert solution(1) == 'Not Weird'\n'''\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('17') == 'Weird'\nassert solution('24') == 'Not Weird'\nassert solution('123') == 'Not Weird'\nassert solution('100') == 'Not Weird'\nassert solution('6') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"3\") == \"Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"5\") == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(10) == 'Not Weird'\nassert solution(5) == 'Weird'\nassert solution(20) == 'Weird'\nassert solution(30) == 'Not Weird'\nassert solution(15) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"Not Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"1\") == \"Not Weird\""
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"5\") == \"Not Weird\"\nassert solution(\"20\") == \"Weird\"\nassert solution(\"30\") == \"Not Weird\"\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Not Weird'\nassert solution('11') == 'Not Weird'\nassert solution('121') == 'Not Weird'\nassert solution('14') == 'Weird'\nassert solution('0') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(123) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(5) == \"Weird\"\nassert solution(6) == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(10) == 'Not Weird'\nassert solution(1) == 'Weird'\nassert solution(2) == 'Weird'\nassert solution(3) == 'Not Weird'\nassert solution(4) == 'Not Weird'\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"<feed><title>How to Program</title><link>https://example.com/</link><id>1015934028</id></feed>\") == \"2\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' href='http://www.xml.com/'/>\n<link rel='alternate' href='http://www.xml.com/ns/'/>\n</feed>''') == \"3\"\n\n===Output Example===\n\n==Submission 1==\n\nTime Limit Exceeded\n\nCorrect Answer\n\n==Submission 2==\n\nTime Limit Exceeded\n\nCorrect Answer\n\n==Submission 3==\n\n0\n\nCorrect Answer\n\n==Submission 4==\n\n0\n\nCorrect Answer\n\n=====Submission 5==\n\n0\n\nCorrect Answer\n\n\"\"\"\n\n)"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"<head><title>title</title></head>\") == \"2\", \"XML document\"\nassert solution(\"<head><title>title</title></head>\") == \"1\", \"XML document\"\nassert solution(\"<head><title>title</title></head>\") == \"0\", \"XML document\"\nassert solution(\"<head><title>title</title></head>\") == \"0\", \"XML document\"\nassert solution(\"<head><title>title</title></head>\") == \"0\", \"XML document\"\n=====Input Format=====\nThe first line contains N, the number of lines in the XML document.\nThe next N lines follow containing the XML document.\n\n=====Output Format=====\nOutput a single line, the integer score of the given XML document."
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '18'\nprint(solution(stdin))\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n<feed><title>HackerRank</title><title>hackerrank</title></feed>') == \"6\"\nassert solution('1\\n<feed><title>HackerRank</title><title>hackerrank</title></feed>') == \"6\"\nassert solution('2\\n<feed><title>HackerRank</title><title>hackerrank</title></feed>') == \"6\"\nassert solution('2\\n<feed><title>HackerRank</title><title>hackerrank</title><title>HackerRank</title></feed>') == \"10\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''<feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>''') == '6'\n\n=====Explanation=====\nThe input to the function/method is given as the below XML document.\n<feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>\n\nThe <feed> tag has an attribute of lang = 'en'.\nSo the score is equal to the number of attributes = 6."
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n>>>>>>> 2fb302678c5ecf1f94ba8d17e0dc6518c54c5e12\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>Great News!</title>\n<subtitle lang='en'>for Entertainment</subtitle>\n<link rel='alternate' type='text/html' href='http://www.foxnews.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"3\"\n''')\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n\\t<title>HackerRank</title>\\n\\t<subtitle lang='en'>Programming challenges</subtitle>\\n\\t<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n\\t<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == \"9\"\nassert solution(\"<feed xml:lang='en'>\\n\\t<title>HackerRank</title>\\n\\t<subtitle lang='en'>Programming challenges</subtitle>\\n\\t<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n\\t<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == \"18\"\nassert solution(\"<feed xml:lang='en'>\\n\\t<title>HackerRank</title>\\n\\t<subtitle lang='en'>Programming challenges</subtitle>\\n\\t<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n\\t<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == \"17\"\n\n\"\"\""
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '6'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3.0 4.0 6.0 7.0\") == \"60.00\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"180.00\"\nassert solution(\"2.1 2.2 2.3 2.4\") == \"157.56\"\nassert solution(\"3.2 3.1 3.0 3.1\") == \"112.24\"\nassert solution(\"3.2 -3.1 3.0 3.1\") == \"56.14\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\n\nassert solution('0 2 4 1 3') == '90.00'\n\nassert solution('5 -7 -1 4 -5 3') == '5.00'\n\nassert solution('1 -4 -4 6 -1') == '180.00'\n\nassert solution('1 1 1 3 1') == '90.00'"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10.5 5.6 1.5\") == \"26.52\""
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 0 1 0\n0 1 0 1\n1 0 0 1\n0 0 1 0''') == '120.0'\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '45.0'\nassert solution('''1 2 0 3\n4 0 0 3\n2 4 0 3\n4 1 2 0''') == '225.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1 1\") == \"30.0\"\n=====Sample Input=====\n0 1 1 1\n\n=====Sample Output=====\n90.0\n\n'''\nimport math\na = list(map(float, input().split()))\nb = list(map(float, input().split()))\nc = list(map(float, input().split()))\nd = list(map(float, input().split()))\nab = math.pow(a[0]*b[0] + a[1]*b[1] + a[2]*b[2], 2)\nac = math.pow(a[0]*c[0] + a[1]*c[1] + a[2]*c[2], 2)\nad = math.pow(a[0]*d[0] + a[1]*d[1] + a[2]*d[2], 2)\nbc = math.pow(b[0]*c[0] + b[1]*c[1] + b[2]*c[2], 2)\nbd = math.pow(b[0]*d[0] + b[1]*d[1] + b[2]*d[2], 2)\ncd = math.pow(c[0]*d[0] + c[1]*d[1] + c[2]*d[2], 2)\nx = math.degrees(math.acos((ab+ac+bd-cd)/(2*math.sqrt(ab)*math.sqrt(ac)*math.sqrt(bd)*math.sqrt(cd))))\ny = math.degrees(math.acos((bc+cd-ab-ad)/(2*math.sqrt(bc)*math.sqrt(cd)*math.sqrt(ab)*math.sqrt(ad))))\nprint(round(math.degrees(math.acos((x*x+y*y)/(2*math.sqrt(x)*math.sqrt(y)))/180)))"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 -1 1') == '60'\nassert solution('1 1 -1 1') == '60'\nassert solution('-1 -1 1 -1') == '60'\n=====Sample Test Cases=====\nInput\n\nOutput\n\n=====Actual Output=====\nInput\n\nOutput\n\n=====Explanation=====\nThe angle of a plane is 60 degrees.\n\nInput\n\nOutput\n\n=====Test Case 1=====\nInput\n\nOutput\n\n=====Test Case 2=====\nInput\n\nOutput\n\n=====Test Case 3=====\nInput\n\nOutput\n\n=====Test Case 4=====\nInput\n\nOutput\n\n=====Test Case 5=====\nInput\n\nOutput\n\n=====Test Case 6=====\nInput\n\nOutput\n\n=====Test Case 7=====\nInput\n\nOutput\n\n=====Test Case 8=====\nInput\n\nOutput\n\n=====Test Case 9=====\nInput\n\nOutput\n\n=====Test Case 10=====\nInput\n\nOutput\n\n=====Test Case 11=====\nInput\n\nOutput\n\n=====Test Case 12=====\nInput\n\nOutput\n\n=====Test Case 13=====\nInput\n\nOutput\n\n=====Test Case 14=====\nInput\n\nOutput\n\n=====Test Case 15=====\nInput\n\nOutput\n\n=====Test Case 16=====\nInput\n\nOutput\n\n=====Test Case 17=====\nInput\n\nOutput\n\n=====Test Case 18=====\nInput\n\nOutput\n\n=====Test Case 19=====\nInput\n\nOutput\n\n=====Test Case 20=====\nInput\n\nOutput\n\n=====Test Case 21=====\nInput\n\nOutput\n\n=====Test Case 22=====\nInput\n\nOutput\n\n=====Test Case 23=====\nInput\n\nOutput\n\n=====Test Case 24=====\nInput\n\nOutput\n\n=====Test Case 25=====\nInput\n\nOutput\n\n=====Test Case 26=====\nInput\n\nOutput\n\n=====Test Case 27=====\nInput\n\nOutput\n\n=====Test Case 28=====\nInput\n\nOutput\n\n=====Test Case 29=====\nInput\n\nOutput\n\n=====Test Case 30=====\nInput\n\nOutput\n\n=====Test Case 31=====\nInput\n\nOutput\n\n=====Test Case 32=====\nInput\n\nOutput\n\n=====Test Case 33=====\nInput\n\nOutput\n\n=====Test Case 34=====\nInput\n\nOutput\n\n=====Test Case 35=====\nInput\n\nOutput\n\n=====Test Case 36=====\nInput\n\nOutput\n\n=====Test Case 37=====\nInput\n\nOutput\n\n=====Test Case 38=====\nInput\n\nOutput\n\n=====Test Case 39=====\nInput\n\nOutput\n\n=====Test Case 40=====\nInput\n\nOutput\n\n=====Test Case 41=====\nInput\n\nOutput\n\n=====Test Case 42=====\nInput\n\nOutput\n\n=====Test Case 43=====\nInput\n\nOutput\n\n=====Test Case 44=====\nInput\n\nOutput\n\n=====Test Case 45=====\nInput\n\nOutput\n\n=====Test Case 46=====\nInput\n\nOutput\n\n=====Test Case 47=====\nInput\n\nOutput\n\n=====Test Case 48=====\nInput\n\nOutput\n\n=====Test Case 49=====\nInput\n\nOutput\n\n=====Test Case 50=====\nInput\n\nOutput\n\n=====Test Case 51=====\nInput\n\nOutput\n\n=====Test Case 52=====\nInput\n\nOutput\n\n=====Test Case 53=====\nInput\n\nOutput\n\n=====Test Case 54=====\nInput\n\nOutput\n\n=====Test Case 55=====\nInput\n\nOutput\n\n=====Test Case 56=====\nInput\n\nOutput\n\n=====Test Case 57=====\nInput\n\nOutput\n\n=====Test Case 58=====\nInput\n\nOutput\n\n=====Test Case 59=====\nInput\n\nOutput\n\n=====Test Case 60=====\nInput\n\nOutput\n\n=====Test Case 61=====\nInput\n\nOutput\n\n=====Test Case 62=====\nInput\n\nOutput\n\n=====Test Case 63=====\nInput\n\nOutput\n\n=====Test Case 64=====\nInput\n\nOutput\n\n=====Test Case 65=====\nInput\n\nOutput\n\n=====Test Case 66=====\nInput\n\nOutput\n\n=====Test Case 67=====\nInput\n\nOutput\n\n=====Test Case 68=====\nInput\n\nOutput\n\n=====Test Case 69=====\nInput\n\nOutput\n\n=====Test Case 70=====\nInput\n\nOutput\n\n=====Test Case 71=====\nInput\n\nOutput\n\n=====Test Case 72=====\nInput\n\nOutput\n\n=====Test Case 73=====\nInput\n\nOutput\n\n=====Test Case 74=====\nInput\n\nOutput\n\n=====Test Case 75=====\nInput\n\nOutput\n\n=====Test Case 76=====\nInput\n\nOutput\n\n=====Test Case 77=====\nInput\n\nOutput\n\n=====Test Case 78=====\nInput\n\nOutput\n\n=====Test Case 79=====\nInput\n\nOutput\n\n=====Test Case 80=====\nInput\n\nOutput\n\n=====Test Case 81=====\nInput\n\nOutput\n\n=====Test Case 82=====\nInput\n\nOutput\n\n=====Test Case 83=====\nInput\n\nOutput\n\n=====Test Case 84=====\nInput\n\nOutput\n\n=====Test Case 85=====\nInput\n\nOutput\n\n=====Test Case 86=====\nInput\n\nOutput\n\n=====Test Case 87=====\nInput\n\nOutput\n\n=====Test Case 88=====\nInput\n\nOutput\n\n=====Test Case 89=====\nInput\n\nOutput\n\n=====Test Case 90=====\nInput\n\nOutput\n\n=====Test Case 91=====\nInput\n\nOutput\n\n=====Test Case 92=====\nInput\n\nOutput\n\n=====Test Case 93=====\nInput\n\nOutput\n\n=====Test Case 94=====\nInput\n\nOutput\n\n=====Test Case 95=====\nInput\n\nOutput\n\n=====Test Case 96=====\nInput\n\nOutput\n\n=====Test Case 97=====\nInput\n\nOutput\n\n=====Test Case 98=====\nInput\n\nOutput\n\n=====Test Case 99=====\nInput\n\nOutput\n\n=====Test Case 100=====\nInput\n\nOutput\n\n=====Test Case 101=====\nInput\n\nOutput\n\n=====Test Case 102=====\nInput\n\nOutput\n\n=====Test Case 103=====\nInput\n\nOutput\n\n=====Test Case 104=====\nInput\n\nOutput\n\n=====Test Case 105=====\nInput\n\nOutput\n\n=====Test Case 106=====\nInput\n\nOutput\n\n=====Test Case 107=====\nInput\n\nOutput\n\n=====Test Case 108=====\nInput\n\nOutput\n\n=====Test Case 109=====\nInput\n\nOutput\n\n=====Test Case 110=====\nInput\n\nOutput\n\n=====Test Case 111=====\nInput\n\nOutput\n\n=====Test Case 112=====\nInput\n\nOutput\n\n=====Test Case 113=====\nInput\n\nOutput\n\n=====Test Case 114=====\nInput\n\nOutput\n\n=====Test Case 115=====\nInput\n\nOutput\n\n=====Test Case 116=====\nInput\n\nOutput\n\n=====Test Case 117=====\nInput\n\nOutput\n\n=====Test Case 118=====\nInput\n\nOutput\n\n=====Test Case 119=====\nInput\n\nOutput\n\n=====Test Case 120=====\nInput\n\nOutput\n\n=====Test Case 121=====\nInput\n\nOutput\n\n=====Test Case 122=====\nInput\n\nOutput\n\n=====Test Case 123=====\nInput\n\nOutput\n\n=====Test Case 124=====\nInput\n\nOutput\n\n=====Test Case"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '60.00'\nassert solution('4 4 3 2') == '60.00'\n\n\"\"\""
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.0 2.0 3.0 4.0\") == \"90.00\"\nassert solution(\"1.1 2.0 3.0 4.0\") == \"45.00\"\nassert solution(\"1.1 2.2 3.0 4.0\") == \"40.00\"\nassert solution(\"1.1 2.2 3.1 4.0\") == \"40.00\"\nassert solution(\"1.1 2.2 3.2 4.0\") == \"30.00\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 0\") == \"180\"\nassert solution(\"0 0 0 1\") == \"90\"\nassert solution(\"1 1 1 1\") == \"90\"\nassert solution(\"0 0 1 0\") == \"90\"\nassert solution(\"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0.0 0.0 0.0\n1.0 1.0 0.0\n2.0 0.0 1.0\n3.0 0.0 2.0''') == '60.0'\nassert solution('''1.0 1.0 0.0\n1.0 2.0 0.0\n2.0 2.0 0.0\n3.0 0.0 2.0''') == '90.0'\nassert solution('''3.0 0.0 3.0\n0.0 1.0 3.0\n0.0 0.0 3.0\n1.0 1.0 3.0''') == '45.0'\nassert solution('''0.0 0.0 0.0\n1.0 1.0 0.0\n2.0 2.0 0.0\n3.0 3.0 0.0''') == '60.0'\nassert solution('''1.0 1.0 0.0\n1.0 2.0 0.0\n2.0 2.0 0.0\n3.0 3.0 0.0''') == '90.0'\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\none two') == 1\nassert solution('2\\napple grape') == 2\nassert solution('3\\nvite') == 1\nassert solution('4\\nflutter') == 2\n=====Sample Input/Output 1=====\nInput\n\nOutput\n\nSample Output 1\n\n1\n2\n3\n4\n\nSample Output 2\n\n0\n2\n2\n\nSample Output 3\n\n0\n0\n\nSample Output 4\n\n1\n1\n\nSample Output 5\n\n1\n0\n\n>>>>>>> Stashed changes\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 one two two 3 one\") == \"3\"\n=====Solution Explanation=====\nTest Case 1:\n=====Input=====\nThe input is read by the provided and locked code template. The first line contains the integer n, denoting the number of words. The next n lines contain the space-separated words.\n\n=====Output=====\nThe output is produced by the provided and locked code template. The output prints the returned score to the output.\nThe score for the first test case is 3 because there are 3 vowels in the list and it should be 3.\nThe score for the second test case is 1 because there are only 2 vowels in the list and it should be 1.\nThe score for the third test case is 2 because there are only 1 vowel in the list and it should be 2.\n\n'''\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 5 2 1''') == '1'\nassert solution('''5\n10 5 9 2 3 4''') == '1'"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\nhello world') == '2 1 1 1 1'\nassert solution('1 2\\na b') == '1 1 1 0'\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\none two') == 2\nassert solution('2 4\\ntwo one') == 1\nassert solution('3 5\\nfive five') == 5\n\n=====Sample Input & Output=====\nInput\n\nSample Output\n\n2\n\nExplanation\n\nInput:\n3\none two\n\nOutput:\n2\n\nThe following words have even number of vowels: 'two' and 'one'. Hence, the score of the words is 2.\n\nInput:\n4\none four\ntwo one\nthree one\nfour one\n\nOutput:\n1\n\nThe following words have even number of vowels: 'one' and 'four'. Hence, the score of the words is 1.\n\n'''"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nhello world') == 2, \"test 1 failed\"\nassert solution('2\\none two') == 1, \"test 2 failed\"\nassert solution('3\\none two three') == 2, \"test 3 failed\"\nassert solution('4\\none two three four') == 3, \"test 4 failed\"\nassert solution('5\\none two three four five') == 4, \"test 5 failed\"\n=====Submission Details=====\nSubmission:\n1st Problem:\n2nd Problem:\n\n=====Test Case 1=====\nTest case 1:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 2=====\nTest case 2:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 3=====\nTest case 3:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 4=====\nTest case 4:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 5=====\nTest case 5:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 6=====\nTest case 6:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 7=====\nTest case 7:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 8=====\nTest case 8:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 9=====\nTest case 9:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 10=====\nTest case 10:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 11=====\nTest case 11:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 12=====\nTest case 12:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 13=====\nTest case 13:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 14=====\nTest case 14:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 15=====\nTest case 15:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 16=====\nTest case 16:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 17=====\nTest case 17:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 18=====\nTest case 18:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 19=====\nTest case 19:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 20=====\nTest case 20:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 21=====\nTest case 21:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 22=====\nTest case 22:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 23=====\nTest case 23:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 24=====\nTest case 24:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 25=====\nTest case 25:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 26=====\nTest case 26:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 27=====\nTest case 27:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 28=====\nTest case 28:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 29=====\nTest case 29:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 30=====\nTest case 30:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 31=====\nTest case 31:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 32=====\nTest case 32:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 33=====\nTest case 33:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 34=====\nTest case 34:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 35=====\nTest case 35:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 36=====\nTest case 36:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 37=====\nTest case 37:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 38=====\nTest case 38:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 39=====\nTest case 39:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 40=====\nTest case 40:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 41=====\nTest case 41:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 42=====\nTest case 42:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 43=====\nTest case 43:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 44=====\nTest case 44:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 45=====\nTest case 45:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 46=====\nTest case 46:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 47=====\nTest case 47:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 48=====\nTest case 48:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 49=====\nTest case 49:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 50=====\nTest case 50:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 51=====\nTest case 51:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 52=====\nTest case 52:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 53=====\nTest case 53:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 54=====\nTest case 54:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 55=====\nTest case 55:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 56=====\nTest case 56:\n\nExpected:\n2\n\nActual:\n1\n\n=====Test Case 57=====\nTest case 57:\n\nExpected:\n1\n\nActual:\n0\n\n=====Test Case 58=====\nTest case 58:\n\nExpected:"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\neekyn\\n\") == \"5\", \"Test #1\"\nassert solution(\"3\\neekyn\\n\") == \"10\", \"Test #2\"\nassert solution(\"3\\neekyn\\n\") == \"7\", \"Test #3\"\nassert solution(\"4\\napple\\n\") == \"4\", \"Test #4\"\nassert solution(\"4\\napple\\n\") == \"2\", \"Test #5\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\ncat dog') == 2\nassert solution('3\\ncat cat dog') == 3\nassert solution('4\\ncat dog fish milk') == 5\n=====Submission=====\nYour submission code will be checked against the locked template code using the following conditions:\nYour code will be graded using the provided testing script only. No code or data will be shared, your solutions will be solely written by you.\nYour code will be graded using the template script. There will be no penalty for missing any portion of the template code, but your program must work just as well as the locked template.\nYour program must not contain any debugging print statements.\nYour program must have a reasonable execution time.\nYour program must have a reasonable memory footprint (if using any third-party libraries, they must not pre-load all of them into memory at once).\nYour solution must run within a reasonable amount of time (no more than a few minutes), and your time/memory usage must not exceed permissible limits.\nYour program must contain the exact code provided in the template file.\n'''\nfrom collections import Counter\nn = int(input())\nlist1=[]\nfor i in range(n):\n    list1.append(input())\nprint(len([i for i in list1 if len(i)%2 == 0]))\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"hello\", \"world\", \"welcome\", \"wonderful\"]) == 2"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"MM\") == True\nassert solution(\"DD\") == False\nassert solution(\"CC\") == True\nassert solution(\"LL\") == False\nassert solution(\"II\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CMXCIX') == True\nassert solution('XCIX') == False\nassert solution('IV') == False\nassert solution('MCMLXXXIII') == True\nassert solution('MMMCMXCIX') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('MMMCMXCIX') == \"True\"\nassert solution('MMMCMXCIXI') == \"False\"\n\nstdin = \"C\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"XI\") == \"True\"\nassert solution(\"VII\") == \"False\"\nassert solution(\"MMMCMXCIX\") == \"True\"\nassert solution(\"XVIIII\") == \"False\"\nassert solution(\"MMMCMXCIXI\") == \"True\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"MMMCMLXXXV\") == \"True\"\nassert solution(\"MMMCMLXXXVX\") == \"False\"\nassert solution(\"MMMCMLXXXIV\") == \"False\"\nassert solution(\"MMMCMLXXXIX\") == \"False\"\nassert solution(\"MMMCMLXXX\") == \"False\"\n\n'''\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('XIV') == 'True', \"XIV\"\nassert solution('XVII') == 'False', \"XVII\"\nassert solution('XX') == 'False', \"XX\"\nassert solution('L') == 'False', \"L\"\n=====Sample Input & Output=====\nInput\nXIV\n\nOutput\nTrue\n\nInput\nXV\n\nOutput\nFalse\n\nInput\nXX\n\nOutput\nFalse\n\nInput\nL\n\nOutput\nFalse"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'False'\nassert solution('VI') == 'True'\nassert solution('IX') == 'True'\nassert solution('LVIII') == 'True'\nassert solution('MCMXCIV') == 'True'\n'''"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"MCMXCIX\") == \"True\"\nassert solution(\"CDXCIX\") == \"False\"\n\n===Sample Test Case===\nExpected Output:\nTrue\n\nTrue\n\n===Test Case 2===\nExpected Output:\nFalse\n\nFalse\n\n===Test Case 3===\nExpected Output:\nTrue\n\nTrue\n\n\"\"\""
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('III') == True\nassert solution('MMMCMXCIX') == True\nassert solution('I') == True\nassert solution('V') == False\nassert solution('XX') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('MCMXCVI') == True\nassert solution('MMM') == True\nassert solution('IM') == False\n\nSolution:\n\nimport re\n\npattern = r\"M{0,3}(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$\""
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 3456\") == \"+91 34561234\"\nassert solution(\"12 3456 4321\") == \"+91 34561234 4321\"\nassert solution(\"12 3456 4321 12 34\") == \"+91 34561234 4321 1234\"\n\n=========================\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n+91 8346824288\\n+91 98346824288') == '+91 8346824288\\n+91 98346824288'\nassert solution('2\\n+91 8346824288\\n+91 98346824288') == '+91 8346824288\\n+91 98346824288'\nassert solution('3\\n+91 8346824288\\n+91 98346824288') == '+91 8346824288\\n+91 98346824288'\nassert solution('4\\n+91 8346824288\\n+91 98346824288') == '+91 8346824288\\n+91 98346824288'\nassert solution('5\\n+91 8346824288\\n+91 98346824288') == '+91 8346824288\\n+91 98346824288'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"121 2333 4321 3432\"\"\") == '+91 2333 4321 3432'\nassert solution(\"\"\"3444 3444 3000\"\"\") == '+91 3444 3444 3000'\nassert solution(\"\"\"88001 88811\"\"\") == '+91 88811'\nassert solution(\"\"\"5678 5678 6789\"\"\") == '+91 5678 5678 6789'\nassert solution(\"\"\"0\"\"\") == '+91 0'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0728631529\n098651867\n0902592376\n0768981059\n0\n''') == '+91-87663-1529\\n+91-9865-1867\\n+91-90865-1776\\n+91-9180-6768\\n+91-9266-3159'''\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    '+91 99999 999999',\n    "
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n910000001\\n910000002\\n910000003\\n910000004\\n910000005\\n910000006\\n910000007\\n910000008\\n910000009\") == '910000000000000000000000000000\\n910000000000000000000000000001\\n910000000000000000000000000002\\n910000000000000000000000000003\\n910000000000000000000000000004\\n910000000000000000000000000005\\n910000000000000000000000000006\\n910000000000000000000000000007\\n910000000000000000000000000008\\n910000000000000000000000000009'\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n9475358958\\n9475358958\\n9161111111\\n9161111111\\n7638763876\\n') == stdin\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([91, 591, 991, 892, 792, 691, 992, 792, 972, 792, 691, 982, 792, 691, 982, 991, 892, 792, 691, 992, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 691, 982, 792, 6"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"+91 999999999\", \"+91 99999999\"]) == \"+91 999999999\\n+91 99999999\\n\"\nassert solution([\"0090\"]) == \"0090\\n0090\\n\"\nassert solution([\"+91 98099999\"]) == \"+91 980099999\\n\"\n=====Test Cases=====\nInput\nOutput\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n919750 542000\\n+91 987650') == \"+91 9197550\\n+91 987650\\n+91 987650\", \"Should be +91 9197550\\n+91 987650\\n+91 987650\"\nassert solution('4\\n919550 06250\\n+91 987650\\n+91 987650') == \"+91 9197550\\n+91 987650\\n+91 987650\\n+91 987650\", \"Should be +91 9197550\\n+91 987650\\n+91 987650\\n+91 987650\"\nassert solution('5\\n919550 96250\\n+91 987650\\n+91 987650') == \"+91 9197550\\n+91 987650\\n+91 987650\", \"Should be +91 9197550\\n+91 987650\\n+91 987650\"\n\n\n\n>>> \n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n+91 <xxxx> xxxxx\n\nThe given mobile numbers may have +91, 91 or 0 written before the actual 10 digit number. Alternatively, there may not be any prefix at all. Alternatively, there may not be any prefix at all.\n\n=====Input Format=====\nThe first line of input contains an integer N, the number of mobile phone numbers. N lines follow each containing a mobile number.\n\n=====Output Format=====\nPrint N mobile numbers on separate lines in the required format."
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nalpha 100\\nbeta 70\\nalpha\\nbeta\\nalpha\\n') == '50.0'\n\n''''''\n\nn = int(input())\nmarks = {}\nfor i in range(n):\n    student, *data = input().split()\n    marks[student] = data\n    \nquery_name = input()"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nalpha 100\\nbeta 100\\nalpha 40\\nbeta 100\\nalpha 95') == '50.0'\n'''\n\nimport statistics as st\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nalpha 100\nbeta 90\nalpha 75\nalpha 80\nalpha 70\nbeta 70\nbeta 80\nalpha 60\nbeta 70\nalpha 55\nbeta 80\n''') == '55.0'\nassert solution('''\n1\nbeta 100\nbeta 60\nalpha 70\nalpha 80\n''') == '75.0'\n=====Run your code on internet=====\nhttps://github.com/anonymous/Code-Exercises\n\n'''\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nalpha 100\\nbeta 80\\nalpha\\nalpha\\n') == '80.00'\nassert solution('4\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\n') == '50.00'\nassert solution('4\\nalpha 100\\nbeta 20\\nalpha\\nbeta\\n') == '40.00'\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\nalpha\\n20\\nbeta\\n30\\n50\\n70\\n\") == \"50.00\"\n=====Test Case Examples=====\nInput\n3\nalpha\n20\n30\n40\nbeta\n30\n50\n70\nquery_name\nOutput\n50.00\nExpected\n50.00\n\n=====Solution=====\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nalpha 100\\nbeta 90\\nalpha 80\\nbeta 100\\nalpha 90\") == \"90.00\"\nprint(solution(\"5\\nalpha 100\\nbeta 90\\nalpha 80\\nbeta 100\\nalpha 90\"))\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"50.0\""
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nA 30\\nB 50\\nC 70\") == \"50.00\"\nassert solution(\"2\\nA 30\\nB 50\\nC 70\") == \"50.00\"\nassert solution(\"3\\nA 30\\nB 50\\nC 70\") == \"50.00\"\n=====Submission Details=====\nStudent Name: Sahan\nStudent ID: 20170029\nGitHub username: sahan_saad\n\n=====Test Cases=====\nInput\n=====Output=====\nOutput\n=====Expected Output=====\nOutput\n=====Hint=====\nThe marks array may have multiple entries. Hence, you may find the total marks of the particular student.\n=====Code=====\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nalpha 100\\nbeta 50\\ngamma 20\\ndelta 60\\nquery_name beta\\n') == '50.00'\nassert solution('4\\nBart Simpson: 90\\nPhoebe Buffay: 63\\nXander Rhodes: 68\\nLucas Mercier: 90\\n') == '63.00'\nassert solution('3\\nAlfie: 99\\nBeth: 88\\nCarol: 93\\n') == '100.00'\nassert solution('10\\nAlfie: 99\\nBeth: 88\\nCarol: 93\\nBill: 66\\nXander: 68\\n') == '94.50'\nassert solution('3\\nAlfie: 99\\nBeth: 88\\nCarol: 93\\n') == '100.00'\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nAlpha Beta\\nAlpha\\nBeta\") == \"50.00\"\n=====Test Case 1=====\n\nTest Case 2:\n\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module>\n    solution(\"2\\nA B\\nA\\nB\")\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 2, in solution\n    stdin = input()\nTypeError: input expected at least 1 arguments, got 0\n>>>\n================= RESTART: /home/lucky/PycharmProjects/Algo_practice/solution.py =================\nTraceback (most recent call last):\n  File \"/home/lucky/PycharmProjects/Algo_practice/solution.py\", line 9, in <module"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nMike Thomson 20 M\\nEmma Watson 25 F\\nSteve Rogers 30 M\\n\") == \"Mr. Steve Rogers\\nMs. Emma Watson\\nMr. Mike Thomson\\n\"\nassert solution(\"3\\nEmma Watson 20 F\\nSally 20 F\\n\") == \"Ms. Sally\\nMs. Emma Watson\\nMs. Mike Thomson\\n\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    'John',\n    'Mary',\n    'Peter',\n    'George',\n    'John',\n    'John',\n    'Mary'\n]) == '''\nMs. John\nMs. Mary\nMr. Peter\nMr. George\nMs. John\nMs. John\nMs. Mary\n'''\nassert solution([\n    'David',\n    'David',\n    'Tom',\n    'Tom',\n    'Michael',\n    'Michael',\n    'David',\n    'David',\n    'Tom',\n    'Tom'\n]) == '''\nMr. David\nMr. David\nMs. Michael\nMs. Michael\nMr. Tom\nMr. Tom\nMs. David\nMs. David\nMr. Tom\nMr. Tom\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nHi\nHi\n''') == 'Hi\\nHi\\n', \"First\"\nassert solution('''2\nHi\nHello\n''') == 'Hi\\nHello\\n', \"Second\"\nassert solution('''5\nHello\nHi\n''') == 'Hello\\nHi\\nHi\\nHello\\n', \"Third\"\nassert solution('''10\nJohn\nJacob\nJacob\nHassel\nMaria\nMax\nMax\nMichael\n''') == 'John\\nJacob\\nHassel\\nMaria\\nMax\\nMax\\nMichael\\n', \"Fourth\""
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    John Henry    Davids    19    M\n    Mark    Betts    26    M\n    Marija    Pavlova    27    F\n    Sara Jane    Walker    45    F\n    Natasha    Powell    28    F\n''') == '''\n    Davids John Henry\n    Betts Mark\n    Pavlova Sara Jane\n    Walker Natasha\n    Powell Marija\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nHendrix\\t18\\tM\\n\" \"David\\t19\\tM\") == \"Hendrix\\nDavid\"\nassert solution(\"4\\nHendrix\\t18\\tM\\n\" \"David\\t19\\tM\\n\" \"Herman\\t17\\tM\\n\" \"Dwight\\t18\\tM\\n\") == \"David\\nHendrix\\nHerman\\n\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nMarry\\n20\\nF\\n') == \"Ms. Marry\\n\"\n\nassert solution('2\\nHenry\\n20\\nM\\n') == \"Mr. Henry\\n\"\n\nassert solution('3\\nEmma\\n12\\nF\\n') == \"Ms. Emma\\n\"\n\nassert solution('2\\nHenry\\n12\\nM\\n') == \"Mr. Henry\\n\"\n\nassert solution('3\\nEmma\\n15\\nF\\n') == \"Ms. Emma\\n\""
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nDana Maria\\nPaulina Jane\\nTereza Daniel\\n') == 'Dana Maria\\nPaulina Jane\\nTereza Daniel'\nassert solution('1\\nShelley\\nCatherine\\nJulia\\n') == 'Shelley\\nJulia\\nCatherine'\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nKrishna 26\\nArjun 26\\nMalika 28\\n\") == \"Krishna Malika Arjun\"\n\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nMwangi\\n20\\nM') == 'Mr.Mwangi\\n'\n=====Sample Input=====\n10\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi M\nMwangi F\n=====Sample Output=====\nMr.Mwangi\nMwangi M\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nMarry George\\n20\\nF\\n\") == \"Ms. George\"\nassert solution(\"2\\nHenry Davids\\n20\\nM\\n\") == \"Mr. David\"\nassert solution(\"3\\nMary George\\n20\\nF\\n\") == \"Ms. George\"\nassert solution(\"4\\nHenry Davids\\n20\\nM\\n\") == \"Mr. David\"\nassert solution(\"5\\nHenry Davids\\n20\\nM\\n\") == \"Mr. David\"\n=====Sample Input/Output 1=====\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\n\n\"\"\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\"\"\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n3\n4\n5\n''') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\\n\") == \"[0,0,0]\\n[0,0,1]\\n[0,0,2]\\n[0,1,0]\\n[0,1,1]\\n[1,0,0]\\n[1,0,1]\\n[1,1,0]\\n[1,1,2]\"\n=====Output Format=====\nPrint the list in lexographic increasing order on separate lines.\n\n=====Sample Input=====\nx = 1\ny = 1\nz = 2\nn = 3\n\n=====Sample Output=====\n[0,0,0]\n[0,0,1]\n[0,0,2]\n[0,1,0]\n[0,1,1]\n[1,0,0]\n[1,0,1]\n[1,1,0]\n[1,1,2]\n\n\"\"\""
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('1 1 3 5') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 3 3') == '[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'\nassert solution('1 1 1 2') == '[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'\nassert solution('3 3 3 1') == '[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'\nassert solution('1 2 3 2') == '[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\nassert solution([1,2,3,4]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2]]\n\nassert solution([2,3,4,5]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[0,3,0],[0,3,1],[0,3,2],[0,4,0],[0,4,1],[0,4,2],[0,5,0],[0,5,1],[0,5,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[1,3,0],[1,3,1],[1,3,2],[1,4,0],[1,4,1],[1,4,2],[1,5,0],[1,5,1],[1,5,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2],[2,3,0],[2,3,1],[2,3,2],[2,4,0],[2,4,1],[2,4,2],[2,5,0],[2,5,1],[2,5,2]]\n\nassert solution([2,3,4,5,1,2]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[0,3,0],[0,3,1],[0,3,2],[0,4,0],[0,4,1],[0,4,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[1,3,0],[1,3,1],[1,3,2],[1,4,0],[1,4,1],[1,4,2],[1,5,0],[1,5,1],[1,5,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2],[2,3,0],[2,3,1],[2,3,2],[2,4,0],[2,4,1],[2,4,2],[2,5,0],[2,5,1],[2,5,2]]\n\n=====Output Format=====\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[0,3,0],[0,3,1],[0,3,2],[0,4,0],[0,4,1],[0,4,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[1,3,0],[1,3,1],[1,3,2],[1,4,0],[1,4,1],[1,4,2],[1,5,0],[1,5,1],[1,5,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2],[2,3,0],[2,3,1],[2,3,2],[2,4,0],[2,4,1],[2,4,2],[2,5,0],[2,5,1],[2,5,2]]\n\n=====Explanation=====\nPrint the list of all permutations of the list of length 4 such that the sum of elements is not equal to n = 15\n[[0,0,0,0],[0,0,0,1],[0,0,0,2],[0,0,1,0],[0,0,1,1],[0,0,1,2],[0,0,2,0],[0,0,2,1],[0,0,2,2],[0,1,0,0],[0,1,0,1],[0,1,0,2],[0,1,1,0],[0,1,1,1],[0,1,1,2],[0,1,2,0],[0,1,2,1],[0,1,2,2],[0,2,0,0],[0,2,0,1],[0,2,0,2],[0,2,1,0],[0,2,1,1],[0,2,1,2],[0,2,2,0],[0,2,2,1],[0,2,2,2],[1,0,0,0],[1,0,0,1],[1,0,0,2],[1,0,1,0],[1,0,1,1],[1,0,1,2],[1,0,2,0],[1,0,2,1],[1,0,2,2],[1,1,0,0],[1,1,0,1],[1,1,0,2],[1,1,1,0],[1,1,1,1],[1,1,1,2],[1,1,2,0],[1,1,2,1],[1,1,2,2],[1,2,0,0],[1,2,0,1],[1,2,0,2],[1,2,1,0],[1,2,1,"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2.00+2.00i\"\nassert solution(\"1.1 1.1\") == \"2.10+2.10i\"\nassert solution(\"1.2 1.2\") == \"2.00+2.00i\"\nassert solution(\"1.01 1.01\") == \"2.01+2.01i\"\nassert solution(\"2 2\") == \"4.00+4.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0+2\") == \"2+0i\"\nassert solution(\"0+2i\") == \"2+0i\"\nassert solution(\"2+0i\") == \"2+0i\"\nassert solution(\"-0+2i\") == \"-2+0i\"\nassert solution(\"1+-5\") == \"-1+5i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.0 2.0\") == \"1.0+2.0i\"\nassert solution(\"1.0 2.0 -1.0\") == \"1.0-2.0i\"\nassert solution(\"1.0 2.0 0.0\") == \"0.00+2.00i\"\nassert solution(\"1.0 2.0 0.0 1.0\") == \"0.00+2.00i\"\n=====Constraints=====\n1 \u2264 A, B \u2264 1000.\n\n===Sample Test Cases===\nInput\n\nOutput\n\n====Example Case 1====\nInput\n\nOutput\n\n====Example Case 2====\nInput\n\nOutput\n\n====Example Case 3====\nInput\n\nOutput\n\n====Example Case 4====\nInput\n\nOutput\n\n====Example Case 5====\nInput\n\nOutput\n\n====Example Case 6====\nInput\n\nOutput\n\n====Example Case 7====\nInput\n\nOutput\n\n====Example Case 8====\nInput\n\nOutput\n\n'''"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\" 1.3+4.5j\") == \" 1.3+4.5i\"\nassert solution(\" 1.3-4.5j\") == \" -1.3-4.5i\"\nassert solution(\" 1.3*4.5j\") == \" (1.3+4.5i)*1j\"\nassert solution(\" 1.3/4.5j\") == \"(1.3+4.5i)/1j\"\nassert solution(\" 1.3+0.00i\") == \" 1.3+0.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 + 2i') == '1 - 2i'\nassert solution('1 + 2i') == '1 - 2i'\n=====Constraints=====\n1 \u2264 a, b \u2264 1000000\n\nTest.assert_equals(solution('2 + 4i'), '-2 - 4i')\nTest.assert_equals(solution('2 + -4i'), '-2 - 4i')\nTest.assert_equals(solution('-2 + -4i'), '2 - 4i')\nTest."
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n-3.2+2.6i\n1.5+-6.7i\n''') == '-6.7+3.5i'\nprint(solution('''\n2.1-1.1i\n3.0+3.0i\n4.0+4.0i\n'''))\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"5.00+5.00i\"\nassert solution(\"2 3\") == \"5.00+5.00i\"\n\ninput_lines = []\nfor line in stdin:\n    input_lines.append(line)\n\nfor i in range(0, len(input_lines)):\n    line = input_lines[i]\n    if line == \"\\n\":\n        break\n    elif \"//\" in line:\n        line = line.split(\"//\")\n        line = line[0]\n    splitted_line = line.split()\n    real_part = splitted_line[0]\n    i_part = splitted_line[1]\n    assert real_part.isdigit()\n    assert i_part.isdigit()\n    real_part = int(real_part)\n    i_part = int(i_part)\n    assert real_part >= 0 and i_part >= 0\n    a = complex(real_part, i_part)\n    b = complex(real_part, -i_part)\n    real_part = a.real\n    i_part = a.imag\n    real_part = str(real_part)\n    i_part = str(i_part)\n    i_part = \"-\" + i_part if a.imag < 0 else i_part\n    real_part = \"+\" + real_part if a.imag < 0 else real_part\n    "
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1 2'\nassert solution('-1 -2') == '1 2'\nassert solution('-1 -1.01') == '0.00 -1.00i'"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2.0 3.0') == '2.0+3.0'\nassert solution('1.0 -2.0i') == '1.0-2.0i'\nassert solution('1.0i') == '1.0+0.00i'\nassert solution('1.0+0.0i') == '1.0+0.00i'\n=====Small Test 1 (0.2 points)=====\n>>> solution('1.0 -2.0i')\n'1.0-2.0i'\n\n=====Small Test 2 (0.2 points)=====\n>>> solution('1.0i')\n'1.0+0.00i'\n\n=====Small Test 3 (0.2 points)=====\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n=====Big Test 1 (20.5 points)=====\n>>> solution('-1.0+2.0i')\n'-1.0+2.0i'\n\n>>> solution('1.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0+0.00i'\n\n>>> solution('1.0+0.0i')\n'1.0"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(' 1.1+3.2i ') == '1.1+3.2i', \"error\"\nassert solution(' 2.3+0.2i ') == '2.3+0.2i', \"error\"\nassert solution(' -4.1+3.2i ') == '-4.1+3.2i', \"error\"\nassert solution(' 4+0.2+0.5i ') == '4.0+0.2i', \"error\"\nassert solution(' 2.3+0.2+0.5i ') == '2.3+0.2i', \"error\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''xyz\nabc''') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nassert solution(\"abc\\nxyz\") == \"xyzcba\""
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"zzz\") == \"zzz\"\nassert solution(\"aaa\") == \"aaa\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n\"\"\""
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0\n1\nB''') == '00'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"01\") == \"01\"\nassert solution(\"00B\") == \"00\"\n\n\"\"\"\nfrom collections import deque\n\nstdin = input()\n\ns = deque(stdin)\n\nwhile True:\n    if s[0] == '0' and s[-1] == 'B' and len(s) > 2:\n        s.popleft()\n        s.popleft()\n        s.popleft()\n        continue\n    if s[0] == '0':\n        s.popleft()\n        continue\n    if s[0] == 'B':\n        s.popleft()\n        continue\n    s.append(s.popleft())\n    print(''.join(s))"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '01B0'\n) == '00'\nassert solution(\n
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"01B0\") == \"00\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '00'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B0\") == \"00\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\nassert solution('01BA') == '10'\nassert solution('01BAB') == '00B0'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'\nassert solution('111B') == '11'\n\"\"\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('01B0') == '00'\nassert solution('01B0A') == '01'\nassert solution('A') == '0'\nassert solution('ABC') == '00'\nassert solution('ABCAA') == '00AB'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\nassert solution('''5\n2 1 4 3 5\n''') == '4'\nassert solution('''7\n2 1 2 3 4 2 5 1\n''') == '5'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n5\n5\n2 1 5 4 3\n''') == '3'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 5 4 3') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1,2,1,3,2,2,2,5]) == 5\nassert solution([2,4,6,2,4,3,3,2,4]) == 2\nassert solution([3,2,2,4,2,3,4,2,2]) == 3"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '5'\nassert solution('3') == '5'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"5\n2 1 5 4 3\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5\n5 1 5 4 3\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5\n5 1 5 4 3\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5\n2 1 5 4 3\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5\n2 1 5 4 3\n\"\"\"\n) == \"4\""
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n\n\"\"\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'A'\nassert solution('ca') == 'C'\nassert solution('abc') == 'A'\nassert solution('cb') == 'B'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\""
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'A'"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''aca\naccc\nca\n\n''') == 'A'\nassert solution('''aba\nabc\nba\n\n''') == 'B'\nassert solution('''ab\nabc\nac\n\n''') == 'C'\nassert solution('''bca\nbac\nacb\n\n''') == 'A'\nassert solution('''cab\ncba\na\n\n''') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n\"\"\"\n\nimport collections\n\ninput = stdin.readline"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('4 4 4') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"3 4 5\") == \"NO\"\nassert solution(\"1 3 5\") == \"NO\"\nassert solution(\"1 2 4\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == 'YES'\nassert solution('1 3 5 7') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 7\\n') == 'YES\\n'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"5 5 5 7\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 4\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 7') == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"2 2 7\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 7\n''') == 'YES'\nassert solution('''4 5 7\n''') == 'NO'\nassert solution('''2 2 7\n''') == 'YES'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '7'\nassert solution('5') == '11'"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '11'\nassert solution('''1\n''') == '2'"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '4'\nassert solution('5') == '11'\nassert solution('10') == '121'\nassert solution('100') == '1311'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"4\"\nassert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"11\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"11\"\nassert solution(\"10\\n\") == \"101\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n''') == '11'\nassert solution('''5\n''') == '11'\n\n'''\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '10'\nassert solution('2') == '7'\nassert solution('3 4 2') == '10'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4') == '7'\nassert solution('3\\n4\\n2') == '7'\nassert solution('5\\n6\\n8') == '19'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"5\") == \"14\"\nassert solution(\"9\") == \"25\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"12\"\nassert solution(\"2\") == \"10\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\""
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '11'\nassert solution('2') == '5'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '11'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '11'\nprint(solution())"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('2 2') == '2'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '11'\nassert solution('3 1 2 3') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n\n----------------------------------------------------------------------\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n\nimport sys\nfrom itertools import combinations_with_replacement\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(c * d for c, d in combinations_with_replacement(a, 2))\nprint(s % (10**9 + 7))\n\n\"\"\"\nN = int(input())\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '11'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('1 0 1') == 'NO'\nassert solution('0 1 0') == 'YES'\nassert solution('0 0 0') == 'YES'\nassert solution('0 0 0') == 'YES'"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\", '8'\nassert solution(\"3 4 1\") == \"NO\", '9'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == 'YES'\nassert solution('5 5 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"\nassert solution(\"5 5 5\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 2') == 'YES'\n\nassert solution('2 3 1') == 'NO'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2') == 'YES', \"123\"\n\nassert solution('1 1 1') == 'YES', \"1 1 1\"\n\nassert solution('2 2 2') == 'NO', \"2 2 2\"\n\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'NO'"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 1 3 2') == '18'\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"5\"\nassert solution(\"5 3 11\\n3\") == \"11\"\nassert solution(\"5 3 11\\n4\") == \"22\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '10'\nassert solution('5 3 11') == '30'\n\ninput:    [5, 3, 11]\noutput:    30\n\n'''\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n1\") == \"30\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"6 1 1\") == \"7\"\nassert solution(\"6 1 2\") == \"7\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '50'\nassert solution('5 3 11\\n3') == '58'\nassert solution('5 3 11\\n4') == '42'\nassert solution('5 3 11\\n5') == '33'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 2\") == \"4\"\nassert solution(\"5 3 11\") == \"30\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '35'\nassert solution('5 3 11\\n3') == '11'\nassert solution('5 3 11\\n4') == '12'\nassert solution('5 3 11\\n5') == '25'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n1\n''') == '30'\n''')"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aab\") == \"No\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abaccaba''') == 'Yes'\nassert solution('''aabbaa''') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abacaba\") == \"No\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abbacc') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abbccc') == 'No'\nassert solution('cddd') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abx') == 'No'\nassert solution('bb') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcdba') == 'No'\nassert solution('abcde') == 'Yes'\nassert solution('aabbccdd') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abbcc\") == \"No\"\n\"\"\""
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n\"\"\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 1\\n2 2\\n3 3\") == \"3\"\nassert solution(\"6 5\\n4 6\\n5 6\\n5 7\\n6 6\\n6 7\\n6 8\\n7 7\\n7 8\\n7 9\\n8 9\\n9 9\") == \"5\"\nassert solution(\"10 10\\n9 9\\n8 8\\n7 7\\n6 6\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\") == \"3\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == '3'\nassert solution('3 4') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '2'\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\narr = []\nfor i in range(n):\n    arr.append(int(sys.stdin.readline()))\n\narr.sort()\n\nfor i in range(n):\n    arr[i] = arr[i] * (k // n + 1)\n    k %= n\n\nprint(min(arr))"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '3'\n\"\"\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 1\n2 2\n3 3''') == '3', 'Wrong!'\nassert solution('''10 3\n5 5\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '5', 'Wrong!'\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('10 10') == '25'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"10 10\") == \"8\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"9 9\") == \"21\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"2 3\") == \"3\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        ans = 0\n        colors = [0, 1]\n        for _ in range(int(stdin)):\n            ans += colors.count(colors[0]) * colors.count(colors[1])\n            colors.remove(colors[0])\n            colors.remove(colors[1])\n            colors.append(colors[0])\n            colors.append(colors[1])\n        return str(ans)\n\n\nprint(Solution().solution(input()))\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"4\"\n\n'''"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 2') == '3'\nassert solution('4 3') == '5'\nassert solution('10 3') == '25'\nassert solution('100 4') == '4225'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n''') == '2'\nassert solution('''2 2\n''') == '4'\nassert solution('''2 3\n''') == '7'\nassert solution('''2 4\n''') == '16'\nassert solution('''3 4\n''') == '21'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\\n\") == \"10\"\nassert solution(\"20 4\\n3 4 2 1\\n\") == \"10\"\nassert solution(\"20 4\\n3 4 1 5 2 3\\n\") == \"10\"\nassert solution(\"20 8\\n8 6 1 5 3 2 7\\n\") == \"15\"\nassert solution(\"20 8\\n8 6 1 5 3 2 7\\n\") == \"15\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 4') == '13'\nassert solution('20 5') == '12'\nassert solution('20 6') == '14'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"10\"\nassert solution(\"2 3\") == \"11\"\nassert solution(\"10 3\") == \"9\"\nassert solution(\"100 3\") == \"102\"\nassert solution(\"5 3\") == \"5\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n7 10 15\\n\") == \"10\"\nassert solution(\"6 1\\n2 3 6\\n\") == \"10\"\nassert solution(\"10 4\\n10 10 15\\n\") == \"1\"\nassert solution(\"20 3\\n5 10 15\\n\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 1 5 3\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\", \"Should calculate the distance for 2 houses\"\nassert solution(\"1 5\") == \"5\", \"Should calculate the distance for 5 houses\"\nassert solution(\"3 3\") == \"4\", \"Should calculate the distance for 3 houses\"\nassert solution(\"5 8\") == \"12\", \"Should calculate the distance for 5 houses\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2\", \"Should be 2\"\nassert solution(\"5 3\") == \"5\", \"Should be 5\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"20 100\") == \"20\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('4 4 3 3') == '9'"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('1 2 3 4') == '10'\nassert solution('1 1 2 2') == '0'\nassert solution('4 5 2 2') == '5'\nassert solution('1 10 9 2') == '30'"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('2 7 8 5') == '14'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"6\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3\") == \"1 1\"\nassert solution(\"1 2 2 2\") == \"1 2\""
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"4 4 6 2\") == \"16\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"15\"\nassert solution(input()) == \"14\""
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('4 5 8 12') == '20'\nassert solution('1 1 1 1') == '1'\nassert solution('4 5 2 3') == '6'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 2 7') == '15'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"5 6 6 7\") == \"23\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('5') == 'WA x 1'\nassert solution('4') == 'TLE x 2'\nassert solution('3') == 'RE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n'''\nfrom typing import List\nfrom collections import Counter\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"AC\\n\") == \"3\"\nassert solution(\"WA\\nWA\\nAC\\n\") == \"1\"\nassert solution(\"AC\\nTLE\\nWA\\nWA\\nAC\\n\") == \"3\"\nassert solution(\"AC\\nWA\\nWA\\nTLE\\n\") == \"0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nAC\\nWA\\nAC\\nWA\\nAC') == 'AC x 3'\nassert solution('6\\nAC\\nAC\\nAC\\nWA\\nWA') == 'AC x 3'\nassert solution('6\\nAC\\nAC\\nWA\\nWA\\nAC') == 'AC x 3'\nassert solution('6\\nAC\\nAC\\nAC\\nWA\\nWA') == 'AC x 3'\nassert solution('6\\nAC\\nAC\\nAC\\nAC\\nWA') == 'AC x 3'\n\n'''"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AC x 3\"\nassert solution(input()) == \"WA x 1\"\nassert solution(input()) == \"TLE x 2\"\nassert solution(input()) == \"RE x 0\""
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"4\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"6\") == \"AC 1 WA 2 TLE 0 RE\""
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nAC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\nWA x 1\nTLE x 2\nRE x 0\n'''\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nAC\nTLE\nAC\n''') == 'AC x 3'\nassert solution('''\n1\nAC\n''') == 'AC x 1'\nassert solution('''\n5\nAC\nAC\nAC\nAC\nAC\n''') == 'AC x 5'\nassert solution('''\n2\nAC\nWA\n''') == 'AC x 2'\nassert solution('''\n4\nAC\nAC\nAC\nAC\n''') == 'AC x 4'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"23\") == \"27\"\nassert solution(\"24\") == \"27\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20') == '27'\nassert solution('21') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20') == '27'\nassert solution('21') == '27'\nassert solution('22') == '26'\nassert solution('23') == '25'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('21') == '27'\nassert solution('30') == '27'\nassert solution('30') == '27'\nassert solution('30') == '27'\nassert solution('30') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"27\""
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"21\\n\") == \"27\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '9'\nassert solution('11') == '3'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('21') == '27'\nassert solution('22') == '28'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('11') == '11'\nassert solution('22') == '22'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('14') == '0'\nassert solution('23') == '27'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"1 2 -3\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 2') == 'error'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"8\"\nassert solution(\"4 7\") == \"7\"\nassert solution(\"1 2\") == \"3\""
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"3 2\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"7\", \"3 + 5\"\nassert solution(\"1 2\") == \"3\", \"1 + 2\"\nassert solution(\"100 10\") == \"error\", \"100 + 10\""
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '9'\nassert solution('12 8') == '18'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '9'\nassert solution('3 7') == '6'\nassert solution('8 4') == 'error'"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"3\", \"Wrong\"\nassert solution(\"1 2 -1\") == \"error\", \"Wrong\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\", \"Minimum Distance\"\nassert solution(\"4\") == \"7\", \"Minimum Distance\"\nassert solution(\"5\") == \"2\", \"Minimum Distance\"\nassert solution(\"10\") == \"2\", \"Minimum Distance\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\nassert solution(\"4\\n2 3 7 9\\n\") == \"7\"\nassert solution(\"5\\n0 0 0 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '9'\n\ninput = int(input())"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '7'\nassert solution('6') == '6'\nassert solution('5') == '-1'\n\n'''"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"7\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4\\n\"\n    \"2 3 7 9\"\n) == \"7\"\n\nprint(solution(\n    \"4\\n\"\n    \"2 3 7 9\"\n))"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Input is empty. Expected output is also empty.\"\nassert solution(\"2 3 7 9\") == \"7\", \"Expected output is 7.\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 5 2\\n') == '1'\nassert solution('4\\n1 2 4\\n') == '2'\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\"\nassert solution(\"4\\n2 3 7 9\\n\") == \"7\"\nassert solution(\"4\\n1 2 3\\n\") == \"4\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '7'\nassert solution('4') == '7'\nassert solution('4') == '7'\nassert solution('4') == '7'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('1 4') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"1 5\") == \"No\"\nassert solution(\"1 6\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 3\n2 3\n3 4\n5 6\n7 8\n''') == 'Yes'\nassert solution('''1 2\n2 1\n3 2\n4 3\n5 4\n6 5\n7 6\n8 7\n9 8\n10 9\n''') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3\n1 2\n2 2\n1 3\n3 2\n1 2\n2 2\n1 3\n3 3\n3 4\n1 4''') == 'No'\n\nassert solution('''1 4\n1 2\n2 2\n1 3\n3 2\n1 2\n2 2\n1 3\n3 3''') == 'Yes'\n\nassert solution('''1 5\n1 2\n2 2\n1 3\n3 2\n1 2\n2 2\n1 3\n3 3''') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n') == 'Yes'\nassert solution('2 5\\n') == 'No'\nassert solution('3 2\\n') == 'No'\nassert solution('4 6\\n') == 'Yes'\nassert solution('2 4\\n') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n') == 'Yes'\nassert solution('1 1\\n') == 'Yes'\nassert solution('2 3\\n') == 'No'\nassert solution('1 2 3\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'Yes'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == 'Even'\nassert solution('10 5') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n') == 'Even'\nassert solution('1 2\\n') == 'Odd'\nassert solution('2 3\\n') == 'Odd'\nassert solution('1\\n') == 'Odd'\n\"\"\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"5 3\") == \"Odd\"\n\"\"\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n') == 'Even'\nassert solution('10 4\\n') == 'Odd'"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('3 3') == 'Odd'\n'''"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Even\"\nassert solution(\"5 5\") == \"Even\"\nassert solution(\"4 5\") == \"Odd\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 3''') == 'Even'\nassert solution('''3 4\n3 4''') == 'Odd'\n\n-----------------------------------------------------\n\n4. Write a program that takes a list of integer numbers and returns the\naverage of those numbers."
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n\") == \"Even\"\nassert solution(\"1 1\\n\") == \"Even\"\nassert solution(\"0 0\\n\") == \"Even\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == 'Even'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\n\"\"\""
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 5\n''') == '2'\nassert solution('''1 5\n''') == '2'\nassert solution('''5 5\n''') == '3'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n') == '2'\nassert solution('2 3\\n') == '4'\n\"\"\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 1') == '3'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 4\") == \"3\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 6]) == \"2\"\n\"\"\""
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6') == '2'\nassert solution('10 10') == '1'\nassert solution('1 9') == '0'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    2 1 4\n    2\n    1 1\n    2 3\n    ''') == '6 9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\nassert solution(\"2\") == \"6\\n9\\n\"\nassert solution(\"2 1 4\") == \"6 9\\n\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2 1 4\n2\n1 1\n2 3\"\"\") == \"6 9\"\nassert solution(\"\"\"2\n2 1 4\n2\"\"\") == \"4\"\nassert solution(\"\"\"2\n2 1 4\n1\"\"\") == \"4\"\nassert solution(\"\"\"2\n2 1 4\n2\"\"\") == \"4\"\nassert solution(\"\"\"1\n1 2\n1\"\"\") == \"1 2\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6\\n9\\n'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\") == \"6 9\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"9\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\\n9\"\nassert solution(\"5\") == \"13\\n17\"\nassert solution(\"3\") == \"6\\n9\"\nassert solution(\"3\") == \"6\\n9\""
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"9\"\nassert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '2000'\nprint('\"Run\" is the name of the executable.')\nprint('\"Help\" is a short phrase used to indicate the menu of commands.')\nprint('\"Exit\" is a short phrase used to terminate the program.')\nprint()\nprint('Commands:')\nprint('\"Run\"')\nprint('\"Help\"')\nprint('\"Exit\"')\nprint()\nprint('Read each line, read it to a variable, parse it, convert it to a number.')\nprint('Write each line of code to test the correctness of solution:')\nprint('Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2,..., D_K.')\nprint('She is shopping, and now paying at the cashier.')\nprint('Her total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier.')\nprint('However, as mentioned before, she is very particular about numbers.')\nprint('When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes.')\nprint('Under this condition, she will hand the minimum amount of money.')\nprint('Find the amount of money that she will hand to the cashier.')\nprint()\nprint('Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('N K')\nprint('D_1 D_2 \u2026 D_K')\nprint()\nprint('Output:')\nprint('Print the amount of money that Iroha will hand to the cashier.')\nprint()\nprint('Sample Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Sample Output:')\nprint('2000')\nprint()\nprint('Assertion:')\nprint('\"Run\" is the name of the executable.')\nprint('\"Help\" is a short phrase used to indicate the menu of commands.')\nprint('\"Exit\" is a short phrase used to terminate the program.')\nprint()\nprint('Commands:')\nprint('\"Run\"')\nprint('\"Help\"')\nprint('\"Exit\"')\nprint()\nprint('Read each line, read it to a variable, parse it, convert it to a number.')\nprint('Write each line of code to test the correctness of solution:')\nprint('Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2,..., D_K.')\nprint('She is shopping, and now paying at the cashier.')\nprint('Her total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier.')\nprint('However, as mentioned before, she is very particular about numbers.')\nprint('When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes.')\nprint('Under this condition, she will hand the minimum amount of money.')\nprint('Find the amount of money that she will hand to the cashier.')\nprint()\nprint('Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Output:')\nprint('2000')\nprint()\nprint('Sample Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Sample Output:')\nprint('2000')\nprint()\nprint('Assertion:')\nprint('\"Run\" is the name of the executable.')\nprint('\"Help\" is a short phrase used to indicate the menu of commands.')\nprint('\"Exit\" is a short phrase used to terminate the program.')\nprint()\nprint('Commands:')\nprint('\"Run\"')\nprint('\"Help\"')\nprint('\"Exit\"')\nprint()\nprint('Read each line, read it to a variable, parse it, convert it to a number.')\nprint('Write each line of code to test the correctness of solution:')\nprint('Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2,..., D_K.')\nprint('She is shopping, and now paying at the cashier.')\nprint('Her total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier.')\nprint('However, as mentioned before, she is very particular about numbers.')\nprint('When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes.')\nprint('Under this condition, she will hand the minimum amount of money.')\nprint('Find the amount of money that she will hand to the cashier.')\nprint()\nprint('Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Output:')\nprint('2000')\nprint()\nprint('Sample Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Sample Output:')\nprint('2000')\nprint()\nprint('Assertion:')\nprint('\"Run\" is the name of the executable.')\nprint('\"Help\" is a short phrase used to indicate the menu of commands.')\nprint('\"Exit\" is a short phrase used to terminate the program.')\nprint()\nprint('Commands:')\nprint('\"Run\"')\nprint('\"Help\"')\nprint('\"Exit\"')\nprint()\nprint('Read each line, read it to a variable, parse it, convert it to a number.')\nprint('Write each line of code to test the correctness of solution:')\nprint('Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2,..., D_K.')\nprint('She is shopping, and now paying at the cashier.')\nprint('Her total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier.')\nprint('However, as mentioned before, she is very particular about numbers.')\nprint('When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes.')\nprint('Under this condition, she will hand the minimum amount of money.')\nprint('Find the amount of money that she will hand to the cashier.')\nprint()\nprint('Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Output:')\nprint('2000')\nprint()\nprint('Sample Input:')\nprint('The input is given from Standard Input in the following format:')\nprint('1000 8')\nprint('1 3 4 5 6 7 8 9')\nprint()\nprint('Sample Output:')\nprint('2000')\nprint()\nprint('Assertion"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1000\") == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('100 10') == '200'\nassert solution('10000 8') == '20000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 4\n1 3 7 2 4 5 6 8 9 10\n''') == '2000'\nassert solution('''\n1000 8\n1 3 4 5 6 7 8 9 10\n''') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('10 2') == '2'\nassert solution('10000 1000 8') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\") == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n\") == \"2000\"\nassert solution(\"1000 4\\n1 3 2 4 5\\n\") == \"2400\"\nassert solution(\"1000 3\\n1 3 2 4 5\\n\") == \"1800\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\") == \"2000\""
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 4\\n1 2 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 7\\n1 3 5 7 8 9') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\n\nassert solution('''\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\n\nassert solution('''\n3 3\n1 2 3\n1 3\n2 3\n2 4\n''') == '2'\n\nassert solution('''\n3 3\n1 2 3\n1 3\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('2 3') == '2'\nassert solution('4 4') == '2'\n\n##\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '2'\nassert solution('1\\n1 2 3 4') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '1'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 5\n1 2 3 4 5\n1 3\n2 3\n2 4\n2 5\n3 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '10'\nassert solution('5') == '50'\nassert solution('3') == '20'\nassert solution('4') == '100'\nassert solution('2') == '10'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('7') == '11'\nassert solution('8') == '16'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3') == '7'\nassert solution('1\\n2') == '3'\nassert solution('6\\n8') == '30'\nassert solution('100\\n1') == '200'\nassert solution('1\\n2') == '3'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '10'\nassert solution('10') == '100'\nassert solution('15') == '1000'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '8'\nassert solution('5') == '16'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"10\", \"Should minimize the value displayed after N operations\"\nassert solution(\"4\\n3\") == \"7\", \"Should minimize the value displayed after N operations\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '10'\nassert solution('5 1') == '11'\nassert solution('4 0') == '4'"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('7\\n2') == '5'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"20\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"30\"\nassert solution(\"6\") == \"60\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"10\"\nassert solution(\"10 3\") == \"20\"\nassert solution(\"3 5\") == \"20\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('1') == '0'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['1']) == '1'\nassert solution(['0']) == '0'\nassert solution(['1\\n']) == '0'\nassert solution(['0\\n']) == '1'"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nprint(solution(input(\"Enter a number: \")))\n\"\"\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0', \"Wrong solution\"\nassert solution('0') == '1', \"Wrong solution\"\nassert solution('1') == '0', \"Wrong solution\"\nassert solution('1') == '0', \"Wrong solution\"\nassert solution('1') == '0', \"Wrong solution\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\nassert solution('13') == '13'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('125') == '176'\nassert solution('1+2') == '3'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\""
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n1\n1''') == \"4\"\nassert solution('''4\n4\n4\n4''') == \"24\"\nassert solution('''8\n8\n8\n8''') == \"72\"\nassert solution('''4\n4\n4\n4''') == \"25\"\nassert solution('''1\n1\n1\n1''') == \"4\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1+2') == '3'\nassert solution('2+4') == '6'\nassert solution('5+7') == '12'\nassert solution('5+5+5') == '10'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('1+2') == '3'\nassert solution('12+5') == '17'\nassert solution('125+2') == '26'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+2\") == \"3\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 3 4 5 6\\n') == '1'\nassert solution('4\\n3 2 4 1\\n') == '2'\nassert solution('2\\n2 3\\n') == '0'\nassert solution('3\\n2 3\\n') == '2'\nassert solution('9\\n1 2\\n') == '4'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"1\""
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('4 1 2 5 6') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"0\""
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"15800\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1020'\nassert solution('1') == '800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '900'\nassert solution('10') == '7500'\nassert solution('20') == '13600'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20\n''') == '15800'\nassert solution('''\n10\n''') == '8000'\n\n\"\"\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"30\") == \"16000\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"15\"\nassert solution(\"20\") == \"16000\"\nassert solution(\"100\") == \"200\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20') == '15800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '16000'\nassert solution('20') == '16000'\nassert solution('50') == '17500'\nassert solution('100') == '18000'\nassert solution('400') == '47000'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"15800\"\nassert solution(\"20\") == \"15800\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ant') == 'abc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\", \"Should be abc\"\nassert solution(\"obe\") == \"abe\", \"Should be abe\"\nassert solution(\"rec\") == \"ace\", \"Should be ace\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ant\nobe\nrec''') == 'abc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''ant\nobe\nrec''') == 'abc'\nassert solution('''ant\nobe\nrec''') == 'abc'\nassert solution('''ant\nob''') == ''\nassert solution('''a''') == ''\nassert solution('') == ''\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"abc\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ant') == 'abc', 'ERROR'\nassert solution('obe') == 'abc', 'ERROR'\nassert solution('rec') == 'abc', 'ERROR'"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['101', '101', '101']) == '2'\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == \"2\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n0\n1''') == '2'\nassert solution('''0\n1\n1''') == '0'\n'''"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"001\") == \"2\"\nassert solution(\"111\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ns_1s_2s_3\n''') == '2'\nassert solution('''\ns_0s_1s_2s_3\n''') == '3'\nassert solution('''\ns_0s_1s_0s_2s_3\n''') == '3'\nassert solution('''\ns_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_1s_"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\""
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"1011\") == \"1\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '2'"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\""
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('5\\n2\\n10000\\n9000\\n') == '19000'\nassert solution('4\\n2\\n10000\\n9000\\n') == '18000'\nassert solution('5\\n2\\n10000\\n9000\\n') == '18000'\nassert solution('5\\n1\\n10000\\n9000\\n') == '10000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"48000\"\nassert solution(\"5 2 3 10000 9000\") == \"48000\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n9000\\n\") == \"48000\"\nassert solution(\"4\\n3\\n1000\\n\") == \"100000\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '48000'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 10000 9000') == '48000'\nassert solution('1 1 1') == '1'\n\"\"\""
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '48000'\nassert solution('3') == '16000'\nassert solution('7') == '32000'\n\n\"\"\"\n\nN, K, X, Y = input().split()\nN = int(N)\nK = int(K)\nX = int(X)\nY = int(Y)\n\ntotal = 0\nfor i in range(K + 1):\n    total += (X if (i + K) < N else Y)\nprint(total)\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '48000'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 * 2') == '2'\nassert solution('1 / 2') == '0.5'\nassert solution('1 + 2 + 3') == '6'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"2 * 2\") == \"4\"\nassert solution(\"2 / 2\") == \"1\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 + 2') == '1'\nassert solution('1 - 2') == '-1'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"4 - 5\") == \"1\"\n\nsolution(\"1 - 2\")\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n\"\"\"\n\na, op, b = map(int, input().split())\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"2 / 3\") == \"1\"\nassert solution(\"5 - 2\") == \"3\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\n'''"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 -2') == '-3'\nassert solution('+1 -2') == '-1'\nassert solution('+1 -2') == '-1'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('2000') == 'ARC'\nassert solution('1200') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0\n0''') == 'ARC'\nassert solution('''1\n0''') == 'ABC'\nassert solution('''1000\n0''') == 'ARC'\nassert solution('''0\n1''') == 'ABC'\nassert solution('''1\n0''') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ARC'"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1202') == 'ARC'\nassert solution('1') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1211') == 'ABC'\nassert solution('1212') == 'ARC'\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('12000') == 'ABC'\nassert solution('12345') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == \"ABC\"\nassert solution(2) == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1200') == 'ARC'\n\"\"\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ABC', \"Wrong answer\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2 2') == '2'\nassert solution('1 2 3') == '0'"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 6') == '1300'\n\n---Output---\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"700 600 780\"\n    ) == \"1300\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"700 600 780\"\n) == \"1300\"\nassert solution(\n    \"1000 20 5\"\n) == \"1250\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\") == \"1\"\nassert solution(\"0 0 1\") == \"1\"\nassert solution(\"3 3 3\") == \"2\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n''') == '1300'\nassert solution('''\n700 600 780\n''') == '1480'\nassert solution('''\n500 500 500\n''') == '1750'"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1300\") == \"1300\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('750 100 5') == '1550'\n\n'''\nfrom math import inf"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"10 2 3\") == \"10\"\nassert solution(\"1000 1001 1010 1011\") == \"1000\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 600 780\") == \"1480\"\nassert solution(\"700 600 780\") == \"1380\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\na\nb''') == '#a#b#'\nassert solution('''2 4\na\nb''') == '#ab#a#'\n\nstdin = input()\n\nprint(solution(stdin))"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == ''\nassert solution(\"2 3\") == '#####'\nassert solution(\"4 3\") == '#####'\nassert solution(\"5 7\") == '#####'\nassert solution(\"10 4\") == '#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('4 4') == '#####\\n#####\\n#####\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"#####\\n#abc#\\n#arc#\"\nprint(solution(input()))"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nprint(solution(input()))\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"1 1\") == \"#####\\n#abc#\\n#abc#\\n#####\"\nassert solution(\"2 1\") == \"#####\\n#abc#\\n#####\\n#####\"\nassert solution(\"3 3\") == \"#####\\n#abc#\\n#abc#\\n#abc#\\n#####\""
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '#@#'\nassert solution('2 4') == '###'\nassert solution('5 4') == '#####'"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 2\") == \"#####\\n##abc##\\n##arc##\\n#####\""
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '10'\nassert solution('11') == '11'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('5\\nIIDI') == '0'\nassert solution('10\\nIIDIDIDIDD') == '3'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('7\\nIIDI') == '2'\nassert solution('9\\nDIDI') == '2'\nassert solution('1\\nI') == '1'\nassert solution('2\\nII') == '1'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '6'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n\nimport sys"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\nIIDID\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 2 2\") == \"4\"\nassert solution(\"1 1 2 1 2 2 2\") == \"3\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"11010 11331\") == \"4\"\nassert solution(\"11013 11332\") == \"4\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 4 5 6 7 8 9 10 11\n111221 123213 12411\n123321 123132 11213\n123421 123213 113212\n123121 123213 113211\n123321 123132 113212\n123121 123132 123211\n123321 123132 113212\n123321 123132 113213\n''') == '10'\n\"\"\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"11000 11332\") == \"0\"\nassert solution(\"11000 11011\") == \"4\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('12321') == '0'\nassert solution('1234') == '0'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11009 11332') == '4'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11001 11332') == '4'\nassert solution('11001 11332') == '4'"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11009 11332') == '4'"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nprint(solution(\"11009 11332\"))\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3 1 4\n''') == '3'"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 1 2 1 1 1 1\") == \"3\"\n\n'''\n\na, b, c = map(int, input().split())"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '3'\nassert solution('2 1 1') == '4'\nassert solution('3 1 1') == '5'\nassert solution('4 1 1') == '5'\nassert solution('5 1 1') == '5'"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 3\") == \"3\""
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 3 2\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 2 1\") == \"2\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\\n\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"2 1 4\") == \"4\"\nassert solution(\"5 1 4\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('3 1 4') == '3'\nassert solution('3 1 3 4 5 5') == '4'\nassert solution('3 3 3 4 5 5') == '2'\nassert solution('3 1 4 5 3') == '3'\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('3 3') == '3'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\") == \"12\"\nassert solution(\"2 3\\n1 2 3\") == \"6\"\nassert solution(\"10 20\\n1 2 3 4 5 6 7 8 9\") == \"32\"\nassert solution(\"1 2\\n1 2 3\") == \"3\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"12\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n\n''') == '3'\nassert solution('''\n10\n6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 3') == '12'\n\"\"\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"10 3\") == \"13\"\nassert solution(\"30 1\") == \"30\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 3 4 5\n''') == '12'\nassert solution('''\n1 1\n2\n''') == '2'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '12'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3\\n') == '12'\nassert solution('5 3\\n1 2 3 4 5\\n') == '12'\nassert solution('10 20 30 40 50\\n1 2 3 4 5 6 7 8 9 10\\n') == '120'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"12\"\nassert solution(\"4 5 2\") == \"8\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"2\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '12'\nassert solution('10 10') == '20'"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 4') == 'A'\nassert solution('3 2 7') == 'B'\nassert solution('3 5 7') == 'B'\nassert solution('9 9 9') == 'A'\nassert solution('100 99 99') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 7\") == \"1\"\nassert solution(\"4 7 1\") == \"2\"\nassert solution(\"10 10 7\") == \"2\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n\"\"\"\nx, a, b = map(int, input().split())"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 7\n''') == 'B'\nassert solution('''5 2 7\n''') == 'B'\nassert solution('''5 2 5\n''') == 'A'\nassert solution('''5 2 5\n''') == 'A'\nassert solution('''5 2 3\n''') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 7') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"3 10 5\") == \"A\""
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 1 1') == '1'\nassert solution('2 3 1') == '2'\nassert solution('4 5 1') == '2'\nassert solution('8 3 1') == '3'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\", \"Should return B\"\nassert solution(\"5 2 5\") == \"B\", \"Should return B\"\nassert solution(\"7 5 7\") == \"A\", \"Should return A\"\nassert solution(\"7 5 5\") == \"A\", \"Should return A\"\nassert solution(\"5 3 3\") == \"A\", \"Should return A\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 3\") == \"A\""
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('17/01/07') == '2017/01/07'\nassert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(solution(\"2017/01/07\"))\nprint(solution(\"2017/01/01\"))\nprint(solution(\"2017/01/01/01\"))\nprint(solution(\"2017/01/01/01/01\"))\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/27\") == \"2018/01/27\"\nassert solution(\"2017/12/27\") == \"2018/12/27\"\nassert solution(\"2017/12/29\") == \"2017/12/29\""
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/12') == '2017/01/12'\nassert solution('2017/01/25') == '2017/01/25'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01\") == \"2018/01\"\nassert solution(\"2017\") == \"2017\"\nassert solution(\"2017/\") == \"2017\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/12\") == \"2018/01/12\"\nassert solution(\"2017/01/1\") == \"2018/01/1\"\nassert solution(\"2017/01/22\") == \"2018/01/22\"\nassert solution(\"2017/01/31\") == \"2018/01/31\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/0718\") == \"2018/01/0718\"\nassert solution(\"2017/01/0715\") == \"2018/01/0715\""
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2018/01/08\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"201/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\nassert solution(\"201/01/08\") == \"2017/01/08\"\n\n\"\"\""
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"aac\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\""
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == \"aac\"\nassert solution('''\n5\npqrst\nuvwxyz\n''') == \"xyz\"\n'''\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''\n5\nmmbwe\naapmp\neipmv\ngipmw\nrpqxz\n''') == 'rpqxz'\nassert solution('''\n5\nkugd\nntizm\ntjlds\ndlutm\nhjklj\n''') == 'kugd'\nassert solution('''\n5\ndttm\naapmp\naopmm\ntjlds\nlptlk\n''') == 'lptlk'\nassert solution('''\n5\ntxzxz\nljkmn\nmggdw\nxhkzm\nlkgnm\n''') == 'xhkzm'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''4\nghi\njkl\nmno\npqrs\n''') == 'ghjklmnoqrps'\nprint(solution(input()))\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"cbaa\") == \"cba\"\nassert solution(\"daacc\") == \"aacc\"\nassert solution(\"acacac\") == \"acac\"\nassert solution(\"abaaac\") == \"aac\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n\nNote: The answer must be a string, even if it is empty.\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'aac'"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == ''\nassert solution('3') == 'a'\nassert solution('4') == 'abc'\nassert solution('5') == 'cbaa'\nassert solution('6') == 'acacac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\" +\n\"cbaa\\n\" +\n\"daacc\\n\" +\n\"acacac\") == \"aac\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n\"\"\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n24 30') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"7\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n24 30\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2\n15 15\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n10 5 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n9 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n18 21\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"12\""
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '10'\n\"\"\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"24\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"7\"\nassert solution(\"10\") == \"15\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4''') == '6'\n\"\"\"\nimport unittest\nimport math\nimport sys\n\nclass Solution():\n    def solution(self, stdin: str) -> str:\n        n, m = map(int, stdin.split())\n\n        # https://en.wikipedia.org/wiki/K-mer_problem\n        # Idea: Count the number of k-mers in any particular block\n        # n = 4, m = 5, k = 3\n        # for each block k_0, k_1, k_2:\n        # - m-1, m-2,..., m-k\n        # - m+1, m+2,..., m+k\n        # - k_0, k_1,..., k_m-1\n        # - k_0, k_1,..., k_m\n        # we can count them in log2(m) time\n        #\n        # k_0: 5^1, 5^2,... 5^(m-1)\n        # k_1: 5^1, 5^2,... 5^(m-2)\n        #...\n        # k_m: 5^1, 5^2,... 5^(m-m)\n        #\n        # we can find the total number of possible k_m-m-1 k_m-m-2,...,k_0\n        # we can write it in terms of the sum of the product of 5^(m-k) to 5^(m-m)\n        # 5^(m-m) = 5^(m-1) * 5^(m-2) *... * 5^(m-m-1)\n        # 5^(m-m) = 5^m - 1 = 5^(m-1) * 5^(m-2) *... * 5^(m-m-1)\n        # 5^m - 1 = 5^m - 5^(m-1) * 5^(m-2) *... * 5^(m-m-1)\n        # 5^m - 5^(m-1) * 5^(m-2) *... * 5^(m-m-1) = 5^(m-1) * 5^(m-2) *... * 5^m\n        #\n        # we can solve this in terms of the factorial, which is same for all cases\n        # and we can solve for m, since m and k are the same\n        # 5^m * factorial(m-1) * factorial(m-2) *... * factorial(m-m) = 5^m * 5^(m-1) * 5^(m-2) *... * 5^(m-m)\n        # 5^m * 5^(m-1) * 5^(m-2) *... * 5^(m-m) = 5^m * 5^m - 1 = 5^m * 5^(m-m)\n        # 5^m * 5^m - 1 = 5^(m+1) * 5^(m-m)\n        #\n        # note that m is always a positive integer\n        #\n        # so we can just use:\n        # n = m + 1\n        # m = n - 1\n        # which is same for all cases\n        # and we can solve for n\n\n        n = m + 1\n        m = n - 1\n        return int(math.factorial(n) / (math.factorial(m) * math.factorial(n - m)))\n\n\nclass Test(unittest.TestCase):\n    def test(self):\n        s = Solution()\n        self.assertEqual(s.solution(\"\"\"3 4\"\"\"), \"6\")\n        self.assertEqual(s.solution(\"\"\"8 10\"\"\"), \"27\")\n        self.assertEqual(s.solution(\"\"\"8 10\"\"\"), \"27\")\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'\n\"\"\"\nn, m = map(int, stdin.split())"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 4\n3 2 3 1 2\"\"\") == \"\"\"4\n\n--- Day 3: Toboggan Trajectory ---\n\nWith the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. You'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (.) and trees (#) you can see. For example:\n\n..##.......\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\n\n(Runtime: 24 ms, faster than 100.00% of Python3 online submissions for Number of Bounded Subarrays Within the K Different Size Groups. Memory Usage: 13.8 MB, less than 99.53% of Python3 online submissions for Number of Bounded Subarrays Within the K Different Size Groups.)\n\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n0 1\n0 2\n1 3\n1 4\n1 5''') == '6'\n\nassert solution('''4 4\n0 1\n0 2\n0 3\n1 4''') == '5'\n\nassert solution('''6 6\n0 1\n0 2\n1 3\n1 4\n0 5\n0 6\n1 5\n1 6''') == '8'\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'\n'''\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"6\"\nassert solution(\"1 1\") == \"4\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 4\") == \"8\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Possible'\nassert solution('3 5') == 'Impossible'\nassert solution('4 5') == 'Impossible'"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n10\n''') == 'Possible'\nassert solution('''2 1\n10\n''') == 'Impossible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Possible'\nassert solution('1 1') == 'Impossible'\nassert solution('3 5') == 'Possible'"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Possible'\n'''\n\nimport math\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Possible\"\nassert solution(\"4 5\") == \"Possible\"\n\nassert solution(\"5 5\") == \"Impossible\"\nassert solution(\"2 3\") == \"Impossible\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == 'Possible'"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"3 7\") == \"Impossible\"\nassert solution(\"7 8\") == \"Possible\"\nassert solution(\"12 8\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5\n    4 5\n    4 5\n    4 5''') == 'Possible'\nassert solution('''5 4\n    4 5\n    4 5\n    4 5\n    4 5''') == 'Impossible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Impossible\"\nassert solution(\"10 10\") == \"Possible\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 3') == 'Impossible'\nassert solution('3 5') == 'Impossible'\nassert solution('10 10') == 'Impossible'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''?tc????\ncoder''') == 'atcoder'\n\"\"\"\n\nimport sys\n\nsys.stdin = open('input.txt')"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"?tc????\") == \"btcoder\"\nassert solution(\"?tc????\") == \"ctcoder\"\nassert solution(\"?tc????\") == \"ztcoder\""
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('????') == '????'\nassert solution('coder') == 'atcoder'\nassert solution('??????') == '????'\nassert solution('????????') == '?????'"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"???c????\") == \"atcoder\"\nassert solution(\"??tc????\") == \"UNRESTORABLE\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'atcoder'\n\nE869121 Try to complete the provided solution that solves this problem.\n\nGiven a string S consisting of lowercase English letters and '?', find the longest string T such that both strings S and T are all substrings of a contiguous substring of S. The answer may be a substring of S with no characters '?'.\n\nIf there are more than one solutions, print any one of them.\n\nIf there are no solutions, print \"UNRESTORABLE\".\n\n-----Constraints-----\n - 1 \\leq |S|, |S'| \\leq 50\n - S' consists of lowercase English letters and?.\n -----Input-----\nS\nT'\n\n-----Output-----\nT\n\nThere are 35 strings that satisfy Condition 1: ttcoder, btcoder, ctcoder,..., ztcoder.\nAmong them, the lexicographically longest is ttcoder, so we can say T = ttcoder.\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\n\n\"\"\""
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder?') == 'atcoder'\nassert solution('coder??') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"atcoder\"\n\n'''"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'atcoder'\n\"\"\"\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder'\n\"\"\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2002\\n2017\\n') == '2032'\nassert solution('1\\n5\\n') == '5.0'\n\n'''\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('2002\\n1') == '2002'\nassert solution('1\\n2017') == '2017'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2002\n2017''') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2017'\nprint(solution(input()))\n\n\n'''\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('1000\\n5000') == '2000'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '2.0'\nassert solution('2\\n3') == '3.0'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2002\n2017''') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"25\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2032'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == 4\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n    string\n    string\n    string\n    \"\"\") == \"2\""
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n19931568 1000000 6\n\"\"\") == \"TLE\""
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10\n3''') == 'AC'\n\nassert solution('''1\n10001\n3''') == 'TLE'\n\nassert solution('''1\n100005\n3''') == 'TLE'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 0\\n'\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\n\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '2 4 8 0\\n4 0 4 0\\n16 16 16 16\\n32 16 16 32\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == '2 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\", \"solution\"\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\", \"solution\"\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\") == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\n\"\"\", \"solution\"\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n\n\"\"\", \"solution\"\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n4\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n\n\"\"\", \"solution\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n', 'TEST 1 FAILED'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n', 'TEST 2 FAILED'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '2 16 8 0\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n', 'TEST 3 FAILED'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n', 'TEST 4 FAILED'\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n', 'TEST 5 FAILED'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\n    \"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\n    \"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\n    \"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\n\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"2048 64 0 0\"\nassert solution(\"1024 1024 64 0\") == \"0 0 2048 64\"\nassert solution(\"2\") == \"0 0 0 0\"\n\n\"\"\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nH 2\nO\n''') == '0'\n\nassert solution('''\nC2H6 10\nC3H8\n''') == '6'\n\nassert solution('''\nCH3OH 1\nCH4\n''') == '1'\n\nassert solution('''\nC6H6OCH2O 10\nHCN\n''') == '12'\n\nassert solution('''\nC6H14 10\nC5H10\n''') == '12'"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == '0'\nassert solution(samples[1]) == '6'\nassert solution(samples[2]) == '12'\nassert solution(samples[3]) == '6'\nassert solution(samples[4]) == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nC2H6 10\nC3H8\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\nC6H6OCH2O 10\nHCN\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\nC6H14 10\nC5H10\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('H 2') == '0'\nassert solution('H 2 O') == '0'\nassert solution('H 2 O H') == '1'\nassert solution('C2H6 10') == '6'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"C6H12O2\") == \"0\"\nassert solution(\"C4H11\") == \"12\"\nassert solution(\"H2O\") == \"1\"\nprint(\"You're all set!\")"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"H 2\") == \"0\"\nassert solution(\"H 2\") == \"0\"\nassert solution(\"H 2\") == \"0\"\nassert solution(\"H 2\") == \"0\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"C 2\") == \"0\"\nassert solution(\"H2OC100H\") == \"6\"\nassert solution(\"C3H8\") == \"6\"\nassert solution(\"CH3OH 1\") == \"1\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"C6H14 10\") == \"12\"\nassert solution(\"C6H6OCH2O 10\") == \"0\"\nassert solution(\"CH3OH 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\",\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\n\nassert solution(\n    \"ABC HAPPYBIRTHDAY\",\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"FAIL\"\n\nassert solution(\n    \"ABC HAPPYBIRTHDAY\",\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"FAIL\"\n\nassert solution(\n    \"ABC HAPPYBIRTHDAY\",\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"PASS\""
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ABC HAPPYBIRTHDAYCACEY''') == 'PASS'\nassert solution('''ABC TRAGICBIRTHDAYCACEY''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAY''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAYC''') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('ABC') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nassert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY C') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ABC HAPPYBIRTHDAYCACEY\nSample Input 2:\nABC TRAGICBIRTHDAYCACEY\nSample Output 2:\nFAIL\n\nSample Input 3:\nABC HAPPYBIRTHDAY\nSample Output 3:\nPASS''') == 'PASS'"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAYCAC\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAYCACE\") == \"FAIL\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'FAIL'\n''')\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == 'ok so far'\nassert solution('21') == '] 20'\nassert solution('27') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n([] [] )\n''') == '] 7'\nassert solution('''\n([] () )\n''') == 'ok so far'\nassert solution('''\n([] [] )\n''') == 'ok so far'\nassert solution('''\n[ ([] ()) ]\n''') == '] 20'\nassert solution('''\n[ ([] ()) ]\n''') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''(([])[])((([][])))''') == '] 20'\nassert solution('''(((([][])))''') == 'ok so far'\nassert solution('''(((((()))))))''') == 'ok so far'\nassert solution('''((((()()))))))''') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"] 19\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[{}]') == ']'\nassert solution('[[]]') == ']'\nassert solution('[{[()()]}]') == ']'\nassert solution('[[()()]]') == ']'\nassert solution('[([]())]') == '] 0'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"ok so far\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ok so far\"\nassert solution(input()) == \"ok so far\""
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == ']'\nassert solution('13') == 'ok so far'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('2') == 'Player 2 lost'\nassert solution('3') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\napple\\nextra\\neat\") == \"Fair Game\"\nassert solution(\"2\\napple\\nextra\\neat\") == \"Player 2 lost\"\nassert solution(\"3\\napple\\nextra\\neat\") == \"Player 1 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\napple\near\nreal\nletters\nstyle\n\"\"\") == \"Fair Game\"\n\nassert solution(\"\"\"\n7\napple\nextra\napple\nnice\nletters\nstyle\n\"\"\") == \"Player 2 lost\"\n\nassert solution(\"\"\"\n2\napple\nneat\n\"\"\") == \"Player 1 lost\"\n\nprint(\"\u2705 Great job! \u2705\")\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\") == \"Player 2 lost\"\nassert solution(\"2\\napple\\nneat\") == \"Player 1 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n\"\"\""
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"100010\"\nassert solution(\"10\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '101000'\nassert solution('10') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000*100') == '100000'\nassert solution('10000+10') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1000+100\"\n    ) == \"10010\"\nassert solution(\n    \"1000+100\"\n    ) == \"1010\"\n\n\"\"\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"+\") == \"1\"\nassert solution(\"*\") == \"100\"\nassert solution(\"10+\") == \"1010\"\nassert solution(\"10+10\") == \"10100\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\nassert solution('10*') == '10100'\nassert solution('10+') == '1010'\nassert solution('*') == '100000'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000\\n+\\n100') == '100000'\nassert solution('10000\\n+\\n10') == '101010'\nprint(solution('10\\n+\\n100'))\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '100000'\nassert solution('+') == '1010'\nassert solution('*') == '10010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"10010\""
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\".1+1\") == \"10\"\nassert solution(\".1*10\") == \"100\"\nassert solution(\".1+1\") == \"10\"\nassert solution(\".1+1\") == \"10\"\nassert solution(\".1*10\") == \"100\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 out\\n\") == \"3\"\nassert solution(\"8 in\\n\") == \"6\"\nassert solution(\"52 out\\n\") == \"8\"\nassert solution(\"8 out\\n8 in\\n\") == \"11\"\nassert solution(\"8 out\\n8 in\\n8 in\\n\") == \"15\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 out''') == '3'\nassert solution('''8 in''') == '6'\nassert solution('''52 out''') == '8'\nprint('All test cases passed.')\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 out\n8 in\n8 out\n8 in\n8 out\n8 in\n8 out\n8 in''') == \"3\"\nassert solution('''52 out\n52 out\n52 out\n52 out\n52 out\n52 out\n52 out\n52 out''') == \"8\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\n----Hint----\nDo not use a for-loop to iterate through stdin.\n\n---Part Two---\nNow, we will extend the logic of the first step to apply more sophisticated string manipulation.\n\nWe will still use the logic defined above to calculate the extended name, but now we will apply a more sophisticated approach: using a modulo operation.\n\nThe extended name must not have any consecutive vowels, either at the start or at the end of the name.\n\nIf this is not the case, then we can only replace the first letter in the name with the vowel $a$.\n\nIf it is not the case, we need to replace the first vowel with the first consonant. We can replace $a$ with either of the following consonants $c$, $g$, or $k$.\n\nIf it is not the case, we can replace the first consonant with either of the following vowels $a$, $e$, $i$, $o$, or $u$.\n\nIf it is not the case, we can replace the first vowel with the first consonant.\n\nIf we can\u2019t find a vowel or consonant to replace, then we must be unable to extend the name.\n\nIf we are able to extend the name, we should return the extended name. If it is not possible to extend the name, we should return the original name.\n\nSample Input 2:\nmenolaxios mox\nSample Output 2:\nmenolaxiosexmox\n\nSample Input 3:\npamoli toxes\nSample Output 3:\npamolextoxes\n\nSample Input 4:\nalemaxe maxos\nSample Output 4:\nalemaxexmaxos\n\nSample Input 5:\nyamax alex\nSample Output 5:\nyamaxalexa\n\nSample Input 6:\nlewis alex\nSample Output 6:\nlewisalexa\n\"\"\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n'''"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"yes\""
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes', 'no'\nassert solution('2019') == 'no', 'no'\nassert solution('2020') == 'yes', 'no'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'yes'\nassert solution('3') == 'yes'\nassert solution('4') == 'yes'\nassert solution('5') == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 'no'\nassert solution('') == 'no'\nassert solution('1') == 'yes'\nassert solution('10') == 'yes'\nassert solution('2010') == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nprint('Solution:')\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('0 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('0 0 0 0 0 0 0 0 0 0') == '0'\nassert solution('1 2 3 4 5') == '64'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\n\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\n\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3\\n') == '64'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n4\\n') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3''') == '64'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 330'\n\nassert solution('0 0') == '0 0'\nassert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '2 570'"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'''\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\n\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"2 330\"\nassert solution(sample_input_2) == \"2 570\"\nassert solution(sample_input_3) == \"0 0\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\naaaaaaaa\n''') == '1'\nassert solution('''\naaaaaaaa\n''') == '1'\nassert solution('''\naaaaaaaa\n''') == '1'\nassert solution('''\naaa\n''') == '1'\nassert solution('''\naba\n''') == '2'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n\n'''\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n\"\"\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\n---EXPLANATION---\nThe input string $s$ can be broken into substrings abc, cab, bca, and abc, and each of those substrings (except the first) is a right-rotation of the previous substring, but with its last character moved to the front. We'll call these $k$-periodic substrings $a$ and $b$, and we want to find the smallest $k$ that satisfies this property:\n\n$$k = \\floor\\log_2(|a|)$$\n\nSince $|a|$ is a multiple of $k$, we can pick the smallest $k$ such that $|a| \\ge k$, which is the smallest $k$ that satisfies the condition.\n\nThe output of the function is $k$, which is the smallest $k$ such that $|s|$ is a multiple of $k$, and if we chop the string up into $|s|/k$ substrings of length $k$, then each of those substrings (except the first) is a right-rotation of the previous substring, but with its last character moved to the front.\n\n---SAMPLE INPUTS---\nSample Input 1:\nabccabbcaabc\nSample Output 1:\n3\n\nSample Input 2:\nabbaabbaabba\nSample Output 2:\n2\n\nSample Input 3:\nabcdef\nSample Output 3:\n6\n\n\"\"\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\""
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n1 2\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1 2\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"6 10\") == \"1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1'\nassert solution('3 6\\n1 2 3 4 5\\n11 12 15 19 24 30') == '0\\n1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 10\") == \"2 10\"\nassert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"3 6\") == \"1\""
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(samples[0]) == '2'\nassert solution(samples[1]) == '1 2'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '1'\nassert solution(sample_input_2) == '2'\nassert solution(sample_input_3) == '1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 12\n1 2 4\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''\n3 6\n1 2 3\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n''') == '1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10\") == \"1 2\"\nassert solution(\"4 12\") == \"1 2\"\nassert solution(\"5 10\") == \"1 2\""
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5551212\\n') == '1'\nassert solution('5519876\\n') == '0'\nassert solution('5055555\\n') == '0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5551212\n5519876\n5055555''') == '0'\nassert solution('''555\n198\n777''') == '1'\nassert solution('''555\n198\n555''') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\""
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('-32/1') == '-40/1'\nassert solution('0/1') == '0/1'\nassert solution('0/0') == '0/0'\nassert solution('-0/0') == '-0/0'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''20/1\n-20/1''') == '0/1'\nassert solution('''-19/1\n-19/1''') == '0/1'\nassert solution('''-33/1\n-33/1''') == '0/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('32/1') == '0/1'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('0/1') == '0/1'\n\n\"\"\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nC E G\nD F# A\n''') == 'Transposition'\n\nassert solution('''\n7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n\nassert solution('''\n7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n\nassert solution('''\n3\nC E G\nD F# A\n''') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Transposition\"\nassert solution(\"7\") == \"Inversion\"\nassert solution(\"3\") == \"Nonsense\""
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"Transposition\"\nassert solution(\"\") == \"Nonsense\"\nassert solution(\"1\") == \"Nonsense\"\nassert solution(\"2\") == \"Transposition\"\nassert solution(\"3\") == \"Retrograde\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"Transposition\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Transposition'\nassert solution('7') == 'Inversion'\nassert solution('7') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\nC E G\nD F# A\nC E G\nC C G G''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\nassert solution('''7\nA A A A A A\n''') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Retrograde\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Inversion\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'Transposition', solution('7')\nassert solution('3') == 'Nonsense', solution('3')\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\n'''''\n\nimport sys\nimport os"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Gah kove bababa'\nassert solution(input()) == 'Catacillar'\nassert solution(input()) == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n''')"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''I love ba-na-na''') == 'Gah kove bababa'\nassert solution('''Cat-a-pil-lar''') == 'Catacillar'\nassert solution('''Co-ding is the best''') == 'Cociccah gs the bestuh'\nassert solution
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3''') == '12'\nassert solution('''4\n5\n6''') == '16'\nassert solution('''10\n100\n200''') == '200'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\"\"\""
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '6\\n', 'First'\nassert solution('4\\n') == '16\\n', 'Second'\nassert solution('3\\n') == '14\\n', 'Third'\nprint('Almost there')\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"\nassert solution(\"25\") == \"36\"\nassert solution(\"33\") == \"26\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '3'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('5 10\\n4 8 1 9 7') == '2'"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n5 4 5 3 2''') == '3'\nassert solution('''5 10\n1 2 3 4 5\n5 4 5 3 2''') == '2'\nassert solution('''5 10\n1 2 3 4 5\n5 4 5 3 2''') == '4'\nassert solution('''4 10\n1 2 3 4 5\n5 4 5 3 2''') == '4'\nassert solution('''5 10\n1 2 3 4 5\n5 4 5 3 2''') == '2'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3'\nassert solution('5 10\\n4 8 1 9 7\\n') == '4'\nassert solution('4 10\\n1 3 1 7\\n') == '2'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 3 4 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 10\n4 8 1 9 7\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 10\n1 3 1 7\n\"\"\") == \"4\"\n\nprint(solution(input()))"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''4 10\n1 3 1 7\n''') == '4'\nprint('all test cases passed')\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2'\nassert solution('4 10\\n1 3 1 7\\n') == '4'\nprint('You passed all the tests!')"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 1\\n1 0 1\\n') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n0 0 0\n1 0 1\n''') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\n\"\"\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 1\n1 0 0\n0 1 0''') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nprint('Tests passed!')"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 3\n''') == '1.875'\nassert solution('''\n6 2\n''') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n''') == '1.0'\nassert solution('''\n2 3\n''') == '1.875'\nassert solution('''\n6 2\n''') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 6\") == \"4\"\nassert solution(\"6 2\") == \"3.5\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1.0'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n''') == '2.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''2 3\n''') == '1.875'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('100 100 100') == '1 100'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\") == \"1 6\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"3 1 1\") == \"1 2\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\nprint(solution(*input().split()))\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('-1 -1 -1') == '3 3'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('10 10 10') == '10 10 10'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 0') == '1 4'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1 0\n''') == '0 0'\nassert solution('''\n4 2 7\n''') == '1 4'\nassert solution('''\n3 0 0\n''') == '1 6'\nprint(solution(input))\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_lines) == '1 4'\nassert solution(input_lines) == '1 6'\n\"\"\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0\\n') == '0 0'\nassert solution('4 2 7\\n') == '1 4'\nassert solution('3 0 0\\n') == '1 6'\nassert solution('4 1 1\\n') == '2 0'\nassert solution('4 4 7\\n') == '4 6'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\nBWBW\\nWBWB\\nBWWB\\nBWBW\\nSample Output 2\\n0\"\n) == \"0\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0', 'First'\nassert solution('6') == '1', 'Second'\nassert solution('4') == '1', 'Third'\nassert solution('12') == '0', 'Fourth'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '0'\nassert solution('4\\nBWWB\\nWBWB\\nWBBW\\nBWBW\\n') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"0\""
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1'\n\nassert solution('''\n4\nBWWB\nWBWB\nWBBW\nBBWBW\n''') == '0'\n\nassert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\", \"Should return 1 if correct\"\nassert solution(\"4\") == \"0\", \"Should return 0 if incorrect\"\nassert solution(\"6\") == \"0\", \"Should return 0 if correct\"\nassert solution(\"6\") == \"0\", \"Should return 0 if incorrect\""
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nBWBW\nWBWB\nWBBW\n''') == '1'\nassert solution('''4\nBWWB\nWBWB\nWBBW\n''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\n''') == '2 1'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\n''') == '3 4'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\n''') == '3 7'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\n''') == '1 2'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\n''') == '3 2'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == \"2 1\\n3 4\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 1\"\nprint(solution())\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 1 2\n    2 6 3 4\n    2 4 1 3\n    1 2 1 3\n    1 4 5 8\n    \"\"\"\n) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution('''\n2\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\") == \"2 1\""
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 3'\nassert solution('''\n1 5 1 7\n4 6 3 4\n5 1 2 4\n1 6 2 4\n1 6 4 4\n''') == '3 4'\nassert solution('''\n1 5 1 7\n4 6 3 4\n5 1 2 4\n1 6 2 4\n1 6 4 4\n''') == '3 4'\nassert solution('''\n1 5 1 7\n4 6 3 4\n5 1 2 4\n1 6 2 4\n1 6 4 4\n''') == '3 4'\nassert solution('''\n1 5 1 7\n4 6 3 4\n5 1 2 4\n1 6 2 4\n1 6 4 4\n''') == '3 4'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[3,2,0,-4] 1\") == \"true\"\nassert solution(\"[1,2] 0\") == \"true\"\nassert solution(\"[1] -1\") == \"false\"\nassert solution(\"[] -1\") == \"false\"\nassert solution(\"[1,2] 1\") == \"true\""
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"[3,2,0,-4]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1]\") == \"false\""
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n[1]\n0\n''') == 'true'\nassert solution('''\n[3,2,0,-4]\n1\n[0]\n0\n''') == 'false'\n'''\n\nfrom linked_list import LinkedList"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n[1,2,3,4]\n3\"\"\") == 'true'\nassert solution(\"\"\"\n[1,2]\n2\"\"\") == 'false'\nassert solution(\"\"\"\n[1]\n0\"\"\") == 'true'\nassert solution(\"\"\"\n[1]\n-1\"\"\") == 'false'\nassert solution(\"\"\"\n[]\n-1\"\"\") == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'true'\nassert solution('3 2 0 -4') == 'true'\nassert solution('1') == 'false'\nassert solution('3 2') == 'true'\nassert solution('1') == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('[3,2,0,-4]', 1) == 'true'\nassert solution('[1,2]', 0) == 'true'\nassert solution('[1]', -1) == 'false'\nassert solution('[]', -1) == 'false'\nassert solution('[3,2,0,-4]', 2) == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[3,2,0,-4]', 1) == 'true'\nassert solution('[1,2]', 0) == 'true'\nassert solution('[1]', -1) == 'false'\nassert solution('[]', -1) == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4]) == True\nassert solution([1,2]) == True\nassert solution([1]) == True\nassert solution([]) == False\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('[3,2,0,-4]\\n1') == 'true'\nassert solution('[1,2]\\n0') == 'true'\nassert solution('[1]\\n-1') == 'false'\n\n\"\"\"\n\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        if not head:\n            return False\n\n        slow = head\n        fast = head\n        while fast.next and fast.next.next:\n            slow = slow.next\n            fast = fast.next.next\n            if slow == fast:\n                return True\n        return False\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[2,7,11,15]\") == \"0 1\"\nassert solution(\"[1,2,3,4,5,6,7,8,9]\") == \"2 3\"\nassert solution(\"[11, 13, 7, 15]\") == \"1 2\"\nassert solution(\"[12, 13, 7, 15]\") == \"2 2\"\nassert solution(\"[13, 7, 15]\") == \"0 1\"\n\"\"\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0 1\"\n\"\"\"\n\n\"\"\"\nexplanation:\nfor i in range(n):\n    if nums[i] == target - nums[j]:\n        return i, j\n\"\"\"\n\n\n\"\"\"\nexplanation:\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nfor i in nums:\n    if i == target - i:\n        return i, target - i\n\"\"\"\n\n\n\"\"\"\nexplanation:\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2, 3, 4, 5}\ntarget = 6\n\nnums = {1, 2"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n4\n2 1 3\n3\n2 3 1\n10\n1 2 3 4 5 6 7 8 9 10\n9\n''') == '0 0'\nprint('You passed!')\nassert solution('''\n5\n3 2 1 0\n3\n2\n1\n0\n10\n9\n''') == '0 1'\nprint('You passed!')\nassert solution('''\n8\n2 4 8\n8\n''') == '0 1'\nprint('You passed!')\nassert solution('''\n3\n5 4 2\n1\n1\n''') == '0 1 2'\nprint('You passed!')\nassert solution('''\n1\n1\n''') == '0'\nprint('You passed!')\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 7 11 15\n''') == '[0, 1]\nassert solution('''\n2 7 11 15\n''') == '[0, 1]\n''')\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2,7,11,15\") == \"0,1\"\nassert solution(\"2,7,11,15\") == \"1,3\"\nassert solution(\"2,7,11,15\") == \"2,4\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0 1'\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n7\n11\n15\n''') == '0 1'\nassert solution('''\n1\n2\n3\n4\n''') == '-1 -1'\n'''\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n6\\n9\\n') == '1 2'"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n''') == '1 0'\nassert solution('''\n5 4\n-1 -2\n1 2\n-1 2\n1 -2\n''') == '0 2'\nassert solution('''\n7 10\n1 2\n4 6\n9 -2\n1 1\n9 -2\n''') == '0 1'\nassert solution('''\n8 9\n-9 -2\n-5 -5\n4 2\n-4 -8\n1 -6\n7 5\n-1 -3\n4 -3\n''') == '1 2'\nassert solution('''\n9 1\n-6 -7\n2 2\n-1 2\n1 -2\n''') == '0 2'\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n7\\n') == '0 1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nprint('ALL TEST CASES PASSED')\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('8') == '2'\nassert solution('12') == '2'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2\n2 4\n1 2\n2 3\n2 3\n''') == '1'\nassert solution('''\n5\n1 2\n2 4\n1 2\n2 3\n2 3\n''') == '1'\nassert solution('''\n6\n1 2\n2 4\n1 2\n2 3\n2 3\n3 4\n''') == '1'\n'''\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n2\n3\n4\n5\n3\n4\n''') == '0'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('100') == '3'"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '3'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 2 2 1\n''') == '4'\nassert solution('''\n1\n7\n''') == 'impossible'\nassert solution('''\n1\n1\n1 2\n''') == '3'\nassert solution('''\n2\n7\n''') == 'impossible'\nassert solution('''\n3\n5\n1 2 2 1\n1 3 3 3\n''') == '5'\n\nprint('All tests passed!')"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2 3 4 5''') == 'impossible'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2 2 1\nSample Input 3:\n3\n1 1 3\nSample Output 3:\nimpossible\n''') == 'impossible'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'impossible'\nassert solution('1') == '4'\nassert solution('1') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('1') == 'impossible'\n'''"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '4'\nassert solution('3 7') == '4'\nassert solution('4 3 5 2 1') == '7'\n\nfrom collections import deque"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n2 2 2 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n1 2 2 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"1\\n3 7\") == \"impossible\"\nassert solution(\"10\\n10 9 10 9 8 7 9 8 7 6 5 5 4 3 2 1\") == \"10\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"52\"\nassert solution(\"10000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"impossible\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"11 1\") == \"11\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"12 1\") == \"12\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n184 1\n\"\"\") == \"180\"\n\nassert solution(\"\"\"\n123450995 1\n\"\"\") == \"123451000\"\n\nassert solution(\"\"\"\n2023 50995 1\n\"\"\") == \"2020011000\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '123451000'\nprint('solution() is ok')\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''184 1\n12345995 1''') == '123451000'\nassert solution('''123450995 1\n12345995 1''') == '123459950'\nassert solution('''123450995 1\n123459950 1''') == '123459950'\nassert solution('''123450995 1\n123459950 1''') == '123459950'\nassert solution('''123450995 1\n123459950 1''') == '123459950'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n3\n''') == '2'\nassert solution('''\n10\n2\n''') == '8'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n2\n1 1\n2 2\n\"\"\") == \"0.001150\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.000000'\nassert solution('4') == '0.000000'\nassert solution('4') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000'\nassert solution('3\\n2 1\\n1 0\\n1 1') == '0.666667'\nassert solution('10\\n0 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '2.311513'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1') == '0.000000'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '1.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n2 2\n3 3\n''') == '0.000000'\nassert solution('''\n3\n0 1\n1 0\n1 1\n''') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n2 2\n3 3\n''') == '0.000000'\nassert solution('''3\n1 1\n2 2\n3 3\n''') == '0.500000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 1\\n2 2') == '0.000000'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 4 6 8\""
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'\nassert solution('''12\n5\n4 2 6 8 7\n2 5 6 7\n3 6 9\n2 7 2 6\n4 5 2 7\n4 1 3 5 6\n3 2 3 4 4\n1 2 1 2 2\n''') == '1 2 4 1 2 3 2'"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 2\\n3 2 3 4\") == \"1\\n2\"\nassert solution(\"6\\n4 3 2 5 6\\n3 5 6\") == \"5\\n6\"\nassert solution(\"9\\n5 2 1 4 8\\n1 3 3 1 5\\n2 4 7 1 6\\n2 6 7 2 8\\n3 5 8 1 4\\n4 8 4 8 8\\n1 6 6 6 8\\n1 5 2 1 4 8\\n2 5 8 1 6\\n3 2 3 2 1\\n4 8 8 2 3\\n6 4 5 1 5\\n5 8 5 2 2\\n4 5 5 5 6\\n8 5 6 6 2\\n5 7 7 7 5\\n8 5 6 6 7\\n8 6 7 7 4\\n2 7 7 5 2\\n4 8 8 5 2\\n4 5 5 2 3\\n2 6 6 3 2\\n5 8 6 6 3\\n2 7 6 7 6\\n3 5 5 4 5\\n2 7 8 7 3\\n5 5 5 3 4\\n5 4 4 7 5\\n6 4 4 7 4\\n3 5 8 5 1\\n1 8 6 8 5\\n2 5 8 8 5\\n7 5 6 7 8\\n8 8 8 8 8\\n5 7 7 8 7\\n8 5 6 7 2\\n8 4 8 8 5\\n8 4 5 6 5\\n1 5 5 5 5\\n3 8 8 8 8\\n4 5 6 5 7\\n5 3 3 7 2\\n8 6 5 6 5\\n1 2 2 7 2\\n3 4 4 5 5\\n6 6 6 5 5\\n8 1 1 5 1\\n8 5 5 5 5\\n4 5 5 5 5\\n2 2 2 5 1\\n1 4 5 3 4\\n2 4 4 4 4\\n4 2 2 3 2\\n2 5 2 3 2\\n6 4 4 3 2\\n4 4 4 2 1\\n4 3 3 3 2\\n4 2 2 2 2\\n2 3 3 2 2\\n4 1 4 2 3\\n2 5 3 3 3\\n1 1 2 3 2\\n3 4 4 3 2\\n2 4 5 3 3\\n3 3 3 4 3\\n1 3 3 3 3\\n3 2 2 4 3\\n1 3 4 4 3\\n2 3 2 3 2\\n4 3 2 3 2\\n1 2 4 3 4\\n4 4 4 4 4\\n1 4 3 4 4\\n4 3 3 3 4\\n4 4 4 4 4\\n5 1 1 4 4\\n1 1 4 4 4\\n4 4 4 4 4\\n1 3 3 4 4\\n4 3 3 4 4\\n1 4 3 4 4\\n4 3 3 3 4\\n3 3 3 3 4\\n4 3 3 4 3\\n3 3 3 4 4\\n2 2 2 3 4\\n1 4 4 4 4\\n2 2 4 4 4\\n4 4 4 4 4\\n1 2 2 4 4\\n2 3 2 4 4\\n4 4 4 4 4\\n1 4 3 4 4\\n1 4 4 4 4\\n1 3 3 3 4\\n3 4 4 4 4\\n2 4 4 4 4\\n4 4 4 4 4\\n2 4 4 4 4\\n1 3 3 3 4\\n1 4 4 4 4\\n1 4 4 4 4\\n2 3 3 3 4\\n1 4 4 4 4\\n1 3 4 4 4\\n1 2 3 4 4\\n4 4 4 4 4\\n4 3 4 4 4\\n1 4 4 4 4\\n4 3 4 4 4\\n3 3 3 3 4\\n3 2 2 4 3\\n1 2 2 3 2\\n2 1 1 3 2\\n3 4 4 4 4\\n1 1 2 3 2\\n2 3 3 3 2\\n2 4 4 4 4\\n4 3 3 3 2\\n3 4 4 4 4\\n4 4 4 4 4\\n3 4 4 4 4\\n1 3 3 3 4\\n2 4 4 4 4\\n4 3 3 3 4\\n1 4 4 4 4\\n3 2 2 4 3\\n1 4 4 4 4\\n1 4 4 4 4\\n1 3 4 4 4\\n2 3 3 3 4\\n2 4 4 4 4\\n4 3 3 3 4\\n4 3 3 3 4\\n3 3 3 3 4\\n2 2 2 4 3\\n1 4 4 4 4\\n1 4 4 4 4\\n2 3 2 4 4\\n3 4 4 4 4\\n4 4 4 4 4\\n2 4 4 4 4\\n2 4 4 4 4\\n2 4 4 4 4\\n1 4 4 4 4\\n1 3 3 3 4\\n1 4 4 4 4\\n3 4 4 4 4\\n1 4 4 4 4\\n4 4 4 4 4\\n1 4 4 4 4\\n3 4 4 4 4\\n1 2 2 2 4\\n1 3 2 2 4\\n1 3 3 3 2\\n2 1 3 3 2\\n1 4 4 4 4\\n2 4 4 4 4\\n2 4 4 4 4\\n1 4 4 4 4\\n3 4 4 4 4\\n4 4 4 4 4\\n4 4 4 4 4\\n2 1 1 4 3\\n2 2 2 3 2\\n4 2 4 4 4\\n1 3 3 3 4\\n2 3 4 4 4\\n1 4 4 4 4\\n2 4 4 4 4\\n1 4 4 4 4\\n3 3 3 3 4\\n4 4 4 4 4\\n2 4 4 4 4\\n3 4 4 4 4\\n1 3 3 3 4\\n4 2 2 2 4\\n1 3 2 2 4\\n2 2 2 2 2\\n4 4 4 4 4\\n1 3 2 2 4\\n2 2 2 2 2\\n4 4 4 4 4\\n1 3 2 2 4\\n2 4 4 4 4\\n4 4 4 4 4\\n1 1 1 1 1\\n1 1 1 1 1\\n2 1 2 1 1\\n2 1 2 1 1\\n1 1 2 1 1\\n1 1 1 1 1\\n2 1 2 1 1\\n1 2 1 1 1\\n1 2 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\\n') == '1 2 4'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\\n') == '1 2 4 6 8'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4'"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nprint(solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n'''))\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 4 6 8\"\nassert solution([[3, 2, 1], [3, 2, 3], [3, 2, 4], [4, 2, 1], [4, 2, 3], [4, 2, 4], [5, 2, 1], [5, 2, 3], [5, 2, 4], [6, 2, 1], [6, 2, 3], [6, 2, 4], [7, 2, 1], [7, 2, 3], [7, 2, 4]]) == \"1 2 3 4 6 7 8\""
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"4 3 4\") == \"36\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '60'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '60'\nassert solution('''2 2 2''') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2 3\n\"\"\") == \"12\"\nassert solution(\"\"\"\n2 2 2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 4 5\n\"\"\") == \"60\"\nassert solution(\"\"\"\n3 1 5\n\"\"\") == \"36\"\nassert solution(\"\"\"\n3 2 5\n\"\"\") == \"72\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4\n5\n''') == '60'\nassert solution('''\n2\n2\n2\n''') == '8'\nassert solution('''\n3\n2\n2\n''') == '24'\nassert solution('''\n1\n0\n0\n''') == '2'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6666666666666667'\n\nassert solution('''\n3\n1 -1 4\n''') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n0 2 3\n\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"\n3\n2 -1 4\n\"\"\") == \"2.5\"\n\nassert solution(\"\"\"\n4\n-1 -1 -1 -1\n\"\"\") == \"1.00000\"\n\nassert solution(\"\"\"\n1\n1 1 1\n\"\"\") == \"1.00\"\n\nassert solution(\"\"\"\n2\n1 -1 0\n\"\"\") == \"0.0\""
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6666666666666667'\nassert solution('''\n3\n1 -1 4\n''') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1.0\"\nassert solution(\"3\") == \"1.3333333333333333\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 2\nSample Input 3:\n9\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nSample Output 3:\n1.000000\n''') == '1.000000'\nassert solution('''\n5\n-1 -1 -1 -1 -1\nSample Input 4:\n10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nSample Output 4:\n1.25\n''') == '1.25'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 0 2\n1 -1 4\n''') == '1.5'\nassert solution('''3\n3 0 2\n0 -1 4\n''') == '2.5'\nassert solution('''5\n3 0 2 0 4\n1 -1 4\n''') == '0.8333333333333334'\nassert solution('''5\n3 0 2 0 4\n1 -1 4\n''') == '1.8333333333333334'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6666666666666667'\nprint(solution('''\n2\n-1 4\n'''))\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3 0 2\n''') == '1.6666666666666667'\n\nassert solution('''3\n1 -1 4\n''') == '2.5'\n\nassert solution('''8\n3 -1 1 4 2 3 -1\n''') == '2.25'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 0 2 3 0\n10''') == '1.6666666666666667'\nassert solution('''2\n3 4\n3\nSample Input 3:\n3\n0 0 0\nSample Output 3:\n0.3333333333333333''') == '0.3333333333333333'\nassert solution('''3\n2 1 0\n4\nSample Input 4:\n3\n1 0 0\nSample Output 4:\n0.6666666666666667''') == '0.6666666666666667'\nassert solution('''5\n0 0 0 0\n5\nSample Input 5:\n2\n1 -1\nSample Output 5:\n1.0000000004\n''') == '1.0000000004'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n3\n\"\"\") == \"3\"\nassert solution(\"\"\"\\\n10\n\"\"\") == \"9\"\nassert solution(\"\"\"\\\n20\n\"\"\") == \"19\"\nassert solution(\"\"\"\\\n100\n\"\"\") == \"99\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '8'\nassert solution('5 2') == '3'\nassert solution('5 20') == '17'\nassert solution('15 12') == '7'\nassert solution('5 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('8') == '2'\nassert solution('25') == '17'\nassert solution('35') == '19'\nassert solution('55') == '23'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"4 6\") == \"8\"\nassert solution(\"5 9\") == \"13\"\nassert solution(\"6 12\") == \"19\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n') == '4'\nassert solution('12\\n5\\n') == '7'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nprint(solution(open(\"input.txt\", \"r\").read().strip()) )\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''123864 123865''') == '1'\nassert solution('''198765 198769''') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5 8') == '1'\nassert solution('123456 123467') == '0'\nassert solution('12345 12345') == '1'\nassert solution('123456 1234567') == '2'\nassert solution('123456 12345678') == '3'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 1\nassert solution('0 1') == 1\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n    '123864 123865',\n])) == '1'\nassert solution('\\n'.join([\n    '198765 198769',\n])) == '0'\nassert solution('\\n'.join([\n    '121423 121424',\n])) == '0'\nassert solution('\\n'.join([\n    '1234567 1234567',\n])) == '1'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n\nimport math"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\""
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '0.5'\nassert solution('2\\n3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('12') == '0.50000000'\nassert solution('123') == '0.66666667'"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n''') == '0.50000000'\nassert solution('''2\n''') == '0.66666667'\nassert solution('''3\n''') == '0.33333333'\nassert solution('''4\n''') == '0.16666667'\nassert solution('''5\n''') == '0.05555556'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n4''') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == '0.50000000'\nassert solution(\"3\") == '0.66666667'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\\\n180\n''') == 'triple 20'\nassert solution('''\\\n96\n''') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'triple 19'\nassert solution('3') =='single 9'\nassert solution('4') == 'double 15'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'impossible'\nassert solution() =='single 13'\nassert solution() == 'double 17'\nassert solution() =='single 19'\nassert solution() == 'double 17'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"180\\n\") == \"triple 20\"\nassert solution(\"96\\n\") == \"triple 19\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'triple 2'\nassert solution('10') == 'triple 3'\nassert solution('9') =='single 2'\nassert solution('12') == 'triple 3'\nassert solution('13') == 'triple 3'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nprint(solution(input()))\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"180\") == \"single 20\"\nassert solution(\"96\") == \"single 19\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '36'\nprint(solution(input()))\n\n- In computer science, a right triangle is considered a right angled triangle if and only if it is one of the following two cases:\n- It is a right angle.\n- It is a right-angled triangle.\n\nLet $x$ be the length of the longest side of the triangle, and let $y$ be the length of the shortest side. If we assume that the longest side is $x$ and the shortest side is $y$, then the following expression can be simplified to:\n\n$xy$ is the length of the longest side.\n$x^2 + y^2 = (x^2 + y^2) / 2$ is the area of the right-angled triangle.\n$xy$ is the side of the right-angled triangle.\nWe can eliminate the first condition, and obtain the following equation:\n\n$xy^2 = x^2 + y^2 - (x^2 + y^2) / 2$ is the area of the right-angled triangle.\nLet $x$ and $y$ be the lengths of the longest and shortest sides of the right-angled triangle, respectively.\n\nWe can also solve the same problem for a triangle with the sides $x_1, x_2, x_3$, and the lengths of the longest and shortest sides, respectively.\n\nGiven that the hypotenuse is always the longest side, we can then define:\n\n$x^2 + y^2 = x^2 + y^2 - (x^2 + y^2) / 2$ is the area of the right-angled triangle.\n$x^2 + y^2 = (x^2 + y^2) / 2$ is the area of the right-angled triangle.\n\nIn the first case, we solve for the lengths of the longest side and the shortest side, and obtain:\n\n$x = 2y - 2$ and $y = 2x - 2$.\nIn the second case, we solve for the lengths of the longest side and the shortest side, and obtain:\n\n$x = 3y - 5$ and $y = 3x - 5$.\nWrite a function that takes as input three sides of a right-angled triangle and returns the length of the longest side.\n\n---\n\nBy:\nJohn Greiner\n---"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 2 2\n\"\"\") == \"36\"\nassert solution(\n\"\"\"\n10 4 7\n\"\"\") == \"168\"\nassert solution(\n\"\"\"\n5 2 5\n\"\"\") == \"75\"\nassert solution(\n\"\"\"\n1 2 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 4 7\n''') == '168'\nassert solution('''\n5 2 2\n''') == '36'\nassert solution('''\n2 8 2\n''') == '20'\nassert solution('''\n10 4 7\n''') == '168'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 4\n3 4 5\n''') == '36'\nassert solution('''\n1 1 1\n1 2 2\n''') == '3'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 2''') == '36'\nassert solution('''10 4 7''') == '168'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4 7\n''') == '168'\nassert solution('''\n5 2 2\n''') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 2''') == '36'\nassert solution('''10 4 7''') == '168'"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 3') == '168'\nassert solution('3 3 2') == '36'\n\n------------------------------------------\n\nGiven the dimensions of the cake, and the distances between the edges, how many pieces are needed?\n\nimport math"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5\n4\n''') == '288'\nassert solution('''\n2\n10\n3\n''') == '216'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 10\n5 8\n''') == '1'\n\nassert solution('''1\n3 10\n5 8\n''') == '7'\n\nassert solution('''3\n1 1\n2 2\n3 3\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 10\\n') == \"7\"\nassert solution('2\\n3 8\\n5 8') == \"1\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    \"1\",\n    \"3 10\",\n    \"5 8\"\n]) == \"7\"\nassert solution([\n    \"2\",\n    \"3 8\",\n    \"5 8\"\n]) == \"1\"\n\ninput()\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 10\\n5 8\") == \"1\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"\nassert solution(\"1\\n5 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n3 10\n5 8\nSample Input 3:\n3\n1 5\n1 2\nSample Output 3:\n0\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 8\\n5 8\\n\") == \"1\""
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n10 20\n5 20\n\"\"\") == \"7\"\nassert solution(\"\"\"\n1\n20 30\n5 30\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n10 20\n5 20\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n10 20\n5 20\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n10 20\n5 20\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '7'\nassert solution('2 3 1 10') == '3'\nassert solution('3 8 5 9') == '4'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3,10,2]) == 7\nassert solution([3,8,5]) == 1\nassert solution([3,8,2,6]) == 1\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nSimon says smile.\n''') =='smile.'\n\nassert solution('''2\nSimon says raise your right hand.\nLower your right hand.\n''') =='raise your right hand.\n\nassert solution('''3\nSimon says raise your left hand.\nLower your left hand.\n''') =='raise your left hand.\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nSimon says smile.\nLower your right hand.\n\"\"\") == \" smile\"\nassert solution(\"\"\"\nSimon says raise your right hand.\nLower your left hand.\n\"\"\") == \" raise your right hand.\"\nassert solution(\"\"\"\nSimon says raise your right hand.\nLower your left hand.\n\"\"\") == \"Lower your left hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') =='smile'\nassert solution('2') == 'raise your right hand'\nassert solution('3') == 'raise your left hand'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\nLower your right hand.') =='smile.'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.') =='raise your right hand.\\n raise your left hand.'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.') =='raise your right hand.'\nassert solution('4\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.') =='raise your right hand.'\nassert solution('5\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.') =='raise your right hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"2\\nSimon says raise your right hand.\\nLower your right hand.\\n\") == \" raise your right hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"2\\nSimon says smile.\\nLower your right hand.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says smile.\\nLower your right hand.\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"4\\nSimon says smile.\\nLower your right hand.\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"5\\nSimon says smile.\\nLower your right hand.\\nSimon says smile.\\nLower your left hand.\\nSimon says smile.\\n\") == \" smile.\\n\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\nSimon says raise your left hand.\nSimon says raise your right hand.\n\"\"\") == \"raise your left hand.\\nraise your right hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your left hand.'\nassert solution('3') == 'raise your right hand.'\nassert solution('4') == 'raise your left hand.'\nassert solution('5') == 'raise your right hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\nSimon says smile.\n\"\"\") == \" smile.\"\nassert solution(\"\"\"\n2\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n\"\"\") == \" raise your right hand.\nassert solution(\"\"\"\n3\nSimon says raise your right hand.\n\"\"\") == \"\"\nassert solution(\"\"\"\n4\nSimon says lower your left hand.\n\"\"\") == \" lower your left hand.\"\nassert solution(\"\"\"\n5\nSimon says raise your right hand.\n\"\"\") == \"\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 0 4 6 10 12 16 18''') == '5'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\\n\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\\n\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 4 6 10 12 16 18') == '5'\nassert solution('0 0 4 6 10 12 16 18') == '0'"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('2 3 5 7 11 13 17 19') == '19'\nassert solution('1 2 4 6 10 12 16 18') == '5'\nassert solution('-1 2 3 4 5 6 7 8 9') == '18'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 0 4 6 10 12 16 18\n''') == '5'\nassert solution('''\n1 2 4 6 10 12 16 18\n''') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 0 4 6 10 12 16 18\n''') == '5'\nassert solution('''\n1 2 4 6 10 12 16 18\n''') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n\n\"\"\""
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"0 0 4 6 10 12 16 18\n    1 2 4 6 10 12 16 18\"\"\") == \"5\"\nassert solution(\n    \"\"\"0 0 4 5 1 8 17 19\n    1 2 4 5 1 8 17 19\"\"\") == \"0\"\nassert solution(\n    \"\"\"5 0 0 0 1 2 4 6 10 12 16 18\n    5 0 1 2 4 6 10 12 16 18\"\"\") == \"0\"\nassert solution(\n    \"\"\"5 1 0 0 1 2 4 6 10 12 16 18\n    5 1 1 2 4 6 10 12 16 18\"\"\") == \"0\"\nassert solution(\n    \"\"\"5 0 0 0 0 1 2 4 6 10 12 16 18\n    5 1 2 4 6 10 12 16 18\"\"\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\n\nassert solution('2 1') == '0 1'\n\nassert solution('2 1') == '0 1'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4 1\\nA\\nA\\nG\\nT') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == '3'\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0 1'\n\"\"\""
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\nAA\nAT\nTT\nTC\n''') == '3'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 2') == '2'\nassert solution('4 1') == '1'\nassert solution('4 10') == '10'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC\n''') == \"3\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nprint(\"Hurray! All test cases passed.\")"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aab\") == \"a\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a') == 'a'\nassert solution('bb') == 'b'\nassert solution('ab') == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"b\"\nassert solution(\"aaaa\") == \"a\""
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\nassert solution('acb') == '-'"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '-1'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Wrong answer\"\nassert solution(\"ab\") == \"-1\", \"Wrong answer\"\n\"\"\"\nimport itertools"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"5 10\") == \"Dr. Chaz needs 9 more piece[s] of chicken!\""
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20 100\n''') == 'Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''\n2 3\n''') == 'Dr. Chaz will have 1 piece of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 100\n''') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('''\n2 3\n''') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 100\\n') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3\\n') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 100\\n') == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution('2 3\\n') == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution('20 100') == \"Dr. Chaz will have 80 pieces of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20 100\n2 3\n''') == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution('''20 100\n100 2\n''') == \"Dr. Chaz will have 0 pieces of chicken left over!\"\n\n\"\"\""
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''20 100\n2 3''') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(input_string) == \"Dr. Chaz needs 1 more piece of chicken!\"\n\"\"\""
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''20 100\n2 3''') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('''20 10\n5 2''') == 'Dr. Chaz will have 2 pieces of chicken left over!'\nassert solution('''20 10\n6 5''') == 'Dr. Chaz needs 2 more piece[s] of chicken!'\nassert solution('''20 10\n20 5''') == 'Dr. Chaz needs 2 more piece[s] of chicken!'\nassert solution('''20 10\n20 6''') == 'Dr. Chaz will have 1 piece of chicken left over!'\n\"\"\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2\") == \"-2\"\nassert solution(\"3 10\") == \"0\"\nassert solution(\"3 30\") == \"0\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '-2'\nassert solution('3 10') == '0'\nassert solution('3 10') == '0'\n\n'''\nimport itertools"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '0'\nassert solution('3 10') == '-2'\nassert solution('1 1 2') == '-2'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 10\n1 1 2\n2 2 2\n3 2 1\n\"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n3 30\n1 1 1\n5 2 3\n5 2 1\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '-2'\nassert solution('3 10') == '0'"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 2 2\\n1 1 1\\n\") == \"0\"\nprint(solution(\"5 2 5 2\\n5 2 2 5\\n3 2 1\\n2 5 3\\n\"))"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '-2'\nassert solution('3 30') == '0'"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"luka\\n\"\n    \"o#a#\\n\"\n    \"kula\\n\"\n    \"i#a#\\n\"\n) == \"kala\", \"First example\"\n\nassert solution(\n    \"10 10\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n    \"###t###\\n\"\n) == \"t\", \"Second example\""
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'as'\n\"\"\""
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'luka'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'i'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == 'as'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'as'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"asa\"\n\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == \"kala\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"kala\"\nassert solution(\"4 4\") == \"as\"\nassert solution(\"10 10\") == \"as\"\nassert solution(\"3 5\") == \"kas\"\nassert solution(\"5 5\") == \"ska\"\n\n\"\"\""
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n3 3\na#b\nab\nb#a\n''') == 'bab'\nassert solution('''\n3 3\na#b\nab\nb#a\n''') == 'aab'\nassert solution('''\n5 6\na#b\nab\na#c\nac\nd#e\n''') == 'abce'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == \"kala\", \"First\"\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == \"as\", \"Second\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nNSEW\n''') == '4'\nassert solution('''\nNSEW\n''') == '4'\nassert solution('''\nNSEW\n''') == '4'\nassert solution('''\nNSEW\n''') == '4'\nassert solution('''\nNSEW\n''') == '4'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('NSEW') == '4'\nassert solution('NSEWNWN') == '12'\nassert solution('NSEWNWNESWW') == '14'\nassert solution('NSEWNESWSW') == '15'\n\nInput:\nNSEW\nOutput:\n4\n\nInput:\nNSEWNESWW\nOutput:\n12\n\nInput:\nNSEWNESW\nOutput:\n5\n\nInput:\nNSEWNESWNEESW\nOutput:\n14\n\nInput:\nNSEWNESWSEESW\nOutput:\n15\n\nInput:\nNSEWNESWSEESWNESW\nOutput:\n17\n\nInput:\nNSEWNESWSEESWNESWNW\nOutput:\n20\n\nInput:\nNSEWNESWSEESWNESWSE\nOutput:\n21\n\nInput:\nNSEWNESWSEESWNESWSEESW\nOutput:\n25\n\nInput:\nNSESW\nOutput:\n0\n\nInput:\nNSESWW\nOutput:\n6\n\nInput:\nNSESW\nOutput:\n1\n\nInput:\nNSESWN\nOutput:\n0\n\nInput:\nNSESWNW\nOutput:\n1\n\nInput:\nNSESWNNW\nOutput:\n1\n\nInput:\nNSESWNWWN\nOutput:\n5\n\nInput:\nNSESWNWWN\nOutput:\n6\n\nInput:\nNSESWNWWW\nOutput:\n8\n\nInput:\nNSESWNWWWN\nOutput:\n10\n\nInput:\nNSESWNWWWNWS\nOutput:\n11\n\nInput:\nNSESWNWWWNWW\nOutput:\n12\n\nInput:\nNSESWNWWWNWWW\nOutput:\n12\n\nInput:\nNSESWNWWWNWWWN\nOutput:\n13\n\nInput:\nNSESWNWWWNWWWN\nOutput:\n13\n\nInput:\nNSESWNWWWNWW\nOutput:\n14\n\nInput:\nNSESWNWWWN\nOutput:\n14\n\nInput:\nNSESWNWW\nOutput:\n15\n\nInput:\nNSESWNW\nOutput:\n16\n\nInput:\nNSESWN\nOutput:\n17\n\nInput:\nNSEN\nOutput:\n0\n\nInput:\nNSENES\nOutput:\n1\n\nInput:\nNSENWW\nOutput:\n1\n\nInput:\nNSENW\nOutput:\n1\n\nInput:\nNSENWS\nOutput:\n2\n\nInput:\nNSENWWS\nOutput:\n3\n\nInput:\nNSENWWWN\nOutput:\n5\n\nInput:\nNSENWWWNN\nOutput:\n6\n\nInput:\nNSENWWWNWW\nOutput:\n8\n\nInput:\nNSENWWWNWWW\nOutput:\n9\n\nInput:\nNSENWWWNWWW\nOutput:\n10\n\nInput:\nNSENWWWNWW\nOutput:\n11\n\nInput:\nNSENWWWNWW\nOutput:\n12\n\nInput:\nNSENWWWNWW\nOutput:\n13\n\nInput:\nNSENWWWN\nOutput:\n14\n\nInput:\nNSENWW\nOutput:\n15\n\nInput:\nNSENW\nOutput:\n16\n\nInput:\nNSEN\nOutput:\n17\n\nInput:\nN\nOutput:\n0\n\nInput:\nNNW\nOutput:\n1\n\nInput:\nN\nOutput:\n1\n\nInput:\nNN\nOutput:\n2\n\nInput:\nNNW\nOutput:\n3\n\nInput:\nNN\nOutput:\n4\n\nInput:\nNNNW\nOutput:\n5\n\nInput:\nNNN\nOutput:\n6\n\nInput:\nNN\nOutput:\n7\n\nInput:\nNN\nOutput:\n8\n\nInput:\nNNNNW\nOutput:\n9\n\nInput:\nNNNWW\nOutput:\n10\n\nInput:\nNNNN\nOutput:\n11\n\nInput:\nNNNWW\nOutput:\n12\n\nInput:\nNNNW\nOutput:\n13\n\nInput:\nNNNW\nOutput:\n14\n\nInput:\nNN\nOutput:\n15\n\nInput:\nNN\nOutput:\n16\n\nInput:\nNN\nOutput:\n17\n\nInput:\nN\nOutput:\n0\n\nInput:\nN\nOutput:\n1\n\nInput:\nN\nOutput:\n2\n\nInput:\nN\nOutput:\n3\n\nInput:\nN\nOutput:\n4\n\nInput:\nN\nOutput:\n5\n\nInput:\nN\nOutput:\n6\n\nInput:\nN\nOutput:\n7\n\nInput:\nN\nOutput:\n8\n\nInput:\nN\nOutput:\n9\n\nInput:\nN\nOutput:\n10\n\nInput:\nN\nOutput:\n11\n\nInput:\nN\nOutput:\n12\n\nInput:\nN\nOutput:\n13\n\nInput:\nN\nOutput:\n14\n\nInput:\nN\nOutput:\n15\n\nInput:\nN\nOutput:\n16\n\nInput:\nN\nOutput:\n17\n\nInput:\nN\nOutput:\n0\n\nInput:\nN\nOutput:\n1\n\nInput:\nN\nOutput:\n2\n\nInput:\nN\nOutput:\n3\n\nInput:\nN\nOutput:\n4\n\nInput:\nN\nOutput:\n5\n\nInput:\nN\nOutput:\n6\n\nInput:\nN\nOutput:\n7\n\nInput:\nN\nOutput:\n8\n\nInput:\nN\nOutput:\n9\n\nInput:\nN\nOutput:\n10\n\nInput:\nN\nOutput:\n11\n\nInput:\nN\nOutput:\n12\n\nInput:\nN\nOutput:\n13\n\nInput:\nN\nOutput:\n14\n\nInput:\nN\nOutput:\n15\n\nInput:\nN\nOutput:\n16\n\nInput:\nN\nOutput:\n17\n\nInput:\nN\nOutput:\n0\n\nInput:\nN\nOutput:\n1\n\nInput:\nN\nOutput:\n2\n\nInput:\nN\nOutput:\n3\n\nInput:\nN\nOutput:\n4\n\nInput:\nN\nOutput:\n5\n\nInput:\nN\nOutput:\n6\n\nInput:\nN\nOutput:\n7\n\nInput:\nN\nOutput:\n8\n\nInput:\nN\nOutput:\n9\n\nInput:\nN\nOutput:\n10\n\nInput:\nN\nOutput:\n11\n\nInput:\nN\nOutput:\n12\n\nInput:\nN\nOutput:\n13\n\nInput:\nN\nOutput:\n14\n\nInput:\nN\nOutput:\n15\n\nInput:\nN\nOutput:\n16\n\nInput:\nN\nOutput:\n17\n\nInput:\nN\nOutput:\n0\n\nInput:\nN\nOutput:\n1\n\nInput:\nN\nOutput:\n2"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\nassert solution(\"NEENWEENEEN\") == \"10\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"NNNWSWEEE\") == \"3\"\nassert solution(\"NNNWSWEEEW\") == \"3\"\nassert solution(\"NWSSEWWES\") == \"5\"\nassert solution(\"NWSSEWWEE\") == \"6\"\nassert solution(\"NWSSE\") == \"4\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nENWN\n''') == 'WN'\nassert solution('''\nNSWE\n''') == 'NWSE'\nassert solution('''\nN\n''') == 'N'\nassert solution('''\nS\n''') == 'S'\nassert solution('''\nW\n''') == 'W'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\""
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WNWM\") == \"5\"\nassert solution(\"WNES\") == \"4\"\nassert solution(\"WE\") == \"1\"\nassert solution(\"WNS\") == \"2\"\nassert solution(\"WNSE\") == \"4\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r'WNSEW') == r'\\N{DEGREE SIGN}45\\N{DEGREE SIGN}30\\N{DEGREE SIGN}45\\N{DEGREE SIGN}30\\N{DEGREE SIGN}45\\N{DEGREE SIGN}30\\N{DEGREE SIGN}45\\N{DEGREE SIGN}30'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4\n1 2 3 4''') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n1 / 2 = 3 - 4'\nassert solution('''0 4 2 2\n0 4 2 2''') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\n\nassert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\", \"First\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\", \"Second\"\nassert solution(\"5 5 7 7\") == \"5 + 5 = 7 + 7\", \"Third\"\nassert solution(\"3 3 3 3\") == \"3 * 3 = 9\", \"Forth\"\nassert solution(\"4 4 4 4\") == \"4 / 4 = 1\", \"Fifth\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"BANANA PIDZAMA\nSAMPLE OUTPUT 1\"\"\"\n) == \"\"\".P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\nSAMPLE OUTPUT 2\"\"\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BANANA PIDZAMA') == '...P....I...D...Z...B...'\nassert solution('MAMA TATA') == '...M...A...T...'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".\"\nassert solution(\"MAMA TATA\") == \".M.\"\n\"\"\"\nfrom typing import List\n\ninput_string = input()\n\nrow1 = \"\"\nrow2 = \"\"\n\nrow1 = input_string[0]\nrow2 = input_string[1]\n\ncommon = \".\"\n\nrow1 = row1[0] + common\nrow2 = row2[1] + common\n\nrow1_length = len(row1)\nrow2_length = len(row2)\n\nfor index in range(row2_length):\n    row1 += common\n    row2 += common\n\nfor index in range(row1_length):\n    print(row1[index], row2[index])\n\n\"\"\"\n\nrow1 = \"\"\nrow2 = \"\"\n\nrow1 = input_string[0]\nrow2 = input_string[1]\n\nrow1_length = len(row1)\nrow2_length = len(row2)\n\nprint(row1_length)\n\nfor index in range(row2_length):\n    row1 += \".\"\n    row2 += \".\"\n\nfor index in range(row1_length):\n    print(row1[index], row2[index])\n\n\"\"\""
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABBA\") == \"4\"\nassert solution(\"CCBB\") == \"4\"\nassert solution(\"BANANA\") == \".B..\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".\".join([\"P\"*30]*4)\nassert solution(\"MAMA TATA\") == \".\".join([\"T\"*30]*3)"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''BANANA PIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA'''\nassert solution('''MAMA TATA''') == '''.T..\nMAMA\n.T..\n.A..'''\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == 'BANANA.PIDZAMA'\nassert solution('MAMA TATA') == 'MAMA.TATA'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABBA') == '4'\nassert solution('CCBB') == '4'"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10'\nassert solution('2\\n1 365\\n20 28') == '365'"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''4\n0 1\n-3 1\n0 1\n-5 1\n''') == '1'\nassert solution('''3\n0 1\n3 2\n5 6''') == '3'\nassert solution('''5\n0 1\n0 2\n0 3\n0 4\n0 5''') == '5'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n5\n1 2\n4 5\n7 8\n10 11\n12 13\n''') == '10'\nassert solution('''\n7\n5 6\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n''') == '14'\nassert solution('''\n1\n7 7\n''') == '7'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''2\n1 365\n20 28\n''') == '365'\nassert solution('''6\n10 14\n13 17\n25 26\n1 98\n20 28\n''') == '98'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n10 14\n13 17\n25 26\"\"\") == \"10\"\nassert solution(\"\"\"3\n1 365\n20 28\n\"\"\") == \"365\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n4\n1 365\n20 28\n25 26\n27 28\n''') == '365'\nassert solution('''\n1 365\n1 365\n''') == '365'\nassert solution('''\n1 3\n1 2\n''') == '2'\nassert solution('''\n3\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"0 1\""
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nprint(solution(input()))\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"0 1\"\nassert solution('4') == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"0 1\"\nassert solution('4') == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2 3'"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"0 1\"\nassert solution('4') == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == '0 1'\nassert solution('''\n5\n''') == '2 3'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2\n3 100 99\n2 100 99\n\"\"\") == \"A 0 99\"\nassert solution(\"\"\"\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\") == \"A 0 99\"\nassert solution(\"\"\"\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\") == \"A 1 197\"\nassert solution(\"\"\"\n5 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\") == \"A 0 99\"\nassert solution(\"\"\"\n2 2\n3 100 99\n2 100 99\n3 100 99\n\"\"\") == \"A 0 99\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'A 100 49\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == 'A 0 99'\nassert solution('1 5') == 'A 1 197'\nassert solution('8 5') == 'A 1 197'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\""
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 3'\n    '1 100 200'\n    '2 100 99'\n    '3 100 50'\n    '3 100 50'\n    '2 100 98'\n    ) == 'A 100 49'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'A 1 197'\nassert solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49'\nassert solution('''\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"168\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"168\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2\\n1\\n4\\n3') == '168'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('3\\n2\\n1\\n') == '1'\nassert solution('6\\n4\\n3\\n') == '0'\nassert solution('5\\n4\\n3\\n') == '9'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"2\"\nassert solution(\"2\\n1\\n2\\n2\") == \"2\"\nassert solution(\"2\\n1\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '168'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n1\nABC\nDEF\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n2\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n2\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n1\nABC\nABC\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF', \"Wrong Answer\"\nassert solution('''\n2 3\nAB\nCD\n2\n''') == 'AB', \"Wrong Answer\"\nassert solution('''\n2 3\nAB\nCD\n2\n''') == 'CD', \"Wrong Answer\"\nassert solution('''\n1 1\nA\n1\n1\n''') == 'A', \"Wrong Answer\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF'\nassert solution('''\n3 3\nABC\nDEF\n1\n''') == 'CADBEF'\nassert solution('''\n3 3\nABC\nDEF\n5\n''') == 'CADBEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nABC\\nDEF\\n0') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\nABC\\nDEF') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CDBEAF'\n\n\"\"\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('2 4\\nHBCG\\nSDAF') == 'SDAFEB'\nassert solution('2 4\\nHBCG\\nSDAF') == 'SDAFEB'"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF', 'First'\nassert solution('''\n3 4\nABC\nDEF\nABC\nDEF\n''') == 'CDBEAF', 'Second'\nassert solution('''\n3 5\nABC\nDEF\nABC\nDEF\nABC\nDEF\n''') == 'CDBEAEF', 'Third'\nassert solution('''\n3 4\nABC\nDEF\nABC\nDEF\nABC\nDEF\n''') == 'CDBEAEF', 'Fourth'\nassert solution('''\n3 3\nABC\nDEF\nABD\n''') == 'ABCDEFABD', 'Fifth'\n\nprint(solution('''\n5 2\nBCD\nGHA\n'''))\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T') == '4'\nassert solution('2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\n\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'\n\nassert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '1'\n\nassert solution('''1\n1\n100 T\n100 T\n''') == '100'\n\nassert solution('''1\n5\n100 T\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 T\n100 N\n100 T\n100 T\n100 N\n100 T\n100 T\n100 N\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 N\n100 N\n100 T\n100 T\n100 T\n100 T\n100 N\n100 N\n100 N\n100 T\n100 T\n100 T\n100 N\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 N\n100 N\n100 N\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n3\n10 T\n30 T\n20 N\n10 T\n20 N\n20 P\n10 T\n20 N\n20 P\n10 T\n20 N\n20 P''') == '4'\nassert solution('''5\n3\n10 T\n30 T\n20 T\n50 T\n10 T\n20 N\n20 P\n10 T\n20 N\n20 P''') == '1'\nassert solution('''6\n1\n10 T\n30 T\n20 T\n50 T\n10 T\n20 N\n20 P\n10 T\n20 N\n20 P''') == '5'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1\n2\n3''') == '2'\nassert solution('''4\n1\n2\n3\n4''') == '3'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4') == '6'\nassert solution('6 8') == '22'\n\n'''\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\nSample Input 2:\n6 8\nSample Output 2:\n22\n''') == '6'\nassert solution('''3 2\nSample Input 2:\n1 1\nSample Output 2:\n0\n''') == '0'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\n\nimport sys\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"22\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n\") == \"1\\n\"\nassert solution(\"10\\n5\\n\") == \"5\\n\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7') == '7'\nassert solution('6 7') == '12'"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '4'\nassert solution('6 8') == '22'\nprint(solution(input()))"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('6 8') == '22'\nassert solution('30 30') == '3600'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n4 3 2 1\\n\") == \"1\"\nassert solution(\"5 2\\n4 5 2 1\\n\") == \"1\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\nprint('all tests passed')"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3\n2 1 2\n3 5 3\n''') == '1'\nassert solution('''\n3 4\n3 2 1 2\n2 4 1\n''') == '2'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4') == '0'\nassert solution('1 4') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 4\n4 3 2 1''') == '0'\nassert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n1 2 3\n6 5 4\n7 8 9\"\"\") == \"1\"\nassert solution(\"\"\"1 4\n4 3 2 1\nSample Output 3:\n0\"\"\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3 4') == '1'"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1'\nassert solution('1 4\\n4 3 2 1\\n8 7 9') == '0'"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '28'\nassert solution('3') == '6'\nassert solution('10') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '28'"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '28'\nprint('solution() finished successfully!')"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1\n5\n''') == '28'\nassert solution('''\n10\n1\n5\n''') == '16'\nassert solution('''\n5\n1\n5\n''') == '16'\nassert solution('''\n10\n1\n5\n''') == '16'\nassert solution('''\n1\n1\n5\n''') == '18'"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '12\\n'\nassert solution('10\\n') == '16\\n'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n10\\n2') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '28'\n\nassert solution('10') == '28'\nassert solution('10') == '28'\nassert solution('10') == '28'\n\n'''\n\n\nX = int(input())\nN = int(input())\n\nmegabytes = []\nfor i in range(N):\n    megabytes.append(int(input()))\n\nsum_megabytes = 0\nfor megabyte in megabytes:\n    sum_megabytes += megabyte\n\nfirst_month = sum_megabytes\n\nlast_month = X - first_month\n\nprint(last_month)"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n\"\"\""
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"hiss\"\nassert solution(input()) == \"no hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'no hiss'\nassert solution('mississippi') == 'hiss'\nassert solution('amiss') == 'hiss'\nassert solution('a') == 'no hiss'\nassert solution('hiss') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'hiss'\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"hiss\"\n\"\"\""
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'hiss'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4 1\") == \"5\"\nassert solution(\"2 3 4 2\") == \"5\"\nassert solution(\"3 3 3 4 4 4 4 4 4\") == \"1\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\", \"0 should be returned for an empty input\"\nassert solution(\"c++\") == \"1\", \"1 should be returned for a single keyword\"\nassert solution(\"c#\") == \"1\", \"1 should be returned for a single keyword\"\nassert solution(\"C++\") == \"1\", \"1 should be returned for a single keyword\"\nassert solution(\"C\") == \"2\", \"2 should be returned for two keywords\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nc++\nC++\nc\nc#\n''') == '3'\nassert solution('''\n4\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\nassert solution('''\n5\nartificial intelligence\nc++\nc\nc#\ncryptography\nblockchain\n''') == '5'\nassert solution('''\n8\nPython\nPython\nPython\nPython\nPython\nPython\nPython\nPython\n''') == '8'\nassert solution('''\n5\nartificial intelligence\nPython\nPython\nPython\nPython\n''') == '5'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '4'\nassert solution('''5\nArtificial Intelligence\nMachine Learning\nLinux\n''') == '5'"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '2'\nassert solution('1') == '1'\n\n'''"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nc\\nC\\nc#\\n') == '3'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nc++\nC++\nc''') == '3'\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == '5'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nc\\nC\\nc\\n') == '3'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nc\\nc\\n\\n') == '3'\nassert solution('5\\nc\\nC\\n\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\""
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n\"\"\""
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('ABCD') == '10'\nassert solution('ABCD') == '10'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\""
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('TCTCGC') == '6'\nassert solution('CCCCGG') == '8'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == \"21\"\nassert solution('CCC') == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('TCTGTTC') == '25'\nassert solution('CGCTCGTC') == '19'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\""
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-45') == '90'\nassert solution('45') == '90'\nassert solution('-90') == '-180'\nassert solution('0') == '0'\nassert solution('360') == '0'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n315\n45\n''') == '90'\nassert solution('''\n180\n270\n''') == '90'\nassert solution('''\n179\n270\n''') == '270'\nassert solution('''\n-180\n270\n''') == '-180'\nassert solution('''\n-179\n270\n''') == '-270'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('3') == '180'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('360') == '180'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('-180') == '-90'\nassert solution('-315') == '-90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0\n90''') == '90'\nassert solution('''180\n270''') == '180'\n'''\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        lines = stdin.split('\\n')\n        current = lines[0]\n        target = lines[1]\n        print(f\"{current} -> {target}\")\n        degrees = current\n        steps = 0\n        degrees = degrees % 360\n        while degrees!= target:\n            steps += 1\n            if degrees < target:\n                degrees += 360\n            if degrees > target:\n                degrees -= 360\n        print(f\"{degrees} degrees steps\")\n        return f\"{steps}\""
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('90') == '90'\nassert solution('-90') == '180'\nassert solution('180') == '180'\nassert solution('-180') == '-90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('180\\n270') == '90'\nassert solution('-360\\n-270') == '-90'\nassert solution('0\\n-360') == '360'\nassert solution('0\\n0') == '0'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\"\n) == \"3\", \"3\"\nassert solution(\n    \"5\"\n) == \"1\", \"1\"\nassert solution(\n    \"3\"\n) == \"1\", \"1\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == \"3\"\nassert solution('''5\n11\n20\n33\n40\n55''') == \"1\"\nassert solution('''5\n2\n20\n33\n40\n55''') == \"2\"\nassert solution('''5\n3\n20\n33\n40\n55''') == \"1\""
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n\nassert solution('''5\n1\n23\n18\n13\n99''') == '1'\n\nassert solution('''5\n11\n20\n33\n40\n55''') == '2'\n\nassert solution('''20\n10\n1\n2\n4\n10''') == '2'\n\nassert solution('''4\n12\n13\n14\n15''') == '0'"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1\n3\n5\n7\n''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n\nprint(solution('''\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"5 1 23 18 13 99\") == \"3\"\nassert solution(\"5 2 31 63 12 69\") == \"2\"\nassert solution(\"6 3 19 55 11 11\") == \"3\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99\\n') == '3'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBB') == '1'\nassert solution('WWWWBW') == '1'\nassert solution('BBWBBB') == '1'\nassert solution('WWWWBW') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBB\") == \"1\"\nassert solution(\"WWWWWBB\") == \"0\"\nassert solution(\"WWWWWBBB\") == \"1\"\nassert solution(\"WWWWWWBB\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nWWBWBB\n''') == '1'\nassert solution('''\nWWWWBBW\n''') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBBWWWWB') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBWB') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"BBB\") == \"1\"\nassert solution(\"B\") == \"0\"\nassert solution(\"B\") == \"1\"\nassert solution(\"B\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('WWWWBBW') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBBBWWWWBBBWWWWBBBWWWWBBW') == '1'\nassert solution('WWWWBBWWWWBBBBW') == '0'\nassert solution('WWWWBBBBWWBBBB') == '0'\nassert solution('BBBBBBBBBBBB') == '1'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n\n'''\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint('All test cases passed...')\n\"\"\""
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('15 4 17 5') == '18.6301688129032'\n\nfrom math import sqrt"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 3 3\n4 5 6 7''') == \"9\"\nassert solution('''1 2 1 1\n1 1 0 1''') == \"1.299038105676658\"\nprint(solution('''5 3 5 4\n8 4 3 4\n7 5 7 5\n4 6 7 4\n6 6 4 5\n6 7 3 2\n2 5 3 6\n5 4 6 5'''))\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('2 5 6 7') == '6.0'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 3 6 6') == '14.299003955072325'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1 2 1 3') == '0.0'"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"robert\"\nprint(solution(\"Robert Jacobowiec\"))\nprint(solution(\"robert\"))\nprint(solution(\"roooooobbert\"))\nprint(solution(\"rooooobert\"))\nprint(solution(\"roooooobertttt\"))\nprint(solution(\"roooooooooobet\"))\nprint(solution(\"roooooooobet\"))\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('roobrobert') == 'robert'\nassert solution('roobroobbert') == 'robert'\nassert solution('roobroobrobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooobert') == 'robert'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\""
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooobert') == 'robert'\nassert solution('rrroobert') == 'robert'\nassert solution('robert') == 'robert'\nassert solution('robbert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"robert\") == \"robert\"\nassert solution(\n    \"rooooobert\") == \"robert\"\nassert solution(\n    \"roooobert\") == \"roobert\"\nassert solution(\n    \"roooobbert\") == \"roobert\"\nassert solution(\n    \"roobert\") == \"roobert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''robert\nroooobert\nroobrober''') == 'robert'\nassert solution('''robert\nrooobert\nroobrober''') == 'robert'\nassert solution('''robert\nrooooobert\nroobrober''') == 'robert'\nassert solution('''robert\nrooooobert\nroobrober''') == 'robert'\nassert solution('''robert\nrooooobert\nroobrober''') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooooooobert') == 'robert'\nprint('Everything passed!')\n\nclass Solution:\n    def solution(self, stdin):\n        # write your code in Python 3.6\n        return stdin\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('1000000 99 7') == 'Impossible'\nassert solution('1000000 99 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('1000 99999 7') == 'Impossible'\nassert solution('1000 99999 9997 7') == 'Impossible'\nassert solution('1000 99999 999 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1000 9 7\") == \"108 4\"\nassert solution(\"10 900 7\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000 9 7\nSample Input 1:\n1000 900 7\nSample Output 1:\n108 4\n\nSample Input 2:\n1000 9 7\nSample Output 2:\nImpossible''') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1000 9 7\\n'\n    '1000 900 7\\n'\n) == '108 4\\n'\nassert solution(\n    '1000 9 7\\n'\n    '1000 1000 7\\n'\n) == 'Impossible\\n'\nassert solution(\n    '1000 9 7\\n'\n    '1000 1000 9 7\\n'\n) == 'Impossible\\n'\nassert solution(\n    '1000 9 7\\n'\n    '1000 1000 9 7\\n'\n    '999 7 8\\n'\n) == '108 4\\n'\nassert solution(\n    '1000 9 7\\n'\n    '1000 1000 7\\n'\n    '999 7 8\\n'\n    '1000 1000 7\\n'\n    '1000 1000 7\\n'\n) == 'Impossible\\n'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nprint(solution(input()))"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Impossible'\nassert solution('') == 'Impossible'\nassert solution('\\n') == 'Impossible'\nassert solution('\\r\\n') == 'Impossible'\nassert solution('\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('3 5 6') == 'Impossible'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '1\\n1\\n2\\n1\\n0\\n'\nassert solution('4 4') == '1\\n1\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nX.X\\nX.X\\nX..\\nX..\") == \"1\\n1\\n2\\n1\"\nprint(solution(input()))"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\\n0\\n0\\n0\\n0\"\nassert solution(\"1\") == \"1\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '1'\nassert solution('5 5') == '3'\nassert solution('6 6') == '6'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 4\\n'\n    '#..#\\n'\n    '..X.\\n'\n    '..X.\\n'\n    '#XX#'\n) == '1\\n1\\n2\\n1\\n0\\n'\n\n'''"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'\nassert solution('4 4\\n....\\n....\\n....\\n....') == '9\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\""
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1953566'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '21'\nassert solution('3') == '12'\nassert solution('2') == '5'\nassert solution('5') == '105'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1953566\"\nassert solution(input(\"\")) == \"102\"\nassert solution(input(\"\")) == \"102\"\n\"\"\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1953566\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1953566'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1953566\"\n\nprint(solution())\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n209\n1249\n1401\n2\n''') == '1000000000'\n\nassert solution('''\n3\n104\n8\n5\n''') == '100000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10 10\\n3 3 3\\n') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1\\n') == '0.000000 3.000000 6.000000'\nassert solution('1 1 1\\n1 1 1\\n') == '1.000000 1.000000 1.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'''\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"1 1 1\") == \"0.000000 0.000000 0.000000\""
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0.000000 0.000000 0.000000\""
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nprint('Tests passed')\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a<bc<') == 'b', 'First Test Failed'\nassert solution('foss<<rritun') == 'forritun', 'Second Test Failed'\nprint('All Tests Passed')"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''a<bc<\nfoss<<rritun''') == 'fossrritun'''\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a<bc<\nfoss<<rritun\n''') == 'forritun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nprint('\"Run\" is good. Time to check.')\n'''\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\n[Try harder]\nIf you're getting very frustrated, feel free to look up on this solution from the [wiki page](https://en.wikipedia.org/wiki/Backspace_compromise_problem).\n\"\"\"\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"forritun\""
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a<bc<') == 'b', 'First'\nassert solution('foss<<rritun') == 'forritun', 'Second'\nprint('Almost done!')\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\""
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n\n## ================== Challenge 4 ================== ##\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nprint('YOUR CODE IS CORRECT!')\n\n\"\"\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n\"\"\""
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"MS\"\n\n\"\"\""
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    'Knuth-Morris-Pratt') == 'KMP'\nassert solution(\n    'Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate'\nassert solution('2 1 0') == 'Gold'\n\n-----Hints-----\n- Try to think of the problem in terms of solving this problem when you are thinking about the problem.\n- Think about the possible outcomes of this problem.\n- The maximum value of buying power in each possible scenario.\n- The minimum value of buying power in each possible scenario.\n- The number of winning cards in each possible scenario.\n- How to calculate the chance of winning.\n- No real solution.\n'''\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 0') == 'Estate or Copper'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\n'''"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('10 10 0') == 'Estate or Copper'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 1 0''') == 'Estate or Copper'\nassert solution('''2 1 0''') == 'Province or Gold'\nassert solution('''0 1 1''') == 'Estate or Copper'"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Province or Gold\"\nassert solution(\"2 1 0\") == \"Estate or Copper\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 1 0\n2 1 0\n''') == 'Estate or Copper'\nassert solution('''0 1 0\n1 0 0\n''') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Province or Gold'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"10 3\") == \"impossible\""
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"3 7\") == \"impossible\"\nassert solution(\"3 4\") == \"impossible\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('15 7') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n100 50') == '90.00'\nassert solution('2 3\\n80 90') == '75.7142857'"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"0 0\") == \"impossible\"\n\nassert solution(\"100 2\") == \"impossible\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 5 4 7 6\") == \"4\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('7') == '4'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5 1 2 3 4 5\"\nassert solution(\"2 3 1 5 4 7 6\") == \"4 3 5 7\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 3 4 5\") == \"2,3,4,5\"\nassert solution(\"2 3 1 5 4 7 6\") == \"2,3,5,7\"\nassert solution(\"5 1 2 3 4 7 6\") == \"5,1,2,3,4,7,6\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4'\nassert solution('5\\n1 2 3 4 5') == '5'\nprint(\"You're all set!\")"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\""
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10') == '9 25'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\""
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15 15') == '0 0'\nassert solution('0 0') == '0 0'\nassert solution('10 10') == '9 25'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10''') == '9 25'\nassert solution('''0 30''') == '23 45'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0.36788\") == \"1.414214\"\nassert solution(\"2.718281\") == \"1.414214\""
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5.000\") == \"1.50\"\n\"\"\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36788') == '1.000000'\n\n=====\nAnthony is just now learning basic math, how exciting! He first learns about addition\\[ a+n=a+\\underbrace{1+1+\\cdots +1}_ n, \\]\n\nthen multiplication\\[ a\\times n=\\underbrace{a+a+\\cdots +a}_ n, \\]\n\nexponentiation\\[ a^n=\\underbrace{a\\times a\\times \\cdots \\times a}_ n. \\]\n\nand finally, tetration\\[ ^na=\\underbrace{a^{a^{\\cdot ^{\\cdot ^{\\cdot }}}}}_ n. \\]\n\nVery quickly, Anthony becomes interested in infinite tetrations, namely\\[ ^\\infty a={a^{a^{\\cdot ^{\\cdot ^{\\cdot }}}}}. \\]\n\nAnthony wonders, given an arbitrary real number $N$, what is the solution to $^\\infty a=N$? Unable to figure it out, Anthony has asked you to write a program to help him!\n\nHere\u2019s a fun fact: A solution only exists for $\\frac{1}{e}\\leq N\\leq e$.\n\n-----Input-----\nThe first line of input contains one real number $N$, $0.36788\\leq N\\leq 2.718281$.\n\n-----Output-----\nOutput a single line containing a real number $a$, such that $^\\infty a=N$. Your answer will be considered correct if its absolute or relative error doesn\u2019t exceed $10^{-5}$.\n\n-----Examples-----\nSample Input 1:\n2.000000\nSample Output 1:\n1.414214\n\nSample Input 2:\n1.000000\nSample Output 2:\n1.000000\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('1.000000') == '1.000000'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.414214'\n\n<h2 id=\"Expected Output\">Expected Output</h2>\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>1.414214</strong>\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>1.414214</strong>\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>1.414214</strong>\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">A solution only exists for $\\frac{1}{e}\\leq N\\leq e$.</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>In mathematics, the positive infinity is called \\underbrace{\\infty}</strong> and negative infinity is called <strong>-\\infty</strong>.\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>$\\infty$</strong> is called <strong>\\infty</strong> in mathematical notation and <strong>infinity</strong> in the mathematical definitions.</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nThe mathematical definition of $\\infty$ is $\\infty\\lt\\infty=\\infty$.\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">In the answer to <code>\\infty</code>, what do you mean?</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>Infinity</strong> means we can move any number <strong>higher than</strong> zero.</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>Infinity</strong> means we can move any number higher than zero.</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nIn mathematics, the positive infinity is called <strong>\\infty</strong> and negative infinity is called <strong>-\\infty</strong>.\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>$\\infty$</strong> means we can move any number higher than zero.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">What is the best strategy to solve the problem?</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nThe best strategy is to just use the definition of $\\infty$.\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nThe best strategy to solve a problem is to use the definition of $\\infty$.\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nIf we want to solve a problem in terms of the definition of infinity, we will have to apply the law of law.\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">How do we solve the problem in terms of the definition of infinity?</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nWe can use the law of law, $N\\to\\infty$ for $N>1$ and $N\\to\\infty$ for $N<1$ and $N\\to\\infty$ for $N=1$.\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nIn mathematics, the positive infinity is called <strong>\\infty</strong> and negative infinity is called <strong>-\\infty</strong>.\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>$\\infty$</strong> means we can move any number higher than zero.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">What is $\\infty?</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n$\\infty$ is just a constant, and it does not change depending on the value of $N$.\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n<strong>$\\infty$</strong> is just a constant, and it does not change depending on the value of $N$.\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\n$\\infty$ means we can move any number higher than zero.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 id=\"Qn\">How to represent $\\infty$ as a constant?</h3>\n\n<div class=\"grid\">\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nWe can represent $\\infty$ as a constant by taking the max of a and 0.\n</p>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nLet $a$ be a constant, we can write $a + b = \\infty$ when $a$ and $b$ are integers. We can write the two integers on their own lines.\n</p>\n</div>\n</div>\n<div class=\"item\">\n<div class=\"item\">\n<p class=\"text-left\">\nLet $a$ be a constant, we can write $a = \\infty$"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.0') == '1.414214'\nassert solution('1.0') == '1.0'\n\"\"\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('0.36788') == '1.414214'\nassert solution('2.718281') == '1.414214'\n\n--Input--\n1.0\n\n--Output--\n1.0\n\n--Input--\n2.0\n\n--Output--\n1.0\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('1.0000001') == '1.414214'\nassert solution('0.0000001') == '0.414214'\nassert solution('0.00000001') == '0.414214'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '50,50:'"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n3\n4\n1''') == '1:2:3'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == \"1:\"\nassert solution('2') == \"2:\"\nassert solution('3') == \"3:\"\nassert solution('4') == \"4:\"\nassert solution('5') == \"5:\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('1') == '1:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\n\nprint(solution(input()))"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"yes\"\n\nstdin = \"\"\"\nTHE RAIN IN SPAIN\n\"\"\"\nassert solution(stdin) == \"no\"\n\nstdin = \"\"\"\nIN THE RAIN AND THE SNOW\n\"\"\"\nassert solution(stdin) == \"no\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\nassert solution('''RBLLLBRR''') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''RRBBBLLR''') == \"SSKKKHHS\"\nassert solution('''RBLLLBRR''') == \"CHCS\"\nassert solution('''RRBBBLLR''') == \"SSKKKHHS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\nassert solution('''RBLLLBRR''') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('GRP') == 'DDDD'\nassert solution('RYDRURD') == 'LLLLLL'\nprint('All test cases passed!')"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"RBBBLLR\"\n) == \"SSKKKHHS\"\nassert solution(\n    \"RBLLLBRR\"\n) == \"CHCS\"\nassert solution(\n    \"RRBBBLLR\"\n) == \"SSKKKHHS\"\nassert solution(\n    \"RBLLLBRR\"\n) == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"RRBBBLLR\"\n) == \"SSKKKHHS\"\nassert solution(\n    \"RBLLLBRR\"\n) == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 7''') == '1\\nFizz\\nBuzz'\nassert solution('''2 4 7''') == '1\\nFizz\\n3\\nFizzBuzz'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('''\n1 1 1\n''') == '1\\nFizz\\n1\\nFizz\\n1\\nFizzBuzz\\n1\\n'\nassert solution('''\n1 3 5\n''') == '1\\nFizz\\n1\\nFizz\\n1\\nFizzBuzz\\n1\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n', 'Fizz Buzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizz\\n5\\nFizz\\n7\\n', 'Fizz Buzz'\n\"\"\""
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n7\\nFizzBuzz\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 7\n''') == '1\\nFizz\\n2\\nBuzz\\n7\\nFizz\\n5\\nFizzBuzz\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizz\\nBuzz\\n'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n3 3 3 2''') == \"It hadn't snowed this early in 3 years!\"\nassert solution('''2 10\n0 100''') == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"It had never snowed this early!\""
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\""
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n3 3 3 2') == 'It hadn't snowed this early in 3 years!'\nassert solution('6 10\\n0 100') == 'It hadn't snowed this early in 0 years!'\nassert solution('5 3\\n1 2 3 4 5') == 'It had never snowed this early!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'\nassert solution('''2 10\n0 100\n''') == 'It hadn't snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10') == 'It hadn't snowed this early in 0 years!'\nassert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == 'It hadn't snowed this early in 0 years!'\nassert solution('4 2') == 'It hadn't snowed this early in 3 years!'"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\nassert solution('3 3 3 2') == 'It had never snowed this early!'"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'It hadn't snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn't snowed this early in 0 years!'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 10') == '7'"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1', 'First'\nassert solution('2 2') == '1', 'Second'\nassert solution('10 10') == '7', 'Third'\nassert solution('10 0') == '0', 'Fourth'\nassert solution('0 0') == '0', 'Fifth'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"6 5\") == \"1\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('8') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('10 10') == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('10 10') == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n''') == '2'\n\nassert solution('''\n1 1\n''') == '1'\n\nassert solution('''\n1 10\n''') == '7'\n\nassert solution('''\n5 8\n''') == '4'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"2 5\") == \"4\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"8 2\") == \"3\"\nassert solution(\"10 0\") == \"0\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nbok\nkoaski\n\"\"\") == \"kakosi\"\nassert solution(\"\"\"\nbok\nkoaski\nbok\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\nkoaski\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n'''\n\nimport math\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nbok\n''') == 'bok'\nassert solution('''\nkoaski\n''') == 'kakosi'\nprint(solution('''\nkoaski\n'''))"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\""
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n\nNote: In the case of an empty message, return empty string"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nSample Output 2:\n6 2\n''') == '6 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6\n\"\"\") == \"8 2\"\nassert solution(\"\"\"\n7\n\"\"\") == \"8 3\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '6 3'\nassert solution('7') == '8 3'\nassert solution('2') == '3 0'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n4\n2\n5\n6''') == '8 2'\n\nassert solution('''8\n3\n4\n2\n5\n6''') == '8 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '8 3'\nassert solution('6') == '8 2'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4 1'\nassert solution('5') == '8 2'\nassert solution('100') == '8 2'\nassert solution('1000') == '16 2'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES', \"Wrong\"\nassert solution('snow') == 'NO', \"Wrong\"\nassert solution('rose') == 'YES', \"Wrong\"\nassert solution('drought') == 'NO', \"Wrong\"\nassert solution('tasty') == 'YES', \"Wrong\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('erres') == 'NO'\nassert solution('eet') == 'YES'\nassert solution('apples and pears') == 'YES'\nassert solution('plates of meat') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('drought') == 'YES'\nassert solution('ec') == 'NO'\nassert solution('at') == 'YES'\nassert solution('tas') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nstairs\n2\nerres airs ears ares aires aires\neet eat\n2\napples and pears\nplates of meat\n''') == 'YES'\nassert solution('''\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears\n''') == 'YES'\nassert solution('''\ntest\n2\na a a a\nt a t a\n''') == 'YES'\nassert solution('''\ntest\n2\na a a a\nt a t a\n''') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet eat') == 'YES'\nassert solution('tasty sprout') == 'YES'\nassert solution('difficult route') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n        drought\n        2\n        aught\n        ought\n        aut acht\n        ought\n        outte\n        out\n        oute\n        worried\n        and\n        frightened\n        forever\n        in\n        doubt\n        apples and pears\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n\n'''\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet eat') == 'YES'\nassert solution('worried and frightened') == 'YES'\nassert solution('in here and there') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\nstairs\n2\nerres airs ears ares aires\neet eat\n2\napples and pears\nplates of meat\n\"\"\"\n) == \"YES\\nYES\\nYES\\nYES\"\nassert solution(\n\"\"\"\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears\n\"\"\"\n) == \"NO\\nNO\\nNO\\nNO\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('drought') == 'NO'\nassert solution('stairs') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('2') == 'YES'\nassert solution('apples and pears') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('drought\\n') == 'NO'\nassert solution('stairs\\n') == 'YES'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\n\n\"\"\"\n\nfrom collections import Counter\nfrom collections import defaultdict"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HANGMAN\\nBANANA') == 'WIN'\nassert solution('HANGMAN\\nBANANA') == 'LOSE'\n\n\"\"\""
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HANGMAN') == 'WIN', 'Sample Test 1 Failed'\nassert solution('BANANA') == 'LOSE', 'Sample Test 2 Failed'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''HANGMAN\nBANANA''') == 'WIN'\nassert solution('''BANANA''') == 'LOSE'\nprint('Congratulations! All test cases passed')\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'INCREASING', \"Wrong result for stdin: 5\"\nassert solution('11') == 'NEITHER', \"Wrong result for stdin: 11\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'\nassert solution('12') == 'INCREASING'\nassert solution('13') == 'INCREASING'\nassert solution('14') == 'INCREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING', '''5\nJOE\nBOB\nANDY\nAL\nADAM'''\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'\nassert solution('11') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"INCREASING\"\n\n\"\"\""
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'DECREASING'\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER'\n'''\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == \"DECREASING\"\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == \"NEITHER\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NEITHER\", \"All tests pass.\"\nassert solution(\"1\\n2\\n\") == \"INCREASING\", \"All tests pass.\"\nassert solution(\"1\\n2\\n3\\n\") == \"NEITHER\", \"All tests pass.\"\nassert solution(\"2\\n3\\n1\\n\") == \"DECREASING\", \"All tests pass.\"\nassert solution(\"4\\n3\\n1\\n2\\n\") == \"NEITHER\", \"All tests pass.\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == \"INCREASING\"\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == \"NEITHER\"\nassert solution('''4\nJOE\nBOB\nALI\nADAM''') == \"NEITHER\"\nassert solution('''12\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == \"INCREASING\"\nassert solution('''20\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == \"NEITHER\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'DECREASING'\nassert solution('10') == 'INCREASING'\nassert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'\nassert solution('1') == 'NEITHER'\n\nThe total number of tests is 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 10.\n\"\"\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\\n\" +\n                \"John\\n\" +\n                \"Kelly\\n\" +\n                \"George\\n\" +\n                \"Kelly 1\\n\" +\n                \"George 2\\n\" +\n                \"Kelly 1\\n\" +\n                \"John 2\\n\" +\n                \"George 1\\n\" +\n                \"John 3\\n\" +\n                \"Kelly 3\\n\" +\n                \"Kelly 1\\n\" +\n                \"George 3\\n\" +\n                \"George 1\\n\" +\n                \"John 3\\n\" +\n                \"George 3\") == \"George wins!\\nJess wins!\\n\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"George wins!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('2 2 3') == 'Nina wins!'\nassert solution('2 3 2') == 'Bob wins!'\nassert solution('2 3 2') == 'Nina wins!'\n\nstdin = open('input.txt').read()\nprint(solution(stdin))"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\n\n'''"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 10 13\nJohn\nKelly\nGeorge\"\"\") == \"George wins!\"\nassert solution(\"\"\"4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\""
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10 13') == 'George wins!'\nassert solution('2 10 13') == 'Nina wins!'\nassert solution('1 20 13') == 'No winner!'\nassert solution('3 10 13') == 'George wins!'\nassert solution('3 10 13') == 'George wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 13\") == \"George wins!\"\nassert solution(\"3 10 13\") == \"Nina wins!\"\nassert solution(\"2 10 4\") == \"No winner!\"\nassert solution(\"2 10 2\") == \"George wins!\"\nassert solution(\"2 100 101\") == \"No winner!\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2.0\""
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.0000'\nassert solution('0') == '0.0000'\nassert solution('0') == '0.0000'\nassert solution('3') == '1.0000'\nassert solution('1.0') == '0.0000'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 3 0 0 5 4''') == '2.0'\nassert solution('''6 0 0 2 7 6''') == '2.0'\nassert solution('''0 0 0 0 0 0''') == '0.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 5 0 0 5 4\n''') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3 0 0 5 4\n6 0 0 2 7 6''') == '2.0'\nassert solution('''0 0 0 1\n-5 5\n-5 2\n0 1''') == '3.5'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 0 0 2 7 6') == '2.0'\nassert solution('7 3 0 0 5 4') == '2.0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n40\n''') == '0'\nassert solution('''\n100\n''') == '99'\nassert solution('''\n45\n''') == '99'\nassert solution('''\n78\n''') == '100'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('6931') == '0'\n\"\"\""
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"165\") == \"330\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2147483647\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100000000\") == \"0\"\nassert solution(\"12\") == \"0\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"30\") == \"30\"\nassert solution(\"45\") == \"50\"\nassert solution(\"78\") == \"80\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '321'\nassert solution('1234') == '1234'\nassert solution('12345') == '1234'\nassert solution('123456789') == '123456789'\n\n'''"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\""
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0\""
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"4\""
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4', 'TEST CASE 1 FAILED'\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3', 'TEST CASE 2 FAILED'\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '1', 'TEST CASE 3 FAILED'\nassert solution('''\n2 1\n20 100\n''') == '1', 'TEST CASE 4 FAILED'"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n') == '4'\nassert solution('6 5\\n140000 160000 170000 120000\\n190000 170000 160000 110000\\n') == '3'"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"3\"\nassert solution(input) == \"5\"\n\"\"\"\n\n\nfrom bisect import bisect"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n199999 180000 170000 120000\n''') == '1'\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n190000 170000 140000 160000\n''') == '0'\nassert solution('''\n5 4\n160000 180000 199999 100000\n199999 180000 170000 120000\n190000 170000 140000 160000\n''') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\nSample Input 3:\n4 3\n186000 170000 140000 160000\n180000 170000 130000 160000\nSample Output 3:\n1\n''') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n190000 170000 140000 160000\\n\") == \"4\"\nassert solution(\"10 5\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\n\") == \"3\"\nassert solution(\"1 3\\n4\\n\") == \"2\"\nassert solution(\"5 5\\n9999\\n9999\\n9999\\n9999\\n9999\\n9999\\n9999\\n\") == \"4\"\nassert solution(\"3 3\\n0\\n1\\n0\\n\") == \"2\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 4\\n'\n    '150000 100000 160000 100000 180000\\n'\n    '190000 170000 140000 160000\\n'\n) == '4'\n\nassert solution(\n    '4 4\\n'\n    '180000 185000 199999 100000\\n'\n    '199999 180000 170000 120000\\n'\n) == '3'"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\n\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'\n\nprint('Congratulations! All test cases passed!')"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', \"Wrong output\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', \"Wrong output\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '10', \"Wrong output\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10', \"Wrong answer with sample input 1\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1', \"Wrong answer with sample input 2\"\n\n'''\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '6'\nassert solution('42') == '1'\nassert solution('84') == '2'\nassert solution('252') == '6'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('42') == '6'\nassert solution('84') == '1'\nassert solution('252') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"42\") == \"6\"\nassert solution(\"84\") == \"3\"\nassert solution(\"252\") == \"2\"\nassert solution(\"420\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '6'\nassert solution('42') == '1'\nassert solution('84') == '1'\nassert solution('252') == '6'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n4 5 4 7\n''') == 'yes'\nassert solution('''\n5 7\n5 5 5 7\n''') == 'no'\n''')\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1') == 'yes'\nassert solution('13 3') == 'yes'\nassert solution('0 0') == 'no'"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([13, 3]) == 'yes'\nassert solution([1, 0]) == 'no'\nassert solution([2, 3]) == 'no'\nprint(solution([13, 3]))\nprint(solution([1, 0]))\nprint(solution([2, 3]))"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''13 3\n''') == 'yes'\nassert solution('''1 0\n''') == 'no'\n\"\"\"\nfrom sys import stdin\nfrom collections import defaultdict"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\""
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0\") == \"no\"\nassert solution(\"2 3\") == \"yes\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 8, 8, 8, 9, 9, 10, 10, 11, 12, 12, 12, 13, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254]) == \"yes\":\n    print(\"yes\")"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'yes'\nassert solution('3 1') == 'no'\nprint(solution(input()))\n\n-----Explanation-----\nTest Case 1:\n\nThe first test case is the one for which the output is \u201cyes\u201d, which is not true in the context of this problem. Thus, the result is \u201cno\u201d.\n\nTest Case 2:\n\nThe second test case is the one for which the output is \u201cno\u201d, which is true in the context of this problem. Thus, the result is \u201cyes\u201d.\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_str_1) == \"12 12 11 13\"\nassert solution(input_str_2) == \"GRESKA\"\nprint(solution.__doc__)"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nP01K02H03H04\n''') == '12 12 11 13'\nassert solution('''\nH02H10P11H02\n''') == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\""
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', solution('P01K02H03H04')\nassert solution('H02H10P11H02') == 'GRESKA', solution('H02H10P11H02')\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\nprint('\"Run\" is good. It is not your fault if this does not print anything.')\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\""
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('H02H10P11K02') == 'GRESKA'\nassert solution('H02H10P11H02') == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', 'Wrong!'\nassert solution('H02H10P11H02') == 'GRESKA', 'Wrong!'"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 5, 3]) == \"1+-+..\"\nassert solution([7, 6, 4]) == \"......\"\nassert solution([6, 4, 4]) == \"+--+..\"\nassert solution([4, 7, 4]) == \"*....*\"\nassert solution([4, 7, 3]) == \"*....*\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\n\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 5, 3]) == '+-+..', \"Wrong!\"\nassert solution([7, 6, 4]) == '......', \"Wrong!\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 3\\n.....\\n.*.*.\\n.....\\n') == '1'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1', f'First Test (1): {solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''')}'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2', f'First Test (2): {solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''')}'\n''') == '3', f'Second Test: {solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''')}'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 5 3\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n\"\"\") == \"1\"\n\nassert solution(\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\""
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5 3\n.....\n.*.*.\n.....\n*....*\nSample Input 3:\n6 8 5\n*...*...\n**...*.*\n*...*...\n.***.***\n.***.***\n*...*...\nSample Output 3:\n1\n+-+...\n|*|*|*\n+-+...\n+-+...\n|*|*|*\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 3\n.*.*.\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7 6 3\n....\n.***\n...*\n.***\n.***\n.***\n...*\n.***\n\"\"\") == \"4\""
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AC AD AH AS KD\") == '4'\nassert solution(\"2C 4D 4H 2D 2H\") == '3'\nassert solution(\"JQ KK QH\") == '1'\nassert solution(\"TS QH QC JS TH\") == '4'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3\n\n'''\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"4\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('6 5\\n0 0 0 0 0 0\\n') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n') == '7\\n'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7\\n'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('3 3\\n0 1 1\\n') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1''') == '5'\nassert solution('''5 1\n0 0 0 0 0''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '7'\nassert solution(f'5 1\\n0 0 0 0 0\\n') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1\\n0 0 0 0 0') == '7'\nassert solution('5 1\\n0 0 0 0 1') == '6'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n0 0 0 0 0\n''') == '7'\nassert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5'\nassert solution('6 5\\n0 0 0 0 0 0') == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\"\nassert solution(\"6 5\\n0 0 0 0 0 0\\n\") == \"7\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\""
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\nassert solution('What\\'s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\nassert solution('') == ''\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\nassert solution('Hello World!') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Hello World!') == '-3110 /\\/0|Z1|)!'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$ \\']['[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\']['[-]?\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    What's the Frequency, Kenneth?\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ''''"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('All your base are belong to us.') == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n@11 `/0|"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\nassert solution('What\\'s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][''$ \\'][\\'[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\nassert solution('What is the frequency of wisdom?\\n') == '\\/\\/[-]@\\'][\\'\\'$ \\'][\\'[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"Hello World!\\n\") == \"Hello World!\\n\"\nassert solution(\"My name is David. Hi David.\\n\") == \"My name is David. Hi David.\\n\"\nassert solution(\"I want to travel the world!\\n\") == \"I want to travel the world!\\n\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\nYou are tasked with creating a translation program to speed up the switch to our more elite New Alphabet by automatically translating ASCII plaintext symbols to our new symbol set.\n\nThe new alphabet is a one-to-many translation (one character of the English alphabet translates to anywhere between $1$ and $6$ other characters), with each character translation as follows:\n\nOriginal\n\nNew\n\nEnglish Description\n\na\n\n@\n\nat symbol\n\nn\n\n[]\\[]\n\nbrackets, backslash, brackets\n\nb\n\n8\n\ndigit eight\n\no\n\n0\n\ndigit zero\n\nc\n\n(\n\nopen parenthesis\n\np\n\n|D\n\nbar, capital D\n\nd\n\n|)\n\nbar, close parenthesis\n\nq\n\n(,)\n\nparenthesis, comma, parenthesis\n\ne\n\n3\n\ndigit three\n\nr\n\n|Z\n\nbar, capital Z\n\nf"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Hello World!\\n\") == \"[-]3110 //\\/0|Z1|)!\n\n\"\"\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n'\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/[-]3 |<3[]\\[][]\\[]3\\'][\\'[-]?\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Alice\""
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Bob'\nassert solution('1') == 'Alice'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n\nassert solution(\"5\") == \"Bob\"\nassert solution(\"4\") == \"Bob\"\nassert solution(\"10\") == \"Alice\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nprint(solution(input()))\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(map(str, range(1,20))), 10) == '\\n'.join(['one', 'twenty', 'three', 'forty', 'five','six','seven', 'eighty', 'ninety', 'ten']), 'Not an expected output'\nassert solution('\\n'.join(map(str, range(1,20))), 20) == '\\n'.join(['one', 'twenty', 'three', 'forty', 'five','six','seven', 'eight', 'nineteen', 'twenty']), 'Not an expected output'\nassert solution('\\n'.join(map(str, range(1,20))), 30) == '\\n'.join(['onehundred', 'twohundred', 'threehundred', 'fourhundred', 'fivehundred','sixhundred','sevenhundred', 'eighthundred', 'ninethundred', 'onehundred']), 'Not an expected output'\nassert solution('\\n'.join(map(str, range(1,20))), 60) == '\\n'.join(['onehundredtwohundred', 'threehundredtwohundred', 'fourhundredthousand', 'fivehundredthousand','sixhundredthousand','sevenhundredthousand', 'eighthundredthousand', 'ninehundredthousand', 'onehundredthousand']), 'Not an expected output'\nassert solution('\\n'.join(map(str, range(1,20))), 91) == '\\n'.join(['onehundredthousand', 'twohundredthousand', 'threehundredthousand', 'fourhundredthousand', 'fivehundredthousand','sixhundredthousand','sevenhundredthousand', 'eighthundredthousand', 'ninehundredthousand', 'onehundredthousand']), 'Not an expected output'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'thirty one letters'\nassert solution('10') == 'thirty'\nassert solution('15') == 'thirty fifteen'\nassert solution('15') == 'thirty fifteen'\nassert solution('15') == 'thirty fifteen'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nthis\\nhas\\n$\\nletters\\n\") == \"this sentence has thirtyone letters\"\nassert solution(\"7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\"\nassert solution(\"1\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"1 is the number of letters here\"\n\n---\nSample Input 3:\n10\n(\none\ntwo\nthree\nfour\nfive\nsix\nseven\neight\nnine\nten\neleven\ntwelve\nthirteen\nfourteen\nfifteen\nsixteen\nseventeen\neighteen\nnineteen\ntwenty\nthirty\nforty\nfifty\nsixty\nseventy\neighty\nninety\n)\n(\nonehundred\ntwohundred\nthreehundred\nfourhundred\nfivehundred\nsixhundred\nsevenhundred\neighthundred\nninehundred\nonehundredthousand\n)\nSample Output 3:\nonehundred twenty threehundred eightyfourhundred ninetyhundred zeroonehundred twentythousand\n\n---\nSample Input 4:\n9\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(5) == 'this sentence has thirtyone letters'\nassert solution(7) == 'thirty is the number of letters here'"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here', 'check'\n\nassert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here', 'check'\n\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here', 'check'\n\nassert solution('''\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here', 'check'\n\nassert solution('''\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here', 'check'"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'four'\nassert solution('5') == 'five'\nassert solution('3') == 'three'\nassert solution('7') =='seven'\nassert solution('8') == 'eight'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'thirty is the number of letters here'\nassert solution('10') == 'thirty one'\n\nSample Input 3:\n5\nthe\nsentence\nhas\n$\nletters\nSample Output 3:\nthirty one letters\n\nSample Input 4:\n7\n$\nis\nthe\nnumber\nof\nletters\nhere\nSample Output 4:\nthirty is the number of letters here\n\n'''"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\n\n\"\"\"\n\nfrom itertools import product\n\nn = int(input())\n\nfor x in range(n):\n    s = input()\n    l = list(s)\n    l = l[0].lower() + l[1:]\n    d = {'one':'one', 'two':'two', 'three':'three', 'four':'four', 'five':'five','six':'six','seven':'seven', 'eight':'eight', 'nine':'nine', 'ten':'ten', 'eleven':'eleven', 'twelve':'twelve', 'thirteen':'thirteen', 'fourteen':'fourteen', 'fifteen':'fifteen','sixteen':'sixteen','seventeen':'seventeen', 'eighteen':'eighteen', 'nineteen':'nineteen', 'twenty':'twenty', 'thirty':'thirty', 'forty':'forty', 'fifty':'fifty','sixty':'sixty','seventy':'seventy', 'eighty':'eighty', 'ninety':'ninety'}\n    d2 = {'hundred':'hundred', 'thousand':'thousand','million':'million', 'billion':'billion', 'trillion':'trillion', 'quadrillion':'quadrillion'}\n    f = []\n    t = ''\n    for i in range(len(l)):\n        if l[i]!= ',':\n            f.append(l[i])\n            if i == len(l) - 1:\n                if len(f) > 1:\n                    t += str(d2[l[i:i+2]]) +''\n                else:\n                    t += str(d[f[0]])\n        else:\n            t += str(d2[l[i]]) +''\n    print(t)\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC''') == '5'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC''') == '0'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC''') == '5'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC''') == '1'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC''') == '1'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 0\nassert solution('EaEbFabG') == 5\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n\"\"\"\n\n\nimport re\nimport collections"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Abcd\\n\") == \"0\"\nassert solution(\"EaEbFabG\\n\") == \"5\"\nassert solution(\"EaEbF\") == \"4\"\nassert solution(\"EaEbF\\n\") == \"4\"\nassert solution(\"EaEbF\\n\") == \"4\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\nassert solution(\"H\") == \"0\"\nassert solution(\"M\") == \"0\"\nassert solution(\"M\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\""
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\nassert solution('AaAaAaA') == '0'\nassert solution('Ababc') == '3'\nassert solution('EaEbFBaG') == '5'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n''') == \"Odd 6\"\nassert solution('''\n3 3\n''') == \"Even 6\"\n'''\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Even 6'\nassert solution('3 3') == 'Odd 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3\n3 3\n\"\"\") == \"Odd 6\"\nassert solution(\"\"\"2 1\n3 2\n\"\"\") == \"Odd 2\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nprint(solution(input()))"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 2') == 'Not a moose'"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n\n2\n\n3\n\nabc"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\ntomo\\nmono\\ndak\\n6666\\n') == '1'\nassert solution('2\\nja\\nla\\n52\\n') == '2'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n123\n1234\n12345\n123456\n56789\n1\n''') == '3'\n\nassert solution('''\n2\nabc\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''tomo\nmono\ndak''') == '1'\n\nassert solution('''ja\nla\n52''') == '2'\n\nassert solution
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\ntomo\nmono\ndak\n6666\n''') == '1'\nassert solution('''\nja\nla\n52\n''') == '2'\nassert solution('''\na\nb\nc\n''') == '0'\nassert solution('''\n1\n2\n3\n''') == '0'\nassert solution('''\n4\n5\n6\n''') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\nabc') == '2'\nassert solution('2\\n4\\n5\\ndef') == '1'"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n5\\n6') == '2'\nassert solution('3\\n5\\n6') == '2'\nassert solution('4\\n6\\n6') == '1'\nassert solution('5\\n6\\n6') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ntomo\nmono\ndak\n666''') == '1'\nassert solution('''\nja\nla\n52''') == '2'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\nabcd') == '1\\n2\\n3\\n4\\n5\\n6\\nabcd'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\"\"\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == '..#..'\nassert solution(\"DOG\") == '..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\""
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\""
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n\"\nassert solution('DOG') == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\""
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution('DOG') == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\""
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\""
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '3.141593\\n'\nassert solution('21\\n') == '1385.442360\\n'"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n\"\"\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '3.141593'\nassert solution('21\\n') == '1385.442360'"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n''') == '3.141593'\nassert solution('''21\n''') == '1385.442360'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n2\nSample Input 2:\n1\nSample Output 2:\n3.141593\n2.000000\n\"\"\") == \"\"\"1385.442360\n882.000000\"\"\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\nassert solution('-5') == '4.260162'\nassert solution('5') == '4.260162'\nassert solution('-11') == '-3.314159'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    1 -2 3\n    ''') == '2'\nassert solution('''\n    5\n    129 44 394 253 147\n    ''') == '0'\n''')\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 -2 3\\n') == '2'\nassert solution('5\\n129 44 394 253 147\\n') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n129 44 394 253 147\n''') == '0'\nassert solution('''\n6\n-1 -2 3 -4 5\n''') == '1'\nassert solution('''\n6\n1 2 3 4 5\n''') == '7'\nassert solution('''\n4\n1 3 2 -1\n''') == '4'\nassert solution('''\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('5') == '0'\nassert solution('123') == '-7'\nassert solution('-123') == '7'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('13') == '0'\nassert solution('123') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 -2 3\n''') == '2'\n\nassert solution('''\n5\n129 44 394 253 147\n''') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    1 -2 3\n    ''') == '2'\nassert solution('''\n    5\n    129 44 394 253 147\n    ''') == '0'\nassert solution('''\n    10\n    -5 3 5 -2 -1 1 -3 -5 4 5\n    ''') == '-7'\nprint('Tests passed')"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '6'\n\nassert solution('''\n3\n4 1 2\n''') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\nassert solution('2 2 2') == '6'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('3 2 2') == '12'\nassert solution('3 4 1 2') == '8'"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"8\"\nassert solution(\"10 3 1 2\") == \"14\""
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"8\"\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('3\\n4 1 2') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '2'\nprint(solution(input_string))"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 4\n1111\n1S01\n1011\n0U11\nSample Output 1:\n2\n\nSample Input 2:\n3 5 5\n1111\n1S01\n1011\n0L11\n1S12\nSample Output 2:\nNOT POSSIBLE\n\n''') == '2'\n\nassert solution('''3 3 4\n1111\n1S01\n1011\n0L11\n1S12\nSample Output 1:\n2\n\nSample Input 2:\n4 4 4\n1111\n1S01\n1011\n0L11\n1S12\n0U11\nSample Output 2:\nNOT POSSIBLE\n''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\n\"\"\""
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1\n1''') == '2'\nassert solution('''\n1 1 1\n1''') == 'NOT POSSIBLE'\nassert solution('''\n1 1 1\n1''') == 'NOT POSSIBLE'\n\n''')\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_stdin) == \"2\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R11\\n\") == \"NOT POSSIBLE\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\n\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0R11') == 'NOT POSSIBLE'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == 'NOT POSSIBLE'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0D11') == 'NOT POSSIBLE'\n\n\"\"\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 4 4\\n\"\n    \"1111\\n\"\n    \"1S01\\n\"\n    \"1011\\n\"\n    \"0U11\\n\") == \"2\"\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\nassert solution('''11 5\n3 1 2 1 1 3 3 1\n''') == '3'\nassert solution('''15 5\n3 1 2 1 1 3 3 1 3 2 1\n''') == '3'\nassert solution('''10 5\n1 1 1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n') == '4\\n'\nassert solution('4\\n6\\n') == '5\\n'\nassert solution('4\\n6\\n') == '4\\n'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''\n7 5\n1 5 4 3 2 1 1\n''') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\nassert solution('8 5') == '1'\nassert solution('9 5') == '1'\nassert solution('10 5') == '2'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\n\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '4'\nassert solution('5 5') == '4'\nassert solution('10 5') == '9'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '4', 'Wrong'\nassert solution('7 5') == '3', 'Wrong'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 5\n3 1 2 1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n7 5\n1 5 4 3 2 1 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n20 5\n4 1 1 5 2 1 2 2 3 2 1 2 3 4 5 1 3 2 2 1 2 1 4 1 5 2 1 3 2 1 3 2 4 1 5 2 2 4 3 2 2 3 1 2 3 4 1 5 2 2 5 1 3 2 4 1 5 2 1 3 2 4 1 2 1 1 5 1 1 1 2 1 1 1 5 1 5 1 2 1 1 1 5 1 5 1 2 1 3 2 1 4 3 2 4 1 5 1 2 3 2 4 1 5 2 2 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 4 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 4 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5 1 2 1 1 5 1 5 1 2 1 3 2 4 1 5"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\nassert solution('12345') == '5'\n\n'''\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\n\"\"\") == \"15\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"5\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '15'"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '10'\nassert solution('2') == '15'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nSSPSPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP') == '15'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"4\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"SSPPR\") == \"5\"\nassert solution(\"SSPPRP\") == \"10\"\nassert solution(\"SSPPPRP\") == \"15\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '10'\nassert solution('3') == '15'\nassert solution('4') == '20'\nassert solution('5') == '25'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n7\\n11\") == \"4\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\") == \"still running\"\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"still running\"\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') =='still running'\nassert solution('2') == '4'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') =='still running'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n3\\n5\\n0\\n0\\n0\\n0\\n') == '4'\nassert solution('2\\n4\\n6\\n8\\n0\\n0\\n0\\n0\\n') =='still running'\nassert solution('1\\n3\\n5\\n0\\n0\\n0\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') =='still running'\nassert solution('5') == '4'"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'\nassert solution('2 2 1') == 'impossible'\nassert solution('2 2 1 1') == 'impossible'\nassert solution('2 2 1 2') == 'impossible'\n\"\"\"\n\nimport heapq\nimport math"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''\n2\n2 2\n''') == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '0.6'\nassert solution('3') == '0.8'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n4 3 2 2 3\n''') == '0.6'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'\nassert solution('10 5 1 2 5') == '1.0000'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'impossible'\nassert solution('6') == '0.6'\nassert solution('3') == '0.3'\nassert solution('7') == 'impossible'\n\nprint('Tests passed')"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n6 1 3 2 2 3') == '0.6'\nassert solution('2\\n2 2') == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6', 'Sample Test 1 Failed'\nassert solution('2 2') == 'impossible', 'Sample Test 2 Failed'\nassert solution('6') == 'impossible', 'Sample Test 3 Failed'\nassert solution('3') == '0.75', 'Sample Test 4 Failed'\nassert solution('5') == 'impossible', 'Sample Test 5 Failed'\n\nprint('All Tests Passed')"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 1 4') == 'Emma', solution('1 4 1 4')\nassert solution('1 6 1 6') == 'Gunnar', solution('1 6 1 6')\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 8 1 8') == 'Tie'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Tie'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Emma'\nassert solution('1 10 1 10\\n1 10 2 5') == 'Emma'\nassert solution('1 1 1 1\\n1 10 2 5') == 'Emma'\nassert solution('1 2 1 2\\n1 10 2 5') == 'Emma'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Gunnar'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Tie'"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Gunnar\"\nassert solution(\"\"\"1 6 1 6\n1 6 1 6\"\"\") == \"Tie\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Tie'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"Emma\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 1 3\n4 5 4 7\n''') == 'Emma'\nassert solution('''\n1 5 3 2\n3 4 3 4\n''') == 'Gunnar'\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 mumble 5') =='makes sense'\nassert solution('8 1 2 3 mumble mumble 7 mumble 8') =='something is fishy'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') =='makes sense', solution('5')\nassert solution('1 2 3 mumble 5') =='makes sense', solution('1 2 3 mumble 5')\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n4 5 6\n4 5''') =='something is fishy'\nassert solution('''4\n1 2 3 mumble\n4 5 6\n4 5''') =='makes sense'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') =='makes sense', 'First'\nassert solution('8') =='something is fishy', 'Second'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 mumble 5\n''') =='makes sense'\nassert solution('''8\n1 2 3 mumble mumble 7 mumble 8\n''') =='something is fishy'\nprint(solution('''1\n2\n'''))\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, '1 2 3','mumble', '5','mumble mumble 7 mumble 8']) =='makes sense'\nassert solution([8, '1 2 3','mumble', '5','mumble mumble 7 mumble 8']) =='something is fishy'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 mumble 5\\n') =='makes sense', 'First Test'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8\\n') =='something is fishy', 'Second Test'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n    mumble\n    5\n    6 7 8''') =='something is fishy'\nassert solution('''1 2 3\n    mumble\n    5\n    6 7 8\n    mumble\n    10\n    11 12''') =='makes sense'\n''')\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\""
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 mumble 5''') =='makes sense'\nassert solution('''8 1 2 3 mumble 7 mumble 8''') =='something is fishy'''\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('100 0 0 0 0') == '100 0 0 0 0'\n\"\"\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\nassert solution(\"3 5 6 9\") == \"1 0\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 6 9 12 15\n4 9 25 49 81\n''') == '1 121'"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('5 6') == '9'\nassert solution('3 4') == '3'\nassert solution('4 6') == '2'\nassert solution('3 5') == '1'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 9 25 49 81') == '121'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '6 9'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3 6 9 12 15''') == '1 18'\nassert solution('''4 9 25 49 81''') == '2 121'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'CORRECT', 'First Example'\nassert solution('''4\n2 3\n1 0\n0 2\n3 1''') == 'INCORRECT', 'Second Example'\nassert solution('''10\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n0 8\n8 0\nSample Output 3:\nCORRECT\n\nSample Input 4:\n6\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\nSample Output 4:\nINCORRECT\n''') == 'INCORRECT', 'Third Example'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'INCORRECT'\nassert solution('4') == 'CORRECT'\nassert solution('5') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == 'CORRECT'\nassert solution('''\n6\n2 3\n1 0\n0 2\n3 1\n5 0\n4 6\nSample Output 3:\nINCORRECT\n''') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT'\nassert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 3\n1 0\n0 2\n3 1\n''') == \"CORRECT\"\nassert solution('''\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == \"CORRECT\"\nassert solution('''\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == \"INCORRECT\"\n'''\n\n\n\n\n\n'''"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'CORRECT'\nassert solution('''3\n0 3\n1 2\n2 3''') == 'INCORRECT'\nassert solution('''5\n0 3\n2 1\n4 5\n1 0\n3 6''') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == \"CORRECT\"\nassert solution('6\\n2 3\\n1 0\\n0 2\\n3 1\\nSample Output 2:CORRECT\\n') == \"INCORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"\nassert solution(\"6\\n3 4\\n0 1\\n1 0\\n2 2\\n3 3\\n\") == \"CORRECT\"\nassert solution(\"6\\n3 4\\n0 1\\n1 0\\n2 2\\n3 3\\n\") == \"INCORRECT\"\nassert solution(\"6\\n3 4\\n0 1\\n1 0\\n2 2\\n3 3\\n\") == \"INCORRECT\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"INCORRECT\"\n\"\"\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'CORRECT'\nassert solution('6') == 'CORRECT'\nassert solution('5') == 'INCORRECT'\nassert solution('2') == 'INCORRECT'\nassert solution('5') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == 'CORRECT'\nassert solution('4') == 'INCORRECT'\nassert solution('2 3') == 'INCORRECT'\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n0 1 1\n1 0 1\n1 1 0\n\"\"\") == \"1 1 1\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1 2 3 1 11'\nassert solution('10') == '1 2 3 1 11 1 2 3 1 11 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == \"1 1 1\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n'''\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '1 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n0 1 1\n1 0 1\n1 1 0\n\"\"\") == \"1 1 1\"\nassert solution(\"\"\"\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n\"\"\") == \"1 2 3 1 11\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1 2 3 1 11\"\nassert solution(\"7\") == \"1 2 3 1 11\"\nassert solution(\"25\") == \"1 2 3 1 11\"\nassert solution(\"27\") == \"1 2 3 1 11\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0 1\n1 0 1\n1 1 0\n''') == '1 1 1 1'\nassert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\nassert solution(\"1 17\") == \"Tuesday\""
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"./test_sample.txt\") == \"Thursday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == \"Thursday\"\nassert solution('17 1') == \"Saturday\"\n\"\"\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == 'Thursday'\nassert solution('''17 1''') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 2\n''') == 'Tuesday'\nassert solution('''17 1\n18 1\n''') == 'Saturday'\nassert solution('''17 1\n17 2\n''') == 'Sunday'\nassert solution('''17 1\n2 1\n''') == 'Sunday'\nassert solution('''17 1\n18 1\n''') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Thursday', \"29 February\"\nassert solution('17 1') == 'Saturday', \"29 February\"\nprint(solution.__doc__)\n\n\nThe function should return a single line of output.\n\nFor example, this function should return the string \u201cThursday\u201d because on a Wednesday, February 29 was the 29th.\n\n----Hints----\nDo not use any built-in functions, such as date functions, in your solution.\n\nWrite your solution in a single expression, which is enough to pass the test.\n\n\n---Test Your Solution---\nYou can use the function `assert` in your code. You can test a function by calling `assert` on it. Assert is the standard built-in function. Assert is an interface to the built-in `assert` function. So, if you pass all the assertions in your code, the test will succeed. If there is one fails, the test will fail.\n\nThe following example shows how to use the assert statement."
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == 'Thursday'\nassert solution('15 15') == 'Sunday'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n5\\n') == '129\\n480'\n\nL, D, X = map(int, input().split())\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '4'\nassert solution('100') == '40'\nassert solution('0') == '0'\nassert solution('4') == '129'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n100\\n4') == '4\\n40'\nassert solution('1\\n100\\n5') == '129\\n480'\nassert solution('1\\n1\\n5') == '129\\n480'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2'\n    '100'\n    '4') == '4'\n\nassert solution(\n    '100'\n    '500'\n    '12') == '129'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n5\\n') == '129\\n480'\nassert solution('1\\n1000\\n10\\n') == '999\\n999'"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '480'\nassert solution('12') == '129'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('1') == '4'"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"129\"\nassert solution(input()) == \"480\""
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n5\\n') == '129\\n480'\nassert solution('1\\n100\\n7\\n') == '129\\n480'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n5 4\n1 6\n3''') == '6.0'\nassert solution('''1 1\n5 1\n3 3\n4''') == '4.0'\nassert solution('''3 2\n5 4\n1 6\n3''') == '6.0'\nassert solution('''3 2\n5 4\n1 6\n3''') == '6.0'\nassert solution('''4\n3 3\n3 2\n3 1''') == '4.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n5 1\\n3 3') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3') == '6.0'"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 2\") == \"3.0\"\nassert solution(\"4\") == \"6.0\"\n\n=======\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == \"12.0\"\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == \"6.0\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('5 1') == '4.0'\nassert solution('3 2') == '6.0'\n\n'''\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4.0\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '5.0'\nassert solution('3 2') == '6.0'"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0'\nassert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\\\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\") == \"6.0\""
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('34') == '4'\nassert solution('63') == '6'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n2\n5\n1''') == '2'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('15') == '9'\nassert solution('30') == '7'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(0) == \"2\"\nassert solution(1) == \"3\"\nassert solution(2) == \"4\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('30') == '7'\nprint('All tests passed!')\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('30') == '7'"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('30') == '7'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('123') == '6'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\nassert solution(\"150\") == \"15\"\nassert solution(\"43\") == \"4\"\n\nassert solution(\"125\") == \"5\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"N321-CIA\") == \"1\"\nassert solution(\"F3-B12I\") == \"2\"\nassert solution(\"OVO-JE-CIA\") == \"3\"\nassert solution(\"KRIJUMCAR1\") == \"4\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\") == \"1\", \"First\"\nassert solution(\"9A-USKOK\") == \"1\", \"Second\"\nassert solution(\"I-NTERPOL\") == \"2\", \"Third\"\nassert solution(\"G-MI6\") == \"3\", \"Fourth\"\nassert solution(\"RF-KGB1\") == \"4\", \"Fifth\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\nassert solution('') == 'HE GOT AWAY!'\n\n\"\"\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nN-FBI2\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI3\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI4\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI5\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI6\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI7\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI8\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI9\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI10\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n''') == '''1\n2\n3\n4\n5\n6\n7\n8\n9'''\n\nassert solution('''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nN-FBI2\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI3\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI4\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI5\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI6\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI7\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI8\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI9\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nN-FBI10\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n''') == '''2\n3\n4\n5\n6\n7\n8\n9'''"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '3'\nassert solution('RF-KGB1') == '3'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('N-FBI1') == \"1\"\nassert solution('9A-USKOK') == \"1\"\nassert solution('I-NTERPOL') == \"1\"\nassert solution('G-MI6') == \"1\"\nassert solution('RF-KGB1') == \"1\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('N321-CIA') == '1'\nassert solution('F3-B12I') == '1'\nassert solution('F-BI-12') == '1'\nassert solution('OVO-JE-CIA') == 'HE GOT AWAY!'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '2'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 2\\n3 2\\n') == '7.0'\nassert solution('2\\n3 2\\n4 3\\n') == '6.0'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8.0'\nassert solution('3 3 3') == '8.0'\nassert solution('4 4 5') == '8.0'\nassert solution('5 5 5') == '8.0'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\\n\") == \"8.0\"\nassert solution(\"2\\n1 1 1\\n2 2 2\\n\") == \"4.0\""
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8.0'\nassert solution('1') == '9.0'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0'"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8.0'\nassert solution('3 3 3') == '8.0'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 3 3\n4 4 5\n''') == '8.0'\nassert solution('''\n5\n3 3 3 3 3\n4 5 5 5 5\n6 6 6 6 6\n''') == '10.76041470661543'"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4\\n') == '6.843530573929037'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n4 4 5\n5 5 5\n6 6 6\n7 7 7\nSample Input 3:\n5\n6 5 7 9 4 8\nSample Output 3:\n10.0\n\"\"\") == '10.0'\nassert solution(\"\"\"\n5\n5 5 7 9 4\nSample Input 4:\n5\n6 5 7 9 4\nSample Output 4:\n10.0\n\"\"\") == '10.0'\nassert solution(\"\"\"\n2\n3 3 3\n4 4 5\n\"\"\") == '8.0'\nassert solution(\"\"\"\n2\n1 1 1\nSample Input 5:\n3\n0 1 0\nSample Output 5:\n0\n\"\"\") == '0'\nassert solution(\"\"\"\n2\n1 1 1\nSample Input 6:\n2\n0 2 4\nSample Output 6:\n4\n\"\"\") == '4'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('18') == '19'\nassert solution('25') == '27'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('6') == '6'\nassert solution('99999') == '9879'\nassert solution('1000000000') == '1000000000000'"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''32\n34\n40\n''') == \"34\"\n\nassert solution('''56\n64\n72\n''') == \"64\"\n\nassert solution('''12\n16\n20\n24\n30\n32\n36\n48\n60\n72\n76\n80\n84\n90\n96\n112\n''') == \"96\""
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '7'\nassert solution('90') == '99'\nassert solution('99') == '99'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\nassert solution('8') == '8'\nassert solution('22') == '22'\nassert solution('102') == '102'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('25') == '27'\nassert solution('35') == '37'\nassert solution('100') == '200'\nassert solution('150') == '151'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\nprint(solution(input()))\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nprint(solution(input()))"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+8+8') == '19'\nprint('\"Run\" is good. Great job!')\n'''"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1+9+8+4'\n) == '7'\nassert solution(\n    '1+2+3+4+5+6+7+8+9'\n) == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1+2+3+4+5+6+7+8+9\n''') == \"188\"\nassert solution('''\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+9\n1+2+3+4+5+6+7+8+"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1+9+8+4\n''') == '7'\nassert solution('''\n1+2+3+4+5+6+7+8+9\n''') == '188'\nassert solution('''\n1+2+3+4+5+6+7+8+9+0\n''') == '36'\nassert solution('''\n1+9+8+4+5+6+7+8+9+0\n''') == '37'\nassert solution('''\n1+2+3+4+5+6+7+8+9+0+0\n''') == '179'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nprint(f'{solution(stdin)}')\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 5 -2 4\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n\n\"\"\"\n\nimport sys\nfrom collections import deque\nsys.setrecursionlimit(10**6)\n\nfrom collections import defaultdict"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 5 2\n''') == '2 5'\nassert solution('''\n2 2 -4 5\n''') == '5 -2 4'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\""
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\nassert solution('10 3') == '3 3 3 3 2 2 2 1 1'\nassert solution('100 3') == '3 3 3 3 2 2 2 1 1'\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 2\n2 1 2 1 2\n\"\"\") == \"2 1 2 1 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 1 2 1 2\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\""
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2 1 2\") == \"2 2 1 1\"\nassert solution(\"5 2\") == \"2 1 2\"\n\nhttps://codingcompetitions.withgoogle.com/kickstart/rounds/00000000000000cb/0000000000001732"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '1 2 3'\nassert solution('5\\n2 1 2 1 2') == '2 1 2 2 1 2'\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n\nfrom collections import Counter\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('18 1') == '2'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 100\\n\"\n    \"8 5\\n\"\n) == \"875\"\nassert solution(\n    \"1 10\\n\"\n    \"2 2\\n\"\n) == \"1\"\nassert solution(\n    \"5 100\\n\"\n    \"3 5\\n\"\n) == \"3\"\nassert solution(\n    \"3 20\\n\"\n    \"1 1\\n\"\n) == \"3\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 100\") == \"100\"\nassert solution(\"38 24\") == \"875\"\n\"\"\"\n\nimport sys\nimport math\n\nA, I = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100') == '100'\nassert solution('38 24') == '875'\n\nInput:\n38 24\n\nOutput:\n875\n\"\"\"\n\n\nimport sys\n\nlines = sys.stdin.readlines()"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"875\"\nprint(solution(input()))\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''38 24\n1 100''') == '875'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n38 24\n''') == '875', 'First'\nassert solution('''\n1 100\n''') == '100', 'Second'"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '875'\nassert solution('1 2') == '100'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\""
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '875'\nassert solution('3 5') == '100'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nprint(solution(input()))\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n\nassert solution(input()) == input()\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n\nsolution()"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\""
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 13') == 'programming'\nassert solution('15 24') == 'contest'\nassert solution('16 39') == 'impossible'"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n7 95\n\"\"\") == \"contest\"\nassert solution(\n\"\"\"\n12 150\n\"\"\") == \"programming\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 96\") == \"contest\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\nassert solution(\"22 11\") == \"possible\"\nassert solution(\"19 23\") == \"impossible\"\n'''"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4\n5\n\"\"\") == \"contest\", \"Impossible\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"contest\"\nassert solution(input()) == \"programming\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\"\"\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11 131''') == 'programming'\nassert solution('''7 96''') == 'contest'\nassert solution('''4 24''') == 'imperious'\nassert solution('''0 23''') == 'impossible'\nassert solution('''4 1''') == 'impossible'\n\nSample Input 3:\n4 8\nSample Output 3:\nimperious\n\nSample Input 4:\n8 16\nSample Output 4:\nimpossible\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 10\n             9 9\n             8 8\n             7 7\n             6 6\n             5 5\n             4 4\n             3 3\n             2 2\n             1 1\n             1 1''') == \"programming\"\n\nassert solution('''10 10\n             9 8\n             8 7\n             7 6\n             6 5\n             5 4\n             4 3\n             3 2\n             2 2\n             1 1\n             1 1''') == \"contest\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 12 \"A\"\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB') == 'BBABABABABAB'\nassert solution('3 12 \"A\"\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB') == 'BBABABABABAB'\nassert solution('5 6 \"A\"\\nABABABABABAC\\nBBBABABABABB\\nABBABABABABB\\nABBABABABABB\\nABBABABABABB') == 'ABBABABABABB'\nassert solution('3 1 \"X\"\\nX^\\n--') == '--'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n'''\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''8 5 'A'\nAAAB\nBAAB\nAABB\nABAB\nABAB\nABAB\nABAB\nABAB\n''') == '''ABAB\nABAB\nABAB\nABAB\nABAB\nABAB\nABAB\nABAB\n'''\n\nassert solution('''8 5 'X'\nX^\n--\n\n.X\n--\n\nABA\nABA\nABA\nABA\nABA\nABA\nABA\nABA\n''') == '''ABA\nABA\nABA\nABA\nABA\nABA\nABA\nABA\n'''\n\nassert solution('''8 4 'X'\nX^\n--\n\n.X\n--\n\nXA\nXA\nXA\nXA\nXA\nXA\nXA\nXA\n''') == '''XA\nXA\nXA\nXA\nXA\nXA\nXA\nXA\nXA\n'''\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n''') == '''.^\n--\n\n'''"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 \"X\"' ) == '.X\\n--\\n'\nassert solution('3 12 \"A\"' ) == 'ABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 'X'\nX^''') == '''.^'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 'X'\") == \".X\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"6 5 'A'\") == \"AAABBBCCC\"\nassert solution(\"8 10 'A'\") == \"AAABBBCCC\"\nassert solution(\"1 2 'X'\") == \"\"\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\nSample Input 3:\n3 12 'A'\nAABAABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABB\nBBABABABABAB\nBABABABABABB\nSample Output 3:\nBAABABABABAC\nBBAABABABABB\nBAABABABABAB\n'''\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \".X\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 X') == 'X^'\nassert solution('3 12 A') == 'ABABABABABAC'\nassert solution('10 15 X') == 'X^'\nassert solution('8 15 X') == 'X^'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\".^\n--\n\"\"\"\nassert solution(\n\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBBABABABABAB\n\"\"\") == \"\"\"BBABABABABAB\nBBABABABABAB\nBBABABABABAB\n\"\"\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 4 14\n''') == '1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n''')\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 4, 4, 14]) == '1 0 3'\nassert solution([100, 80, 60, 240]) == '0 0 4'\nassert solution([2, 2, 2, 2]) == '0 0 3'\nassert solution([2, 2, 2, 2]) == 'impossible'\nassert solution([2, 2, 2, 2]) == 'impossible'\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"0 1 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n1 2 0\\n1 3 0'"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n\n\n------------------------------------------\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\nassert solution(\"1 1 1\") == \"0 1 2\"\nassert solution(\"2 2 2\") == \"1 1 1\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '1 3 6 9'\nassert solution('8') == '3 4 5 6'"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '8'\nassert solution('6') == '6'\nassert solution('9') == 'good job!'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\"\nassert solution(\"100\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\n\n\"\"\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == 'good job'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n''') == '1 2 3 6 5 4 8 7 9 10 11 13'\nassert solution('''\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n''') == '4 1 2 3 6 5 4 7 8 9 10 11 13'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"10\\n\"\n    \"11\\n\"\n    \"13\\n\"\n    \"12\\n\"\n    \"15\\n\"\n    \"14\\n\"\n    \"17\\n\"\n    \"16\\n\"\n    \"19\\n\"\n    \"18\\n\"\n    \"21\\n\"\n    \"20\\n\"\n    \"23\\n\"\n    \"22\\n\"\n    \"25\\n\"\n    \"24\\n\"\n    \"27\\n\"\n    \"26\\n\"\n    \"29\\n\"\n    \"28\\n\"\n    \"31\\n\"\n    \"30\\n\"\n    \"33\\n\"\n    \"32\\n\"\n    \"35\\n\"\n    \"34\\n\"\n    \"37\\n\"\n    \"36\\n\"\n    \"39\\n\"\n    \"38\\n\"\n    \"41\\n\"\n    \"40\\n\"\n    \"43\\n\"\n    \"42\\n\"\n    \"45\\n\"\n    \"44\\n\"\n    \"47\\n\"\n    \"46\\n\"\n    \"49\\n\"\n    \"48\\n\"\n    \"51\\n\"\n    \"50\\n\"\n    \"53\\n\"\n    \"52\\n\"\n    \"55\\n\"\n    \"54\\n\"\n    \"57\\n\"\n    \"56\\n\"\n    \"59\\n\"\n    \"58\\n\"\n    \"61\\n\"\n    \"60\\n\"\n    \"63\\n\"\n    \"62\\n\"\n    \"65\\n\"\n    \"64\\n\"\n    \"67\\n\"\n    \"66\\n\"\n    \"69\\n\"\n    \"68\\n\"\n    \"71\\n\"\n    \"70\\n\"\n    \"73\\n\"\n    \"72\\n\"\n    \"75\\n\"\n    \"74\\n\"\n    \"77\\n\"\n    \"76\\n\"\n    \"79\\n\"\n    \"78\\n\"\n    \"81\\n\"\n    \"80\\n\"\n    \"83\\n\"\n    \"82\\n\"\n    \"85\\n\"\n    \"84\\n\"\n    \"87\\n\"\n    \"86\\n\"\n    \"89\\n\"\n    \"88\\n\"\n    \"91\\n\"\n    \"90\\n\"\n    \"93\\n\"\n    \"92\\n\"\n    \"95\\n\"\n    \"94\\n\"\n    \"97\\n\"\n    \"96\\n\"\n    \"99\\n\"\n    \"98\\n\"\n    \"101\\n\"\n    \"100\\n\"\n    \"103\\n\"\n    \"102\\n\"\n    \"105\\n\"\n    \"104\\n\"\n    \"107\\n\"\n    \"106\\n\"\n    \"109\\n\"\n    \"108\\n\"\n    \"111\\n\"\n    \"110\\n\"\n    \"113\\n\"\n    \"112\\n\"\n    \"115\\n\"\n    \"114\\n\"\n    \"117\\n\"\n    \"116\\n\"\n    \"119\\n\"\n    \"118\\n\"\n    \"121\\n\"\n    \"120\\n\"\n    \"123\\n\"\n    \"122\\n\"\n    \"125\\n\"\n    \"124\\n\"\n    \"127\\n\"\n    \"126\\n\"\n    \"129\\n\"\n    \"128\\n\"\n    \"131\\n\"\n    \"130\\n\"\n    \"133\\n\"\n    \"132\\n\"\n    \"135\\n\"\n    \"134\\n\"\n    \"137\\n\"\n    \"136\\n\"\n    \"139\\n\"\n    \"138\\n\"\n    \"141\\n\"\n    \"140\\n\"\n    \"143\\n\"\n    \"142\\n\"\n    \"145\\n\"\n    \"144\\n\"\n    \"147\\n\"\n    \"146\\n\"\n    \"149\\n\"\n    \"148\\n\"\n    \"151\\n\"\n    \"150\\n\"\n    \"153\\n\"\n    \"152\\n\"\n    \"155\\n\"\n    \"154\\n\"\n    \"157\\n\"\n    \"156\\n\"\n    \"159\\n\"\n    \"158\\n\"\n    \"161\\n\"\n    \"160\\n\"\n    \"163\\n\"\n    \"162\\n\"\n    \"165\\n\"\n    \"164\\n\"\n    \"167\\n\"\n    \"166\\n\"\n    \"169\\n\"\n    \"168\\n\"\n    \"171\\n\"\n    \"170\\n\"\n    \"173\\n\"\n    \"172\\n\"\n    \"175\\n\"\n    \"174\\n\"\n    \"177\\n\"\n    \"176\\n\"\n    \"179\\n\"\n    \"178\\n\"\n    \"181\\n\"\n    \"180\\n\"\n    \"183\\n\"\n    \"182\\n\"\n    \"185\\n\"\n    \"184\\n\"\n    \"187\\n\"\n    \"186\\n\"\n    \"189\\n\"\n    \"188\\n\"\n    \"191\\n\"\n    \"190\\n\"\n    \"193\\n\"\n    \"192\\n\"\n    \"195\\n\"\n    \"194\\n\"\n    \"197\\n\"\n    \"196\\n\"\n    \"199\\n\"\n    \"198\\n\"\n    \"201\\n\"\n    \"200\\n\"\n    \"203\\n\"\n    \"202\\n\"\n    \"205\\n\"\n    \"204\\n\"\n    \"207\\n\"\n    \"206\\n\"\n    \"209\\n\"\n    \"208\\n\"\n    \"211\\n\"\n    \"210\\n\"\n    \"213\\n\"\n    \"212\\n\"\n    \"215\\n\"\n    \"214\\n\"\n    \"217\\n\"\n    \"216\\n\"\n    \"219\\n\"\n    \"218\\n\"\n    \"221\\n\"\n    \"220\\n\"\n    \"223\\n\"\n    \"222\\n\"\n    \"225\\n\"\n    \"224\\n\"\n    \"227\\n\"\n    \"226\\n\"\n    \"229\\n\"\n    \"228\\n\"\n    \"231\\n\"\n    \"230\\n\"\n    \"233\\n\"\n    \"232\\n\"\n    \"235\\n\"\n    \"234\\n\"\n    \"237\\n\"\n    \"236\\n\"\n    \"239\\n\"\n    \"238"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1 3 6 12\"\nassert solution(\"16\\n4\\n10\\n18\\n20\\n25\\n28\\n30\\n32\\n33\\n35\\n36\\n38\\n40\\n42\\n44\\n45\\n47\\n48\\n50\\n51\\n53\\n55\\n57\\n58\\n60\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n\") == \"1 3 6 12\\n4 5 7 9\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    1\n    2\n    4\n    ''') == '1,3,4'\nassert solution('''\n    1\n    2\n    3\n    4\n    ''') == '1,2,3,4'\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    ''') == '2,3,5,7,11,13,16,19,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435,438,441,444,447,450,453,456,459,462,465,468,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525,528,531,534,537,540,543,546,549,552,555,558,561,564,567,570,573,576,579,582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,768,771,774,777,780,783,786,789,792,795,798,801,804,807,810,813,816,819,822,825,828,831,834,837,840,843,846,849,852,855,858,861,864,867,870,873,876,879,882,885,888,891,894,898,901,904,907,910,913,916,919,922,925,928,931,934,937,940,943,946,949,952,955,958,961,964,967,970,973,976,979,982,985,988,991,994,997,1003,1007,1010,1013,1016,1019,1022,1025,1028,1031,1034,1037,1040,1043,1046,1049,1052,1055,1058,1061,1064,1067,1070,1073,1076,1079,1082,1085,1088,1091,1094,1097,1100,1103,1106,1109,1112,1115,1123,1126,1130,1133,1136,1139,1142,1145,1148,1151,1154,1157,1160,1163,1166,1169,1172,1175,1178,1181,1184,1187,1190,1193,1196,1199,1202,1205,1208,1211,1214,1217,1220,1223,1226,1229,1232,1235,1238,1241,1244,1247,1250,1253,1256,1259,1262,1265,1268,1271,1274,1277,1280,1283,1286,1289,1292,1295,1298,1301,1304,1307,1310,1313,1316,1319,1322,1325,1328,1331,1334,1337,1340,1343,1346,1349,1352,1355,1358,1361,1364,1367,1370,1373,1376,1379,1382,1385,1388,1391,1394,1397,1400,1403,1406,1409,1412,1415,1418,1421,1424,1427,1430,1433,1436,1439,1442,1445,1448,1451,1454,1457,1460,1463,1466,1469,1472,1475,1478,1481,1484,1487,1490,1493,1496,1499,1502,1505,1508,1511,1514,1517,1520,1523,1526,1529,1532,1535,1538,1541,1544,1547,1550,1553,1556,1559,1562,1565,1568,1571,1574,1577,1580,"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'good job!'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('7') == '6'\nassert solution('8') == '7'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 7 1.2 1.3\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n3 5 0.2 0.3\n''') == '134422.76620685'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'''\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 1 1\n1\n1\n2\n10\n1.2\n''') == '157079.0'\nassert solution('''3 3 1 1\n3\n1\n3\n10\n1.2\n''') == '157079.0'\nassert solution('''4 4 1 1\n4\n1\n4\n10\n1.2\n''') == '157079.0'\nassert solution('''5 5 1 1\n5\n1\n5\n10\n1.2\n''') == '157079.0'\nassert solution('''6 6 1 1\n6\n1\n6\n10\n1.2\n''') == '157079.0'"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('20 4.12 10000 10.3') == '1383.40409766'\nassert solution('100 10.12 0.1') == '9695.5566688'\n\"\"\""
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 20 30 4 5') == '1579.041065 50.001365'"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 3.1 4.1 4.1 4.1 4.1') == '9.1430583755462'\nassert solution('100 5.5 3.1 3.1 3.1 3.1') == '175.684972127133'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\n\n'''\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4.1 1000000 1.0') == '0.012345679012345679'\nassert solution('5 3.1 1000000 3.0') == '0.0145679012345679'\nassert solution('5 1.0 1000000 1.0') == '0.012499999999999999'\nassert solution('100 5.1 1000000 5.0') == '0.0024999999999999999'\nassert solution('100 2.1 1000000 2.0') == '0.0024999999999999999'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 5 12') == '5.0'\nassert solution('2 0.3 3.5 8.9') == '3.0'\n\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput:\n\"\"\",\n\"\"\"\\\nInput:\n\nOutput"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"11\") == \"8\"\nassert solution(\"24\") == \"14\""
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n''') == '0'\nassert solution('''\n2\n''') == '1'\nassert solution('''\n3\n''') == '2'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n5\n''') == '4'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == '6'\nassert solution('''20\n3\n10\n4\n6''') == '20'\nassert solution('''1\n2\n3\n4\n5\n6''') == '12'\nassert solution('''10\n1\n2\n3\n4\n5''') == '15'\nassert solution('''20\n1\n2\n3\n4\n5''') == '20'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n            [1]\n            [1]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [2,1]\n            [1,2]\n            [2,1]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [2,1]\n            [1,2]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [2,1]\n            [1,2]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [2,1]\n            [1,2]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [2,1]\n            [1,2]\n            [2,1]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2]\n            [1,2"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\n\n\"\"\""
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"4\"\nassert solution(\"3\\n\") == \"8\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('10') == '6'\nassert solution('100') == '77'\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''A\nA\nA\nA\nA\n''') == '3'\n\nassert solution('''B\nB\nB\nB\nB\n''') == '2'\n\nassert solution('''A\nC\nD\nA\nC\nD\nB\nB\n''') == '2'\n\nassert solution('''A\nB\nA\nC\nD\nA\nB\nB\n''') == '3'\n\nassert solution('''D\nD\nD\nD\nD\n''') == '0'"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\n\nSample Input:\n5\nA\nB\nC\nD\nE\nSample Output:\n5\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('A\\nA\\nA\\nA\\n') == '3'\nassert solution('B\\nC\\nD\\nA\\n') == '0'\nassert solution('A\\nB\\nC\\nA\\n') == '1'\nassert solution('A\\nA\\nA\\nD\\n') == '0'\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nA\nA\nA\nA\n''') == \"3\""
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nC\nD\n''') == '3'\nassert solution('''\n3\nB\nC\n''') == '0'\n''')\n\nFind all distinct roots of a quadratic equation, given its coefficients A and B.\n\nFor example, when $A = 1.2, B = -1.2$, the equation would be\n$ax^2 + bx + c = 0$\n\n(using the quadratic formula)\n\n$(x, y) \\in \\mathbb{R}$\n\nTask description:\n\nThe input is a sequence of $k$ integers $a, b, c$, where $a \\ne 0, b \\ne 0, c \\ne 0$ and $k = \\text{length of the input}$.\n\nYour goal is to find all distinct roots of the equation:\n$ax^2 + bx + c = 0$\n\nThe function should return an array of roots in the form of tuples of integers in ascending order.\n\nIf there are no solutions to the equation, return an empty array.\n\nIf the equation has any unique root, then the solution will be (a, b, c).\n\nInput:\n3\n1 2\n1 1\n1 1\nOutput:\n(-1, 0, 1)\n(-1, -1, 1)\n(-1, 1, 1)\n'''"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '3'\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'\nassert solution('4\\nA\\nB\\nC\\nD\\n') == '2'\nassert solution('5\\nA\\nB\\nC\\nD\\nE\\n') == '0'\nassert solution('5\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '1'\nassert solution('4\\nA\\nA\\nA\\nA') == '2'\n'''"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''A\nA\nA\nA\n''') == '3'\n\nSample Input:\n3\nA\nB\nC\nD\nSample Output:\n1\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nA\nA\nA\nA\n''') == '3'\nSample Input 2:\n4\nB\nB\nA\nD\nSample Output:\n2\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1 2\") == \"..xx..\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3 1 2\n.x.\nx.x\n.x.\nSample Output:\n..xx..\nxx..xx\n..xx..\n''') == '''..xx..\nxx..xx\n..xx..\n'''\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 3\\n.x.\\nx.x\\n.x.') == '..xx..'\nassert solution('4 4 1 2\\n.x.\\nx.x\\n.x.\\nx.x') == 'x.xx.x.x'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n.x.\nx.x\n.x.\n\"\"\") == \".xx.xx.xx\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2\") == \".xx.x\"\nassert solution(\"3 3 1 2\") == \".xx.xx\"\nassert solution(\"3 3 1 2\") == \".xx.xx\"\nassert solution(\"1 1 3 5\") == \"1..5.\"\nassert solution(\"4 4 5 5\") == \"4.5.5.5\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('1 2 3 4') == '1xx1xx'\nassert solution('3 3 1 2') == '..xx..'\n\"\"\"\nimport re"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\nassert solution('''\n2 2 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\nassert solution('''\n3 3 1 2\nx.x\nx.x\nx.x\n''') == '..xx..'\nassert solution('''\n3 3 1 2\nx.x\nx.x\n.x.\n''') == '..xx..'\nassert solution('''\n3 3 1 2\nx.x\nx.x\n.x.\n''') == '..xx..'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2\") == \"..xx..\"\nassert solution(\"3 3 1 2\") == \"...x...\"\nassert solution(\"3 3 1 1\") == \"..xx..\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('1 1 1 1') == 'x..'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"xx..xx\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 -13 20\") == \"17 20\"\n\nSTDIN_SINGLE_TEST = \"\"\"\nF 60 13 20\n\"\"\"\n\nSTDIN_MULTIPLE_TEST = \"\"\"\nB 60 -13 20\n\"\"\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"F 60 13 20\") == r\"14 20\"\nassert solution(r\"B 60 13 20\") == r\"13 20\"\nassert solution(r\"B 60 13 00\") == r\"13 00\"\nassert solution(r\"F 60 13 00\") == r\"14 00\"\nassert solution(r\"B 60 13 59\") == r\"13 59\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\""
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n\nThe test cases are those shown in sample inputs.\n\nSample Input:\n2\nB 60 13 20\nF 20 13 60\nSample Output:\n20 13 60\n13 20 60\n\"\"\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"13 20\"\n\n-------SOLUTION-------\nimport math"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 21'\nassert solution('B 60 13 20') == '13 21'"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"F 60 -13 20\") == \"23 20\"\nassert solution(\"B 60 -13 20\") == \"13 20\"\nassert solution(\"B 60 -13 -20\") == \"11 -20\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 20\") == \"nope\"\nassert solution(\"AUG 28\") == \"yup\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 19\") == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 26') == 'nope'"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('FEB 19') == 'nope'\n\n\"\"\")\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''OCT 31''') == 'yup'\nassert solution('''FEB 9''') == 'yup'\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == 'yup'\nassert solution(\"JAN 9\") == 'yup'\nassert solution(\"JAN 10\") == 'nope'\nassert solution(\"FEB 1\") == 'yup'\nassert solution(\"FEB 28\") == 'nope'\n\"\"\""
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"OCT 31\") == \"yup\"\nassert solution(\n    \"JAN 20\") == \"nope\"\n\n--------------------------------------------------\nA company wants to compute the distance between a city and another city. The distance is defined as the Euclidean distance between the coordinates.\n\nConsider the following input:\n\n1, 1\n1, 2\n2, 1\n2, 2\nThe first number represents the x-coordinate of the first city, and the second number represents the y-coordinate of the first city. The third number represents the x-coordinate of the second city, and the fourth number represents the y-coordinate of the second city.\n\nYour task is to compute and return the Euclidean distance between the two cities.\n\nInput Format:\nThe first line contains a single integer N, the total number of cities.\nThe next N lines contain the coordinates of the cities. Each of the N lines contains 2 space-separated integers describing the x- and y-coordinates of a city.\n\nOutput Format:\nThe distance between the two cities as an integer.\n\nSample Input 1\n5\n1 1\n2 2\n3 3\n3 1\n1 3\nSample Output 1\n2\n\nSample Input 2\n3\n0 0\n4 4\n0 1\n0 0\nSample Output 2\n0"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 12\") == \"nope\"\nassert solution(\"FEB 28\") == \"yup\"\nassert solution(\"FEB 13\") == \"nope\"\nprint(solution(input()))\n\nInput:\nFEB 25\nOutput:\nyup\n\"\"\""
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"SEP 27\") == \"nope\"\n\"\"\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('FEB 7') == 'nope'\n\nfor i in range(int(input())):\n    print(solution(input()))\n\n### See the detailed problem description for explanation of the input and output format.\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2 2 2 2') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak#.\\n#.#.#.#.\\n#.#.#.##'\nassert solution('4 4\\n2 2 2 2\\n#honi#\\n#ker#\\n#nera#\\n#irak#') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#ker#.#\\n#.nera#.\\n.#irak#.'\nassert solution('4 4\\n2 2 2 2\\n#honi#\\n#ker#\\n#nera#\\n#irak#') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#ker#.#\\n#.nera#.\\n.#irak#.'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 2') == '#.honi#.\\n#.oker#.\\n#.nera#.\\n.#.irak#.'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n2 2 2 2') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.#\\n#.#.#.#.#\\n'\nassert solution('''10 6\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n'\nassert solution('''5 6\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n#.#.#.#.#\\n'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"###.#.#.\\n.honi#.\\n#.nera#.\\n#.irak#.\\n###.#.#.\\n###.#.#.\""
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.'\nassert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.honi#.'\nassert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.nera#.'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\""
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 2\") == \"#.#.#.#.\\n.honi#.\\n.nera#.\\n.#irak.#\\n.#.#.#.\\n#.honi#.\\n#.nera#.\\n#.irak#.\\n#.honi#.\\n#.nera#.\\n.irak#.\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n2 2 2 2\\nholi\\noker\\nnera\\nirak\\n') == '#.honi#.\\n#.oker.#\\n#.nera#.\\n#.irak.#\\n'\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: a8,b8,c8,d8,e8,f8,g8,h8,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+' == solution('White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4')'\nassert solution('Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+' == solution('Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6')'\nassert solution('White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,a4,e5') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+' == solution('White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: a1,a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2\") == \"Black: a8,b8,c8,d8,e8,f8,g8,h8,i8,j8,k8,l8,m8,n8,o8,p8,q8,r8,s8,t8,u8,v8,w8,x8,y8,z8\"\nassert solution(\"White: a1,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2,a8,b8,c8,d8,e8,f8,g8,h8,i8,j8,k8,l8,m8,n8,o8,p8,q8,r8,s8,t8,u8,v8,w8,x8,y8,z8,r8,s8,t8,u8,v8,w8,x8,y8,z8\") == \"Black: a1,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2,a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2,a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2,a8,b8,c8,d8,e8,f8,g8,h8,i8,j8,k8,l8,m8,n8,o8,p8,q8,r8,s8,t8,u8,v8,w8,x8,y8,z8\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Nb1,a2,b2,c2,d2,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\""
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Ng1,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Ng1,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\n\"\"\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: +---+---+---+---+---+---+---+---+\\n+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\"\n\nassert solution(\"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: +---+---+---+---+---+---+---+---+\\n+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(White) == \"Nc6,Nc6,Rf6,Rf6,Ra6,Ra6,Nb6,Nb6,Ra6,Ra6,Nc6,Nc6,Rf6,Rf6,Nf6,Nf6,Rh6,Rh6,Qd6,Qd6,Bc6,Bc6,Qa6,Qa6,Bf6,Bf6,Nf6,Nf6,Rf6,Rf6,Ra6,Ra6,Nb6,Nb6,Nd6,Nd6,Qd6,Qd6,Rb6,Rb6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Rf6,Rf6,Bf6,Bf6,Qf6,Qf6,Rb6,Rb6,Qa6,Qa6,Ba6,Ba6,Qg6,Qg6,Rh6,Rh6,Qh6,Qh6,Rb6,Rb6,Qa6,Qa6,Ba6,Ba6,Qg6,Qg6,Rh6,Rh6,Qh6,Qh6,Rf6,Rf6,Rb6,Rb6,Qc6,Qc6,Rc6,Rc6,Qd6,Qd6,Nd6,Nd6,Rd6,Rd6,Nf6,Nf6,Qf6,Qf6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qg6,Qg6,Qh6,Qh6,Bf6,Bf6,Qa6,Qa6,Qa6,Qa6,Bg6,Bg6,Rg6,Rg6,Qh6,Qh6,Rh6,Rh6,Qg6,Qg6,Qb6,Qb6,Qc6,Qc6,Rb6,Rb6,Qd6,Qd6,Rc6,Rc6,Qf6,Qf6,Qf6,Qf6,Qa6,Qa6,Bg6,Bg6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Qg6,Qg6,Qh6,Qh6,Ra6,Ra6,Nb6,Nb6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Qf6,Qf6,Qb6,Qb6,Qa6,Qa6,Ra6,Ra6,Nb6,Nb6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qd6,Qd6,Rf6,Rf6,Qh6,Qh6,Rb6,Rb6,Nd6,Nd6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Qf6,Qf6,Qb6,Qb6,Qa6,Qa6,Ra6,Ra6,Nb6,Nb6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qd6,Qd6,Nf6,Nf6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qd6,Qd6,Nf6,Nf6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qd6,Qd6,Nf6,Nf6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qf6,Qf6,Qf6,Qf6,Qb6,Qb6,Qa6,Qa6,Ra6,Ra6,Nb6,Nb6,Ra6,Ra6,Nc6,Nc6,Rc6,Rc6,Qc6,Qc6,Rh6,Rh6,Qg6,Qg6,Qh6,Qh6,Rb6,Rb6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Qf6,Qf6,Qa6,Qa6,Qa6,Qa6,Rb6,Rb6,Qd6,Qd6,Rf6,Rf6,Qh6,Qh6,Qf6,Qf6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qg6,Qg6,Qh6,Qh6,Bf6,Bf6,Qa6,Qa6,Ba6,Ba6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qf6,Qf6,Qf6,Qf6,Qb6,Qb6,Qa6,Qa6,Bf6,Bf6,Qb6,Qb6,Qc6,Qc6,Rh6,Rh6,Qg6,Qg6,Qh6,Qh6,Rf6,Rf6,Rb6,Rb6,Qf6,Qf6,Qg6,Qg6,Qh6,Qh6,Rf6,Rf6,Rb6,Rb6,Qf6,Qf6,Qg6,Qg6,Qh6,Qh6,Rh"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\".White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \\\n    \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\".Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \\\n    \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"2.000000 8.000000\") == \"Need more materials!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.5 4.5') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000 4.000000') == \"Diablo is happy!\"\nassert solution('0.000000 4.000000') == \"Need more materials!\"\n\"\"\"\n\nA, N = input().split()\n\nA = float(A)\nN = float(N)"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1.000000 4.000000''') == 'Diablo is happy!'\nassert solution('''1.000000 3.000000''') == 'Need more materials!'"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0.00000 4.00000\") == \"Diablo is happy!\"\nassert solution(\"0.00000 0.00000\") == \"Need more materials!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nprint('Diablo is happy!')\nassert solution('0.000000 4.000000') == 'Need more materials!'\nprint('Need more materials!')"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"0.01 0.00\") == \"Need more materials!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 4.000000') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1.000000 4.000000\n''') == 'Diablo is happy!'\nassert solution('''\n0.250000 50.000000\n''') == 'Need more materials!'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 3 4 5\") == \"use the stairs\"\nassert solution(\"100 100 1 100 3 100 1\") == \"use the stairs\"\nassert solution(\"3 3 2 5 1\") == \"use the stairs\"\nassert solution(\"2 5 3 2 2\") == \"use the stairs\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([10, 1, 10, 2, 1]) == \"6\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3 1\n1\n2\n1\n1''') == 'use the stairs'\n\nassert solution('''8 9 10 2\n3\n5\n3\n3\n5\n4\n3\n4''') == '7'\n\nassert solution('''10 10 2\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1''') == 'use the stairs'\n\nassert solution('''10 1 3\n1\n1\n2\n1\n2\n2\n3\n1\n1\n1\n2''') == '1'\n\nassert solution('''9 9 3\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2''') == 'use the stairs'"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 1 10 2 1\\n') == '6'\nassert solution('20 20 20 20 20\\n') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 1 10 2 1\n''') == 'use the stairs'\nassert solution('''\n2 3 5 7\n''') == '6'\nassert solution('''\n7 9 14 15 17\n''') == 'use the stairs'\nassert solution('''\n9\n''') == '8'\nassert solution('''\n10\n''') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 3 1') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\\n\") == \"6\"\nassert solution(\"20 1 1 1 1\\n\") == \"use the stairs\"\n\nimport sys\nimport os\nimport inspect\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nsys.path.insert(0, parentdir)"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 1 10 3 2\n''') == '6'\n\nassert solution('''\n20 10 5 3 1\n''') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 1\") == \"use the stairs\"\nassert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"1 1 10 2 1\") == \"6\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 10 2 1\") == \"6\"\nassert solution(\"3 2 10 2 1\") == \"use the stairs\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n500\n120\n75\n\"\"\") == \"128.8\"\nassert solution(\"\"\"\n3\n1000\n10\n75\n\"\"\") == \"89.06666666666666\"\n\nassert solution(\"\"\"\n4\n500\n750\n120\n75\n\"\"\") == \"129.3333333333333\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('2\\n5.1\\n1.4\\n3.4\\n5.5\\n6.9') == '89.06666666666666'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1.5', solution('1\\n2')\nassert solution('5\\n1\\n2\\n3\\n4') == '6.4', solution('5\\n1\\n2\\n3\\n4')\nassert solution('10\\n100\\n90\\n80\\n70\\n60\\n50') == '104.0', solution('10\\n100\\n90\\n80\\n70\\n60\\n50')\nassert solution('10\\n90\\n80\\n70\\n60\\n50') == '104.0', solution('10\\n90\\n80\\n70\\n60\\n50')\nassert solution('10\\n90\\n80\\n70\\n60\\n50\\n3') == '104.0', solution('10\\n90\\n80\\n70\\n60\\n50\\n3')\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n500\n120\n75\n45\n45\n''') == '128.8'\nassert solution('''\n2\n300\n100\n''') == '100.0'\nassert solution('''\n5\n500\n120\n75\n45\n45\n''') == '100.0'\nassert solution('''\n5\n500\n120\n75\n45\n45\n''') == '89.06666666666666'\nassert solution('''\n1\n500\n500\n''') == '500.0'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"3 4 5\") == \"89.0\""
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n500\\n120\\n75\\n') == '128.8'\nassert solution('6\\n1000000000\\n3\\n4\\n5\\n6\\n') == '89.06666666666666'\nassert solution('2\\n100000\\n') == '100.0'\nassert solution('2\\n100000\\n') == '100.0'\nassert solution('2\\n100000\\n') == '100.0'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n500\\n120\\n75\\n') == '128.8'\nassert solution('3\\n2000\\n1000\\n10\\n') == '99.5'\nassert solution('3\\n2000\\n1000\\n100\\n') == '99.0'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''2\n1\n2''') == '1.25'\nassert solution('''1\n1\n1''') == '1.25'\nassert solution('''5\n1\n2\n3\n4\n5''') == '7.75'\nassert solution('''10\n1\n2\n3\n4\n5''') == '5.75'\nprint('You are not stupid enough to try to beat me!')\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '128.8'\nassert solution('1000000') == '89.0'\nassert solution('1000') == '10.0'\nprint('Success')\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '128.8'\nassert solution('3\\n500\\n120\\n75') == '89.06666666666666'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n1\\n1\\n1\\n1') == '4'\nassert solution('30\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''5\n1 45 65 84 343\n''') == '4'\nassert solution('''5\n1 45 65 84 343\n''') == '4'\nassert solution('''5\n1 45 65 84 343\n''') == '4'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\""
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 45 65 84 346\") == \"4\"\nassert solution(\"4\\n1 45 65 84 346\\n\") == \"4\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 45 65 84 346') == '4'\nassert solution('5\\n1 45 65 84 346') == '4'\nassert solution('10\\n1 45 65 84 346') == '6'\nassert solution('5\\n1 45 65 84 346') == '5'\nassert solution('1\\n1 5 5 5 5') == '6'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 45 65 84 346\"\n) == \"4\""
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nprint('check solution')"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\nassert solution(\"10 10\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#G#\\n#G#G#G#G#G#G"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n\n---\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\nassert solution(\"2 4\\n##\\n#T#\") == \"0\"\nassert solution(\"2 3\\n##\\n#\") == \"0\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4') == \"1\"\nassert solution('6 5') == \"1\"\nassert solution('7 3') == \"0\"\nassert solution('10 10') == \"1\"\nassert solution('20 20') == \"0\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 4\n#######\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 4\\n###\\n#P.GTG#\\n#..TGG#\\n###') == '1'\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n\"\"\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 1 2 1\") == \"5\"\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$_____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n\"\"\"\n    ) == '5'\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13 50\") == \"5\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    '____$$$_______$$$______$$$________$$$______$$$____',\n    '____$$$_______$$$______$$$________$$$______$$$____',\n    '_____$_________$________$__________$________$_____',\n    '___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___',\n    '__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__',\n    '_$____$$____$__$__$___$_$$____$___$__$__$___$_$__$_',\n    '$_____$$___$___$___$__$$_____$_$___$___$__$$_____$',\n    '_____$_$______$_$_____$_$_________$_$_____$_$_____',\n    '____$___$____$___$____$___$______$___$____$___$___',\n    '___$____$___$_____$___$____$____$_____$___$____$__',\n    '__$_____$___$_____$___$_____$___$_____$___$_____$_',\n    '__$_____$___$_____$___$_____$___$_____$___$_____$_',\n    '_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$',\n]) == 5\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$______$$$______$$$____\\n____$$$_______$$$______$$$______$$$______$$$______$$$____\\n_____$_________$________$________$________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    \"13 50\",\n    \"____$$$_______$$$______$$$________$$$______$$$____\",\n    \"____$$$_______$$$______$$$________$$$______$$$____\",\n    \"_____$_________$________$__________$________$_____\",\n    \"___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\",\n    \"__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\",\n    \"_$____$$____$__$__$___$_$____$___$__$__$___$_$__$_\",\n    \"$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\",\n    \"_____$_$______$_$_____$_$_________$_$_____$_$_____\",\n    \"____$___$____$___$____$___$______$___$____$___$___\",\n    \"___$____$___$_____$___$____$____$_____$___$____$__\",\n    \"__$_____$___$_____$___$_____$___$_____$___$_____$_\",\n    \"__$_____$___$_____$___$_____$___$_____$___$_____$_\",\n    \"_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\",\n]) == \"5\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$''') == '5'\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13 50') == '5'\nassert solution('36 10') == '1'\nassert solution('36 100') == '1'\nassert solution('35 10') == '1'\nassert solution('35 100') == '2'\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n\"\"\"\n\nimport collections"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\ni can speak pig latin\n''') == 'iyay antcay eakspay igpay atinlay'\nassert solution('''\ni have a friend\n''') == 'iyay aoakspay eay otay indkay otay oday ityay'\n'''"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\""
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('my name is, is, im, i, am, is,!') =='my name is, is, im, i, am, is,!'\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''i cant speak pig latin''') == 'iyay antcay eakspay igpay atinlay'\nassert solution('''i can speak pig latin''') == 'iyay antcay eakspay igpay atinlay'\nassert solution('''i can speak pig latin in three lines''') == 'iyay antcay eakspay igpay atinlay'\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\naa\nab\nac\nad\nae\naf\nag\nah\nai\naj\nak\nal\nam\nan\nao\nap\naq\nar\nas\nat\nau\nav\naw\nax\nay\naz\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbj\nbk\nbl\nbm\nbn\nbo\nbp\nbq\nbr\nbs\nbt\nbu\nbv\nbw\nbx\nby\nbz\nca\ncb\ncc\ncd\nce\ncf\ncg\nch\nci\ncj\nck\ncl\ncm\ncn\nco\ncp\ncq\ncr\ncs\nct\ncu\ncv\ncw\ncx\ncy\ncz\nda\ndb\ndc\ndd\nde\ndf\ndg\ndh\ndi\ndj\ndk\ndl\ndm\ndn\ndo\ndp\ndq\ndr\nds\ndt\ndu\ndv\ndw\ndx\ndy\ndz\nea\neb\nec\ned\nee\nef\neg\neh\nei\nej\nek\nel\nem\nen\nep\neq\ner\nes\net\neu\nev\new\nex\ney\nez\nfa\nfb\nfc\nfd\nfe\nff\nfg\nfh\nfi\nfj\nfk\nfl\nfm\nfn\nfo\nfp\nfq\nfr\nfs\nft\nfu\nfv\nfw\nfx\nfy\nfz\nga\ngb\ngc\ngd\nge\ngf\ngg\ngh\ngi\ngj\ngk\ngl\ngm\ngn\ngo\ngp\ngq\ngr\ngs\ngt\ngu\ngv\ngw\ngx\ngy\ngz\nha\nhb\nhc\nhd\nhe\nhf\nhg\nhh\nhi\nhj\nhk\nhl\nhm\nhn\nho\nhp\nhq\nhr\nhs\nht\nhu\nhv\nhw\nhx\nhy\nhz\nja\njb\njc\njd\nje\njf\njg\njh\nji\njj\njk\njl\njm\njn\njo\njp\njq\njr\njs\njt\nju\njv\njw\njx\njy\njz\nka\nkb\nkc\nkd\nke\nkf\nkg\nkh\nki\nkj\nkk\nkl\nkm\nkn\nko\nkp\nkq\nkr\nks\nkt\nku\nkv\nkw\nkx\nky\nkz\nla\nlb\nlc\nld\nle\nlf\nlg\nlh\nlj\nlk\nll\nlo\nlp\nlq\nlr\nls\nlt\nlu\nlv\nlw\nlx\nly\nlz\nma\nmb\nmc\nmd\nme\nmf\nmg\nmh\nmi\nmj\nmk\nml\nmm\nmn\nmo\nmp\nmq\nmr\nms\nmt\nmu\nmv\nmw\nmx\nmy\nmz\nna\nnb\nnc\nnd\nne\nnf\nng\nnh\nni\nnj\nnk\nnl\nnm\nnn\nno\nnp\nnq\nnr\nns\nnt\nnu\nnv\nnw\nnx\nny\nnz\noa\nob\noc\nod\noe\nof\nog\noh\noi\noj\nok\nol\nom\non\nop\noq\nor\nos\not\nou\nov\now\nox\noy\noz\npa\npb\npc\npd\npe\npf\npg\nph\npi\npj\npk\npl\npm\npn\npo\npp\npq\npr\nps\npt\npu\npv\npw\npx\npy\npz\nqa\nqb\nqc\nqd\nqe\nqf\nqg\nqh\nqj\nqk\nqm\nqn\nqo\nqp\nqq\nqr\nqs\nqt\nqu\nqv\nqw\nqx\nqy\nqz\nra\nrb\nrc\nrd\nre\nrf\nrg\nrh\nri\nrj\nrk\nrl\nrm\nrn\nro\nrp\nrq\nrr\nrs\nrt\nru\nrv\nrw\nrx\nry\nrz\nsa\nsb\nsc\nsd\nse\nsf\nsg\nsh\nsi\nsj\nsk\nsl\nsm\nsn\nso\nsp\nsq\nsr\nss\nst\nsu\nsv\nsw\nsx\nsy\nsz\nta\ntb\ntc\ntd\nte\ntf\ntg\nth\nti\ntj\ntk\ntl\ntm\ntn\nto\ntp\ntq\ntr\nts\ntt\ntu\ntv\ntw\ntx\nty\ntz\nua\nub\nuc\nud\nue\nuf\nug\nuh\nui\nuj\nuk\nul\num\nun\nuo\nup\nur\nus\nut\nuu\nuv\nuw\nux\nuy\nuz\nva\nvb\nvc\nvd\nve\nvf\nvg\nvh\nvi\nvj\nvk\nvl\nvm\nvn\nvo\nvp\nvq\nvr\nvs\nvt\nvu\nvw\nvx\nvy\nvz\nwa\nwb\nwc\nwd\nwe\nwf\nwg\nwh\nwi\nwj\nwk\nwl\nwm\nwn\nwo\nwp\nwq\nwr\nws\nwt\nwu\nwv\nww\nwx\nwy\nwz\nya\nyb\nyc\nyd\nye\nyf\nyg\nyh\nyi\nyj\nyk\nyl\nym\nyn\nyo\nyp\nyq\nyr\nys\nyt\nyu\nyv\nyw\nyx\nyy\nyz\nza\nzb\nzc\nzd\nze\nzf\nzg\nzh\nzi\nzj\nzk\nzl\nzm\nzn\nzo\nzp\nzq\nzr\nzs\nzt\nzv\nzw\nzx\nzy\nzz\n'''.split('\\n'))\n\nprint(\"\\n\".join(\n\"\"\"Pig Latin: {}\n{}\"\"\".format(w[-1].upper(), w.replace(' ','')) for w in stdin))\n\n'''\n--- Part Two ---\n\nIt's no use trying to translate to Pig Latin from the basic idea. Now, try the opposite: translating from Pig Latin to English.\n\nFor example:\n\npig latin is igpay atinlay\n\nGiven a non-empty string, translate the string from Pig Latin.\n\nNote: in English, \"ed\" is not a vowel.\n\nBonus: Could you do this in one-pass?\n\nYou could look at the start of a word. If it was a consonant or was a vowel,"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''i cant speak pig latin\n    ''') == 'iyay antcay eakspay igpay atinlay'\nassert solution('''\n    this is a test\n    ''') == 'thay is a dast evay esttay aft ay'\n\"\"\"\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nq\\npotatoes') == 'nymble'\nassert solution('2\\nq\\npancakes') == 'Anywhere is fine I guess'\nassert solution('2\\nq\\nsalad') == 'Anywhere is fine I guess'\nassert solution('2\\nq\\npea soup') == 'Anywhere is fine I guess'\nassert solution('3\\nnymble\\npancakes\\npunsch') == 'nymble'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n'''\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Anywhere is fine I guess\"\nassert solution(\"3\") == \"pea soup\""
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n\"\"\") == \"nymble\"\nassert solution(\"\"\"\n1\n2\nq\npotatoes\nsalad\n3\nq\npancakes\npea soup\npunsch\n\"\"\") == \"Anywhere is fine I guess\""
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n''') == 'Anywhere is fine I guess'\n\nassert solution('''\n1\n5\n6\ncarrots\napple\n10\npotatoes\nsalad\n3\ncheese\npancakes\npea soup\n''') == 'cheese'\n\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution('''\n2\n1\nq\npotatoes\n''') == 'Anywhere is fine I guess'"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''1\n2\nq\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''5\n2\nq\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''0\n2\nq\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'punsch'\nassert solution('''\n1\n1\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'pea soup'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nq\\npea soup\\nnymble\\nsalad\\n3\\npancakes\\npea soup\") == \"nymble\"\nassert solution(\"1\\nnymble\\nsalad\\n3\\npancakes\\npea soup\") == \"Anywhere is fine I guess\""
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\nq\npotatoes\nsalad\n3\n3\npea soup\npunsch\n''') == '3'\nassert solution('''\n1\nq\n1\n1\n''') == 'Anywhere is fine I guess'\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\nq\npotatoes\nsalad\n3\n3\n''') == '3'\nassert solution('''\n1\nq\n1\n1\n''') == 'Anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'nymble'\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pea soup\" in restaurant and \"pancakes\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    restaurants.append(input())\n\nrestaurants.sort()\nfor restaurant in restaurants:\n    if \"pancakes\" in restaurant and \"pea soup\" in restaurant:\n        print(restaurant)\n        break\nelse:\n    print(\"Anywhere is fine I guess\")\n\nn = int(input())\nrestaurants = []\nfor _ in range(n):\n    rest"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 0 15') == '3'"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('3 3 3') == '2'\nassert solution('3 0 3') == '1'\nassert solution('0 0 0') == '1'\nassert solution('15 5 15') == '3'"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 0 15\n''') == '3'\n\nassert solution('''\n5 0 10\n''') == '2'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 3 6\") == \"1\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 0 15') == '3'"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 0 15') == '3'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('15 0 5') == '0'\nassert solution('20 20 20') == '1'\nassert solution('25 25 25') == '2'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 0 20') == '2'\nassert solution('5 0 40') == '1'\nassert solution('5 0 50') == '0'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"1 0 2\") == \"2\"\nassert solution(\"7 5 0 4\") == \"5\"\nassert solution(\"7 5 4 0\") == \"5\"\n\n'''"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 0 15') == '3'"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"11 15\"\n    ) == \"19\"\n\nassert solution(\n    \"9 8\"\n    ) == \"17\"\n\nassert solution(\n    \"10 20\"\n    ) == \"25\"\n\nassert solution(\n    \"5 5\"\n    ) == \"10\"\n\nassert solution(\n    \"15 30\"\n    ) == \"25\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 9\") == \"11\"\nassert solution(\"-11 -9\") == \"11\"\nassert solution(\"4 6\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 19\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 15') == '19'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\nassert solution('10 10') == '11'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 7') == '15'\nassert solution('5 4') == '10'\nassert solution('11 12') == '19'\nassert solution('-10 0') == '-10'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'\nassert solution('15 10') == '11'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n11 15\n''') == '19'\nassert solution('''\n10 20\n''') == '15'\nassert solution('''\n9 15\n''') == '9'\nassert solution('''\n8 20\n''') == '8'\nassert solution('''\n7 15\n''') == '7'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 15\") == \"19\"\n\nstdin = \"\"\"\n10 3\n5 7\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\nassert solution('10 -2') == '8'\nassert solution('-7 1') == '-7'\nassert solution('3 4') == '6'\n\n----Hints----\n---\n-----\n\"\"\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North North"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North West South East\") == \"Yes\"\nassert solution(\"North East South West\") == \"No\"\nassert solution(\"North North East South East\") == \"Yes\"\n\nSTDIN_SINGLE_LINE = \"\"\"South East\"\"\"\nassert solution(STDIN_SINGLE_LINE) == \"Yes\"\n\nSTDIN_MULTI_LINE = \"\"\"North West South East\nNorth East South West\nNorth North East South West\"\"\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nSouth\nWest\nEast\n''') == 'Yes'\nassert solution('''\nSouth\nNorth\nEast\n''') == 'No'\nassert solution('''\nSouth\nEast\nSouth\n''') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East West') == 'Yes'"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nNorth\nWest\nEast\n''') == 'Yes'\nassert solution('''\nNorth\nEast\n''') == 'No'\n''')"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''South West East\nNorth East South\nWest South East''') == 'Yes'\nassert solution('''North East South\nNorth West South\nWest South East''') == 'No'\n''')\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East South') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input(\"\")) == \"No\"\n\"\"\""
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('South West East') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'\n\nSample Input:\n4 10\nexterminate\nRESTOREWORM\nSample Output:\nrestoreworm\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\n\"\"\"\n\na, n, m = map(int, input().split())\nb = input().lower()\nc = input().lower()\nprint(\"\".join(sorted(set(c))[:n]))"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\nprint(\"all test cases passed\")"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') =='marywasnosyagain'\n\"\"\""
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n\"\n                \"ainp vnme iay thow\\n\"\n                \"uup mry xmoyt tfl\") == \"marywasnosyagain\"\nassert solution(\"3 6\\n\"\n                \"rga uopm mltk ctq\\n\"\n                \"cat qxly cttx\") == \"catqxly\"\nprint(\"The answer is correct\")"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\nabcdefghijklmnopqrstuvwxyz\\nxyzxyzxyz\\n\") == \"xyzxyzxyz\"\n\"\"\"\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\npirpumsemoystoal\") == \"marywasnosyagain\""
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\nagain\npirpumsemoystoal''') =='marywasnosyagain'''\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 16 \\n again \\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\nassert solution(\"4 16 \\n goo\\ngeo\\ngoo\\n\\ngo\\ngo\\ngo\\ngo\\n\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\n\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\n\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\n\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo\\ngo"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 3\na\nabc\n\"\"\") == \"a\"\nassert solution(\"\"\"\n5 3\nal\npq\nqr\n\"\"\") == \"q\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n'''\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n4\n3\n2\n1''') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Even\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Either\"\n\"\"\""
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n1\\n3') == 'Either'\nassert solution('3\\n0\\n0\\n0') == 'Even'\nassert solution('3\\n-1\\n-1\\n-1') == 'Odd'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Either'\nassert solution('4') == 'Odd'\nassert solution('6') == 'Even'\n'''\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"Odd\"\nassert solution(\"2\") == \"Even\"\nassert solution(\"3\") == \"Odd\"\nassert solution(\"4\") == \"Even\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\nassert solution('4') == 'Either'\nassert solution('5') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Even'\nassert solution('3') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Either\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Even\"\nassert solution(\"4\") == \"Odd\"\nassert solution(\"5\") == \"Even\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"Either\"\nassert solution('2') == \"Even\"\nassert solution('3') == \"Odd\"\nassert solution('4') == \"Even\"\nassert solution('5') == \"Odd\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n') == '4'\nassert solution('5\\n5\\n') == '4'\nassert solution('0\\n0\\n') == '2'\n\n'''"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '1'\nassert solution('25') == '3'\nassert solution('30') == '4'\nassert solution('300') == '4'\nassert solution('200') == '3'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10\n1000000000\n10"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1'"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\"\nassert solution(\"1\\n10\\n\") == \"1\"\nassert solution(\"1\\n100\\n\") == \"2\"\nassert solution(\"1\\n1000\\n\") == \"3\"\nassert solution(\"1\\n100000\\n\") == \"4\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('314') == '1'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n31\n10\n89\n1\n''') == '3'\n\nassert solution('''\n3\n40\n30\n27\nSample Output:\n''') == '4'\n\nassert solution('''\n2\n79\n9\nSample Output:\n''') == '3'\n\nassert solution('''\n1\n79\nSample Output:\n''') == '1'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('314') == '3'\nassert solution('5') == '4'\nassert solution('35897') == '4'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\nassert solution('100') == '4'\n\n\"\"\"\n\n\nimport math\n\ninput = input()\n\nfor i in range(int(input)):\n    estimate = int(input())\n    num_of_digits = math.log10(estimate)\n    if estimate >= 10 ** (num_of_digits - 1):\n        print(num_of_digits)\n    elif estimate >= 10 ** (num_of_digits - 2):\n        print(num_of_digits - 1)\n    else:\n        print(num_of_digits)"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n2\n15\n3\n5\n''') == '2'\nassert solution('''\n1\n314\n1\n5926\n5\n35897\n''') == '4'\nassert solution('''\n5\n314\n5\n35897\n3\n5\n''') == '1'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\nw g\nc y\ni s\nh a\no t\nt o\no f\ne s\n''') == 'yes'\nassert solution('''\nw g\nc y\ni s\nh a\no t\nt o\no f\ne s\n''') == 'no'\nassert solution('''\nw g\nc y\ni s\nh a\no t\nt o\no f\ne s\n''') == 'no'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'yes'\nassert solution('1 2') == 'no'\nassert solution('2 2') == 'yes'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 5') == 'yes'\nassert solution('10 3') == 'no'\nassert solution('2 5') == 'no'\nassert solution('1 2') == 'no'\nassert solution('3 3') == 'yes'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\"\n) == \"yes\"\n\nassert solution(\n\"\"\"\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\"\n) == \"no\"\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\nk p\\nout the\") == \"yes\"\nassert solution(\"2 5\\ni r\\nt e\") == \"no\"\nassert solution(\"3 8\\nc t\\nt e\") == \"no\"\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n4\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == \"yes\"\nassert solution(\"\"\"\\\n1\na m\nb r\n\"\"\") == \"no\"\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\n\") == \"yes\\nno\"\nassert solution(\"9 5\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n\") == \"yes\\nyes\"\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 3\\nc t\\ni r\\tk p\\no c\\r o\\r t e\\r t f\\r u h\\r we we\\ncan the\\nwork people\\nit of\\nout the') == 'no'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n6 6\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n7 7\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n8 8\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n9 9\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\nc t\\ni r\\nk p\\no c\\nr o\\n\\tr e\\nt f\\n\\tu h\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\nt\") == \"yes\"\nassert solution(\"4 5\\nc t\\ni r\\nk p\\no c\\nr o\\n\\tr e\\nt f\\n\\tu h\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\nt\") == \"yes\"\nassert solution(\"1 5\\nc t\\ni r\\nk p\\no c\\nr o\\n\\tr e\\nt f\\n\\tu h\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\nt\") == \"yes\"\nassert solution(\"4 5\\nc t\\ni r\\nk p\\no c\\nr o\\n\\tr e\\nt f\\n\\tu h\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\nt\") == \"no\"\nassert solution(\"7 7\\nc t\\ni r\\nk p\\no c\\nr o\\n\\tr e\\nt f\\n\\tu h\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\nt\") == \"no\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\ncarrots?\") == \"1\\n\"\nassert solution(\"2 5\\nbunnies?\\ncarrots?\\npikachu?\\nsquirtle?\\npikachu?\\ncarrots?\\n\") == \"7\\n\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 2\\ncarrots?\\nbunnies\\ncarrots?') == '0'\nassert solution('1 1\\nbunny\\ncarrots?') == '1'\nassert solution('1 2\\ncarrots?\\nbunnies\\ncarrots?') == '0'\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2\ncarrots?\nbunnies?\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5\nbunnies?\nbunnies?\nbunnies?\nbunnies?\ncarrots?\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8 5\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\ncarrots?\nmars\nbunnies\ncarrots?\ntatiana\ncarrots?\npomegranate\nbunnies\ncarrots?\ntomato\nbunnies\ncarrots?\ncarrots?\n''') == \"3\"\n\nassert solution('''\n2 5\ntatiana?\ncarrots?\ntomato?\ncarrots?\npomegranate?\ncarrots?\npomegranate?\ncarrots?\ntomato?\ncarrots?\ncarrots?\ncarrots?\n''') == \"5\"\n\nassert solution('''\n1 3\ntatiana?\ncarrots?\npomegranate?\ncarrots?\ntomato?\ncarrots?\ncarrots?\ncarrots?\n''') == \"3\"\n\nassert solution('''\n1 1\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\n''') == \"0\"\n\nassert solution('''\n2 2\ncarrots?\ntomato?\ntomato?\ncarrots?\ncarrots?\n''') == \"1\"\n\n'''"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\ncarrots?\") == \"1\"\nassert solution(\"2 2\\ncarrots?\\nbunnies?\") == \"3\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 1\ncarrots?\nbunnies\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 1\nbunny?\ncarrots?\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 1\ncarrots?\nbunny?\ntrees?\nbunnies?\n\"\"\") == \"3\""
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('5 3\\nbunnies?\\nolovesickness\\ngroovesickness\\ncarrots?') == '2'\nassert solution('2 1\\ncarrots?\\nbunnies?') == '0'\nassert solution('5 3\\nbunnies?\\nbunny?\\ncarrots?') == '4'\nassert solution('4 2\\nbunnies?\\nbunny?\\ncarrots?') == '3'"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nnot huff-puffs\") == \"0\"\nassert solution(\"2 1\\ncarrots?\\nnot huff-puffs\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nnot huff-puffs\\ntomatoes\") == \"1\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\ncarrots?\nbunnies\n''') == '1'\nassert solution('''5\ncarrots?\nbunnies\ndante?\nscotty?\nmatthew?\n''') == '5'\nassert solution('''10\ncarrots?\nbunnies\ndante?\nscotty?\nmatthew?\nmolly?\nlarry?\ncharlie?\n''') == '10'\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd2,Kd8,Qd2,Qd8,Bd2,Bd8,Nd2,Nd8\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: Pd2,Pd8,Pd4,Pd8,Pd4,Pd2,Pd8\"\nassert solution(\"|...|:::|...|:::|...|:::|...|\") == \"White: Kn2,Kn8,Kn4,Kn8,Kn4,Kn2,Kn8\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|\") == \"White: Kd2,Kd8,Kd4,Kd8,Kd4,Kd2,Kd8\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"\"\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4,f4,h4,a4,b4"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd2,Bc3,Qd4,Qb5,Qf6,Kc7,Nd8\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"Black: Kn2,Kg3,Kb4,Qf5,Qh6,Kc7,Nd8\"\nassert solution(\"|...|:::|.n.|:::|...|:::|.p.|\") == \"White: Nd3,Qd4,Qf5,Qp6,Nf7\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n'\n\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qc1,Rq1,Rc1,Rf1,Rg1,Rb1,Pd1,Pc1,Pb1,Pf1,Pg1,Pb2,Pn2\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b7,h6,b8,n8\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: Pb1,Pc1,Pf1,Pg1,Pb2,Pn2,Pc2,Pf2,Pg2,Pb3,Pn3,Pc3,Pf3,Pg3,Pb4,Pn4,Pc4,Pf4,Pg4\"\nassert solution(\"|.P.|:P.|:P.|.P.|:P.|.P.|:::|.P.|\") == \"White: Pb1,Pc1,Pf1,Pg1,Pb2,Pn2,Pc2,Pf2,Pg2,Pb3,Pn3,Pc3,Pf3,Pg3,Pb4,Pn4,Pc4,Pf4,Pg4,Pd5,Pe5,Pf5,Pg5,Pd6,Pe6,Pf6,Pg6,Pd7,Pe7,Pf7,Pg7,Pd8,Pe8,Pf8,Pg8\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kf1,Qe1,Ra1,Rh1,Bc1,Ng1,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,Qh1,Rh8,Bc8,Ng8,Nc6,a8,b8,c8,d8,e8,f8,h8,a9,b9,c9,d9,e9,f9,h9,a10,b10,c10,d10,e10,f10,h10,a11,b11,c11,d11,e11,f11,h11,a12,b12,c12,d12,e12,f12,h12,a13,b13,c13,d13,e13,f13,h13,a14,b14,c14,d14,e14,f14,h14,a15,b15,c15,d15,e15,f15,h15,a16,b16,c16,d16,e16,f16,h16,a17,b17,c17,d17,e17,f17,h17,a18,b18,c18,d18,e18,f18,h18,a19,b19,c19,d19,e19,f19,h19,a20,b20,c20,d20,e20,f20,h20,a21,b21,c21,d21,e21,f21,h21,a22,b22,c22,d22,e22,f22,h22,a23,b23,c23,d23,e23,f23,h23,a24,b24,c24,d24,e24,f24,h24,a25,b25,c25,d25,e25,f25,h25,a26,b26,c26,d26,e26,f26,h26,a27,b27,c27,d27,e27,f27,h27,a28,b28,c28,"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1\n2\n3\n4''') == 'Your wish is granted!'\nassert solution('''10 10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'You will become a flying monkey!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('0 6') == 'You will become a flying monkey!'\nassert solution('0 4') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n8 3\n\"\"\") == \"Your wish is granted!\", \"Wrong!\"\nassert solution(\n    \"\"\"\n8 3\n\"\"\") == \"You will become a flying monkey!\", \"Wrong!\"\n\nassert solution(\n    \"\"\"\n5 2\n\"\"\") == \"Your wish is granted!\", \"Wrong!\"\nassert solution(\n    \"\"\"\n4 4\n\"\"\") == \"Your wish is granted!\", \"Wrong!\"\n\nassert solution(\n    \"\"\"\n6 9\n\"\"\") == \"You will become a flying monkey!\", \"Wrong!\""
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Your wish is granted!'"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('10 4') == 'Your wish is granted!'\nassert solution('16 5') == 'You will become a flying monkey!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('2 4') == 'You will become a flying monkey!'\n\n\"\"\"\n\nn,k=map(int,input().split())\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\n\nprint('Your wish is granted!')\n\n\"\"\""
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"10 5\") == \"Your wish is granted!\"\nassert solution(\"15 15\") == \"You will become a flying monkey!\"\nassert solution(\"2 1\") == \"True\"\nassert solution(\"2 2\") == \"False\"\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('10 5') == 'You will become a flying monkey!'\n'''"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '16.00000000000000'\nassert solution('''\n2\n''') == '14.00000000000000'\nassert solution('''\n3\n''') == '15.5000000000000'\nassert solution('''\n4\n''') == '20.00000000000000'\nassert solution('''\n5\n''') == '23.00000000000000'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('9') == '12'\nassert solution('16') == '22'\nassert solution('42') == '33'\nassert solution('16') == '22'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"16\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"16\"\n\n\"\"\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"16\"\nassert solution(\"1\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"6\"\nassert solution(\"123\") == \"12\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n''') == '12'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('100') == '100'\nassert solution('10000') == '1650'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == '16'\nassert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('1000') == '1000'\nassert solution('10000') == '100000000'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    16\n    ''') == '16'\n'''\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('16') == '16'\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\""
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n180') == '4'"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\\n\") == \"4\"\nassert solution(\"10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10\\n\") == \"1\"\nassert solution(\"10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10\\n\") == \"0\"\nassert solution(\"100 100\\n10 10 10 10 10 10 10 10 10\\n\") == \"4\"\nassert solution(\"1000 1000\\n10 10 10 10 10 10 10 10 10\\n\") == \"1\"\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n6 180\n45 30 55 20 80 20\n\"\"\") == \"4\"\n\"\"\"\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\\n\") == \"4\"\nassert solution(\"10 50\\n45 30 55 20 80 20\\n\") == \"2\"\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n3 4 5\\n\") == \"1\"\nassert solution(\"4\\n10\\n3 1 8 3\\n\") == \"2\"\nassert solution(\"6\\n200\\n1 2 3 4 5\\n\") == \"4\""
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n1\n1\n2\n4\n4\n\"\"\"\n) == \"4\", \"Test 1 Failed\"\n\nassert solution(\n\"\"\"\n5\n5\n2\n3\n4\n1\n2\n\"\"\"\n) == \"1\", \"Test 2 Failed\"\n\nassert solution(\n\"\"\"\n5\n4\n2\n3\n3\n3\n\"\"\"\n) == \"2\", \"Test 3 Failed\"\n\nassert solution(\n\"\"\"\n5\n1\n2\n3\n4\n5\n\"\"\"\n) == \"5\", \"Test 4 Failed\"\n\nassert solution(\n\"\"\"\n10\n5\n2\n8\n8\n4\n2\n8\n7\n5\n1\n2\n5\n2\n5\n4\n\"\"\"\n) == \"10\", \"Test 5 Failed\""
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 4\") == \"2\"\nassert solution(\"1 5\") == \"2\"\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == \"79\""
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '79'\nassert solution('1') == '79'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n10\\n30\\n20') == '220'\nassert solution('3\\n10\\n30\\n20') == '220'\nassert solution('3\\n10\\n30\\n20') == '220'"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n30\\n40\\n50') == '80'\nassert solution('5\\n100\\n100\\n100\\n100') == '300'\nassert solution('15\\n60\\n80\\n100\\n100') == '80'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n21\n34\n18\n9\n''') == '79'\n\nassert solution('''\n2\n10\n10\n10\n10\n''') == '30'\n\nassert solution('''\n3\n10\n10\n10\n10\n''') == '70'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n20\n30\n15\n20\n''') == '79'\n\nassert solution('''\n6\n16\n20\n20\n20\n10\n''') == '128'\n\nassert solution('''\n7\n10\n20\n20\n20\n20\n20\n''') == '160'\n\nassert solution('''\n4\n15\n20\n20\n20\n''') == '30'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('2') == '3'\nassert solution('2 3') == '3'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n21\\n34\\n18\\n9') == '79'"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n21\n34\n18\n9\n''') == '79'\nassert solution('''\n3\n9\n7\n''') == '12'\nassert solution('''\n1\n10\n''') == '10'\nassert solution('''\n3\n2\n1\n''') == '2'\nassert solution('''\n4\n21\n34\n18\n9\n''') == '79'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('10\\n1\\n2\\n3\\n4') == '12'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3 1') == '3 0 2'\nassert solution('3 2 2 1') == '3 0 2'\nassert solution('3 3 3 1') == '3 2 0'\nassert solution('4 4 4 1') == '4 0 3'\nassert solution('4 4 4 1') == '4 3 0'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\nassert solution('5 3 2 3\\n0 1 5\\n') == '4 1 0'\nassert solution('5 3 3 4\\n0 1 4\\n') == '4 3 0'"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\""
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\n\nassert solution('10 3 3 10') == '2 5 0'\n\nassert solution('9 10 3 2') == '5 1 0'\n\nassert solution('0 1 3 2') == '2 3 0'\n\nassert solution('0 0 0 0') == 'impossible'"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == \"2 3 0\"\nassert solution('''\n5 3 3 4\n0 1 4\n2 3 5\n''') == \"2 3 0\"\nassert solution('''\n5 3 3 4\n0 1 4\n2 4 4\n''') == \"impossible\"\nassert solution('''\n5 3 3 4\n0 1 4\n2 4 4\n3 3 4\n''') == \"3 4 0\"\nassert solution('''\n5 3 3 4\n0 1 4\n2 4 4\n3 4 4\n''') == \"4 4 0\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == '2 3 0', 'first example'\n\nassert solution('''\n5 3 3 4\n1 0 0\n''') == '2 3 0','second example'\n\nassert solution('''\n5 3 3 4\n0 1 4\n''') == 'impossible', 'third example'"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 3 4') == '2 3 0'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3 4') == '2 3 0'"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\n\"\"\""
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 2 3\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 2 3\\n0 2 2\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 2 3\\n0 2 2\\n0 2 2\") == \"impossible\""
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n\n'''\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('7') == '1 0 0 0 0 1'\nassert solution('7') == '1 0 0 0 0 1'\nassert solution('8') == '1 0 0 0 0 1'\nassert solution('8') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\nassert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\""
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0 0 0 0') == '1 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"2 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"3 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nprint(solution(input()))\n\n---"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0 1'\nassert solution('5 2 4 2 6 1 7') == '1 0 1 0 0 1 0'\nassert solution('2 -3 2 5 2 -1') == '3 -2 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 -1 -2 -2 -2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 1 2 2 2 7\n''') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''\n2\n12345 0.7777\nqwerty 0.8888\n''') == '0.7777'\nassert solution('''\n2\n12345 0.7777\nqwerty 0.8888\n''') == '0.7777'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nqwerty 0.3334') == '1.3334'\nassert solution('2\\n123456 0.6666') == '1.3334'\nassert solution('3\\n1234 5.9999') == '1.9999'\n'''\nimport math\n\nnum_passwords = int(input())\npasswords = input().split(' ')\npasswords = [password for password in passwords]\npasswords = [int(i) for i in passwords]\nprobabilities = input().split(' ')\nprobabilities = [float(i) for i in probabilities]"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution('5\\n123456 0.6666\\nqwerty 0.3334\\n123456 0.6666\\nqwerty 0.3334\\n123456 0.6666\\nqwerty 0.3334\\n123456 0.6666\\nqwerty 0.3334\\n123456 0.6666\\nqwerty 0.3334\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution('10\\n123456789012 0.76466 1.41441\\nabcdefg 1.4123 2.32123 3.32333\\nqwerty 1.1123 2.2123 3.3123\\n12345 1.12321 2.123213 3.323213\\nqwe 1.12321 2.123213 3.323213\\nqw 1.12321 2.123213 3.323213\\n') == '3.32313'\nassert solution('10\\n123456789012 0.76466 1.41441\\nabcdefg 1.4123 2.32123 3.32333\\nqwerty 1.1123 2.2123 3.3123\\n12345 1.12321 2.123213 3.323213\\nqwe 1.12321 2.123213 3.323213\\nqw 1.12321 2.123213 3.323213\\n') == '3.32313'\nassert solution('20\\n123456789012 0.76466 1.41441\\nabcdefg 1.4123 2.32123 3.32333\\nqwerty 1.1123 2.2123 3.3123\\n12345 1.12321 2.123213 3.323213\\nqwe 1.12321 2.123213 3.323213\\nqw 1.12321 2.123213 3.323213\\n') == '3.32313'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nprint('exercise passed')\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n12 3\n''') == '1.3334'\n\nassert solution('''\n1\n6 3\n''') == '0.6667'\n\nassert solution('''\n1\n1 2\n''') == '1.0000'\n\nassert solution('''\n1\n2 1\n''') == '0.0000'\n\nassert solution('''\n2\n3 2\n''') == '0.0000'"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3333'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution('2\\nqwerty 0.3334\\n123456 0.6666\\n') == '1.3334'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n\nSample Input:\n3\n123456 0.666\nqwerty 0.34\nabcdefg 0.77\nSample Output:\n0.77\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\""
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('1\\nqwerty 0.3334\\n123456 0.6666') == '1.3334'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n1 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n5 4 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 2\n4 3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1\n1 2 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 1\n1 2 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 3\n1 2 3\n\"\"\") == \"1\""
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n3') == '2'\nassert solution('1\\n10\\n2') == '9'\nassert solution('2\\n6\\n6') == '5'\nassert solution('3\\n8\\n6') == '5'\nassert solution('4\\n10\\n8') == '6'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 1\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"3 1\n1 2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"5 1\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"3 3\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"10 1\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 2 4') == '1'\nassert solution('3 2\\n2 1 4') == '1'\nassert solution('3 3\\n3 1 2 4') == '1'\nassert solution('3 4\\n3 1 2 4') == '0'\nassert solution('3 5\\n3 1 2 4') == '2'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '1'\nassert solution('3 2') == '1'\nassert solution('4 3') == '2'\nassert solution('4 5') == '3'\nassert solution('10 5') == '7'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n2 3 5 1\\n\") == \"1\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"7\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"\nassert solution(\"3 1\\n2 3 4\") == \"2\"\nassert solution(\"3 1\\n3 2 3\") == \"0\"\nassert solution(\"3 1\\n2 2 2\") == \"1\"\nassert solution(\"3 1\\n3 3 3\") == \"0\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('27') == '\\nG:                                           \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  \\ng: -----------------------------------------------*----------\\nf:                                        \\ne: ----------------------------------------------------------\\nd:                                        \\nc:                                        \\nb:                                        \\na: ----------------------------------------------------------\\n'\n\n'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"27\") == \"\"\"G:\nF:-------------------------------------*--------------------\nE:       *    *          *            *   *                \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\".strip()\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"27\") == \"G:                                    \\nF: ------------------------*--------------------\\nE:       *      *      *          *            *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                    \\ng: -----------------------------------------------*----------\\nf:                                    \\ne:                                    \\nd:                                    \\nc:                                    \\nb:                                    \\na:                                    \\n\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples[0]) == 'G:    *        *        *        *\\nF: --------*-------*----------------\\nE:     *     *     *     *\\nD: --*-------*-----*-------------\\nC: * *     *     *    **    *\\nB: --------------------------**\\nA:                                    *\\ng: -----------------------------------------------*----------\\nf:                                    *\\ne:                                    *\\nd:                                    *\\nc:                                    *\\nb:                                    *\\na:                                    *\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == 'G: \\nF: ------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                               \\nc:                                                               \\nb:                                                               \\na: ----------------------------------------------------------\\n'\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\"\"\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\".strip()\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"G:                                       \\nF: ----------------------------------------*---------------------------------------\\nE:       *   *          *            *    *\\nD: ----*-------**--*--**--*-*-----------------*\\nC: * *    *      * *    **    *           *         ** **\\nB: --------------------------**-----------------*------\\nA:                                                    \\ng: -----------------------------------------------*----------\\nf:                                                    \\ne: ----------------------------------------------------------\\nd:                                                                \\nc:                                                                \\nb:                                                                \\na: ----------------------------------------------------------\\n\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"G:\\nF:-----------------------------------*--------------------\\nE:\\nD:----*-------**-----*-------------*-------*----------------\\nC: * *\\nB: --------------------------**-----------------*-----*------\\nA:\\ng:\\nf:\\ne:\\nd:\\nc:\\nb:\\na:\"\nassert solution(\"2\") == \"G:    \\nF: ----------------------------------------\\nE:       *    *    *\\nD: ----*-------*--*        *--------*-------------*\\nC: * *    *    **    *    **    *        **\\nB: --------------------------**\\nA:                                    \\ng:     ---\\nf:    *\\ne:    *\\nd:    *\\nc:    *\\nb:    *\\na:    *\\n\\n\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:                                                                                            \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:\nF: ----------------------------------------------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n'''"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 3') == 'possible'\nassert solution('2\\n3 3 1') == 'impossible'\n'''"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"10\\n1 1 2 1 1 1 1\") == \"impossible\"\nassert solution(\"1\\n1\") == \"possible\"\nassert solution(\"2\\n2\") == \"impossible\""
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 2 2') == 'possible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1\\n') == 'possible'\nassert solution('5\\n2 4 1 1 2 3\\n') == 'impossible'\n\"\"\"\n\n\"\"\"\nfrom math import sqrt\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n7\n5\n3\n4\n5''') == 'possible'\nassert solution('''2\n2\n3\n4\n5\n6''') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\") == \"possible\"\nassert solution(\"2 1 1\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == 'possible'\nassert solution('10 1 5 9') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"possible\"\n\"\"\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == 'impossible'\nassert solution('2 2 2') == 'impossible'\nassert solution('2 2 2') == 'impossible'\nassert solution('2 2 2') == 'impossible'\nassert solution('2 2 2') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 2') == 'possible'\nassert solution('5\\n1 1 1 1 1') == 'impossible'\nassert solution('3\\n2 3 2') == 'impossible'\n'''\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('5 1 5 1 2 1 1 1 2') == '3'\nassert solution('6 7 8 9 10 11 12 13 14 15 16') == '4'\nassert solution('2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == '5'"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '3'\nprint('PASSED')\n\nassert solution('''\n3\n1 3\n''') == '2'\nprint('PASSED')\n\nassert solution('''\n5\n2 1 1 2 1\n''') == '2'\nprint('PASSED')\n\nassert solution('''\n8\n3 1 2 3 3 1 1\n''') == '5'\nprint('PASSED')\n\nassert solution('''\n7\n5 1 1 2 1 3\n''') == '3'\nprint('PASSED')"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10 4 3 2 1 2 2 1 1 3''') == '5'\nassert solution('''15 6 4 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''11 3 5 2 1 4 5 6 2 1''') == '2'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('1000') == '2'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\") == \"6.08\"\nassert solution(\"2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\") == \"7.72\"\nassert solution(\"10\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'ASHMEADE\\nBLAKE'\nassert solution('6') == 'ASHMEADE\\nBLAKE\\nBOLT\\nFRATER\\nCARTER\\nPOWELL'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nPOWELL 9.72 8.61\") == \"BLAKE\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nPOWELL 9.72 8.61\\nPOWELL 9.78 8.61\") == \"ASHMEADE\"\nassert solution(\"5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nPOWELL 9.72 8.61\\nPOWELL 9.78 8.61\") == \"BLAKE\"\nassert solution(\"4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nPOWELL 9.72 8.61\") == \"BLAKE\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nPOWELL 9.72 8.61\\nPOWELL 9.78 8.61\") == \"BLAKE\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"35.54\"\nassert solution(\"7\") == \"35.54\"\nassert solution(\"3\") == \"35.54\"\nassert solution(\"10\") == \"35.54\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '35.54'\nassert solution('10') == 'BLAKE'\nassert solution('100') == 'BOLT'\nassert solution('999') == 'POWELL'\nassert solution('9999') == 'ASHMEADE'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '35.54'\nassert solution('4') == 'ASHMEADE'\nassert solution('2') == 'ASHMEADE'\nassert solution('10') == 'ASHMEADE'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nASHMEADE 9.9\nBLAKE 9.9\nBOLT 9.9\n''') == '35.5'\n\nassert solution('''\n1\nASHMEADE 8.90\n''') == '8.5'\n\nassert solution('''\n2\nASHMEADE 9.90\nBLAKE 9.90\n''') == '9.5'\n\nassert solution('''\n2\nASHMEADE 9.90\nFRATER 9.90\n''') == '9.5'\n\nassert solution('''\n4\nASHMEADE 8.90\nBLAKE 9.90\nBOLT 9.90\nFRATER 9.90\n''') == '33.5'"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\nprint(solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n'''))"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\nASHMEADE'\n\nassert solution('''\nFRATER 4.00 8.20\nBLAKE 2.00 8.10\nPOWELL 4.00 8.30\nASHMEADE 2.00 8.10\n''') == '38.00\\nFRATER\\nBLAKE\\nPOWELL\\nASHMEADE'\n\nassert solution('''\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nASHMEADE\\nBLAKE\\nBOLT\\nPOWELL\\nFRATER'\n\nassert solution('''\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nBLAKE\\nBOLT\\nPOWELL\\nASHMEADE\\nFRATER'\n\nassert solution('''\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nBLAKE\\nBOLT\\nPOWELL\\nFRATER\\nASHMEADE'"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n\"\"\") == \"BLAKE\\nBOLT\\nPOWELL\\nASHMEADE\\nCARTER\"\n\nassert solution(\n\"\"\"\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\n\"\"\") == \"BLAKE\\nPOWELL\\nBOLT\\nASHMEADE\\nCARTER\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''6\n3 3\n2 3\n1 2\n2 3\n2 1\n1 3''') == '3'\nprint(solution('''18\n4 6\n8 6\n1 4\n7 4\n3 4\n3 5\n7 5\n4 6\n2 4\n7 3\n1 6\n2 5\n2 4\n3 2\n2 5\n2 5\n6 1\n5 2\n6 5\n1 2\n1 6\n5 2\n7 6\n6 1\n5 2\n6 1\n1 2\n2 2\n6 5\n7 1\n2 3\n1 6\n1 6\n2 2\n5 4\n2 2\n3 4\n3 2\n5 4\n4 5\n2 4\n1 4\n5 4\n5 2\n2 3\n2 4\n1 2\n2 4\n5 4\n3 1\n1 3\n5 4\n5 2\n2 1\n2 2\n1 4\n2 4\n5 1\n1 6\n3 2\n6 2\n3 1\n1 5\n6 5\n5 3\n1 2\n2 3\n3 3\n5 2\n2 3\n4 6\n1 5\n2 3\n1 4\n2 3\n3 1\n2 5\n3 1\n4 6\n1 4\n2 5\n3 5\n4 2\n4 4\n4 2\n4 1\n3 4\n4 4\n4 4\n2 4\n1 3\n5 2\n4 3\n4 2\n3 3\n1 2\n3 3\n5 2\n1 3\n2 3\n2 4\n4 3\n1 4\n5 3\n1 4\n3 1\n5 2\n4 5\n2 3\n3 4\n3 4\n1 5\n5 3\n3 5\n2 4\n2 4\n5 4\n1 2\n2 4\n2 3\n4 3\n3 2\n2 2\n5 4\n4 5\n3 2\n2 3\n2 4\n2 5\n3 1\n5 4\n1 3\n2 4\n5 2\n2 3\n3 3\n2 2\n4 2\n5 2\n4 2\n5 3\n1 3\n2 4\n2 3\n2 3\n2 5\n4 3\n3 4\n5 2\n3 2\n5 1\n2 4\n3 2\n1 4\n2 4\n3 4\n1 2\n1 2\n1 4\n3 2\n5 4\n2 4\n2 3\n3 5\n1 4\n3 2\n2 4\n3 4\n4 2\n4 4\n2 4\n4 4\n4 2\n1 3\n3 3\n1 2\n4 4\n4 1\n5 2\n2 3\n3 4\n2 3\n5 2\n3 3\n3 4\n3 4\n1 3\n2 4\n5 3\n3 4\n5 2\n2 3\n1 3\n5 3\n2 3\n3 4\n3 4\n1 3\n4 5\n1 4\n1 5\n4 2\n3 4\n2 4\n5 4\n1 4\n3 4\n1 3\n3 4\n2 4\n2 4\n5 3\n2 3\n4 3\n1 3\n3 4\n4 2\n2 2\n5 2\n5 2\n5 2\n1 4\n2 4\n2 4\n2 4\n1 4\n5 4\n1 3\n4 3\n5 2\n3 4\n3 4\n2 4\n4 2\n5 2\n4 2\n5 2\n4 2\n5 2\n4 2\n5 2\n4 2\n4 2\n2 4\n3 4\n2 3\n2 4\n3 2\n2 3\n3 4\n1 2\n4 2\n3 5\n1 3\n2 4\n2 5\n3 4\n4 2\n2 4\n4 2\n4 4\n1 4\n3 2\n2 4\n2 4\n4 4\n3 4\n1 4\n2 4\n1 4\n4 5\n1 2\n3 5\n1 2\n1 2\n1 4\n2 4\n2 4\n2 4\n4 1\n1 3\n2 4\n3 4\n2 4\n2 5\n3 4\n2 4\n3 4\n5 4\n4 5\n1 3\n5 2\n4 1\n5 3\n4 1\n5 1\n5 3\n4 2\n3 4\n2 3\n5 3\n4 5\n1 3\n2 4\n5 3\n5 3\n1 4\n2 5\n1 4\n1 4\n5 2\n1 4\n2 5\n2 5\n1 4\n3 4\n2 4\n2 4\n1 2\n1 4\n2 4\n1 2\n2 4\n3 4\n4 5\n1 4\n4 3\n2 5\n5 3\n4 2\n5 4\n2 4\n3 4\n5 3\n3 4\n3 4\n3 4\n2 5\n4 2\n4 5\n4 2\n3 4\n5 2\n2 4\n4 4\n5 2\n5 2\n5 2\n4 4\n1 4\n1 4\n3 4\n5 4\n2 4\n3 4\n3 4\n5 3\n2 4\n1 4\n2 4\n1 4\n2 4\n5 4\n5 3\n5 3\n1 4\n2 4\n4 4\n4 4\n3 4\n2 4\n2 4\n1 4\n3 4\n5 4\n5 4\n5 2\n1 2\n1 3\n1 4\n1 4\n2 4\n1 4\n2 4\n3 4\n4 5\n1 2\n1 3\n1 4\n1 4\n2 4\n3 4\n1 4\n3 4\n2 4\n3 4\n2 4\n3 4\n1 4\n1 4\n1 4\n3 4\n3 4\n5 2\n3 4\n1 4\n3 4\n1 3\n4 4\n3 4\n4 4\n2 4\n2 4\n4 4\n5 4\n5 4\n2 3\n1 4\n1 4\n3 4\n2 4\n1 4\n1 4\n1 4\n3 4\n2 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n2 4\n3 4\n5 3\n5 2\n4 1\n2 4\n3 4\n1 4\n5 2\n3 4\n2 5\n4 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n4 3\n1 4\n5 2\n5 2\n1 4\n2 5\n2 5\n3 4\n3 4\n3 4\n4 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n4 5\n1 4\n2 5\n1 4\n1 4\n1 4\n1 4\n1 4\n5 2\n3 4\n1 4\n1 4\n2 4\n5 2\n1 4\n1 4"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2\\n2 4\\n5 6\\n') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n10 1\n1 2\n2 4\n5 6\n7 8\n9 10\n''') == '1'\nassert solution('''\n10 1\n1 3\n2 4\n5 6\n7 8\n9 10\n''') == '1'\n\n'''\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n2 4\n5 6\n''') == '2'\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2\n2 4\n5 6\n''') == '2'\n\nassert solution('''\n5\n1 2\n2 4\n5 6\n''') == '3'\n\nassert solution('''\n3\n1 2\n2 4\n''') == '2'\n\nassert solution('''\n10\n1 2\n2 4\n5 6\n3 7\n8 9\n10 11\n12 13\n''') == '9'\n\nassert solution('''\n2\n1 2\n''') == '2'"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"5\\n1 2\\n2 4\\n5 6\") == \"1\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n2 4\n5 6\n''') == '2'\nprint(solution('''\n2\n2 4\n2 4\n'''))"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'hee'\nassert solution('hello') == 'hello'\nassert solution('heeey') == 'heyy'\nassert solution('heyy') == 'hey'\nassert solution('yey') == 'yee'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''hey''') == 'heyheyhey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hey') == 'heey'\nassert solution('bye') == 'bye'\nassert solution('HyeY') == 'HyeY'\nassert solution('HyeYbye') == 'HyeYbye'\nassert solution('i am a groot year boy') == 'I am a groot year boy'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hey') == 'hee...y...'\nassert solution('heyy') == 'hee...ee...'\nassert solution('heyyyy') == 'hee...e...y...'"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hehehehehehehehehe') == 'hehehehehehehehehe'\nassert solution('hey heehey') == 'hehehey'"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hey') == 'heezy'\nassert solution('hay') == 'heeyy'\nassert solution('heyy') == 'heeyyyy'\nassert solution('hee') == 'hee'\nassert solution('he') == 'hey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hee') == 'heey'\nassert solution('he') == 'he'\nassert solution('heye') == 'heye'\nassert solution('ye') == 'ye'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heekk\") == \"heeee\"\nassert solution(\"hehehe\") == \"hehehe\"\nassert solution(\"heeheehe\") == \"heeeeeehe\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"hey\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('hey') == 'hey'\nassert solution('heey') == 'heye'\nassert solution('heyheey') == 'heyhey'\nassert solution('heyheye') == 'heyyye'\nassert solution('heyoheyo') == 'hyehyeo'\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\n\n'''"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\") == \"1 3\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"3\\n0 1 1 2\\n1 2 0 3\\n1 3 0\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\""
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\\n\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1 2\\n1 3\\n1 4\\n'\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"5\") == \"1 4\"\nassert solution(\"10\") == \"1 4 5 6 7 8 9 10\""
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 0 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4'\n\nprint(solution(\"\"\"\n3\n3 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\"\"\")\nprint(solution(\"\"\"\n4\n2 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\"\"\")\nprint(solution(\"\"\"\n5\n1 0 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\"\"\")\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"1 2\\n1 3\\n1 4\"\n\nassert solution(\"\"\"\n4\n1 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"1 2\\n1 3\\n1 4\"\n\nassert solution(\"\"\"\n3\n1 2 1\n1 2 2\n1 3 2\n\"\"\") == \"1 2\\n1 3\"\n\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n1 1 2 2 1 2 3 2 3 2\n\"\"\") == \"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n2 4 4 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n6\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n2 4 4 0\n2 5 5 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n1 5\n1 6\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n0 1 1\n1 0 2\n2 3 3\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\".strip()\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('EWPGAJRB') == \"ABCD\"\nassert solution('CEKGAFJYX') == \"JK\"\n\"\"\""
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nprint(solution(input()))\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"ABCD\""
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\""
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"First\"\nassert solution(\"AAAABBBBCCCCDDDD\") == \"ABCCDABCBCDABCDCDCDCDD\", \"Second\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ZZYYWWRRRRRPPPPNNNNLLKKJIJHHGFEDCBA\", \"Third\"\nassert solution(\"IHGZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ZYXWWRRRRRPPPPNNNNLLKKJIJHHGFEDCBA\", \"Fourth\"\nassert solution
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n\"\"\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"bcd\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"abc\"\n) == \"ac\"\nassert solution(\n    \"aef\"\n) == \"ef\"\nassert solution(\n    \"abcd\"\n) == \"bcde\"\nassert solution(\n    \"abcabcabcabc\"\n) == \"abcabc\"\nassert solution(\n    \"abcdefghijklmnopqrstuvwxyz\"\n) == \"cdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abc') == 'b'\nassert solution('dcfes') == 'c'\nassert solution('aefg') == 'e'\n\n\"\"\""
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abc') == 'bc'\nassert solution('edabcd') == 'dabcd'\nassert solution('ab') == 'a'\nassert solution('a') == 'a'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"b\"\nassert solution(\"def\") == \"d\"\nassert solution(\"geeks\") == \"k\"\n\n\"\"\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abc') == 'acb'\nassert solution('racecar') == 'racecar'\nassert solution('racecar') == 'racecar'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'a'\nassert solution('a') == 'a'\nassert solution('abc') == 'b'\nassert solution('a') == 'a'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"b\"\nassert solution(\"abac\") == \"ac\"\nassert solution(\"abbc\") == \"bc\"\nassert solution(\"abbc\") == \"ac\"\nassert solution(\"abbca\") == \"bc\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abc') == 'b'\nassert solution('geeksforgeeks') == 'geeks'\nassert solution('geeksofcode') == 'geeks'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abc') == 'a'\nassert solution('abb') == 'b'\nassert solution('aab') == 'a'\nassert solution('aab') == 'a'\nassert solution('bb') == 'b'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('h') == 'go'\nassert solution('hhh') == 'no'\nassert solution('hh') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aaaah\") == \"no\"\nassert solution(\"aabaah\") == \"go\""
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaah\") == \"go\", \"Tests for problem 1\"\nassert solution(\"aaaaah\") == \"no\", \"Tests for problem 2\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aaahh\") == \"no\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('aaahh') == 'no'\n\"\"\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aaah\naaaaah''') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('hhah') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nassert solution('a') == 'go'\nassert solution('h') == 'no'\nassert solution('hh') == 'no'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2A1B2A1A2A2A2\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n\n'''"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2A1A2A2B2A1A2A2A2') == 'B'\nassert solution('A2B1B1B2A1A2A2A2') == 'B'\nassert solution('A2B1A2A2B2A1A2A2A2A2') == 'B'\nassert solution('A1A2A2A2A1A2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2A1B2A1A2A2A2\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"B\"\nassert solution(\"A1A1A1A1A1A1A1A1\") == \"A\"\nassert solution(\"A1A1A1A1A1A1A1A1\") == \"B\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A1A1A1A1A1A1A1A1A1A1') == 'A'\nassert solution('A1B1A2A2B1A2A2B2A1B2A1A2A2A2') == 'A'\nassert solution('A1B2A1A2A2B1A2A2B2A1A2A2A2') == 'B'\nassert solution('A1B2A1A2A2B1A2A2B2A1A2A2A2') == 'B'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('10 3\\n1 2\\n2 1\\n3 1\\n4 3\\n4 2\\n5 5\\n5 2\\n5 3\\n5 4\\n5 2') == '33'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5') == '21'\nassert solution('10 10') == '21'\nassert solution('1 6 20 4') == '5'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r'''\n2 2\n1 2\n2 3\n3 2\n''') == '7'\nassert solution(r'''\n1 2\n1 2\n''') == '0'\n'''\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5') == '21'\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\n\n'''"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '21'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '21'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\n1 2\") == \"1\"\nassert solution(\"3 5\\n1 2 2\\n3 4 8\\n2 3 10\\n2 4 3\") == \"1\"\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '21'\n\nassert solution([6, 5,\n                 1, 6, 20, 4]) == '21'\n\nassert solution([5, 3, 2,\n                 1, 2, 2]) == '8'\n\nassert solution([5, 3, 2,\n                 1, 2, 3,\n                 2, 3, 8]) == '15'\n\nassert solution([2, 1, 2,\n                 2, 3, 3,\n                 1, 2, 4]) == '15'"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('E') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D') == 'HHHeellloWooorrrrlld!!'\nassert solution('W') == 'W1o3r4l2d1!'\n\nprint('')\n\n## One Liner ##\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D E DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D DDaBbAaCcEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\") == \"DaBbAaCcEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\nassert solution(\"E ddddhhieeeeffffffffffrrrrffffffgggghhhiiiiijjjjjjjkkkkllllllmmmmmmnnnnoooppppqqqqqqqqqrrr\") == \"ddddhhieeeeffffffrrrrffffffgggghhhiiiiijjjjjjjkkkkllllllmmmmmmnnnnoooppppqqqqqqqqqrrr\"\nassert solution(\"E ddddhhieeeeffffffffffrrrrffffffgggghhhiiiiijjjjjjjkkkkllllllmmmmmmnnnnoooppppqqqqqqqqqrrr\") == \"ddddhhieeeeffffffrrrrffffffgggghhhiiiiijjjjjjjkkkkllllllmmmmmmnnnnoooppppqqqqqqqqqrrr\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D E ooORrrrlllloooowOWW!!!\") == \"oORrrrlllloooowOWW!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('E Hello') == 'H3e2l3o1', 'incorrect'\nassert solution('D Woorrrrrrrrlldd') == 'W1o3r4l2d1!2', 'incorrect'\nassert solution('E H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!', 'incorrect'\n\nimport sys"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Alice\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5') == 'Alice'\nassert solution('2\\n4') == 'Bob'\nassert solution('3\\n3') == 'Bob'\nassert solution('5\\n7') == 'Alice'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'Alice'\nassert solution('2\\n') == 'Bob'\n\"\"\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Bob'\nassert solution('4') == 'Alice'\nassert solution('6') == 'Bob'\nassert solution('1') == 'Alice'"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"100\") == \"Bob\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 'Alice'\nassert solution('2\\n1') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Alice'\nassert solution('5') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Alice'\nassert solution('5') == 'Bob'\nassert solution('6') == 'Bob'\nassert solution('100') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2''') == 'Alice'\nassert solution('''1''') == 'Bob'\nassert solution('''5''') == 'Bob'\nassert solution('''18''') == 'Bob'\nassert solution('''100''') == 'Bob'\n''')\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n''') == 'Alice'\nassert solution('''4\n''') == 'Bob'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 8\n\n''') == '5+3=8'''\nassert solution('''1 2 3\n\n''') == '1+2=3'''\n\nassert solution('''1 2 2\n\n''') == '1+2=2+2=4'''"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('5 8 3') == '5+8=13'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('10 10 10') == '10+10=20'\nassert solution('4 3 2') == '4+3=7'\nassert solution('10 1 2') == '10+1=11'\nassert solution('1 1 1') == '1+1=2'\n\nInput:\n5 3 8\n5 4 8\nOutput:\n10+3=13\n8+4=12\nOutput:\n10+3=13\n8+4=12\nInput:\n1 2 3\nOutput:\n2+2=4\n3+3=5\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"2 4 5\") == \"2+4=5\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"5 2 3\") == \"5+2=3\"\nassert solution(\"1 2 3 4\") == \"1+2=3\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 3 5\") == \"1+3=4\"\nassert solution(\"6 7 5\") == \"6+7=11\"\nassert solution(\"1 1 1\") == \"1+1=2\"\nassert solution(\"2 2 2\") == \"2+2=4\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 8') == '5+3=8'"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 8\n''') == '5+3=8'\nassert solution('''6 8 10\n''') == '6+8=10'\nassert solution('''6 5 10\n''') == '6+5=11'\nassert solution('''6 5 8\n''') == '6+5=8'\nassert solution('''5 3 9\n''') == '5+3=9'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 8''') == '5+3=8'\nassert solution('''4 6 8''') == '4-6=2'\nassert solution('''3 1 6''') == '3+1=4'\nassert solution('''2 1 4''') == '2-1=1'"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"3 3 + 2\") == \"7+2=9\"\nassert solution(\"3 + 4 = 5\") == \"3+4=7\"\nassert solution(\"5 + 3 + 2 = 8\") == \"5+3=8\"\nassert solution(\"5 - 3 - 2 = 7\") == \"5-3=8\"\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n2 2 2 1 1 3 1 1\n''') == 'YES'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n3 2 2 1 1 3 1 1\n''') == 'YES'\n\nassert solution('''20\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'YES'\n\nassert solution('''3\n2 1 2\n''') == 'NO'\n\nassert solution('''100\n2 1 2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n2 2 2 1 1 3 1 1') == 'YES'\nassert solution('6\\n2 2 2 1 1 3 1 1') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n1 2\n1 3\n2 3\n1 4\n''') == 'YES'\nassert solution('''10\n3 4 1\n1 2\n1 3\n1 4\n2 4\n3 4\n3 4\n3 4\n''') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'YES'\nassert solution('4') == 'NO'\nassert solution('1') == 'NO'\n\"\"\""
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 2 1 1 3 1') == 'YES'\nassert solution('1 2 1 3 3 2 1') == 'NO'\nassert solution('1 2 3 2 1') == 'NO'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') =='mummy', \"Not implemented yet\"\nassert solution('10') == 'ghost', \"Not implemented yet\"\nassert solution('15') == 'witch', \"Not implemented yet\"\nassert solution('20') =='mummy', \"Not implemented yet\"\n\n\"\"\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"mummy\"\nassert solution(\"20\") == \"mummy\"\nassert solution(\"30\") == \"witch\"\n\"\"\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nghost\\nmummy\\nwitch') == 'ghost'"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') =='mummy'\nassert solution('4') == 'witch'\nassert solution('5') =='mummy'\nassert solution('12') == 'demon'\nassert solution('1') == 'ghost'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"demon\"\nassert solution(\"10\") == \"mummy\"\nassert solution(\"20\") == \"ghost\"\nassert solution(\"30\") == \"mummy\"\nassert solution(\"100\") == \"witch\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\ngolden') == 'ghost'\nassert solution('1\\nmummy') =='mummy'\nassert solution('1\\nwitch') == 'witch'\nassert solution('1\\nghost') == 'ghost'\nassert solution('1\\ndemon') == 'demon'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1\\ngold\\nghost\\nwhisper\\nwhisper\\nwhisper\\nmummy\\nmummy\\nmummy\\nmummy\\nwhisper\\nwhisper\\nmummy\\nmummy\\nmummy\\nmummy\\nwhisper\\nwhisper\\nmummy\\nmummy\\nwhisper\\nwhisper\\nmummy\\nwhisper\\nwhisper\\nwhisper\\nmummy\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold\\ngold"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') =='mummy'\nassert solution('10') == 'ghost'\nassert solution('50') =='mummy'\nassert solution('50') == 'witch'\nassert solution('100') =='mummy'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"mummy\"\nassert solution(input) == \"witch\"\nassert solution(input) == \"demon\"\nassert solution(input) == \"ghost\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == \"demon\", f\"actual: {solution('10')}, expected: 'demon'\"\nassert solution('5') == \"mummy\", f\"actual: {solution('5')}, expected:'mummy'\"\nassert solution('3') == \"ghost\", f\"actual: {solution('3')}, expected: 'ghost'\"\nassert solution('2') == \"witch\", f\"actual: {solution('2')}, expected: 'witch'\"\nassert solution('1') == \"ghost\", f\"actual: {solution('1')}, expected: 'ghost'\"\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"\"\"Artist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n\"\"\""
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    ''') == '''\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    '''\n\nassert solution('''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    3\n    Album\n    Artist\n    Song_Title\n    ''') == '''\n    Album\n    Artist\n    Song_Title\n    '''\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n'\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''')) == '\\n'.join('''\nAlbum Artist Song_Title Length_seconds\nPiano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n'''))\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163'\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163'\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163'\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\""
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    Artist\n    Album\n    Song_Title\n    ''') == '''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    George_Winston Summer Lullaby 215\n    '''\n\nassert solution('''\n    1\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n    x\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nAlbert Einstein\nCharles Dickens\nThomas Edison\nEinstein\nThomas Edison\nAlbert Einstein\n''') == '''\nAlbert Einstein\nEinstein\nAlbert Einstein\n'''\nassert solution('''\n5\nArtists\nAlbums\nLengths\nSongs\nSong_Lengths\n''') == '''\nAlbums Artists\nAlbums Lengths\nAlbums\nAlbums Songs\n'''\nassert solution('''\n3\nArtist\nAlbum\nSong_Title\n''') == '''\nArtist Album\nSong_Title\n'''\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\nArtist\nAlbum\nSong_Title\nLength_seconds\n1\nBarack Obama\nAdams_Munroe The_Commander_of_The_Small_Army 42\nAmber_Dot_The_Golden_Tiger_Unowns_You_42\nBut_we_can_truly_be_the_one_who_finds_out_with_our_pity_what_you_are_doing_is_the_end_of_everything_we_have_ever_done\n1\nAlbum\nSong_Title\nLength_seconds\n10\nAston_Martin The_Best_Maid_In_The_World 42\nAmerica_To_Mars_42\nBig_Buddy_The_Grandest_Maid_42\nBlack_Panther_42\nDjango_42\nJohn_Doe The_Greatest_Maiden_42\nMichael_Reeves The_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Greatest_Witch_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42\nThe_Reverend_42"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\n') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163'"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10 7\\n5 5 5 5 5 5 5') == \"YES\"\nassert solution('4 20 10 3\\n5 5 5 5 5 5 5') == \"NO\"\nassert solution('4 10 7\\n5 5 5 5 5 5 5') == \"YES\"\n\"\"\""
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5\n5 5 5 5 5 5''') == 'YES'\nassert solution('''2 10 7\n5 5 5 5 5 5\n5 5 5 5 5 5''') == 'NO'\n\n'''\nimport math"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n10 20 30') == 'YES'\nassert solution('1 2 3\\n10 20 30\\n5 5 5 5 5 5 5') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == 'YES'\nassert solution('5\\n2\\n') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 10 5\") == \"YES\"\nassert solution(\"2 10 7\") == \"NO\""
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution(\n'''\n1 10 7\n10 9 9 9 9 9\n''') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 10 5\n5\n''') == 'NO'\nassert solution('''\n2 2 2\n1\n''') == 'YES'\nassert solution('''\n2 4 5\n3\n''') == 'YES'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''2 10 7\n1 1 1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 5 5 5 5 5 5\n''') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\") == \"YES\"\nassert solution(\"5\\n5\\n3\") == \"NO\"\nprint(solution())\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nYYNN\\nYYYY\\nYYYY\\nYYYY\\nYYYY\\n\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nYYNN\\nYYYY\\nYYYY\\nYYYY\\nYYYY\\n\") == \"50.000000\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'Not Effective\\n50.000000\\n66.666667\\n50.000000\\n50.000000\\n66.666667\\n50.000000\\n50.000000\\n50.000000'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('1') == 'Not Effective'\nassert solution('2') == 'Not Effective'\nassert solution('3') == 'Not Effective'\nassert solution('4') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\nSample Output:\") == \"Not Effective\\n50.000000\"\nassert solution(\"5\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nSample Output:\") == \"Not Effective\\n-1.000000\"\nassert solution(\"5\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nSample Output:\") == \"Not Effective\\n5.000000\"\nassert solution(\"5\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nSample Output:\") == \"Not Effective\\n0.000000\"\nassert solution(\"5\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nSample Output:\") == \"Not Effective\\n0.000000\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nNYNN\\nYNNN') == 'Not Effective'\nassert solution('1\\nNYYY\\nYYYY') == '66.666667'\nassert solution('1\\nNNNN\\nNNNN') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('100') == '66.666667'"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"50.000000\"\nassert solution(\"20\") == \"66.666667\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Not Effective\"\nassert solution(\"2\") == \"66.666667\"\nassert solution(\"1\") == \"50.000000\"\nassert solution(\"0\") == \"Not Effective\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Not Effective'\nassert solution('8') == '66.67%'"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Not Effective'\nassert solution('4') == '50.000000'\n\"\"\"\nfrom itertools import product"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\n\nIn the first example, Adrian and Bruno could get $2$ correct answers, since the sequence is: A, A, C, C, A, A, C, C, A, A, C...\n\nIf the sequence is: B, A, C, C, A, A, C, C, A, A, C...\n\nthen Adrian gets $3$ correct answers, since his sequence contains the longest correct sequence.\n\nHere is a slightly more challenging example:\n\nSample Input:\n4\nBAAC\nSample Output:\n2\nBruno\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nBAACC\") == \"Bruno\""
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Bruno'\nassert solution('4') == 'Goran'\nassert solution('5') == 'Adrian'"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"B\"\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\n\nassert solution('6') == '2'\n\nassert solution('1') == '1'\n\nassert solution('10') == '0'\n\nassert solution('15') == '0'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nBAACC') == '3'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nAABC\") == \"Bruno\"\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"Bruno\"\nassert solution(\"1\") == \"Adrian\"\nassert solution(\"2\") == \"Goran\"\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0\"\n\n---\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nAABC\") == \"Bruno\"\nassert solution(\"10\\nAACCC\") == \"Adrian\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\"\"\") == \"543\"\n\nassert solution(\"\"\"10\nE right\nA wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\"\"\") == \"504\"\n\nassert solution(\"\"\"100 E right\n50 B wrong\n10 A wrong\n30 C wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\"\"\") == \"5004\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '543'\nassert solution('''\n10 E wrong\n20 B wrong\n30 C wrong\n40 D wrong\n60 E wrong\n80 A wrong\n100 D wrong\n200 D wrong\n200 E wrong\n200 A wrong\n200 A wrong\n-1\n''') == '639'\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\n\"\"\""
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\nprint(solution(open(\"input.txt\")))\n\"\"\"\nimport itertools"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\"\"\") == \"543\"\nassert solution(\"\"\"10 E wrong\n20 C wrong\n30 D wrong\n40 B wrong\n50 A wrong\n100 A right\n150 E wrong\n180 D wrong\n200 A wrong\n220 A wrong\n230 D wrong\n240 D wrong\"\"\") == \"744\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\"\n) == \"3 543\"\nassert solution(\n    \"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n100 A wrong\\n300 D right\"\n) == \"3 617\"\nassert solution(\n    \"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\"\n) == \"3 619\"\nassert solution(\n    \"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1\"\n) == \"3 619\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3 543\""
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 E right') == '3 543'\nassert solution('10 A wrong') == '10 543'\nassert solution('30 C wrong') == '30 543'\nassert solution('50 B wrong') == '50 543'\nassert solution('100 A wrong') == '100 543'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 5\") == \"4\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 20\") == \"-1\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 5\") == \"5\"\nassert solution(\"20 10\") == \"20\"\nassert solution(\"15 20\") == \"20\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"20 20\") == \"20\"\n\n\"\"\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1') == '6'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == \"5\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 10') == '-1'\nassert solution('3 3') == '5'\nassert solution('4 4') == '4'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == \"5\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == \"5\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''\n2\n1 5\n1 2\n''') == 'edward is right'\n'''\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n1 7\n2 5\n1 2\n3 5\n3 1\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n2\n1 7\n2 5\n1 2\n3 5\n3 1\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n3\n1 7\n3 5\n2 1\n3 2\n\"\"\") == \"gunilla has a point\"\n\"\"\"\nhttps://www.hackerrank.com/challenges/ugly-number-again/problem\n\"\"\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'gunilla has a point'\nprint('PASS')\n\nSample Input:\n3\n1 5\n4 7\n3 4\nSample Output:\nedward is right\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5 5') == 'gunilla has a point'\nassert solution('2\\n1 7') == 'edward is right'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward has a point'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 7\n5 5\n\"\"\") == \"gunilla has a point\"\n\nassert solution(\"\"\"\n10 10\n10 10\n\"\"\") == \"edward is right\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"3 2\\n5 5 3\") == \"gunilla has a point\"\nassert solution(\"2 2\\n5 5\") == \"edward is right\"\nassert solution(\"1 5\\n3 3\") == \"edward is right\"\nassert solution(\"2 2\\n3 5\") == \"edward is right\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 7') == 'gunilla has a point'\nassert solution('2\\n1 7\\n5 5') == 'gunilla has a point'"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 7') == 'gunilla has a point'\nassert solution('5 5') == 'gunilla has a point'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 7\") == \"gunilla has a point\"\nassert solution(\"2\\n1 7\\n5 5\") == \"edward has a point\"\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\n\"\n\"s 1\\ns 2\\ns 3\\ns 4\\n\"\n\"t 5 6\\nt 5 6\\nt 5 7\\nt 6 7\\n\"\n\"t 7 8\\nt 8 9\\nt 9 10\\nt 10 11\\n\"\n\"t 11 12\\nt 12 13\\nt 13 14\\nt 14 15\\n\"\n\"t 15 16\\nt 16 17\\nt 17 18\\nt 18 19\\n\"\n\"t 19 20\\nt 20 21\\nt 21 22\\nt 22 23\\n\"\n\"t 23 24\\nt 24 25\\nt 25 26\\nt 26 27\\n\"\n\"t 27 28\\nt 28 29\\nt 29 30\\nt 30 31\\n\"\n\"t 31 32\\nt 32 33\\nt 33 34\\nt 34 35\\n\"\n\"t 35 36\\nt 36 37\\nt 37 38\\nt 38 39\\n\"\n\"t 39 40\\nt 40 41\\nt 41 42\\nt 42 43\\n\"\n\"t 43 44\\nt 44 45\\nt 45 46\\nt 46 47\\n\"\n\"t 47 48\\nt 48 49\\nt 49 50\\nt 50 51\\n\"\n\"t 51 52\\nt 52 53\\nt 53 54\\nt 54 55\\n\"\n\"t 55 56\\nt 56 57\\nt 57 58\\nt 58 59\\n\"\n\"t 59 60\\nt 60 61\\nt 61 62\\nt 62 63\\n\"\n\"t 63 64\\nt 64 65\\nt 65 66\\nt 66 67\\n\"\n\"t 67 68\\nt 68 69\\nt 69 70\\nt 70 71\\n\"\n\"t 71 72\\nt 72 73\\nt 73 74\\nt 74 75\\n\"\n\"t 75 76\\nt 76 77\\nt 77 78\\nt 78 79\\n\"\n\"t 79 80\\nt 80 81\\nt 81 82\\nt 82 83\\n\"\n\"t 83 84\\nt 84 85\\nt 85 86\\nt 86 87\\n\"\n\"t 87 88\\nt 88 89\\nt 89 90\\nt 90 91\\n\"\n\"t 91 92\\nt 92 93\\nt 93 94\\nt 94 95\\n\"\n\"t 95 96\\nt 96 97\\nt 97 98\\nt 98 99\\n\"\n\"t 99 100\\nt 100 101\\nt 101 102\\nt 102 103\\n\"\n\"t 103 104\\nt 104 105\\nt 105 106\\nt 106 107\\n\"\n\"t 107 108\\nt 108 109\\nt 109 110\\nt 110 111\\n\"\n\"t 111 112\\nt 112 113\\nt 113 114\\nt 114 115\\n\"\n\"t 115 116\\nt 116 117\\nt 117 118\\nt 118 119\\n\"\n\"t 119 120\\nt 120 121\\nt 121 122\\nt 122 123\\n\"\n\"t 123 124\\nt 124 125\\nt 125 126\\nt 126 127\\n\"\n\"t 127 128\\nt 128 129\\nt 129 130\\nt 130 131\\n\"\n\"t 131 132\\nt 132 133\\nt 133 134\\nt 134 135\\n\"\n\"t 135 136\\nt 136 137\\nt 137 138\\nt 138 139\\n\"\n\"t 139 140\\nt 140 141\\nt 141 142\\nt 142 143\\n\"\n\"t 143 144\\nt 144 145\\nt 145 146\\nt 146 147\\n\"\n\"t 147 148\\nt 148 149\\nt 149 150\\nt 150 151\\n\"\n\"t 151 152\\nt 152 153\\nt 153 154\\nt 154 155\\n\"\n\"t 155 156\\nt 156 157\\nt 157 158\\nt 158 159\\n\"\n\"t 159 160\\nt 160 161\\nt 161 162\\nt 162 163\\n\"\n\"t 163 164\\nt 164 165\\nt 165 166\\nt 166 167\\n\"\n\"t 167 168\\nt 168 169\\nt 169 170\\nt 170 171\\n\"\n\"t 171 172\\nt 172 173\\nt 173 174\\nt 174 175\\n\"\n\"t 175 176\\nt 176 177\\nt 177 178\\nt 178 179\\n\"\n\"t 179 180\\nt 180 181\\nt 181 182\\nt 182 183\\n\"\n\"t 183 184\\nt 184 185\\nt 185 186\\nt 186 187\\n\"\n\"t 187 188\\nt 188 189\\nt 189 190\\nt 190 191\\n\"\n\"t 191 192\\nt 192 193\\nt 193 194\\nt 194 195\\n\"\n\"t 195 196\\nt 196 197\\nt 197 198\\nt 198 199\\n\"\n\"t 199 200\\nt 200 201\\nt 201 202\\nt 202 203\\n\"\n\"t 203 204\\nt 204 205\\nt 205 206\\nt 206 207\\n\"\n\"t 207 208\\nt 208 209\\nt 209 210\\nt 210 211\\n\"\n\"t 211 212\\nt 212 213\\nt 213 214\\nt 214 215\\n\"\n\"t 215 216\\nt 216 217\\nt 217 218\\nt 218 219\\n\"\n\"t 219 220\\nt 220 221\\nt 221 222\\nt 222 223\\n\"\n\"t 223 224\\nt 224 225\\nt 225 226\\nt 226 227\\n\"\n\"t 227 228\\nt 228 229\\nt 229 230\\nt 230 231\\n\"\n\"t 231 232\\nt 232 233\\nt 233 234\\nt 234 235\\n\"\n\"t 235 236\\nt 236 237\\nt 237 238\\nt 238 239\\n\"\n\"t 239 240\\nt 240 241\\nt 241 242\\nt 242 243\\n\"\n\"t 243 244\\nt 244 245\\nt 245 246\\nt 246 247\\n\"\n\"t 247 248\\nt 248 249\\nt 249 250\\nt 250 251\\n\"\n\"t 251 252\\nt 252 253\\nt 253 254\\nt 254 255\\n\"\n\"t 255 256\\nt 256 257\\nt 257 258\\nt 258 259\\n\"\n\"t 259 260\\nt 260 261\\nt 261 262\\nt 262 263\\n\"\n\"t 263 264\\nt 264 265\\nt 265 266\\nt 266 267\\n\"\n\"t 267 268\\nt 268 269\\nt 269 270\\nt 270 271\\n\"\n\"t 271 272\\nt 272 273\\nt 273 274\\nt 274 275\\n\"\n\"t 275 276\\nt 276 277\\nt 277 278\\nt 278 279\\n\"\n\"t 279 280\\nt 280 281\\nt 281 282\\nt 282 283\\n\"\n\"t 283 284\\nt 284 285\\nt 285 286\\nt 286 287\\n\"\n\"t 287 288\\nt 288 289\\nt 289 290\\nt 290 291\\n\"\n\"t 291 292\\nt 292 293\\nt 293 294\\nt 294 295\\n\"\n\"t 295 296\\nt 296 297\\nt 297 298\\nt 298 299\\"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 10\nt 1 2\nt 1 3\nt 1 4\ns 1\ns 2\ns 3\ns 4\ns 5''') == '4 4 4 4 4'\nassert solution('''3 2\ns 1\ns 2\ns 3''') == '2 2 2'\nassert solution('''3\nt 1 2\nt 1 3\ns 1\ns 2\ns 3''') == '1 1 1'\nassert solution('''10\nt 1 2\nt 1 3\nt 1 4\nt 1 5\nt 1 6\nt 1 7\nt 1 8\nt 1 9\nt 1 10\nt 2 11\nt 2 12\nt 2 13\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\ns 11\ns 12\ns 13\ns 14\ns 15\ns 16\ns 17\ns 18\ns 19\ns 20\ns 21\ns 22\ns 23\ns 24\ns 25\ns 26\ns 27\ns 28\ns 29\ns 30\ns 31\ns 32\ns 33\ns 34\ns 35\ns 36\ns 37\ns 38\ns 39\ns 40\ns 41\ns 42\ns 43\ns 44\ns 45\ns 46\ns 47\ns 48\ns 49\ns 50\ns 51\ns 52\ns 53\ns 54\ns 55\ns 56\ns 57\ns 58\ns 59\ns 60\ns 61\ns 62\ns 63\ns 64\ns 65\ns 66\ns 67\ns 68\ns 69\ns 70\ns 71\ns 72\ns 73\ns 74\ns 75\ns 76\ns 77\ns 78\ns 79\ns 80\ns 81\ns 82\ns 83\ns 84\ns 85\ns 86\ns 87\ns 88\ns 89\ns 90\ns 91\ns 92\ns 93\ns 94\ns 95\ns 96\ns 97\ns 98\ns 99\ns 100''') == '2 2 3 2 4'\nprint('TESTING DONE!')\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\"\n) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\"\n) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\"\n    \"5 6\\ns 5\\ns 6\\ns 10\"\n    ) == \"4 4 4 4\"\n\nassert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\"\n    \"5 6\\ns 5\\ns 6\\ns 10\\n\"\n    ) == \"4 4 4 4\"\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == \"4\"\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == \"4\"\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == \"4\"\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == \"4\"\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == \"4\"\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\nt 1 2\nt 1 3\nt 2 3\nt 4 5\nt 6 7\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 10\n''') == '4\\n4\\n4\\n1\\n2\\n2\\n2\\n4\\n4\\n4\\n2\\n2\\n2\\n2\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 11\\n t 1 10\\nt t 1 2\\nt t 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n t 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'''\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1999\"\nassert solution(\"2\") == \"1982\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nIceland 2016\\nIceland 1980\\nIceland 1983\") == \"1980\"\nassert solution(\"3\\nIceland 1981\\nSweden 2016\\nIceland 1983\") == \"1983\"\nassert solution(\"2\\nIceland 1\\nIceland 2\") == \"1982\"\nassert solution(\"2\\nIceland 1\\nSweden 1\") == \"1982\"\nassert solution(\"2\\nIceland 1\\nIceland 2\") == \"1983\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1982'\nassert solution('2') == '1999'\nprint(solution(stdin))\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nIceland 2016\\nSweden 2015\\nIceland 1982\\n') == '2015'\nassert solution('1\\nIceland 1\\nIceland 2\\nNorway 1999\\n') == '1982'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '2015'\nassert solution('2\\nS\\nS\\n') == 'S'\nassert solution('3\\nF\\nF\\nF\\n') == 'F'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2016\"\nassert solution(\"2\") == \"1999\"\nassert solution(\"3\") == \"1982\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == \"1982\"\nassert solution('''\n5\nItaly 1949\nItaly 1987\nSwitzerland 1935\nSwitzerland 1945\nItaly 1993\n''') == \"1949\"\nassert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == \"1981\"\nassert solution('''\n10\nArizona 1946\nTexas 2000\nNew York 1859\nBoston 1842\nColorado 1858\nColorado 1876\nNew York 1942\nArizona 1949\nArizona 1843\nArizona 1839\nBoston 1826\nNew York 1828\nArizona 1852\nColorado 1852\nNew York 1854\nNew York 1860\nArizona 1869\nArizona 1878\nArizona 1881\nNew York 1885\nNew York 1890\nArizona 1892\nNew York 1894\nArizona 1896\nNew York 1896\nArizona 1897\nNew York 1899\nArizona 1901\nNew York 1902\nArizona 1904\nNew York 1906\nArizona 1906\n''') == \"1896\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1982\"\nassert solution(\"5\") == \"1996\"\nassert solution(\"4\") == \"1983\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2''') == '2015'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2015'"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n    a\n    b\n    c\n    d\n    e\n\"\"\") == \"10\"\n\nassert solution(\n\"\"\"\n    a\n    b\n    c\n    d\n    e\n    e\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n    a\n    b\n    a\n\"\"\") == \"1\""
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '10'\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a\nb\na\nc\nc\nc\nc\nd\ne\ne\ne\ne''') == '10'\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"10\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nprint(solution(input()))\nprint(solution(input()))"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '10'\n\n\"\"\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('a') == '1'\nassert solution('aabc') == '2'\nassert solution('aaaabbbbb') == '5'\nassert solution('abbcccddddeeeee') == '10'\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency... and its humanity\""
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from.. and.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering. will save the world from inefficiency... and its humanity\"\nassert solution(\"\"\"\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\"\"\") == \"Engineering... and its humanity\"\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering. will save the world from.. and its.. and its. humanity'\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering will save the world from inefficiency... and its humanity.'"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency. is a blight on.. and its humanity'\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering. will save the world from inefficiency.. and its.. humanity.'\n\"\"\"\n\nimport re\n\npattern = r\"[a-z]+|[A-Z]+|[.,!?;]|[^ ]*\"\n\nwith open('../input.txt') as f:\n    text = f.read()\n\ntext = re.sub(pattern, \".\", text)\n\nprint(text)\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity') == 'Engineering. will save the world from.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its.. and its"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering. saves the world......... and its.......... its
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering.. is. a. blight on.. and its. humanity\"\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('4 4 3') == 'unsatisfactory'\nassert solution('1 2 3') =='satisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('2 3') == 'unsatisfactory'\nassert solution('10 5') == 'unsatisfactory'\nassert solution('10 10') == 'unsatisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\n\nassert solution('''5 3\n1 2 -3\n-1 -2 3\n-1 2 -3\n-1 -2 -3\n-1 -3 2''') == 'unsatisfactory'\n\nassert solution('''5 3\n-1 -2 3\n-1 2 -3\n1 -2 3\n1 -2 -3\n-1 -3 2''') == 'unsatisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n\") == \"satisfactory\"\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() =='satisfactory'\nassert solution('5 3') =='satisfactory'\nassert solution('5 4') == 'unsatisfactory'\n\"\"\"\n\nm, n = list(map(int, input().split()))\n\nfor _ in range(m):\n    a = list(map(int, input().split()))\n    if -n in a or n in a:\n        print(\"unsatisfactory\")\n    else:\n        print(\"satisfactory\")"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''3 3\n-1 -2 3\n-1 2 3\n-1 -2 -3''') == 'unsatisfactory'\n\n'''"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') == 'unsatisfactory'\nassert solution('8 6\\n-1 2 3 4 5 6 7 8\\n-1 -2 3 4 5 6 7 8\\n1 -2 3 4 5 6 7 8\\n1 -2 -3 4 5 6 7 8\\n1 2 -3 4 5 6 7 8\\n') =='satisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n-1 2 3\n-1 -2 3''') =='satisfactory'\nassert solution('''3\n-1 2 3\n-1 -2 3\n1 -2 3''') =='satisfactory'\nassert solution('''1\n-1 2 3\n-1 -2 3\n1 -2 3''') == 'unsatisfactory'\n\n\"\"\"\n\nm,n = list(map(int,input().split()))\n\nfor _ in range(m):\n    _,x1,x2,x3 = input().split()\n    if x1 == '-' and x2 == '-' and x3 == '-':\n        print('satisfactory')\n    elif x1 == '-' and x2 == '-' and x3 == '+':\n        print('satisfactory')\n    elif x1 == '+' and x2 == '-' and x3 == '-':\n        print('satisfactory')\n    elif x1 == '+' and x2 == '-' and x3 == '+':\n        print('satisfactory')\n    elif x1 == '-' and x2 == '+' and x3 == '-':\n        print('satisfactory')\n    elif x1 == '-' and x2 == '+' and x3 == '+':\n        print('satisfactory')\n    elif x1 == '+' and x2 == '+' and x3 == '-':\n        print('satisfactory')\n    elif x1 == '+' and x2 == '+' and x3 == '+':\n        print('satisfactory')\n    else:\n        print('unsatisfactory')\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n1 2 3\n-1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('10') == 'none'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '4'\nassert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('1 1 1 1 1 5 3 4 6 6') == 'none'\nassert solution('1 1 1 1 1 1 1 1 5 3 4 6 6') == 'none'\nassert solution('1 1 1 1 1 1 1 1 5 3 4 6 6') == '1'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '2'\nassert solution('6') == '1'\nassert solution('1') == 'none'\n\"\"\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2\\n1 1\\n2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6') == '1'\nassert solution(\n    '5\\n1 1 1 5 3 4 6 6') == '3'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('8') == '4'\n\"\"\""
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 1 1 5 3 4 6 6') == '4'\nassert solution('100') == 'none'\nassert solution('10') == 'none'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == \"4\"\nassert solution('8\\n0 0 0 5 3 4 6 6') == \"0\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('8') == 'none'\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"19:00:00\\n20:00:00\") == \"04:00:00\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\",\"04:00:00\") == \"08:00:00\""
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nassert solution('10:00:00') == '10:00:00'\nassert solution('00:00:00') == '00:00:00'\nassert solution('00:00:01') == '00:00:01'\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"15:00:00\") == \"11:00:00\"\nassert solution(\"23:45:00\") == \"12:00:00\"\nassert solution(\"20:00:00\") == \"08:00:00\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"08:00:00\"\n\"\"\"\nimport re\nimport sys"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12:00:00\",\"04:00:00\") == \"08:00:00\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"18:00:00\"\nassert solution(s) == \"19:00:00\"\nassert solution(s) == \"19:30:00\"\nassert solution(s) == \"20:00:00\"\nassert solution(s) == \"20:00:00\"\n\n\"\"\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"20:00:00\\n\"\n    \"04:00:00\"\n) == \"08:00:00\"\nassert solution(\n    \"20:00:00\\n\"\n    \"21:00:00\"\n) == \"21:00:00\"\nassert solution(\n    \"20:00:00\\n\"\n    \"22:00:00\"\n) == \"00:00:00\"\nassert solution(\n    \"20:00:00\\n\"\n    \"23:00:00\"\n) == \"00:00:00\"\nassert solution(\n    \"20:00:00\\n\"\n    \"21:00:00\"\n) == \"00:00:00\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '00:00:00'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4'\nassert solution('20 20') == '16'\nassert solution('3 5') == '2'\nassert solution('5 6') == '1'\n\nimport math\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"2\"\nassert solution(\"4\\n3\") == \"2\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('31 6') == '4'\nassert solution('16 7') == '3'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n\") == \"2\"\nassert solution(\"4 5\\n\") == \"4\"\nassert solution(\"1 2 3\\n\") == \"2\"\nassert solution(\"1 2 2 3\\n\") == \"1\"\nassert solution(\"1 2 1 3\\n\") == \"1\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '4'\nassert solution('3\\n3') == '3'\nassert solution('4\\n4') == '4'\nassert solution('5\\n4') == '5'\nassert solution('6\\n3') == '4'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1\n2 3\n3 5\n3 2\n3 4''') == '3'\n\nassert solution('''16\n4 5\n4 4\n6 4\n6 5''') == '5'\n\nassert solution('''2\n4 4\n2 2\n2 4''') == '4'\n\nassert solution('''8\n8 8\n8 4\n4 8\n4 5\n3 3\n3 2\n2 4\n2 3''') == '4'\n\nassert solution('''100\n4 2\n4 2\n2 5\n2 3\n2 3''') == '4'"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"4\""
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 10\n\"\"\") == \"20\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4') == '6'\nassert solution('2 2') == '3'\nassert solution('5 3') == '8'\nassert solution('1 1') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4') == '4'\nassert solution('1\\n2') == '2'\nassert solution('3\\n3') == '1'\nassert solution('10\\n10') == '10'\nassert solution('100\\n100') == '100'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.0', \"Solution is too good!\"\nassert solution('10000') == '7.314319122946326e+47', \"Solution is too good!\"\n\"\"\""
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('10') == '100'\nassert solution('50') == '210'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('1') == '1.0000000000000001'\nassert solution('10') == '10.0'\n'''\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2.718281828459045\"\nassert solution(\"10\") == \"2.718281828459045\"\nassert solution(\"1000\") == \"2.718281828459045\"\nassert solution(\"10000\") == \"2.718281828459045\"\n\n\"\"\"\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('1000') == '2.3333333333333335'\nassert solution('10000') == '2.718281828182818'\nassert solution('100000') == '3.1622776601683793'\nassert solution('100000000') == '2.2222222222222223'"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2.6666666666666665'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('2') == '2.718281828459045'\nassert solution('10') == '2.718281828459045'\nassert solution('100') == '2.718281828459045'\nassert solution('1000') == '2.718281828459045'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '2.718281828459045'\n\"\"\"\n\nn = int(input())\ne = (1/n)*sum(1/pow(i, n) for i in range(1, n+1))\n\nprint(e)\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4''') == '2.718281828459045'\nassert solution('''1''') == '1.0'\nassert solution('''10''') == '2.7182818284591045'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2.6', '3'\nassert solution('10') == '2.18', '10'\nassert solution('1000000') == '1.716290714286131', '1000000'\nassert solution('1000') == '2.1', '1000'\nassert solution('0') == '1', '0'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 2''') == 'paul'\nassert solution('''1 3 3 1''') == 'paul'\nassert solution('''1 2 2 2''') == 'opponent'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 7\n8\n7\n5\n2\n''') == 'paul'\n\nassert solution('''10 5 7\n1\n8\n7\n4\n2\n''') == 'opponent'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'paul'\n\n\nSample Input:\n4 4 4\nSample Output:\nopponent\n\n\"\"\""
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"paul\"\nassert solution(\"5 3 7\") == \"paul\"\nassert solution(\"2 5 3\") == \"opponent\"\nassert solution(\"1 5 7\") == \"paul\"\nassert solution(\"3 4 7\") == \"opponent\"\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 0 1\") == \"opponent\"\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 7\n2\n3\n4\n4\n5''') == 'paul'\nassert solution('''10 10 2\n3\n7\n2\n1\n5\n8\n7\n6\n9\n10\n2\n3\n1\n5\n7\n2\n3\n6\n9\n10''') == 'opponent'\nassert solution('''10 10 10\n3\n8\n7\n2\n5\n9\n10\n1\n2\n4\n6\n7\n8\n''') == 'paul'\nassert solution('''1 1 1\n3\n7\n2\n3\n4\n5\n6\n7\n8\n9''') == 'opponent'\nassert solution('''1 1 1\n2\n3\n4\n5\n6\n7\n8\n9''') == 'paul'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'opponent', 'The logic is correct'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 7\npaul''') == 'paul'\nassert solution('''5 3 3\npaul''') == 'paul'\nassert solution('''5 5 7\npaul''') == 'paul'\nassert solution('''5 5 7\nopponent''') == 'opponent'\nassert solution('''5 3 7\nopponent''') == 'opponent'"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('7 3 1') == 'opponent'\nassert solution('1 1 1 1 1 1 1') == 'opponent'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"opponent\"\nassert solution(input(\"\")) == \"paul\""
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"1\\n1\") == \"2\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution('5\\n') == \"1\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\\n\") == \"1\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('123c') == 'Yes'\nassert solution('1245') == 'No'\nassert solution('12344') == 'Yes'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234\") == \"No\"\nassert solution(\"1234a\") == \"Yes\"\nassert solution(\"123\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == 'Yes'\nassert solution('123a') == 'No'\nassert solution('123B') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aaaa') == 'Yes'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"pass1234\") == \"No\"\nassert solution(\"pass1234a\") == \"No\"\nassert solution(\"pass1234a9\") == \"No\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"1234567\") == \"Yes\"\nassert solution(\"12345678\") == \"Yes\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''123\n123a\n''') == 'No'\nassert solution('''a\nb\n''') == 'Yes'\nassert solution('''abcd\nabcd\nabc\nabc\nc\n''') == 'Yes'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''123\n123a''') == 'No'\nassert solution('''321\n321a''') == 'Yes'\n'''"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"123\\n123a\"\n    ) == \"No\"\n\nassert solution(\n    \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\"\n    ) == \"Yes\"\n\nassert solution(\n    \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\"\n    ) == \"Yes\"\n\nassert solution(\n    \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\"\n    ) == \"No\"\n\nassert solution(\n    \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('12a3') == 'No'\nassert solution('123a123') == 'Yes'\nassert solution('12A3') == 'No'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\nzeka\nzeka aha\nzeka aha aha\n\"\"\") == \"zeka paprika\"\n\nimport re"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nprint(solution(input()))\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''zepelepenapa papapripikapa''') == 'zelena paprika'\nassert solution('''papapripikapa papapripikapa''') == 'paprika paprika'\nassert solution('''papapripikapa pepenapa papapripikapa''') == 'paprika paprika paprika paprika'\nassert solution('''papapripikapa pepenapa papapripikapa''') == 'paprika paprika paprika paprika'\nassert solution('''papapripikapa peppenapa papapripikapa''') == 'paprika paprika paprika paprika'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution('') == None\nassert solution('hello') == 'hello'\nassert solution('hello world') == 'hello world'\nassert solution('hello world, this is a test') == 'hello world, this is a test'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''kemija''') == 'kepemipijapa'\nassert solution('''paprika''') == 'papapripikapa'\n\n----The key points in this challenge----\n1. words will be separated by exactly one space and there will be no leading or trailing spaces.\n2. The total number of character will be at most 100\n3. There can not be any leading spaces\n4. There can not be trailing spaces\n5. There can not be leading and trailing spaces\n'''\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nzepelepenapa papapripikapa\n''') == 'zelena paprika'\nassert solution('''\nzepelepenapa papapripikapa\n''') == 'zelena paprika'\nassert solution('''\nzepelepepenapa papapripikapa\n''') == 'zelena paprika'\nassert solution('''\nzepelepepenapa papapripikapa\n''') == 'zelena paprika'\nassert solution('''\nzepelepepenapa papapripikapa\n''') == 'zelena paprika'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\""
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nprint('\"passed\" if solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"')\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"p p i p i p e p e p e p p i p e\") == \"per pe p i p e p p i p e p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i p e pe p i"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"32 3\") == \"IMPOSSIBLE\"\n\n'''"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'\n\n\"\"\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 2') == '-32', \"Second test\"\nassert solution('32 2.1') == '-32.1', \"Second test\"\nassert solution('-32.1') == '-32.1', \"Second test\"\nassert solution('32.1') == '-32.1', \"Second test\"\nassert solution('32') == '-32', \"Second test\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3') == 'IMPOSSIBLE'\nassert solution('1 0') == '-31.999999999'\nassert solution('-1 2') == '31.999999999'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'IMPOSSIBLE'\nprint(solution())\n\nassert solution('32 2') == '-32'\nprint(solution('32 2'))\n\nassert solution('32 -2') == '-32'\nprint(solution('32 -2'))\n\nassert solution('32 -23') == '-32'\nprint(solution('32 -23'))\n\nassert solution('32 -22') == '-32'\nprint(solution('32 -22'))"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"ALL GOOD\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32 2') == '-32'\nassert solution('25 2') == '25'\nassert solution('-2 -2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == 'IMPOSSIBLE'\nassert solution('-1 1') == 'IMPOSSIBLE'\nassert solution('0 -1') == 'IMPOSSIBLE'\nassert solution('1 0') == '0'\nassert solution('-1 0') == '0'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"32 2\") == \"-32\"\n\nstdin = \"\"\"32 2\nSample Input:\n-32 -32\nSample Output:\nIMPOSSIBLE\"\"\"\n\nassert solution(stdin) == \"IMPOSSIBLE\"\n\nstdin = \"\"\"-32 1\nSample Input:\n-32 -2\nSample Output:\n-32\"\"\"\n\nassert solution(stdin) == \"-32\"\n\nstdin = \"\"\"32 2\nSample Input:\n-32 -32\nSample Output:\nIMPOSSIBLE\"\"\"\n\nassert solution(stdin) == \"IMPOSSIBLE\"\n\nstdin = \"\"\"31 3\nSample Input:\n-12 -3\nSample Output:\n-31\"\"\"\n\nassert solution(stdin) == \"-31\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"10\"\nassert solution(\"-5 4\") == \"3\"\nassert solution(\"-5 0\") == \"10\"\nassert solution(\"-5 2\") == \"2\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('3 3 3') == 'none'"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 2 1\") == \"none\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 4 5\") == \"none\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 4 6') == 'none'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2,2,3,3]) == \"both\"\nassert solution([1,3,4,4]) == \"both\"\nassert solution([1,1,2,2]) == \"one\"\nassert solution([1,1,1,2]) == \"none\"\nassert solution([1,1,1,1]) == \"none\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 2 3 3\\n1 3 4\") == \"both\\n1\"\nassert solution(\n    \"3 5 2 4\\n1 3 4\") == \"one\\n1\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 2 3 3\\n1 3 4'\n) == 'both\\none\\nnone'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 2 1 2') == 'none'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 3 3\n1 3 4\n''') == 'both'\nassert solution('''2 2 3 4\n1 2 3 3\n''') == 'one'\nassert solution('''2 2 2 4\n1 2 3 3\n''') == 'none'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\n\nSample Input:\n5 4 1\nSample Output:\n1\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3\") == \"10\"\nassert solution(\"-10 -10 -5 -6\") == \"7\"\nassert solution(\"-6 -6 -5 -5\") == \"7\"\n\nstdin = input()"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('4 5 6') == '10'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 6, 8]) == 10\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 6 4') == '10'\nassert solution('6 6 5') == '9'\nassert solution('6 5 4') == '10'\nassert solution('1 2 3 4 5') == '10'\nassert solution('2 2 4 5') == '10'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 4 2''') == '10'\nassert solution('''5 6 7 8''') == '10'\nassert solution('''5 6 7 8 5''') == '10'\nassert solution('''5 6 7 8 4''') == '10'\nassert solution('''5 6 7 8 5 4''') == '10'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6 8') == '10'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"4 5 2 9\") == \"7\"\nassert solution(\"1 4 5 8\") == \"9\"\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('2 9 9 1') == '10'\nassert solution('-10 -8 -7 -6 -5 -4 -3 -2 -1') == '4'\n\nclass Solution:\n    def solution(self, stdin):\n        stdin = [int(x) for x in stdin.split()]\n        stdin.sort()\n        diff = stdin[1] - stdin[0]\n        return stdin[2] + diff"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n6\n8''') == '10'\nassert solution('''\n-4\n6\n8''') == '10'\nassert solution('''\n1\n5\n8''') == '10'\nassert solution('''\n-10\n-4\n5\n8''') == '10'\nassert solution('''\n-1\n5\n8''') == '10'\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"20 200\") == \"209\"\nassert solution(\"100 500\") == \"512\"\nassert solution(\"80 25\") == \"90\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"500 70\") == \"533\"\n\"\"\"\n\nh, v = list(map(int, stdin.strip().split()))\n\nt = h - v\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"300 100\") == \"533\"\nassert solution(\"500 70\") == \"533\"\n\"\"\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '533'\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"1000 90\") == \"1066\"\n\"\"\"\nfrom math import gcd\n\nx, y = map(int, input().split())\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '533'\nassert solution(input(\"\")) == 'None'\nassert solution(input(\"\")) == 'None'\n\"\"\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"500 70\") == \"533\"\nprint(solution(input()))\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''500 70\nSample Input:\n500 70\nSample Output:\n533''') == '533'\n\nassert solution('''1500 450\nSample Input:\n150 50\nSample Output:\n768''') == '768'\n\nassert solution('''5 1\nSample Input:\n0 1\nSample Output:\n1''') == '1'\n\nassert solution('''20 50\nSample Input:\n20 50\nSample Output:\n30''') == '30'\n\nassert solution('''15 50\nSample Input:\n15 50\nSample Output:\n15''') == '15'"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('500 70') == '533'"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\"\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('10 2') == '8.0'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == '39.0 30.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('1 10') == '39.0'\nassert solution('3 7') == '32.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"39.0\"\nassert solution(\"2\") == \"30.0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 9\n69 60\n100 60\n''') == '39.0\nassert solution('''2 20\n-70 -70\n-120 -120\n''') == '30.0\nassert solution('''3 30\n-60 -60\n-30 -30\n''') == '0.0\nassert solution('''4 10\n-10 -10\n-20 -20\n-10 -10\n''') == '20.0\n''')\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('3 1') == '30.0'\nprint('all test cases passed...')\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 9') == '39.0'"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('100 60') == '30.0'"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5 1\n5 1\n5 1\nSample Output:\n4.0\n7.0\n\"\"\") == \"10.0\"\nassert solution(\"\"\"\n4\n3 2\n2 3\n1 2\nSample Output:\n3.0\n7.0\n\"\"\") == \"7.0\"\nassert solution(\"\"\"\n5\n5 1\n5 1\n5 1\n5 1\nSample Output:\n0.0\n1.0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n4\n3 2\n2 3\n1 2\nSample Output:\n1.0\n6.0\n\"\"\") == \"6.0\"\nassert solution(\"\"\"\n5\n5 1\n5 1\n5 1\n5 1\nSample Output:\n0.0\n1.0\n\"\"\") == \"0.0\"\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 9') == '39.0'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    23 27 31 28 30\n''') == '2 28'\nassert solution('''\n    3\n    2 4 5\n''') == '4 2'"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n23\\n27\\n31\\n28\\n30') == '2 28'\nassert solution('2\\n25\\n29\\n32\\n33\\n34') == '1 32'\nassert solution('3\\n36\\n38\\n40\\n41\\n42') == '2 40'\nassert solution('4\\n35\\n34\\n33\\n32') == '3 32'\nassert solution('5\\n37\\n35\\n34\\n33\\n32') == '4 33'\n\n\"\"\"\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))\nfrom common import *\n\nfrom bisect import bisect_left"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"2 3\"\nassert solution('2') == \"2 1\"\nassert solution('1') == \"1 0\"\nassert solution('-10') == \"0 -10\"\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n5\n23 27 31 28 30\n\"\"\") == \"2 28\"\nassert solution(r\"\"\"\n5\n20 20 20 20 20\n\"\"\") == \"1 4\"\nassert solution(r\"\"\"\n10\n10 10 10 10 10 10 10 10 10\n\"\"\") == \"9 9\"\nassert solution(r\"\"\"\n10\n10 10 10 10 10 10 10 10 10\n\"\"\") == \"5 5\"\nassert solution(r\"\"\"\n10\n10 10 10 10 10 10 10 10 10\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2 28'\nassert solution('3') == '1 28'\nassert solution('4') == '1 28'\nassert solution('8') == '1 28'\nassert solution('10') == '1 28'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n10 15 20\n\"\"\") == \"2 20\"\n\nassert solution(\n\"\"\"\n2\n30 10\n\"\"\") == \"1 30\"\n\nassert solution(\n\"\"\"\n1\n30\n\"\"\") == \"1 30\"\n\nassert solution(\n\"\"\"\n3\n2 5 8\n\"\"\") == \"2 8\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n\"\"\") == \"1 2\""
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\nassert solution('4\\n7 2 8 10') == '1 5'\nprint('Congratulations! Your solution is correct.')"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 2\n''') == '1'\n\n'''\nImplementation notes:\n\n1. A DP (Dynamic Programming) approach was used to solve this problem.\n2. The logic was very similar to the Knight\u2019s Tour problem.\n3. The logic was similar to the Longest Subarray with Maximum Sum.\n4. At every step, we want to calculate the maximum sum of length k for each k.\n\nWhat should the sum be of the optimal solutions, if there are n spaces, and m fights:\n\n- The optimal solutions is the maximum sum of all the lengths of k, 1<=k<=m.\n- The optimal solutions is the sum of the lengths of the longest sequence of ks.\n- The optimal solutions is the sum of the lengths of the longest subsequence of ks.\n\nLet\u2019s look at the first example:\n\nFor n=3, m=1:\n\nThe optimal solutions is 1+2+3=6\nWe can calculate the optimal solutions of a longest sequence of ks.\n\nLet\u2019s take the 1st element as:\n\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n\nLet\u2019s see how we can calculate the sum of the longest sequence of ks.\n\nSum of length of ks = 6\nSum of longest sequence of ks = 6\n\nLet\u2019s take the 2nd element as:\n\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n-1+2+3=6\n\nLet\u2019s see how we can calculate the sum of the longest sequence of ks.\n\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks = 6\nSum of longest sequence of ks = 6\nSum of length of ks"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6\n1 2 3\n3 2 1\n''') == '2'\nassert solution('''5 10\n2 1 1 1 1\n3 3 3 2\n4 2 2 3\n1 2 1 1\n4 1 2 1\n''') == '4'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\nassert solution('''\n3 4\n1 2\n3 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7 2\n1 2 3 4 5 6\n1 2 3 4 5 6 7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n15 6\n
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"0\""
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 6') == '2'"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 6') == '2'\nassert solution('3 6') == '1'\n\n---Input---\n3 6\n2 2 2\n\n---Output---\n1\n\n---Input---\n5 6\n2 3 2 5\n\n---Output---\n2\n\"\"\""
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n3 2 4 1 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n1 2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n3 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n4 1 2\n\"\"\") == \"1\""
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n\") == \"2\"\nassert solution(\"5 4\\n\") == \"3\"\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n3 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"3 3\n2 1 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\nMWWMWMMWM\n''') == '9'\nassert solution('''\n1\nMMWMWMMMMW\n''') == '3'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''MWWMMWM\nM\nM\nM\nW\nM\nW\nM\nW\nM\nW\nM\nM''') == '9'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nWMMWMM\") == \"9\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nMMWMMWMM\\n') == '9'\nassert solution('1\\nMMWMM\\n') == '9'\nassert solution('10\\nMMWMMWMMWMMWMMWMMWMMWMMWMMWMM\\n') == '19'\nassert solution('10\\nWMMWMMWMMWMMWMMWMMWMMWMMWMMWMM\\n') == '14'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('10') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMWM\\n\") == \"9\"\nassert solution(\"5\\nMWM\\n\") == \"4\"\nassert solution(\"1\\nMWM\\n\") == \"3\"\nassert solution(\"2\\nMWM\\n\") == \"1\"\nassert solution(\"3\\nMWM\\n\") == \"2\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nWMM') == '1'\nassert solution('2\\nWMMWMMWWWWMMMMM') == '1'\nassert solution('10\\nMMMMWMMMMMMWWWWWMMMMMMMMMMMMMM') == '9'\nassert solution('10\\nMMMMWMMMMMMWMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('2 1\\n0') == '0'\nassert solution('2 1\\n0 0') == '1'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n\"\"\""
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"8 -2 3 undo 2\"\n) == \"3\"\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 4 3 4 3 3 2 3 3 4\n2\n4 -2 5 1 -3 -1\n''') == '2'\nassert solution('''\n10\n1 2 4 3 4 3 3 2 3 3 4\n2\n1 2 -1 -3\n''') == '1'\nassert solution('''\n10\n2 2 4 3 4 3 3 2 3 3 4\n2\n3 4 1 -3 -1\n''') == '2'\n\nimport sys\nimport io\n\n\nsys.stdin = io.StringIO(\"\"\"\n10\n1 2 4 3 4 3 3 2 3 3 4\n2\n3 4 1 -3 -1\n\"\"\")\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"8 -2 3 undo 2\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3 4 5\n3 2 5 4 1\n1 2 4 5 3\n1 -1\n1 -1\n1 2 3"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '3'\nassert solution('10 5') == '8'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2\\n') == '3'\nassert solution('4 3\\n0 -4 3 undo 2\\n') == '1'\n\n\"\"\""
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 1\n2''') == '3'\nassert solution('''5 2\n2 3 -1 undo 1''') == '4'\nassert solution('''5 5\n1 4 -2 -1 undo 3\n3 -1 -3 undo 1\n2 4 -2 undo 4\n1 2 3 undo 3\n2''') == '1'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"10 20\\n20 40 10 20 40 20 10 20 40 20 20\\n40 40 40 20 40 20 20 20 20\\n10 20 20 20 20 20 10\\n40 40 40 40 20 40 20 20 20 20\\n20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n10 20 20 20 20 20 20 10\\n20 20 20 20 20 20 20 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40 20 40 20 20 20\\n40 40 40 40 40 20 40 20 20\\n20 20 20 20 20 20 20 20 20\\n40 40 40 40"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2\\n') == '3'\nassert solution('30 5\\n-8 -3 1 2 -2 3 -2 4 -5\\n') == '1'\nassert solution('10 2\\n0 0\\n') == '0'\nassert solution('50 10\\n-100 50\\n') == '99'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '6 7'\nassert solution('2 2 1') == '3'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6 7'\nassert solution('3 2 1') == '7 6'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n3 2 1') == '6 7'\nassert solution('2 2 3\\n3 2 1') == '6 7'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n3 2 1') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 3\n3 2 1\n4 2 1\n5 3\n''') == '6 7'\nassert solution('''\n5 3\n1 2 3\n3 2 1\n4 2 1\n5 3\n''') == '7 8'\n\n'''\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n3 2 1\n\"\"\") == \"6 7\"\n\nassert solution(\"\"\"\n5 3\n5 2 3 2 1\n\"\"\") == \"7 7\"\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2 3\n3 2 1\n''') == '6 7'\n\nassert solution('''5 5\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n''') == '9 13'\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect'\nprint(solution('''6\nals man m\u00f6nnen m\u00f6nnen m\u00f6nnen m\u00f6nnen m\u00f6nnen m\u00f6nnen\n3\nm\u00f6nnet m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt\nm\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt m\u00f6nt\n'''))\nprint(solution('''7\nl\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt\n3\nl\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga\nl\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga\n'''))\nprint(solution('''7\nl\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt l\u00e4ggt\n3\nl\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga\nl\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga l\u00e4gga\n'''))\n\nprint(solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n'''))\n\n'''\ninpt = stdin.readline()\nn = int(inpt)\nm = int(inpt)\nd = {}\ne = {}\nc = {}\n\nfor i in range(n):\n    inpt = stdin.readline()\n    words = inpt.split()\n    if words[0] not in d:\n        d[words[0]] = words[1]\n    else:\n        d[words[0]] = words[1]\n    if words[0] not in e:\n        e[words[0]] = words[1]\n    else:\n        e[words[0]] = words[1]\n    if words[0] not in c:\n        c[words[0]] = 'correct'\n\nfor i in range(m):\n    inpt = stdin.readline()\n    words = inpt.split()\n    if words[0] in d:\n        if words[1] == d[words[0]]:\n            c[words[0]] = 'correct'\n    else:\n        c[words[0]] = 'incorrect'"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '65 incorrect'\n\"\"\"\n\nn = int(input())\ns = input()\nm = int(input())\nd = {}\ne = {}\nc = {}\nfor i in range(m):\n    dic = input().split()\n    d[dic[0]] = dic[1]\n    e[dic[1]] = dic[0]\n    c[dic[0]] = 'correct'\n    c[dic[1]] = 'incorrect'\nfor i in range(n):\n    a = input()\n    for j in range(len(a)):\n        if a[j] in e.keys():\n            a = a.replace(a[j], d[a[j]])\n    if a == s:\n        print(len(c))\n        print(c)\n    else:\n        print(len(c)-1)\n        print(c)\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nala ma kota\\n7\\nals\\nwhen\\ncorrect\") == \"64 correct\\n665 incorrect\""
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '64'\nassert solution('5') == '666'"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1 correct\\n'\nassert solution('2') == '2 correct\\n'\nassert solution('3') == '3 correct\\n'\nassert solution('4') == '4 correct\\n'\nassert solution('5') == '5 incorrect\\n'\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect'\nassert solution('10\\nwhen a dog dances\\nwhen a cat dances\\nwhen a person dances\\nwhen a woman dances\\nwhen a man dances\\nwhen a man mutes\\nwhen a woman mutes\\nwhen a person mutes\\nwhen a man is on his feet\\nwhen a woman is on his feet\\nwhen a man is at his feet\\nwhen a woman is at his feet\\nwhen a man is near\\nwhen a woman is near\\nwhen a man is far\\nwhen a woman is far\\nwhen a person is near\\nwhen a person is far\\nwhen a woman is on the ground\\nwhen a person is on the ground\\nwhen a man is on the ground\\nwhen a woman is on the ground\\nwhen a man is in the ground\\nwhen a woman is in the ground\\nwhen a person is in the ground\\nwhen a person is in the ground\\nwhen a man is in the ground\\nwhen a woman is in the ground\\nwhen a person is in the ground\\nwhen a person is in the ground\\nwhen a man is at the ground\\nwhen a woman is at the ground\\nwhen a person is at the ground\\nwhen a person is at the ground\\nwhen a man is near\\nwhen a woman is near\\nwhen a person is near\\nwhen a person is far\\nwhen a woman is far\\nwhen a person is far\\nwhen a person is far\\nwhen a man is in the air\\nwhen a woman is in the air\\nwhen a person is in the air\\nwhen a person is in the air\\nwhen a man is in the air\\nwhen a woman is in the air\\nwhen a person is in the air\\nwhen a person is in the air\\nwhen a man is in the air\\nwhen a woman is in the air\\nwhen a person is in the air\\nwhen a person is in the air\\nwhen a man is on the table\\nwhen a woman is on the table\\nwhen a person is on the table\\nwhen a person is on the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is on the ground\\nwhen a woman is on the ground\\nwhen a person is on the ground\\nwhen a person is on the ground\\nwhen a man is on the ground\\nwhen a woman is on the ground\\nwhen a person is on the ground\\nwhen a person is on the ground\\nwhen a man is in the air\\nwhen a woman is in the air\\nwhen a person is in the air\\nwhen a person is in the air\\nwhen a man is in the air\\nwhen a woman is in the air\\nwhen a person is in the air\\nwhen a person is in the air\\nwhen a man is on the table\\nwhen a woman is on the table\\nwhen a person is on the table\\nwhen a person is on the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\nwhen a man is in the table\\nwhen a woman is in the table\\nwhen a person is in the table\\nwhen a person is in the table\\"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '64 incorrect'"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nals when correct\\nmollen moles correct\\n\") == \"4 correct\\n\"\nassert solution(\"4\\nals when correct\\nmollen moles correct\\n\") == \"4 correct\\n\"\nassert solution(\"4\\nals when correct\\nmollen moles correct\\n\") == \"4 correct\\n\"\nassert solution(\"4\\nals when correct\\nmollen moles correct\\n\") == \"4 correct\\n\"\nassert solution(\"4\\nals when correct\\nmollen moles correct\\n\") == \"4 correct\\n\"\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\nassert solution(\"20\\nhej vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare\\n6\\nvare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare\\n4\\nvare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare vare\\n\") == \"20 correct\\n40 incorrect\"\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nals mollen mollen mollen mollen mollen mollen\\n4\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"4 correct\"\nassert solution(\"6\\nals mollen mollen mollen mollen mollen mollen\\n4\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n7\\ncorrect\") == \"3 correct\"\nassert solution(\"6\\nals mollen mollen mollen mollen mollen mollen\\n4\\nmollen moles incorrect\\nmollen destroy correct\\nmollen mills incorrect\\n7\\nincorrect\") == \"5 incorrect\"\nassert solution(\"5\\nwhen correct\\nmolts correct\\ncorrect\\ncorrect\\ncorrect\") == \"7 correct\"\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '7'"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4\\n3 4 4\\n') == '7'\nassert solution('1\\n3\\n2 4 1\\n') == '3'\nassert solution('4\\n1 2 3 4\\n') == '1'\nassert solution('1\\n4\\n5 6 5\\n') == '4'\nassert solution('100\\n10 50 90 20\\n') == '95'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 3') == '7'"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 4 3\\n') == '7'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1'\nassert solution('1\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 3') == '7'\nassert solution('4\\n1 2 3 3') == '1'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\nassert solution(\"50\\n22 97 3 34\") == \"33\""
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 3 4 3') == '7'\n\nassert solution('100\\n2 3 4 3') == '7'\n\"\"\"\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4 3\") == \"7\"\nassert solution(\"4 2 3 4\") == \"7\"\nassert solution(\"3 2 4 3\") == \"7\"\nassert solution(\"5 1 1 1 1\") == \"6\"\nassert solution(\"9 2 3 3 1\") == \"8\"\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('2') == '0.0 0.0\\n0.0 4.0'\n'''\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"2.0 2.0\n1.0 4.0\n0.0 0.0\n\"\"\", \"\"\"\n5\n0 0\n1 1\n0 2\n5\n\"\"\", \"\"\"\n0.5 0.5\n2.5 5.0\n0.5 2.5\n\"\"\", \"\"\"\n8\n0 0\n1 1\n0 2\n8\n\"\"\", \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"\"\"\n7\n0 0\n1 1\n0 2\n8\n\"\"\", \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"\"\"\n10\n0 0\n1 1\n0 2\n8\n\"\"\", \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"\"\"\n5\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n2.0 2.0\n1.0 4.0\n0.0 0.0\n\"\"\", \"\"\"\n4\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n4\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n1\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.25 0.75\n\"\"\", \"\"\"\n1\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n1\n0 0\n1 1\n0 2\n4\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.5 1.5\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.5 1.5\n\"\"\", \"\"\"\n0.75 0.75\n0.25 0.25\n0.75 0.25\n\"\"\", \"\"\"\n0.75 0.75\n0.25 0.25\n0.75 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.25\n0.25 0.75\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.25\n0.75 0.75\n\"\"\", \"\"\"\n0.75 0.75\n0.25 0.25\n0.75 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.75 0.75\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.75 0.75\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.75 0.75\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0.75\n0.5 0.5\n0.25 0.25\n\"\"\", \"\"\"\n0.5 0.5\n1.5 1.5\n0.25 0.25\n\"\"\", \"\"\"\n0.25 0.25\n0.75 0.75\n0.5 0.5\n\"\"\", \"\"\"\n0.75 0."
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0 4.0'\nprint('Solution: ', solution(input()))\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.0 0.0\\n0.0 1.0\\n0.0 2.0\\n'\nassert solution('2') == '0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n'\nassert solution('3') == '0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n2.0 2.0\\n0.0 4.0\\n'\nassert solution('4') == '0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n2.0 2.0\\n0.0 4.0\\n3.0 3.0\\n0.0 4.0\\n'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 0\\n1 1\\n0 2') == '0.0 0.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1', \"Wrong\""
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"2\") == 1\nassert solution(\"10\") == 2\nassert solution(\"10\") == 2\nassert solution(\"100\") == 4\n\"\"\""
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '3'\nassert solution('100') == '3'\nassert solution('1000') == '4'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('9') == '10'\nassert solution('100') == '10'\nassert solution('1000') == '27'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('5\\n') == '3\\n'"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"20\") == \"5\"\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\n\n-----Explanation-----\n\nTest Case 1:\n    1: 1\n    2: 1\n    3: 1\n    4: 2\n    5: 2\n    6: 2\n    7: 3\n    8: 3\n    9: 3\n    10: 4\n    11: 4\n    12: 4\n    13: 5\n    14: 5\n    15: 5\n    16: 6\n    17: 6\n    18: 6\n    19: 7\n    20: 7\n    21: 7\n    22: 8\n    23: 8\n    24: 8\n    25: 9\n    26: 9\n    27: 9\n    28: 10\n    29: 10\n    30: 10\n    31: 11\n    32: 11\n    33: 11\n    34: 12\n    35: 12\n    36: 12\n    37: 13\n    38: 13\n    39: 13\n    40: 14\n    41: 14\n    42: 14\n    43: 15\n    44: 15\n    45: 15\n    46: 16\n    47: 16\n    48: 16\n    49: 17\n    50: 17\n    51: 17\n    52: 18\n    53: 18\n    54: 18\n    55: 19\n    56: 19\n    57: 19\n    58: 20\n    59: 20\n    60: 20\n    61: 21\n    62: 21\n    63: 21\n    64: 22\n    65: 22\n    66: 22\n    67: 23\n    68: 23\n    69: 23\n    70: 24\n    71: 24\n    72: 24\n    73: 25\n    74: 25\n    75: 25\n    76: 26\n    77: 26\n    78: 26\n    79: 27\n    80: 27\n    81: 27\n    82: 28\n    83: 28\n    84: 28\n    85: 29\n    86: 29\n    87: 29\n    88: 30\n    89: 30\n    90: 30\n    91: 31\n    92: 31\n    93: 31\n    94: 32\n    95: 32\n    96: 32\n    97: 33\n    98: 33\n    99: 33\n    100: 34\n    101: 34\n    102: 34\n    103: 35\n    104: 35\n    105: 35\n    106: 36\n    107: 36\n    108: 36\n    109: 37\n    110: 37\n    111: 37\n    112: 38\n    113: 38\n    114: 38\n    115: 39\n    116: 39\n    117: 39\n    118: 40\n    119: 40\n    120: 40\n    121: 41\n    122: 41\n    123: 41\n    124: 42\n    125: 42\n    126: 42\n    127: 43\n    128: 43\n    129: 43\n    130: 44\n    131: 44\n    132: 44\n    133: 45\n    134: 45\n    135: 45\n    136: 46\n    137: 46\n    138: 46\n    139: 47\n    140: 47\n    141: 47\n    142: 48\n    143: 48\n    144: 48\n    145: 49\n    146: 49\n    147: 49\n    148: 50\n    149: 50\n    150: 50\n    151: 51\n    152: 51\n    153: 51\n    154: 52\n    155: 52\n    156: 52\n    157: 53\n    158: 53\n    159: 53\n    160: 54\n    161: 54\n    162: 54\n    163: 55\n    164: 55\n    165: 55\n    166: 56\n    167: 56\n    168: 56\n    169: 57\n    170: 57\n    171: 57\n    172: 58\n    173: 58\n    174: 58\n    175: 59\n    176: 59\n    177: 59\n    178: 60\n    179: 60\n    180: 60\n    181: 61\n    182: 61\n    183: 61\n    184: 62\n    185: 62\n    186: 62\n    187: 63\n    188: 63\n    189: 63\n    190: 64\n    191: 64\n    192: 64\n    193: 65\n    194: 65\n    195: 65\n    196: 66\n    197: 66\n    198: 66\n    199: 67\n    200: 67\n    201: 67\n    202: 68\n    203: 68\n    204: 68\n    205: 69\n    206: 69\n    207: 69\n    208: 70\n    209: 70\n    210: 70\n    211: 71\n    212: 71\n    213: 71\n    214: 72\n    215: 72\n    216: 72\n    217: 73\n    218: 73\n    219: 73\n    220: 74\n    221: 74\n    222: 74\n    223: 75\n    224: 75\n    225: 75\n    226: 76\n    227: 76\n    228: 76\n    229: 77\n    230: 77\n    231: 77\n    232: 78\n    233: 78\n    234: 78\n    235: 79\n    236: 79\n    237: 79\n    238: 80\n    239: 80\n    240: 80\n    241: 81\n    242: 81\n    243: 81\n    244: 82\n    245: 82\n    246: 82\n    247: 83\n    248: 83\n    249: 83\n    250: 84\n    251: 84\n    252: 84\n    253: 85\n    254: 85\n    255: 85\n    256: 86\n    257: 86\n    258: 86\n    259: 87\n    260: 87\n    261: 87\n    262: 88\n    263: 88\n    264: 88\n    265: 89\n    266: 89\n    267: 89\n    268: 90\n    269: 90\n    270: 90\n    271: 91\n    272: 91\n    273: 91\n    274: 92\n    275: 92\n    276: 92\n    277: 93\n    278: 93\n    279: 93\n    280: 94\n    281: 94\n    282: 94\n    283: 95\n    284: 95\n    285: 95\n    286: 96\n    287: 96\n    288: 96\n    289: 97\n    290: 97\n    291: 97\n    292: 98\n    293: 98\n    294: 98\n    295: 99\n    296: 99\n    297: 99\n    298: 100\n    299: 100\n    300: 100\n    301: 101\n    302: 101\n    303: 101\n    304: 102\n    305: 102\n    306: 102\n    307: 103\n    308: 103\n    309: 103\n    310: 104\n    311: 104\n    312: 104\n    313: 105\n    314: 105\n    315: 105\n    316: 106\n    317: 106\n    318: 106\n    319: 107\n    320: 107\n    321: 107\n    322: 108\n    323: 108\n    324: 108\n    325: 109\n    326: 109\n    327: 109\n    328: 110\n    329: 110\n    330: 110\n    331: 111\n    332: 111\n    333: 111\n    334: 112\n    335: 112\n    336: 112\n    337: 113\n    338: 113\n    339: 113\n    340: 114\n    341: 114\n    342: 114\n    343: 115\n    344: 115\n    345: 115\n    346: 116\n    347: 116\n    348: 116\n    349: 117\n    350: 117\n    351: 117\n    352: 118\n    353: 118\n    354: 118\n    355: 119\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 3\\n\") == \"4\"\nassert solution(\"3 2\\n\") == \"3\"\nassert solution(\"4 1\\n\") == \"4\"\nassert solution(\"5 5\\n\") == \"6\"\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '34'\nassert solution('1 2') == '-1'\nassert solution('2 3') == '3'\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')\n\nfrom utils import *"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 1\\n12 16\") == \"34\"\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n12 16\n''') == '34'"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '2'\nassert solution('10 10') == '10'\n'''\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '2'\nassert solution('5 1') == '5'\nassert solution('5 2') == '4'\n\nInput:\n7 5\n5 5 5 5 5\nOutput:\n13"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 10\n4 8\n4 3\n4 2\n3 1\n2 0\n''') == '34', solution.__doc__\n\nSample Input:\n12 12\n2 2\nSample Output:\n16"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '34'\n\nstdin = '''8 10\n20 30\n20 40\n30 50\n10 60\n30 40\n10 50\n30 40\n20 40\n10 50\n10 50\n30 50\n10 60\n'''\nassert solution(stdin) == '55'\n\nstdin = '''\n5\n1 1\n1 2\n2 2\n3 3\n5 5\n'''\nassert solution(stdin) == '0'\n\nstdin = '''\n1\n10\n20\n30\n40\n50\n60\n70\n80\n90\n100\n110\n120\n130\n140\n150\n160\n170\n180\n190\n200\n210\n220\n230\n240\n250\n260\n270\n280\n290\n300\n310\n320\n330\n340\n350\n360\n370\n380\n390\n400\n410\n420\n430\n440\n450\n460\n470\n480\n490\n500\n510\n520\n530\n540\n550\n560\n570\n580\n590\n600\n610\n620\n630\n640\n650\n660\n670\n680\n690\n700\n710\n720\n730\n740\n750\n760\n780\n790\n800\n810\n820\n830\n840\n850\n860\n870\n880\n900\n910\n920\n930\n940\n950\n960\n970\n980\n990\n1000\n1020\n1030\n1040\n1050\n1060\n1070\n1080\n1100\n1120\n1130\n1140\n1150\n1160\n1170\n1180\n1200\n'''"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '4'\nassert solution('7 9') == '16'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '3'\nassert solution('''\n1\n3\n''') == '2'\nassert solution('''\n5\n1 2 2 1 1\n''') == '2'\n''')"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n1 2 3 1') == '3'\nassert solution('5\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n''') == '3'\nprint('PASSED')\n\nassert solution('''5\n1 2 3 1 2\n''') == '3'\nprint('PASSED')\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 1\n5\n1 2 3 1\n1 2 3\n1 2\n1''') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n1 2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2 3\\n1 2 1\") == \"3\"\nassert solution(\"5\\n1 2 3 2 3\\n2 3 1 2\") == \"2\"\nprint(solution(input()))\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3 1\n''') == '3'\n\nassert solution('''\n4\n1 2 3 1\n''') == '4'\n\nassert solution('''\n4\n1 2 3 2\n''') == '2'\n\nassert solution('''\n6\n1 2 3 2 1 3\n''') == '2'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('4\\n1 2 3 1\\n') == '3'"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.2') == '1089'\nassert solution('1.2.3') == '1089'\nassert solution('1.2.3.4') == '1089'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1088'\nassert solution('1') == '1088'\nassert solution('0.1') == '1088'\nassert solution('-1') == '-1088'\nassert solution('1.1') == '-1088'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0\n0\n1\n''') == '1088'\nprint(solution('''0\n0\n1\n'''))\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.0') == '1088'\nassert solution('12.000') == '1288'\nassert solution('1.1234567891') == '1128'\nassert solution('12.35') == '1248'\nassert solution('12.359') == '1248'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.0') == '1088'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1088\"\nassert solution(\"1.0\") == \"1088\"\nassert solution(\"2.5\") == \"1274\"\nassert solution(\"4.99\") == \"4988\"\nassert solution(\"54.99\") == \"5499\"\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.0') == '1088'\nassert solution('2.0') == '2x'\nassert solution('2.00') == '20x'\nassert solution('3.000') == '30x'\nassert solution('4.0') == '40x'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.0\") == \"1088\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.0') == '1088'\nassert solution('10.0') == '1088'\nassert solution('2.5') == '3288'\nassert solution('1.5') == '3187'\nassert solution('0.3') == '63'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.001') == '1'\nassert solution('1.999') == '1'\nassert solution('1.9999') == '1'\nassert solution('2.0') == '2000'"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\") == \"25.000000000\"\nassert solution(\"0 1 0\") == \"25.000000000\"\nassert solution(\"0 0 1\") == \"25.000000000\"\nassert solution(\"0 0 0\") == \"25.000000000\"\nassert solution(\"0 0 1 1 1\") == \"27.000000000\"\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '25.000000000'\nassert solution('4 2') == '25.000000000'\nassert solution('4') == '25.000000000'\nassert solution('4 100') == '25.000000000'\nassert solution('4 200') == '25.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '25.000000000'"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('0 2') == '27.000000000'\nassert solution('0 5') == '29.000000000'\nassert solution('3 4') == '12.000000000'\nassert solution('2 4') == '12.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('1 2 3') == '35.000000000'\nassert solution('2 4') == '35.000000000'\nassert solution('2 2') == '20.000000000'\nassert solution('2 2 2') == '20.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 4\n5 5 1 1\n10 10 3 3\n6 7 9 3\n''') == '25.000000000'\nassert solution('''\n0 4\n5 5 1 1\n10 10 3 3\n6 7 9 3\n11 11 7 1\n''') == '32.00000000'\nassert solution('''\n0 4\n5 5 1 1\n10 10 3 3\n6 7 9 3\n11 11 7 1\n1 2 2 2\n''') == '30.00000000'\nassert solution('''\n0 4\n5 5 1 1\n10 10 3 3\n6 7 9 3\n11 11 7 1\n1 2 2 2\n3 3 3 3\n''') == '29.75000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\n\"\"\"\n\nfrom math import pi, sqrt"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 2 0') == '25.000000000'\nassert solution('2 1 1 0') == '25.000000000'\nassert solution('3 1 1 1') == '25.000000000'\nassert solution('4 1 1 1 1') == '25.000000000'\nassert solution('5 0 0 0 0') == '40.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\nprint(solution(input()))\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 10 4\n4 5\n3 6\n8 7\n5 2\n\"\"\") == \"DA\"\n\nassert solution(\"\"\"\n1 100\n30\n\"\"\") == \"DA\"\n\nassert solution(\"\"\"\n1 100\n31\n\"\"\") == \"NE\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 4\") == \"DA\"\nassert solution(\"5 5 5\") == \"DA\"\nassert solution(\"2 2 2\") == \"NE\"\nassert solution(\"2 2 2 1\") == \"NE\"\nassert solution(\"4 4 4\") == \"DA\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7') == 'DA\\nDA\\nDA\\nNE\\nNE\\n'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 4') == \"DA\"\nassert solution('5 5 5') == \"NE\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 3 4\n3\n4\n5\n6\n7\"\"\") == \"DA\"\nassert solution(\"\"\"5 3 4\n1\n4\n5\n6\n7\"\"\") == \"DA\"\nassert solution(\"\"\"5 3 4\n1\n3\n4\n5\n6\n7\"\"\") == \"DA\"\nassert solution(\"\"\"5 3 4\n1\n4\n5\n6\n7\n9\"\"\") == \"NE\"\nassert solution(\"\"\"5 3 4\n1\n4\n5\n6\n7\n8\"\"\") == \"NE\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'DA'\nassert solution('2 2') == 'DA'\nassert solution('2 1') == 'NE'\nassert solution('5') == 'NE'\nassert solution('2') == 'NE'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''4 1 1\n1\n3\n1\n''') == 'DA'\nassert solution('''4 1 1\n2\n2\n2\n''') == 'NE'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"DA\"\nassert solution(\"2\") == \"DA\"\nassert solution(\"3\") == \"NE\"\nassert solution(\"4\") == \"DA\"\nassert solution(\"5\") == \"DA\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n4\n10\n6\n''') == 'DA'\n\nassert solution('''\n3\n4\n7\n''') == 'DA'\n\nassert solution('''\n3\n4\n9\n''') == 'NE'\n\nassert solution('''\n3\n2\n4\n''') == 'NE'\n\nassert solution('''\n3\n4\n12\n''') == 'NE'"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'DA'\nassert solution('2') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'DA'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n2\n7 35\n''') == '8'\n'''\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 0, 0, 7, 42]) == '6'\nassert solution([3, 0, 0, 5, 42]) == '8'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 0, 0, 7, 42]) == 6\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0') == '6'\nassert solution('2\\n0 0') == '6'\nassert solution('3\\n0 0') == '6'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\nassert solution([\n    \"0 0\",\n    \"7 42\"\n]) == \"6\"\nassert solution([\n    \"1\",\n    \"1\"\n]) == \"1\"\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n4\n0 0\n4 5\n2 5\n3 6\n2 4\n1 5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5\n0 0\n6 5\n6 2\n2 6\n2 4\n1 5\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 0\\n7 42') == '6'\nassert solution('2\\n0 0\\n7 42') == '6'\nassert solution('3\\n0 0\\n7 42') == '6'\nassert solution('4\\n0 0\\n7 42') == '6'\nassert solution('5\\n0 0\\n7 42') == '6'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '6'\nassert solution('1') == '6'\n'''\n\nstdin = input()\nn = int(stdin)\nph_list = []\nfor _ in range(n):\n    ph_list.append(tuple(map(int, input().split())))\nph_list.sort(key = lambda x: (x[1], x[0]))\nprint(ph_list[-1][1] - ph_list[0][0])"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3->5\") == \"correct\"\nassert solution(\"3\\n4->5\\n3->5\") == \"correct\"\nassert solution(\"2\\n4->5\\n3->5\") == \"correct\"\nassert solution(\"1\\n1->5\\n5->5\") == \"correct\"\nassert solution(\"1\\n1->5\\n3->5\") == \"correct\"\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'correct', 'Solution is not correct'\nassert solution('1') == 'correct', 'Solution is not correct'\nassert solution('3') == 'correct', 'Solution is not correct'\nassert solution('3') == 'correct', 'Solution is not correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nALICE\\n->\\nBOB\\n->\\nCARL') == \"correct\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 -> 4\n1 -> 5\n4 -> 7\n4 -> 5\n7 -> 8\n\"\"\") == \"correct\"\nassert solution(\"\"\"\n4 -> 5\n3 -> 2\n2 -> 1\n1 -> 4\n4 -> 5\n4 -> 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 -> 2\n1 -> 3\n3 -> 4\n2 -> 3\n3 -> 2\n3 -> 1\n2 -> 3\n2 -> 1\n2 -> 5\n2 -> 4\n2 -> 3\n4 -> 5\n3 -> 6\n3 -> 1\n3 -> 7\n3 -> 5\n5 -> 6\n5 -> 4\n5 -> 7\n5 -> 2\n5 -> 3\n6 -> 5\n6 -> 4\n6 -> 7\n6 -> 3\n7 -> 5\n7 -> 2\n7 -> 6\n7 -> 3\n7 -> 4\n4 -> 2\n4 -> 5\n4 -> 7\n4 -> 6\n4 -> 3\n4 -> 7\n3 -> 1\n3 -> 2\n4 -> 6\n4 -> 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n-> 4\n4 -> 5\n4 -> 7\n-> 8\n\"\"\") == \"correct\"\nassert solution(\"\"\"\n4 -> 5\n5 -> 6\n5 -> 4\n4 -> 7\n5 -> 6\n6 -> 4\n4 -> 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"correct\"\nassert solution(\"3\") == \"correct\"\nassert solution(\"1\") == \"correct\"\nassert solution(\"10\") == \"correct\"\nassert solution(\"100\") == \"correct\"\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('5\\n-> ALICE\\n-> BOB\\nALICE -> CARL') == '3'"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    -> 1\n    -> 2\n    -> 3\n    -> 4\n    -> 5\n    -> 6\n    -> 7\n    -> 8\n    -> 9\n    -> 10\n    -> 11\n    -> 12\n    -> 13\n    -> 14\n    -> 15\n    -> 16\n    -> 17\n    -> 18\n    -> 19\n    -> 20\n    -> 21\n    -> 22\n    -> 23\n    -> 24\n    -> 25\n    -> 26\n    -> 27\n    -> 28\n    -> 29\n    -> 30\n    -> 31\n    -> 32\n    -> 33\n    -> 34\n    -> 35\n    -> 36\n    -> 37\n    -> 38\n    -> 39\n    -> 40\n    -> 41\n    -> 42\n    -> 43\n    -> 44\n    -> 45\n    -> 46\n    -> 47\n    -> 48\n    -> 49\n    -> 50\n    -> 51\n    -> 52\n    -> 53\n    -> 54\n    -> 55\n    -> 56\n    -> 57\n    -> 58\n    -> 59\n    -> 60\n    -> 61\n    -> 62\n    -> 63\n    -> 64\n    -> 65\n    -> 66\n    -> 67\n    -> 68\n    -> 69\n    -> 70\n    -> 71\n    -> 72\n    -> 73\n    -> 74\n    -> 75\n    -> 76\n    -> 77\n    -> 78\n    -> 79\n    -> 80\n    -> 81\n    -> 82\n    -> 83\n    -> 84\n    -> 85\n    -> 86\n    -> 87\n    -> 88\n    -> 89\n    -> 90\n    -> 91\n    -> 92\n    -> 93\n    -> 94\n    -> 95\n    -> 96\n    -> 97\n    -> 98\n    -> 99\n    -> 100\n    -> 101\n    -> 102\n    -> 103\n    -> 104\n    -> 105\n    -> 106\n    -> 107\n    -> 108\n    -> 109\n    -> 110\n    -> 111\n    -> 112\n    -> 113\n    -> 114\n    -> 115\n    -> 116\n    -> 117\n    -> 118\n    -> 119\n    -> 120\n    -> 121\n    -> 122\n    -> 123\n    -> 124\n    -> 125\n    -> 126\n    -> 127\n    -> 128\n    -> 129\n    -> 130\n    -> 131\n    -> 132\n    -> 133\n    -> 134\n    -> 135\n    -> 136\n    -> 137\n    -> 138\n    -> 139\n    -> 140\n    -> 141\n    -> 142\n    -> 143\n    -> 144\n    -> 145\n    -> 146\n    -> 147\n    -> 148\n    -> 149\n    -> 150\n    -> 151\n    -> 152\n    -> 153\n    -> 154\n    -> 155\n    -> 156\n    -> 157\n    -> 158\n    -> 159\n    -> 160\n    -> 161\n    -> 162\n    -> 163\n    -> 164\n    -> 165\n    -> 166\n    -> 167\n    -> 168\n    -> 169\n    -> 170\n    -> 171\n    -> 172\n    -> 173\n    -> 174\n    -> 175\n    -> 176\n    -> 177\n    -> 178\n    -> 179\n    -> 180\n    -> 181\n    -> 182\n    -> 183\n    -> 184\n    -> 185\n    -> 186\n    -> 187\n    -> 188\n    -> 189\n    -> 190\n    -> 191\n    -> 192\n    -> 193\n    -> 194\n    -> 195\n    -> 196\n    -> 197\n    -> 198\n    -> 199\n    -> 200\n    -> 201\n    -> 202\n    -> 203\n    -> 204\n    -> 205\n    -> 206\n    -> 207\n    -> 208\n    -> 209\n    -> 210\n    -> 211\n    -> 212\n    -> 213\n    -> 214\n    -> 215\n    -> 216\n    -> 217\n    -> 218\n    -> 219\n    -> 220\n    -> 221\n    -> 222\n    -> 223\n    -> 224\n    -> 225\n    -> 226\n    -> 227\n    -> 228\n    -> 229\n    -> 230\n    -> 231\n    -> 232\n    -> 233\n    -> 234\n    -> 235\n    -> 236\n    -> 237\n    -> 238\n    -> 239\n    -> 240\n    -> 241\n    -> 242\n    -> 243\n    -> 244\n    -> 245\n    -> 246\n    -> 247\n    -> 248\n    -> 249\n    -> 250\n    -> 251\n    -> 252\n    -> 253\n    -> 254\n    -> 255\n    -> 256\n    -> 257\n    -> 258\n    -> 259\n    -> 260\n    -> 261\n    -> 262\n    -> 263\n    -> 264\n    -> 265\n    -> 266\n    -> 267\n    -> 268\n    -> 269\n    -> 270\n    -> 271\n    -> 272\n    -> 273\n    -> 274\n    -> 275\n    -> 276\n    -> 277\n    -> 278\n    -> 279\n    -> 280\n    -> 281\n    -> 282\n    -> 283\n    -> 284\n    -> 285\n    -> 286\n    -> 287\n    -> 288\n    -> 289\n    -> 290\n    -> 291\n    -> 292\n    -> 293\n    -> 294\n    -> 295\n    -> 296\n    -> 297\n    -> 298\n    -> 299\n    -> 300\n    -> 301\n    -> 302\n    -> 303\n    -> 304\n    -> 305\n    -> 306\n    -> 307\n    -> 308\n    -> 309\n    -> 310\n    -> 311\n    -> 312\n    -> 313\n    -> 314\n    -> 315\n    -> 316\n    -> 317\n    -> 318\n    -> 319\n    -> 320\n    -> 321\n    -> 322\n    -> 323\n    -> 324\n    -> 325\n    -> 326\n    -> 327\n    -> 328\n    -> 329\n    -> 330\n    -> 331\n    -> 332\n    -> 333\n    -> 334\n    -> 335\n    -> 336\n    -> 337\n    -> 338\n    -> 339\n    -> 340\n    -> 341\n    -> 342\n    -> 343\n    -> 344\n    -> 345\n    -> 346\n    -> 347\n    -> 348\n    -> 349\n    -> 350\n    -> 351\n    -> 352\n    -> 353\n    -> 354\n    -> 355\n    -> 356\n    -> 357\n    -> 358\n    -> 359\n    -> 360\n    -> 361\n    -> 362\n    -> 363\n    -> 364\n    -> 365\n    -> 366\n    -> 367\n    -> 368\n    -> 369\n    -> 370\n    -> 371\n    -> 372\n    -> 373\n    -> 374\n    -> 375\n    -> 376\n    -> 377\n    -> 378\n    -> 379\n    -> 380\n    -> 381\n    -> 382\n    -> 383\n    -> 384\n    -> 385\n    -> 386\n    -> 387\n    -> 388\n    -> 389\n    -> 390\n    -> 391\n    -> 392\n    -> 393\n    -> 394\n    -> 395\n    -> 396\n    -> 397\n    -> 398\n    -> 399\n    -> 400\n    -> 401\n    ->"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('2\\n-> ALICE\\n-> BOB\\n-> CARL\\n-> FRED\\nALICE FRED -> BOB') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\n-> FRED\\n-> BOB\\n-> FRED\\n-> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\n-> FRED\\n-> ALICE\\n-> CARL\\n-> FRED') == 'correct'\nassert solution('1\\n-> ALICE\\n-> BOB\\n-> FRED\\n-> BOB\\n-> CARL\\n-> ALICE') == 'correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n-> 2\n-> 1\n2 -> 3\n''') == 'correct'\nassert solution('''1\n-> 1\n-> 1\n3 -> 2\n''') == '1'\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin') == 'Connie Froggatt'\nassert solution('Marti Graham') == 'Connie Froggatt'\nassert solution('Connie Froggatt') == 'Connie Froggatt'\nassert solution('Joseph Ivers') == 'Connie Froggatt'\nassert solution('Connie Froggatt') == 'Connie Froggatt'\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Connie Froggatt'\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Penny Franklin') == 'Connie Froggatt'\nassert solution('Marti Graham') == 'Connie Froggatt'\nassert solution('Connie Froggatt') == 'Penny Franklin'\nassert solution('Joseph Ivers') == 'Barbara Skinner'\nassert solution('Connie Froggatt') == 'Connie Froggatt'"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Connie Froggatt'\nassert solution(\n    '''Connie Froggatt\nBarbara Skinner\n''') == 'Runoff!'\nassert solution(\n    '''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Connie Froggatt'\n''')"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Connie Froggatt'\nassert solution('Bob Donald\\nSteve Rogers\\nFreddie Mercury\\nBruce Banner\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nFreddie Mercury\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nSteve Rogers\\nSteve Rogers\\n') == 'Bob Donald'\nassert solution('Bob Donald\\nSteve Rogers\\nFreddie Mercury\\nBruce Banner\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nFreddie Mercury\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nBob Donald\\nSteve Rogers\\nSteve Rogers\\nSteve Rogers\\nSteve Rogers\\nSteve Rogers\\n') == 'Steve Rogers'\nassert solution('Charlie Chaplin\\nHendrix Allard\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nCharlie Chaplin\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nCharlie Chaplin\\nRicky Bobby\\nHendrix Allard\\nCharlie Chaplin\\nRicky Bobby\\nHendrix Allard\\nRicky Bobby\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nCharlie Chaplin\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nCharlie Chaplin\\nGroucho Marx\\nGroucho Marx\\nRicky Bobby\\nHendrix Allard\\nGroucho Marx\\nCharlie Chaplin\\nHendrix Allard\\nGroucho Marx\\nRicky Bobby\\nGroucho Marx\\nGroucho Marx\\n') == 'Groucho Marx'\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Penny Franklin') == 'Penny Franklin'\nassert solution('Marti Graham') == 'Marti Graham'\nassert solution('Connie Froggatt') == 'Connie Froggatt'\nassert solution('Joseph Ivers') == 'Joseph Ivers'\nassert solution('Connie Froggatt') == 'Runoff!''\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''Michele Raffo\nFerrari\nTarantino\nPuglia\nMichele Raffo\nFerrari\nTarantino\nPuglia\nMichele Raffo\n***''') == 'Michele Raffo'\n\n''') == 'Michele Raffo'\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Barbara Skinner'"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == \"Connie Froggatt\"\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == \"Connie Froggatt\"\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == \"Runoff!\""
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\nassert solution('100') == '1'\nassert solution('10000') == '1'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nLuke-on-a-treasure Basic Jawaese\nLuke-on-the-counter-Strike-One Basic Jawaese\nGuildmaster Basic Jawaese\nR2D2-on-a-treasure Basic Jawaese\nGull-on-a-treasure Basic Jawaese\nJabba-the-Hutt Huttese\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\nChewbacca Ghoul\nBib-Fortuna Ghoul Basic\nLuke Binary\nGrakchawwaa Gibbo\nR2D2 Binary\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nGuildmaster Basic Jawaese\nGull-on-a-treasure Basic Jawaese\nBib-Fortuna Ghoul Basic\nChewbacca Ghoul\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\nLuke Basic Jawaese\nGull-on-a-treasure Basic Jawaese\nR2D2-on-a-treasure Basic Jawaese\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\nJabba the Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\nJabba the Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\n4\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '3'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '1'\n'''\n\nfrom typing import List"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"10\\nBib-Fortuna Huttese Basic Jawaese Binary\\nLuke Basic Jawaese Binary\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\\nLuke Basic Jawaese Basic\") == \"3\"\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '2'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n\nassert solution('''\n7\nGrekchwa Kudryavukale Basic\nLuke Basic Jawaese Binary\nSamuel Basic Samui Jawaese\nAlfonso Basic AlFon Jawaese\nHan Solo Basic Han Solo Jawaese\nR2D2 Binary Basic\nGimli Basic Gimli Jawaese\nDarth Vader Basic Darth Vader Jawaese\nBartolo Basic Bartolo Jawaese\nFrodo Basic Frodo Jawaese\nMickey Basic Mickey Jawaese\n\nSample Output:\n2\n''') == '2'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('3 1000 2 3') == '900'\nassert solution('2 1000') =='stay home'\nassert solution('3 200 2 3') == '900'\nassert solution('3 1000 2 3') == '900'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"200\") == \"stay home\"\nassert solution(\"300\") == \"stay home\"\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 2\n2\n''') =='stay home'\nassert solution('''\n3 200 2 3\n300\n27 3 20\nSample Output:\n900\n''') =='stay home'\n'''\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"4 20 3 1\") == \"0\"\nassert solution(\"3 100 2 2\") == \"100\"\nassert solution(\"4 100 2 2\") == \"100\"\nassert solution(\"2 2 1 3\") == \"1\"\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('10 3 5 1') == '8'\nassert solution('2 4 5') == '10'\nassert solution('5 2 2') == '0'\nassert solution('0') =='stay home'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1000 2 3') == '900'\nassert solution('3 1000 2 3') == '900'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1000 2 3') == '900', \"Should be 900\"\nassert solution('3 100000 2 3') == '900', \"Should be 900\"\nassert solution('5 100000 2 3') == '900', \"Should be 900\"\nassert solution('5 100000 2 2') == '900', \"Should be 900\"\nassert solution('5 100000 1 3') == '900', \"Should be 900\"\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"stay home\"\nassert solution(\"1 2 3\") == \"stay home\"\nassert solution(\"3 1000 2 3\") == \"1200\"\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"3 1 2 3\") == \"1000\"\nassert solution(\"3 1000 2 3\") == \"1000\"\nassert solution(\"3 1 2 3\") == \"1000\"\nassert solution(\"5 10 5 3\") == \"100\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '10\\nC D F D C D F F F C'\n    ) == 'A# C D# F'\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n12\nC D F D C D F F F C\nSample Output:\nnone\n''') == 'A# C D# F'\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n0\nC\nD\nD\nD\nA\n\"\"\") == \"A# C D# F\"\nassert solution(r\"\"\"\n1\nC\n\"\"\") == \"none\"\nassert solution(r\"\"\"\n4\nD D E D D D E D D D D E\n\"\"\") == \"A# E G F# G A\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nC D F D C D F F F C\") == \"A# C D# F\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"none\"\nassert solution(input(\"A B C D F E G\")) == \"none\"\nassert solution(input(\"A B C D F E G# A\")) == \"none\"\n\"\"\""
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\nC D F D C D F F F C\"\n) == \"A# C D# F\"\nassert solution(\n    \"2\\nG A D D C C D F F D\"\n) == \"G A D F\"\nassert solution(\n    \"2\\nD C D D D D D D D D\"\n) == \"D C D D D D D D D\"\nassert solution(\n    \"2\\nA A A A D D D D D D\"\n) == \"A# A D# D D D D D\"\nassert solution(\n    \"2\\nE G G G G G G G G G\"\n) == \"E G G G G G G G G G\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nC D E F\nD E F G\nE F G\n''') == 'none'\nassert solution('''13\nA C D E F G A C D E F G A C D E F G\nB C D E F G B C D E F G\nC D E F G C D E F G C D E F G\nD E F G D E F G D E F G D E F G\nE F G E F G E F G E F G E F G\nF G F E F G F G F E F G F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\n''') == 'A# C D# E F'\n\nassert solution('''20\nA C D E F G A C D E F G A C D E F G\nB C D E F G B C D E F G\nC D E F G C D E F G C D E F G\nD E F G D E F G D E F G D E F G\nE F G E F G E F G E F G E F G\nF G F E F G F G F E F G F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\nG F E F G G F E F G G F E F G\n''') == 'A# C D# E F G'\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nC D F D\") == \"A# C D# F\"\nassert solution(\"3\\nC D F D C D\") == \"A# D# E F\"\nassert solution(\"3\\nA C D F D C D\") == \"A# D# E F\"\n\nassert solution(\"4\\nA B C D E\") == \"A# C D# F\"\nassert solution(\"4\\nA C D F E\") == \"A# D# F\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'A# C D# F'\nassert solution('2') == 'A C# D# F'\nassert solution('3') == 'A C# D# F'\nassert solution('4') == 'A C D# F'\nassert solution('5') == 'A C D E F'\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''C D F D C D F F C\n''') == 'A# C D# F'\nassert solution('''E E G F D D D D D D E\n''') == 'none'\nassert solution('''D D D D E F E E D D D D D D\n
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va', 'Wrong result'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska', 'Wrong result'"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n\nmy_list = [\"hello\", \"hello\", \"hello\"]\nprint(my_list)\nmy_list.sort()\nprint(my_list)\n\nmy_list2 = [\"hello\", \"hello\", \"hello\"]\nprint(my_list2)\nmy_list2.sort()\nprint(my_list2)"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('baa ja puuk eht ae osa') == 'haer talar vi rikssvenska'\nassert solution('bla bla bla bla bla bla') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va ei reikkaar') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va reikkaar ei') == 'haer talar vi rikssvenska'\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''dae ae ju traeligt va''') == 'dae ae ju traeligt va'\nassert solution('''dae ae ju traeligt va''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va''') == 'haer talar vi rikssvenska'\n''')"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''dae ae ju traeligt va\nhaer talar vi rikssvenska''') == 'haer talar vi rikssvenska'\n\n\"\"\")\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nprint(solution(input()))"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6 arab\u00e4 \u00f6 j\u00e4m\u00e4nyt rikssvenska') == '\u00e4\u00f6 arab\u00e4 \u00f6 j\u00e4m\u00e4nyt rikssvenska'\n\"\"\""
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('har talar vi rikssvenska') == 'haer talar vi rikssvenska'"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\n    \"har du v\u00e4ljare till rikssvenska\") == \"haer talar vi rikssvenska\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\".E..E#\") == \"...#.#\"\nassert solution(\".E.E..\") == \"#.E..\"\nassert solution(\".E.E.#\") == \".E.E.#\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n.###\\n..#.#\") == \"E.E#E\"\nassert solution(\"3 4\\n##.##\\n..##.\\n...##\") == \"E.E#E\"\nassert solution(\"5 5\\n#####\\n#.#.#\\n##.##\\n#.##.\\n#...#\") == \"EEEEE\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\nassert solution('10 10\\n....#.\\n....#.\\n#.....\\n......\\n###...') == 'E..E#E\\n..E.#E\\n#..E..E\\n.E...E\\n###E.#'\nassert solution('5 5\\n.##.\\n#...\\n##.#\\n###.') == 'E.E#E\\n.E.#E\\nE.#E\\n##E#E\\n###E#'\nassert solution('10 10\\n.##.#.\\n#..#.\\n#.#.#\\n##...\\n##.##') == 'E.E#E\\nE#E#E\\nE#.E.E\\n.E.E.E\\n###.E#'\nassert solution('10 10\\n###.#.\\n#..#.\\n#.#.#\\n##...\\n##.##') == 'E.E#E\\nE#E#E\\nE#.E.E\\n.E.E.E\\n###E#E'\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\ne...E\\n##E.E#'\nassert solution('10 10') == 'E...E\\ne...E\\ne...E\\ne...E\\ne...E'\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\n...#.\\n...#.\\n#.....\\n......\\n##...#\\n') == 'E..E#E\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\nassert solution('10 10\\n........\\n....#..\\n..#....\\n#.#...#\\n...#....\\n....#..\\n#.##..#\\n..#....\\n#..#...\\n.....#.\\n') == 'E..E#E\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n\nSample Input:\n4 4\n....#.\n...#..#\n...#..#\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\n\nInput:\n5 10\n.................\n.E.E.E.E.E.E.E.E\n.#.#.#.#.E.#.E.#\n.#.##.E.E.E.E.#.\n...#.E.E.E.#.E.E.\n...#.E.#E.E.#.E.E\nE.E.E.E.E.#.E.E.E\n.E.E.E.E.E.#.E.E.\nE.E.E.E.E.#.E.E.E\n.E.E.E.E.E.#.E.E.\n..E.E.E.E.E.#.E.E.\n..E.E.#E.E.E.E.E.#\nE.E.E.E.E.E.E.E.E.\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\ne...E\\n##E.E#\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 6 8 5 2 10 3\n''') == '12 10 3 8 4 2'\nassert solution('''\n10 6 8 5 2 12 3\n''') == '12 10 3 8 4 2'\nassert solution('''\n25 5 4 10 3 2 1\n''') == '25 10 3 2 4 1'\nassert solution('''\n14 8 2 6 5 10 3\n''') == '14 10 2 6 3 8'\nassert solution('''\n14 8 2 1 6 5 10 3\n''') == '14 8 2 6 5 10 3'\n'''"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"4 3 2 1 10 8 2 9\") == \"3 1 10 4 2 9 8\"\nassert solution(\"1 4 5 2 3 7 8\") == \"5 7 3 1 2 8 4\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nprint(\"Congratulations! All test cases passed\")\n\"\"\"\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == \"12 10 3 8 4 2\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'''\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([12, 8, 2, 4, 10, 3, 25, 14]) == \"12 10 3 8 4 2\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == \"1 2 3 4 5 6 7 8\"\nassert solution([2, 3, 4, 5, 6, 7, 8, 1]) == \"7 6 5 4 3 2 1\"\nassert solution([5, 4, 3, 2, 1]) == \"1 2 3 4 5\"\nassert solution([1, 1, 1, 1, 1, 1, 1, 1]) == \"1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_lines) == '12 10 3 8 4 2'\nprint('solution() finished successfully!')"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12 1 7\n''') == '4', \"normal\"\nassert solution('''\n13 0 6\n''') == '3', \"normal\"\nassert solution('''\n8 0 3\n''') == '4', \"normal\"\nassert solution('''\n13 0 6\n''') == '3', \"normal\"\nassert solution('''\n12 0 6\n''') == '4', \"normal\""
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 6') == '4'\nassert solution('3 4 5') == '7'\nassert solution('5 2 4') == '1'\n\n\"\"\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n\n---Input-------\n5 1 1\n---Output------\n5\n\n--Input--\n2 4 4\n--Output--\n7\n\n--Input--\n8 5 2\n--Output--\n7\n\n--Input--\n3 4 5\n--Output--\n4\n\n\"\"\"\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9 0 3\") == \"4\"\nassert solution(\"2 1 2\") == \"3\"\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 0 3\\n') == \"4\"\nassert solution('100 0 3\\n') == \"10\"\nassert solution('1000 0 3\\n') == \"0\"\nassert solution('-100 0 3\\n') == \"0\"\nassert solution('0 0 3\\n') == \"3\""
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2') == '4'\nassert solution('6 1 1') == '5'\nassert solution('5 1 4') == '4'\nassert solution('5 1 10') == '9'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"4\"\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 2 2') == \"1\"\nassert solution('9 0 3') == \"4\"\nassert solution('9 10 2') == \"10\"\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == '1'\nassert solution('10 5 1') == '1'\nassert solution('2 3 1') == '2'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('2 0 4') == '2'\nassert solution('6 0 6') == '6'\nassert solution('0 0 0') == '0'\nprint('all test cases passed')\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('1010101') == '52'\nprint('Solution passed.')\n\"\"\"\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('001001') == '1010'\nassert solution('001001111') == '17011'\nassert solution('11110000') == '1024'\n\nprint('\"solution\" is not a module, and so cannot be run as part of a larger program.')\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100') == '100'\nassert solution('1101') == '101'\nassert solution('1010101') == '10201'\nassert solution('1010') == '10'\nassert solution('111') == '13'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1010') == '12'\nassert solution('1011') == '13'\nassert solution('0111') == '13'\nassert solution('0110') == '1'\nassert solution('101010') == '10'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1010') == '12'\nassert solution('101') == '11'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('010101011010011') == '1985'\nassert solution('000100011001011') == '2040'\nassert solution('101') == '11'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1010') == '12'\nassert solution('1011') == '13'\n\nimport sys"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '37'\nassert solution('10010001') == '84'\nassert solution('101101') == '32'\n\n---Input---\nInput contains a binary numeral.\n\n---Output---\nOutput in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\nSample Input:\n101101\nSample Output:\n32\n\nSample Input:\n10010001\nSample Output:\n84\n\"\"\"\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\n\nassert solution('2 3\\n.o.\\n.o.') == '1'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\"\")) == \"0\"\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '2'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n.o.\no.o\no..''') == '2'\nassert solution('''10 1\no.o.\n.ooo\no.o.\no.ooo\no.ooo\nooo.\nooo.\nooo.\nooo.\nooo.\n''') == '0'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n.o.\no..\n\n''') == '2'\n\nassert solution('''\n8 3\n.oo.\nooo.\noo.o\noo.o\nooo.\n.ooo\no.o.\noo.o\n\n''') == '2'"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 6\") == \"6\"\n\n----Hints----\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\nprint('\"Solved\"')\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n.o\\no.') == '2'\nassert solution('2 4\\no.o\\no.o') == '2'\nassert solution('10 6\\n.o.o\\no.o.o\\no.o\\no.o\\no.o\\no.o\\no.o\\no.o') == '10'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"0\"\n\n---Input---\n2 4\no...\n...\n\n---Output---\n3\n\n--Explaination--\nThe seating order of the people inside the church has been given before Mirko enters. Mirko is, of course, late for the morning Mass and will sit in an empty space so that he shakes hands with as many people as he can. If there are no empty seats left, Mirko will simply give up on the idea and go to the evening Mass instead. We can assume that nobody enters the church after Mirko.\n\nCalculate the total number of handshakes given during the morning Mass.\n\nThe handshakes in a morning Mass can be given in one of the following ways:\n\n(1) If there are $S$ people in the church, they can both shake hands with each other.\n(2) If there are $S/2$ people in the church, each pair of them can shake hands with each other.\n(3) If there are $S/4$ people in the church, each of them can shake hands with the closest person (if there is any such person).\n(4) If there are $S/8$ people in the church, each of the eight people can shake hands with the closest person (if there is any such person).\n\nThe handshakes can be given in any of the above options.\n\nExample:\nLet $S$ be $4$ and $R$ be $3$. Each of the rows can hold a capacity of $S$ people.\n\nThe initial seating order is as follows:\n\no... o\no... o\no... o\n\nThe people inside the church can shake hands with each other if they are in adjacent rows.\n\nSay that there are $R = 3$ rows and $S = 4$ people in the church, which means that each row can hold a capacity of $S$ people. The seating arrangement is the following:\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\nThe first row of people can shake hands with each other in the next two rows.\n\nLet us see the seating arrangement after the second row:\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\nThe second row of people can shake hands with each other in the next two rows.\n\nLet us see the seating arrangement after the third row:\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\nThe fourth row of people can shake hands with each other in the next two rows.\n\nLet us see the seating arrangement after the fifth row:\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\nLet us see the seating arrangement after the sixth row:\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o\no... o\n\no... o\no... o"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n4 5\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 1\n2 1\n1 1\n1 2\n''') == 'SMECE'\n\nassert solution('''\n4 5\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n\nassert solution('''\n2 3\n1 2\n2 1\n1 2\n1 3\n''') == 'SMECE'\n\nassert solution('''\n6 2\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\"\n\n\"\"\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 3\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 2\n1 2\n1 3\n''') == 'SMECE'\nassert solution('''\n5 3\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 3\n1 3\n''') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\nSMECE\\n'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'LADICA'\nassert solution(input_string='''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution(input_string='''\n10 10\n3 2\n1 2\n1 3\n1 2\n2 4\n1 3\n2 4\n3 5\n1 3\n2 4\n''') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n\"\"\") == \"LADICA\"\nassert solution(\"\"\"\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n\"\"\") == \"LADICA\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n'''\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0\n1\n0\n''') == '1 2'\nassert solution('''\n1\n0\n''') == '1 2'\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n') == '1 2', \"First\"\nassert solution('2\\n1 0\\n') == '1 2', \"Second\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == '1 2'\nassert solution('2\\n1 2') == '1 2'\nassert solution('3\\n1 2 2') == '1 2 2'\nassert solution('4\\n1 2 2 2') == '1 2 2 2'\n\"\"\"\n\nn = int(input())\n\nfor i in range(n - 1):\n    print(i + 1, end = \" \")"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2\""
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == \"1 2\"\nassert solution('3') == \"1 2 3\"\nassert solution('4') == \"1 2 3 4\"\nassert solution('5') == \"1 2 3 4 5\"\nassert solution('6') == \"1 2 3 4 5 6\"\n\nSample Input 2:\n0\n3\nSample Output:\n0 1 2"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 3 2 4\""
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 1\nSample Input:\n2\n0 2\nSample Output:\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"0 1 2\") == \"0 1 2\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 3 2 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('8 4 7\\n1 2\\n2 5\\n3 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 4\\n5 7\\n5 8\\n5 9\\n6 4\\n6 7\\n6 8\\n6 9\\n7 4\\n7 7\\n7 8\\n7 9\\n8 4\\n8 7\\n8 8\\n8 9\\n9 4\\n9 7\\n9 8\\n9 9') == '3'\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n0 1\\n1 2\\n0 2') == '1'"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n') == '2'\nprint('OK')\n'''\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n0\n0\n4\n1\n3\n''') == '2'\n\nassert solution('''1\n0\n1\n''') == '1'\n\nassert solution('''3\n0\n1\n2\n''') == '0'"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n\"\"\"\n\n\nimport sys\n\nN, H, L = map(int, input().split())\nX = list(map(int, input().split()))\nY = []\nZ = []\nfor _ in range(L):\n    a, b = map(int, input().split())\n    Y.append(a)\n    Z.append(b)\n\nY.sort(reverse=True)"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('5 3') == '5'\nassert solution('10 5') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n\nTest 1\nInput\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\nOutput\n1\n\nTest 2\nInput\n4 4 4\n0 1\n0 2\n0 3\n0 4\nOutput\n0\n\nTest 3\nInput\n1 1\n1 1\n0 0\nOutput\n0\n\nTest 4\nInput\n2 5\n0 1\n0 1\n0 1\n0 1\nOutput\n0\n\"\"\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1'\nassert solution('''8 2 2\n1 2\n1 3\n2 3\n2 4\n3 5\n4 5\n4 6\n5 7\n6 7\n6 8''') == '6'\nassert solution('''8 2 2\n1 2\n1 3\n2 3\n2 4\n3 5\n4 5\n4 6\n5 7\n6 7\n6 8''') == '6'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\nSample Output:\n2\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'impossible'\nassert solution('4 4 3') == '4 3 1'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4 3 1\"\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\nassert solution('''\n1\n1\n''') == '1 1'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"3\") == \"4 3 1\"\nassert solution(\"2\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'impossible'\nassert solution('6') == '5 3 1 2 4 6'\nprint('solution()')\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"3 1 4\"\nassert solution(\"4\") == \"4 3 1\"\n\"\"\"\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\\n\"\n    \"1 2\\n\"\n    \"3\\n\"\n    ) == \"1 3 2\"\nassert solution(\n    \"3\\n\"\n    \"2 3 1\"\n    ) == \"3 1 2\"\nassert solution(\n    \"4\\n\"\n    \"1 2 3 4\"\n    ) == \"4 3 1 2\""
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4 3 1\"\nassert solution(\"3 2\") == \"4 3 2\"\nassert solution(\"3 2 3\") == \"4 3 3\"\nassert solution(\"3 2 3 4\") == \"4 3 4 3\"\nassert solution(\"3 5 3 4 2\") == \"4 3 5 3 2\"\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4 3 1\"\nassert solution(\"4\") == \"4 3 1\"\nassert solution(\"4 1 3\") == \"4 3 1\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n-5 -3 2 3\n''') == '1 -5 -3 2 3 4'\nassert solution('''\n3\n5 -1 2 4\n''') == '1 -1 2 4 5'\nassert solution('''\n4\n-3 5 1 2\n''') == '1 -3 5 1 2 4'\n'''\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 20 1\n2 10\n3 10\n3 5\n3 20\n3 1\n4 10''') == '18.400'\nassert solution('''5 20 2\n3 10\n3 20\n4 10\n5 10\n6 20''') == '22.300'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('1 100 15') == '200.000'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 3, 1]) == \"18.400\"\nassert solution([3, 1, 2]) == \"18.500\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('2 1 20 15') == '19.500'\n\"\"\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('3 10') == '10.000'\nassert solution('3 50') == '50.000'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 20, 15]) == \"18.400\"\nassert solution([2, 20, 5]) == \"9.000\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10\n2 10\n10 10''') == '18.400'\nassert solution('''3 10\n10 10\n10 10''') == '18.400'\nassert solution('''2 20\n10 10\n10 10''') == '18.400'\n'''\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 20 15\n    3 10''') == '18.400'\nassert solution('''4 5 4\n    1 2\n    2 3\n    4 2\n    4 5''') == '21.000'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 10\\n2 10') == \"18.400\"\nassert solution('2\\n4 10\\n1 4') == \"18.400\"\nassert solution('1\\n1 100\\n2 200') == \"200.000\"\nassert solution('1\\n1 0\\n2 100') == \"200.000\"\nassert solution('1\\n3 10\\n2 5') == \"9.500\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n10 10 10''') == '18.400'\nassert solution('''\n2 20 15\n3 10\nSample Input 2:\n1 1\n2 2\nSample Output 2:\n2.0\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == '5'\nassert solution('5\\n.....\\nS....\\n....H\\n.....\\n') == '6'\nassert solution('5\\n.....\\n.....\\n.....\\n.....\\n') == '6'\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''\n6\n...S.\n....H.\n.S.H.\n....S.\n...S.\n...S.\n''') == '5'\nassert solution('''\n8\n.S..H\n...H.\n...S.\n...S.\n...S.\n.H...\n...H.\n''') == '1'\nassert solution('''\n10\n.S.S.S.\n.SH..H.\n..S.H.S.\n..H.S.H.\n.H.S.S.S\n.SH.H.H.\n.H.S.H.S.\nS.H.S.H.\n.H.S.H.S.\n''') == '1'\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('5\\n.....\\nS....') == '5'\nassert solution('5\\n.H.\\n....') == '2'\n\"\"\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n.H.\\n.S.\") == \"4\"\nassert solution(\"5\\n....H\\n....H\\n....S\\n....H\\n....H\\n\") == \"6\"\nassert solution(\"2\\n.H.\\n.S.\") == \"3\"\nassert solution(\"5\\n....H\\n....H\\n....S\\n....H\\n....H\\n\") == \"6\"\nassert solution(\"3\\n....H\\n....H\\n....S\\n.H.H\\n....H\\n\") == \"3\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('5\\n.....H\\n.....H\\nS....') == '5'\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\n\nSample Input:\n1\n.\nSample Output:\n0\n'''\n    ) == '0'"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n.....H\n.....\n...H.\n...S.\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n...H.\n.....\n.....\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nH....\\nH.....\\nS....\\nH....\\nH.....\") == '5'\n\"\"\"\nimport sys\nsys.path.append('./DataStructures/')\nfrom queue import Queue"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n........\\nS...H...\\n........\\n....H....\\n........\\n') == '5'\nassert solution('5\\n........\\n...S....\\n........\\n....H....\\n........\\n') == '4'\n\"\"\"\n\nimport os\nimport sys\nimport atexit\nimport io\nfrom collections import defaultdict\n\nclass cache_stream:\n    \"\"\"Wrap a stream so it's accessible by the cache_stream decorator.\"\"\"\n    def __init__(self, stream):\n        self.stream = stream\n\n    def write(self, data):\n        self.stream.write(data)\n        self.stream.flush()\n\n    def __getattr__(self, attr):\n        return getattr(self.stream, attr)\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"11\") == \"2\"\nassert solution(\"21\") == \"3\"\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '0'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'\nassert solution('3 3 4\\n1 2\\n1 2') == '1'"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3\n    1 2\n    3\n    \"\"\") == \"0\"\n\nassert solution(\"\"\"\n    5\n    2 4\n    1 3 5\n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    5\n    1 3 5\n    2 4\n    \"\"\") == \"1\"\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\n\nassert solution([int(x) for x in stdin.split()]) == '0'\n\nassert solution([int(x) for x in stdin.split()] + [[int(x) for x in stdin.split()]]) == '0'\n\"\"\""
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == '0'\nassert solution('5 2 5') == '1'\nassert solution('5 1 2 3 4') == '2'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\"\nprint(solution(\"5 2 3\\n2 4\\n1 3 5\\n\"))\nassert solution(\"5 2 4\\n1 3 5\\n4 2\\n\") == \"2\"\nprint(solution(\"5 2 4\\n1 3 5\\n4 2\\n\"))\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2 3\\n\"\n    \"2 4\\n\"\n    \"1 3 5\\n\"\n) == \"0\"\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n'''\n\nstdin = '''\n5 2 3\n2 4\n1 3 5\n'''\n\nstdin = '''\n1\n1\n2\n'''"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\nassert solution('''5 1 3\n1 2\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n1 2\n1 3\n2 4\n1 3 5''') == '0'\nassert solution('''5 1 3\n1 2\n1 3\n2 4\n1 3 5''') == '0'\nassert solution('''5 1 3\n1 2\n1 3\n2 4\n1 3 5''') == '0'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2 3\n2 4\n1 3 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 1 4\n1 2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 3 4\n1 3\n1 2\n2 3\n\"\"\") == \"1\""
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('2 2') == '0.2'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0.000000000\"\nassert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"1 1.00000000000\") == \"0.000000000\"\nassert solution(\"1 1.00000000001\") == \"0.0000000000\"\nassert solution(\"1 1.0000000001\") == \"0.0000000000\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\""
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 2') == '0.000000000'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n''') == '0.99999999'\nassert solution('''\n3 4\n''') == '0.100000000'\n'''\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000000000'\n\nExplanation\nSample Input:\n1 1\nSample Output:\n1.0\n\"\"\"\n\nradius, crust = map(int, input().split())\npercent = 100 - crust\nres = percent / radius\nprint(res)\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 2') == '0.40000000'\nassert solution('2 1') == '0.20000000'\nassert solution('5 2') == '0.80000000'\nassert solution('9 1') == '1.000000000'\n\"\"\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0.000000000'\n\n\"\"\""
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('-1 -1') == '1.000000000'\nassert solution('1 0') == '0.000000000'\nassert solution('1 1') == '0.000000000'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n\"\"\") == \"2\""
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n100 101 102 103 488') == '2'\nassert solution('2\\n100 200 300 101 102') == '1'\nassert solution('3\\n100 101 102 103 488') == '0'\nprint('Congratulations, you solved the problem!')\n\n\"\"\""
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2'\nassert solution('10\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n101 102 103 488 100\\n103 102 101 488 100\\n101 102 103 488 100\\n103 102 101 488 100\\n101 102 103 488 100\\n103 102 101 488 100\\n') == '1'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Output:\n2\n''') == '2'\n\nassert solution('''3\n100 200 300 101 102\n103 102 101 488 100\nSample Output:\n1\n''') == '1'\n\nassert solution('''3\n101 102 103 488\n103 102 101 488 100\nSample Output:\n2\n''') == '2'\n\nassert solution('''10\n100 200 300 101 102\n103 102 101 488 100\n104 102 101 488 100\n105 102 101 488 100\n107 102 101 488 100\n108 102 101 488 100\nSample Output:\n2\n''') == '2'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2', \"Should return 2\"\n\nSample Input:\n6\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\nSample Output:\n3\n\"\"\""
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\""
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2', \"Too hard! ;)\"\nprint('All Tests Passed')"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\n\nassert solution('''\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n''') == '1'\n\nassert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Output:\n1\n''') == '1'\n\nassert solution('''\n4\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n''') == '0'\n\nassert solution('''\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n''') == '1'"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('10') == '9'\nassert solution('20') == '19'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '4\\n'\nassert solution('10\\n') == '9\\n'"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\n\"\"\""
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1729'\nassert solution('1') == 'None'\nassert solution('1223') == '1331'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('1000') == '1'\nassert solution('100100100') == '5'\nassert solution('4000000') == '40000'\nassert solution('10') == '9'"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '8'\nassert solution('20') == '10'\nassert solution('80') == '9'\nassert solution('87') == '12'\nassert solution('10') == None\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"10\", \"Just a check\"\n\"\"\"\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10000\") == \"1000\"\nassert solution(\"123\") == \"123\"\nassert solution(\"12345\") == \"13\"\nassert solution(\"123456\") == \"123\"\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '1511'\nassert solution('3') == 'None'\nassert solution('10') == 'None'\n\"\"\"\nfrom itertools import combinations"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('1730') == '1729'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65536') == '16'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('65536') == '16'\nassert solution('123') == '2'\nassert solution('1312') == '0'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n16\n''') == '16'\nassert solution('''\n65536\n''') == '16'\n'''\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"65536\") == \"16\"\n\n\"\"\""
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n16''') == '16'\nassert solution('''5\n1\n2\n3\n4\n5''') == '10'\nassert solution('''10\n4\n3\n2\n1''') == '4'\nassert solution('''10\n1\n2\n3\n4\n5''') == '4'\nassert solution('''65536\n16''') == '16'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"5\") == \"1\"\n\"\"\"\n\n\"\"\"\n6. (2 points) Given an integer $X$, return true if and only if $X$ is a perfect square.\n\n-----Hints-----\nhttps://stackoverflow.com/questions/35205592/how-to-check-if-number-is-a-perfect-square\n\n-----Ideas-----\n1. The key is to see if there is a floor(x) and ceil(x) that equals to x\n    i.e. a^2 = a * a + 1, a^2 = a * a + a\n2. The trick is to find two roots that satisfy the equation: 2a = x, 2b = x\n    i.e. a = (b - x) / 2\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"65536\") == \"16\""
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n.2\\n.3\\n4K\\n') == '2'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n....\\n....\\n....\\n...K\") == \"2\"\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"100\") == \"-1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"8\") == \"1\"\n\nprint(f\"Solution: {solution(stdin)}\")\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2'\nassert solution('5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '1'\nassert solution('15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '1'\nassert solution('101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160') == '5'\nassert solution('1\\n10\\n3\\n4') == '-1'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '-1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\n\nassert solution('1') == '-'\n\nassert solution('0') == '-1'\n\nassert solution('8') == '7'\n\nassert solution('2') == '-1'"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '-1'\nassert solution('3') == '5'\nassert solution('4') == '-1'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n....\n...#\n..K.\n''') == '-1'\n\nassert solution('''\n4\n.#.#\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n..#\\n#..\\n\") == \"1\"\nassert solution(\"3\\n.K\\n.#\\n\") == \"2\"\nassert solution(\"4\\n.#K\\n.###\\n..#K\\n\") == \"4\"\nassert solution(\"4\\n...#\\n.##.#\\n....#\\n\") == \"2\"\nassert solution(\"4\\n....#\\n#.#..\\n#..##\\n\") == \"2\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 5') == '23'\nassert solution('20 10') == '19'\n\"\"\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"too late\"\nassert solution(\"1 2\") == \"42\"\nassert solution(\"100 100\") == \"too late\"\nassert solution(\"0\") == \"too late\"\nassert solution(\"0 3\") == \"42\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n100 5\n42\n3\n2\n99\n1\n\"\"\") == \"23\"\nassert solution(\"\"\"\n100 5\n42\n3\n2\n\"\"\") == \"too late\"\nassert solution(\"\"\"\n100 5\n42\n2\n99\n1\n\"\"\") == \"too late\"\nassert solution(\"\"\"\n100 5\n1\n99\n1\n\"\"\") == \"too late\"\nassert solution(\"\"\"\n100 5\n1\n99\n\"\"\") == \"too late\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"too late\"\nassert solution(\"25\") == \"too late\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"too late\"\nassert solution(\"5\") == \"too late\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"3\"\nassert solution(\"99\\n1\\n\") == \"23\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''100 5\n42\n3\n2\n99\n1''') == '23'\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1\n2\n3\n4\n\"\"\") == \"23\"\nassert solution(\"\"\"\n2\n1\n\"\"\") == \"too late\"\nassert solution(\"\"\"\n20\n1\n20\n\"\"\") == \"too late\"\nassert solution(\"\"\"\n5\n1\n3\n4\n5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'too late'\nassert solution('2\\n3') == '3'\nassert solution('100\\n1\\n3\\n2\\n99\\n1') == '23'\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\n\nassert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == 'too late'\n\nassert solution('''\n100 10\n10\n1\n2\n1\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'too late'\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"hello world\") == \"HELLO WORLD\"\nassert solution(\"playfair example\") == \"PDEXKJIYTLRUFQVNB\"\nassert solution(\"\") == \"\"\nassert solution(\"Hi, how are you?\") == \"HIGYIJYRQKQFOUSMTNUOI\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'playfair example\\nhide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution(\n    'example\\nhide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\"\"\"\nimport math"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''playfair example''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\n'''\n----\n\n\n\nimport math"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"BENNFRTZJXJUOHGQWMPVWXZ\"\nassert solution(\"this is a test\") == \"SILTZTSHTMNBFXGCHVNURQPZF\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nplayfair example\nhide the gold in the tree stump\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\np a y f a\nh i e l\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\nt h e l v i f a\nm a p a y\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\na t h e l v i f a\nm a p a y\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\ne l v i f a t h e l v i f a\nm a p a y\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"playfair example\") == \"HELLO WORLD\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\""
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"HGJUXSZLWFDOCOMBTFFMVLAGI\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\napple\n''') == 'APLSKTHIYV'\nassert solution('''\nhello world\n''') == 'HELLOWXLD'\nassert solution('''\nplayfair example\n''') == 'BNGDZBXWKTFYUJEIHXICPMNUVIF'\nassert solution('''\nhide the gold in the tree stump\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\ntied up\n''') == 'TVIZBDWXGNTKHLKUPOCUEGQHY'\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nshow the holy grail\n''') == 'SCHDVJYEVRLTKZLXMFDG'\nassert solution('''\nthe cat\n''') == 'NNNEEQTTT'\nassert solution('''\nvacuuming\n''') == 'VCTMNSRK'\n'''"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$2$).''','solution'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('''\n1.000 1.000 1.000 1.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('''\n1.000 1.000 1.000 1.000\n1.500 1.500\n''') == 'The gopher cannot escape.'\nassert solution('''\n1.000 1.000 1.000 1.000\n2.000 2.000\n''') == 'The gopher cannot escape.'\nassert solution('''\n1.000 1.000 1.000 1.000\n1.000 1.000\n''') == 'The gopher can escape through the hole at ($1$,$1$).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 2).'\nassert solution('1.000 1.500') == 'The gopher can escape through the hole at (1, 1).'\nassert solution('1.500 1.500') == 'The gopher cannot escape.'\nassert solution('1.500 1.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000') == 'The gopher can escape through the hole at (1, 1).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 1.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1.5$, $1.5$).'\nassert solution('''\n0.000 1.000 2.000 2.000\n0.000 1.000\nSample Output:\nThe gopher can escape through the hole at ($1.5$, $1.5$).\n''') == 'The gopher can escape through the hole at ($1.5$, $1.5$).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n\n'''\nimport math"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('0.500 1.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 0.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 0.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000') == 'The gopher cannot escape.'"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at (1.500, 1.500).'\n\nassert solution('''\n1.000 1.000 2.000 2.000\n1.500 2.000\n''') == 'The gopher cannot escape.'\n\nassert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at (1.500, 1.500).'"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 1.000 2.000') == 'The gopher can escape through the hole at (1, 1).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == \"The gopher cannot escape.\"\nassert solution('1.000 1.000 2.000 2.000') == \"The gopher can escape through the hole at ($1.000$, $2.000$).\"\nassert solution('1.000 1.000 2.000 2.000') == \"The gopher can escape through the hole at ($1.000$, $2.000$).\"\nassert solution('1.000 1.000 2.000 2.000') == \"The gopher can escape through the hole at ($1.000$, $2.000$).\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Y'\nassert solution('4 5') == 'Y'\nassert solution('-1 -1') == 'Y'\nassert solution('100001') == 'N'\nassert solution('-1 1') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == 'Y'\nassert solution('2 3') == 'N'\nassert solution('-5 -1') == 'Y'\nassert solution('1 5') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n1 2\") == \"Y\"\nassert solution(\"1 5\\n3 3\") == \"Y\"\nassert solution(\"1 5\\n-5 3\") == \"Y\"\nassert solution(\"3 3\\n5 5\") == \"Y\"\nassert solution(\"3 5\\n-3 3\") == \"N\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"10 0\\n-10 10\\n100\") == \"Y\"\nassert solution(\"2 2\\n2 2\\n2\") == \"N\"\nassert solution(\"-10 0\\n-10 10\\n100\") == \"Y\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n3 3\n3''') == 'Y'\nassert solution('''3 4\n3 3\n4''') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Y'\nassert solution('4 4') == 'Y'\nassert solution('3 3') == 'N'\nassert solution('4 4') == 'N'\n\n'''\nfrom typing import List\nfrom itertools import permutations\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1,1\") == \"Y\"\nassert solution(\"1,1\") == \"Y\"\nassert solution(\"1,1\") == \"N\"\nassert solution(\"1,1\") == \"Y\"\nassert solution(\"1,1\") == \"Y\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Y\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Y'\nassert solution('1 2 3') == 'N'\nassert solution('4 5') == 'Y'\nassert solution('1 1') == 'Y'\nassert solution('1 1 2 3') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Y\"\nassert solution(\"1 2 3\") == \"N\"\n\"\"\""
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7\n.V...\n.......\n.......\n...#...\n..###..''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'''\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7\") == \"\"\"...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n\"\"\".strip()\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\nprint(solution(input()))\n\nimport math\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\n\nassert solution('''5 7\n.V...\n..V.V\nV...V\n...V.\n...V...\n''') == '''.V...\n..V.V\nV...V\n...V.\n...V...\n'''\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n..V..\\n...#.\\n.#.#.\\n..###\") == \"........\"\nassert solution(\"5 7\\n...#..\\n...#...\\n...#...\\n...#...\\n.#...#\") == \"...#...#\\n#..V..#\\n.#...#.\\n.....#\\n..###.\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n'"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7\") == \".....\\n.....\\n.....\\n.....\\n.....\\n\", \"Should be 4.\"\nassert solution(\"5 5\") == \"....\\n....\\n....\\n....\\n....\\n\", \"Should be 5.\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \".....\\n.....\\n.....\"\nassert solution(\"1\") == \"......\\n........\\n......\"\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"11\"\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13') == '11'\nassert solution('13') == '11'\n\nSolution Approach:\n1. Use Python libraries to convert the binary string to an integer\n2. Reversing the binary string\n3. Convert the reversed string to an integer\n\n'''"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1011\""
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(13) == '11'\nassert solution(3) == '3'\n\nInput\n    22\n    8\nOutput\n    11\n    7\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '11'\nassert solution('-13') == '-11'\nassert solution('123') == '321'\nassert solution('-123') == '-321'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '10'\nassert solution('1010') == '1100'\nassert solution('0110') == '1010'\nassert solution('101001') == '110011'\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '11'\nassert solution('123') == '321'"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"123\") == \"321\"\nassert solution(\"10000\") == \"100\"\nassert solution(\"-100\") == \"-100\"\nassert solution(\"-13\") == \"-11\"\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '11'"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'\nassert solution('123') == '321'\nassert solution('10010') == '10101'\nassert solution('1001') == '1101'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"9\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"13\") == \"I must watch Star Wars with my daughter\""
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"12\", \"pink\", \"tequilaSunrose\", \"mExicanPInK\", \"Coquelicot\", \"turqrose\", \"roSee\", \"JETblack\", \"pink\", \"babypink\", \"pInKpinkPinK\", \"PInkrose\", \"lazerlemon\"]) == \"9\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '9'\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\\n\"\n        \"pink\\n\"\n        \"tequilaSunrose\\n\"\n        \"mExicanPInK\\n\"\n        \"Coquelicot\\n\"\n        \"turqrose\\n\"\n        \"roSee\\n\"\n        \"JETblack\\n\"\n        \"babypink\\n\"\n        \"pInKpinkPinK\\n\"\n        \"PInkrose\\n\"\n        \"lazerlemon\") == \"9\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\ncOquelicot\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\") == \"9\"\nassert solution(\"7\\ntwist\\nmaze\\nflip\\nflip\\npink\") == \"1\"\nassert solution(\"2\\ncoquil\") == \"1\"\nassert solution(\"2\\ncoquil\\ncoquil\") == \"2\"\nassert solution(\"3\\ncoquil\\ncoquil\\ncoquil\") == \"3\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"9\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"1\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"13\") == \"1\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '9'\nassert solution('3') == '1'\nassert solution('6') == '0'\nassert solution('6') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['1 5 3', 'A', 'B', 'C']) == '1 3 5'\n'''\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'\nassert solution('1 4 2\\nABC') == '1 4 2'\nassert solution('1 3 2\\nABC') == '1 3 2'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('2 3 4') == '2 4 3'\nassert solution('3 4 5') == '3 4 5'\nassert solution('4 5 3') == '3 4 5'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 3 2'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('2 4 6') == '2 4 6'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\""
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"1 1 2 3\") == \"3 2 1\"\nassert solution(\"1 1 2 1\") == \"2 1 1\"\nassert solution(\"1 2 3 4\") == \"3 4 1 2\"\nassert solution(\"1 2 3 4 5\") == \"4 5 2 3 1\"\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 4') == '1 2 4'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"2 5 7\\nBCA\") == \"2 3 5 7\"\nassert solution(\"2 5 7\\nCAB\") == \"2 3 5 7\"\nassert solution(\"2 5 7\\nCBA\") == \"2 3 5 7\"\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('10 2 2') == '2 2 10'\nassert solution('1 1 2') == '1 2 1'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    buy 1 2\n    buy 1 4\n    buy 2 6\n    buy 4 8\n    buy 2 4\n    buy 5 7\n    buy 4 9\n    buy 6 10\n    sell 1 4\n    die 4\n    sell 2 6\n    sell 5 7\n    \"\"\") == \"4.5\"\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('buy 1 15\\n'\n                'split 3\\n'\n                'sell 1 5\\n'\n                'die 4\\n') == '8.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '8.00000000'\nassert solution('100\\n80\\n90\\n1\\n100\\n80\\n90\\n1\\n100\\n80\\n90\\n') == '83.00000000'"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n\nprint(solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n'''))\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('buy 1 15') == '8.00000000'\nassert solution('split 3') == '9.00000000'\nassert solution('sell 1 5') == '10.00000000'\nassert solution('die 4') == '9.00000000'\nassert solution('buy 2') == '1.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\n') == '8.00000000'\nassert solution('buy 2 0\\nbuy 1 2\\n') == '0.500000000'\nassert solution('sell 1 2\\n') == '0.500000000'\nassert solution('buy 1 3\\nbuy 1 4\\n') == '3.00000000'\nassert solution('buy 1 2\\nsell 1 4\\n') == '0.500000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '8.00000000'\nassert solution('buy 1 15\\nbuy 1 5\\nsell 1 5\\nbuy 1 5\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '12.00000000'\nassert solution('buy 1 15\\nbuy 1 5\\nsell 1 5\\nbuy 1 5\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '7.00000000'\nassert solution('buy 1 15\\nbuy 1 5\\nsell 1 5\\nbuy 1 5\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '9.00000000'\nassert solution('buy 1 15\\nbuy 1 5\\nsell 1 5\\nbuy 1 5\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '7.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 1 7\nbuy 1 7\nsell 1 5\ndie 4\n\"\"\") == \"6.2500000000000001\"\nassert solution(\"\"\"\nbuy 1 10\nbuy 1 10\nbuy 1 10\nsell 1 5\ndie 4\n\"\"\") == \"10.0000000000000004\"\nassert solution(\"\"\"\nbuy 1 10\nbuy 1 10\nsell 1 5\nsell 1 5\nbuy 1 5\ndie 4\n\"\"\") == \"10.0000000000000004\"\nassert solution(\"\"\"\nbuy 1 2\nsell 1 1\nbuy 1 1\nsell 1 1\nsell 1 1\nsell 1 1\nsell 1 1\nsell 1 1\nbuy 1 1\ndie 4\n\"\"\") == \"1.0000000000000001\"\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    'buy 1 15',\n    'split 3',\n    'sell 1 5',\n    'die 4',\n])) == '8.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"buy 1 15\") == \"8.00000000\"\nassert solution(\"buy 1 15\") == \"8.00000000\"\nassert solution(\"buy 1 15\") == \"8.00000000\"\nassert solution(\"buy 1 15\") == \"8.00000000\"\nassert solution(\"buy 1 15\") == \"8.00000000\"\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('808') == '8'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '8'\nassert solution('3') == '3'"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n\n\"\"\""
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('123') == '6'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('808') == '8'\nassert solution('1234') == '3'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '8'\nassert solution('8080') == '8'\n\nstdin = '80'\nstdout = '8'\nsolution(stdin) == stdout\n\nstdin = '8080'\nstdout = '8'\nsolution(stdin) == stdout\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n5\\n3\\n2\\n3') == '6'\nassert solution('1\\n3') == '3'\nassert solution('1\\n8') == '8'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n\nassert solution('''\n4 5\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '1'\n\nassert solution('''\n4 5\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '1'\n\nassert solution('''\n4 5\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '0'\n\nassert solution('''\n10 3\nCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCC"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\nCC\nCC''') == '0'\nassert solution('''10 11\nGGCCCCC\nCCB\nCCCCC\nCCCCC\nCCB\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == '4'\nassert solution('''10 10\nGGCCCCC\nCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == '1'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\nC\nCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CCCCCC') == '0'\nassert solution('CCCCCC') == '0'\nassert solution('CCCCCC') == '2'\nassert solution('CCCCCC') == '2'\nassert solution('CCCCCC') == '2'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\nCC\nCCCC\nCCCCC\nCCCCCC''') == '0'\nassert solution('''\n4 4\nCC\nCCCCC\nCCCCCC\nCCCCCC''') == '1'\nassert solution('''\n4 5\nCCCCC\nCCCCCC\nCCCCC\nCCCCC\nCCCCC''') == '2'\nassert solution('''\n10 10\nCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCC"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"3\") == 2\nassert solution(\"3\\n2\\n1\") == 0\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '1'\n\nassert solution('''\n4\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '2'\n\nassert solution('''\n4\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '3'\n\nassert solution('''\n4\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '4'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\nCCCCCC\\nCCCCCC\\nCCCCCC\\nCCCCCC\") == \"0\"\n\"\"\""
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\nCCCC\\nCCCC\\nCCCC\\nCCCC') == \"0\"\nassert solution('4 5\\nCCCC\\nCCCC\\nCCCC\\nCCCC') == \"1\"\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == ''\nassert solution(\"TH\") == '60'\nassert solution(\"9C\") == '60'\nassert solution(\"KS\") == '52'\nassert solution(\"QS\") == '52'\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\nprint('Test passed')"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 S') == '60'\nassert solution('TH') == '11'\nassert solution('9C') == '21'\nassert solution('KS') == '12'\nassert solution('QS') == '14'\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 S\nTH\n9C\nKS''') == '6'\nassert solution('''3 S\nTH\n9C\nKS''') == '15'\nassert solution('''2 S\nTH\n9C''') == '10'\nassert solution('''1 S\nTH''') == '7'\nassert solution('''2 S\nTH\nTH''') == '6'\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '60'\n\n-----Hint 1-----\nEach time you play, you receive a card from the set of four cards of the game, and the dominant suit is the one that is not dominated by any other.\n\n-----Hint 2-----\nA hand is represented as a set of four cards, and the value of each card is defined in Table 1.\n\n-----Hint 3-----\nThe game is played between two sets of cards of size four. The dominant suit is the one that is not dominated by any other.\n\n-----Hint 4-----\nThe domiant suit can be determined by a hand that is played once.\n\n-----Hint 5-----\nThe dominant suit can be determined by playing $N$ hands with the dominant suit.\n\n\"\"\"\n\nn = int(input())\ncard_suit_value = {'H': 1, 'D': 2, 'C': 3, 'S': 4}\nsum_points = 0\n\nfor _ in range(n):\n    card_value = input()\n    if card_value[0] == 'A':\n        sum_points += 11\n    elif card_value[0] == 'T':\n        sum_points += 10\n    elif card_value[0] == 'J':\n        sum_points += 10\n    elif card_value[0] == 'Q':\n        sum_points += 10\n    elif card_value[0] == 'K':\n        sum_points += 10\n    else:\n        sum_points += int(card_value[0])\n    if card_value[1] == 'S':\n        sum_points += 1\n    elif card_value[1] == 'D':\n        sum_points += 2\n    elif card_value[1] == 'H':\n        sum_points += 3\n    elif card_value[1] == 'C':\n        sum_points += 4\n\nprint(sum_points)\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\n\"\"\""
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\nTH\nKS\nQS\nJD\nTD\nAD\nJH''') == '60'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"60\"\n\nSample Input:\n2 S\nTH\n9C\nKS\nQS\nQH\nQD\nQC\nJH\nJH\nJH\nQS\nQC\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH\nJH"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 S\\nTH\\n9C') == '60'\nassert solution('2 H\\nTH\\n9C') == '60'\nassert solution('2 S\\nTH\\n9C') == '60'\nassert solution('2 S\\nTH\\n9C') == '60'\nassert solution('2 S\\nTH\\n9C') == '60'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying\\nthiss iss veery annoying') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n\n\"\"\""
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\""
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying''') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('this is very annoying') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\""
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\"\"\"\n\ns = stdin"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 0') == '3'\nassert solution('2 0 0 1 1') == '3'\nassert solution('1 1 1 1 1') == '2'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '2'\nassert solution('2 3 3 2 2 3 3 3 2 2 2 3 3 3 2 2 2 2 2 2 3 3 2 3 3 2 2 2 2 3 2 3 2 2 3 3 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('2\\n5\\n0') == '2'\n\"\"\"\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 1') == '3'\nassert solution('1 1 1 1 1 0') == '2'"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"\nassert solution(\"3 3 3\\n1 1 1 1\") == \"0\""
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 0') == '3'\nassert solution('5 3 0') == '3'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == \"4\"\nassert solution('5 3 0') == \"3\"\nassert solution('5 3 0 0 0') == \"2\"\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 0') == '3'\nassert solution('2 0 3 0') == '1'\nassert solution('3 0 0') == '0'\nassert solution('2 1 0') == '1'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n10 3 1\n0 0 1 1 2\n''') == '1'\nassert solution('''\n10 3 0\n0 0 1 1 2\n''') == '1'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 3 0\n0 0 1 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 3 1\n0 0 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 3 1\n0 0 1 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 3 2\n0 0 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 3 3\n0 0 1 1 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_value) == \"3\"\nprint(solution(input_value))"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n'''\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n1\n5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1 2') == '4 2'\nassert solution('4\\n4 1 2 3') == '8 4'\nassert solution('5\\n1 1 1 1 1') == '6 5'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"4 2\"\nassert solution(\"6\") == \"2 3 4 6\"\nassert solution(\"12\") == \"2 2 3 4 6\"\nassert solution(\"12 15\") == \"2 2 3 4 6 8\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 1\n''') == '3 2'\nassert solution('''\n3\n3 2 1\n''') == '4 3'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"4 2\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 2') == '4 2'\nassert solution('6 8 5 7 4 3') == '19 13'\nassert solution('10 15 2 4') == '20 14'\n\"\"\""
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 1 2') == '4 2'\nassert solution('2\\n1 1\\n2 2') == '3 2'\nassert solution('3\\n1 1\\n2 2') == '3 2'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\nassert solution('1\\n2 1 1\\n2\\n') == '3 2'\nassert solution('10\\n100 1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == '70000 10002 10003 10004 10005 10006 10007 10008 10009 10010 10011 10012 10013 10014 10015'"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 5 8') == '4 2'\nassert solution('6 2 2 2 2 4 5 7 6 2') == '6 7 5 4'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2') == '4 2'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 1\\n') == '2'"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\") == \"2\""
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 10 1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n100 100 1\n\"\"\") == \"100\"\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nSample Input:\n5 2 1\nSample Output:\n2\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('5 4 2') == '4'\n'''\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1\\n') == '2'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2 2\") == \"3\"\nassert solution(\"4 3 3\") == \"3\"\nassert solution(\"5 3 4\") == \"4\"\nassert solution(\"2 2 3\") == \"2\"\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1') == '2'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"7 3 2\") == \"3\""
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 1\n''') == '2'\nassert solution('''\n100 1000 100000\n''') == '1000000000'\nassert solution('''\n5 2 2\n''') == '-1'\nassert solution('''\n5 2 0\n''') == '-1'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '36'\n\nassert solution('''\n5\n''') == '36'\n\nassert solution('''\n7\n''') == '288'\n\nassert solution('''\n8\n''') == '144'\n\nassert solution('''\n11\n''') == '322'"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\nassert solution('1237') == '696210'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '36'\nassert solution('10') == '35'\nassert solution('9') == '8'\nassert solution('7') == '7'\nassert solution('6') == '6'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n4\n''') == '10'\n\n'''\n10\n''')\nassert solution('''\n1\n''') == '1'\nassert solution('''\n16\n''') == '36'\nassert solution('''\n10\n''') == '81'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '36', solution\nassert solution('1') == '1', solution\nassert solution('12') == '28', solution\nassert solution('15') == '316', solution\nassert solution('100') == '100000000', solution\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '36'\nassert solution('3') == '4'\nassert solution('7') == '288'"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"36\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"36\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '36'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '36'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 3 1') == '2 3 4 1'\nassert solution('8\\n1 2 1 2 3 1 2 3') == '1 2 3 4 1 5 2 3'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('7\\n4 1 2 3 4 5 5') == '4 1 2 3 4 5 5'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"3\\n1 2 3\\n\") == \"1 2 3\"\nassert solution(\"3\\n1 2 2\\n\") == \"1 2 2\"\nassert solution(\"3\\n1 2 2\\n\") == \"1 2 2\"\nassert solution(\"5\\n2 3 3 1\\n\") == \"2 3 4 1\"\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('2 3 3 1') == '3 4 2 1'\nassert solution('4 1 3') == '3 2 4 1'"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 5 2') == '2 3 4 1'\nassert solution('1 2 4 3') == '1 2 3 4'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('3 3 3 3') == '3'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3 1\n''') == '2 3 4 1'\nassert solution('''3\n2 3 2\n''') == '2 3'\nassert solution('''3\n2 3 3\n''') == '2 3'\nassert solution('''3\n1 2 2\n''') == '1 2'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 3\") == \"3 1 2\"\nassert solution(\"3\\n2 1 3 1 2 3\") == \"1 1 3 3 2\"\nassert solution(\"3\\n2 1 3 2 1 1\") == \"1 2 3 1 1\"\nassert solution(\"4\\n2 3 3 1 2 3\") == \"2 3 1 3 4\"\nassert solution(\"4\\n1 1 2 3 1 1 1 1\") == \"1 2 3 1 1 1\"\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n3\\n1 2\\n') == '1 2 3'\nassert solution('5\\n4 5 3 1 5\\n6 5 2\\n3\\n6 5 4\\n5\\n4 6\\n') == '4 5 6 5 4'\nassert solution('5\\n3 6 1 5\\n2\\n3\\n4\\n') == '1 2 3 4'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nleft_oar\n2\nright_oar\n1\nhull\n''') == '4'\n\nassert solution('''\n1\nleft_oar\n3\nright_oar\n1\nhull\n''') == '4'\n\nassert solution('''\n3\nleft_oar\n3\nright_oar\n1\nhull\n''') == '1'\n\n'''"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('3 4\\nleft_oar\\nright_oar\\nright_oar\\nhull\\nright_oar') == '2'\nassert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '3'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == 'hull'\nassert solution('''\nhull\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == 'hull'\n''')\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"paradox avoided\"\n\"\"\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '4'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2 10\nleft_oar\nhull\nleft_oar\nhull\nright_oar\n\"\"\") == \"11\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '4', \"First\"\nassert solution('1 1 2') == '1', \"Second\"\nassert solution('1 2 3 1 2 3') == '3', \"Third\"\nassert solution('5 2 2 3 3') == '3', \"Forth\"\nassert solution('1 5') == '4', \"Fith\"\nprint('\"Run\" is good practice.')"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n    hull\n    hull\n    right_oar\n    hull\n    left_oar''') == '4'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nright_oar\\nhull\\nright_oar\\n\") == \"0\""
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('1 1\\n3 3\\n5 5\\n') == '5 5'\nassert solution('3 4\\n5 6\\n7 7\\n') == '7 7'"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"7 7\"\nassert solution(\"2 4\") == \"2 5\"\nassert solution(\"6 6\") == \"7 7\"\nassert solution(\"7 5\") == \"7 7\"\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('4 4\\n3 4\\n4 3\\n') == '4 4'\nassert solution('6 6\\n6 5\\n5 6\\n') == '6 6'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7 7\"\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"4 5\") == \"4 4\"\nassert solution(\"4 4\") == \"4 4\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('1 1\\n2 2\\n3 3\\n') == '2 2'\nassert solution('1 1\\n2 2\\n3 3\\n') == '3 3'\nassert solution('4 4\\n5 6\\n7 7\\n') == '7 7'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '7 7'\nassert solution('3 5') == '7 7'\nassert solution('3 3') == '7 7'\nassert solution('4 5') == '7 7'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n7 8\\n') == '7 7'"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '7 7'\nassert solution('5 7') == '7 7'\nassert solution('7 5') == '7 7'\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 61') == \"1.016666667\"\nassert solution('5\\n12 34 5 6 7') == \"4.999999998\"\nassert solution('50\\n123456789 123456789') == \"3.99999998\"\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.01'\nassert solution('1 2') == '2.01'\nassert solution('1 2 3') == '2.01'\nassert solution('1 2 3 4') == '2.01'\nassert solution('1 2 3 4 5') == '2.01'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n1 60\n\"\"\") == \"1.01\"\nassert solution(\"\"\"\n2\n2 60\n\"\"\") == \"2.01\"\nassert solution(\"\"\"\n3\n1 60\n\"\"\") == \"measurement error\""
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 60\\n') == '1.01'\nassert solution('2\\n1 60\\n') == '1.01'\nassert solution('3\\n1 60\\n') == '1.01'\nassert solution('4\\n1 60\\n') == '1.01'"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"1.016666667\"\nassert solution('1\\n1\\n1\\n1\\n') == \"measurement error\"\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.01'\nassert solution('1') == '1.0'\nassert solution('3') == '0.6666666666666666666666666667'\nassert solution('4') == '0.33333333333333333333333333'\nassert solution('5') == '0.0'"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.003333333'\nassert solution('2') =='measurement error'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('5\\n1 23\\n3 56\\n5 56\\n7 35\\n9 25\\n13 18\\n16 13') == '2.142861395'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('2\\n2 50') == '2.02'\nassert solution('3\\n3 30') == '3.03'\nassert solution('4\\n4 60') == '3.03'\nassert solution('5\\n5 1') == '5.01'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n1 61\"\n    ) == \"1.016666667\"\nassert solution(\n    \"2\\n2 60\"\n    ) == \"1.999999999\"\nassert solution(\n    \"3\\n3 3600\"\n    ) == \"0.0\"\nassert solution(\n    \"4\\n4 3600\"\n    ) == \"1.0\"\nassert solution(\n    \"5\\n1 6999\"\n    ) == \"1.999999999\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\", \"ALBERTA\") == \"CALGARY\"\nassert solution(\"CPMCRYY\", \"ALBERTA\") == \"CALGARY\"\n\"\"\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CPMCRYY','ALBERTA') == 'CALGARY'\n\nSample Input:\nLZTAA\nDELTAS\nSample Output:\nLZTAA\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n\nfrom collections import Counter"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'CALGARY'\nassert solution(input(\"CALGARY\\n\")) == \"CALGARY\""
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\nassert solution('ALBERTA') == 'CALGARY'"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CPMCRYY','ALBERTA') == 'CALGARY'\n\n\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def decrypt(self, s, key):\n        res = \"\"\n        for i in range(0,len(s)):\n            if (i%2 == 0):\n                res += chr((ord(s[i])-ord(key[i%len(key)]))%26 + ord('A'))\n            else:\n                res += chr((ord(s[i])-ord(key[i%len(key)]))%26 + ord('a'))\n        return res"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\nassert solution('ALBERTA') == 'CALGARY'\nassert solution('CALGARY') == 'CALGARY'\n\"\"\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYY\") == \"ALBERTA\"\nassert solution(\"ZQECGWRLX\") == \"SGTGCMZ\"\n\"\"\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AB') == '3'\nassert solution('CB') == '2'\nassert solution('CBBA') == '2'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nA\nB\nC\nA\n''') == '3'\nassert solution('''\nAA\nAB\nBC\nAA\n''') == '2'\nassert solution('''\nAA\nAB\nBB\nAA\n''') == '2'"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"1\"\nassert solution(\"BBBBBBBB\") == \"3\"\nassert solution(\"BAAABBBB\") == \"2\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INP) == '3'\n\nINP = 'ABCD'\nOUT = '1'\n\nassert solution(INP) == OUT\n\nINP = 'ABCB'\nOUT = '2'\n\nassert solution(INP) == OUT\n\nINP = 'AABC'\nOUT = '1'\n\nassert solution(INP) == OUT\n\nINP = 'BABC'\nOUT = '2'\n\nassert solution(INP) == OUT\n\nINP = 'ABBA'\nOUT = '1'"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AB') == '3'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\"\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABABCB') == '3'\nassert solution('CBADBA') == '1'\nassert solution('AAABCC') == '2'\nassert solution('ACDCCA') == '2'\nassert solution('ABABCCCDCD') == '3'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AB') == '3'\nassert solution('AABB') == '2'\nassert solution('AAAB') == '1'\nassert solution('AABA') == '2'\nassert solution('BAAB') == '1'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"3\""
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3 4\n''') == '3'\n\nassert solution('''\n2 1 2 1\n''') == '2'\n\nassert solution('''\n3 2 1 2\n''') == '3'\n\nassert solution('''\n4 3 1 2\n''') == '4'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"4\"\nassert solution(\"1 2 3 4 5 1\") == \"3\"\nassert solution(\"1 2 3 4 1 5\") == \"3\"\nassert solution(\"1 2 3 4 1 1\") == \"3\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 2 4\") == \"1\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 4 1 2\") == \"4\"\nassert solution(\"1 5 9 4\") == \"9\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3 4\n''') == '3'\nassert solution('''\n4 5 7 6\n''') == '10'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('5 7 10 12') == '10'\nassert solution('3 9 1 7') == '12'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('40') == '2'\nassert solution('88') == '5'\nassert solution('95') == '5'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"16 1\") == \"2\"\nassert solution(\"1002\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('103 27') == '4'"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1\n''') == '5'\nassert solution('''\n20\n1\n''') == '9'\nassert solution('''\n20\n2\n''') == '7'\nassert solution('''\n20\n3\n''') == '5'\nassert solution('''\n20\n4\n''') == '4'"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 7') == '4'\nassert solution('10 7') == '1'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n2 4\\n3 4\\n4 4\\n\") == \"4\\n\"\nassert solution(\"1 2\\n2 2\\n3 2\\n4 2\\n\") == \"4\\n\"\nassert solution(\"1 3\\n2 3\\n3 3\\n4 3\\n\") == \"4\\n\"\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"10 7\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '103 27'\n) == '4'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 19\n''') == '4'\nassert solution('''\n10 7\n''') == '2'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"101 0\") == \"2\""
    }
]