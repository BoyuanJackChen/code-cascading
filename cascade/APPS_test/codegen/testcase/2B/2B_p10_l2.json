[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 1\n\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 1\n\n\"\"\") == \"9\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('3') == '1 8 6'\nassert solution('16') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 8 6\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"1 8 6\"\nassert solution('4') == \"1 8 6\"\nassert solution('3') == \"1 8 6\"\nassert solution('2') == \"1 2\"\nassert solution('1') == \"1 2\"\n\nstdin = \"\"\"\n7\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\"\nprint(solution(stdin))\nstdin = \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\"\nprint(solution(stdin))\n\n\"\"\"\n\n1 3 4\n\n1 3 4\n2 4 6\n3 7 8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''\n3\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1,8,6'"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\nassert solution('''2\n1 2\n2 3''') == '2'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '8'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '5'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('3') == '1'\nassert solution('20') == '0'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '20 8'\nassert solution('') == '1 1'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2 2''') == '4 4'\nassert solution('''2\n3 5''') == '5 3'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n''') == '20 8'\nassert solution('''\n4\n10 2\n''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2\\n3 5\\n4 5\\n5 1\\n'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '10 2\\n2 8\\n20 4\\n5 1\\n4 1\\n5 20\\n'\nassert solution('1\\n1 1') == '1 1'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '20 8'"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '8 2'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2 3 5'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 5'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"20 8\"\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\nassert solution('''\n4 3 4\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '11'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == '24'"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\nprint(solution(input()))"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '24'\nassert solution('5 5 4') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"24\""
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24', solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''')\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56', solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''')\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nprint('Done!')"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"LLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 4 3 2''') == '4'\nassert solution('''3 2 2''') == '2'\nassert solution('''5 6 7''') == '2'\nassert solution('''8 5 2''') == '1'\nassert solution('''9 5 2''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\n\n\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRR\"\n\n\n\n\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('2') == 'R'\nassert solution('5') == 'LLRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_data_1) == \"4\"\nassert solution(test_data_2) == \"LLRR\"\nassert solution(test_data_3) == \"1\"\nassert solution(test_data_4) == \"R\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\n\nassert solution(input()) == \"LLRR\""
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\") == \"3\"\nassert solution(\"3\\n1 4 4 7 4 1\") == \"3\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\"\nassert solution(\"5\\n1 3 3 7\") == \"-1\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"1 1 2 2 5 5\") == \"2\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"2 1 2 5 5\") == \"2\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3\") == \"2\"\nassert solution(\"5\\n1 4 2 5 3 4\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3 4 3\") == \"3\"\nassert solution(\"5\\n1 4 2 5 3 4 5 3\") == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 4 3 7\") == \"3\"\nassert solution(\"5 2 5 5 2 5\") == \"3\"\nassert solution(\"3 1 2 5\") == \"2\"\nassert solution(\"4\") == \"-1\""
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == -1\nassert solution(\"2\") == 3\nassert solution(\"1 4 4 7 4 1\") == 3\nassert solution(\"5 2 5 2 5\") == 3\nassert solution(\"4\") == -1"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n4\n2 2 5 2 5\n''') == '3'\nassert solution('''\n3\n1 3 3 7\n''') == '3'\nassert solution('''\n2\n2 8\n''') == '3'\nassert solution('''\n2\n-1 -2 -3\n''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5 2 5 2 5\n''') == '3'\nassert solution('''\n4\n3 3 3 7\n''') == '3'\nassert solution('''\n6\n1 2 4 5 6\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '0'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 3 7\n\n''') == '3'\n\nassert solution('''\n5\n2 2 5 2 5\n\n''') == '-1'\n\nassert solution('''\n6\n1 4 4 7 4 1\n\n''') == '3'"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\n\nassert solution('''3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\n\nassert solution('''5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\nassert solution(input) == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\""
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\") == \"YES\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"NO\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\") == \"YES\"\nassert solution(\"3 3 7 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\n\nassert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES'\n\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == 'YES'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1098') == \"20\"\nassert solution('10') == \"19\"\nassert solution('0') == \"1\"\nassert solution('12345') == \"24\"\nassert solution('11122233334444') == \"16\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"20\""
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '21'\nassert solution('10') == '199'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '20'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0 0 0\n''') == '4 0 0 1 2'\nassert solution('''5\n0 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n0 0 1 4 5 6 7\n''') == '7 0 0 1 4 5 6 7'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5 3 1 2 4 5 6\"\nassert solution() == \"7 3 2 1 4 5 6\""
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1 4 5 2'\nassert solution('7') == '2 1 4 5 3 6'\nassert solution('7') == '2 1 4 5 3 6'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n5 0 0 2 4\\n\"\n    ) == \"5 3 1 2 4\"\nassert solution(\n    \"7\\n7 4 0 3 0 5 1\\n\"\n    ) == \"7 4 2 3 6 5 1\"\nassert solution(\n    \"7\\n0 1 4 3 5 6 1\\n\"\n    ) == \"7 4 2 3 6 5 1\"\nassert solution(\n    \"7\\n0 0 0 0 0 0 0\\n\"\n    ) == \"7 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == \"5 3 1 2 4\"\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 3 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'NO'\nassert solution('4 2') == '1 1 2 2'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4 2') == 'YES'\nassert solution('2 2 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1') == 'NO\\n'\nassert solution('5 2\\n3 2 1 2 3') == 'NO\\n'\nassert solution('10 2\\n1 1 1 2 2 2 2 1 2 1 2 2') == 'YES\\n1 1 1 2 2 2 2 2\\n'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 2 2 3\n''') == 'YES', \"Easy\"\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES', \"Medium\"\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO', \"Hard\""
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''\n5 2\n1 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n1 2 1 2\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 2 3 3\n''') == 'YES'\n\nassert solution('''5\n3\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''5\n3\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''7\n4\n1 1 2 2 2 3 3\n''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n1 2 1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 2\") == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n\n'''\n\nimport math\nimport sys\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11 5 1\n11010100101''') == \"3\"\nassert solution('''11 5 1\n11010100101''') == \"1\"\nassert solution('''11 5 2\n11010100101''') == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nYES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\\nYES\\nYES\\nNO\\nYES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\\n') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n1\n2\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n3\n2\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"11\"\nassert solution(\"111\") == \"11\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"333\"\nassert solution(\"5\") == \"5555\"\nassert solution(\"2\") == \"999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n11111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\nassert solution(\n    \"4\\n1337\\n1 2 5 4 6 6 3 1 9\"\n) == \"1557\"\nassert solution(\n    \"2\\n33\\n1 1 1 1 1 1 1 1 1\"\n) == \"33\"\nassert solution(\n    \"3\\n111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\nassert solution(\n    \"1\\n111\\n9 8 7 6 5 4 3 2 1\"\n) == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\""
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'\nassert solution('3') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('11111') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('1337') == '1553'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '4 8 16'\nassert solution('15 18 21') == '114 228 456'\nassert solution('100 100 101') == '7'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n123 321 456\\n5 10 15\") == \"1 1 3\"\nassert solution(\"4\\n1 2 3\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\""
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '3 1 1 2 3'\nassert solution('''\n1 2 3\n1 123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 3 1 1'\nassert solution('''\n2 3 4\n2 2 2 2 2\n1 2 1\n2 1 1 2\n''') == '2 3 4 1 2'\nassert solution('''\n1 1 2\n2 1 1 2\n1 2 1 2\n''') == '1 1 2'\nassert solution('''\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n1 2 1\n1 2 1\n''') == '2 2 2 2 2'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3\n1 2 3\n2 3\n1 2 3\n1 2 3\n2 3\n1 2 3\n''') == '1 1 1'\nassert solution('''\n2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '1'\nassert solution('''\n3\n3 2\n2 3\n3 2\n3 2\n3 2\n3 2\n''') == '1 1 1'\nassert solution('''\n10\n10 9\n9 8\n8 7\n7 6\n6 5\n5 4\n4 3\n3 2\n2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"15 18 21\") == \"114 228 456\"\nassert solution(\"100 100 101\") == \"7\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    1 2\n    1 1\n    ''') == '1 1 1'\n\nassert solution('''\n    2\n    1 2\n    -3 1\n    ''') == '2'\n\nassert solution('''\n    2\n    1 2\n    3 1\n    ''') == '1'\n\nassert solution('''\n    2\n    1 2\n    1 3\n    ''') == '1 2'\n\nassert solution('''\n    2\n    1 2\n    1 3\n    ''') == '2 1'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n1 2 3\n321 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '114 228 456'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4\"\nassert solution(\"15 18 21\") == \"1 2 3\"\nassert solution(\"100 100 101\") == \"7\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\""
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3\n5\n7\n\n''') == '2'\nassert solution('''\n2\n100000\n\n''') == '0'\nassert solution('''\n3\n1\n\n''') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    1, 2, 3, 4, 5\n]) == 1\n\nassert solution([\n    1, 2, 3, 7, 8\n]) == 2\n\nassert solution([\n    1, 100000, 100000, 100000, 100000\n]) == 0\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\nassert solution(\"2\\n1 1\") == \"0\""
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n10\n100000''') == '1'\nassert solution('''2\n11\n1000000000000000''') == '0'\nassert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"\nassert solution(\"2\\n3\\n1 100000\\n\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('2') == '0'\n\n---\n\n>>> solution(\n...     '1 3 3 7'\n... )\n'2'\n>>> solution(\n...     '1 100000'\n... )\n'0'\n>>> solution(\n...     '4'\n... )\n'2'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test_input_1) == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(test_input_2) == \"-1\"\nassert solution(test_input_3) == \"1 2 3 0 3\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\u041f\u0435\u0442\u044f \u043f\u0440\u043e\u0431\u0435\u0436\u0430\u043b \u0441\u043f\u0430\u0442\u044c \u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u0437\u0430\u043d\u044f\u0442\u0443\u044e \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u043e\u0439. \u041a\u043e\u0433\u0434\u0430 \u043e\u043d \u043f\u0440\u043e\u0448\u0435\u043b \u0432\u0435\u0441\u044c \u043f\u0435\u0440\u0435\u0440\u0430\u0441\u0447\u0435\u0442, \u043e\u043d \u043f\u043e\u043f\u0440\u043e\u0441\u0438\u043b \u0432\u0430\u0441 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0432 \u0432\u0438\u0434\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u0433\u043e\u0434\u0443, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439, \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439.\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432, \u043a\u0430\u0436\u0434\u044b\u0439 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f (\u0434\u043b\u044f \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0441\u0440\u043e\u043a \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u0432\u0430\u0436\u0435\u043d). \u0412 \u043d\u0430\u0447\u0430\u043b\u0435 \u0433\u043e\u0434\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u0433\u043e\u0434\u0443, \u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043f\u0430\u0440 \u0438 \u0438\u0445 \u0434\u043d\u0435\u0439.\n\n\u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0432 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u0441\u0435 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u044b \u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432 \u043e\u0434\u043d\u043e\u043c \u043d\u0435\u0434\u0435\u043b\u044e. \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u043e\u0432 \u0438 \u044d\u043a\u0437\u0430\u043c\u0435\u043d\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0445 \u0441\u043f\u043e\u0440\u0442\u0441\u043c\u0435\u043d\u0430 \u0438 \u044d\u043a\u0437"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2 3 0 3 ', solution()\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('15 3') == '1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 2 2 2 1 3 3 2 3 2 3 2 2 2 1 3 3 1 1 2 3 2 1 3 3 2 1 1 2 3 2 1 1 2 3 2 1 3 3 2 3 2 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 1 3 3 2 1 3 3 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 2 3 2"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '-1\n\nassert solution('''\n10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n\nassert solution('''\n1\n2\n3\n''') == '0 0 0 0 0 1 2 2 3 0 0 0 0'\n\nassert solution('''\n2\n2\n3\n''') == '0 0 0 0 1 2 2 3 0 0 0 0'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 3 0 3\"\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2 2 2 1 1 0 4 3 4 4'\nassert solution(input_) == '0 0 0 0 1 1 0 2 1 2'"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(0).read()) == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '120 51840\\n'\n    '42 42\\n'\n) == '7'\n\nassert solution(\n    '48 72\\n'\n    '42 42\\n'\n) == '0'\n\nassert solution(\n    '48 72\\n'\n    '48 72\\n'\n) == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12 51840''') == '7'\nassert solution('''12 42''') == '0'\nassert solution('''48 72''') == '-1'\nassert solution('''48 72''') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''120 51840\n''') == '7'\nassert solution('''42 42\n''') == '0'\nassert solution('''48 72\n''') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"48 72\") == \"7\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == -1\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\naba\\n') == 'ababababa'\nassert solution('3 2\\ncat\\n') == 'catcat'\n\n\n-----------------------------------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\nassert solution('3 4\\naba') == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"ababababa\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'ababababa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ababababa\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\ncat\") == \"cat\"\nassert solution(\"2 2\\ncat\") == \"cat\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\nassert solution('1') == ''\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\naba\\n\") == \"ababababa\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\na\nb\nc\nd\ne\n\"\"\") == \"ababab\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 1 2 4 3\") == \"2\"\nassert solution(\"2 1 2 4 3 5\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '3'\nassert solution('''\n4\n8 3 5 2\n''') == '2'\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2 1 2 4 3\n''') == '3'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3 1 2 2\n''') == '3'\nassert solution('''\n4\n2 5 1 2 2\n''') == '2'\nassert solution('''\n5\n8 3 5 2 2\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '0'\nassert solution('5') == '2'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"2\"\nassert solution('4') == \"3\"\nassert solution('5') == \"4\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '0'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\naaaaa''') == \"15\"\nassert solution('''5 7\naaaaa''') == -1\nassert solution('''10 100\najihiushda''') == 233"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('asdf') == '4'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\nassert solution('aaaaaaaaa') == '-1'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"4 6\") == \"4\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2', 'abca') == '-1'\nassert solution('4 5', 'asdf') == '4'\nassert solution('5 6', 'aaaaa') == '15'\nassert solution('5 7', 'aaaaa') == '-1'\nassert solution('10 100', 'ajihiushda') == '233'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"10 10\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\naaaaa\n''') == \"4\"\nassert solution('''5 7\naaaaa\n''') == -1\nassert solution('''10 100\najihiushda\n''') == 233"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"233\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'First example'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES', 'Second example'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO', 'Third example'"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 5 4') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\"\"\"\nimport itertools"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == \"NO\"\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\"\n''')"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\nassert solution(\"10:00\") == \"10:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('01:00\\n05:03') == '02:02'\nassert solution('06:15\\n16:23') == '16:23'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5:00') == '5:00'\nassert solution('11:11') == '11:11'\nassert solution('10:00') == '10:30'\nassert solution('10:00') == '10:30'\nassert solution('10:00') == '10:30'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('9123573') == '8'\n\n'''"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('8') == '1'\nassert solution('10') == '2'\nassert solution('42') == '6'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"3\",\"7\",\"2\",\"8\"]) == \"27\"\nassert solution([\"3\",\"10\",\"2\",\"7\"]) == \"14\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('4048') == '8'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"\nassert solution(1) == \"1\"\n\n\n## Input:\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''5''') == '3'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\nprint(solution(input))"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nprint(solution())\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"7\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n3\n2 6\n1 3\n0 4\n3 3\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '7'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n6\n1 2\n9 20\n1 5\n''') == '5'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"0 4\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '0'\nassert solution('7') == '7'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'NO'\n\nassert solution('''\n2\n10 10\n''') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 5, 5, 5, 5]) == \"YES\"\nassert solution([5, 5, 5, 5, 5, 2]) == \"YES\"\nassert solution([5, 5, 5, 5, 5, 2, 4]) == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 100\\najihiushda\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"4\", \"first\"\nassert solution(\"10 10\") == \"-1\", \"second\"\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == expected"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\nasdf\n\n''') == \"4\"\n\nassert solution('''\n5 6\naaaaa\n\n''') == \"15\"\n\nassert solution('''\n5 7\naaaaa\n\n''') == \"-1\"\n\nassert solution('''\n10 100\najihiushda\n\n''') == \"233\""
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n\" +\n                 \"aaaaa\" +\n                 \"\\n\") == \"4\"\n\nassert solution(\"4 5\\n\" +\n                 \"asdf\" +\n                 \"\\n\") == \"4\"\n\nassert solution(\"5 7\\n\" +\n                 \"aaaaa\" +\n                 \"\\n\") == \"-1\"\n\nassert solution(\"10 100\\n\" +\n                 \"ajihiushda\" +\n                 \"\\n\") == \"233\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''1 100 1\n''') == '3'\nassert solution('''30 20 10\n''') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n\") == \"3\\n\"\nassert solution(\"30 20 10\\n\") == \"39\\n\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"4\"\nassert solution(\"2 1 1\") == \"4\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\""
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 0 0') == '1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1\n\n''') == '4'\nassert solution('''3 2 2\n\n''') == '7'\nassert solution('''1 100 1\n\n''') == '3'\nassert solution('''30 20 10\n\n''') == '39'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 1, 1]) == 4\nassert solution([3, 2, 2]) == 7\nassert solution([1, 100, 1]) == 3\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1\n''') == '4'\n\nassert solution('''\n30 20 10\n''') == '39'\n\nassert solution('''\n2 2 2\n''') == '7'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('5 6') == 'YES'\nassert solution('5 7') == 'YES'\nassert solution('7 4') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\n\n'''\nThere are 4 types of tiles, with the following descriptions:\n\nTop left: 6\n\nTop right: 5\n\nBottom left: 5\n\nBottom right: 7\n\nRight: 8\n\nLeft: 9\n\nBottom center: 9\n\nTop center: 5\n\nRight center: 7\n\nMiddle: 4\n\nBottom center: 4\n\nRight top left: 1 1\n\nRight top right: 1 1\n\nRight bottom left: 1 1\n\nRight bottom right: 1 1\n\nLeft top left: 1 1\n\nLeft top right: 1 1\n\nLeft bottom left: 1 1\n\nLeft bottom right: 1 1\n\nTop left top center: 1 1\n\nTop left bottom center: 1 1\n\nTop center top center: 1 1\n\nTop center bottom center: 1 1\n\nTop center left top: 1 1\n\nTop center left bottom: 1 1\n\nTop center right top: 1 1\n\nTop center right bottom: 1 1\n\nBottom left top center: 1 1\n\nBottom left bottom center: 1 1\n\nBottom center top center: 1 1\n\nBottom center bottom center: 1 1\n\nBottom center left top: 1 1\n\nBottom center left bottom: 1 1\n\nBottom center right top: 1 1\n\nBottom center right bottom: 1 1\n\nLeft top left bottom center: 1 1\n\nLeft top left top center: 1 1\n\nLeft top right bottom center: 1 1\n\nLeft top right top center: 1 1\n\nLeft bottom left top center: 1 1\n\nLeft bottom left bottom center: 1 1\n\nLeft bottom right top center: 1 1\n\nLeft bottom right bottom center: 1 1\n\nRight top left bottom center: 1 1\n\nRight top left top center: 1 1\n\nRight top right bottom center: 1 1\n\nRight top right top center: 1 1\n\nRight bottom left top center: 1 1\n\nRight bottom left bottom center: 1 1\n\nRight bottom right top center: 1 1\n\nRight bottom right bottom center: 1 1\n\nTop center left bottom center: 1 1\n\nTop center left top center: 1 1\n\nTop center right bottom center: 1 1\n\nTop center right top center: 1 1\n\nBottom center left bottom center: 1 1\n\nBottom center left top center: 1 1\n\nBottom center right top center: 1 1\n\nBottom center right bottom center: 1 1\n\nRight top left center: 1 1\n\nRight top right center: 1 1\n\nRight bottom left center: 1 1\n\nRight bottom right center: 1 1\n\nLeft top center: 1 1\n\nLeft bottom center: 1 1\n\nRight top center: 1 1\n\nRight bottom center: 1 1\n\nTop center left: 1 1\n\nTop center right: 1 1\n\nBottom center left: 1 1\n\nBottom center right: 1 1\n\nFor example, the square is symmetric:\n\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\nSo the output should be \"YES\":\n\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('3 4') == 'NO'\nassert solution('1 2') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 2\n3"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES', solution('2 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100')\nassert solution('3 3\\n1 1\\n4 4\\n5 5\\n1 2\\n2 2\\n2 2\\n1 2\\n1 2\\n3 3') == 'NO', solution('3 3\\n1 1\\n4 4\\n5 5\\n1 2\\n2 2\\n2 2\\n1 2\\n1 2\\n3 3')\nassert solution('5 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n1 2\\n1 3\\n5 3\\n5 5\\n1 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'YES', solution('5 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n1 2\\n1 3\\n5 3\\n5 5\\n1 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1')\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100''') == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('2\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'NO'"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''2\n3 3\n1 2\n4 5\n1 2''') == \"NO\"\nassert solution('''2\n4\n1 2\n1 2''') == \"YES\"\nassert solution('''1\n3\n1 1''') == \"YES\"\nassert solution('''5\n6\n1 2\n1 2''') == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\nassert solution('''\n4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\nassert solution('''\n4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"YES\"\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''10\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''8\n''') == '1'\nassert solution('''10\n''') == '2'\nassert solution('''11\n''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n5''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n''') == '0'\nassert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n()()\n''') == '1'\nassert solution('''3\n()())\n''') == '5'\nassert solution('''2\n(((\n''') == '0'\nassert solution('''5\n(((\n''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"(()))()\") == \"0\"\nassert solution(\"()\") == \"4\"\nassert solution(\"(((()))())\") == \"5\"\nassert solution(\"(()())\") == \"4\"\nassert solution(\"((()))()()\") == \"3\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n()))()\n\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'\nassert solution('''3\n(()\n\n''') == '0'\nassert solution('''4\n(((\n\n''') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == 5\nassert solution(\"3\") == 4\nassert solution(\"2\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"5\"\nprint(solution(input_data))\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n()))()\n\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n()))()\n''') == '5'\nassert solution('''3\n(()\n\n''') == '4'\nassert solution('''2\n(((\n\n''') == '0'\nassert solution('''5\n((((\n\n''') == '7'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5071\n5701\n7501\n7510\n7150''') == '4'\nassert solution('''705\n1241367''') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == \"4\"\nassert solution('''125\n6\n7\n8\n9\n5''') == \"2\"\nassert solution('''5071\n71241\n74321\n753\n74589\n7465432''') == \"4\"\nassert solution('''705\n7319\n7794\n8021\n8139\n81443\n8143\n81453\n81463''') == \"1\"\nassert solution('''12345\n67890\n91011\n92134\n92345\n92450''') == \"5\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\n\nassert solution(input) == -1"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n'''"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nabcd\\n') == '4\\n1 1 1 1 1\\n'\nassert solution('6\\nabcd\\n') == '2\\n1 1 1 1 1 2\\n'\nassert solution('9\\nabacbecfd\\n') == '2\\n1 1 1 2 1 2 1 2 1\\n'\nassert solution('12\\naaabbcbb\\n') == '2\\n1 2 1 2 1 2 1 1 2\\n'\nassert solution('7\\nabcde\\n') == '3\\n1 1 1 1 1 1 1\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nabcd') == '1'\nassert solution('3\\nabcd') == '1 2 1'\nassert solution('2\\nabcd') == '1 2 1 2'\nassert solution('1\\nabcd') == '1 1 1 1 1'\nassert solution('8\\nabccde') == '1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n'\n    'a'\n) == '1\\n'\n\n\nassert solution(\n    '2\\n'\n    'a'\n) == '1\\n'\n\n\nassert solution(\n    '2\\n'\n    'c'\n) == '1\\n'\n\n\nassert solution(\n    '3\\n'\n    'a'\n) == '2\\n'\n\n\nassert solution(\n    '4\\n'\n    'a'\n) == '3\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"abc\") == \"2\"\nassert solution(\"abcd\") == \"2\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 1 1 1 1'\nassert solution('3') == '1 2 2 2 2'\nassert solution('4') == '1 3 1 3 1'\nassert solution('5') == '1 4 1 4 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 1 1 1'\nassert solution('4') == '1 1 1 1 1'\nassert solution('5') == '1 1 1 1 1'\nassert solution('6') == '1 1 1 1 1 1'\nassert solution('7') == '1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\na\nb''') == 'NO'\nassert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\na\\nb\\nc\\n') == \"NO\"\nassert solution('5\\na\\naba\\nabacaba\\nba\\n') == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == \"YES\"\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n\n''') == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\n\nstdin = \"\"\"3\nab\na\nb\n\n\"\"\"\n\n\"\"\"\n\nInput\n5\nab\na\nb\n\nOutput\nYES\nab\na\nb\n\nInput\n5\na\nab\na\nb\n\nOutput\nNO\n\nInput\n3\nqwerty\nqwerty\nqwerty\n\nOutput\nYES\nqwerty\nqwerty\nqwerty\n\n\"\"\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"YES\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4\\n'\n                '4 2 3 1 5 1 6 4') == '5'\n\nassert solution('5 2\\n'\n                '3 1 2 1 3') == '0'\n\nassert solution('5 100\\n'\n                '12 34 55 43 21') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"5\"\nprint(solution(input))\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution(\"4 4\") == '5'\nassert solution(\"5 2\") == '0'\nassert solution(\"5 100\") == '5'\nassert solution(\"4 1 2 1 3\") == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n\n'''\n\nn, k = map(int, input().split())\nli = list(map(int, input().split()))\n\nmishka_first = li[0]\nmishka_last = li[-1]\n\ncount = 0\n\nwhile len(li) > 0:\n    if mishka_first <= mishka_last:\n        if mishka_first <= k and mishka_last >= k:\n            mishka_last = max(li)\n            li.remove(max(li))\n            count += 1\n        elif mishka_first >= k:\n            mishka_first = min(li)\n            li.remove(min(li))\n            count += 1\n    else:\n        mishka_first = min(li)\n        li.remove(min(li))\n        count += 1\n\nprint(count)"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('5 100 2') == '5'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"5 2\") == \"5\"\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 4]) == \"12\"\nassert solution([3, 9]) == \"14\"\nassert solution([3, 6]) == \"12\"\nassert solution([506, 2708]) == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\") == \"12\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 4\\n') == '12'\n\nassert solution(\n    '3 9\\n') == '14'\n\nassert solution(\n    '3 6\\n') == '12'\n\nassert solution(\n    '506 2708\\n') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '18'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1\\n\") == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'NO'\nassert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('6') == 'YES'\nassert solution('8') == 'YES'\nassert solution('9') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"10\") == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nabacb') == 'YES'\nassert solution('10\\nabacb') == 'NO'\nassert solution('0\\nabcde') == 'YES'\nassert solution('1\\nabcd') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"25\"\nassert solution(\"1 10\") == \"25\"\nassert solution(\"2 10\") == \"25\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"4 5\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 10\n''') == '25'\nassert solution('''\n3 4\n''') == '-1'\nassert solution('''\n2 2\n''') == '25'\nassert solution('''\n3 4\n''') == '-1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"10 10\") == \"25\"\nassert solution(\"1 1\") == \"-1\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('4 2') == '25'\nassert solution('3 2') == '25'\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"\nimport math\nA, B = map(int, stdin.split())\n\nans = 100000000000000000000000\nans2 = 0\n\nfor i in range(A, B):\n    tmp = math.floor(i * 0.08)\n    tmp2 = math.floor(i * 0.1)\n    if tmp < tmp2:\n        if tmp < ans:\n            ans = tmp\n            ans2 = i"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '25'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"2 2\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 4\") == \"25\"\nassert solution(\"0 5\") == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n5 6\n''') == '25'\nassert solution('''4 7\n2 2\n''') == '-1'\nassert solution('''6 4\n7 4\n''') == '7'\nassert solution('''1 3\n4 3\n''') == '4'\nassert solution('''2 3\n4 3\n''') == '4'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"7 8\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"YES\"\nprint(solution(input_string))"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"1 4\") == \"NO\"\nassert solution(\"1 5\") == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"YES\"\nassert solution(\"1 2\\n\") == \"NO\"\nassert solution(\"1 1\\n\") == \"YES\"\nassert solution(\"8 2\\n\") == \"NO\"\nassert solution(\"8 3\\n\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n25 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n20 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('26 6') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n1 2\n3 4\n5 6\n7 8\n''') == 'YES\\n3 4\\n2 6\\n5 8\\n'''\nassert solution('''\n6 7\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == 'NO\\n'''\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 6\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 1\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO\\n'"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('5 10') == '5'\nassert solution('5 10') == '5'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n5 3\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n        '5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\n    assert solution(\n        '3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\n    assert solution(\n        '3 1\\n300 -300\\n1 299\\n1 123\\n') == '3'\n    assert solution(\n        '1 0\\n300 -300\\n1 299\\n1 123\\n') == '1'\n    assert solution(\n        '0 0\\n300 -300\\n1 299\\n1 123\\n') == '0'\n    "
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"8 -1\") == \"8\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n\nassert solution('''\n1 2\n10 -2\n''') == '1'\n\nassert solution('''\n1 10\n2 -1\n''') == '0'\n\nassert solution('''\n1 100\n2 -1\n''') == '1'"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n6 8\\n10 -2\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\""
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('10 -2') == '9'\nassert solution('8 -1') == '7'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('10') == 'YES'"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2 1\n3 2 2\n2 2 2\n3 3 3\n3 3 3\n3 3 3\n1 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n''') == \"NO\"\nassert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n\n''') == \"YES\"\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n\n''') == \"NO\""
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('1') == 'YES'\nassert solution('5') == 'YES'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('10') == 'YES'\n\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''\n100 10\n99 -10\n100 -10\n1 -100\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES', \"easy\"\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES', \"easy\"\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES', \"easy\"\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO', \"easy\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n3 4\n5 2\n5 -3\n2 1\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == \"YES\"\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == \"YES\"\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == \"YES\"\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n4 2\n4 0\n10 -10\n5 -3''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n\n--or--\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test) == \"YES\"\nassert solution(easy) == \"YES\"\nassert solution(hard) == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 11\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n1\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n2\") == \"NO\"\nassert solution(\"10 1 5\\n1\") == \"NO\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n7 1 5\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''\n7 1 11\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 0 1'"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == \"YES\"\nassert solution('''\n10 1 11\n1\n''') == \"YES\"\nassert solution('''\n10 1 5\n2\n''') == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1 11\n1\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 \n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcde\") == \"abcde\"\nassert solution(\"baaba\") == \"bb\"\nassert solution(\"asdfasdf\") == \"0\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 1\nassert solution(\"baaba\") == 2\nassert solution(\"ab\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3, 'One test failed'\nassert solution('bb') == 2, 'One test failed'\nassert solution('abcde') == 0, 'One test failed'\nassert solution('asdfasdf') == 3, 'One test failed'"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == 3\nassert solution(example_input_2) == 2\nassert solution(example_input_3) == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"ab\") == 2\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string()) == 0\nassert solution(input_string((\"\"\"\nbbaba\nbb\n\"\"\", \"\"\"\nbbaba\nab\n\"\"\", \"\"\"\nabcde\nabcde\n\"\"\"))) == 3\nassert solution(input_string((\"\"\"\nasdfasdf\nfasd\n\"\"\", \"\"\"\nbbaba\nab\n\"\"\", \"\"\"\nabcde\nabcde\n\"\"\"))) == 0"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3 2\"\nassert solution(\"10 3\") == \"10 3\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"3 2\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3 2\"\nassert solution(\"2.07\") == \"3 2\"\nassert solution(\"0.15\") == \"3 2\"\nassert solution(\"-5.00\") == \"9 5\"\nassert solution(\"1.50\") == \"2 3\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == \"3 2\"\nassert solution('2.572479') == \"10 3\"\nassert solution('4.024922') == \"9 9\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 3 2\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\""
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\""
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\nassert solution(\"6 2 3\") == \"NO\", \"Should print \"NO\" if the tree does not satisfy the conditions.\"\nassert solution(\"10 4 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\nassert solution(\"8 5 3\") == \"YES\", \"Should print \"YES\" if the tree satisfies the conditions.\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"6 3 3\n\"\"\") == 'YES', f\"Your solution {solution('')} did not work\"\nassert solution(\n\"\"\"6 2 3\n\"\"\") == 'NO', f\"Your solution {solution('')} did not work\"\n\nassert solution(\n\"\"\"10 4 3\n\"\"\") == 'YES', f\"Your solution {solution('')} did not work\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"1100\", \"Wrong!\"\nassert solution(\"2 2 1\") == \"1100\", \"Wrong!\"\nassert solution(\"3 3 3\") == \"101100\", \"Wrong!\"\nassert solution(\"5 3 6\") == \"01010100\", \"Wrong!\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1\n''') == '1100'\nassert solution('''3 3 3\n''') == '101100'\nassert solution('''5 3 6\n''') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"0011\"\nassert solution(input()) == \"110100\"\nassert solution(input()) == \"101100\"\nassert solution(input()) == \"011001\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 6''') == '01010100'\nassert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"110100\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO', 'First'\nassert solution('3') == 'YES', 'Second'\nassert solution('1') == 'YES', 'Third'\n\n\n'''\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\n\nstdin = \"\"\"\n3\nab\nbc\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"ababab\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ac\") == \"YES\"\nassert solution(\"abca\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nab\\nbc') == 'acbbac'\nassert solution('2\\nab\\nbc') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"bc\") == \"NO\"\nassert solution(\"aa\") == \"YES\"\nassert solution(\"bc\") == \"YES\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('5') == '1 2 3 4 5'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"-2 1\") == \"-2 1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2, 1, 1, 2') == '2, 1, 1, 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n1 1 1 1\n\"\"\") == \"1 2 3 4 5\"\nassert solution(\"\"\"5\n-1 2 2\n\"\"\") == \"-1\"\nprint(solution(input()))"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3 1 2\"\nassert solution() == \"1 2 3\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('2') == '1'\nassert solution('5') == '3 1 2 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('7') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 2 1\") == \"1 1 2\"\nassert solution(\"2\\n1 1\") == \"1 2\"\nassert solution(\"2\\n2 2\") == \"2 2\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 2\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"-1\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3\n''') == '1'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2 3\n''') == '1'\nassert solution('''10\n1 2 2 3 3 3 1 1 2 3 3 1 1\n''') == '5'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n''') == '1', f'''Your first solution ({solution('''3\n1 2 3\n''')}) did not work. Fix it.'''\nassert solution('''5\n2 2 2 3 3\n''') == '2', f'''Your second solution ({solution('''5\n2 2 2 3 3\n''')}) did not work. Fix it.'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"30\") == \"3\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '4'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 2 2 3 3') == '2'\nassert solution('10\\n0 0 0 1 1 1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INP_1) == \"1\"\nassert solution(INP_2) == \"2\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5\"\n\n\"\"\"\n\nimport sys\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('10\\n') == '5\\n'\nassert solution('100\\n') == '25\\n'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('10') == '5'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '5'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"10\\n\"]) == \"5\"\nassert solution([\"10\\n\"]) == \"5\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('7') == '3'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"319\") == \"119 226\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('3') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"319\") == \"119 226\"\nassert solution(\"686\") == \"22 334\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\"\n\n---------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 2'\nassert solution('10') == '1 1 1'\nassert solution('15') == '0 15'\nassert solution('15') == '1 1 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '22 334'\nassert solution('6') == '2 2'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '3 4 4 4 4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n4 1 2 2 1 5 3\"\n) == \"3\\n7 7\\n2 3\"\n\nassert solution(\n    \"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\n) == \"2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\"\n\nassert solution(\n    \"4\\n1 1 1 1\"\n) == \"4\\n4 4\\n1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3 7 7'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 4 4'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3''') == '2 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nprint(solution(input()))"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n''') == '4 4 4 4 4'\nprint(solution(input()))\n\n@author Ntruong\n'''\nimport sys"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 4 4 4 4'\nassert solution('''\n3\n3 3\n1 1\n2 2\n''') == '3 4'\nassert solution('''\n7\n1 1 1 1 1 5 3\n''') == '2 4'\nassert solution('''\n4\n1 1 1 1\n1 2\n2 3\n3 4\n''') == '2 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 1'\nassert solution('4') == '4 4'\nassert solution('11') == '4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 5 5 4 3 2 1 1'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_2) == \"NO\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n3 1 2\n'''\n) == 'YES'\n\n\nassert solution(\n'''\n4\n3 2 2 3\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n5\n3 2 4 3 2\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n5\n1 2 3 4\n'''\n) == 'NO'\n\n\nassert solution(\n'''\n7\n1 2 3 4 3 2 1\n'''\n) == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '-1'\nassert solution('4') == '0'\nassert solution('6') == '4'\nassert solution('6') == '3 5 4 5'\nassert solution('6') == '4 5 3 5'"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'accd\\n'\n) == '-1'\n\nassert solution(\n    '4\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'abcd\\n'\n    'abcd\\n'\n    'accd\\n'\n    'accd\\n'\n) == '4 3 5 4 5'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '-1'\n\nassert solution('''\n3\nabcd\naccd\n\n''') == '4 5 4 5'\n\nassert solution('''\n10\naabcdefghijk\naabbccddeeffghi\n\n''') == '2 6 3 1 7 5 4 1 9 2 6 8 5'\n\nassert solution('''\n4\nabcdef\naccd\n\n''') == '1 5 4'\n\nassert solution('''\n4\nabcd\naccd\n\n''') == '1 4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    4\n    abcd\n    ''') == '-1'\n\nassert solution('''\n    2\n    aa\n    bb\n    ''') == '4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '4'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"-1\"\nassert solution() == \"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PSPS'\nassert solution('2') == 'PS'"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"SPPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PSPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PSPSPSPS\"\n\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PPSPPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"SPPS\"\nassert solution(\"3\") == \"PSPS\"\nassert solution(\"4\") == \"PS\"\n\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"PPS\"\nassert solution(\"2\") == \"PS\"\nassert solution(\"1\") == \"SP\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\na\naa\naaa\na\n''') == 'PS'\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n''') == 'SPPSPSPS'\nassert solution('''\n2\na\nc\n\n''') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"SPPSPSPS\"\nassert solution() == \"PSPSPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'PPSS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\naba\\nab\") == \"PPS\"\nassert solution(\"3\\na\\nab\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'SPPSPSPS', \"Wrong\"\nassert solution('3') == 'PS', \"Wrong\"\nassert solution('2') == 'PS', \"Wrong\"\nassert solution('2') == 'PS', \"Wrong\"\nassert solution('1') == 'P', \"Wrong\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,4,6,8,10]) == \"1\"\nassert solution([3,4,6,8,10]) == \"2\"\nassert solution([2,3,6,8,10]) == \"3\"\nassert solution([1,2,3,4,5]) == \"5\"\nassert solution([5,4,3,2,1]) == \"4\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('2 4 6 8 10') == '2'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"2\"\n\"\"\"\nn, *a = map(int, input().split())\na.sort(reverse=True)\nprint(a[0])\n\"\"\"\nn, *a = map(int, input().split())\na.sort(reverse=True)\nprint(a[0])\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5\n5\n3\n''') == '1'\n\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '2'\n\nassert solution('''\n10\n5\n5\n4\n4\n3\n2\n2\n2\n''') == '1'\n\nassert solution('''\n20\n50\n40\n20\n10\n10\n10\n10\n10\n10\n10\n''') == '2'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 7 4 5 6\") == \"1\"\nassert solution(\"3 4 7 5 6\") == \"2\"\nassert solution(\"0 1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n''') == '1'\nassert solution('''\n3\n10\n10 10\n9 9\n8 8\n7 7\n''') == '4'\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 4 3\") == \"1\"\nassert solution(\"3 3 4 5\") == \"2\"\nassert solution(\"2 4 8 4\") == \"1\"\nassert solution(\"2 1 1 2\") == \"1\"\nassert solution(\"10 4 4 2\") == \"1\"\n\n\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4, 2, 5, 7, 3, 1, 1, 2, 4,"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    6\n    8\n    10\n    ''') == '1'\n\nassert solution('''\n    2\n    4\n    6\n    8\n    10\n    ''') == '0'\n\nassert solution('''\n    8\n    8\n    10\n    ''') == '1'\n\nassert solution('''\n    6\n    8\n    10\n    ''') == '0'\n\n''')\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 3 2 1') == '3'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '2'\nassert solution('10') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10\\n'\n    '1 1 0 1 1 0 1 0 1 0\\n'\n    '5\\n'\n    '1 1 1 1\\n') == '2'\nassert solution(\n    '5\\n'\n    '1 1 1 1\\n') == '0'\nassert solution(\n    '4\\n'\n    '1 1 1\\n') == '0'\nassert solution(\n    '20\\n'\n    '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 1 0 1 1 0 1 0 1 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('5\\n1 1 1 1') == '1'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n\"\"\"\n\nimport math\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, *a = map(int, stdin.split())\n        # print(n, a)\n        if max(a) == 0:\n            return str(0)\n\n        a = list(map(lambda x: 1 if x else 0, a))\n        # print(a)\n\n        m = 1\n        for i in range(1, n):\n            if a[i - 1] == a[i + 1]:\n                m += 1\n\n        print(m)\n        return str(m)\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"6\\n6 90 12 18 30 18\\n\") == \"4\""
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('5') == 1\nassert solution('10') == 2\nassert solution('4') == 1\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('3\\n2 6 8') == '3'\nassert solution('10\\n1000 9 10 9 8 7 6 5 4 3 2 1') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n1 2 3 4 5\\n') == '1'\nassert solution(\n    '6\\n6 90 12 18 30 18\\n') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"3\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution([1, 2, 3, 4, 5]) == \"1\"\nassert solution([6, 90, 12, 18, 30, 18]) == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1\n3\n4''') == '1'\nassert solution('''1\n3\n7''') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('6\\n90 12 18 30 18') == '4'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('5\\n1 2 3 4 5') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('50') == '3'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\n\nassert solution('''2\n100\n''') == '1'\n\nassert solution('''2\n0\n''') == '0'\n\nassert solution('''1\n1\n''') == '0'\n\nassert solution('''3\n1 1 1\n''') == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('100') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n100\n''') == '2'\nassert solution('''\n2\n100\n''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('100') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"2\"\n    ) == \"2\\n\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('6') == '3'\nassert solution('100') == '4'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 2 3 3 3 2\") == \"2\"\nassert solution(\"1 2 2 2 3 3 3 3\") == \"2\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\"\n) == \"3\", \"First\"\nassert solution(\n    \"\"\"\n5 3\n1 0 0 0 1\n\"\"\"\n) == \"2\", \"Second\"\nassert solution(\n    \"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"3\", \"Third\"\nassert solution(\n    \"\"\"\n5 10\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"2\", \"Fourth\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''10 10\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''\n5 10\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6 2\\n'\n    '0 1 1 0 0 1\\n'\n) == '3'\n\nassert solution(\n    '5 3\\n'\n    '1 0 0 0 1\\n'\n) == '2'\n\nassert solution(\n    '5 10\\n'\n    '0 0 0 0 0 0\\n'\n) == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"-1\"\nassert solution(\"10 3\\n1 0 0 0 1\\n\") == \"2\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n5 3\n1 0 0 0 1\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\") == \"3\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''15 3\n0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data_01) == \"3\"\nassert solution(input_data_02) == \"2\"\nassert solution(input_data_03) == \"0\"\nassert solution(input_data_04) == \"-1\""
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '-1'"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('12') == '6'\nassert solution('5') == '3'\nassert solution('18') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('10') == '6'\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '5'\n\"\"\"\n\n\"\"\"\n---My Solution---\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\\n\"\nassert solution(\"2\") == \"2\\n\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"6\"\nassert solution(\"5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\n'''"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"3\\n\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(((())\n''') == '')\nassert solution('''\n)()()\n''') == 0\nassert solution('''\n(()\n''') == 1\nassert solution('''\n()\n''') == 2\nassert solution('''\n)\n''') == 3\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"()\") == \"0\"\nassert solution(\"(()\") == \"0\"\nassert solution(\"(())\") == \"0\"\nassert solution(\")()\") == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s1) == \"3\", f\"actual: {solution(s1)}, expected: {3}\"\nassert solution(s2) == \"0\", f\"actual: {solution(s2)}, expected: {0}\"\nprint(solution.__doc__)"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(6) == 3\nassert solution(8) == 0"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"()\") == 1\nassert solution(\"(())(\") == 1\nassert solution(\"(())(()\") == 2\nassert solution(\"(((((((((((()()()()(((()()()(())())()()))(((((()())(((((()()())((())))))))()))))))()))()()))))))\") == 2\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(((())') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == \"3\"\nassert solution('6') == \"0\"\nassert solution('8') == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((())') == '3'\nassert solution('()()()') == '0'\nassert solution('(())') == '0'\nassert solution('(((())))') == '0'\nassert solution('((((()))))') == '3'\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3, \"WRONG\"\nassert solution(\"bb\") == 1, \"WRONG\"\nassert solution(\"bbba\") == 0, \"WRONG\"\nassert solution(\"baaba\") == 2, \"WRONG\"\nassert solution(\"ab\") == 1, \"WRONG\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == solution(s)\n\n'''\nfrom itertools import combinations\nfrom collections import Counter"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ababa\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"bbaba\") == 3\nassert solution(\"bcabcde\") == 3\nassert solution(\"bcde\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\nassert solution('''\nbaaba\nab\n''') == 2\nassert solution('''\nabcde\nabcde\n''') == 0\nassert solution('''\nasdfasdf\nfasd\n''') == 3"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('asdfasdf') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"bbaba\") == 3\nassert solution(\"bbba\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"bbaba\",\n    \"bb\",\n) == 3\n\nassert solution(\n    \"baaba\",\n    \"ab\",\n) == 2\n\nassert solution(\n    \"abcde\",\n    \"abcde\",\n) == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"bbb\") == 1\nassert solution(\"\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 3"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n-10 -10 -10 -10\n''') == '-10'\nassert solution('''\n2 3 2 2\n''') == '8'\nassert solution('''\n4 5 5 6\n''') == '6'\nassert solution('''\n1 2 2 2\n''') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(input) == your_output\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 2\") == '2'"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 2 2 2\") == \"4\"\nassert solution(\"2 2 5 5\") == \"7\"\nassert solution(\"2 2 3 3\") == \"6\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 3 4 4') == '8'\nassert solution('5 5 7 5') == '5'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 1 3''') == '2'\nassert solution('''1 2 1 1''') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 2') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 2') == '1'\nassert solution('1 2 3 4') == '6'\nassert solution('1 0 0 0') == '0'\nassert solution('0 0 0 1') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '2'\nassert solution('6\\n') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"1\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == '2'\nassert solution(\"4\") == '1'\nassert solution(\"5\") == '0'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1 4 5\\n') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('7\\n8 5 1 4 3 6 9\\n') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n\"\"\"\nimport math\nimport sys\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 1 2') == '1'\nassert solution('8 5 4 2') == '2'\nassert solution('4 6 3 2') == '3'\n\n'''\n\n\nimport math\nfrom itertools import accumulate\n\nh, n, l, r = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ngood_time = list(range(l, r + 1))\ngood_time = list(accumulate(good_time))\n\nprint(max(good_time))"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 24 21 23') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22''') == \"3\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n20 21 23\n''') == '3'\nassert solution('''\n20\n''') == '0'\nassert solution('''\n20\n1 23\n''') == '3'\nassert solution('''\n20\n0 3\n''') == '0'\nassert solution('''\n7\n16 17 14 20 20 11 22\n''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"5 10 10 20 20\") == \"1\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n\nassert solution('''\n8 12 8 14 12 10 18\n12 13 8 14 8 10 18\n''') == '2'\n\nassert solution('''\n5 12 5 17 5 12\n17 5 12 5 12\n''') == '1'\n\nassert solution('''\n8 12 8 14 12 10 18\n12 13 8 14 8 10 18\n''') == '2'\n\nassert solution('''\n7 6 4 5 8 10\n8 5 3 5 7 7\n''') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == \"1\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == 3\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\nassert solution() == \"1\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 10 50 110 250') == '4'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('5\\n1 2 5 6 7 10 21 23 24 49') == '1'\nassert solution('6\\n1 2 3 4 5 6 7') == '0'"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 10 50 110 250\\n\") == \"4\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"10 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 10 50 110 250\\n\"\n    \"4 7 12 100 150 199\\n\"\n    \"5 2 6 7 10 21 23 24\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 7 12 100 150 199\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 5 6 7 10 21 23 24\\n\"\n    \"5 6 7 10 21 23 24\\n\"\n    \"4 3 12 100 150 199\\n\"\n    \"10 4 7 12 100 150 199\\n\"\n    \"1 2 10 5 6 7 10 21 23 24 49\\n\"\n    \"5 6 7 10 21 23 24 49\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"4 3 12 100 150 199\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"5 6 7 10 21 23 24 49\\n\"\n    \"2 1 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"1 2 5"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\nassert solution('7\\n5 2 11 3 7') == '1 4'\nassert solution('8\\n5 2 11 3 7') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n8\\n3\\n6\") == \"1 2\"\nassert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"6\\n5 2 11 3 7\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\"\nassert solution(\"5\\n2 5 10 1 10 2\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\"\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4 8 3 6\n5 2 11 3 7\n''') == '1 2'\nassert solution('''5\n2 4 8 3 6\n''') == '2 4'\nassert solution('''5\n1 2\n''') == '1 2'"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''5\n5 2 11 3 7\n''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 3\") == \"1 2\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"121\") == \"021\"\nassert solution(\"120110\") == \"120120\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211220'\nassert solution('''6\n120110''') == '120120'\n\nprint(solution(input()))"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"021\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    121\n    ''') == '021'\nassert solution('''\n    6\n    000000\n    ''') == '001122'\nassert solution('''\n    6\n    211200\n    ''') == '211200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"00\"\nassert solution(\"1\") == \"01\"\nassert solution(\"0\") == \"10\"\nassert solution(\"2\") == \"00\"\nassert solution(\"0\") == \"01\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    121\n    ''') == '021'\nassert solution('''\n    6\n    000000\n    ''') == '001122'\nassert solution('''\n    6\n    211200\n    ''') == '211200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211200'\nassert solution('''6\n120110''') == '120120'"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '5'\nassert solution('6 4') == '6'\nassert solution('6 5') == '6'\nassert solution('6 6') == '6'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"6 1\\n4\") == \"4\"\nassert solution(\"6 1\\n5\") == \"5\"\nassert solution(\"6 1\\n6\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('10 1') == '10'\nassert solution('5 2') == '2'\nassert solution('10 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('12 1') == '5'\nassert solution('12 3') == '2'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '4'\nassert solution('6 3') == '4'\nassert solution('6 4') == '3'\nassert solution('6 5') == '3'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"7\"\nassert solution(\"3 4 1 2 3\") == \"9\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 1\n3\n''') == '4'\nassert solution('''\n6 1\n2\n''') == '2'\nassert solution('''\n6 1\n4\n''') == '4'\nassert solution('''\n6 1\n3\n''') == '4'\nassert solution('''\n6 2\n2\n''') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 1\n3\n\n''') == '4'\nassert solution('''6 2\n3\n\n''') == '3'\nassert solution('''6 3\n1\n2\n3\n\n''') == '0'\nassert solution('''6 4\n1\n2\n3\n4\n\n''') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 0') == '1'\nassert solution('6 -1') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"6 2 4\") == \"2\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 4\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5\") == \"3\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"4 5 6\") == \"5\"\nassert solution(\"4 5 4\") == \"4\"\nassert solution(\"4 3 2\") == \"3\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 4\\n') == '2'\nassert solution('6 1 4\\n') == '1'\n\n\"\"\"\n\nstdin = input()\nX, K, D = stdin.split()\nX, K, D = int(X), int(K), int(D)\n\nX = X + (D - 1) * K\nX = X + abs(X - (D - 1)) * K\n\nprint(int(X))\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 -2\") == \"1\"\nassert solution(\"-1 2 -2\") == \"1\"\nassert solution(\"-1 -2 2\") == \"1\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == \"2\"\nassert solution('5 3 5') == \"5\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"5 2 4\") == \"4\"\nassert solution(\"6 9 7\") == \"6\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 1') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('5 5 -2') == '2'\nassert solution('2 9 1') == '1'\nassert solution('-4 4 5') == '5'\nassert solution('-5 4 5') == '4'\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 4') == '4'\nassert solution('5 1 10') == '1'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"101\") == \"2\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"123456\") == \"1\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '1'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n\n\"\"\""
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('31415') == '1'\nassert solution('3,14,15') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('6') == '1'\nassert solution('1000000') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"27\"\nprint(solution(__import__(\"sys\").stdin.read()))\n\n\n\n\n\n\"\"\"\n\n\nfrom sys import stdin\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"27\"\nassert solution(\"2\") == \"4\"\n\"\"\"\n\na = int(input())\n\nprint(f\"{(a+1)%27}\")"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"20\"\nassert solution(\"7\") == \"21\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\">3\") == \"012\"\nassert solution(\"<3\") == \"213\"\nassert solution(\"<=-3\") == \"213\"\nassert solution(\"==-3\") == \"213\"\nassert solution(\"=<-3\") == \"213\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '9'\nassert solution('10') == '36'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '27'\nprint('Super solution')\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5', f\"Your solution {solution('5')} did not pass the assertion test\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint('use os.environ.get(\"ABC\")')\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('927') == '0'\nassert solution('48') == '1'\nassert solution('132') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n2 5 3 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == ''\nassert solution('2 5 3 1') == '4'\nassert solution('12 5 3 1') == '10'\nassert solution('13 5 3 1') == '10'\nassert solution('14 5 3 1') == '11'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 3 1') == '1'\nassert solution('4 5 3 1') == '2'\nassert solution('2 2 2 3 1') == '2'\nassert solution('3 3 3 1') == '2'\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '4'\n\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 5 3 1') == \"4\"\nassert solution('3 2 4 1 1') == \"5\"\nassert solution('1 2 3 4 5') == \"10\"\nassert solution('2 2 5 6 5') == \"9\"\nassert solution('1 3 5 6 7') == \"11\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 3\") == \"5\"\nassert solution(\"2 5 3 1\") == \"2\"\n\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 3 1\") == \"4\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n1\n10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n6\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n6\n8 7\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\nassert solution('''\n6\n8 7\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\nassert solution('''\n6\n999999999999999999999999999999\n999999999999999999999999999999\n''') == '999999999999999999999999999999'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == \"1\"\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999734\n''') == \"99999732\"\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == \"99999733\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n') == '2'\n\nassert solution('4\\n5 1\\n6 7\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('2\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('3\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'\n\nassert solution('1\\n1 1\\n99999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999') == '1'"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n'''"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n''')\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''5\n8 7\n8 1\n6 10\n999999999 999999997\n99999999 999999999\n''') == '1'\nassert solution('''5\n8 7\n8 1\n6 10\n999999999 999999997\n99999999 999999999\n''') == '99999999'\nassert solution('''5\n8 7\n8 1\n6 10\n99999999 999999997\n99999999 999999999\n''') == '99999999'\nassert solution('''5\n8 7\n8 1\n6 10\n99999999 999999997\n99999999 999999999\n''') == '99999999'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(input) == '8'\nassert solution(input) == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n0 1\") == \"1\"\nassert solution(\"10 10\\n1 3 2 1 4 5 3 5\\n1 2\") == \"16\"\nassert solution(\"5 5\\n3 2 3 2 2\\n1 2 1 2 2 2\") == \"12\"\nassert solution(\"5 5\\n4 1 4 2 1 2\\n0 1 2 1 1 1 1\") == \"60\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 3 4 5\n1 3\n0 1\n''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n') == '1'\nassert solution('3 3\\n2 1 3\\n1 3\\n0 2\\n') == '4'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n1 1\\n0 1\") == \"0\"\nassert solution(\"4 4\\n2 2\\n1 1\\n0 0\") == \"4\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '2'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n0 1\\n') == '1'\nassert solution('3 3\\n1 2 3\\n1 2 4\\n0 1 2\\n0 3\\n') == '4'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1'\nassert solution(input_t) == '2'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == \"1\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 10 5\") == \"11.0\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 3 4 5') == '1.00000000000000'\nassert solution('2 4 8 12') == '4.00000000000000'\nassert solution('5 4 8 15') == '4.00000000000000'\nassert solution('4 5 8 12') == '2.00000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.0000000000'\nassert solution('3 4 5 6') == '5.0000000000'\nassert solution('3 4 5 6 7') == '5.0000000000'\nassert solution('3 4 5 6 7 8') == '5.0000000000'\nassert solution('3 4 5 6 7 8 9') == '5.0000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"8 1 3 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 8 0\") == \"5.00000000000000000000\"\nassert solution(\"4 3 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 3 1 1\") == \"4.00000000000000000000\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('100 100 100 0') == '200.000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 10 0''') == '5.00000000000000000000'\nassert solution('''4 5 9 0''') == '5.00000000000000000000'\nassert solution('''1 1 10 0''') == '3.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '5.0'\nassert solution('2 2 5') == '5.0'\nassert solution('3 2 5') == '5.0'\nassert solution('4 2 5') == '5.0'\nassert solution('5 2 5') == '5.0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 9 1') == '5.00000000000000000000'\nassert solution('3 4 8 1') == '3.800000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\"\nassert solution(\"1234 5678 90\") == \"96.09638963886889\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 9 0''') == '5.00000000000000000000'\nassert solution('''2 4 3 5''') == '5.00000000000000000000'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == '8'\nassert solution(\"3 1\") == '6'\nassert solution(\"15 2\") == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n 1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n 1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n\n\n\"\"\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 4\n1 4 5 60 4\n''') == '8'\n\nassert solution(\n'''\n3 1\n1 1 1\n''') == '6'\n\nassert solution(\n'''\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\nprint(\"Congratulations! All test cases passed\")"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('15 2\\n1 1 1\\n') == '97'\nassert solution('4 4\\n1 1 1 1\\n') == '5'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '8'\n\n'''\n\nn, m = list(map(int, stdin.strip().split()))\na = list(map(int, stdin.strip().split()))"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n2\\n3 2\\n\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n    \"\"\") == \"6\"\n\nassert solution(\n    \"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n    \"\"\") == \"7\"\n\nassert solution(\n    \"\"\"\n1 0\n1000000\n    \"\"\") == \"0\""
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"1 0\") == \"0\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"6\\n2\\n3 2\\n\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\nassert solution('''\n1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '2'\nassert solution() == '6'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nczzzzzzzz\nzzzzzzzzzzzzzzzz\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n\"\"\") == \"\"\"Yes\"\"\".replace(\"\\n\", \"\")\n\n\"\"\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\n'''\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'No'"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'Yes'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nx\nx\nx\nx\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nabc\nzabc\nzabcb\n\"\"\") == \"Yes\""
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''\n1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('5 4') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"6\\n2\\n4\\n2\\n3\\n2\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('3 5') == '3 2'"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input) == example_output\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 4') == '2'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '6'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('5 4') == '6'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('4') == '4'\n\n'''\n\nimport heapq"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n\nassert solution() == 'LLRL'\n\nassert solution() == 'LLRRLL'\n\nassert solution() == 'LLRRLL'\n\nassert solution() == 'LLRRLL'"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"4\\n1 2 4 3\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution() == \"LLRL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n\nInput:\n7\n1 3 5 6 7 4 2\n\nOutput:\n7\nRLRRRR\n'''"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\nfrom collections import deque\nfrom collections import defaultdict\nfrom functools import lru_cache\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = defaultdict(list)\n\nfor i in range(n - 1, -1, -1):\n    b[a[i]].append(i)"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INP) == \"4\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n2 1 5 4 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7\n1 3 5 6 7 4 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\n4\n1 2 4 3\n\"\"\") == \"LLRL\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\""
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"2\""
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 3') == '0'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution() == '2'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == \"1\"\nassert solution('5 3\\n1 2 3 4 5\\n') == \"2\"\nassert solution('5 3\\n1 2 3 4 5\\n') == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2 3 4 5\n\n''') == '1'\nassert solution('''\n5 3\n1 2 2 4 5\n\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n\n''') == '0'\nassert solution('''\n5 3\n1 2 3 3 3\n\n''') == '0'"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 2 3\") == \"5\"\n\n---Time Complexity---\nThe solution runs in constant time O(1).\n\n---Auxiliary Space---\nAuxiliary space required for input: 2.\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"100 10 10\") == \"45\"\nassert solution(\"10 9 8\") == \"3\"\nassert solution(\"10000 10 10000 10\") == \"50000\"\nassert solution(\"10000000 1000000000 10\") == \"10\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 4\") == \"4\", \"Should return the number of blue balls\"\nassert solution(\"8 3 4\") == \"4\", \"Should return the number of blue balls\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4\") == \"4\"\n\n'''\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8 3 4\"\"\") == \"4\"\nassert solution(\"\"\"8 0 0\"\"\") == \"8\"\nassert solution(\"\"\"8 0 1\"\"\") == \"7\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3 4\n    ''') == '4'\nassert solution('''8 3 1\n    ''') == '1'\nassert solution('''8 0 3\n    ''') == '0'\nassert solution('''7 3 2\n    ''') == '1'\nassert solution('''7 1 0\n    ''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"4\", \"example\"\nassert solution(\"8 3 4\") == \"4\", \"even\"\nassert solution(\"1000000 2 3 4\") == \"4\", \"one billion\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('10 0 0') == '0'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    16 8 2 12\n''') == '4'\nassert solution('''\n    3\n    4 2 1\n''') == '-1'\n\nassert solution('''\n    3\n    4 3 6\n''') == '4'\nassert solution('''\n    10\n    1 2 1 2 3 2 4 3 6 4 8 5 7\n''') == '1'\nassert solution('''\n    10\n    3 4 2 4 5 1 1 1 1 2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '-1'\nassert solution('1') == '1'\nassert solution('2') == '48'\nassert solution('1') == '1'"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n12 5 4 4 4 7\n4\n3 6 2 1\n''') == '5'\n'''"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\n8 2 12 6 4 24 16 3\") == \"48\"\nassert solution(\"1\\n2\") == \"-1\"\nassert solution(\"2\\n1\") == \"4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '48'\nassert solution('1') == '4'"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n8\\n2\\n3\") == \"3\\n\"\nassert solution(\"8\\n8 2 12 6 4 24 16 3\") == \"4\\n\"\nassert solution(\"1\\n10\\n2\\n3\") == \"2\\n\"\nassert solution(\"8\\n8 2 12 6 4 24 16 3\\n\") == \"2\\n\"\nassert solution(\"1\\n10\\n2\\n3\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 2 12 6 4 24 16 3') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48', \"8\"\nassert solution('''\n9\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1', \"8\"\nassert solution('''\n12\n4 6 8\n2\n6\n''') == '-1', \"4 6 8\"\n\n\"\"\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2\n2 2\n1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n4 4 4 2\n0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1 1 3 1 2\n0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('5') == '2'\nassert solution('5') == '6'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\n\n'''\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '''\n3\n6 6 1\n'''\n\nassert solution('''\n5\n2 4 2 4 4\n''') == '''\n2\n2 4 \n'''\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '''\n1\n6 \n'''\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 5 5 1 6 1\n''') == '3'\nassert solution('''5\n2 4 2 4 4\n''') == '2'\nassert solution('''5\n6 6 6 6 6\n''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_value_1) == \"3\"\nassert solution(input_value_2) == \"2\"\nassert solution(input_value_3) == \"1\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"6 6 6 6 6\"\nassert solution(\"3\") == \"2 4\"\nassert solution(\"5\") == \"2 4\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nprint(solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n'''))"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n432\n\nOutput\n435\n\n\"\"\") == \"\"\"435\"\"\"\n\nassert solution(\n\"\"\"\n99\n\nOutput\n103\n\n\"\"\") == \"\"\"103\"\"\"\n\nassert solution(\n\"\"\"\n237\n\nOutput\n237\n\n\"\"\") == \"\"\"237\"\"\"\n\nassert solution(\n\"\"\"\n42\n\nOutput\n44\n\n\"\"\") == \"\"\"44\"\"\"\n\n\"\"\"\n\nThe function should return the nearest greater or equal interesting number for the given number $a$. That is, find the interesting number $n$ such that $n \\ge a$ and $n$ is minimal.\n\nHint: This problem is pretty easy if you are familiar with 'binary search'. Try to implement it first.\n\n\"\"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\n\n<!-- Note: This is a basic version of a real-world problem. -->\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution(\"1\\n\")) == \"1\"\nassert solution(solution(\"2\\n\")) == \"3\"\nassert solution(solution(\"4\\n\")) == \"5\"\nassert solution(solution(\"42\\n\")) == \"44\"\n\nassert solution(solution(\"87654\\n\")) == \"87654\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"42\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\nassert solution('237') == '237'"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"aba\"\nassert solution(input()) == \"aab\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"b\"\nassert solution(input()) == \"c\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4 1 0\\n3 2 1 0\\n3 4 2 1\\n1 2 1 3\\n1 2 1 2\\n1 2 2 3') == '1ac2'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac\", \"First test\"\nassert solution(\"abc\") == \"aac\", \"Second test\"\nassert solution(\"aba\") == \"aba\", \"Third test\""
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\", \"First\"\nassert solution('''\naac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\", \"Second\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"a\", \"Third\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"ac\", \"Fourth\"\nassert solution('''\na\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"bc\", \"Fifth\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\", solution(\"abac\")\nassert solution(\"abc\") == \"a\", solution(\"abc\")\nassert solution(\"abba\") == \"aba\", solution(\"abba\")\nassert solution(\"ecoosdcefr\") == \"ecodef\", solution(\"ecoosdcefr\")\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"381324141153243241700\", solution(\"38 13 24 14 11 5 3 24 17 0\")\nprint(solution(input()))\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n5\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"abac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"b\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"c\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aab\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"aaa\"\nassert solution(\"4\") == \"aaaa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ba'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'b'\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == 'a'\nassert solution(example_input_2) == 'zzzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"100\") == \"aaaa\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"b\"\nprint(solution(input()))\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'a'\nassert solution(['5', '7']) == 'zya'\nassert solution('3') == 'zz'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(6) == 12\nassert solution(10) == 13\nassert solution(6) == 11"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nto be or not to be\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n10\na ab a a b ab a a b c\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n6\naa bb aa aa bb bb\n\"\"\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == \"12\"\nassert solution(test_input_2) == \"13\"\nassert solution(test_input_3) == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '12'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"12\"\nassert solution(\"2\\n\") == \"11\"\nassert solution(\"3\\n\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '13'\nassert solution(input()) == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('6') == '11'\nassert solution('10') == '11'\nassert solution('10') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nto be or not to be\\n') == '12'\nassert solution('6\\nAA BAA BA BA BA BA BA BA BA BA BA BA BA BA BA\\n') == '13'\nassert solution('10\\nA AA B AA BB B AA BB BB BB BB BB BB BB\\n') == '11'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6\nto be or not to be\n\"\"\") == \"12\"\nassert solution(\"\"\"10\na ab a a b ab a a b c\n\"\"\") == \"13\"\nassert solution(\"\"\"6\naa bb aa aa bb bb\n\"\"\") == \"11\""
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('6') == '11'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n) == \"3 2 3\"\nassert solution(\n    \"5 1\"\n) == \"1 5\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"4000\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '1'\nassert solution('4 2') == '2'\nassert solution('5 1') == '5'\nassert solution('8 3') == '20'\nassert solution('4 2') == '2 2'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '5'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"8 3\") == \"3 2 3\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n-1') == '0'\nassert solution('5\\n4 -2 3 2') == '1'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('7\\n-1 -1') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"0\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\ncounter = 0\n\nfor i in range(n - 1):\n    if a[i] > 0:\n        break\n    if a[i] + a[i + 1] == 0:\n        counter += 1\n\nprint(counter)\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n-5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\n\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n-5\n3\n2\n''') == '1'\n\nassert solution('''5\n4\n-2\n3\n-9\n2\n''') == '0'\n\nassert solution('''8\n16\n-5\n-11\n-15\n10\n5\n4\n-4\n''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''10\n16 -5 -11 -15 10 5 4 -4\n''') == '7'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '0'\n"
    }
]